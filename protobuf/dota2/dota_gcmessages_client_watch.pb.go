// Code generated by protoc-gen-go. DO NOT EDIT.
// source: dota_gcmessages_client_watch.proto

package dota2 // import "github.com/13k/go-steam-resources/protobuf/dota2"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type CMsgSpectateFriendGameResponse_EWatchLiveResult int32

const (
	CMsgSpectateFriendGameResponse_SUCCESS                        CMsgSpectateFriendGameResponse_EWatchLiveResult = 0
	CMsgSpectateFriendGameResponse_ERROR_GENERIC                  CMsgSpectateFriendGameResponse_EWatchLiveResult = 1
	CMsgSpectateFriendGameResponse_ERROR_NO_PLUS                  CMsgSpectateFriendGameResponse_EWatchLiveResult = 2
	CMsgSpectateFriendGameResponse_ERROR_NOT_FRIENDS              CMsgSpectateFriendGameResponse_EWatchLiveResult = 3
	CMsgSpectateFriendGameResponse_ERROR_LOBBY_NOT_FOUND          CMsgSpectateFriendGameResponse_EWatchLiveResult = 4
	CMsgSpectateFriendGameResponse_ERROR_SPECTATOR_IN_A_LOBBY     CMsgSpectateFriendGameResponse_EWatchLiveResult = 5
	CMsgSpectateFriendGameResponse_ERROR_LOBBY_IS_LAN             CMsgSpectateFriendGameResponse_EWatchLiveResult = 6
	CMsgSpectateFriendGameResponse_ERROR_WRONG_LOBBY_TYPE         CMsgSpectateFriendGameResponse_EWatchLiveResult = 7
	CMsgSpectateFriendGameResponse_ERROR_WRONG_LOBBY_STATE        CMsgSpectateFriendGameResponse_EWatchLiveResult = 8
	CMsgSpectateFriendGameResponse_ERROR_PLAYER_NOT_PLAYER        CMsgSpectateFriendGameResponse_EWatchLiveResult = 9
	CMsgSpectateFriendGameResponse_ERROR_TOO_MANY_SPECTATORS      CMsgSpectateFriendGameResponse_EWatchLiveResult = 10
	CMsgSpectateFriendGameResponse_ERROR_SPECTATOR_SWITCHED_TEAMS CMsgSpectateFriendGameResponse_EWatchLiveResult = 11
	CMsgSpectateFriendGameResponse_ERROR_FRIENDS_ON_BOTH_SIDES    CMsgSpectateFriendGameResponse_EWatchLiveResult = 12
	CMsgSpectateFriendGameResponse_ERROR_SPECTATOR_IN_THIS_LOBBY  CMsgSpectateFriendGameResponse_EWatchLiveResult = 13
)

var CMsgSpectateFriendGameResponse_EWatchLiveResult_name = map[int32]string{
	0:  "SUCCESS",
	1:  "ERROR_GENERIC",
	2:  "ERROR_NO_PLUS",
	3:  "ERROR_NOT_FRIENDS",
	4:  "ERROR_LOBBY_NOT_FOUND",
	5:  "ERROR_SPECTATOR_IN_A_LOBBY",
	6:  "ERROR_LOBBY_IS_LAN",
	7:  "ERROR_WRONG_LOBBY_TYPE",
	8:  "ERROR_WRONG_LOBBY_STATE",
	9:  "ERROR_PLAYER_NOT_PLAYER",
	10: "ERROR_TOO_MANY_SPECTATORS",
	11: "ERROR_SPECTATOR_SWITCHED_TEAMS",
	12: "ERROR_FRIENDS_ON_BOTH_SIDES",
	13: "ERROR_SPECTATOR_IN_THIS_LOBBY",
}
var CMsgSpectateFriendGameResponse_EWatchLiveResult_value = map[string]int32{
	"SUCCESS":                        0,
	"ERROR_GENERIC":                  1,
	"ERROR_NO_PLUS":                  2,
	"ERROR_NOT_FRIENDS":              3,
	"ERROR_LOBBY_NOT_FOUND":          4,
	"ERROR_SPECTATOR_IN_A_LOBBY":     5,
	"ERROR_LOBBY_IS_LAN":             6,
	"ERROR_WRONG_LOBBY_TYPE":         7,
	"ERROR_WRONG_LOBBY_STATE":        8,
	"ERROR_PLAYER_NOT_PLAYER":        9,
	"ERROR_TOO_MANY_SPECTATORS":      10,
	"ERROR_SPECTATOR_SWITCHED_TEAMS": 11,
	"ERROR_FRIENDS_ON_BOTH_SIDES":    12,
	"ERROR_SPECTATOR_IN_THIS_LOBBY":  13,
}

func (x CMsgSpectateFriendGameResponse_EWatchLiveResult) Enum() *CMsgSpectateFriendGameResponse_EWatchLiveResult {
	p := new(CMsgSpectateFriendGameResponse_EWatchLiveResult)
	*p = x
	return p
}
func (x CMsgSpectateFriendGameResponse_EWatchLiveResult) String() string {
	return proto.EnumName(CMsgSpectateFriendGameResponse_EWatchLiveResult_name, int32(x))
}
func (x *CMsgSpectateFriendGameResponse_EWatchLiveResult) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgSpectateFriendGameResponse_EWatchLiveResult_value, data, "CMsgSpectateFriendGameResponse_EWatchLiveResult")
	if err != nil {
		return err
	}
	*x = CMsgSpectateFriendGameResponse_EWatchLiveResult(value)
	return nil
}
func (CMsgSpectateFriendGameResponse_EWatchLiveResult) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_dota_gcmessages_client_watch_abb73ecfef0d0f75, []int{14, 0}
}

type CMsgWatchGameResponse_WatchGameResult int32

const (
	CMsgWatchGameResponse_PENDING                   CMsgWatchGameResponse_WatchGameResult = 0
	CMsgWatchGameResponse_READY                     CMsgWatchGameResponse_WatchGameResult = 1
	CMsgWatchGameResponse_GAMESERVERNOTFOUND        CMsgWatchGameResponse_WatchGameResult = 2
	CMsgWatchGameResponse_UNAVAILABLE               CMsgWatchGameResponse_WatchGameResult = 3
	CMsgWatchGameResponse_CANCELLED                 CMsgWatchGameResponse_WatchGameResult = 4
	CMsgWatchGameResponse_INCOMPATIBLEVERSION       CMsgWatchGameResponse_WatchGameResult = 5
	CMsgWatchGameResponse_MISSINGLEAGUESUBSCRIPTION CMsgWatchGameResponse_WatchGameResult = 6
	CMsgWatchGameResponse_LOBBYNOTFOUND             CMsgWatchGameResponse_WatchGameResult = 7
)

var CMsgWatchGameResponse_WatchGameResult_name = map[int32]string{
	0: "PENDING",
	1: "READY",
	2: "GAMESERVERNOTFOUND",
	3: "UNAVAILABLE",
	4: "CANCELLED",
	5: "INCOMPATIBLEVERSION",
	6: "MISSINGLEAGUESUBSCRIPTION",
	7: "LOBBYNOTFOUND",
}
var CMsgWatchGameResponse_WatchGameResult_value = map[string]int32{
	"PENDING":                   0,
	"READY":                     1,
	"GAMESERVERNOTFOUND":        2,
	"UNAVAILABLE":               3,
	"CANCELLED":                 4,
	"INCOMPATIBLEVERSION":       5,
	"MISSINGLEAGUESUBSCRIPTION": 6,
	"LOBBYNOTFOUND":             7,
}

func (x CMsgWatchGameResponse_WatchGameResult) Enum() *CMsgWatchGameResponse_WatchGameResult {
	p := new(CMsgWatchGameResponse_WatchGameResult)
	*p = x
	return p
}
func (x CMsgWatchGameResponse_WatchGameResult) String() string {
	return proto.EnumName(CMsgWatchGameResponse_WatchGameResult_name, int32(x))
}
func (x *CMsgWatchGameResponse_WatchGameResult) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgWatchGameResponse_WatchGameResult_value, data, "CMsgWatchGameResponse_WatchGameResult")
	if err != nil {
		return err
	}
	*x = CMsgWatchGameResponse_WatchGameResult(value)
	return nil
}
func (CMsgWatchGameResponse_WatchGameResult) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_dota_gcmessages_client_watch_abb73ecfef0d0f75, []int{19, 0}
}

type CSourceTVGameSmall struct {
	ActivateTime               *uint32                      `protobuf:"varint,1,opt,name=activate_time,json=activateTime" json:"activate_time,omitempty"`
	DeactivateTime             *uint32                      `protobuf:"varint,2,opt,name=deactivate_time,json=deactivateTime" json:"deactivate_time,omitempty"`
	ServerSteamId              *uint64                      `protobuf:"varint,3,opt,name=server_steam_id,json=serverSteamId" json:"server_steam_id,omitempty"`
	LobbyId                    *uint64                      `protobuf:"varint,4,opt,name=lobby_id,json=lobbyId" json:"lobby_id,omitempty"`
	LeagueId                   *uint32                      `protobuf:"varint,5,opt,name=league_id,json=leagueId" json:"league_id,omitempty"`
	LobbyType                  *uint32                      `protobuf:"varint,6,opt,name=lobby_type,json=lobbyType" json:"lobby_type,omitempty"`
	GameTime                   *int32                       `protobuf:"varint,7,opt,name=game_time,json=gameTime" json:"game_time,omitempty"`
	Delay                      *uint32                      `protobuf:"varint,8,opt,name=delay" json:"delay,omitempty"`
	Spectators                 *uint32                      `protobuf:"varint,9,opt,name=spectators" json:"spectators,omitempty"`
	GameMode                   *uint32                      `protobuf:"varint,10,opt,name=game_mode,json=gameMode" json:"game_mode,omitempty"`
	AverageMmr                 *uint32                      `protobuf:"varint,11,opt,name=average_mmr,json=averageMmr" json:"average_mmr,omitempty"`
	TeamNameRadiant            *string                      `protobuf:"bytes,15,opt,name=team_name_radiant,json=teamNameRadiant" json:"team_name_radiant,omitempty"`
	TeamNameDire               *string                      `protobuf:"bytes,16,opt,name=team_name_dire,json=teamNameDire" json:"team_name_dire,omitempty"`
	TeamLogoRadiant            *uint64                      `protobuf:"fixed64,24,opt,name=team_logo_radiant,json=teamLogoRadiant" json:"team_logo_radiant,omitempty"`
	TeamLogoDire               *uint64                      `protobuf:"fixed64,25,opt,name=team_logo_dire,json=teamLogoDire" json:"team_logo_dire,omitempty"`
	SortScore                  *uint32                      `protobuf:"varint,17,opt,name=sort_score,json=sortScore" json:"sort_score,omitempty"`
	LastUpdateTime             *float32                     `protobuf:"fixed32,18,opt,name=last_update_time,json=lastUpdateTime" json:"last_update_time,omitempty"`
	RadiantLead                *int32                       `protobuf:"varint,19,opt,name=radiant_lead,json=radiantLead" json:"radiant_lead,omitempty"`
	RadiantScore               *uint32                      `protobuf:"varint,20,opt,name=radiant_score,json=radiantScore" json:"radiant_score,omitempty"`
	DireScore                  *uint32                      `protobuf:"varint,21,opt,name=dire_score,json=direScore" json:"dire_score,omitempty"`
	Players                    []*CSourceTVGameSmall_Player `protobuf:"bytes,22,rep,name=players" json:"players,omitempty"`
	BuildingState              *uint32                      `protobuf:"fixed32,23,opt,name=building_state,json=buildingState" json:"building_state,omitempty"`
	WeekendTourneyTournamentId *uint32                      `protobuf:"varint,26,opt,name=weekend_tourney_tournament_id,json=weekendTourneyTournamentId" json:"weekend_tourney_tournament_id,omitempty"`
	WeekendTourneyDivision     *uint32                      `protobuf:"varint,27,opt,name=weekend_tourney_division,json=weekendTourneyDivision" json:"weekend_tourney_division,omitempty"`
	WeekendTourneySkillLevel   *uint32                      `protobuf:"varint,28,opt,name=weekend_tourney_skill_level,json=weekendTourneySkillLevel" json:"weekend_tourney_skill_level,omitempty"`
	WeekendTourneyBracketRound *uint32                      `protobuf:"varint,29,opt,name=weekend_tourney_bracket_round,json=weekendTourneyBracketRound" json:"weekend_tourney_bracket_round,omitempty"`
	XXX_NoUnkeyedLiteral       struct{}                     `json:"-"`
	XXX_unrecognized           []byte                       `json:"-"`
	XXX_sizecache              int32                        `json:"-"`
}

func (m *CSourceTVGameSmall) Reset()         { *m = CSourceTVGameSmall{} }
func (m *CSourceTVGameSmall) String() string { return proto.CompactTextString(m) }
func (*CSourceTVGameSmall) ProtoMessage()    {}
func (*CSourceTVGameSmall) Descriptor() ([]byte, []int) {
	return fileDescriptor_dota_gcmessages_client_watch_abb73ecfef0d0f75, []int{0}
}
func (m *CSourceTVGameSmall) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CSourceTVGameSmall.Unmarshal(m, b)
}
func (m *CSourceTVGameSmall) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CSourceTVGameSmall.Marshal(b, m, deterministic)
}
func (dst *CSourceTVGameSmall) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CSourceTVGameSmall.Merge(dst, src)
}
func (m *CSourceTVGameSmall) XXX_Size() int {
	return xxx_messageInfo_CSourceTVGameSmall.Size(m)
}
func (m *CSourceTVGameSmall) XXX_DiscardUnknown() {
	xxx_messageInfo_CSourceTVGameSmall.DiscardUnknown(m)
}

var xxx_messageInfo_CSourceTVGameSmall proto.InternalMessageInfo

func (m *CSourceTVGameSmall) GetActivateTime() uint32 {
	if m != nil && m.ActivateTime != nil {
		return *m.ActivateTime
	}
	return 0
}

func (m *CSourceTVGameSmall) GetDeactivateTime() uint32 {
	if m != nil && m.DeactivateTime != nil {
		return *m.DeactivateTime
	}
	return 0
}

func (m *CSourceTVGameSmall) GetServerSteamId() uint64 {
	if m != nil && m.ServerSteamId != nil {
		return *m.ServerSteamId
	}
	return 0
}

func (m *CSourceTVGameSmall) GetLobbyId() uint64 {
	if m != nil && m.LobbyId != nil {
		return *m.LobbyId
	}
	return 0
}

func (m *CSourceTVGameSmall) GetLeagueId() uint32 {
	if m != nil && m.LeagueId != nil {
		return *m.LeagueId
	}
	return 0
}

func (m *CSourceTVGameSmall) GetLobbyType() uint32 {
	if m != nil && m.LobbyType != nil {
		return *m.LobbyType
	}
	return 0
}

func (m *CSourceTVGameSmall) GetGameTime() int32 {
	if m != nil && m.GameTime != nil {
		return *m.GameTime
	}
	return 0
}

func (m *CSourceTVGameSmall) GetDelay() uint32 {
	if m != nil && m.Delay != nil {
		return *m.Delay
	}
	return 0
}

func (m *CSourceTVGameSmall) GetSpectators() uint32 {
	if m != nil && m.Spectators != nil {
		return *m.Spectators
	}
	return 0
}

func (m *CSourceTVGameSmall) GetGameMode() uint32 {
	if m != nil && m.GameMode != nil {
		return *m.GameMode
	}
	return 0
}

func (m *CSourceTVGameSmall) GetAverageMmr() uint32 {
	if m != nil && m.AverageMmr != nil {
		return *m.AverageMmr
	}
	return 0
}

func (m *CSourceTVGameSmall) GetTeamNameRadiant() string {
	if m != nil && m.TeamNameRadiant != nil {
		return *m.TeamNameRadiant
	}
	return ""
}

func (m *CSourceTVGameSmall) GetTeamNameDire() string {
	if m != nil && m.TeamNameDire != nil {
		return *m.TeamNameDire
	}
	return ""
}

func (m *CSourceTVGameSmall) GetTeamLogoRadiant() uint64 {
	if m != nil && m.TeamLogoRadiant != nil {
		return *m.TeamLogoRadiant
	}
	return 0
}

func (m *CSourceTVGameSmall) GetTeamLogoDire() uint64 {
	if m != nil && m.TeamLogoDire != nil {
		return *m.TeamLogoDire
	}
	return 0
}

func (m *CSourceTVGameSmall) GetSortScore() uint32 {
	if m != nil && m.SortScore != nil {
		return *m.SortScore
	}
	return 0
}

func (m *CSourceTVGameSmall) GetLastUpdateTime() float32 {
	if m != nil && m.LastUpdateTime != nil {
		return *m.LastUpdateTime
	}
	return 0
}

func (m *CSourceTVGameSmall) GetRadiantLead() int32 {
	if m != nil && m.RadiantLead != nil {
		return *m.RadiantLead
	}
	return 0
}

func (m *CSourceTVGameSmall) GetRadiantScore() uint32 {
	if m != nil && m.RadiantScore != nil {
		return *m.RadiantScore
	}
	return 0
}

func (m *CSourceTVGameSmall) GetDireScore() uint32 {
	if m != nil && m.DireScore != nil {
		return *m.DireScore
	}
	return 0
}

func (m *CSourceTVGameSmall) GetPlayers() []*CSourceTVGameSmall_Player {
	if m != nil {
		return m.Players
	}
	return nil
}

func (m *CSourceTVGameSmall) GetBuildingState() uint32 {
	if m != nil && m.BuildingState != nil {
		return *m.BuildingState
	}
	return 0
}

func (m *CSourceTVGameSmall) GetWeekendTourneyTournamentId() uint32 {
	if m != nil && m.WeekendTourneyTournamentId != nil {
		return *m.WeekendTourneyTournamentId
	}
	return 0
}

func (m *CSourceTVGameSmall) GetWeekendTourneyDivision() uint32 {
	if m != nil && m.WeekendTourneyDivision != nil {
		return *m.WeekendTourneyDivision
	}
	return 0
}

func (m *CSourceTVGameSmall) GetWeekendTourneySkillLevel() uint32 {
	if m != nil && m.WeekendTourneySkillLevel != nil {
		return *m.WeekendTourneySkillLevel
	}
	return 0
}

func (m *CSourceTVGameSmall) GetWeekendTourneyBracketRound() uint32 {
	if m != nil && m.WeekendTourneyBracketRound != nil {
		return *m.WeekendTourneyBracketRound
	}
	return 0
}

type CSourceTVGameSmall_Player struct {
	AccountId            *uint32  `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	HeroId               *uint32  `protobuf:"varint,2,opt,name=hero_id,json=heroId" json:"hero_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CSourceTVGameSmall_Player) Reset()         { *m = CSourceTVGameSmall_Player{} }
func (m *CSourceTVGameSmall_Player) String() string { return proto.CompactTextString(m) }
func (*CSourceTVGameSmall_Player) ProtoMessage()    {}
func (*CSourceTVGameSmall_Player) Descriptor() ([]byte, []int) {
	return fileDescriptor_dota_gcmessages_client_watch_abb73ecfef0d0f75, []int{0, 0}
}
func (m *CSourceTVGameSmall_Player) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CSourceTVGameSmall_Player.Unmarshal(m, b)
}
func (m *CSourceTVGameSmall_Player) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CSourceTVGameSmall_Player.Marshal(b, m, deterministic)
}
func (dst *CSourceTVGameSmall_Player) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CSourceTVGameSmall_Player.Merge(dst, src)
}
func (m *CSourceTVGameSmall_Player) XXX_Size() int {
	return xxx_messageInfo_CSourceTVGameSmall_Player.Size(m)
}
func (m *CSourceTVGameSmall_Player) XXX_DiscardUnknown() {
	xxx_messageInfo_CSourceTVGameSmall_Player.DiscardUnknown(m)
}

var xxx_messageInfo_CSourceTVGameSmall_Player proto.InternalMessageInfo

func (m *CSourceTVGameSmall_Player) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *CSourceTVGameSmall_Player) GetHeroId() uint32 {
	if m != nil && m.HeroId != nil {
		return *m.HeroId
	}
	return 0
}

type CMsgClientToGCFindTopSourceTVGames struct {
	SearchKey            *string  `protobuf:"bytes,1,opt,name=search_key,json=searchKey" json:"search_key,omitempty"`
	LeagueId             *uint32  `protobuf:"varint,2,opt,name=league_id,json=leagueId" json:"league_id,omitempty"`
	HeroId               *uint32  `protobuf:"varint,3,opt,name=hero_id,json=heroId" json:"hero_id,omitempty"`
	StartGame            *uint32  `protobuf:"varint,4,opt,name=start_game,json=startGame" json:"start_game,omitempty"`
	GameListIndex        *uint32  `protobuf:"varint,5,opt,name=game_list_index,json=gameListIndex" json:"game_list_index,omitempty"`
	LobbyIds             []uint64 `protobuf:"varint,6,rep,name=lobby_ids,json=lobbyIds" json:"lobby_ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgClientToGCFindTopSourceTVGames) Reset()         { *m = CMsgClientToGCFindTopSourceTVGames{} }
func (m *CMsgClientToGCFindTopSourceTVGames) String() string { return proto.CompactTextString(m) }
func (*CMsgClientToGCFindTopSourceTVGames) ProtoMessage()    {}
func (*CMsgClientToGCFindTopSourceTVGames) Descriptor() ([]byte, []int) {
	return fileDescriptor_dota_gcmessages_client_watch_abb73ecfef0d0f75, []int{1}
}
func (m *CMsgClientToGCFindTopSourceTVGames) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgClientToGCFindTopSourceTVGames.Unmarshal(m, b)
}
func (m *CMsgClientToGCFindTopSourceTVGames) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgClientToGCFindTopSourceTVGames.Marshal(b, m, deterministic)
}
func (dst *CMsgClientToGCFindTopSourceTVGames) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgClientToGCFindTopSourceTVGames.Merge(dst, src)
}
func (m *CMsgClientToGCFindTopSourceTVGames) XXX_Size() int {
	return xxx_messageInfo_CMsgClientToGCFindTopSourceTVGames.Size(m)
}
func (m *CMsgClientToGCFindTopSourceTVGames) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgClientToGCFindTopSourceTVGames.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgClientToGCFindTopSourceTVGames proto.InternalMessageInfo

func (m *CMsgClientToGCFindTopSourceTVGames) GetSearchKey() string {
	if m != nil && m.SearchKey != nil {
		return *m.SearchKey
	}
	return ""
}

func (m *CMsgClientToGCFindTopSourceTVGames) GetLeagueId() uint32 {
	if m != nil && m.LeagueId != nil {
		return *m.LeagueId
	}
	return 0
}

func (m *CMsgClientToGCFindTopSourceTVGames) GetHeroId() uint32 {
	if m != nil && m.HeroId != nil {
		return *m.HeroId
	}
	return 0
}

func (m *CMsgClientToGCFindTopSourceTVGames) GetStartGame() uint32 {
	if m != nil && m.StartGame != nil {
		return *m.StartGame
	}
	return 0
}

func (m *CMsgClientToGCFindTopSourceTVGames) GetGameListIndex() uint32 {
	if m != nil && m.GameListIndex != nil {
		return *m.GameListIndex
	}
	return 0
}

func (m *CMsgClientToGCFindTopSourceTVGames) GetLobbyIds() []uint64 {
	if m != nil {
		return m.LobbyIds
	}
	return nil
}

type CMsgGCToClientFindTopSourceTVGamesResponse struct {
	SearchKey            *string               `protobuf:"bytes,1,opt,name=search_key,json=searchKey" json:"search_key,omitempty"`
	LeagueId             *uint32               `protobuf:"varint,2,opt,name=league_id,json=leagueId" json:"league_id,omitempty"`
	HeroId               *uint32               `protobuf:"varint,3,opt,name=hero_id,json=heroId" json:"hero_id,omitempty"`
	StartGame            *uint32               `protobuf:"varint,4,opt,name=start_game,json=startGame" json:"start_game,omitempty"`
	NumGames             *uint32               `protobuf:"varint,5,opt,name=num_games,json=numGames" json:"num_games,omitempty"`
	GameListIndex        *uint32               `protobuf:"varint,6,opt,name=game_list_index,json=gameListIndex" json:"game_list_index,omitempty"`
	GameList             []*CSourceTVGameSmall `protobuf:"bytes,7,rep,name=game_list,json=gameList" json:"game_list,omitempty"`
	SpecificGames        *bool                 `protobuf:"varint,8,opt,name=specific_games,json=specificGames" json:"specific_games,omitempty"`
	BotGame              *CSourceTVGameSmall   `protobuf:"bytes,9,opt,name=bot_game,json=botGame" json:"bot_game,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *CMsgGCToClientFindTopSourceTVGamesResponse) Reset() {
	*m = CMsgGCToClientFindTopSourceTVGamesResponse{}
}
func (m *CMsgGCToClientFindTopSourceTVGamesResponse) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgGCToClientFindTopSourceTVGamesResponse) ProtoMessage() {}
func (*CMsgGCToClientFindTopSourceTVGamesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_dota_gcmessages_client_watch_abb73ecfef0d0f75, []int{2}
}
func (m *CMsgGCToClientFindTopSourceTVGamesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgGCToClientFindTopSourceTVGamesResponse.Unmarshal(m, b)
}
func (m *CMsgGCToClientFindTopSourceTVGamesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgGCToClientFindTopSourceTVGamesResponse.Marshal(b, m, deterministic)
}
func (dst *CMsgGCToClientFindTopSourceTVGamesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgGCToClientFindTopSourceTVGamesResponse.Merge(dst, src)
}
func (m *CMsgGCToClientFindTopSourceTVGamesResponse) XXX_Size() int {
	return xxx_messageInfo_CMsgGCToClientFindTopSourceTVGamesResponse.Size(m)
}
func (m *CMsgGCToClientFindTopSourceTVGamesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgGCToClientFindTopSourceTVGamesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgGCToClientFindTopSourceTVGamesResponse proto.InternalMessageInfo

func (m *CMsgGCToClientFindTopSourceTVGamesResponse) GetSearchKey() string {
	if m != nil && m.SearchKey != nil {
		return *m.SearchKey
	}
	return ""
}

func (m *CMsgGCToClientFindTopSourceTVGamesResponse) GetLeagueId() uint32 {
	if m != nil && m.LeagueId != nil {
		return *m.LeagueId
	}
	return 0
}

func (m *CMsgGCToClientFindTopSourceTVGamesResponse) GetHeroId() uint32 {
	if m != nil && m.HeroId != nil {
		return *m.HeroId
	}
	return 0
}

func (m *CMsgGCToClientFindTopSourceTVGamesResponse) GetStartGame() uint32 {
	if m != nil && m.StartGame != nil {
		return *m.StartGame
	}
	return 0
}

func (m *CMsgGCToClientFindTopSourceTVGamesResponse) GetNumGames() uint32 {
	if m != nil && m.NumGames != nil {
		return *m.NumGames
	}
	return 0
}

func (m *CMsgGCToClientFindTopSourceTVGamesResponse) GetGameListIndex() uint32 {
	if m != nil && m.GameListIndex != nil {
		return *m.GameListIndex
	}
	return 0
}

func (m *CMsgGCToClientFindTopSourceTVGamesResponse) GetGameList() []*CSourceTVGameSmall {
	if m != nil {
		return m.GameList
	}
	return nil
}

func (m *CMsgGCToClientFindTopSourceTVGamesResponse) GetSpecificGames() bool {
	if m != nil && m.SpecificGames != nil {
		return *m.SpecificGames
	}
	return false
}

func (m *CMsgGCToClientFindTopSourceTVGamesResponse) GetBotGame() *CSourceTVGameSmall {
	if m != nil {
		return m.BotGame
	}
	return nil
}

type CMsgGCToClientTopWeekendTourneyGames struct {
	LiveGames            []*CSourceTVGameSmall `protobuf:"bytes,1,rep,name=live_games,json=liveGames" json:"live_games,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *CMsgGCToClientTopWeekendTourneyGames) Reset()         { *m = CMsgGCToClientTopWeekendTourneyGames{} }
func (m *CMsgGCToClientTopWeekendTourneyGames) String() string { return proto.CompactTextString(m) }
func (*CMsgGCToClientTopWeekendTourneyGames) ProtoMessage()    {}
func (*CMsgGCToClientTopWeekendTourneyGames) Descriptor() ([]byte, []int) {
	return fileDescriptor_dota_gcmessages_client_watch_abb73ecfef0d0f75, []int{3}
}
func (m *CMsgGCToClientTopWeekendTourneyGames) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgGCToClientTopWeekendTourneyGames.Unmarshal(m, b)
}
func (m *CMsgGCToClientTopWeekendTourneyGames) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgGCToClientTopWeekendTourneyGames.Marshal(b, m, deterministic)
}
func (dst *CMsgGCToClientTopWeekendTourneyGames) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgGCToClientTopWeekendTourneyGames.Merge(dst, src)
}
func (m *CMsgGCToClientTopWeekendTourneyGames) XXX_Size() int {
	return xxx_messageInfo_CMsgGCToClientTopWeekendTourneyGames.Size(m)
}
func (m *CMsgGCToClientTopWeekendTourneyGames) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgGCToClientTopWeekendTourneyGames.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgGCToClientTopWeekendTourneyGames proto.InternalMessageInfo

func (m *CMsgGCToClientTopWeekendTourneyGames) GetLiveGames() []*CSourceTVGameSmall {
	if m != nil {
		return m.LiveGames
	}
	return nil
}

type CMsgClientToGCTopMatchesRequest struct {
	HeroId               *uint32  `protobuf:"varint,1,opt,name=hero_id,json=heroId" json:"hero_id,omitempty"`
	PlayerAccountId      *uint32  `protobuf:"varint,2,opt,name=player_account_id,json=playerAccountId" json:"player_account_id,omitempty"`
	TeamId               *uint32  `protobuf:"varint,3,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgClientToGCTopMatchesRequest) Reset()         { *m = CMsgClientToGCTopMatchesRequest{} }
func (m *CMsgClientToGCTopMatchesRequest) String() string { return proto.CompactTextString(m) }
func (*CMsgClientToGCTopMatchesRequest) ProtoMessage()    {}
func (*CMsgClientToGCTopMatchesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_dota_gcmessages_client_watch_abb73ecfef0d0f75, []int{4}
}
func (m *CMsgClientToGCTopMatchesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgClientToGCTopMatchesRequest.Unmarshal(m, b)
}
func (m *CMsgClientToGCTopMatchesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgClientToGCTopMatchesRequest.Marshal(b, m, deterministic)
}
func (dst *CMsgClientToGCTopMatchesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgClientToGCTopMatchesRequest.Merge(dst, src)
}
func (m *CMsgClientToGCTopMatchesRequest) XXX_Size() int {
	return xxx_messageInfo_CMsgClientToGCTopMatchesRequest.Size(m)
}
func (m *CMsgClientToGCTopMatchesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgClientToGCTopMatchesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgClientToGCTopMatchesRequest proto.InternalMessageInfo

func (m *CMsgClientToGCTopMatchesRequest) GetHeroId() uint32 {
	if m != nil && m.HeroId != nil {
		return *m.HeroId
	}
	return 0
}

func (m *CMsgClientToGCTopMatchesRequest) GetPlayerAccountId() uint32 {
	if m != nil && m.PlayerAccountId != nil {
		return *m.PlayerAccountId
	}
	return 0
}

func (m *CMsgClientToGCTopMatchesRequest) GetTeamId() uint32 {
	if m != nil && m.TeamId != nil {
		return *m.TeamId
	}
	return 0
}

type CMsgClientToGCTopLeagueMatchesRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgClientToGCTopLeagueMatchesRequest) Reset()         { *m = CMsgClientToGCTopLeagueMatchesRequest{} }
func (m *CMsgClientToGCTopLeagueMatchesRequest) String() string { return proto.CompactTextString(m) }
func (*CMsgClientToGCTopLeagueMatchesRequest) ProtoMessage()    {}
func (*CMsgClientToGCTopLeagueMatchesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_dota_gcmessages_client_watch_abb73ecfef0d0f75, []int{5}
}
func (m *CMsgClientToGCTopLeagueMatchesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgClientToGCTopLeagueMatchesRequest.Unmarshal(m, b)
}
func (m *CMsgClientToGCTopLeagueMatchesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgClientToGCTopLeagueMatchesRequest.Marshal(b, m, deterministic)
}
func (dst *CMsgClientToGCTopLeagueMatchesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgClientToGCTopLeagueMatchesRequest.Merge(dst, src)
}
func (m *CMsgClientToGCTopLeagueMatchesRequest) XXX_Size() int {
	return xxx_messageInfo_CMsgClientToGCTopLeagueMatchesRequest.Size(m)
}
func (m *CMsgClientToGCTopLeagueMatchesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgClientToGCTopLeagueMatchesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgClientToGCTopLeagueMatchesRequest proto.InternalMessageInfo

type CMsgClientToGCTopFriendMatchesRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgClientToGCTopFriendMatchesRequest) Reset()         { *m = CMsgClientToGCTopFriendMatchesRequest{} }
func (m *CMsgClientToGCTopFriendMatchesRequest) String() string { return proto.CompactTextString(m) }
func (*CMsgClientToGCTopFriendMatchesRequest) ProtoMessage()    {}
func (*CMsgClientToGCTopFriendMatchesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_dota_gcmessages_client_watch_abb73ecfef0d0f75, []int{6}
}
func (m *CMsgClientToGCTopFriendMatchesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgClientToGCTopFriendMatchesRequest.Unmarshal(m, b)
}
func (m *CMsgClientToGCTopFriendMatchesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgClientToGCTopFriendMatchesRequest.Marshal(b, m, deterministic)
}
func (dst *CMsgClientToGCTopFriendMatchesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgClientToGCTopFriendMatchesRequest.Merge(dst, src)
}
func (m *CMsgClientToGCTopFriendMatchesRequest) XXX_Size() int {
	return xxx_messageInfo_CMsgClientToGCTopFriendMatchesRequest.Size(m)
}
func (m *CMsgClientToGCTopFriendMatchesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgClientToGCTopFriendMatchesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgClientToGCTopFriendMatchesRequest proto.InternalMessageInfo

type CMsgClientToGCMatchesMinimalRequest struct {
	MatchIds             []uint64 `protobuf:"varint,1,rep,name=match_ids,json=matchIds" json:"match_ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgClientToGCMatchesMinimalRequest) Reset()         { *m = CMsgClientToGCMatchesMinimalRequest{} }
func (m *CMsgClientToGCMatchesMinimalRequest) String() string { return proto.CompactTextString(m) }
func (*CMsgClientToGCMatchesMinimalRequest) ProtoMessage()    {}
func (*CMsgClientToGCMatchesMinimalRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_dota_gcmessages_client_watch_abb73ecfef0d0f75, []int{7}
}
func (m *CMsgClientToGCMatchesMinimalRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgClientToGCMatchesMinimalRequest.Unmarshal(m, b)
}
func (m *CMsgClientToGCMatchesMinimalRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgClientToGCMatchesMinimalRequest.Marshal(b, m, deterministic)
}
func (dst *CMsgClientToGCMatchesMinimalRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgClientToGCMatchesMinimalRequest.Merge(dst, src)
}
func (m *CMsgClientToGCMatchesMinimalRequest) XXX_Size() int {
	return xxx_messageInfo_CMsgClientToGCMatchesMinimalRequest.Size(m)
}
func (m *CMsgClientToGCMatchesMinimalRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgClientToGCMatchesMinimalRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgClientToGCMatchesMinimalRequest proto.InternalMessageInfo

func (m *CMsgClientToGCMatchesMinimalRequest) GetMatchIds() []uint64 {
	if m != nil {
		return m.MatchIds
	}
	return nil
}

type CMsgClientToGCMatchesMinimalResponse struct {
	Matches              []*CMsgDOTAMatchMinimal `protobuf:"bytes,1,rep,name=matches" json:"matches,omitempty"`
	LastMatch            *bool                   `protobuf:"varint,2,opt,name=last_match,json=lastMatch" json:"last_match,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *CMsgClientToGCMatchesMinimalResponse) Reset()         { *m = CMsgClientToGCMatchesMinimalResponse{} }
func (m *CMsgClientToGCMatchesMinimalResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgClientToGCMatchesMinimalResponse) ProtoMessage()    {}
func (*CMsgClientToGCMatchesMinimalResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_dota_gcmessages_client_watch_abb73ecfef0d0f75, []int{8}
}
func (m *CMsgClientToGCMatchesMinimalResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgClientToGCMatchesMinimalResponse.Unmarshal(m, b)
}
func (m *CMsgClientToGCMatchesMinimalResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgClientToGCMatchesMinimalResponse.Marshal(b, m, deterministic)
}
func (dst *CMsgClientToGCMatchesMinimalResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgClientToGCMatchesMinimalResponse.Merge(dst, src)
}
func (m *CMsgClientToGCMatchesMinimalResponse) XXX_Size() int {
	return xxx_messageInfo_CMsgClientToGCMatchesMinimalResponse.Size(m)
}
func (m *CMsgClientToGCMatchesMinimalResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgClientToGCMatchesMinimalResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgClientToGCMatchesMinimalResponse proto.InternalMessageInfo

func (m *CMsgClientToGCMatchesMinimalResponse) GetMatches() []*CMsgDOTAMatchMinimal {
	if m != nil {
		return m.Matches
	}
	return nil
}

func (m *CMsgClientToGCMatchesMinimalResponse) GetLastMatch() bool {
	if m != nil && m.LastMatch != nil {
		return *m.LastMatch
	}
	return false
}

type CMsgGCToClientTopLeagueMatchesResponse struct {
	Matches              []*CMsgDOTAMatchMinimal `protobuf:"bytes,2,rep,name=matches" json:"matches,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *CMsgGCToClientTopLeagueMatchesResponse) Reset() {
	*m = CMsgGCToClientTopLeagueMatchesResponse{}
}
func (m *CMsgGCToClientTopLeagueMatchesResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgGCToClientTopLeagueMatchesResponse) ProtoMessage()    {}
func (*CMsgGCToClientTopLeagueMatchesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_dota_gcmessages_client_watch_abb73ecfef0d0f75, []int{9}
}
func (m *CMsgGCToClientTopLeagueMatchesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgGCToClientTopLeagueMatchesResponse.Unmarshal(m, b)
}
func (m *CMsgGCToClientTopLeagueMatchesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgGCToClientTopLeagueMatchesResponse.Marshal(b, m, deterministic)
}
func (dst *CMsgGCToClientTopLeagueMatchesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgGCToClientTopLeagueMatchesResponse.Merge(dst, src)
}
func (m *CMsgGCToClientTopLeagueMatchesResponse) XXX_Size() int {
	return xxx_messageInfo_CMsgGCToClientTopLeagueMatchesResponse.Size(m)
}
func (m *CMsgGCToClientTopLeagueMatchesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgGCToClientTopLeagueMatchesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgGCToClientTopLeagueMatchesResponse proto.InternalMessageInfo

func (m *CMsgGCToClientTopLeagueMatchesResponse) GetMatches() []*CMsgDOTAMatchMinimal {
	if m != nil {
		return m.Matches
	}
	return nil
}

type CMsgGCToClientTopFriendMatchesResponse struct {
	Matches              []*CMsgDOTAMatchMinimal `protobuf:"bytes,1,rep,name=matches" json:"matches,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *CMsgGCToClientTopFriendMatchesResponse) Reset() {
	*m = CMsgGCToClientTopFriendMatchesResponse{}
}
func (m *CMsgGCToClientTopFriendMatchesResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgGCToClientTopFriendMatchesResponse) ProtoMessage()    {}
func (*CMsgGCToClientTopFriendMatchesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_dota_gcmessages_client_watch_abb73ecfef0d0f75, []int{10}
}
func (m *CMsgGCToClientTopFriendMatchesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgGCToClientTopFriendMatchesResponse.Unmarshal(m, b)
}
func (m *CMsgGCToClientTopFriendMatchesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgGCToClientTopFriendMatchesResponse.Marshal(b, m, deterministic)
}
func (dst *CMsgGCToClientTopFriendMatchesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgGCToClientTopFriendMatchesResponse.Merge(dst, src)
}
func (m *CMsgGCToClientTopFriendMatchesResponse) XXX_Size() int {
	return xxx_messageInfo_CMsgGCToClientTopFriendMatchesResponse.Size(m)
}
func (m *CMsgGCToClientTopFriendMatchesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgGCToClientTopFriendMatchesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgGCToClientTopFriendMatchesResponse proto.InternalMessageInfo

func (m *CMsgGCToClientTopFriendMatchesResponse) GetMatches() []*CMsgDOTAMatchMinimal {
	if m != nil {
		return m.Matches
	}
	return nil
}

type CMsgClientToGCFindTopMatches struct {
	StartGame            *uint32  `protobuf:"varint,1,opt,name=start_game,json=startGame" json:"start_game,omitempty"`
	LeagueId             *uint32  `protobuf:"varint,2,opt,name=league_id,json=leagueId" json:"league_id,omitempty"`
	HeroId               *uint32  `protobuf:"varint,3,opt,name=hero_id,json=heroId" json:"hero_id,omitempty"`
	FriendId             *uint32  `protobuf:"varint,4,opt,name=friend_id,json=friendId" json:"friend_id,omitempty"`
	FriendList           *bool    `protobuf:"varint,5,opt,name=friend_list,json=friendList" json:"friend_list,omitempty"`
	LeagueList           *bool    `protobuf:"varint,6,opt,name=league_list,json=leagueList" json:"league_list,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgClientToGCFindTopMatches) Reset()         { *m = CMsgClientToGCFindTopMatches{} }
func (m *CMsgClientToGCFindTopMatches) String() string { return proto.CompactTextString(m) }
func (*CMsgClientToGCFindTopMatches) ProtoMessage()    {}
func (*CMsgClientToGCFindTopMatches) Descriptor() ([]byte, []int) {
	return fileDescriptor_dota_gcmessages_client_watch_abb73ecfef0d0f75, []int{11}
}
func (m *CMsgClientToGCFindTopMatches) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgClientToGCFindTopMatches.Unmarshal(m, b)
}
func (m *CMsgClientToGCFindTopMatches) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgClientToGCFindTopMatches.Marshal(b, m, deterministic)
}
func (dst *CMsgClientToGCFindTopMatches) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgClientToGCFindTopMatches.Merge(dst, src)
}
func (m *CMsgClientToGCFindTopMatches) XXX_Size() int {
	return xxx_messageInfo_CMsgClientToGCFindTopMatches.Size(m)
}
func (m *CMsgClientToGCFindTopMatches) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgClientToGCFindTopMatches.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgClientToGCFindTopMatches proto.InternalMessageInfo

func (m *CMsgClientToGCFindTopMatches) GetStartGame() uint32 {
	if m != nil && m.StartGame != nil {
		return *m.StartGame
	}
	return 0
}

func (m *CMsgClientToGCFindTopMatches) GetLeagueId() uint32 {
	if m != nil && m.LeagueId != nil {
		return *m.LeagueId
	}
	return 0
}

func (m *CMsgClientToGCFindTopMatches) GetHeroId() uint32 {
	if m != nil && m.HeroId != nil {
		return *m.HeroId
	}
	return 0
}

func (m *CMsgClientToGCFindTopMatches) GetFriendId() uint32 {
	if m != nil && m.FriendId != nil {
		return *m.FriendId
	}
	return 0
}

func (m *CMsgClientToGCFindTopMatches) GetFriendList() bool {
	if m != nil && m.FriendList != nil {
		return *m.FriendList
	}
	return false
}

func (m *CMsgClientToGCFindTopMatches) GetLeagueList() bool {
	if m != nil && m.LeagueList != nil {
		return *m.LeagueList
	}
	return false
}

type CMsgGCToClientFindTopLeagueMatchesResponse struct {
	StartGame            *uint32          `protobuf:"varint,1,opt,name=start_game,json=startGame" json:"start_game,omitempty"`
	LeagueId             *uint32          `protobuf:"varint,2,opt,name=league_id,json=leagueId" json:"league_id,omitempty"`
	HeroId               *uint32          `protobuf:"varint,3,opt,name=hero_id,json=heroId" json:"hero_id,omitempty"`
	MatchIds             []uint32         `protobuf:"varint,4,rep,name=match_ids,json=matchIds" json:"match_ids,omitempty"`
	Matches              []*CMsgDOTAMatch `protobuf:"bytes,5,rep,name=matches" json:"matches,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *CMsgGCToClientFindTopLeagueMatchesResponse) Reset() {
	*m = CMsgGCToClientFindTopLeagueMatchesResponse{}
}
func (m *CMsgGCToClientFindTopLeagueMatchesResponse) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgGCToClientFindTopLeagueMatchesResponse) ProtoMessage() {}
func (*CMsgGCToClientFindTopLeagueMatchesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_dota_gcmessages_client_watch_abb73ecfef0d0f75, []int{12}
}
func (m *CMsgGCToClientFindTopLeagueMatchesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgGCToClientFindTopLeagueMatchesResponse.Unmarshal(m, b)
}
func (m *CMsgGCToClientFindTopLeagueMatchesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgGCToClientFindTopLeagueMatchesResponse.Marshal(b, m, deterministic)
}
func (dst *CMsgGCToClientFindTopLeagueMatchesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgGCToClientFindTopLeagueMatchesResponse.Merge(dst, src)
}
func (m *CMsgGCToClientFindTopLeagueMatchesResponse) XXX_Size() int {
	return xxx_messageInfo_CMsgGCToClientFindTopLeagueMatchesResponse.Size(m)
}
func (m *CMsgGCToClientFindTopLeagueMatchesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgGCToClientFindTopLeagueMatchesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgGCToClientFindTopLeagueMatchesResponse proto.InternalMessageInfo

func (m *CMsgGCToClientFindTopLeagueMatchesResponse) GetStartGame() uint32 {
	if m != nil && m.StartGame != nil {
		return *m.StartGame
	}
	return 0
}

func (m *CMsgGCToClientFindTopLeagueMatchesResponse) GetLeagueId() uint32 {
	if m != nil && m.LeagueId != nil {
		return *m.LeagueId
	}
	return 0
}

func (m *CMsgGCToClientFindTopLeagueMatchesResponse) GetHeroId() uint32 {
	if m != nil && m.HeroId != nil {
		return *m.HeroId
	}
	return 0
}

func (m *CMsgGCToClientFindTopLeagueMatchesResponse) GetMatchIds() []uint32 {
	if m != nil {
		return m.MatchIds
	}
	return nil
}

func (m *CMsgGCToClientFindTopLeagueMatchesResponse) GetMatches() []*CMsgDOTAMatch {
	if m != nil {
		return m.Matches
	}
	return nil
}

type CMsgSpectateFriendGame struct {
	SteamId              *uint64  `protobuf:"fixed64,1,opt,name=steam_id,json=steamId" json:"steam_id,omitempty"`
	Live                 *bool    `protobuf:"varint,2,opt,name=live" json:"live,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgSpectateFriendGame) Reset()         { *m = CMsgSpectateFriendGame{} }
func (m *CMsgSpectateFriendGame) String() string { return proto.CompactTextString(m) }
func (*CMsgSpectateFriendGame) ProtoMessage()    {}
func (*CMsgSpectateFriendGame) Descriptor() ([]byte, []int) {
	return fileDescriptor_dota_gcmessages_client_watch_abb73ecfef0d0f75, []int{13}
}
func (m *CMsgSpectateFriendGame) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgSpectateFriendGame.Unmarshal(m, b)
}
func (m *CMsgSpectateFriendGame) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgSpectateFriendGame.Marshal(b, m, deterministic)
}
func (dst *CMsgSpectateFriendGame) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgSpectateFriendGame.Merge(dst, src)
}
func (m *CMsgSpectateFriendGame) XXX_Size() int {
	return xxx_messageInfo_CMsgSpectateFriendGame.Size(m)
}
func (m *CMsgSpectateFriendGame) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgSpectateFriendGame.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgSpectateFriendGame proto.InternalMessageInfo

func (m *CMsgSpectateFriendGame) GetSteamId() uint64 {
	if m != nil && m.SteamId != nil {
		return *m.SteamId
	}
	return 0
}

func (m *CMsgSpectateFriendGame) GetLive() bool {
	if m != nil && m.Live != nil {
		return *m.Live
	}
	return false
}

type CMsgSpectateFriendGameResponse struct {
	ServerSteamid        *uint64                                          `protobuf:"fixed64,4,opt,name=server_steamid,json=serverSteamid" json:"server_steamid,omitempty"`
	WatchLiveResult      *CMsgSpectateFriendGameResponse_EWatchLiveResult `protobuf:"varint,5,opt,name=watch_live_result,json=watchLiveResult,enum=CMsgSpectateFriendGameResponse_EWatchLiveResult,def=0" json:"watch_live_result,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                         `json:"-"`
	XXX_unrecognized     []byte                                           `json:"-"`
	XXX_sizecache        int32                                            `json:"-"`
}

func (m *CMsgSpectateFriendGameResponse) Reset()         { *m = CMsgSpectateFriendGameResponse{} }
func (m *CMsgSpectateFriendGameResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgSpectateFriendGameResponse) ProtoMessage()    {}
func (*CMsgSpectateFriendGameResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_dota_gcmessages_client_watch_abb73ecfef0d0f75, []int{14}
}
func (m *CMsgSpectateFriendGameResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgSpectateFriendGameResponse.Unmarshal(m, b)
}
func (m *CMsgSpectateFriendGameResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgSpectateFriendGameResponse.Marshal(b, m, deterministic)
}
func (dst *CMsgSpectateFriendGameResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgSpectateFriendGameResponse.Merge(dst, src)
}
func (m *CMsgSpectateFriendGameResponse) XXX_Size() int {
	return xxx_messageInfo_CMsgSpectateFriendGameResponse.Size(m)
}
func (m *CMsgSpectateFriendGameResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgSpectateFriendGameResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgSpectateFriendGameResponse proto.InternalMessageInfo

const Default_CMsgSpectateFriendGameResponse_WatchLiveResult CMsgSpectateFriendGameResponse_EWatchLiveResult = CMsgSpectateFriendGameResponse_SUCCESS

func (m *CMsgSpectateFriendGameResponse) GetServerSteamid() uint64 {
	if m != nil && m.ServerSteamid != nil {
		return *m.ServerSteamid
	}
	return 0
}

func (m *CMsgSpectateFriendGameResponse) GetWatchLiveResult() CMsgSpectateFriendGameResponse_EWatchLiveResult {
	if m != nil && m.WatchLiveResult != nil {
		return *m.WatchLiveResult
	}
	return Default_CMsgSpectateFriendGameResponse_WatchLiveResult
}

type CMsgDOTAMatchMinimal struct {
	MatchId              *uint64                        `protobuf:"varint,1,opt,name=match_id,json=matchId" json:"match_id,omitempty"`
	StartTime            *uint32                        `protobuf:"fixed32,2,opt,name=start_time,json=startTime" json:"start_time,omitempty"`
	Duration             *uint32                        `protobuf:"varint,3,opt,name=duration" json:"duration,omitempty"`
	GameMode             *DOTA_GameMode                 `protobuf:"varint,4,opt,name=game_mode,json=gameMode,enum=DOTA_GameMode,def=0" json:"game_mode,omitempty"`
	Players              []*CMsgDOTAMatchMinimal_Player `protobuf:"bytes,6,rep,name=players" json:"players,omitempty"`
	Tourney              *CMsgDOTAMatchMinimal_Tourney  `protobuf:"bytes,7,opt,name=tourney" json:"tourney,omitempty"`
	MatchOutcome         *EMatchOutcome                 `protobuf:"varint,8,opt,name=match_outcome,json=matchOutcome,enum=EMatchOutcome,def=0" json:"match_outcome,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *CMsgDOTAMatchMinimal) Reset()         { *m = CMsgDOTAMatchMinimal{} }
func (m *CMsgDOTAMatchMinimal) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAMatchMinimal) ProtoMessage()    {}
func (*CMsgDOTAMatchMinimal) Descriptor() ([]byte, []int) {
	return fileDescriptor_dota_gcmessages_client_watch_abb73ecfef0d0f75, []int{15}
}
func (m *CMsgDOTAMatchMinimal) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTAMatchMinimal.Unmarshal(m, b)
}
func (m *CMsgDOTAMatchMinimal) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTAMatchMinimal.Marshal(b, m, deterministic)
}
func (dst *CMsgDOTAMatchMinimal) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTAMatchMinimal.Merge(dst, src)
}
func (m *CMsgDOTAMatchMinimal) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTAMatchMinimal.Size(m)
}
func (m *CMsgDOTAMatchMinimal) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTAMatchMinimal.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTAMatchMinimal proto.InternalMessageInfo

const Default_CMsgDOTAMatchMinimal_GameMode DOTA_GameMode = DOTA_GameMode_DOTA_GAMEMODE_NONE
const Default_CMsgDOTAMatchMinimal_MatchOutcome EMatchOutcome = EMatchOutcome_k_EMatchOutcome_Unknown

func (m *CMsgDOTAMatchMinimal) GetMatchId() uint64 {
	if m != nil && m.MatchId != nil {
		return *m.MatchId
	}
	return 0
}

func (m *CMsgDOTAMatchMinimal) GetStartTime() uint32 {
	if m != nil && m.StartTime != nil {
		return *m.StartTime
	}
	return 0
}

func (m *CMsgDOTAMatchMinimal) GetDuration() uint32 {
	if m != nil && m.Duration != nil {
		return *m.Duration
	}
	return 0
}

func (m *CMsgDOTAMatchMinimal) GetGameMode() DOTA_GameMode {
	if m != nil && m.GameMode != nil {
		return *m.GameMode
	}
	return Default_CMsgDOTAMatchMinimal_GameMode
}

func (m *CMsgDOTAMatchMinimal) GetPlayers() []*CMsgDOTAMatchMinimal_Player {
	if m != nil {
		return m.Players
	}
	return nil
}

func (m *CMsgDOTAMatchMinimal) GetTourney() *CMsgDOTAMatchMinimal_Tourney {
	if m != nil {
		return m.Tourney
	}
	return nil
}

func (m *CMsgDOTAMatchMinimal) GetMatchOutcome() EMatchOutcome {
	if m != nil && m.MatchOutcome != nil {
		return *m.MatchOutcome
	}
	return Default_CMsgDOTAMatchMinimal_MatchOutcome
}

type CMsgDOTAMatchMinimal_Player struct {
	AccountId            *uint32  `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	HeroId               *uint32  `protobuf:"varint,2,opt,name=hero_id,json=heroId" json:"hero_id,omitempty"`
	Kills                *uint32  `protobuf:"varint,3,opt,name=kills" json:"kills,omitempty"`
	Deaths               *uint32  `protobuf:"varint,4,opt,name=deaths" json:"deaths,omitempty"`
	Assists              *uint32  `protobuf:"varint,5,opt,name=assists" json:"assists,omitempty"`
	Items                []uint32 `protobuf:"varint,6,rep,name=items" json:"items,omitempty"`
	PlayerSlot           *uint32  `protobuf:"varint,7,opt,name=player_slot,json=playerSlot" json:"player_slot,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgDOTAMatchMinimal_Player) Reset()         { *m = CMsgDOTAMatchMinimal_Player{} }
func (m *CMsgDOTAMatchMinimal_Player) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAMatchMinimal_Player) ProtoMessage()    {}
func (*CMsgDOTAMatchMinimal_Player) Descriptor() ([]byte, []int) {
	return fileDescriptor_dota_gcmessages_client_watch_abb73ecfef0d0f75, []int{15, 0}
}
func (m *CMsgDOTAMatchMinimal_Player) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTAMatchMinimal_Player.Unmarshal(m, b)
}
func (m *CMsgDOTAMatchMinimal_Player) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTAMatchMinimal_Player.Marshal(b, m, deterministic)
}
func (dst *CMsgDOTAMatchMinimal_Player) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTAMatchMinimal_Player.Merge(dst, src)
}
func (m *CMsgDOTAMatchMinimal_Player) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTAMatchMinimal_Player.Size(m)
}
func (m *CMsgDOTAMatchMinimal_Player) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTAMatchMinimal_Player.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTAMatchMinimal_Player proto.InternalMessageInfo

func (m *CMsgDOTAMatchMinimal_Player) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *CMsgDOTAMatchMinimal_Player) GetHeroId() uint32 {
	if m != nil && m.HeroId != nil {
		return *m.HeroId
	}
	return 0
}

func (m *CMsgDOTAMatchMinimal_Player) GetKills() uint32 {
	if m != nil && m.Kills != nil {
		return *m.Kills
	}
	return 0
}

func (m *CMsgDOTAMatchMinimal_Player) GetDeaths() uint32 {
	if m != nil && m.Deaths != nil {
		return *m.Deaths
	}
	return 0
}

func (m *CMsgDOTAMatchMinimal_Player) GetAssists() uint32 {
	if m != nil && m.Assists != nil {
		return *m.Assists
	}
	return 0
}

func (m *CMsgDOTAMatchMinimal_Player) GetItems() []uint32 {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *CMsgDOTAMatchMinimal_Player) GetPlayerSlot() uint32 {
	if m != nil && m.PlayerSlot != nil {
		return *m.PlayerSlot
	}
	return 0
}

type CMsgDOTAMatchMinimal_Tourney struct {
	LeagueId                     *uint32  `protobuf:"varint,1,opt,name=league_id,json=leagueId" json:"league_id,omitempty"`
	SeriesType                   *uint32  `protobuf:"varint,8,opt,name=series_type,json=seriesType" json:"series_type,omitempty"`
	SeriesGame                   *uint32  `protobuf:"varint,9,opt,name=series_game,json=seriesGame" json:"series_game,omitempty"`
	WeekendTourneyTournamentId   *uint32  `protobuf:"varint,10,opt,name=weekend_tourney_tournament_id,json=weekendTourneyTournamentId" json:"weekend_tourney_tournament_id,omitempty"`
	WeekendTourneySeasonTrophyId *uint32  `protobuf:"varint,11,opt,name=weekend_tourney_season_trophy_id,json=weekendTourneySeasonTrophyId" json:"weekend_tourney_season_trophy_id,omitempty"`
	WeekendTourneyDivision       *uint32  `protobuf:"varint,12,opt,name=weekend_tourney_division,json=weekendTourneyDivision" json:"weekend_tourney_division,omitempty"`
	WeekendTourneySkillLevel     *uint32  `protobuf:"varint,13,opt,name=weekend_tourney_skill_level,json=weekendTourneySkillLevel" json:"weekend_tourney_skill_level,omitempty"`
	RadiantTeamId                *uint32  `protobuf:"varint,2,opt,name=radiant_team_id,json=radiantTeamId" json:"radiant_team_id,omitempty"`
	RadiantTeamName              *string  `protobuf:"bytes,3,opt,name=radiant_team_name,json=radiantTeamName" json:"radiant_team_name,omitempty"`
	RadiantTeamLogo              *uint64  `protobuf:"fixed64,4,opt,name=radiant_team_logo,json=radiantTeamLogo" json:"radiant_team_logo,omitempty"`
	DireTeamId                   *uint32  `protobuf:"varint,5,opt,name=dire_team_id,json=direTeamId" json:"dire_team_id,omitempty"`
	DireTeamName                 *string  `protobuf:"bytes,6,opt,name=dire_team_name,json=direTeamName" json:"dire_team_name,omitempty"`
	DireTeamLogo                 *uint64  `protobuf:"fixed64,7,opt,name=dire_team_logo,json=direTeamLogo" json:"dire_team_logo,omitempty"`
	XXX_NoUnkeyedLiteral         struct{} `json:"-"`
	XXX_unrecognized             []byte   `json:"-"`
	XXX_sizecache                int32    `json:"-"`
}

func (m *CMsgDOTAMatchMinimal_Tourney) Reset()         { *m = CMsgDOTAMatchMinimal_Tourney{} }
func (m *CMsgDOTAMatchMinimal_Tourney) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAMatchMinimal_Tourney) ProtoMessage()    {}
func (*CMsgDOTAMatchMinimal_Tourney) Descriptor() ([]byte, []int) {
	return fileDescriptor_dota_gcmessages_client_watch_abb73ecfef0d0f75, []int{15, 1}
}
func (m *CMsgDOTAMatchMinimal_Tourney) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTAMatchMinimal_Tourney.Unmarshal(m, b)
}
func (m *CMsgDOTAMatchMinimal_Tourney) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTAMatchMinimal_Tourney.Marshal(b, m, deterministic)
}
func (dst *CMsgDOTAMatchMinimal_Tourney) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTAMatchMinimal_Tourney.Merge(dst, src)
}
func (m *CMsgDOTAMatchMinimal_Tourney) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTAMatchMinimal_Tourney.Size(m)
}
func (m *CMsgDOTAMatchMinimal_Tourney) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTAMatchMinimal_Tourney.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTAMatchMinimal_Tourney proto.InternalMessageInfo

func (m *CMsgDOTAMatchMinimal_Tourney) GetLeagueId() uint32 {
	if m != nil && m.LeagueId != nil {
		return *m.LeagueId
	}
	return 0
}

func (m *CMsgDOTAMatchMinimal_Tourney) GetSeriesType() uint32 {
	if m != nil && m.SeriesType != nil {
		return *m.SeriesType
	}
	return 0
}

func (m *CMsgDOTAMatchMinimal_Tourney) GetSeriesGame() uint32 {
	if m != nil && m.SeriesGame != nil {
		return *m.SeriesGame
	}
	return 0
}

func (m *CMsgDOTAMatchMinimal_Tourney) GetWeekendTourneyTournamentId() uint32 {
	if m != nil && m.WeekendTourneyTournamentId != nil {
		return *m.WeekendTourneyTournamentId
	}
	return 0
}

func (m *CMsgDOTAMatchMinimal_Tourney) GetWeekendTourneySeasonTrophyId() uint32 {
	if m != nil && m.WeekendTourneySeasonTrophyId != nil {
		return *m.WeekendTourneySeasonTrophyId
	}
	return 0
}

func (m *CMsgDOTAMatchMinimal_Tourney) GetWeekendTourneyDivision() uint32 {
	if m != nil && m.WeekendTourneyDivision != nil {
		return *m.WeekendTourneyDivision
	}
	return 0
}

func (m *CMsgDOTAMatchMinimal_Tourney) GetWeekendTourneySkillLevel() uint32 {
	if m != nil && m.WeekendTourneySkillLevel != nil {
		return *m.WeekendTourneySkillLevel
	}
	return 0
}

func (m *CMsgDOTAMatchMinimal_Tourney) GetRadiantTeamId() uint32 {
	if m != nil && m.RadiantTeamId != nil {
		return *m.RadiantTeamId
	}
	return 0
}

func (m *CMsgDOTAMatchMinimal_Tourney) GetRadiantTeamName() string {
	if m != nil && m.RadiantTeamName != nil {
		return *m.RadiantTeamName
	}
	return ""
}

func (m *CMsgDOTAMatchMinimal_Tourney) GetRadiantTeamLogo() uint64 {
	if m != nil && m.RadiantTeamLogo != nil {
		return *m.RadiantTeamLogo
	}
	return 0
}

func (m *CMsgDOTAMatchMinimal_Tourney) GetDireTeamId() uint32 {
	if m != nil && m.DireTeamId != nil {
		return *m.DireTeamId
	}
	return 0
}

func (m *CMsgDOTAMatchMinimal_Tourney) GetDireTeamName() string {
	if m != nil && m.DireTeamName != nil {
		return *m.DireTeamName
	}
	return ""
}

func (m *CMsgDOTAMatchMinimal_Tourney) GetDireTeamLogo() uint64 {
	if m != nil && m.DireTeamLogo != nil {
		return *m.DireTeamLogo
	}
	return 0
}

type CDOTAReplayDownloadInfo struct {
	Match                *CMsgDOTAMatchMinimal `protobuf:"bytes,1,opt,name=match" json:"match,omitempty"`
	Title                *string               `protobuf:"bytes,2,opt,name=title" json:"title,omitempty"`
	Description          *string               `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
	Size                 *uint32               `protobuf:"varint,4,opt,name=size" json:"size,omitempty"`
	Tags                 []string              `protobuf:"bytes,5,rep,name=tags" json:"tags,omitempty"`
	ExistsOnDisk         *bool                 `protobuf:"varint,6,opt,name=exists_on_disk,json=existsOnDisk" json:"exists_on_disk,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *CDOTAReplayDownloadInfo) Reset()         { *m = CDOTAReplayDownloadInfo{} }
func (m *CDOTAReplayDownloadInfo) String() string { return proto.CompactTextString(m) }
func (*CDOTAReplayDownloadInfo) ProtoMessage()    {}
func (*CDOTAReplayDownloadInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_dota_gcmessages_client_watch_abb73ecfef0d0f75, []int{16}
}
func (m *CDOTAReplayDownloadInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CDOTAReplayDownloadInfo.Unmarshal(m, b)
}
func (m *CDOTAReplayDownloadInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CDOTAReplayDownloadInfo.Marshal(b, m, deterministic)
}
func (dst *CDOTAReplayDownloadInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CDOTAReplayDownloadInfo.Merge(dst, src)
}
func (m *CDOTAReplayDownloadInfo) XXX_Size() int {
	return xxx_messageInfo_CDOTAReplayDownloadInfo.Size(m)
}
func (m *CDOTAReplayDownloadInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_CDOTAReplayDownloadInfo.DiscardUnknown(m)
}

var xxx_messageInfo_CDOTAReplayDownloadInfo proto.InternalMessageInfo

func (m *CDOTAReplayDownloadInfo) GetMatch() *CMsgDOTAMatchMinimal {
	if m != nil {
		return m.Match
	}
	return nil
}

func (m *CDOTAReplayDownloadInfo) GetTitle() string {
	if m != nil && m.Title != nil {
		return *m.Title
	}
	return ""
}

func (m *CDOTAReplayDownloadInfo) GetDescription() string {
	if m != nil && m.Description != nil {
		return *m.Description
	}
	return ""
}

func (m *CDOTAReplayDownloadInfo) GetSize() uint32 {
	if m != nil && m.Size != nil {
		return *m.Size
	}
	return 0
}

func (m *CDOTAReplayDownloadInfo) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *CDOTAReplayDownloadInfo) GetExistsOnDisk() bool {
	if m != nil && m.ExistsOnDisk != nil {
		return *m.ExistsOnDisk
	}
	return false
}

type CDOTAReplayDownloadInfo_Highlight struct {
	Timestamp            *uint32  `protobuf:"varint,1,opt,name=timestamp" json:"timestamp,omitempty"`
	Description          *string  `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CDOTAReplayDownloadInfo_Highlight) Reset()         { *m = CDOTAReplayDownloadInfo_Highlight{} }
func (m *CDOTAReplayDownloadInfo_Highlight) String() string { return proto.CompactTextString(m) }
func (*CDOTAReplayDownloadInfo_Highlight) ProtoMessage()    {}
func (*CDOTAReplayDownloadInfo_Highlight) Descriptor() ([]byte, []int) {
	return fileDescriptor_dota_gcmessages_client_watch_abb73ecfef0d0f75, []int{16, 0}
}
func (m *CDOTAReplayDownloadInfo_Highlight) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CDOTAReplayDownloadInfo_Highlight.Unmarshal(m, b)
}
func (m *CDOTAReplayDownloadInfo_Highlight) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CDOTAReplayDownloadInfo_Highlight.Marshal(b, m, deterministic)
}
func (dst *CDOTAReplayDownloadInfo_Highlight) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CDOTAReplayDownloadInfo_Highlight.Merge(dst, src)
}
func (m *CDOTAReplayDownloadInfo_Highlight) XXX_Size() int {
	return xxx_messageInfo_CDOTAReplayDownloadInfo_Highlight.Size(m)
}
func (m *CDOTAReplayDownloadInfo_Highlight) XXX_DiscardUnknown() {
	xxx_messageInfo_CDOTAReplayDownloadInfo_Highlight.DiscardUnknown(m)
}

var xxx_messageInfo_CDOTAReplayDownloadInfo_Highlight proto.InternalMessageInfo

func (m *CDOTAReplayDownloadInfo_Highlight) GetTimestamp() uint32 {
	if m != nil && m.Timestamp != nil {
		return *m.Timestamp
	}
	return 0
}

func (m *CDOTAReplayDownloadInfo_Highlight) GetDescription() string {
	if m != nil && m.Description != nil {
		return *m.Description
	}
	return ""
}

type CMsgWatchGame struct {
	ServerSteamid        *uint64  `protobuf:"fixed64,1,opt,name=server_steamid,json=serverSteamid" json:"server_steamid,omitempty"`
	ClientVersion        *uint32  `protobuf:"varint,2,opt,name=client_version,json=clientVersion" json:"client_version,omitempty"`
	WatchServerSteamid   *uint64  `protobuf:"fixed64,3,opt,name=watch_server_steamid,json=watchServerSteamid" json:"watch_server_steamid,omitempty"`
	LobbyId              *uint64  `protobuf:"varint,4,opt,name=lobby_id,json=lobbyId" json:"lobby_id,omitempty"`
	Regions              []uint32 `protobuf:"varint,5,rep,name=regions" json:"regions,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgWatchGame) Reset()         { *m = CMsgWatchGame{} }
func (m *CMsgWatchGame) String() string { return proto.CompactTextString(m) }
func (*CMsgWatchGame) ProtoMessage()    {}
func (*CMsgWatchGame) Descriptor() ([]byte, []int) {
	return fileDescriptor_dota_gcmessages_client_watch_abb73ecfef0d0f75, []int{17}
}
func (m *CMsgWatchGame) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgWatchGame.Unmarshal(m, b)
}
func (m *CMsgWatchGame) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgWatchGame.Marshal(b, m, deterministic)
}
func (dst *CMsgWatchGame) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgWatchGame.Merge(dst, src)
}
func (m *CMsgWatchGame) XXX_Size() int {
	return xxx_messageInfo_CMsgWatchGame.Size(m)
}
func (m *CMsgWatchGame) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgWatchGame.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgWatchGame proto.InternalMessageInfo

func (m *CMsgWatchGame) GetServerSteamid() uint64 {
	if m != nil && m.ServerSteamid != nil {
		return *m.ServerSteamid
	}
	return 0
}

func (m *CMsgWatchGame) GetClientVersion() uint32 {
	if m != nil && m.ClientVersion != nil {
		return *m.ClientVersion
	}
	return 0
}

func (m *CMsgWatchGame) GetWatchServerSteamid() uint64 {
	if m != nil && m.WatchServerSteamid != nil {
		return *m.WatchServerSteamid
	}
	return 0
}

func (m *CMsgWatchGame) GetLobbyId() uint64 {
	if m != nil && m.LobbyId != nil {
		return *m.LobbyId
	}
	return 0
}

func (m *CMsgWatchGame) GetRegions() []uint32 {
	if m != nil {
		return m.Regions
	}
	return nil
}

type CMsgCancelWatchGame struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgCancelWatchGame) Reset()         { *m = CMsgCancelWatchGame{} }
func (m *CMsgCancelWatchGame) String() string { return proto.CompactTextString(m) }
func (*CMsgCancelWatchGame) ProtoMessage()    {}
func (*CMsgCancelWatchGame) Descriptor() ([]byte, []int) {
	return fileDescriptor_dota_gcmessages_client_watch_abb73ecfef0d0f75, []int{18}
}
func (m *CMsgCancelWatchGame) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgCancelWatchGame.Unmarshal(m, b)
}
func (m *CMsgCancelWatchGame) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgCancelWatchGame.Marshal(b, m, deterministic)
}
func (dst *CMsgCancelWatchGame) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgCancelWatchGame.Merge(dst, src)
}
func (m *CMsgCancelWatchGame) XXX_Size() int {
	return xxx_messageInfo_CMsgCancelWatchGame.Size(m)
}
func (m *CMsgCancelWatchGame) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgCancelWatchGame.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgCancelWatchGame proto.InternalMessageInfo

type CMsgWatchGameResponse struct {
	WatchGameResult         *CMsgWatchGameResponse_WatchGameResult `protobuf:"varint,1,opt,name=watch_game_result,json=watchGameResult,enum=CMsgWatchGameResponse_WatchGameResult,def=0" json:"watch_game_result,omitempty"`
	SourceTvPublicAddr      *uint32                                `protobuf:"varint,2,opt,name=source_tv_public_addr,json=sourceTvPublicAddr" json:"source_tv_public_addr,omitempty"`
	SourceTvPrivateAddr     *uint32                                `protobuf:"varint,3,opt,name=source_tv_private_addr,json=sourceTvPrivateAddr" json:"source_tv_private_addr,omitempty"`
	SourceTvPort            *uint32                                `protobuf:"varint,4,opt,name=source_tv_port,json=sourceTvPort" json:"source_tv_port,omitempty"`
	GameServerSteamid       *uint64                                `protobuf:"fixed64,5,opt,name=game_server_steamid,json=gameServerSteamid" json:"game_server_steamid,omitempty"`
	WatchServerSteamid      *uint64                                `protobuf:"fixed64,6,opt,name=watch_server_steamid,json=watchServerSteamid" json:"watch_server_steamid,omitempty"`
	WatchTvUniqueSecretCode *uint64                                `protobuf:"fixed64,7,opt,name=watch_tv_unique_secret_code,json=watchTvUniqueSecretCode" json:"watch_tv_unique_secret_code,omitempty"`
	XXX_NoUnkeyedLiteral    struct{}                               `json:"-"`
	XXX_unrecognized        []byte                                 `json:"-"`
	XXX_sizecache           int32                                  `json:"-"`
}

func (m *CMsgWatchGameResponse) Reset()         { *m = CMsgWatchGameResponse{} }
func (m *CMsgWatchGameResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgWatchGameResponse) ProtoMessage()    {}
func (*CMsgWatchGameResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_dota_gcmessages_client_watch_abb73ecfef0d0f75, []int{19}
}
func (m *CMsgWatchGameResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgWatchGameResponse.Unmarshal(m, b)
}
func (m *CMsgWatchGameResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgWatchGameResponse.Marshal(b, m, deterministic)
}
func (dst *CMsgWatchGameResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgWatchGameResponse.Merge(dst, src)
}
func (m *CMsgWatchGameResponse) XXX_Size() int {
	return xxx_messageInfo_CMsgWatchGameResponse.Size(m)
}
func (m *CMsgWatchGameResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgWatchGameResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgWatchGameResponse proto.InternalMessageInfo

const Default_CMsgWatchGameResponse_WatchGameResult CMsgWatchGameResponse_WatchGameResult = CMsgWatchGameResponse_PENDING

func (m *CMsgWatchGameResponse) GetWatchGameResult() CMsgWatchGameResponse_WatchGameResult {
	if m != nil && m.WatchGameResult != nil {
		return *m.WatchGameResult
	}
	return Default_CMsgWatchGameResponse_WatchGameResult
}

func (m *CMsgWatchGameResponse) GetSourceTvPublicAddr() uint32 {
	if m != nil && m.SourceTvPublicAddr != nil {
		return *m.SourceTvPublicAddr
	}
	return 0
}

func (m *CMsgWatchGameResponse) GetSourceTvPrivateAddr() uint32 {
	if m != nil && m.SourceTvPrivateAddr != nil {
		return *m.SourceTvPrivateAddr
	}
	return 0
}

func (m *CMsgWatchGameResponse) GetSourceTvPort() uint32 {
	if m != nil && m.SourceTvPort != nil {
		return *m.SourceTvPort
	}
	return 0
}

func (m *CMsgWatchGameResponse) GetGameServerSteamid() uint64 {
	if m != nil && m.GameServerSteamid != nil {
		return *m.GameServerSteamid
	}
	return 0
}

func (m *CMsgWatchGameResponse) GetWatchServerSteamid() uint64 {
	if m != nil && m.WatchServerSteamid != nil {
		return *m.WatchServerSteamid
	}
	return 0
}

func (m *CMsgWatchGameResponse) GetWatchTvUniqueSecretCode() uint64 {
	if m != nil && m.WatchTvUniqueSecretCode != nil {
		return *m.WatchTvUniqueSecretCode
	}
	return 0
}

type CMsgPartyLeaderWatchGamePrompt struct {
	GameServerSteamid    *uint64  `protobuf:"fixed64,5,opt,name=game_server_steamid,json=gameServerSteamid" json:"game_server_steamid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgPartyLeaderWatchGamePrompt) Reset()         { *m = CMsgPartyLeaderWatchGamePrompt{} }
func (m *CMsgPartyLeaderWatchGamePrompt) String() string { return proto.CompactTextString(m) }
func (*CMsgPartyLeaderWatchGamePrompt) ProtoMessage()    {}
func (*CMsgPartyLeaderWatchGamePrompt) Descriptor() ([]byte, []int) {
	return fileDescriptor_dota_gcmessages_client_watch_abb73ecfef0d0f75, []int{20}
}
func (m *CMsgPartyLeaderWatchGamePrompt) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgPartyLeaderWatchGamePrompt.Unmarshal(m, b)
}
func (m *CMsgPartyLeaderWatchGamePrompt) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgPartyLeaderWatchGamePrompt.Marshal(b, m, deterministic)
}
func (dst *CMsgPartyLeaderWatchGamePrompt) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgPartyLeaderWatchGamePrompt.Merge(dst, src)
}
func (m *CMsgPartyLeaderWatchGamePrompt) XXX_Size() int {
	return xxx_messageInfo_CMsgPartyLeaderWatchGamePrompt.Size(m)
}
func (m *CMsgPartyLeaderWatchGamePrompt) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgPartyLeaderWatchGamePrompt.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgPartyLeaderWatchGamePrompt proto.InternalMessageInfo

func (m *CMsgPartyLeaderWatchGamePrompt) GetGameServerSteamid() uint64 {
	if m != nil && m.GameServerSteamid != nil {
		return *m.GameServerSteamid
	}
	return 0
}

type CDOTABroadcasterInfo struct {
	AccountId                  *uint32  `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	ServerSteamId              *uint64  `protobuf:"fixed64,2,opt,name=server_steam_id,json=serverSteamId" json:"server_steam_id,omitempty"`
	Live                       *bool    `protobuf:"varint,3,opt,name=live" json:"live,omitempty"`
	TeamNameRadiant            *string  `protobuf:"bytes,4,opt,name=team_name_radiant,json=teamNameRadiant" json:"team_name_radiant,omitempty"`
	TeamNameDire               *string  `protobuf:"bytes,5,opt,name=team_name_dire,json=teamNameDire" json:"team_name_dire,omitempty"`
	SeriesGame                 *uint32  `protobuf:"varint,7,opt,name=series_game,json=seriesGame" json:"series_game,omitempty"`
	UpcomingBroadcastTimestamp *uint32  `protobuf:"varint,9,opt,name=upcoming_broadcast_timestamp,json=upcomingBroadcastTimestamp" json:"upcoming_broadcast_timestamp,omitempty"`
	AllowLiveVideo             *bool    `protobuf:"varint,10,opt,name=allow_live_video,json=allowLiveVideo" json:"allow_live_video,omitempty"`
	NodeType                   *uint32  `protobuf:"varint,11,opt,name=node_type,json=nodeType" json:"node_type,omitempty"`
	NodeName                   *string  `protobuf:"bytes,12,opt,name=node_name,json=nodeName" json:"node_name,omitempty"`
	XXX_NoUnkeyedLiteral       struct{} `json:"-"`
	XXX_unrecognized           []byte   `json:"-"`
	XXX_sizecache              int32    `json:"-"`
}

func (m *CDOTABroadcasterInfo) Reset()         { *m = CDOTABroadcasterInfo{} }
func (m *CDOTABroadcasterInfo) String() string { return proto.CompactTextString(m) }
func (*CDOTABroadcasterInfo) ProtoMessage()    {}
func (*CDOTABroadcasterInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_dota_gcmessages_client_watch_abb73ecfef0d0f75, []int{21}
}
func (m *CDOTABroadcasterInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CDOTABroadcasterInfo.Unmarshal(m, b)
}
func (m *CDOTABroadcasterInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CDOTABroadcasterInfo.Marshal(b, m, deterministic)
}
func (dst *CDOTABroadcasterInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CDOTABroadcasterInfo.Merge(dst, src)
}
func (m *CDOTABroadcasterInfo) XXX_Size() int {
	return xxx_messageInfo_CDOTABroadcasterInfo.Size(m)
}
func (m *CDOTABroadcasterInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_CDOTABroadcasterInfo.DiscardUnknown(m)
}

var xxx_messageInfo_CDOTABroadcasterInfo proto.InternalMessageInfo

func (m *CDOTABroadcasterInfo) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *CDOTABroadcasterInfo) GetServerSteamId() uint64 {
	if m != nil && m.ServerSteamId != nil {
		return *m.ServerSteamId
	}
	return 0
}

func (m *CDOTABroadcasterInfo) GetLive() bool {
	if m != nil && m.Live != nil {
		return *m.Live
	}
	return false
}

func (m *CDOTABroadcasterInfo) GetTeamNameRadiant() string {
	if m != nil && m.TeamNameRadiant != nil {
		return *m.TeamNameRadiant
	}
	return ""
}

func (m *CDOTABroadcasterInfo) GetTeamNameDire() string {
	if m != nil && m.TeamNameDire != nil {
		return *m.TeamNameDire
	}
	return ""
}

func (m *CDOTABroadcasterInfo) GetSeriesGame() uint32 {
	if m != nil && m.SeriesGame != nil {
		return *m.SeriesGame
	}
	return 0
}

func (m *CDOTABroadcasterInfo) GetUpcomingBroadcastTimestamp() uint32 {
	if m != nil && m.UpcomingBroadcastTimestamp != nil {
		return *m.UpcomingBroadcastTimestamp
	}
	return 0
}

func (m *CDOTABroadcasterInfo) GetAllowLiveVideo() bool {
	if m != nil && m.AllowLiveVideo != nil {
		return *m.AllowLiveVideo
	}
	return false
}

func (m *CDOTABroadcasterInfo) GetNodeType() uint32 {
	if m != nil && m.NodeType != nil {
		return *m.NodeType
	}
	return 0
}

func (m *CDOTABroadcasterInfo) GetNodeName() string {
	if m != nil && m.NodeName != nil {
		return *m.NodeName
	}
	return ""
}

func init() {
	proto.RegisterType((*CSourceTVGameSmall)(nil), "CSourceTVGameSmall")
	proto.RegisterType((*CSourceTVGameSmall_Player)(nil), "CSourceTVGameSmall.Player")
	proto.RegisterType((*CMsgClientToGCFindTopSourceTVGames)(nil), "CMsgClientToGCFindTopSourceTVGames")
	proto.RegisterType((*CMsgGCToClientFindTopSourceTVGamesResponse)(nil), "CMsgGCToClientFindTopSourceTVGamesResponse")
	proto.RegisterType((*CMsgGCToClientTopWeekendTourneyGames)(nil), "CMsgGCToClientTopWeekendTourneyGames")
	proto.RegisterType((*CMsgClientToGCTopMatchesRequest)(nil), "CMsgClientToGCTopMatchesRequest")
	proto.RegisterType((*CMsgClientToGCTopLeagueMatchesRequest)(nil), "CMsgClientToGCTopLeagueMatchesRequest")
	proto.RegisterType((*CMsgClientToGCTopFriendMatchesRequest)(nil), "CMsgClientToGCTopFriendMatchesRequest")
	proto.RegisterType((*CMsgClientToGCMatchesMinimalRequest)(nil), "CMsgClientToGCMatchesMinimalRequest")
	proto.RegisterType((*CMsgClientToGCMatchesMinimalResponse)(nil), "CMsgClientToGCMatchesMinimalResponse")
	proto.RegisterType((*CMsgGCToClientTopLeagueMatchesResponse)(nil), "CMsgGCToClientTopLeagueMatchesResponse")
	proto.RegisterType((*CMsgGCToClientTopFriendMatchesResponse)(nil), "CMsgGCToClientTopFriendMatchesResponse")
	proto.RegisterType((*CMsgClientToGCFindTopMatches)(nil), "CMsgClientToGCFindTopMatches")
	proto.RegisterType((*CMsgGCToClientFindTopLeagueMatchesResponse)(nil), "CMsgGCToClientFindTopLeagueMatchesResponse")
	proto.RegisterType((*CMsgSpectateFriendGame)(nil), "CMsgSpectateFriendGame")
	proto.RegisterType((*CMsgSpectateFriendGameResponse)(nil), "CMsgSpectateFriendGameResponse")
	proto.RegisterType((*CMsgDOTAMatchMinimal)(nil), "CMsgDOTAMatchMinimal")
	proto.RegisterType((*CMsgDOTAMatchMinimal_Player)(nil), "CMsgDOTAMatchMinimal.Player")
	proto.RegisterType((*CMsgDOTAMatchMinimal_Tourney)(nil), "CMsgDOTAMatchMinimal.Tourney")
	proto.RegisterType((*CDOTAReplayDownloadInfo)(nil), "CDOTAReplayDownloadInfo")
	proto.RegisterType((*CDOTAReplayDownloadInfo_Highlight)(nil), "CDOTAReplayDownloadInfo.Highlight")
	proto.RegisterType((*CMsgWatchGame)(nil), "CMsgWatchGame")
	proto.RegisterType((*CMsgCancelWatchGame)(nil), "CMsgCancelWatchGame")
	proto.RegisterType((*CMsgWatchGameResponse)(nil), "CMsgWatchGameResponse")
	proto.RegisterType((*CMsgPartyLeaderWatchGamePrompt)(nil), "CMsgPartyLeaderWatchGamePrompt")
	proto.RegisterType((*CDOTABroadcasterInfo)(nil), "CDOTABroadcasterInfo")
	proto.RegisterEnum("CMsgSpectateFriendGameResponse_EWatchLiveResult", CMsgSpectateFriendGameResponse_EWatchLiveResult_name, CMsgSpectateFriendGameResponse_EWatchLiveResult_value)
	proto.RegisterEnum("CMsgWatchGameResponse_WatchGameResult", CMsgWatchGameResponse_WatchGameResult_name, CMsgWatchGameResponse_WatchGameResult_value)
}

func init() {
	proto.RegisterFile("dota_gcmessages_client_watch.proto", fileDescriptor_dota_gcmessages_client_watch_abb73ecfef0d0f75)
}

var fileDescriptor_dota_gcmessages_client_watch_abb73ecfef0d0f75 = []byte{
	// 2511 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x59, 0x4b, 0x73, 0xdb, 0xd6,
	0x15, 0x0e, 0x24, 0x8a, 0x8f, 0x43, 0x51, 0xa2, 0xae, 0x2d, 0x09, 0xa6, 0x24, 0x9b, 0x61, 0x1c,
	0x87, 0xe3, 0x4e, 0x68, 0xc7, 0xe9, 0x34, 0x9d, 0x4c, 0x3b, 0x0d, 0x45, 0xc2, 0x32, 0x27, 0x7c,
	0x0d, 0x00, 0xd9, 0xa3, 0x74, 0x81, 0x81, 0x88, 0x6b, 0x0a, 0x23, 0x00, 0x97, 0x01, 0x40, 0x2a,
	0xea, 0xa6, 0x5d, 0xb7, 0xfd, 0x03, 0xfd, 0x0f, 0xfd, 0x0b, 0x9d, 0x6e, 0xba, 0xe8, 0xb6, 0x5d,
	0x76, 0xa6, 0xbb, 0xae, 0xfb, 0x1b, 0x3a, 0xf7, 0xdc, 0x0b, 0xbe, 0x15, 0xa7, 0xc9, 0x74, 0xba,
	0x12, 0xef, 0x77, 0xbe, 0x73, 0x1f, 0xe7, 0x9e, 0x7b, 0x1e, 0x10, 0x54, 0x1c, 0x16, 0xdb, 0xd6,
	0x70, 0xe0, 0xd3, 0x28, 0xb2, 0x87, 0x34, 0xb2, 0x06, 0x9e, 0x4b, 0x83, 0xd8, 0xba, 0xb1, 0xe3,
	0xc1, 0x55, 0x6d, 0x14, 0xb2, 0x98, 0x95, 0x0e, 0x91, 0x13, 0x5d, 0xd9, 0x21, 0x75, 0x2c, 0x1a,
	0x8c, 0xfd, 0x48, 0x0a, 0x8e, 0x57, 0x94, 0x99, 0xef, 0xb3, 0x40, 0x48, 0x2b, 0xff, 0xca, 0x02,
	0x69, 0x18, 0x6c, 0x1c, 0x0e, 0xa8, 0xf9, 0xfa, 0xcc, 0xf6, 0xa9, 0xe1, 0xdb, 0x9e, 0x47, 0x3e,
	0x80, 0x82, 0x3d, 0x88, 0xdd, 0x89, 0x1d, 0x53, 0x2b, 0x76, 0x7d, 0xaa, 0x2a, 0x65, 0xa5, 0x5a,
	0xd0, 0xb7, 0x13, 0xd0, 0x74, 0x7d, 0x4a, 0x3e, 0x82, 0x5d, 0x87, 0x2e, 0xd2, 0x36, 0x90, 0xb6,
	0x33, 0x83, 0x91, 0xf8, 0x04, 0x76, 0x23, 0x1a, 0x4e, 0x68, 0x68, 0x45, 0x31, 0xb5, 0x7d, 0xcb,
	0x75, 0xd4, 0xcd, 0xb2, 0x52, 0x4d, 0xe9, 0x05, 0x01, 0x1b, 0x1c, 0x6d, 0x39, 0xe4, 0x01, 0x64,
	0x3d, 0x76, 0x79, 0x79, 0xcb, 0x09, 0x29, 0x24, 0x64, 0x70, 0xdc, 0x72, 0xc8, 0x11, 0xe4, 0x3c,
	0x6a, 0x0f, 0xc7, 0x94, 0xcb, 0xb6, 0x70, 0x95, 0xac, 0x00, 0x5a, 0x0e, 0x39, 0x01, 0x10, 0x7a,
	0xf1, 0xed, 0x88, 0xaa, 0x69, 0x94, 0xe6, 0x10, 0x31, 0x6f, 0x47, 0x94, 0xeb, 0x0e, 0x6d, 0x5f,
	0xee, 0x30, 0x53, 0x56, 0xaa, 0x5b, 0x7a, 0x96, 0x03, 0xb8, 0xb7, 0xfb, 0xb0, 0xe5, 0x50, 0xcf,
	0xbe, 0x55, 0xb3, 0xa8, 0x26, 0x06, 0xe4, 0x21, 0x40, 0x34, 0xa2, 0x83, 0xd8, 0x8e, 0x59, 0x18,
	0xa9, 0x39, 0x14, 0xcd, 0x21, 0xd3, 0x29, 0x7d, 0xe6, 0x50, 0x15, 0xc4, 0x76, 0x38, 0xd0, 0x61,
	0x0e, 0x25, 0x8f, 0x20, 0x6f, 0x4f, 0x68, 0x68, 0x0f, 0xa9, 0xe5, 0xfb, 0xa1, 0x9a, 0x17, 0xda,
	0x12, 0xea, 0xf8, 0x21, 0x79, 0x0a, 0x7b, 0x68, 0x87, 0x80, 0x4f, 0x11, 0xda, 0x8e, 0x6b, 0x07,
	0xb1, 0xba, 0x5b, 0x56, 0xaa, 0x39, 0x7d, 0x97, 0x0b, 0xba, 0xb6, 0x4f, 0x75, 0x01, 0x93, 0xc7,
	0xb0, 0x33, 0xe3, 0x3a, 0x6e, 0x48, 0xd5, 0x22, 0x12, 0xb7, 0x13, 0x62, 0xd3, 0x0d, 0xe9, 0x74,
	0x46, 0x8f, 0x0d, 0xd9, 0x74, 0x46, 0xb5, 0xac, 0x54, 0xd3, 0x62, 0xc6, 0x36, 0x1b, 0xb2, 0xe5,
	0x19, 0x91, 0x8b, 0x33, 0x3e, 0x40, 0xe2, 0x76, 0x42, 0xc4, 0x19, 0x4f, 0x00, 0x22, 0x16, 0xc6,
	0x56, 0x34, 0x60, 0x21, 0x55, 0xf7, 0x84, 0x4d, 0x39, 0x62, 0x70, 0x80, 0x54, 0xa1, 0xe8, 0xd9,
	0x51, 0x6c, 0x8d, 0x47, 0xce, 0xf4, 0xf2, 0x49, 0x59, 0xa9, 0x6e, 0xe8, 0x3b, 0x1c, 0x3f, 0x47,
	0x18, 0x0d, 0xfc, 0x3e, 0x6c, 0xcb, 0x0d, 0x59, 0x1e, 0xb5, 0x1d, 0xf5, 0x1e, 0x5e, 0x40, 0x5e,
	0x62, 0x6d, 0x6a, 0x3b, 0xdc, 0xdb, 0x12, 0x8a, 0x58, 0xee, 0xbe, 0xf0, 0x36, 0x09, 0x8a, 0x15,
	0x4f, 0x00, 0xf8, 0x66, 0x25, 0x63, 0x5f, 0x6c, 0x88, 0x23, 0x42, 0xfc, 0x63, 0xc8, 0x8c, 0x3c,
	0xfb, 0x96, 0x86, 0x91, 0x7a, 0x50, 0xde, 0xac, 0xe6, 0x5f, 0x94, 0x6a, 0xab, 0x7e, 0x5d, 0xeb,
	0x23, 0x45, 0x4f, 0xa8, 0xe4, 0x43, 0xd8, 0xb9, 0x1c, 0xbb, 0x9e, 0xe3, 0x06, 0x43, 0x2b, 0x8a,
	0xed, 0x98, 0xaa, 0x87, 0x65, 0xa5, 0x9a, 0xd1, 0x0b, 0x09, 0x6a, 0x70, 0x90, 0xd4, 0xe1, 0xe4,
	0x86, 0xd2, 0x6b, 0x1a, 0x38, 0x56, 0xcc, 0xc6, 0x61, 0x40, 0x6f, 0xc5, 0x5f, 0xdb, 0xe7, 0xcf,
	0xd0, 0x75, 0xd4, 0x12, 0x6e, 0xa7, 0x24, 0x49, 0xa6, 0xe0, 0x98, 0x53, 0x4a, 0xcb, 0x21, 0x3f,
	0x05, 0x75, 0x79, 0x0a, 0xc7, 0x9d, 0xb8, 0x91, 0xcb, 0x02, 0xf5, 0x08, 0xb5, 0x0f, 0x16, 0xb5,
	0x9b, 0x52, 0x4a, 0x7e, 0x0e, 0x47, 0xcb, 0x9a, 0xd1, 0xb5, 0xeb, 0x79, 0x96, 0x47, 0x27, 0xd4,
	0x53, 0x8f, 0x51, 0x59, 0x5d, 0x54, 0x36, 0x38, 0xa1, 0xcd, 0xe5, 0xeb, 0xf6, 0x7e, 0x19, 0xda,
	0x83, 0x6b, 0x1a, 0x5b, 0x21, 0x1b, 0x07, 0x8e, 0x7a, 0xb2, 0x6e, 0xef, 0xa7, 0x82, 0xa2, 0x73,
	0x46, 0xe9, 0x0b, 0x48, 0x0b, 0xc3, 0xf1, 0x4b, 0xb0, 0x07, 0x03, 0x36, 0x16, 0xa7, 0x16, 0x41,
	0x21, 0x27, 0x91, 0x96, 0x43, 0x0e, 0x21, 0x73, 0x45, 0x43, 0xc6, 0x65, 0x22, 0x12, 0xa4, 0xf9,
	0xb0, 0xe5, 0x54, 0xfe, 0xa9, 0x40, 0xa5, 0xd1, 0x89, 0x86, 0x0d, 0x0c, 0x5c, 0x26, 0x3b, 0x6b,
	0xbc, 0x74, 0xf9, 0x5a, 0xa3, 0xf9, 0x2b, 0x8a, 0xd0, 0xe9, 0xa8, 0x1d, 0x0e, 0xae, 0xac, 0x6b,
	0x7a, 0x8b, 0xd3, 0xe7, 0xf4, 0x9c, 0x40, 0xbe, 0xa4, 0xb7, 0x8b, 0x41, 0x60, 0x63, 0x29, 0x08,
	0xcc, 0xad, 0xbd, 0x39, 0xbf, 0x36, 0x4e, 0x1a, 0xdb, 0x61, 0x6c, 0xf1, 0x07, 0x8a, 0x71, 0x85,
	0x7b, 0x32, 0x47, 0xf8, 0xa2, 0x3c, 0x38, 0xe1, 0x53, 0xf6, 0xdc, 0x28, 0xb6, 0xdc, 0xc0, 0xa1,
	0xdf, 0xc8, 0xf8, 0x52, 0xe0, 0x70, 0xdb, 0x8d, 0xe2, 0x16, 0x07, 0x71, 0x71, 0x19, 0x9c, 0x22,
	0x35, 0x5d, 0xde, 0xac, 0xa6, 0xf4, 0xac, 0x8c, 0x4e, 0x51, 0xe5, 0xdf, 0x1b, 0xf0, 0x94, 0x9f,
	0xef, 0xac, 0x61, 0x32, 0x71, 0xc6, 0x75, 0xe7, 0xd3, 0x69, 0x34, 0x62, 0x41, 0x44, 0xff, 0x2f,
	0xe7, 0x3c, 0x82, 0x5c, 0x30, 0xf6, 0x51, 0x18, 0x25, 0x11, 0x34, 0x18, 0xfb, 0xc2, 0xf0, 0x6b,
	0x8c, 0x90, 0x5e, 0x67, 0x84, 0xe7, 0x32, 0xee, 0x71, 0x9e, 0x9a, 0xc1, 0x77, 0x76, 0x6f, 0xcd,
	0x3b, 0x13, 0xc1, 0x90, 0xab, 0xf1, 0x17, 0xc6, 0xe3, 0xa6, 0xfb, 0xd6, 0x1d, 0xc8, 0xb5, 0x79,
	0xa0, 0xcd, 0xea, 0x85, 0x04, 0x15, 0x1b, 0xa8, 0x41, 0xf6, 0x92, 0xc9, 0xad, 0xf3, 0x70, 0x7b,
	0xc7, 0xbc, 0x99, 0x4b, 0x86, 0xa7, 0xa9, 0x7c, 0x05, 0x8f, 0x17, 0xed, 0x6d, 0xb2, 0xd1, 0x9b,
	0x05, 0x0f, 0x16, 0xf3, 0xbe, 0x00, 0xf0, 0xdc, 0x09, 0x95, 0x4b, 0x2b, 0x77, 0xef, 0x38, 0xc7,
	0x69, 0xa8, 0x53, 0xf9, 0x35, 0x3c, 0x5a, 0xf4, 0x55, 0x93, 0x8d, 0x3a, 0x3c, 0xd5, 0xf2, 0x1b,
	0xfc, 0x7a, 0x4c, 0xa3, 0x78, 0xfe, 0x12, 0x94, 0x85, 0x4b, 0x78, 0x0a, 0x7b, 0x22, 0xb6, 0x58,
	0x73, 0xef, 0x44, 0x5c, 0xe1, 0xae, 0x10, 0xd4, 0xe7, 0x5f, 0xcb, 0x7c, 0x3a, 0x2c, 0xe8, 0x69,
	0x91, 0x07, 0x2b, 0x1f, 0xc1, 0x87, 0x2b, 0x1b, 0x68, 0xe3, 0xfd, 0x2f, 0x6e, 0x63, 0x2d, 0xf1,
	0x65, 0xe8, 0xd2, 0xc0, 0x59, 0x22, 0x9e, 0xc2, 0x07, 0x8b, 0x44, 0x29, 0xef, 0xb8, 0x81, 0xeb,
	0xdb, 0x5e, 0x72, 0xac, 0x23, 0xc8, 0xf9, 0x5c, 0x80, 0x3e, 0xae, 0x08, 0x1f, 0x47, 0x80, 0xfb,
	0xf8, 0x44, 0x98, 0xfc, 0xee, 0x39, 0xa4, 0x73, 0x3f, 0x83, 0x8c, 0x2f, 0x24, 0xd2, 0xde, 0xfb,
	0x35, 0xae, 0xd7, 0xec, 0x99, 0x75, 0xd4, 0x48, 0xf8, 0x09, 0x0b, 0xd3, 0x37, 0xcf, 0x25, 0x38,
	0x46, 0x63, 0x65, 0xf5, 0x1c, 0x47, 0x90, 0x5e, 0xb9, 0x80, 0x27, 0x2b, 0x57, 0xbd, 0x64, 0x8d,
	0xd5, 0x95, 0x37, 0xbe, 0xcb, 0xca, 0x6b, 0xa7, 0x5e, 0xb2, 0xdf, 0xf7, 0x3c, 0x54, 0xe5, 0xef,
	0x0a, 0x1c, 0xaf, 0x8d, 0x78, 0x9d, 0xd9, 0xa9, 0xe7, 0x9e, 0xab, 0xb2, 0xe6, 0xb9, 0x7e, 0x8f,
	0x18, 0x70, 0x04, 0xb9, 0xb7, 0xb8, 0xff, 0xa4, 0x84, 0x2a, 0xe8, 0x59, 0x01, 0xb4, 0x1c, 0x5e,
	0x97, 0x48, 0x21, 0x3e, 0xdf, 0x2d, 0x34, 0x34, 0x08, 0x08, 0xdf, 0xea, 0x23, 0xc8, 0xcb, 0x35,
	0x91, 0x90, 0x16, 0x04, 0x01, 0x71, 0x42, 0xe5, 0xaf, 0xca, 0x1d, 0x61, 0x6e, 0xfd, 0x7d, 0xfc,
	0xaf, 0x8e, 0x38, 0xf3, 0xd1, 0x54, 0x79, 0x93, 0x6b, 0x25, 0x3e, 0x4a, 0xaa, 0xb3, 0x6b, 0xda,
	0xc2, 0x6b, 0xda, 0x59, 0xbc, 0xa6, 0xd9, 0xfd, 0x9c, 0xc1, 0x01, 0x97, 0x18, 0xa2, 0xa6, 0xa3,
	0xe2, 0xd6, 0x71, 0x5b, 0x0f, 0x20, 0x3b, 0x2d, 0x53, 0x15, 0xac, 0x8c, 0x32, 0x91, 0x2c, 0x50,
	0x09, 0xa4, 0x78, 0x98, 0x90, 0x3e, 0x8a, 0xbf, 0x2b, 0x7f, 0x4a, 0xc1, 0xc3, 0xf5, 0x33, 0x4d,
	0xed, 0xc0, 0x63, 0xe0, 0x5c, 0xfd, 0x2b, 0xaf, 0x26, 0xbd, 0x50, 0xfe, 0xba, 0x0e, 0xa1, 0xb0,
	0x87, 0x15, 0xbd, 0x85, 0x11, 0x2b, 0xa4, 0xd1, 0xd8, 0x13, 0xb7, 0xb4, 0xf3, 0xe2, 0x79, 0xed,
	0xdb, 0x97, 0xa8, 0x69, 0x6f, 0xb8, 0x66, 0xdb, 0x9d, 0x70, 0x68, 0xec, 0xc5, 0x9f, 0x67, 0x8c,
	0xf3, 0x46, 0x43, 0x33, 0x0c, 0x7d, 0xf7, 0x66, 0x51, 0x52, 0xf9, 0xfd, 0x26, 0x14, 0x97, 0xe9,
	0x24, 0x0f, 0x89, 0x42, 0xf1, 0x3d, 0xb2, 0x07, 0x05, 0x4d, 0xd7, 0x7b, 0xba, 0x75, 0xa6, 0x75,
	0x35, 0xbd, 0xd5, 0x28, 0x2a, 0x33, 0xa8, 0xdb, 0xb3, 0xfa, 0xed, 0x73, 0xa3, 0xb8, 0x41, 0xf6,
	0x61, 0x2f, 0x81, 0x4c, 0xeb, 0xa5, 0xde, 0xd2, 0xba, 0x4d, 0xa3, 0xb8, 0x49, 0x1e, 0xc0, 0xbe,
	0x80, 0xdb, 0xbd, 0xd3, 0xd3, 0x0b, 0x21, 0xec, 0x9d, 0x77, 0x9b, 0xc5, 0x14, 0x79, 0x08, 0x25,
	0x21, 0x32, 0xfa, 0x5a, 0xc3, 0xac, 0x9b, 0x3d, 0xdd, 0x6a, 0x75, 0xad, 0xba, 0x60, 0x16, 0xb7,
	0xc8, 0x01, 0x90, 0x79, 0xd5, 0x96, 0x61, 0xb5, 0xeb, 0xdd, 0x62, 0x9a, 0x94, 0xe0, 0x40, 0xe0,
	0x6f, 0xf4, 0x5e, 0xf7, 0x4c, 0x4a, 0xcd, 0x8b, 0xbe, 0x56, 0xcc, 0x90, 0x23, 0x38, 0x5c, 0x95,
	0x19, 0x66, 0xdd, 0xd4, 0x8a, 0xd9, 0x99, 0xb0, 0xdf, 0xae, 0x5f, 0x68, 0x62, 0xa7, 0xe2, 0x67,
	0x31, 0x47, 0x4e, 0xe0, 0x81, 0x10, 0x9a, 0xbd, 0x9e, 0xd5, 0xa9, 0x77, 0x2f, 0x66, 0xdb, 0x32,
	0x8a, 0x40, 0x2a, 0xf0, 0x70, 0x79, 0xb3, 0xc6, 0x9b, 0x96, 0xd9, 0x78, 0xa5, 0x35, 0x2d, 0x53,
	0xab, 0x77, 0x8c, 0x62, 0x9e, 0x3c, 0x82, 0x23, 0xc1, 0x91, 0xc7, 0xb7, 0x7a, 0x5d, 0xeb, 0xb4,
	0x67, 0xbe, 0xb2, 0x8c, 0x56, 0x53, 0x33, 0x8a, 0xdb, 0xe4, 0x7d, 0x38, 0x59, 0x73, 0x62, 0xf3,
	0x15, 0x3f, 0x1a, 0x1e, 0xba, 0x50, 0xf9, 0x5d, 0x0e, 0xee, 0xaf, 0x0b, 0x25, 0xdc, 0x0f, 0x13,
	0x47, 0x47, 0x3f, 0x4c, 0x49, 0xe7, 0x9d, 0x4f, 0xf5, 0xd3, 0xa6, 0x2b, 0x23, 0x1f, 0x16, 0x96,
	0xdc, 0x25, 0xc8, 0x3a, 0xe3, 0xd0, 0x8e, 0x79, 0x6d, 0x29, 0x1e, 0xcf, 0x74, 0x4c, 0x7e, 0x31,
	0xdf, 0xb9, 0xa4, 0xd0, 0xb9, 0x76, 0x6a, 0x7c, 0x6d, 0xeb, 0x4c, 0xf6, 0x2f, 0x9f, 0x13, 0x31,
	0xac, 0x77, 0xb4, 0x4e, 0xaf, 0xa9, 0x59, 0xdd, 0x5e, 0x57, 0x9b, 0xeb, 0x6e, 0x7e, 0x32, 0x2b,
	0xb4, 0xd3, 0xf8, 0xc4, 0x8e, 0xd7, 0x46, 0xc2, 0x95, 0x52, 0xfb, 0x33, 0xc8, 0xc8, 0xfa, 0x13,
	0x7b, 0xb0, 0xfc, 0x8b, 0x93, 0xf5, 0x7a, 0x32, 0x7d, 0xeb, 0x09, 0x9b, 0xb4, 0xa1, 0x20, 0xec,
	0xc0, 0xc6, 0xf1, 0x80, 0xf9, 0x14, 0x0b, 0x08, 0xbe, 0x6b, 0x0d, 0xf5, 0x7a, 0x02, 0xfd, 0xfc,
	0xf0, 0xda, 0x5a, 0x00, 0xac, 0xf3, 0xe0, 0x3a, 0x60, 0x37, 0x81, 0xbe, 0xed, 0xcf, 0xa1, 0xa5,
	0x3f, 0x2b, 0x3f, 0xb4, 0x98, 0xe5, 0x2d, 0x23, 0x2f, 0xaf, 0x23, 0x69, 0x5b, 0x31, 0x20, 0x07,
	0x90, 0x76, 0xa8, 0x1d, 0x5f, 0x45, 0x32, 0xee, 0xca, 0x11, 0x51, 0x21, 0x63, 0x47, 0x91, 0x1b,
	0xc5, 0x49, 0xd5, 0x95, 0x0c, 0xf9, 0x3c, 0x6e, 0x4c, 0x7d, 0x61, 0xc7, 0x82, 0x2e, 0x06, 0x3c,
	0x08, 0xcb, 0x0a, 0x22, 0xf2, 0x58, 0x8c, 0xb6, 0x2a, 0xe8, 0x20, 0x20, 0xc3, 0x63, 0x71, 0xe9,
	0x1f, 0x29, 0xc8, 0x48, 0x23, 0x2d, 0x86, 0x50, 0x65, 0x29, 0x84, 0x3e, 0x82, 0x7c, 0x44, 0x43,
	0x97, 0x46, 0xa2, 0x2f, 0xce, 0xca, 0x2e, 0x16, 0x21, 0x6c, 0x8c, 0x67, 0x84, 0x69, 0xdd, 0x35,
	0x25, 0x60, 0x28, 0x7c, 0x67, 0xdf, 0x03, 0xef, 0xec, 0x7b, 0x5e, 0x42, 0x79, 0xa5, 0x7b, 0xa1,
	0x76, 0xc4, 0x02, 0x2b, 0x0e, 0xd9, 0xe8, 0x0a, 0x7b, 0x7d, 0xd1, 0x21, 0x1f, 0x2f, 0xb5, 0x30,
	0xc8, 0x32, 0x91, 0xf4, 0x8e, 0xfe, 0x69, 0xfb, 0x87, 0xf4, 0x4f, 0x85, 0x77, 0xf4, 0x4f, 0x4f,
	0x60, 0x37, 0x69, 0x4e, 0x93, 0xac, 0x20, 0xdc, 0x21, 0xe9, 0x59, 0x4d, 0x91, 0x1b, 0x9e, 0xc2,
	0xde, 0x02, 0x8f, 0x5b, 0x00, 0x3d, 0x24, 0xa7, 0xef, 0xce, 0x31, 0x79, 0xcb, 0xbe, 0xc2, 0xe5,
	0xad, 0xb8, 0xcc, 0x09, 0xf3, 0x5c, 0xde, 0x8c, 0x93, 0x32, 0x6c, 0x63, 0xdf, 0x9b, 0x2c, 0x2e,
	0x9c, 0x08, 0x7b, 0x61, 0xb9, 0xf2, 0x63, 0xd8, 0x99, 0x31, 0x70, 0xd9, 0xb4, 0xf8, 0x44, 0x90,
	0x70, 0x70, 0xcd, 0x05, 0x16, 0x2e, 0x98, 0x11, 0x6d, 0x7f, 0xc2, 0xe2, 0xab, 0x55, 0xfe, 0xb0,
	0x01, 0x87, 0x0d, 0xfe, 0x26, 0x75, 0xca, 0x5d, 0xae, 0xc9, 0x6e, 0x02, 0x8f, 0xd9, 0x4e, 0x2b,
	0x78, 0xcb, 0xc8, 0x8f, 0x60, 0x4b, 0x94, 0x68, 0x0a, 0xbe, 0xdf, 0x3b, 0x2a, 0x20, 0xc1, 0xe1,
	0xce, 0x1d, 0xbb, 0xb1, 0x27, 0xa2, 0x53, 0x4e, 0x17, 0x03, 0x52, 0x86, 0xbc, 0x43, 0xa3, 0x41,
	0xe8, 0x8e, 0xa6, 0xc1, 0x29, 0xa7, 0xcf, 0x43, 0x3c, 0xc5, 0x46, 0xee, 0xaf, 0x92, 0xfe, 0x05,
	0x7f, 0x73, 0x2c, 0xb6, 0x87, 0x22, 0xa5, 0xe7, 0x74, 0xfc, 0xcd, 0x8f, 0x43, 0xbf, 0xe1, 0xcf,
	0xc8, 0x62, 0x81, 0xe5, 0xb8, 0xd1, 0xb5, 0x2c, 0x57, 0xb6, 0x05, 0xda, 0x0b, 0x9a, 0x6e, 0x74,
	0x5d, 0xfa, 0x12, 0x72, 0xaf, 0xdc, 0xe1, 0x95, 0xe7, 0x0e, 0xaf, 0x62, 0x72, 0x0c, 0x39, 0x1e,
	0x2f, 0xa3, 0xd8, 0xf6, 0x47, 0xc9, 0x73, 0x9f, 0x02, 0xcb, 0x5b, 0xdb, 0x58, 0xd9, 0x5a, 0xe5,
	0x2f, 0x0a, 0x14, 0xf8, 0x91, 0x31, 0x77, 0xe2, 0xfb, 0x58, 0x4d, 0xec, 0xca, 0xba, 0xc4, 0xfe,
	0x21, 0xec, 0xc8, 0x2f, 0x76, 0x13, 0x1a, 0x46, 0xc9, 0xec, 0x05, 0xbd, 0x20, 0xd0, 0xd7, 0x02,
	0x24, 0xcf, 0xe1, 0xbe, 0xc8, 0xff, 0x4b, 0x73, 0x6e, 0xe2, 0x9c, 0x04, 0x65, 0xc6, 0xc2, 0xc4,
	0xdf, 0xf2, 0xc1, 0x4c, 0x85, 0x4c, 0x48, 0x87, 0x2e, 0x0b, 0x84, 0xd9, 0x0a, 0x7a, 0x32, 0xac,
	0xec, 0xc3, 0x3d, 0x2c, 0x4c, 0xed, 0x60, 0x40, 0xbd, 0xe9, 0x59, 0x2a, 0x7f, 0x4b, 0xc1, 0xfe,
	0xc2, 0xe9, 0xa6, 0xe5, 0xcb, 0x2f, 0x93, 0xba, 0x04, 0x13, 0x87, 0xac, 0x4b, 0x14, 0x0c, 0xc2,
	0x4f, 0x6a, 0x6b, 0x55, 0x6a, 0xf3, 0x08, 0x56, 0x23, 0x7d, 0xad, 0xdb, 0x6c, 0x75, 0xcf, 0x64,
	0x35, 0x32, 0x93, 0x90, 0x4f, 0x60, 0x3f, 0xc2, 0x66, 0xcc, 0x8a, 0x27, 0xd6, 0x68, 0x7c, 0xe9,
	0xb9, 0x03, 0xcb, 0x76, 0x9c, 0x50, 0x9a, 0x88, 0x08, 0xa1, 0x39, 0xe9, 0xa3, 0xa8, 0xee, 0x38,
	0x21, 0xf9, 0x14, 0x0e, 0xe6, 0x54, 0x42, 0xf1, 0xf9, 0x11, 0x75, 0x44, 0x40, 0xbe, 0x37, 0xd5,
	0x11, 0x32, 0x54, 0x7a, 0x0c, 0x3b, 0x73, 0x4a, 0x2c, 0x8c, 0xa5, 0x87, 0x6d, 0x4f, 0xc9, 0x2c,
	0x8c, 0x49, 0x0d, 0xee, 0xe1, 0x21, 0x97, 0x6e, 0x60, 0x0b, 0x6f, 0x60, 0x8f, 0x8b, 0x16, 0x2f,
	0xe0, 0xae, 0x2b, 0x4b, 0xdf, 0x79, 0x65, 0x3f, 0x83, 0x23, 0xa1, 0x11, 0x4f, 0xac, 0x71, 0xe0,
	0x7e, 0x3d, 0xe6, 0x8b, 0x0d, 0x42, 0x1a, 0x5b, 0x03, 0x9e, 0x91, 0xc5, 0x9b, 0x3c, 0x44, 0x8a,
	0x39, 0x39, 0x47, 0x82, 0x81, 0xf2, 0x06, 0x73, 0x68, 0xe5, 0x8f, 0x0a, 0xec, 0x2e, 0xd9, 0x96,
	0x97, 0x6e, 0xd2, 0xba, 0xc5, 0xf7, 0x48, 0x0e, 0xb6, 0x74, 0xad, 0xde, 0xbc, 0x28, 0x2a, 0xbc,
	0x9a, 0xe2, 0x39, 0xdc, 0xd0, 0xf4, 0xd7, 0x9a, 0xde, 0xed, 0x99, 0xa2, 0x0a, 0xdb, 0x20, 0xbb,
	0x90, 0x3f, 0xef, 0xd6, 0x5f, 0xd7, 0x5b, 0xed, 0xfa, 0x69, 0x5b, 0x2b, 0x6e, 0x92, 0x02, 0xe4,
	0x1a, 0xf5, 0x6e, 0x43, 0x6b, 0xb7, 0x35, 0x5e, 0xa5, 0x1d, 0xc2, 0xbd, 0x56, 0xb7, 0xd1, 0xeb,
	0xf4, 0xeb, 0x66, 0xeb, 0xb4, 0xad, 0xbd, 0xd6, 0x74, 0xa3, 0xd5, 0xeb, 0x16, 0xb7, 0x78, 0xc1,
	0xd4, 0x69, 0x19, 0x46, 0xab, 0x7b, 0xd6, 0xd6, 0xea, 0x67, 0xe7, 0x9a, 0x71, 0x7e, 0x6a, 0x34,
	0xf4, 0x56, 0xdf, 0xe4, 0xe2, 0x34, 0x2f, 0x11, 0xb1, 0xa6, 0x99, 0x2e, 0x95, 0xa9, 0xf4, 0x45,
	0x69, 0xdc, 0xb7, 0xc3, 0xf8, 0xb6, 0x4d, 0x6d, 0x87, 0x86, 0xd3, 0xcd, 0xf7, 0x43, 0xe6, 0x8f,
	0xfe, 0x6b, 0x83, 0x57, 0x7e, 0xbb, 0x09, 0xf7, 0x31, 0x3e, 0x9d, 0x86, 0xcc, 0x76, 0x06, 0x76,
	0x14, 0xd3, 0x10, 0x83, 0xd3, 0x3b, 0x92, 0xf9, 0x9a, 0x4f, 0xd0, 0x1b, 0x2b, 0x4f, 0x75, 0xae,
	0xc2, 0xdf, 0x9c, 0x55, 0xf8, 0xeb, 0x3f, 0xd7, 0xa6, 0xbe, 0xeb, 0xe7, 0xda, 0xad, 0x35, 0x9f,
	0x6b, 0x97, 0x12, 0x6f, 0x66, 0x25, 0xf1, 0x7e, 0x01, 0xc7, 0xe3, 0xd1, 0x80, 0xf9, 0x6e, 0x30,
	0xb4, 0x2e, 0x93, 0x93, 0x5a, 0xb3, 0xe8, 0x25, 0x52, 0x75, 0x29, 0xe1, 0x4c, 0x8d, 0x61, 0x4e,
	0xc3, 0x59, 0x15, 0x8a, 0xb6, 0xe7, 0xb1, 0x1b, 0xd1, 0x4c, 0x4c, 0x5c, 0x87, 0x32, 0xcc, 0xd6,
	0x59, 0x7d, 0x07, 0x71, 0x5e, 0xfb, 0xbf, 0xe6, 0x28, 0x7e, 0x18, 0x62, 0x0e, 0x15, 0x45, 0x42,
	0x5e, 0x7e, 0x18, 0x62, 0x0e, 0x4d, 0xbe, 0x9d, 0xa3, 0x10, 0xd3, 0xca, 0x36, 0x1e, 0x05, 0x85,
	0xfc, 0x28, 0xa7, 0x9f, 0xbd, 0x52, 0xbe, 0x7a, 0x3e, 0x74, 0xe3, 0xab, 0xf1, 0x65, 0x6d, 0xc0,
	0xfc, 0x67, 0x9f, 0x7c, 0x7a, 0xfd, 0x6c, 0xc8, 0x3e, 0x46, 0x0b, 0x7f, 0x1c, 0x52, 0xf1, 0xb2,
	0xa2, 0x67, 0xf8, 0x9f, 0x86, 0xcb, 0xf1, 0xdb, 0x67, 0x0e, 0x8b, 0xed, 0x17, 0xbf, 0x51, 0xde,
	0xfb, 0x4f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x4d, 0x5a, 0x68, 0x80, 0xd1, 0x18, 0x00, 0x00,
}
