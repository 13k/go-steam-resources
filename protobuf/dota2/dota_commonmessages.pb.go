// Code generated by protoc-gen-go. DO NOT EDIT.
// source: dota_commonmessages.proto

package dota2 // import "github.com/13k/go-steam-resources/protobuf/dota2"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type EDOTAStatPopupTypes int32

const (
	EDOTAStatPopupTypes_k_EDOTA_SPT_Textline  EDOTAStatPopupTypes = 0
	EDOTAStatPopupTypes_k_EDOTA_SPT_Basic     EDOTAStatPopupTypes = 1
	EDOTAStatPopupTypes_k_EDOTA_SPT_Poll      EDOTAStatPopupTypes = 2
	EDOTAStatPopupTypes_k_EDOTA_SPT_Grid      EDOTAStatPopupTypes = 3
	EDOTAStatPopupTypes_k_EDOTA_SPT_DualImage EDOTAStatPopupTypes = 4
	EDOTAStatPopupTypes_k_EDOTA_SPT_Movie     EDOTAStatPopupTypes = 5
)

var EDOTAStatPopupTypes_name = map[int32]string{
	0: "k_EDOTA_SPT_Textline",
	1: "k_EDOTA_SPT_Basic",
	2: "k_EDOTA_SPT_Poll",
	3: "k_EDOTA_SPT_Grid",
	4: "k_EDOTA_SPT_DualImage",
	5: "k_EDOTA_SPT_Movie",
}
var EDOTAStatPopupTypes_value = map[string]int32{
	"k_EDOTA_SPT_Textline":  0,
	"k_EDOTA_SPT_Basic":     1,
	"k_EDOTA_SPT_Poll":      2,
	"k_EDOTA_SPT_Grid":      3,
	"k_EDOTA_SPT_DualImage": 4,
	"k_EDOTA_SPT_Movie":     5,
}

func (x EDOTAStatPopupTypes) Enum() *EDOTAStatPopupTypes {
	p := new(EDOTAStatPopupTypes)
	*p = x
	return p
}
func (x EDOTAStatPopupTypes) String() string {
	return proto.EnumName(EDOTAStatPopupTypes_name, int32(x))
}
func (x *EDOTAStatPopupTypes) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EDOTAStatPopupTypes_value, data, "EDOTAStatPopupTypes")
	if err != nil {
		return err
	}
	*x = EDOTAStatPopupTypes(value)
	return nil
}
func (EDOTAStatPopupTypes) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_dota_commonmessages_d0ac5946922274ab, []int{0}
}

type DotaunitorderT int32

const (
	DotaunitorderT_DOTA_UNIT_ORDER_NONE                           DotaunitorderT = 0
	DotaunitorderT_DOTA_UNIT_ORDER_MOVE_TO_POSITION               DotaunitorderT = 1
	DotaunitorderT_DOTA_UNIT_ORDER_MOVE_TO_TARGET                 DotaunitorderT = 2
	DotaunitorderT_DOTA_UNIT_ORDER_ATTACK_MOVE                    DotaunitorderT = 3
	DotaunitorderT_DOTA_UNIT_ORDER_ATTACK_TARGET                  DotaunitorderT = 4
	DotaunitorderT_DOTA_UNIT_ORDER_CAST_POSITION                  DotaunitorderT = 5
	DotaunitorderT_DOTA_UNIT_ORDER_CAST_TARGET                    DotaunitorderT = 6
	DotaunitorderT_DOTA_UNIT_ORDER_CAST_TARGET_TREE               DotaunitorderT = 7
	DotaunitorderT_DOTA_UNIT_ORDER_CAST_NO_TARGET                 DotaunitorderT = 8
	DotaunitorderT_DOTA_UNIT_ORDER_CAST_TOGGLE                    DotaunitorderT = 9
	DotaunitorderT_DOTA_UNIT_ORDER_HOLD_POSITION                  DotaunitorderT = 10
	DotaunitorderT_DOTA_UNIT_ORDER_TRAIN_ABILITY                  DotaunitorderT = 11
	DotaunitorderT_DOTA_UNIT_ORDER_DROP_ITEM                      DotaunitorderT = 12
	DotaunitorderT_DOTA_UNIT_ORDER_GIVE_ITEM                      DotaunitorderT = 13
	DotaunitorderT_DOTA_UNIT_ORDER_PICKUP_ITEM                    DotaunitorderT = 14
	DotaunitorderT_DOTA_UNIT_ORDER_PICKUP_RUNE                    DotaunitorderT = 15
	DotaunitorderT_DOTA_UNIT_ORDER_PURCHASE_ITEM                  DotaunitorderT = 16
	DotaunitorderT_DOTA_UNIT_ORDER_SELL_ITEM                      DotaunitorderT = 17
	DotaunitorderT_DOTA_UNIT_ORDER_DISASSEMBLE_ITEM               DotaunitorderT = 18
	DotaunitorderT_DOTA_UNIT_ORDER_MOVE_ITEM                      DotaunitorderT = 19
	DotaunitorderT_DOTA_UNIT_ORDER_CAST_TOGGLE_AUTO               DotaunitorderT = 20
	DotaunitorderT_DOTA_UNIT_ORDER_STOP                           DotaunitorderT = 21
	DotaunitorderT_DOTA_UNIT_ORDER_TAUNT                          DotaunitorderT = 22
	DotaunitorderT_DOTA_UNIT_ORDER_BUYBACK                        DotaunitorderT = 23
	DotaunitorderT_DOTA_UNIT_ORDER_GLYPH                          DotaunitorderT = 24
	DotaunitorderT_DOTA_UNIT_ORDER_EJECT_ITEM_FROM_STASH          DotaunitorderT = 25
	DotaunitorderT_DOTA_UNIT_ORDER_CAST_RUNE                      DotaunitorderT = 26
	DotaunitorderT_DOTA_UNIT_ORDER_PING_ABILITY                   DotaunitorderT = 27
	DotaunitorderT_DOTA_UNIT_ORDER_MOVE_TO_DIRECTION              DotaunitorderT = 28
	DotaunitorderT_DOTA_UNIT_ORDER_PATROL                         DotaunitorderT = 29
	DotaunitorderT_DOTA_UNIT_ORDER_VECTOR_TARGET_POSITION         DotaunitorderT = 30
	DotaunitorderT_DOTA_UNIT_ORDER_RADAR                          DotaunitorderT = 31
	DotaunitorderT_DOTA_UNIT_ORDER_SET_ITEM_COMBINE_LOCK          DotaunitorderT = 32
	DotaunitorderT_DOTA_UNIT_ORDER_CONTINUE                       DotaunitorderT = 33
	DotaunitorderT_DOTA_UNIT_ORDER_VECTOR_TARGET_CANCELED         DotaunitorderT = 34
	DotaunitorderT_DOTA_UNIT_ORDER_CAST_RIVER_PAINT               DotaunitorderT = 35
	DotaunitorderT_DOTA_UNIT_ORDER_PREGAME_ADJUST_ITEM_ASSIGNMENT DotaunitorderT = 36
)

var DotaunitorderT_name = map[int32]string{
	0:  "DOTA_UNIT_ORDER_NONE",
	1:  "DOTA_UNIT_ORDER_MOVE_TO_POSITION",
	2:  "DOTA_UNIT_ORDER_MOVE_TO_TARGET",
	3:  "DOTA_UNIT_ORDER_ATTACK_MOVE",
	4:  "DOTA_UNIT_ORDER_ATTACK_TARGET",
	5:  "DOTA_UNIT_ORDER_CAST_POSITION",
	6:  "DOTA_UNIT_ORDER_CAST_TARGET",
	7:  "DOTA_UNIT_ORDER_CAST_TARGET_TREE",
	8:  "DOTA_UNIT_ORDER_CAST_NO_TARGET",
	9:  "DOTA_UNIT_ORDER_CAST_TOGGLE",
	10: "DOTA_UNIT_ORDER_HOLD_POSITION",
	11: "DOTA_UNIT_ORDER_TRAIN_ABILITY",
	12: "DOTA_UNIT_ORDER_DROP_ITEM",
	13: "DOTA_UNIT_ORDER_GIVE_ITEM",
	14: "DOTA_UNIT_ORDER_PICKUP_ITEM",
	15: "DOTA_UNIT_ORDER_PICKUP_RUNE",
	16: "DOTA_UNIT_ORDER_PURCHASE_ITEM",
	17: "DOTA_UNIT_ORDER_SELL_ITEM",
	18: "DOTA_UNIT_ORDER_DISASSEMBLE_ITEM",
	19: "DOTA_UNIT_ORDER_MOVE_ITEM",
	20: "DOTA_UNIT_ORDER_CAST_TOGGLE_AUTO",
	21: "DOTA_UNIT_ORDER_STOP",
	22: "DOTA_UNIT_ORDER_TAUNT",
	23: "DOTA_UNIT_ORDER_BUYBACK",
	24: "DOTA_UNIT_ORDER_GLYPH",
	25: "DOTA_UNIT_ORDER_EJECT_ITEM_FROM_STASH",
	26: "DOTA_UNIT_ORDER_CAST_RUNE",
	27: "DOTA_UNIT_ORDER_PING_ABILITY",
	28: "DOTA_UNIT_ORDER_MOVE_TO_DIRECTION",
	29: "DOTA_UNIT_ORDER_PATROL",
	30: "DOTA_UNIT_ORDER_VECTOR_TARGET_POSITION",
	31: "DOTA_UNIT_ORDER_RADAR",
	32: "DOTA_UNIT_ORDER_SET_ITEM_COMBINE_LOCK",
	33: "DOTA_UNIT_ORDER_CONTINUE",
	34: "DOTA_UNIT_ORDER_VECTOR_TARGET_CANCELED",
	35: "DOTA_UNIT_ORDER_CAST_RIVER_PAINT",
	36: "DOTA_UNIT_ORDER_PREGAME_ADJUST_ITEM_ASSIGNMENT",
}
var DotaunitorderT_value = map[string]int32{
	"DOTA_UNIT_ORDER_NONE":                           0,
	"DOTA_UNIT_ORDER_MOVE_TO_POSITION":               1,
	"DOTA_UNIT_ORDER_MOVE_TO_TARGET":                 2,
	"DOTA_UNIT_ORDER_ATTACK_MOVE":                    3,
	"DOTA_UNIT_ORDER_ATTACK_TARGET":                  4,
	"DOTA_UNIT_ORDER_CAST_POSITION":                  5,
	"DOTA_UNIT_ORDER_CAST_TARGET":                    6,
	"DOTA_UNIT_ORDER_CAST_TARGET_TREE":               7,
	"DOTA_UNIT_ORDER_CAST_NO_TARGET":                 8,
	"DOTA_UNIT_ORDER_CAST_TOGGLE":                    9,
	"DOTA_UNIT_ORDER_HOLD_POSITION":                  10,
	"DOTA_UNIT_ORDER_TRAIN_ABILITY":                  11,
	"DOTA_UNIT_ORDER_DROP_ITEM":                      12,
	"DOTA_UNIT_ORDER_GIVE_ITEM":                      13,
	"DOTA_UNIT_ORDER_PICKUP_ITEM":                    14,
	"DOTA_UNIT_ORDER_PICKUP_RUNE":                    15,
	"DOTA_UNIT_ORDER_PURCHASE_ITEM":                  16,
	"DOTA_UNIT_ORDER_SELL_ITEM":                      17,
	"DOTA_UNIT_ORDER_DISASSEMBLE_ITEM":               18,
	"DOTA_UNIT_ORDER_MOVE_ITEM":                      19,
	"DOTA_UNIT_ORDER_CAST_TOGGLE_AUTO":               20,
	"DOTA_UNIT_ORDER_STOP":                           21,
	"DOTA_UNIT_ORDER_TAUNT":                          22,
	"DOTA_UNIT_ORDER_BUYBACK":                        23,
	"DOTA_UNIT_ORDER_GLYPH":                          24,
	"DOTA_UNIT_ORDER_EJECT_ITEM_FROM_STASH":          25,
	"DOTA_UNIT_ORDER_CAST_RUNE":                      26,
	"DOTA_UNIT_ORDER_PING_ABILITY":                   27,
	"DOTA_UNIT_ORDER_MOVE_TO_DIRECTION":              28,
	"DOTA_UNIT_ORDER_PATROL":                         29,
	"DOTA_UNIT_ORDER_VECTOR_TARGET_POSITION":         30,
	"DOTA_UNIT_ORDER_RADAR":                          31,
	"DOTA_UNIT_ORDER_SET_ITEM_COMBINE_LOCK":          32,
	"DOTA_UNIT_ORDER_CONTINUE":                       33,
	"DOTA_UNIT_ORDER_VECTOR_TARGET_CANCELED":         34,
	"DOTA_UNIT_ORDER_CAST_RIVER_PAINT":               35,
	"DOTA_UNIT_ORDER_PREGAME_ADJUST_ITEM_ASSIGNMENT": 36,
}

func (x DotaunitorderT) Enum() *DotaunitorderT {
	p := new(DotaunitorderT)
	*p = x
	return p
}
func (x DotaunitorderT) String() string {
	return proto.EnumName(DotaunitorderT_name, int32(x))
}
func (x *DotaunitorderT) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(DotaunitorderT_value, data, "DotaunitorderT")
	if err != nil {
		return err
	}
	*x = DotaunitorderT(value)
	return nil
}
func (DotaunitorderT) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_dota_commonmessages_d0ac5946922274ab, []int{1}
}

type CDOTAMsg_LocationPing struct {
	X                    *int32   `protobuf:"varint,1,opt,name=x" json:"x,omitempty"`
	Y                    *int32   `protobuf:"varint,2,opt,name=y" json:"y,omitempty"`
	Target               *int32   `protobuf:"varint,3,opt,name=target" json:"target,omitempty"`
	DirectPing           *bool    `protobuf:"varint,4,opt,name=direct_ping,json=directPing" json:"direct_ping,omitempty"`
	Type                 *int32   `protobuf:"varint,5,opt,name=type" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CDOTAMsg_LocationPing) Reset()         { *m = CDOTAMsg_LocationPing{} }
func (m *CDOTAMsg_LocationPing) String() string { return proto.CompactTextString(m) }
func (*CDOTAMsg_LocationPing) ProtoMessage()    {}
func (*CDOTAMsg_LocationPing) Descriptor() ([]byte, []int) {
	return fileDescriptor_dota_commonmessages_d0ac5946922274ab, []int{0}
}
func (m *CDOTAMsg_LocationPing) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CDOTAMsg_LocationPing.Unmarshal(m, b)
}
func (m *CDOTAMsg_LocationPing) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CDOTAMsg_LocationPing.Marshal(b, m, deterministic)
}
func (dst *CDOTAMsg_LocationPing) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CDOTAMsg_LocationPing.Merge(dst, src)
}
func (m *CDOTAMsg_LocationPing) XXX_Size() int {
	return xxx_messageInfo_CDOTAMsg_LocationPing.Size(m)
}
func (m *CDOTAMsg_LocationPing) XXX_DiscardUnknown() {
	xxx_messageInfo_CDOTAMsg_LocationPing.DiscardUnknown(m)
}

var xxx_messageInfo_CDOTAMsg_LocationPing proto.InternalMessageInfo

func (m *CDOTAMsg_LocationPing) GetX() int32 {
	if m != nil && m.X != nil {
		return *m.X
	}
	return 0
}

func (m *CDOTAMsg_LocationPing) GetY() int32 {
	if m != nil && m.Y != nil {
		return *m.Y
	}
	return 0
}

func (m *CDOTAMsg_LocationPing) GetTarget() int32 {
	if m != nil && m.Target != nil {
		return *m.Target
	}
	return 0
}

func (m *CDOTAMsg_LocationPing) GetDirectPing() bool {
	if m != nil && m.DirectPing != nil {
		return *m.DirectPing
	}
	return false
}

func (m *CDOTAMsg_LocationPing) GetType() int32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

type CDOTAMsg_ItemAlert struct {
	X                    *int32   `protobuf:"varint,1,opt,name=x" json:"x,omitempty"`
	Y                    *int32   `protobuf:"varint,2,opt,name=y" json:"y,omitempty"`
	ItemAbilityId        *int32   `protobuf:"varint,3,opt,name=item_ability_id,json=itemAbilityId" json:"item_ability_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CDOTAMsg_ItemAlert) Reset()         { *m = CDOTAMsg_ItemAlert{} }
func (m *CDOTAMsg_ItemAlert) String() string { return proto.CompactTextString(m) }
func (*CDOTAMsg_ItemAlert) ProtoMessage()    {}
func (*CDOTAMsg_ItemAlert) Descriptor() ([]byte, []int) {
	return fileDescriptor_dota_commonmessages_d0ac5946922274ab, []int{1}
}
func (m *CDOTAMsg_ItemAlert) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CDOTAMsg_ItemAlert.Unmarshal(m, b)
}
func (m *CDOTAMsg_ItemAlert) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CDOTAMsg_ItemAlert.Marshal(b, m, deterministic)
}
func (dst *CDOTAMsg_ItemAlert) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CDOTAMsg_ItemAlert.Merge(dst, src)
}
func (m *CDOTAMsg_ItemAlert) XXX_Size() int {
	return xxx_messageInfo_CDOTAMsg_ItemAlert.Size(m)
}
func (m *CDOTAMsg_ItemAlert) XXX_DiscardUnknown() {
	xxx_messageInfo_CDOTAMsg_ItemAlert.DiscardUnknown(m)
}

var xxx_messageInfo_CDOTAMsg_ItemAlert proto.InternalMessageInfo

func (m *CDOTAMsg_ItemAlert) GetX() int32 {
	if m != nil && m.X != nil {
		return *m.X
	}
	return 0
}

func (m *CDOTAMsg_ItemAlert) GetY() int32 {
	if m != nil && m.Y != nil {
		return *m.Y
	}
	return 0
}

func (m *CDOTAMsg_ItemAlert) GetItemAbilityId() int32 {
	if m != nil && m.ItemAbilityId != nil {
		return *m.ItemAbilityId
	}
	return 0
}

type CDOTAMsg_MapLine struct {
	X                    *int32   `protobuf:"varint,1,opt,name=x" json:"x,omitempty"`
	Y                    *int32   `protobuf:"varint,2,opt,name=y" json:"y,omitempty"`
	Initial              *bool    `protobuf:"varint,3,opt,name=initial" json:"initial,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CDOTAMsg_MapLine) Reset()         { *m = CDOTAMsg_MapLine{} }
func (m *CDOTAMsg_MapLine) String() string { return proto.CompactTextString(m) }
func (*CDOTAMsg_MapLine) ProtoMessage()    {}
func (*CDOTAMsg_MapLine) Descriptor() ([]byte, []int) {
	return fileDescriptor_dota_commonmessages_d0ac5946922274ab, []int{2}
}
func (m *CDOTAMsg_MapLine) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CDOTAMsg_MapLine.Unmarshal(m, b)
}
func (m *CDOTAMsg_MapLine) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CDOTAMsg_MapLine.Marshal(b, m, deterministic)
}
func (dst *CDOTAMsg_MapLine) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CDOTAMsg_MapLine.Merge(dst, src)
}
func (m *CDOTAMsg_MapLine) XXX_Size() int {
	return xxx_messageInfo_CDOTAMsg_MapLine.Size(m)
}
func (m *CDOTAMsg_MapLine) XXX_DiscardUnknown() {
	xxx_messageInfo_CDOTAMsg_MapLine.DiscardUnknown(m)
}

var xxx_messageInfo_CDOTAMsg_MapLine proto.InternalMessageInfo

func (m *CDOTAMsg_MapLine) GetX() int32 {
	if m != nil && m.X != nil {
		return *m.X
	}
	return 0
}

func (m *CDOTAMsg_MapLine) GetY() int32 {
	if m != nil && m.Y != nil {
		return *m.Y
	}
	return 0
}

func (m *CDOTAMsg_MapLine) GetInitial() bool {
	if m != nil && m.Initial != nil {
		return *m.Initial
	}
	return false
}

type CDOTAMsg_WorldLine struct {
	X                    *int32   `protobuf:"varint,1,opt,name=x" json:"x,omitempty"`
	Y                    *int32   `protobuf:"varint,2,opt,name=y" json:"y,omitempty"`
	Z                    *int32   `protobuf:"varint,3,opt,name=z" json:"z,omitempty"`
	Initial              *bool    `protobuf:"varint,4,opt,name=initial" json:"initial,omitempty"`
	End                  *bool    `protobuf:"varint,5,opt,name=end" json:"end,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CDOTAMsg_WorldLine) Reset()         { *m = CDOTAMsg_WorldLine{} }
func (m *CDOTAMsg_WorldLine) String() string { return proto.CompactTextString(m) }
func (*CDOTAMsg_WorldLine) ProtoMessage()    {}
func (*CDOTAMsg_WorldLine) Descriptor() ([]byte, []int) {
	return fileDescriptor_dota_commonmessages_d0ac5946922274ab, []int{3}
}
func (m *CDOTAMsg_WorldLine) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CDOTAMsg_WorldLine.Unmarshal(m, b)
}
func (m *CDOTAMsg_WorldLine) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CDOTAMsg_WorldLine.Marshal(b, m, deterministic)
}
func (dst *CDOTAMsg_WorldLine) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CDOTAMsg_WorldLine.Merge(dst, src)
}
func (m *CDOTAMsg_WorldLine) XXX_Size() int {
	return xxx_messageInfo_CDOTAMsg_WorldLine.Size(m)
}
func (m *CDOTAMsg_WorldLine) XXX_DiscardUnknown() {
	xxx_messageInfo_CDOTAMsg_WorldLine.DiscardUnknown(m)
}

var xxx_messageInfo_CDOTAMsg_WorldLine proto.InternalMessageInfo

func (m *CDOTAMsg_WorldLine) GetX() int32 {
	if m != nil && m.X != nil {
		return *m.X
	}
	return 0
}

func (m *CDOTAMsg_WorldLine) GetY() int32 {
	if m != nil && m.Y != nil {
		return *m.Y
	}
	return 0
}

func (m *CDOTAMsg_WorldLine) GetZ() int32 {
	if m != nil && m.Z != nil {
		return *m.Z
	}
	return 0
}

func (m *CDOTAMsg_WorldLine) GetInitial() bool {
	if m != nil && m.Initial != nil {
		return *m.Initial
	}
	return false
}

func (m *CDOTAMsg_WorldLine) GetEnd() bool {
	if m != nil && m.End != nil {
		return *m.End
	}
	return false
}

type CDOTAMsg_SendStatPopup struct {
	Style                *EDOTAStatPopupTypes `protobuf:"varint,1,opt,name=style,enum=EDOTAStatPopupTypes,def=0" json:"style,omitempty"`
	StatStrings          []string             `protobuf:"bytes,2,rep,name=stat_strings,json=statStrings" json:"stat_strings,omitempty"`
	StatImages           []int32              `protobuf:"varint,3,rep,name=stat_images,json=statImages" json:"stat_images,omitempty"`
	StatImageTypes       []int32              `protobuf:"varint,4,rep,name=stat_image_types,json=statImageTypes" json:"stat_image_types,omitempty"`
	Duration             *float32             `protobuf:"fixed32,5,opt,name=duration" json:"duration,omitempty"`
	UseHtml              *bool                `protobuf:"varint,6,opt,name=use_html,json=useHtml" json:"use_html,omitempty"`
	MovieName            *string              `protobuf:"bytes,7,opt,name=movie_name,json=movieName" json:"movie_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *CDOTAMsg_SendStatPopup) Reset()         { *m = CDOTAMsg_SendStatPopup{} }
func (m *CDOTAMsg_SendStatPopup) String() string { return proto.CompactTextString(m) }
func (*CDOTAMsg_SendStatPopup) ProtoMessage()    {}
func (*CDOTAMsg_SendStatPopup) Descriptor() ([]byte, []int) {
	return fileDescriptor_dota_commonmessages_d0ac5946922274ab, []int{4}
}
func (m *CDOTAMsg_SendStatPopup) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CDOTAMsg_SendStatPopup.Unmarshal(m, b)
}
func (m *CDOTAMsg_SendStatPopup) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CDOTAMsg_SendStatPopup.Marshal(b, m, deterministic)
}
func (dst *CDOTAMsg_SendStatPopup) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CDOTAMsg_SendStatPopup.Merge(dst, src)
}
func (m *CDOTAMsg_SendStatPopup) XXX_Size() int {
	return xxx_messageInfo_CDOTAMsg_SendStatPopup.Size(m)
}
func (m *CDOTAMsg_SendStatPopup) XXX_DiscardUnknown() {
	xxx_messageInfo_CDOTAMsg_SendStatPopup.DiscardUnknown(m)
}

var xxx_messageInfo_CDOTAMsg_SendStatPopup proto.InternalMessageInfo

const Default_CDOTAMsg_SendStatPopup_Style EDOTAStatPopupTypes = EDOTAStatPopupTypes_k_EDOTA_SPT_Textline

func (m *CDOTAMsg_SendStatPopup) GetStyle() EDOTAStatPopupTypes {
	if m != nil && m.Style != nil {
		return *m.Style
	}
	return Default_CDOTAMsg_SendStatPopup_Style
}

func (m *CDOTAMsg_SendStatPopup) GetStatStrings() []string {
	if m != nil {
		return m.StatStrings
	}
	return nil
}

func (m *CDOTAMsg_SendStatPopup) GetStatImages() []int32 {
	if m != nil {
		return m.StatImages
	}
	return nil
}

func (m *CDOTAMsg_SendStatPopup) GetStatImageTypes() []int32 {
	if m != nil {
		return m.StatImageTypes
	}
	return nil
}

func (m *CDOTAMsg_SendStatPopup) GetDuration() float32 {
	if m != nil && m.Duration != nil {
		return *m.Duration
	}
	return 0
}

func (m *CDOTAMsg_SendStatPopup) GetUseHtml() bool {
	if m != nil && m.UseHtml != nil {
		return *m.UseHtml
	}
	return false
}

func (m *CDOTAMsg_SendStatPopup) GetMovieName() string {
	if m != nil && m.MovieName != nil {
		return *m.MovieName
	}
	return ""
}

type CDOTAMsg_DismissAllStatPopups struct {
	TimeDelay            *float32 `protobuf:"fixed32,1,opt,name=time_delay,json=timeDelay" json:"time_delay,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CDOTAMsg_DismissAllStatPopups) Reset()         { *m = CDOTAMsg_DismissAllStatPopups{} }
func (m *CDOTAMsg_DismissAllStatPopups) String() string { return proto.CompactTextString(m) }
func (*CDOTAMsg_DismissAllStatPopups) ProtoMessage()    {}
func (*CDOTAMsg_DismissAllStatPopups) Descriptor() ([]byte, []int) {
	return fileDescriptor_dota_commonmessages_d0ac5946922274ab, []int{5}
}
func (m *CDOTAMsg_DismissAllStatPopups) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CDOTAMsg_DismissAllStatPopups.Unmarshal(m, b)
}
func (m *CDOTAMsg_DismissAllStatPopups) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CDOTAMsg_DismissAllStatPopups.Marshal(b, m, deterministic)
}
func (dst *CDOTAMsg_DismissAllStatPopups) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CDOTAMsg_DismissAllStatPopups.Merge(dst, src)
}
func (m *CDOTAMsg_DismissAllStatPopups) XXX_Size() int {
	return xxx_messageInfo_CDOTAMsg_DismissAllStatPopups.Size(m)
}
func (m *CDOTAMsg_DismissAllStatPopups) XXX_DiscardUnknown() {
	xxx_messageInfo_CDOTAMsg_DismissAllStatPopups.DiscardUnknown(m)
}

var xxx_messageInfo_CDOTAMsg_DismissAllStatPopups proto.InternalMessageInfo

func (m *CDOTAMsg_DismissAllStatPopups) GetTimeDelay() float32 {
	if m != nil && m.TimeDelay != nil {
		return *m.TimeDelay
	}
	return 0
}

type CDOTAMsg_CoachHUDPing struct {
	X                    *uint32  `protobuf:"varint,1,opt,name=x" json:"x,omitempty"`
	Y                    *uint32  `protobuf:"varint,2,opt,name=y" json:"y,omitempty"`
	Tgtpath              *string  `protobuf:"bytes,3,opt,name=tgtpath" json:"tgtpath,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CDOTAMsg_CoachHUDPing) Reset()         { *m = CDOTAMsg_CoachHUDPing{} }
func (m *CDOTAMsg_CoachHUDPing) String() string { return proto.CompactTextString(m) }
func (*CDOTAMsg_CoachHUDPing) ProtoMessage()    {}
func (*CDOTAMsg_CoachHUDPing) Descriptor() ([]byte, []int) {
	return fileDescriptor_dota_commonmessages_d0ac5946922274ab, []int{6}
}
func (m *CDOTAMsg_CoachHUDPing) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CDOTAMsg_CoachHUDPing.Unmarshal(m, b)
}
func (m *CDOTAMsg_CoachHUDPing) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CDOTAMsg_CoachHUDPing.Marshal(b, m, deterministic)
}
func (dst *CDOTAMsg_CoachHUDPing) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CDOTAMsg_CoachHUDPing.Merge(dst, src)
}
func (m *CDOTAMsg_CoachHUDPing) XXX_Size() int {
	return xxx_messageInfo_CDOTAMsg_CoachHUDPing.Size(m)
}
func (m *CDOTAMsg_CoachHUDPing) XXX_DiscardUnknown() {
	xxx_messageInfo_CDOTAMsg_CoachHUDPing.DiscardUnknown(m)
}

var xxx_messageInfo_CDOTAMsg_CoachHUDPing proto.InternalMessageInfo

func (m *CDOTAMsg_CoachHUDPing) GetX() uint32 {
	if m != nil && m.X != nil {
		return *m.X
	}
	return 0
}

func (m *CDOTAMsg_CoachHUDPing) GetY() uint32 {
	if m != nil && m.Y != nil {
		return *m.Y
	}
	return 0
}

func (m *CDOTAMsg_CoachHUDPing) GetTgtpath() string {
	if m != nil && m.Tgtpath != nil {
		return *m.Tgtpath
	}
	return ""
}

type CDOTAMsg_UnitOrder struct {
	Issuer               *int32          `protobuf:"zigzag32,1,opt,name=issuer,def=-1" json:"issuer,omitempty"`
	OrderType            *DotaunitorderT `protobuf:"varint,2,opt,name=order_type,json=orderType,enum=DotaunitorderT,def=0" json:"order_type,omitempty"`
	Units                []int32         `protobuf:"varint,3,rep,name=units" json:"units,omitempty"`
	TargetIndex          *int32          `protobuf:"varint,4,opt,name=target_index,json=targetIndex" json:"target_index,omitempty"`
	AbilityIndex         *int32          `protobuf:"varint,5,opt,name=ability_index,json=abilityIndex" json:"ability_index,omitempty"`
	Position             *CMsgVector     `protobuf:"bytes,6,opt,name=position" json:"position,omitempty"`
	Queue                *bool           `protobuf:"varint,7,opt,name=queue" json:"queue,omitempty"`
	SequenceNumber       *int32          `protobuf:"varint,8,opt,name=sequence_number,json=sequenceNumber" json:"sequence_number,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *CDOTAMsg_UnitOrder) Reset()         { *m = CDOTAMsg_UnitOrder{} }
func (m *CDOTAMsg_UnitOrder) String() string { return proto.CompactTextString(m) }
func (*CDOTAMsg_UnitOrder) ProtoMessage()    {}
func (*CDOTAMsg_UnitOrder) Descriptor() ([]byte, []int) {
	return fileDescriptor_dota_commonmessages_d0ac5946922274ab, []int{7}
}
func (m *CDOTAMsg_UnitOrder) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CDOTAMsg_UnitOrder.Unmarshal(m, b)
}
func (m *CDOTAMsg_UnitOrder) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CDOTAMsg_UnitOrder.Marshal(b, m, deterministic)
}
func (dst *CDOTAMsg_UnitOrder) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CDOTAMsg_UnitOrder.Merge(dst, src)
}
func (m *CDOTAMsg_UnitOrder) XXX_Size() int {
	return xxx_messageInfo_CDOTAMsg_UnitOrder.Size(m)
}
func (m *CDOTAMsg_UnitOrder) XXX_DiscardUnknown() {
	xxx_messageInfo_CDOTAMsg_UnitOrder.DiscardUnknown(m)
}

var xxx_messageInfo_CDOTAMsg_UnitOrder proto.InternalMessageInfo

const Default_CDOTAMsg_UnitOrder_Issuer int32 = -1
const Default_CDOTAMsg_UnitOrder_OrderType DotaunitorderT = DotaunitorderT_DOTA_UNIT_ORDER_NONE

func (m *CDOTAMsg_UnitOrder) GetIssuer() int32 {
	if m != nil && m.Issuer != nil {
		return *m.Issuer
	}
	return Default_CDOTAMsg_UnitOrder_Issuer
}

func (m *CDOTAMsg_UnitOrder) GetOrderType() DotaunitorderT {
	if m != nil && m.OrderType != nil {
		return *m.OrderType
	}
	return Default_CDOTAMsg_UnitOrder_OrderType
}

func (m *CDOTAMsg_UnitOrder) GetUnits() []int32 {
	if m != nil {
		return m.Units
	}
	return nil
}

func (m *CDOTAMsg_UnitOrder) GetTargetIndex() int32 {
	if m != nil && m.TargetIndex != nil {
		return *m.TargetIndex
	}
	return 0
}

func (m *CDOTAMsg_UnitOrder) GetAbilityIndex() int32 {
	if m != nil && m.AbilityIndex != nil {
		return *m.AbilityIndex
	}
	return 0
}

func (m *CDOTAMsg_UnitOrder) GetPosition() *CMsgVector {
	if m != nil {
		return m.Position
	}
	return nil
}

func (m *CDOTAMsg_UnitOrder) GetQueue() bool {
	if m != nil && m.Queue != nil {
		return *m.Queue
	}
	return false
}

func (m *CDOTAMsg_UnitOrder) GetSequenceNumber() int32 {
	if m != nil && m.SequenceNumber != nil {
		return *m.SequenceNumber
	}
	return 0
}

func init() {
	proto.RegisterType((*CDOTAMsg_LocationPing)(nil), "CDOTAMsg_LocationPing")
	proto.RegisterType((*CDOTAMsg_ItemAlert)(nil), "CDOTAMsg_ItemAlert")
	proto.RegisterType((*CDOTAMsg_MapLine)(nil), "CDOTAMsg_MapLine")
	proto.RegisterType((*CDOTAMsg_WorldLine)(nil), "CDOTAMsg_WorldLine")
	proto.RegisterType((*CDOTAMsg_SendStatPopup)(nil), "CDOTAMsg_SendStatPopup")
	proto.RegisterType((*CDOTAMsg_DismissAllStatPopups)(nil), "CDOTAMsg_DismissAllStatPopups")
	proto.RegisterType((*CDOTAMsg_CoachHUDPing)(nil), "CDOTAMsg_CoachHUDPing")
	proto.RegisterType((*CDOTAMsg_UnitOrder)(nil), "CDOTAMsg_UnitOrder")
	proto.RegisterEnum("EDOTAStatPopupTypes", EDOTAStatPopupTypes_name, EDOTAStatPopupTypes_value)
	proto.RegisterEnum("DotaunitorderT", DotaunitorderT_name, DotaunitorderT_value)
}

func init() {
	proto.RegisterFile("dota_commonmessages.proto", fileDescriptor_dota_commonmessages_d0ac5946922274ab)
}

var fileDescriptor_dota_commonmessages_d0ac5946922274ab = []byte{
	// 1221 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x56, 0xcd, 0x72, 0xdb, 0x36,
	0x17, 0x0d, 0x25, 0xcb, 0x91, 0xe0, 0x3f, 0x04, 0xb1, 0x1d, 0xda, 0x89, 0x13, 0x59, 0xf9, 0xf3,
	0x97, 0x99, 0xd8, 0x5f, 0xdc, 0x45, 0x67, 0xb2, 0xe8, 0x94, 0xa2, 0x58, 0x89, 0xb1, 0x44, 0x6a,
	0x40, 0xc8, 0x6d, 0xba, 0xc1, 0xd0, 0x12, 0x2a, 0xa3, 0xe1, 0x8f, 0x42, 0x82, 0xad, 0x9d, 0x55,
	0x5e, 0xa0, 0xaf, 0xd0, 0x55, 0x5f, 0xa3, 0xef, 0xd6, 0x21, 0x48, 0x33, 0x8a, 0x4c, 0x3b, 0x3b,
	0xe2, 0xdc, 0x83, 0x7b, 0xcf, 0xbd, 0xf7, 0x40, 0x23, 0xb0, 0x33, 0x09, 0x85, 0x4b, 0xc7, 0xa1,
	0xef, 0x87, 0x81, 0xcf, 0xe2, 0xd8, 0x9d, 0xb2, 0xf8, 0x70, 0x16, 0x85, 0x22, 0xdc, 0xdd, 0x0e,
	0x98, 0xf8, 0x33, 0x8c, 0x3e, 0x9c, 0xb9, 0x31, 0x13, 0x97, 0xb3, 0x2b, 0xbc, 0xf5, 0x59, 0x01,
	0x5b, 0x7a, 0xc7, 0x26, 0xda, 0x20, 0x9e, 0xd2, 0x7e, 0x38, 0x76, 0x05, 0x0f, 0x83, 0x21, 0x0f,
	0xa6, 0x68, 0x15, 0x28, 0x17, 0xaa, 0xd2, 0x54, 0x0e, 0x6a, 0x58, 0xb9, 0x48, 0x4f, 0x97, 0x6a,
	0x25, 0x3b, 0x5d, 0xa2, 0x6d, 0xb0, 0x2c, 0xdc, 0x68, 0xca, 0x84, 0x5a, 0x95, 0x50, 0x7e, 0x42,
	0x4f, 0xc0, 0xca, 0x84, 0x47, 0x6c, 0x2c, 0xe8, 0x8c, 0x07, 0x53, 0x75, 0xa9, 0xa9, 0x1c, 0xd4,
	0x31, 0xc8, 0x20, 0x99, 0x14, 0x81, 0xa5, 0xb4, 0xba, 0x5a, 0x93, 0xd7, 0xe4, 0x77, 0xeb, 0x17,
	0x80, 0x0a, 0x05, 0xa6, 0x60, 0xbe, 0xe6, 0xb1, 0x48, 0xdc, 0x5a, 0xfe, 0x05, 0xd8, 0xe0, 0x82,
	0xf9, 0xd4, 0x3d, 0xe3, 0x1e, 0x17, 0x97, 0x94, 0x4f, 0x72, 0x1d, 0x6b, 0x29, 0xac, 0x65, 0xa8,
	0x39, 0x69, 0xf5, 0x00, 0x2c, 0x32, 0x0f, 0xdc, 0x59, 0x9f, 0x07, 0xec, 0xd6, 0xbc, 0x2a, 0xb8,
	0xcb, 0x03, 0x2e, 0xb8, 0xeb, 0xc9, 0x7c, 0x75, 0x7c, 0x75, 0x6c, 0xfd, 0x3e, 0xa7, 0xf1, 0xe7,
	0x30, 0xf2, 0x26, 0xdf, 0xcc, 0xb5, 0x0a, 0x94, 0x4f, 0xb9, 0x2a, 0xe5, 0xd3, 0x7c, 0xe6, 0xa5,
	0xaf, 0x32, 0x23, 0x08, 0xaa, 0x2c, 0x98, 0xc8, 0x81, 0xd4, 0x71, 0xfa, 0xd9, 0xfa, 0xbb, 0x02,
	0xb6, 0x8b, 0x62, 0x0e, 0x0b, 0x26, 0x8e, 0x70, 0xc5, 0x30, 0x9c, 0x25, 0x33, 0xf4, 0x23, 0xa8,
	0xc5, 0xe2, 0xd2, 0x63, 0xb2, 0xe8, 0xfa, 0xf1, 0xe6, 0xa1, 0x91, 0xf2, 0x8a, 0x38, 0x49, 0x17,
	0xfb, 0x76, 0xf3, 0x03, 0x95, 0x30, 0x75, 0x86, 0x84, 0x12, 0x76, 0x21, 0x3c, 0x1e, 0x30, 0x9c,
	0x5d, 0x44, 0xfb, 0x60, 0x35, 0x16, 0xae, 0xa0, 0xb1, 0x88, 0x78, 0x30, 0x8d, 0xd5, 0x4a, 0xb3,
	0x7a, 0xd0, 0xc0, 0x2b, 0x29, 0xe6, 0x64, 0x50, 0xba, 0x44, 0x49, 0xe1, 0x7e, 0xea, 0x1f, 0xb5,
	0xda, 0xac, 0x1e, 0xd4, 0x30, 0x48, 0x21, 0x53, 0x22, 0xe8, 0x00, 0xc0, 0x2f, 0x04, 0x2a, 0xdd,
	0xa4, 0x2e, 0x49, 0xd6, 0x7a, 0xc1, 0x92, 0x52, 0xd0, 0x2e, 0xa8, 0x4f, 0x92, 0x48, 0x7a, 0x4a,
	0x76, 0x58, 0xc1, 0xc5, 0x19, 0xed, 0x80, 0x7a, 0x12, 0x33, 0x7a, 0x2e, 0x7c, 0x4f, 0x5d, 0xce,
	0x66, 0x92, 0xc4, 0xac, 0x27, 0x7c, 0x0f, 0xed, 0x01, 0xe0, 0x87, 0x7f, 0x70, 0x46, 0x03, 0xd7,
	0x67, 0xea, 0xdd, 0xa6, 0x72, 0xd0, 0xc0, 0x0d, 0x89, 0x58, 0xae, 0xcf, 0x5a, 0x3f, 0x80, 0xbd,
	0x62, 0x3e, 0x1d, 0x1e, 0xfb, 0x3c, 0x8e, 0x35, 0xcf, 0x2b, 0xa6, 0x10, 0xa7, 0xf7, 0x05, 0xf7,
	0x19, 0x9d, 0x30, 0xcf, 0xbd, 0x94, 0xb3, 0xaa, 0xe0, 0x46, 0x8a, 0x74, 0x52, 0xa0, 0x35, 0x98,
	0xb3, 0xbc, 0x1e, 0xba, 0xe3, 0xf3, 0xde, 0xa8, 0xf3, 0xb5, 0xe5, 0xd7, 0xbe, 0xda, 0xe7, 0x5a,
	0xee, 0x0d, 0x31, 0x15, 0x33, 0x57, 0x9c, 0xcb, 0xad, 0x36, 0xf0, 0xd5, 0xb1, 0xf5, 0x6f, 0x65,
	0xce, 0x1c, 0xa3, 0x80, 0x0b, 0x3b, 0x9a, 0xb0, 0x08, 0xed, 0x82, 0x65, 0x1e, 0xc7, 0x09, 0x8b,
	0x64, 0xc6, 0x7b, 0x6f, 0x2b, 0xaf, 0xdf, 0xe0, 0x1c, 0x41, 0x06, 0x00, 0x61, 0x4a, 0x92, 0xc3,
	0x93, 0x35, 0xd6, 0x8f, 0xe1, 0x61, 0xfa, 0x7a, 0x93, 0x80, 0x8b, 0x3c, 0xf4, 0x76, 0x53, 0x6e,
	0x71, 0x64, 0x99, 0x84, 0xda, 0xb8, 0x63, 0x60, 0x6a, 0xd9, 0x96, 0x81, 0x1b, 0x32, 0x9c, 0xce,
	0x17, 0x6d, 0x82, 0x5a, 0xca, 0xbf, 0xda, 0x51, 0x76, 0x48, 0x57, 0x9c, 0x3d, 0x47, 0xca, 0x83,
	0x09, 0xbb, 0x90, 0x86, 0xab, 0xe1, 0x95, 0x0c, 0x33, 0x53, 0x08, 0x3d, 0x05, 0x6b, 0xc5, 0xdb,
	0x91, 0x9c, 0xec, 0x3d, 0xae, 0xe6, 0x60, 0x46, 0x7a, 0x09, 0xea, 0xb3, 0x30, 0xe6, 0x72, 0x79,
	0xe9, 0x82, 0x56, 0x8e, 0x57, 0x0e, 0xf5, 0x41, 0x3c, 0x3d, 0x65, 0x63, 0x11, 0x46, 0xb8, 0x08,
	0xa6, 0x32, 0x3e, 0x26, 0x2c, 0xc9, 0x36, 0x55, 0xc7, 0xd9, 0x01, 0xbd, 0x04, 0x1b, 0x31, 0xfb,
	0x98, 0xb0, 0x60, 0xcc, 0x68, 0x90, 0xf8, 0x67, 0x2c, 0x52, 0xeb, 0xb2, 0xca, 0xfa, 0x15, 0x6c,
	0x49, 0xf4, 0xd5, 0x3f, 0x0a, 0xb8, 0x5f, 0xe2, 0x63, 0xa4, 0x82, 0x52, 0x27, 0xc3, 0x3b, 0x68,
	0x0b, 0xdc, 0x9b, 0x8f, 0xb4, 0xdd, 0x98, 0x8f, 0xa1, 0x82, 0x36, 0x01, 0x9c, 0x87, 0x87, 0xa1,
	0xe7, 0xc1, 0xca, 0x22, 0xda, 0x8d, 0xf8, 0x04, 0x56, 0xd1, 0x0e, 0xd8, 0x9a, 0x47, 0x3b, 0x89,
	0xeb, 0x49, 0xdf, 0xc2, 0xa5, 0xc5, 0xec, 0x83, 0xd4, 0x77, 0xb0, 0xf6, 0xea, 0x2f, 0x00, 0x36,
	0x16, 0x36, 0x94, 0x4a, 0x2c, 0xdb, 0x11, 0xbc, 0x83, 0x9e, 0x81, 0xe6, 0x62, 0x64, 0x60, 0x9f,
	0x1a, 0x94, 0xd8, 0x74, 0x68, 0x3b, 0x26, 0x31, 0x6d, 0x0b, 0x2a, 0xa8, 0x05, 0x1e, 0xdf, 0xc4,
	0x22, 0x1a, 0xee, 0x1a, 0x04, 0x56, 0xd0, 0x13, 0xf0, 0x70, 0x91, 0xa3, 0x11, 0xa2, 0xe9, 0x27,
	0x92, 0x0a, 0xab, 0x68, 0x1f, 0xec, 0xdd, 0x40, 0xc8, 0x73, 0x2c, 0x95, 0x51, 0x74, 0xcd, 0x21,
	0x5f, 0xa4, 0xd4, 0xca, 0xca, 0x48, 0x4a, 0x9e, 0x63, 0xb9, 0xac, 0xa3, 0x39, 0x02, 0x25, 0xd8,
	0x30, 0xe0, 0xdd, 0xb2, 0x8e, 0x24, 0xcb, 0x2a, 0x3a, 0xaa, 0xdf, 0x5c, 0xca, 0xee, 0x76, 0xfb,
	0x06, 0x6c, 0x94, 0xc9, 0xed, 0xd9, 0xfd, 0xce, 0x17, 0xb9, 0xa0, 0x8c, 0x42, 0xb0, 0x66, 0x5a,
	0x54, 0x6b, 0x9b, 0x7d, 0x93, 0xbc, 0x87, 0x2b, 0x68, 0x0f, 0xec, 0x2c, 0x52, 0x3a, 0xd8, 0x1e,
	0x52, 0x93, 0x18, 0x03, 0xb8, 0x5a, 0x16, 0xee, 0x9a, 0xa7, 0x46, 0x16, 0x5e, 0x2b, 0x13, 0x39,
	0x34, 0xf5, 0x93, 0x51, 0x7e, 0x7f, 0xfd, 0x16, 0x02, 0x1e, 0x59, 0x06, 0xdc, 0x28, 0x93, 0x38,
	0x1c, 0x61, 0xbd, 0xa7, 0x39, 0x79, 0x11, 0x58, 0xa6, 0xc1, 0x31, 0xfa, 0xfd, 0x2c, 0x7c, 0xaf,
	0x6c, 0xe4, 0x1d, 0xd3, 0xd1, 0x1c, 0xc7, 0x18, 0xb4, 0xfb, 0x79, 0x12, 0x54, 0x96, 0x44, 0x9a,
	0x48, 0x86, 0xef, 0xdf, 0xbc, 0x37, 0x39, 0x6d, 0xaa, 0x8d, 0x88, 0x0d, 0x37, 0xcb, 0x9c, 0xec,
	0x10, 0x7b, 0x08, 0xb7, 0xd2, 0x97, 0x72, 0x6d, 0xd2, 0xda, 0xc8, 0x22, 0x70, 0x1b, 0x3d, 0x04,
	0x0f, 0x16, 0x43, 0xed, 0xd1, 0xfb, 0xb6, 0xa6, 0x9f, 0xc0, 0x07, 0x65, 0xf7, 0xba, 0xfd, 0xf7,
	0xc3, 0x1e, 0x54, 0xd1, 0xff, 0xc0, 0xf3, 0xc5, 0x90, 0xf1, 0xce, 0xd0, 0x89, 0x94, 0x4c, 0x7f,
	0xc2, 0xf6, 0x80, 0x3a, 0x44, 0x73, 0x7a, 0x70, 0xa7, 0xac, 0x39, 0xa9, 0x5e, 0xce, 0x78, 0x17,
	0x35, 0xc1, 0xa3, 0xeb, 0x4b, 0xb0, 0xba, 0x85, 0x0b, 0x1e, 0xa2, 0xe7, 0x60, 0xff, 0xa6, 0x27,
	0xd6, 0x31, 0xb1, 0xa1, 0x4b, 0x3f, 0x3d, 0x42, 0xbb, 0x60, 0xfb, 0x5a, 0x22, 0x8d, 0x60, 0xbb,
	0x0f, 0xf7, 0xd0, 0x2b, 0xf0, 0x62, 0x31, 0x76, 0x6a, 0xe8, 0xc4, 0xc6, 0x57, 0xde, 0x2f, 0x7c,
	0xf9, 0xb8, 0xac, 0x6b, 0xac, 0x75, 0x34, 0x0c, 0x9f, 0x94, 0x75, 0xed, 0x18, 0x79, 0xcf, 0xba,
	0x3d, 0x68, 0x9b, 0x96, 0x41, 0xfb, 0xb6, 0x7e, 0x02, 0x9b, 0xe8, 0x11, 0x50, 0xaf, 0x75, 0x6d,
	0x5b, 0xc4, 0xb4, 0x46, 0x06, 0xdc, 0xff, 0xb6, 0x1e, 0x5d, 0xb3, 0x74, 0xa3, 0x6f, 0x74, 0x60,
	0xeb, 0xc6, 0xed, 0x63, 0xf3, 0x54, 0xb6, 0x68, 0x5a, 0x04, 0x3e, 0x45, 0xc7, 0xe0, 0xf0, 0x5a,
	0xf7, 0xd8, 0xe8, 0x6a, 0x03, 0x83, 0x6a, 0x9d, 0x77, 0x23, 0x27, 0x57, 0xa9, 0x39, 0x8e, 0xd9,
	0xb5, 0x06, 0x86, 0x45, 0xe0, 0xb3, 0xf6, 0xf7, 0x3d, 0xe5, 0xd7, 0xff, 0x4f, 0xb9, 0x38, 0x4f,
	0xce, 0x0e, 0xc7, 0xa1, 0x7f, 0xf4, 0xe6, 0xbb, 0x0f, 0x47, 0xd3, 0xf0, 0x75, 0x2c, 0x98, 0xeb,
	0xbf, 0x8e, 0x58, 0x1c, 0x26, 0xd1, 0x98, 0xc5, 0x47, 0xf2, 0x6f, 0xe6, 0x59, 0xf2, 0xdb, 0x51,
	0xfa, 0xdb, 0x79, 0xfc, 0x59, 0xb9, 0xf3, 0x5f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x1a, 0x48, 0x5b,
	0xa7, 0xa6, 0x0a, 0x00, 0x00,
}
