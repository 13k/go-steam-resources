// Code generated by protoc-gen-go. DO NOT EDIT.
// source: gcsystemmsgs.proto

package dota2 // import "github.com/13k/go-steam-resources/protobuf/dota2"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type EGCSystemMsg int32

const (
	EGCSystemMsg_k_EGCMsgInvalid                                  EGCSystemMsg = 0
	EGCSystemMsg_k_EGCMsgMulti                                    EGCSystemMsg = 1
	EGCSystemMsg_k_EGCMsgGenericReply                             EGCSystemMsg = 10
	EGCSystemMsg_k_EGCMsgSystemBase                               EGCSystemMsg = 50
	EGCSystemMsg_k_EGCMsgAchievementAwarded                       EGCSystemMsg = 51
	EGCSystemMsg_k_EGCMsgConCommand                               EGCSystemMsg = 52
	EGCSystemMsg_k_EGCMsgStartPlaying                             EGCSystemMsg = 53
	EGCSystemMsg_k_EGCMsgStopPlaying                              EGCSystemMsg = 54
	EGCSystemMsg_k_EGCMsgStartGameserver                          EGCSystemMsg = 55
	EGCSystemMsg_k_EGCMsgStopGameserver                           EGCSystemMsg = 56
	EGCSystemMsg_k_EGCMsgWGRequest                                EGCSystemMsg = 57
	EGCSystemMsg_k_EGCMsgWGResponse                               EGCSystemMsg = 58
	EGCSystemMsg_k_EGCMsgGetUserGameStatsSchema                   EGCSystemMsg = 59
	EGCSystemMsg_k_EGCMsgGetUserGameStatsSchemaResponse           EGCSystemMsg = 60
	EGCSystemMsg_k_EGCMsgGetUserStatsDEPRECATED                   EGCSystemMsg = 61
	EGCSystemMsg_k_EGCMsgGetUserStatsResponse                     EGCSystemMsg = 62
	EGCSystemMsg_k_EGCMsgAppInfoUpdated                           EGCSystemMsg = 63
	EGCSystemMsg_k_EGCMsgValidateSession                          EGCSystemMsg = 64
	EGCSystemMsg_k_EGCMsgValidateSessionResponse                  EGCSystemMsg = 65
	EGCSystemMsg_k_EGCMsgLookupAccountFromInput                   EGCSystemMsg = 66
	EGCSystemMsg_k_EGCMsgSendHTTPRequest                          EGCSystemMsg = 67
	EGCSystemMsg_k_EGCMsgSendHTTPRequestResponse                  EGCSystemMsg = 68
	EGCSystemMsg_k_EGCMsgPreTestSetup                             EGCSystemMsg = 69
	EGCSystemMsg_k_EGCMsgRecordSupportAction                      EGCSystemMsg = 70
	EGCSystemMsg_k_EGCMsgGetAccountDetails_DEPRECATED             EGCSystemMsg = 71
	EGCSystemMsg_k_EGCMsgReceiveInterAppMessage                   EGCSystemMsg = 73
	EGCSystemMsg_k_EGCMsgFindAccounts                             EGCSystemMsg = 74
	EGCSystemMsg_k_EGCMsgPostAlert                                EGCSystemMsg = 75
	EGCSystemMsg_k_EGCMsgGetLicenses                              EGCSystemMsg = 76
	EGCSystemMsg_k_EGCMsgGetUserStats                             EGCSystemMsg = 77
	EGCSystemMsg_k_EGCMsgGetCommands                              EGCSystemMsg = 78
	EGCSystemMsg_k_EGCMsgGetCommandsResponse                      EGCSystemMsg = 79
	EGCSystemMsg_k_EGCMsgAddFreeLicense                           EGCSystemMsg = 80
	EGCSystemMsg_k_EGCMsgAddFreeLicenseResponse                   EGCSystemMsg = 81
	EGCSystemMsg_k_EGCMsgGetIPLocation                            EGCSystemMsg = 82
	EGCSystemMsg_k_EGCMsgGetIPLocationResponse                    EGCSystemMsg = 83
	EGCSystemMsg_k_EGCMsgSystemStatsSchema                        EGCSystemMsg = 84
	EGCSystemMsg_k_EGCMsgGetSystemStats                           EGCSystemMsg = 85
	EGCSystemMsg_k_EGCMsgGetSystemStatsResponse                   EGCSystemMsg = 86
	EGCSystemMsg_k_EGCMsgSendEmail                                EGCSystemMsg = 87
	EGCSystemMsg_k_EGCMsgSendEmailResponse                        EGCSystemMsg = 88
	EGCSystemMsg_k_EGCMsgGetEmailTemplate                         EGCSystemMsg = 89
	EGCSystemMsg_k_EGCMsgGetEmailTemplateResponse                 EGCSystemMsg = 90
	EGCSystemMsg_k_EGCMsgGrantGuestPass                           EGCSystemMsg = 91
	EGCSystemMsg_k_EGCMsgGrantGuestPassResponse                   EGCSystemMsg = 92
	EGCSystemMsg_k_EGCMsgGetAccountDetails                        EGCSystemMsg = 93
	EGCSystemMsg_k_EGCMsgGetAccountDetailsResponse                EGCSystemMsg = 94
	EGCSystemMsg_k_EGCMsgGetPersonaNames                          EGCSystemMsg = 95
	EGCSystemMsg_k_EGCMsgGetPersonaNamesResponse                  EGCSystemMsg = 96
	EGCSystemMsg_k_EGCMsgMultiplexMsg                             EGCSystemMsg = 97
	EGCSystemMsg_k_EGCMsgWebAPIRegisterInterfaces                 EGCSystemMsg = 101
	EGCSystemMsg_k_EGCMsgWebAPIJobRequest                         EGCSystemMsg = 102
	EGCSystemMsg_k_EGCMsgWebAPIJobRequestHttpResponse             EGCSystemMsg = 104
	EGCSystemMsg_k_EGCMsgWebAPIJobRequestForwardResponse          EGCSystemMsg = 105
	EGCSystemMsg_k_EGCMsgMemCachedGet                             EGCSystemMsg = 200
	EGCSystemMsg_k_EGCMsgMemCachedGetResponse                     EGCSystemMsg = 201
	EGCSystemMsg_k_EGCMsgMemCachedSet                             EGCSystemMsg = 202
	EGCSystemMsg_k_EGCMsgMemCachedDelete                          EGCSystemMsg = 203
	EGCSystemMsg_k_EGCMsgMemCachedStats                           EGCSystemMsg = 204
	EGCSystemMsg_k_EGCMsgMemCachedStatsResponse                   EGCSystemMsg = 205
	EGCSystemMsg_k_EGCMsgSQLStats                                 EGCSystemMsg = 210
	EGCSystemMsg_k_EGCMsgSQLStatsResponse                         EGCSystemMsg = 211
	EGCSystemMsg_k_EGCMsgMasterSetDirectory                       EGCSystemMsg = 220
	EGCSystemMsg_k_EGCMsgMasterSetDirectoryResponse               EGCSystemMsg = 221
	EGCSystemMsg_k_EGCMsgMasterSetWebAPIRouting                   EGCSystemMsg = 222
	EGCSystemMsg_k_EGCMsgMasterSetWebAPIRoutingResponse           EGCSystemMsg = 223
	EGCSystemMsg_k_EGCMsgMasterSetClientMsgRouting                EGCSystemMsg = 224
	EGCSystemMsg_k_EGCMsgMasterSetClientMsgRoutingResponse        EGCSystemMsg = 225
	EGCSystemMsg_k_EGCMsgSetOptions                               EGCSystemMsg = 226
	EGCSystemMsg_k_EGCMsgSetOptionsResponse                       EGCSystemMsg = 227
	EGCSystemMsg_k_EGCMsgSystemBase2                              EGCSystemMsg = 500
	EGCSystemMsg_k_EGCMsgGetPurchaseTrustStatus                   EGCSystemMsg = 501
	EGCSystemMsg_k_EGCMsgGetPurchaseTrustStatusResponse           EGCSystemMsg = 502
	EGCSystemMsg_k_EGCMsgUpdateSession                            EGCSystemMsg = 503
	EGCSystemMsg_k_EGCMsgGCAccountVacStatusChange                 EGCSystemMsg = 504
	EGCSystemMsg_k_EGCMsgCheckFriendship                          EGCSystemMsg = 505
	EGCSystemMsg_k_EGCMsgCheckFriendshipResponse                  EGCSystemMsg = 506
	EGCSystemMsg_k_EGCMsgGetPartnerAccountLink                    EGCSystemMsg = 507
	EGCSystemMsg_k_EGCMsgGetPartnerAccountLinkResponse            EGCSystemMsg = 508
	EGCSystemMsg_k_EGCMsgVSReportedSuspiciousActivity             EGCSystemMsg = 509
	EGCSystemMsg_k_EGCMsgDPPartnerMicroTxns                       EGCSystemMsg = 512
	EGCSystemMsg_k_EGCMsgDPPartnerMicroTxnsResponse               EGCSystemMsg = 513
	EGCSystemMsg_k_EGCMsgGetIPASN                                 EGCSystemMsg = 514
	EGCSystemMsg_k_EGCMsgGetIPASNResponse                         EGCSystemMsg = 515
	EGCSystemMsg_k_EGCMsgGetAppFriendsList                        EGCSystemMsg = 516
	EGCSystemMsg_k_EGCMsgGetAppFriendsListResponse                EGCSystemMsg = 517
	EGCSystemMsg_k_EGCMsgVacVerificationChange                    EGCSystemMsg = 518
	EGCSystemMsg_k_EGCMsgAccountPhoneNumberChange                 EGCSystemMsg = 519
	EGCSystemMsg_k_EGCMsgAccountTwoFactorChange                   EGCSystemMsg = 520
	EGCSystemMsg_k_EGCMsgCheckClanMembership                      EGCSystemMsg = 521
	EGCSystemMsg_k_EGCMsgCheckClanMembershipResponse              EGCSystemMsg = 522
	EGCSystemMsg_k_EGCMsgCompressedMsgToClient                    EGCSystemMsg = 523
	EGCSystemMsg_k_EGCMsgGetGamePersonalDataCategoriesRequest     EGCSystemMsg = 524
	EGCSystemMsg_k_EGCMsgGetGamePersonalDataCategoriesResponse    EGCSystemMsg = 525
	EGCSystemMsg_k_EGCMsgGetGamePersonalDataEntriesRequest        EGCSystemMsg = 526
	EGCSystemMsg_k_EGCMsgGetGamePersonalDataEntriesResponse       EGCSystemMsg = 527
	EGCSystemMsg_k_EGCMsgTerminateGamePersonalDataEntriesRequest  EGCSystemMsg = 528
	EGCSystemMsg_k_EGCMsgTerminateGamePersonalDataEntriesResponse EGCSystemMsg = 529
)

var EGCSystemMsg_name = map[int32]string{
	0:   "k_EGCMsgInvalid",
	1:   "k_EGCMsgMulti",
	10:  "k_EGCMsgGenericReply",
	50:  "k_EGCMsgSystemBase",
	51:  "k_EGCMsgAchievementAwarded",
	52:  "k_EGCMsgConCommand",
	53:  "k_EGCMsgStartPlaying",
	54:  "k_EGCMsgStopPlaying",
	55:  "k_EGCMsgStartGameserver",
	56:  "k_EGCMsgStopGameserver",
	57:  "k_EGCMsgWGRequest",
	58:  "k_EGCMsgWGResponse",
	59:  "k_EGCMsgGetUserGameStatsSchema",
	60:  "k_EGCMsgGetUserGameStatsSchemaResponse",
	61:  "k_EGCMsgGetUserStatsDEPRECATED",
	62:  "k_EGCMsgGetUserStatsResponse",
	63:  "k_EGCMsgAppInfoUpdated",
	64:  "k_EGCMsgValidateSession",
	65:  "k_EGCMsgValidateSessionResponse",
	66:  "k_EGCMsgLookupAccountFromInput",
	67:  "k_EGCMsgSendHTTPRequest",
	68:  "k_EGCMsgSendHTTPRequestResponse",
	69:  "k_EGCMsgPreTestSetup",
	70:  "k_EGCMsgRecordSupportAction",
	71:  "k_EGCMsgGetAccountDetails_DEPRECATED",
	73:  "k_EGCMsgReceiveInterAppMessage",
	74:  "k_EGCMsgFindAccounts",
	75:  "k_EGCMsgPostAlert",
	76:  "k_EGCMsgGetLicenses",
	77:  "k_EGCMsgGetUserStats",
	78:  "k_EGCMsgGetCommands",
	79:  "k_EGCMsgGetCommandsResponse",
	80:  "k_EGCMsgAddFreeLicense",
	81:  "k_EGCMsgAddFreeLicenseResponse",
	82:  "k_EGCMsgGetIPLocation",
	83:  "k_EGCMsgGetIPLocationResponse",
	84:  "k_EGCMsgSystemStatsSchema",
	85:  "k_EGCMsgGetSystemStats",
	86:  "k_EGCMsgGetSystemStatsResponse",
	87:  "k_EGCMsgSendEmail",
	88:  "k_EGCMsgSendEmailResponse",
	89:  "k_EGCMsgGetEmailTemplate",
	90:  "k_EGCMsgGetEmailTemplateResponse",
	91:  "k_EGCMsgGrantGuestPass",
	92:  "k_EGCMsgGrantGuestPassResponse",
	93:  "k_EGCMsgGetAccountDetails",
	94:  "k_EGCMsgGetAccountDetailsResponse",
	95:  "k_EGCMsgGetPersonaNames",
	96:  "k_EGCMsgGetPersonaNamesResponse",
	97:  "k_EGCMsgMultiplexMsg",
	101: "k_EGCMsgWebAPIRegisterInterfaces",
	102: "k_EGCMsgWebAPIJobRequest",
	104: "k_EGCMsgWebAPIJobRequestHttpResponse",
	105: "k_EGCMsgWebAPIJobRequestForwardResponse",
	200: "k_EGCMsgMemCachedGet",
	201: "k_EGCMsgMemCachedGetResponse",
	202: "k_EGCMsgMemCachedSet",
	203: "k_EGCMsgMemCachedDelete",
	204: "k_EGCMsgMemCachedStats",
	205: "k_EGCMsgMemCachedStatsResponse",
	210: "k_EGCMsgSQLStats",
	211: "k_EGCMsgSQLStatsResponse",
	220: "k_EGCMsgMasterSetDirectory",
	221: "k_EGCMsgMasterSetDirectoryResponse",
	222: "k_EGCMsgMasterSetWebAPIRouting",
	223: "k_EGCMsgMasterSetWebAPIRoutingResponse",
	224: "k_EGCMsgMasterSetClientMsgRouting",
	225: "k_EGCMsgMasterSetClientMsgRoutingResponse",
	226: "k_EGCMsgSetOptions",
	227: "k_EGCMsgSetOptionsResponse",
	500: "k_EGCMsgSystemBase2",
	501: "k_EGCMsgGetPurchaseTrustStatus",
	502: "k_EGCMsgGetPurchaseTrustStatusResponse",
	503: "k_EGCMsgUpdateSession",
	504: "k_EGCMsgGCAccountVacStatusChange",
	505: "k_EGCMsgCheckFriendship",
	506: "k_EGCMsgCheckFriendshipResponse",
	507: "k_EGCMsgGetPartnerAccountLink",
	508: "k_EGCMsgGetPartnerAccountLinkResponse",
	509: "k_EGCMsgVSReportedSuspiciousActivity",
	512: "k_EGCMsgDPPartnerMicroTxns",
	513: "k_EGCMsgDPPartnerMicroTxnsResponse",
	514: "k_EGCMsgGetIPASN",
	515: "k_EGCMsgGetIPASNResponse",
	516: "k_EGCMsgGetAppFriendsList",
	517: "k_EGCMsgGetAppFriendsListResponse",
	518: "k_EGCMsgVacVerificationChange",
	519: "k_EGCMsgAccountPhoneNumberChange",
	520: "k_EGCMsgAccountTwoFactorChange",
	521: "k_EGCMsgCheckClanMembership",
	522: "k_EGCMsgCheckClanMembershipResponse",
	523: "k_EGCMsgCompressedMsgToClient",
	524: "k_EGCMsgGetGamePersonalDataCategoriesRequest",
	525: "k_EGCMsgGetGamePersonalDataCategoriesResponse",
	526: "k_EGCMsgGetGamePersonalDataEntriesRequest",
	527: "k_EGCMsgGetGamePersonalDataEntriesResponse",
	528: "k_EGCMsgTerminateGamePersonalDataEntriesRequest",
	529: "k_EGCMsgTerminateGamePersonalDataEntriesResponse",
}
var EGCSystemMsg_value = map[string]int32{
	"k_EGCMsgInvalid":                                  0,
	"k_EGCMsgMulti":                                    1,
	"k_EGCMsgGenericReply":                             10,
	"k_EGCMsgSystemBase":                               50,
	"k_EGCMsgAchievementAwarded":                       51,
	"k_EGCMsgConCommand":                               52,
	"k_EGCMsgStartPlaying":                             53,
	"k_EGCMsgStopPlaying":                              54,
	"k_EGCMsgStartGameserver":                          55,
	"k_EGCMsgStopGameserver":                           56,
	"k_EGCMsgWGRequest":                                57,
	"k_EGCMsgWGResponse":                               58,
	"k_EGCMsgGetUserGameStatsSchema":                   59,
	"k_EGCMsgGetUserGameStatsSchemaResponse":           60,
	"k_EGCMsgGetUserStatsDEPRECATED":                   61,
	"k_EGCMsgGetUserStatsResponse":                     62,
	"k_EGCMsgAppInfoUpdated":                           63,
	"k_EGCMsgValidateSession":                          64,
	"k_EGCMsgValidateSessionResponse":                  65,
	"k_EGCMsgLookupAccountFromInput":                   66,
	"k_EGCMsgSendHTTPRequest":                          67,
	"k_EGCMsgSendHTTPRequestResponse":                  68,
	"k_EGCMsgPreTestSetup":                             69,
	"k_EGCMsgRecordSupportAction":                      70,
	"k_EGCMsgGetAccountDetails_DEPRECATED":             71,
	"k_EGCMsgReceiveInterAppMessage":                   73,
	"k_EGCMsgFindAccounts":                             74,
	"k_EGCMsgPostAlert":                                75,
	"k_EGCMsgGetLicenses":                              76,
	"k_EGCMsgGetUserStats":                             77,
	"k_EGCMsgGetCommands":                              78,
	"k_EGCMsgGetCommandsResponse":                      79,
	"k_EGCMsgAddFreeLicense":                           80,
	"k_EGCMsgAddFreeLicenseResponse":                   81,
	"k_EGCMsgGetIPLocation":                            82,
	"k_EGCMsgGetIPLocationResponse":                    83,
	"k_EGCMsgSystemStatsSchema":                        84,
	"k_EGCMsgGetSystemStats":                           85,
	"k_EGCMsgGetSystemStatsResponse":                   86,
	"k_EGCMsgSendEmail":                                87,
	"k_EGCMsgSendEmailResponse":                        88,
	"k_EGCMsgGetEmailTemplate":                         89,
	"k_EGCMsgGetEmailTemplateResponse":                 90,
	"k_EGCMsgGrantGuestPass":                           91,
	"k_EGCMsgGrantGuestPassResponse":                   92,
	"k_EGCMsgGetAccountDetails":                        93,
	"k_EGCMsgGetAccountDetailsResponse":                94,
	"k_EGCMsgGetPersonaNames":                          95,
	"k_EGCMsgGetPersonaNamesResponse":                  96,
	"k_EGCMsgMultiplexMsg":                             97,
	"k_EGCMsgWebAPIRegisterInterfaces":                 101,
	"k_EGCMsgWebAPIJobRequest":                         102,
	"k_EGCMsgWebAPIJobRequestHttpResponse":             104,
	"k_EGCMsgWebAPIJobRequestForwardResponse":          105,
	"k_EGCMsgMemCachedGet":                             200,
	"k_EGCMsgMemCachedGetResponse":                     201,
	"k_EGCMsgMemCachedSet":                             202,
	"k_EGCMsgMemCachedDelete":                          203,
	"k_EGCMsgMemCachedStats":                           204,
	"k_EGCMsgMemCachedStatsResponse":                   205,
	"k_EGCMsgSQLStats":                                 210,
	"k_EGCMsgSQLStatsResponse":                         211,
	"k_EGCMsgMasterSetDirectory":                       220,
	"k_EGCMsgMasterSetDirectoryResponse":               221,
	"k_EGCMsgMasterSetWebAPIRouting":                   222,
	"k_EGCMsgMasterSetWebAPIRoutingResponse":           223,
	"k_EGCMsgMasterSetClientMsgRouting":                224,
	"k_EGCMsgMasterSetClientMsgRoutingResponse":        225,
	"k_EGCMsgSetOptions":                               226,
	"k_EGCMsgSetOptionsResponse":                       227,
	"k_EGCMsgSystemBase2":                              500,
	"k_EGCMsgGetPurchaseTrustStatus":                   501,
	"k_EGCMsgGetPurchaseTrustStatusResponse":           502,
	"k_EGCMsgUpdateSession":                            503,
	"k_EGCMsgGCAccountVacStatusChange":                 504,
	"k_EGCMsgCheckFriendship":                          505,
	"k_EGCMsgCheckFriendshipResponse":                  506,
	"k_EGCMsgGetPartnerAccountLink":                    507,
	"k_EGCMsgGetPartnerAccountLinkResponse":            508,
	"k_EGCMsgVSReportedSuspiciousActivity":             509,
	"k_EGCMsgDPPartnerMicroTxns":                       512,
	"k_EGCMsgDPPartnerMicroTxnsResponse":               513,
	"k_EGCMsgGetIPASN":                                 514,
	"k_EGCMsgGetIPASNResponse":                         515,
	"k_EGCMsgGetAppFriendsList":                        516,
	"k_EGCMsgGetAppFriendsListResponse":                517,
	"k_EGCMsgVacVerificationChange":                    518,
	"k_EGCMsgAccountPhoneNumberChange":                 519,
	"k_EGCMsgAccountTwoFactorChange":                   520,
	"k_EGCMsgCheckClanMembership":                      521,
	"k_EGCMsgCheckClanMembershipResponse":              522,
	"k_EGCMsgCompressedMsgToClient":                    523,
	"k_EGCMsgGetGamePersonalDataCategoriesRequest":     524,
	"k_EGCMsgGetGamePersonalDataCategoriesResponse":    525,
	"k_EGCMsgGetGamePersonalDataEntriesRequest":        526,
	"k_EGCMsgGetGamePersonalDataEntriesResponse":       527,
	"k_EGCMsgTerminateGamePersonalDataEntriesRequest":  528,
	"k_EGCMsgTerminateGamePersonalDataEntriesResponse": 529,
}

func (x EGCSystemMsg) Enum() *EGCSystemMsg {
	p := new(EGCSystemMsg)
	*p = x
	return p
}
func (x EGCSystemMsg) String() string {
	return proto.EnumName(EGCSystemMsg_name, int32(x))
}
func (x *EGCSystemMsg) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EGCSystemMsg_value, data, "EGCSystemMsg")
	if err != nil {
		return err
	}
	*x = EGCSystemMsg(value)
	return nil
}
func (EGCSystemMsg) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_gcsystemmsgs_0fadd4a5a0dd192c, []int{0}
}

type ESOMsg int32

const (
	ESOMsg_k_ESOMsg_Create                   ESOMsg = 21
	ESOMsg_k_ESOMsg_Update                   ESOMsg = 22
	ESOMsg_k_ESOMsg_Destroy                  ESOMsg = 23
	ESOMsg_k_ESOMsg_CacheSubscribed          ESOMsg = 24
	ESOMsg_k_ESOMsg_CacheUnsubscribed        ESOMsg = 25
	ESOMsg_k_ESOMsg_UpdateMultiple           ESOMsg = 26
	ESOMsg_k_ESOMsg_CacheSubscriptionRefresh ESOMsg = 28
	ESOMsg_k_ESOMsg_CacheSubscribedUpToDate  ESOMsg = 29
)

var ESOMsg_name = map[int32]string{
	21: "k_ESOMsg_Create",
	22: "k_ESOMsg_Update",
	23: "k_ESOMsg_Destroy",
	24: "k_ESOMsg_CacheSubscribed",
	25: "k_ESOMsg_CacheUnsubscribed",
	26: "k_ESOMsg_UpdateMultiple",
	28: "k_ESOMsg_CacheSubscriptionRefresh",
	29: "k_ESOMsg_CacheSubscribedUpToDate",
}
var ESOMsg_value = map[string]int32{
	"k_ESOMsg_Create":                   21,
	"k_ESOMsg_Update":                   22,
	"k_ESOMsg_Destroy":                  23,
	"k_ESOMsg_CacheSubscribed":          24,
	"k_ESOMsg_CacheUnsubscribed":        25,
	"k_ESOMsg_UpdateMultiple":           26,
	"k_ESOMsg_CacheSubscriptionRefresh": 28,
	"k_ESOMsg_CacheSubscribedUpToDate":  29,
}

func (x ESOMsg) Enum() *ESOMsg {
	p := new(ESOMsg)
	*p = x
	return p
}
func (x ESOMsg) String() string {
	return proto.EnumName(ESOMsg_name, int32(x))
}
func (x *ESOMsg) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ESOMsg_value, data, "ESOMsg")
	if err != nil {
		return err
	}
	*x = ESOMsg(value)
	return nil
}
func (ESOMsg) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_gcsystemmsgs_0fadd4a5a0dd192c, []int{1}
}

type EGCBaseClientMsg int32

const (
	EGCBaseClientMsg_k_EMsgGCPingRequest                EGCBaseClientMsg = 3001
	EGCBaseClientMsg_k_EMsgGCPingResponse               EGCBaseClientMsg = 3002
	EGCBaseClientMsg_k_EMsgGCToClientPollConvarRequest  EGCBaseClientMsg = 3003
	EGCBaseClientMsg_k_EMsgGCToClientPollConvarResponse EGCBaseClientMsg = 3004
	EGCBaseClientMsg_k_EMsgGCClientWelcome              EGCBaseClientMsg = 4004
	EGCBaseClientMsg_k_EMsgGCServerWelcome              EGCBaseClientMsg = 4005
	EGCBaseClientMsg_k_EMsgGCClientHello                EGCBaseClientMsg = 4006
	EGCBaseClientMsg_k_EMsgGCServerHello                EGCBaseClientMsg = 4007
	EGCBaseClientMsg_k_EMsgGCClientConnectionStatus     EGCBaseClientMsg = 4009
	EGCBaseClientMsg_k_EMsgGCServerConnectionStatus     EGCBaseClientMsg = 4010
)

var EGCBaseClientMsg_name = map[int32]string{
	3001: "k_EMsgGCPingRequest",
	3002: "k_EMsgGCPingResponse",
	3003: "k_EMsgGCToClientPollConvarRequest",
	3004: "k_EMsgGCToClientPollConvarResponse",
	4004: "k_EMsgGCClientWelcome",
	4005: "k_EMsgGCServerWelcome",
	4006: "k_EMsgGCClientHello",
	4007: "k_EMsgGCServerHello",
	4009: "k_EMsgGCClientConnectionStatus",
	4010: "k_EMsgGCServerConnectionStatus",
}
var EGCBaseClientMsg_value = map[string]int32{
	"k_EMsgGCPingRequest":                3001,
	"k_EMsgGCPingResponse":               3002,
	"k_EMsgGCToClientPollConvarRequest":  3003,
	"k_EMsgGCToClientPollConvarResponse": 3004,
	"k_EMsgGCClientWelcome":              4004,
	"k_EMsgGCServerWelcome":              4005,
	"k_EMsgGCClientHello":                4006,
	"k_EMsgGCServerHello":                4007,
	"k_EMsgGCClientConnectionStatus":     4009,
	"k_EMsgGCServerConnectionStatus":     4010,
}

func (x EGCBaseClientMsg) Enum() *EGCBaseClientMsg {
	p := new(EGCBaseClientMsg)
	*p = x
	return p
}
func (x EGCBaseClientMsg) String() string {
	return proto.EnumName(EGCBaseClientMsg_name, int32(x))
}
func (x *EGCBaseClientMsg) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EGCBaseClientMsg_value, data, "EGCBaseClientMsg")
	if err != nil {
		return err
	}
	*x = EGCBaseClientMsg(value)
	return nil
}
func (EGCBaseClientMsg) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_gcsystemmsgs_0fadd4a5a0dd192c, []int{2}
}

type EGCToGCMsg int32

const (
	EGCToGCMsg_k_EGCToGCMsgMasterAck                      EGCToGCMsg = 150
	EGCToGCMsg_k_EGCToGCMsgMasterAckResponse              EGCToGCMsg = 151
	EGCToGCMsg_k_EGCToGCMsgRouted                         EGCToGCMsg = 152
	EGCToGCMsg_k_EGCToGCMsgRoutedReply                    EGCToGCMsg = 153
	EGCToGCMsg_k_EMsgGCUpdateSubGCSessionInfo             EGCToGCMsg = 154
	EGCToGCMsg_k_EMsgGCRequestSubGCSessionInfo            EGCToGCMsg = 155
	EGCToGCMsg_k_EMsgGCRequestSubGCSessionInfoResponse    EGCToGCMsg = 156
	EGCToGCMsg_k_EGCToGCMsgMasterStartupComplete          EGCToGCMsg = 157
	EGCToGCMsg_k_EMsgGCToGCSOCacheSubscribe               EGCToGCMsg = 158
	EGCToGCMsg_k_EMsgGCToGCSOCacheUnsubscribe             EGCToGCMsg = 159
	EGCToGCMsg_k_EMsgGCToGCLoadSessionSOCache             EGCToGCMsg = 160
	EGCToGCMsg_k_EMsgGCToGCLoadSessionSOCacheResponse     EGCToGCMsg = 161
	EGCToGCMsg_k_EMsgGCToGCUpdateSessionStats             EGCToGCMsg = 162
	EGCToGCMsg_k_EMsgGCToGCUniverseStartup                EGCToGCMsg = 163
	EGCToGCMsg_k_EMsgGCToGCUniverseStartupResponse        EGCToGCMsg = 164
	EGCToGCMsg_k_EMsgGCToGCForwardAccountDetails          EGCToGCMsg = 165
	EGCToGCMsg_k_EMsgGCToGCMasterBroadcastMessage         EGCToGCMsg = 166
	EGCToGCMsg_k_EMsgGCToGCMasterSubscribeToCache         EGCToGCMsg = 167
	EGCToGCMsg_k_EMsgGCToGCMasterSubscribeToCacheResponse EGCToGCMsg = 168
	EGCToGCMsg_k_EMsgGCToGCMasterUnsubscribeFromCache     EGCToGCMsg = 169
	EGCToGCMsg_k_EMsgGCToGCMasterDestroyCache             EGCToGCMsg = 170
	EGCToGCMsg_k_EMsgGCToGCMasterSubscribeToCacheAsync    EGCToGCMsg = 171
)

var EGCToGCMsg_name = map[int32]string{
	150: "k_EGCToGCMsgMasterAck",
	151: "k_EGCToGCMsgMasterAckResponse",
	152: "k_EGCToGCMsgRouted",
	153: "k_EGCToGCMsgRoutedReply",
	154: "k_EMsgGCUpdateSubGCSessionInfo",
	155: "k_EMsgGCRequestSubGCSessionInfo",
	156: "k_EMsgGCRequestSubGCSessionInfoResponse",
	157: "k_EGCToGCMsgMasterStartupComplete",
	158: "k_EMsgGCToGCSOCacheSubscribe",
	159: "k_EMsgGCToGCSOCacheUnsubscribe",
	160: "k_EMsgGCToGCLoadSessionSOCache",
	161: "k_EMsgGCToGCLoadSessionSOCacheResponse",
	162: "k_EMsgGCToGCUpdateSessionStats",
	163: "k_EMsgGCToGCUniverseStartup",
	164: "k_EMsgGCToGCUniverseStartupResponse",
	165: "k_EMsgGCToGCForwardAccountDetails",
	166: "k_EMsgGCToGCMasterBroadcastMessage",
	167: "k_EMsgGCToGCMasterSubscribeToCache",
	168: "k_EMsgGCToGCMasterSubscribeToCacheResponse",
	169: "k_EMsgGCToGCMasterUnsubscribeFromCache",
	170: "k_EMsgGCToGCMasterDestroyCache",
	171: "k_EMsgGCToGCMasterSubscribeToCacheAsync",
}
var EGCToGCMsg_value = map[string]int32{
	"k_EGCToGCMsgMasterAck":                      150,
	"k_EGCToGCMsgMasterAckResponse":              151,
	"k_EGCToGCMsgRouted":                         152,
	"k_EGCToGCMsgRoutedReply":                    153,
	"k_EMsgGCUpdateSubGCSessionInfo":             154,
	"k_EMsgGCRequestSubGCSessionInfo":            155,
	"k_EMsgGCRequestSubGCSessionInfoResponse":    156,
	"k_EGCToGCMsgMasterStartupComplete":          157,
	"k_EMsgGCToGCSOCacheSubscribe":               158,
	"k_EMsgGCToGCSOCacheUnsubscribe":             159,
	"k_EMsgGCToGCLoadSessionSOCache":             160,
	"k_EMsgGCToGCLoadSessionSOCacheResponse":     161,
	"k_EMsgGCToGCUpdateSessionStats":             162,
	"k_EMsgGCToGCUniverseStartup":                163,
	"k_EMsgGCToGCUniverseStartupResponse":        164,
	"k_EMsgGCToGCForwardAccountDetails":          165,
	"k_EMsgGCToGCMasterBroadcastMessage":         166,
	"k_EMsgGCToGCMasterSubscribeToCache":         167,
	"k_EMsgGCToGCMasterSubscribeToCacheResponse": 168,
	"k_EMsgGCToGCMasterUnsubscribeFromCache":     169,
	"k_EMsgGCToGCMasterDestroyCache":             170,
	"k_EMsgGCToGCMasterSubscribeToCacheAsync":    171,
}

func (x EGCToGCMsg) Enum() *EGCToGCMsg {
	p := new(EGCToGCMsg)
	*p = x
	return p
}
func (x EGCToGCMsg) String() string {
	return proto.EnumName(EGCToGCMsg_name, int32(x))
}
func (x *EGCToGCMsg) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EGCToGCMsg_value, data, "EGCToGCMsg")
	if err != nil {
		return err
	}
	*x = EGCToGCMsg(value)
	return nil
}
func (EGCToGCMsg) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_gcsystemmsgs_0fadd4a5a0dd192c, []int{3}
}

type CCommunity_GamePersonalDataCategoryInfo struct {
	Type                      *string  `protobuf:"bytes,1,opt,name=type" json:"type,omitempty"`
	TypeLocalizationToken     *string  `protobuf:"bytes,2,opt,name=type_localization_token,json=typeLocalizationToken" json:"type_localization_token,omitempty"`
	TemplateFile              *string  `protobuf:"bytes,3,opt,name=template_file,json=templateFile" json:"template_file,omitempty"`
	Category                  *string  `protobuf:"bytes,4,opt,name=category" json:"category,omitempty"`
	CategoryLocalizationToken *string  `protobuf:"bytes,5,opt,name=category_localization_token,json=categoryLocalizationToken" json:"category_localization_token,omitempty"`
	XXX_NoUnkeyedLiteral      struct{} `json:"-"`
	XXX_unrecognized          []byte   `json:"-"`
	XXX_sizecache             int32    `json:"-"`
}

func (m *CCommunity_GamePersonalDataCategoryInfo) Reset() {
	*m = CCommunity_GamePersonalDataCategoryInfo{}
}
func (m *CCommunity_GamePersonalDataCategoryInfo) String() string { return proto.CompactTextString(m) }
func (*CCommunity_GamePersonalDataCategoryInfo) ProtoMessage()    {}
func (*CCommunity_GamePersonalDataCategoryInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_gcsystemmsgs_0fadd4a5a0dd192c, []int{0}
}
func (m *CCommunity_GamePersonalDataCategoryInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CCommunity_GamePersonalDataCategoryInfo.Unmarshal(m, b)
}
func (m *CCommunity_GamePersonalDataCategoryInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CCommunity_GamePersonalDataCategoryInfo.Marshal(b, m, deterministic)
}
func (dst *CCommunity_GamePersonalDataCategoryInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CCommunity_GamePersonalDataCategoryInfo.Merge(dst, src)
}
func (m *CCommunity_GamePersonalDataCategoryInfo) XXX_Size() int {
	return xxx_messageInfo_CCommunity_GamePersonalDataCategoryInfo.Size(m)
}
func (m *CCommunity_GamePersonalDataCategoryInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_CCommunity_GamePersonalDataCategoryInfo.DiscardUnknown(m)
}

var xxx_messageInfo_CCommunity_GamePersonalDataCategoryInfo proto.InternalMessageInfo

func (m *CCommunity_GamePersonalDataCategoryInfo) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ""
}

func (m *CCommunity_GamePersonalDataCategoryInfo) GetTypeLocalizationToken() string {
	if m != nil && m.TypeLocalizationToken != nil {
		return *m.TypeLocalizationToken
	}
	return ""
}

func (m *CCommunity_GamePersonalDataCategoryInfo) GetTemplateFile() string {
	if m != nil && m.TemplateFile != nil {
		return *m.TemplateFile
	}
	return ""
}

func (m *CCommunity_GamePersonalDataCategoryInfo) GetCategory() string {
	if m != nil && m.Category != nil {
		return *m.Category
	}
	return ""
}

func (m *CCommunity_GamePersonalDataCategoryInfo) GetCategoryLocalizationToken() string {
	if m != nil && m.CategoryLocalizationToken != nil {
		return *m.CategoryLocalizationToken
	}
	return ""
}

type CCommunity_GetGamePersonalDataCategories_Request struct {
	Appid                *uint32  `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CCommunity_GetGamePersonalDataCategories_Request) Reset() {
	*m = CCommunity_GetGamePersonalDataCategories_Request{}
}
func (m *CCommunity_GetGamePersonalDataCategories_Request) String() string {
	return proto.CompactTextString(m)
}
func (*CCommunity_GetGamePersonalDataCategories_Request) ProtoMessage() {}
func (*CCommunity_GetGamePersonalDataCategories_Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_gcsystemmsgs_0fadd4a5a0dd192c, []int{1}
}
func (m *CCommunity_GetGamePersonalDataCategories_Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CCommunity_GetGamePersonalDataCategories_Request.Unmarshal(m, b)
}
func (m *CCommunity_GetGamePersonalDataCategories_Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CCommunity_GetGamePersonalDataCategories_Request.Marshal(b, m, deterministic)
}
func (dst *CCommunity_GetGamePersonalDataCategories_Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CCommunity_GetGamePersonalDataCategories_Request.Merge(dst, src)
}
func (m *CCommunity_GetGamePersonalDataCategories_Request) XXX_Size() int {
	return xxx_messageInfo_CCommunity_GetGamePersonalDataCategories_Request.Size(m)
}
func (m *CCommunity_GetGamePersonalDataCategories_Request) XXX_DiscardUnknown() {
	xxx_messageInfo_CCommunity_GetGamePersonalDataCategories_Request.DiscardUnknown(m)
}

var xxx_messageInfo_CCommunity_GetGamePersonalDataCategories_Request proto.InternalMessageInfo

func (m *CCommunity_GetGamePersonalDataCategories_Request) GetAppid() uint32 {
	if m != nil && m.Appid != nil {
		return *m.Appid
	}
	return 0
}

type CCommunity_GetGamePersonalDataCategories_Response struct {
	Categories           []*CCommunity_GamePersonalDataCategoryInfo `protobuf:"bytes,1,rep,name=categories" json:"categories,omitempty"`
	AppAssetsBasename    *string                                    `protobuf:"bytes,2,opt,name=app_assets_basename,json=appAssetsBasename" json:"app_assets_basename,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                   `json:"-"`
	XXX_unrecognized     []byte                                     `json:"-"`
	XXX_sizecache        int32                                      `json:"-"`
}

func (m *CCommunity_GetGamePersonalDataCategories_Response) Reset() {
	*m = CCommunity_GetGamePersonalDataCategories_Response{}
}
func (m *CCommunity_GetGamePersonalDataCategories_Response) String() string {
	return proto.CompactTextString(m)
}
func (*CCommunity_GetGamePersonalDataCategories_Response) ProtoMessage() {}
func (*CCommunity_GetGamePersonalDataCategories_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_gcsystemmsgs_0fadd4a5a0dd192c, []int{2}
}
func (m *CCommunity_GetGamePersonalDataCategories_Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CCommunity_GetGamePersonalDataCategories_Response.Unmarshal(m, b)
}
func (m *CCommunity_GetGamePersonalDataCategories_Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CCommunity_GetGamePersonalDataCategories_Response.Marshal(b, m, deterministic)
}
func (dst *CCommunity_GetGamePersonalDataCategories_Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CCommunity_GetGamePersonalDataCategories_Response.Merge(dst, src)
}
func (m *CCommunity_GetGamePersonalDataCategories_Response) XXX_Size() int {
	return xxx_messageInfo_CCommunity_GetGamePersonalDataCategories_Response.Size(m)
}
func (m *CCommunity_GetGamePersonalDataCategories_Response) XXX_DiscardUnknown() {
	xxx_messageInfo_CCommunity_GetGamePersonalDataCategories_Response.DiscardUnknown(m)
}

var xxx_messageInfo_CCommunity_GetGamePersonalDataCategories_Response proto.InternalMessageInfo

func (m *CCommunity_GetGamePersonalDataCategories_Response) GetCategories() []*CCommunity_GamePersonalDataCategoryInfo {
	if m != nil {
		return m.Categories
	}
	return nil
}

func (m *CCommunity_GetGamePersonalDataCategories_Response) GetAppAssetsBasename() string {
	if m != nil && m.AppAssetsBasename != nil {
		return *m.AppAssetsBasename
	}
	return ""
}

type CCommunity_GetGamePersonalDataEntries_Request struct {
	Appid                *uint32  `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	Steamid              *uint64  `protobuf:"varint,2,opt,name=steamid" json:"steamid,omitempty"`
	Type                 *string  `protobuf:"bytes,3,opt,name=type" json:"type,omitempty"`
	ContinueToken        *string  `protobuf:"bytes,4,opt,name=continue_token,json=continueToken" json:"continue_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CCommunity_GetGamePersonalDataEntries_Request) Reset() {
	*m = CCommunity_GetGamePersonalDataEntries_Request{}
}
func (m *CCommunity_GetGamePersonalDataEntries_Request) String() string {
	return proto.CompactTextString(m)
}
func (*CCommunity_GetGamePersonalDataEntries_Request) ProtoMessage() {}
func (*CCommunity_GetGamePersonalDataEntries_Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_gcsystemmsgs_0fadd4a5a0dd192c, []int{3}
}
func (m *CCommunity_GetGamePersonalDataEntries_Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CCommunity_GetGamePersonalDataEntries_Request.Unmarshal(m, b)
}
func (m *CCommunity_GetGamePersonalDataEntries_Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CCommunity_GetGamePersonalDataEntries_Request.Marshal(b, m, deterministic)
}
func (dst *CCommunity_GetGamePersonalDataEntries_Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CCommunity_GetGamePersonalDataEntries_Request.Merge(dst, src)
}
func (m *CCommunity_GetGamePersonalDataEntries_Request) XXX_Size() int {
	return xxx_messageInfo_CCommunity_GetGamePersonalDataEntries_Request.Size(m)
}
func (m *CCommunity_GetGamePersonalDataEntries_Request) XXX_DiscardUnknown() {
	xxx_messageInfo_CCommunity_GetGamePersonalDataEntries_Request.DiscardUnknown(m)
}

var xxx_messageInfo_CCommunity_GetGamePersonalDataEntries_Request proto.InternalMessageInfo

func (m *CCommunity_GetGamePersonalDataEntries_Request) GetAppid() uint32 {
	if m != nil && m.Appid != nil {
		return *m.Appid
	}
	return 0
}

func (m *CCommunity_GetGamePersonalDataEntries_Request) GetSteamid() uint64 {
	if m != nil && m.Steamid != nil {
		return *m.Steamid
	}
	return 0
}

func (m *CCommunity_GetGamePersonalDataEntries_Request) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ""
}

func (m *CCommunity_GetGamePersonalDataEntries_Request) GetContinueToken() string {
	if m != nil && m.ContinueToken != nil {
		return *m.ContinueToken
	}
	return ""
}

type CCommunity_GetGamePersonalDataEntries_Response struct {
	Gceresult            *uint32  `protobuf:"varint,1,opt,name=gceresult" json:"gceresult,omitempty"`
	Entries              []string `protobuf:"bytes,2,rep,name=entries" json:"entries,omitempty"`
	ContinueToken        *string  `protobuf:"bytes,3,opt,name=continue_token,json=continueToken" json:"continue_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CCommunity_GetGamePersonalDataEntries_Response) Reset() {
	*m = CCommunity_GetGamePersonalDataEntries_Response{}
}
func (m *CCommunity_GetGamePersonalDataEntries_Response) String() string {
	return proto.CompactTextString(m)
}
func (*CCommunity_GetGamePersonalDataEntries_Response) ProtoMessage() {}
func (*CCommunity_GetGamePersonalDataEntries_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_gcsystemmsgs_0fadd4a5a0dd192c, []int{4}
}
func (m *CCommunity_GetGamePersonalDataEntries_Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CCommunity_GetGamePersonalDataEntries_Response.Unmarshal(m, b)
}
func (m *CCommunity_GetGamePersonalDataEntries_Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CCommunity_GetGamePersonalDataEntries_Response.Marshal(b, m, deterministic)
}
func (dst *CCommunity_GetGamePersonalDataEntries_Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CCommunity_GetGamePersonalDataEntries_Response.Merge(dst, src)
}
func (m *CCommunity_GetGamePersonalDataEntries_Response) XXX_Size() int {
	return xxx_messageInfo_CCommunity_GetGamePersonalDataEntries_Response.Size(m)
}
func (m *CCommunity_GetGamePersonalDataEntries_Response) XXX_DiscardUnknown() {
	xxx_messageInfo_CCommunity_GetGamePersonalDataEntries_Response.DiscardUnknown(m)
}

var xxx_messageInfo_CCommunity_GetGamePersonalDataEntries_Response proto.InternalMessageInfo

func (m *CCommunity_GetGamePersonalDataEntries_Response) GetGceresult() uint32 {
	if m != nil && m.Gceresult != nil {
		return *m.Gceresult
	}
	return 0
}

func (m *CCommunity_GetGamePersonalDataEntries_Response) GetEntries() []string {
	if m != nil {
		return m.Entries
	}
	return nil
}

func (m *CCommunity_GetGamePersonalDataEntries_Response) GetContinueToken() string {
	if m != nil && m.ContinueToken != nil {
		return *m.ContinueToken
	}
	return ""
}

type CCommunity_TerminateGamePersonalDataEntries_Request struct {
	Appid                *uint32  `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	Steamid              *uint64  `protobuf:"varint,2,opt,name=steamid" json:"steamid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CCommunity_TerminateGamePersonalDataEntries_Request) Reset() {
	*m = CCommunity_TerminateGamePersonalDataEntries_Request{}
}
func (m *CCommunity_TerminateGamePersonalDataEntries_Request) String() string {
	return proto.CompactTextString(m)
}
func (*CCommunity_TerminateGamePersonalDataEntries_Request) ProtoMessage() {}
func (*CCommunity_TerminateGamePersonalDataEntries_Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_gcsystemmsgs_0fadd4a5a0dd192c, []int{5}
}
func (m *CCommunity_TerminateGamePersonalDataEntries_Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CCommunity_TerminateGamePersonalDataEntries_Request.Unmarshal(m, b)
}
func (m *CCommunity_TerminateGamePersonalDataEntries_Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CCommunity_TerminateGamePersonalDataEntries_Request.Marshal(b, m, deterministic)
}
func (dst *CCommunity_TerminateGamePersonalDataEntries_Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CCommunity_TerminateGamePersonalDataEntries_Request.Merge(dst, src)
}
func (m *CCommunity_TerminateGamePersonalDataEntries_Request) XXX_Size() int {
	return xxx_messageInfo_CCommunity_TerminateGamePersonalDataEntries_Request.Size(m)
}
func (m *CCommunity_TerminateGamePersonalDataEntries_Request) XXX_DiscardUnknown() {
	xxx_messageInfo_CCommunity_TerminateGamePersonalDataEntries_Request.DiscardUnknown(m)
}

var xxx_messageInfo_CCommunity_TerminateGamePersonalDataEntries_Request proto.InternalMessageInfo

func (m *CCommunity_TerminateGamePersonalDataEntries_Request) GetAppid() uint32 {
	if m != nil && m.Appid != nil {
		return *m.Appid
	}
	return 0
}

func (m *CCommunity_TerminateGamePersonalDataEntries_Request) GetSteamid() uint64 {
	if m != nil && m.Steamid != nil {
		return *m.Steamid
	}
	return 0
}

type CCommunity_TerminateGamePersonalDataEntries_Response struct {
	Gceresult            *uint32  `protobuf:"varint,1,opt,name=gceresult" json:"gceresult,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CCommunity_TerminateGamePersonalDataEntries_Response) Reset() {
	*m = CCommunity_TerminateGamePersonalDataEntries_Response{}
}
func (m *CCommunity_TerminateGamePersonalDataEntries_Response) String() string {
	return proto.CompactTextString(m)
}
func (*CCommunity_TerminateGamePersonalDataEntries_Response) ProtoMessage() {}
func (*CCommunity_TerminateGamePersonalDataEntries_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_gcsystemmsgs_0fadd4a5a0dd192c, []int{6}
}
func (m *CCommunity_TerminateGamePersonalDataEntries_Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CCommunity_TerminateGamePersonalDataEntries_Response.Unmarshal(m, b)
}
func (m *CCommunity_TerminateGamePersonalDataEntries_Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CCommunity_TerminateGamePersonalDataEntries_Response.Marshal(b, m, deterministic)
}
func (dst *CCommunity_TerminateGamePersonalDataEntries_Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CCommunity_TerminateGamePersonalDataEntries_Response.Merge(dst, src)
}
func (m *CCommunity_TerminateGamePersonalDataEntries_Response) XXX_Size() int {
	return xxx_messageInfo_CCommunity_TerminateGamePersonalDataEntries_Response.Size(m)
}
func (m *CCommunity_TerminateGamePersonalDataEntries_Response) XXX_DiscardUnknown() {
	xxx_messageInfo_CCommunity_TerminateGamePersonalDataEntries_Response.DiscardUnknown(m)
}

var xxx_messageInfo_CCommunity_TerminateGamePersonalDataEntries_Response proto.InternalMessageInfo

func (m *CCommunity_TerminateGamePersonalDataEntries_Response) GetGceresult() uint32 {
	if m != nil && m.Gceresult != nil {
		return *m.Gceresult
	}
	return 0
}

func init() {
	proto.RegisterType((*CCommunity_GamePersonalDataCategoryInfo)(nil), "CCommunity_GamePersonalDataCategoryInfo")
	proto.RegisterType((*CCommunity_GetGamePersonalDataCategories_Request)(nil), "CCommunity_GetGamePersonalDataCategories_Request")
	proto.RegisterType((*CCommunity_GetGamePersonalDataCategories_Response)(nil), "CCommunity_GetGamePersonalDataCategories_Response")
	proto.RegisterType((*CCommunity_GetGamePersonalDataEntries_Request)(nil), "CCommunity_GetGamePersonalDataEntries_Request")
	proto.RegisterType((*CCommunity_GetGamePersonalDataEntries_Response)(nil), "CCommunity_GetGamePersonalDataEntries_Response")
	proto.RegisterType((*CCommunity_TerminateGamePersonalDataEntries_Request)(nil), "CCommunity_TerminateGamePersonalDataEntries_Request")
	proto.RegisterType((*CCommunity_TerminateGamePersonalDataEntries_Response)(nil), "CCommunity_TerminateGamePersonalDataEntries_Response")
	proto.RegisterEnum("EGCSystemMsg", EGCSystemMsg_name, EGCSystemMsg_value)
	proto.RegisterEnum("ESOMsg", ESOMsg_name, ESOMsg_value)
	proto.RegisterEnum("EGCBaseClientMsg", EGCBaseClientMsg_name, EGCBaseClientMsg_value)
	proto.RegisterEnum("EGCToGCMsg", EGCToGCMsg_name, EGCToGCMsg_value)
}

func init() { proto.RegisterFile("gcsystemmsgs.proto", fileDescriptor_gcsystemmsgs_0fadd4a5a0dd192c) }

var fileDescriptor_gcsystemmsgs_0fadd4a5a0dd192c = []byte{
	// 2131 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x58, 0x59, 0x77, 0x1c, 0x47,
	0x15, 0x4e, 0x67, 0x3a, 0x01, 0x17, 0x31, 0x94, 0xcb, 0x8b, 0x24, 0x6f, 0x92, 0x65, 0x3b, 0x56,
	0x94, 0x58, 0xf2, 0x96, 0x84, 0x35, 0x30, 0x6e, 0x8d, 0x46, 0x0a, 0x92, 0x3d, 0x99, 0x19, 0xcb,
	0x10, 0x96, 0xa1, 0xd4, 0x7d, 0x35, 0xd3, 0x47, 0x3d, 0x5d, 0x4d, 0x55, 0xb5, 0x12, 0xf1, 0x14,
	0xf6, 0x9d, 0xc0, 0x0b, 0x4b, 0xd8, 0x21, 0x0b, 0x09, 0x87, 0x1f, 0xc0, 0xf2, 0x03, 0xd8, 0x1f,
	0xe0, 0x8d, 0xc3, 0xce, 0x1f, 0xe0, 0x01, 0x42, 0xd8, 0xce, 0xe1, 0x74, 0x77, 0x75, 0x75, 0xb5,
	0x66, 0x46, 0x56, 0xce, 0xe1, 0x49, 0xd3, 0xf5, 0x7d, 0xf7, 0xd6, 0xad, 0xbb, 0x56, 0x09, 0x91,
	0xae, 0x2b, 0xb6, 0x85, 0x84, 0x7e, 0x5f, 0x74, 0xc5, 0x5c, 0xc4, 0x99, 0x64, 0xd3, 0x2f, 0x5a,
	0xe8, 0x9c, 0xe3, 0xb0, 0x7e, 0x3f, 0x0e, 0x7d, 0xb9, 0xdd, 0xa9, 0xd3, 0x3e, 0x34, 0x80, 0x0b,
	0x16, 0xd2, 0x60, 0x81, 0x4a, 0xea, 0x50, 0x09, 0x5d, 0xc6, 0xb7, 0x97, 0xc3, 0x0d, 0x46, 0x08,
	0xb2, 0xe5, 0x76, 0x04, 0xe3, 0xd6, 0x94, 0x35, 0xb3, 0xaf, 0x99, 0xfe, 0x26, 0x0f, 0xa0, 0xb1,
	0xe4, 0x6f, 0x27, 0x60, 0x2e, 0x0d, 0xfc, 0xf7, 0x51, 0xe9, 0xb3, 0xb0, 0x23, 0xd9, 0x26, 0x84,
	0xe3, 0xb7, 0xa7, 0xb4, 0xc3, 0x09, 0xbc, 0x62, 0xa0, 0xed, 0x04, 0x24, 0xa7, 0xd1, 0x7e, 0x09,
	0xfd, 0x28, 0xa0, 0x12, 0x3a, 0x1b, 0x7e, 0x00, 0xe3, 0x95, 0x94, 0x7d, 0x57, 0xbe, 0xb8, 0xe8,
	0x07, 0x40, 0x8e, 0xa2, 0x57, 0xba, 0xca, 0x80, 0x71, 0x3b, 0xc5, 0xf5, 0x37, 0x79, 0x08, 0x1d,
	0xcb, 0x7f, 0x0f, 0xdb, 0xfc, 0x8e, 0x94, 0x3e, 0x91, 0x53, 0x06, 0x0c, 0x98, 0x5e, 0x42, 0x17,
	0xcc, 0x73, 0x83, 0x1c, 0x71, 0x74, 0x1f, 0x44, 0xa7, 0x09, 0xef, 0x8d, 0x41, 0x48, 0x72, 0x08,
	0xdd, 0x41, 0xa3, 0xc8, 0xf7, 0x52, 0x0f, 0xec, 0x6f, 0x66, 0x1f, 0xd3, 0xdf, 0xb3, 0xd0, 0xc5,
	0x97, 0xa1, 0x4a, 0x44, 0x2c, 0x14, 0x40, 0x96, 0x10, 0x72, 0xf5, 0xf2, 0xb8, 0x35, 0x55, 0x99,
	0x79, 0xd5, 0xa5, 0x99, 0xb9, 0x3d, 0x86, 0xa2, 0x69, 0xc8, 0x92, 0x39, 0x74, 0x90, 0x46, 0x51,
	0x87, 0x0a, 0x01, 0x52, 0x74, 0xd6, 0xa9, 0x80, 0x90, 0xf6, 0x41, 0xb9, 0xff, 0x00, 0x8d, 0xa2,
	0x6a, 0x8a, 0x5c, 0x55, 0xc0, 0xf4, 0x53, 0x16, 0x3a, 0xbf, 0xbb, 0xbd, 0xb5, 0x50, 0xde, 0xfa,
	0xdc, 0x64, 0x1c, 0xbd, 0x42, 0x48, 0xa0, 0x7d, 0xdf, 0x4b, 0xf7, 0xb2, 0x9b, 0xf9, 0xa7, 0x4e,
	0x94, 0x8a, 0x91, 0x28, 0x67, 0xd1, 0xab, 0x5d, 0x16, 0x4a, 0x3f, 0x8c, 0x41, 0x85, 0x28, 0x8b,
	0xe8, 0xfe, 0x7c, 0x35, 0x0b, 0xcb, 0x93, 0x16, 0x9a, 0xdb, 0xab, 0x71, 0xca, 0x93, 0xc7, 0xd1,
	0xbe, 0xae, 0x0b, 0x1c, 0x44, 0x1c, 0x48, 0x65, 0x61, 0xb1, 0x90, 0x58, 0x09, 0x99, 0xc4, 0xf8,
	0xed, 0x53, 0x95, 0x99, 0x7d, 0xcd, 0xfc, 0x73, 0x88, 0x45, 0x95, 0x61, 0x16, 0x01, 0xba, 0x6c,
	0x18, 0xd4, 0x06, 0xde, 0xf7, 0x43, 0x2a, 0xe1, 0xff, 0xec, 0xb3, 0xe9, 0x36, 0xba, 0xf2, 0xf2,
	0xb6, 0xd9, 0xcb, 0xe9, 0x67, 0x5f, 0x9a, 0x40, 0x77, 0xd5, 0xea, 0x4e, 0x2b, 0x2d, 0xfb, 0x55,
	0xd1, 0x25, 0x07, 0xd1, 0x6b, 0x36, 0x3b, 0xb5, 0xba, 0xb3, 0x2a, 0xba, 0xcb, 0xe1, 0x16, 0x0d,
	0x7c, 0x0f, 0xdf, 0x46, 0x0e, 0xa0, 0xfd, 0xf9, 0xe2, 0x6a, 0x1c, 0x48, 0x1f, 0x5b, 0x64, 0x1c,
	0x1d, 0xca, 0x97, 0xea, 0x10, 0x02, 0xf7, 0xdd, 0x26, 0x44, 0xc1, 0x36, 0x46, 0xe4, 0x08, 0x22,
	0x39, 0x92, 0xa9, 0x4d, 0x12, 0x0b, 0x5f, 0x22, 0x27, 0xd1, 0xd1, 0x7c, 0xbd, 0xea, 0xf6, 0x7c,
	0xd8, 0x82, 0x3e, 0x84, 0xb2, 0xfa, 0x18, 0xe5, 0x1e, 0x78, 0xf8, 0xb2, 0x29, 0xe7, 0xb0, 0x30,
	0x39, 0x2a, 0x0d, 0x3d, 0x7c, 0xc5, 0xdc, 0xa9, 0x25, 0x29, 0x97, 0x8d, 0x80, 0x6e, 0xfb, 0x61,
	0x17, 0xdf, 0x4f, 0xc6, 0xd0, 0xc1, 0x02, 0x61, 0x51, 0x0e, 0x3c, 0x40, 0x8e, 0xa1, 0xb1, 0x92,
	0x48, 0xe2, 0x24, 0x01, 0x7c, 0x0b, 0x38, 0x7e, 0x90, 0x1c, 0x45, 0x47, 0x4c, 0x29, 0x03, 0x7b,
	0x2d, 0x39, 0x8c, 0x0e, 0xe4, 0xd8, 0xcd, 0xba, 0x8a, 0x14, 0x7e, 0x9d, 0x69, 0x5a, 0xb2, 0x9c,
	0x79, 0x16, 0xbf, 0x9e, 0x4c, 0xa3, 0x93, 0x85, 0x13, 0xe4, 0x0d, 0x01, 0x3c, 0xd1, 0xd6, 0x92,
	0x54, 0x8a, 0x96, 0xdb, 0x83, 0x3e, 0xc5, 0x6f, 0x20, 0xb3, 0xe8, 0xee, 0xdd, 0x39, 0x5a, 0xdf,
	0x1b, 0x87, 0xe8, 0x4b, 0x79, 0x0b, 0xb5, 0x46, 0xb3, 0xe6, 0x54, 0xdb, 0xb5, 0x05, 0xfc, 0x26,
	0x32, 0x85, 0x8e, 0x0f, 0xe3, 0x68, 0x2d, 0x0f, 0x99, 0x07, 0xac, 0x46, 0x51, 0xd2, 0x0e, 0x6e,
	0x44, 0x1e, 0x95, 0xe0, 0xe1, 0x37, 0x9b, 0x9e, 0x59, 0x4b, 0x82, 0x4b, 0x25, 0xb4, 0x40, 0x08,
	0x9f, 0x85, 0xf8, 0x2d, 0xe4, 0x34, 0x9a, 0x1c, 0x01, 0x6a, 0xed, 0x55, 0xd3, 0xc6, 0x15, 0xc6,
	0x36, 0xe3, 0xa8, 0xea, 0xba, 0x2c, 0x0e, 0xe5, 0x22, 0x67, 0xfd, 0xe5, 0x30, 0x8a, 0x25, 0xbe,
	0x5a, 0xf2, 0x3f, 0x84, 0xde, 0x52, 0xbb, 0xdd, 0xc8, 0x9d, 0xe9, 0x98, 0xbb, 0xec, 0x00, 0xf5,
	0x2e, 0x0b, 0x66, 0xd0, 0x1b, 0x1c, 0xda, 0x20, 0x64, 0x0b, 0x64, 0x1c, 0xe1, 0x1a, 0x99, 0x44,
	0xc7, 0x72, 0xa4, 0x09, 0x2e, 0xe3, 0x5e, 0x2b, 0x8e, 0x22, 0xc6, 0x65, 0xd5, 0x4d, 0x7a, 0x37,
	0x5e, 0x24, 0x33, 0xe8, 0x8c, 0xe1, 0x20, 0x65, 0xdd, 0x02, 0x48, 0xea, 0x07, 0xa2, 0x63, 0xb8,
	0xb2, 0x6e, 0x1e, 0xa5, 0x09, 0x2e, 0xf8, 0x5b, 0xb0, 0x1c, 0x4a, 0xe0, 0xd5, 0x28, 0x5a, 0x05,
	0x21, 0x68, 0x17, 0xf0, 0xb2, 0x69, 0xc8, 0xa2, 0x1f, 0x7a, 0x4a, 0x9d, 0xc0, 0x0f, 0x9b, 0xb9,
	0xd2, 0x60, 0x42, 0x56, 0x03, 0xe0, 0x12, 0xbf, 0xd5, 0x4c, 0xca, 0x3a, 0xc8, 0x15, 0xdf, 0x85,
	0x50, 0x80, 0xc0, 0x2b, 0xe5, 0x8a, 0x29, 0x02, 0x87, 0x57, 0x77, 0x88, 0xa8, 0xcc, 0x17, 0xf8,
	0x9a, 0x79, 0x56, 0x03, 0xd0, 0x6e, 0xba, 0x5e, 0x0a, 0xb5, 0xe7, 0x2d, 0x72, 0x00, 0xb5, 0x21,
	0x6e, 0x98, 0xa7, 0x2b, 0x63, 0x5a, 0xfe, 0x11, 0x32, 0x81, 0x0e, 0x1b, 0x1b, 0x2c, 0x37, 0x92,
	0x31, 0x98, 0xba, 0xb1, 0x49, 0x4e, 0xa1, 0x13, 0x43, 0x21, 0x2d, 0xdd, 0x22, 0x27, 0xd0, 0x44,
	0xb9, 0xd2, 0xcd, 0xcc, 0x6f, 0x9b, 0xc6, 0xd5, 0x41, 0x1a, 0x0c, 0x7c, 0x63, 0x47, 0xa6, 0x1b,
	0x98, 0x56, 0xbf, 0x66, 0x3a, 0x38, 0x49, 0x94, 0x5a, 0x9f, 0xfa, 0x01, 0xbe, 0x59, 0xda, 0x35,
	0x5f, 0xd6, 0x52, 0x6f, 0x23, 0xc7, 0xd1, 0xb8, 0xa1, 0x39, 0x45, 0xdb, 0xea, 0xce, 0x80, 0xdf,
	0x4e, 0xce, 0xa0, 0xa9, 0x51, 0xa8, 0xd6, 0xf1, 0x68, 0xc9, 0x72, 0x4e, 0x43, 0x59, 0x4f, 0xb2,
	0xb3, 0x41, 0x85, 0xc0, 0xef, 0x28, 0x59, 0x5e, 0xc2, 0xb4, 0xfc, 0x3b, 0x4d, 0x13, 0x07, 0x52,
	0x10, 0xbf, 0x8b, 0x9c, 0x45, 0xa7, 0x46, 0xc2, 0x5a, 0xcb, 0xbb, 0xcd, 0x2a, 0xaa, 0x83, 0x54,
	0x4d, 0xfe, 0x5a, 0xd2, 0xae, 0x70, 0xc7, 0xac, 0xa2, 0x1d, 0xa0, 0xd6, 0xf0, 0x1e, 0x33, 0xe5,
	0xd2, 0xbe, 0x1d, 0x05, 0xf0, 0xf8, 0xaa, 0xe8, 0x62, 0x6a, 0xfa, 0xe1, 0x26, 0xac, 0x57, 0x1b,
	0xcb, 0x4d, 0xe8, 0xfa, 0x42, 0x02, 0x4f, 0x2b, 0x60, 0x83, 0xba, 0x20, 0x30, 0x98, 0xbe, 0xcc,
	0x58, 0x0f, 0xb3, 0xf5, 0xbc, 0x90, 0x37, 0xcc, 0x42, 0xdb, 0x89, 0x2e, 0x49, 0x19, 0x69, 0x3b,
	0x7a, 0xe4, 0x5e, 0x74, 0x6e, 0x14, 0x73, 0x91, 0xf1, 0x64, 0x02, 0x68, 0xb2, 0x4f, 0x26, 0x0c,
	0xa3, 0xa1, 0xef, 0x50, 0xb7, 0x07, 0x5e, 0x1d, 0x24, 0xfe, 0xb1, 0x45, 0x4e, 0x15, 0xbd, 0xcf,
	0x84, 0xb4, 0xf0, 0x4f, 0xac, 0xa1, 0xd2, 0x2d, 0x90, 0xf8, 0xa7, 0x16, 0x39, 0x5e, 0xf8, 0x53,
	0x43, 0x0b, 0x10, 0x80, 0x04, 0xfc, 0x33, 0x8b, 0x1c, 0x2b, 0x62, 0x5e, 0x08, 0xa6, 0xd9, 0xfa,
	0x73, 0x8b, 0x9c, 0x2e, 0x82, 0x5e, 0x06, 0xf5, 0xd6, 0xbf, 0xb0, 0xc8, 0x61, 0x84, 0x75, 0x62,
	0x3e, 0xb2, 0x92, 0xc9, 0xfe, 0xca, 0x22, 0x27, 0x0a, 0x27, 0xe6, 0xcb, 0x5a, 0xea, 0xd7, 0x16,
	0x99, 0x2c, 0xc6, 0xe2, 0x2a, 0x4d, 0x22, 0xd0, 0x02, 0xb9, 0xe0, 0x73, 0x70, 0x25, 0xe3, 0xdb,
	0xf8, 0xb7, 0x16, 0x39, 0x87, 0xa6, 0x47, 0x13, 0xb4, 0xa6, 0xdf, 0x95, 0x8d, 0xcc, 0x89, 0x2a,
	0xb8, 0x2c, 0x96, 0xc9, 0x64, 0xfc, 0xbd, 0x45, 0xee, 0x2d, 0xc6, 0xd1, 0x70, 0x92, 0xd6, 0xf8,
	0x07, 0x8b, 0xdc, 0x5d, 0x24, 0xaa, 0x26, 0x3b, 0x81, 0x0f, 0xa1, 0x4c, 0x5a, 0xa6, 0x52, 0xfa,
	0x47, 0x8b, 0xcc, 0xa1, 0x7b, 0x6e, 0xc9, 0xd3, 0x7a, 0xff, 0x64, 0x91, 0x31, 0xe3, 0x8a, 0x00,
	0xf2, 0x7a, 0x94, 0xf4, 0x15, 0x81, 0xff, 0x5c, 0x72, 0x46, 0x01, 0x68, 0xc9, 0xbf, 0x24, 0xd7,
	0x8e, 0x83, 0x83, 0x97, 0x8b, 0x4b, 0xf8, 0x6f, 0x15, 0xf3, 0xf4, 0x49, 0x41, 0xc4, 0xdc, 0xed,
	0x51, 0x01, 0x6d, 0x1e, 0x0b, 0x99, 0xf8, 0x3c, 0x16, 0xf8, 0xef, 0x15, 0xf3, 0xf4, 0xc3, 0x49,
	0x7a, 0xaf, 0x17, 0x2b, 0xe4, 0x68, 0xd1, 0x1c, 0xb3, 0x01, 0x9a, 0x4f, 0xca, 0x7f, 0x54, 0xc8,
	0x59, 0xa3, 0x8f, 0x38, 0xaa, 0x82, 0xd7, 0xa8, 0x9b, 0x29, 0x71, 0x7a, 0x34, 0xec, 0x02, 0x7e,
	0xa9, 0x62, 0xa6, 0x9c, 0xd3, 0x03, 0x77, 0x73, 0x91, 0xfb, 0x10, 0x7a, 0xa2, 0xe7, 0x47, 0xf8,
	0x9f, 0x15, 0x72, 0xa6, 0xa8, 0xe1, 0x1d, 0xa8, 0x36, 0xe3, 0x5f, 0x15, 0x32, 0x5d, 0x6a, 0xc4,
	0x0d, 0xca, 0x65, 0x08, 0x5c, 0x6d, 0xb9, 0xe2, 0x87, 0x9b, 0xf8, 0xdf, 0x15, 0x32, 0x8b, 0xce,
	0xee, 0xca, 0xd1, 0xfa, 0xfe, 0x53, 0x21, 0xf7, 0x14, 0x65, 0xbb, 0xd6, 0x6a, 0x42, 0x32, 0x3b,
	0xc1, 0x6b, 0xc5, 0x22, 0xf2, 0x5d, 0x9f, 0xc5, 0x22, 0x99, 0xa3, 0x5b, 0xbe, 0xdc, 0xc6, 0xff,
	0xad, 0x98, 0xe1, 0x58, 0x68, 0x28, 0xad, 0xab, 0xbe, 0xcb, 0x59, 0xfb, 0xf1, 0x50, 0xe0, 0x27,
	0x6c, 0x33, 0x37, 0x07, 0x09, 0x7a, 0xd3, 0xf7, 0xdb, 0x66, 0x6d, 0xa4, 0xd3, 0xa4, 0xda, 0xba,
	0x86, 0x3f, 0x60, 0x9b, 0xb5, 0x91, 0x2f, 0x6b, 0xa9, 0x0f, 0xda, 0xe4, 0x64, 0xb9, 0x8f, 0x46,
	0x91, 0xf2, 0xd0, 0x8a, 0x2f, 0x24, 0xfe, 0x90, 0x6d, 0xe6, 0xe7, 0x00, 0xae, 0xf5, 0x7c, 0xd8,
	0x36, 0x5d, 0xb8, 0x46, 0xdd, 0x35, 0xe0, 0xfe, 0x86, 0x9f, 0x4d, 0x33, 0x15, 0xaa, 0x8f, 0xd8,
	0x66, 0x44, 0x95, 0xe3, 0x1a, 0x3d, 0x16, 0xc2, 0xb5, 0xb8, 0xbf, 0x0e, 0x5c, 0xd1, 0x3e, 0x6a,
	0x9b, 0x69, 0xa6, 0x68, 0xed, 0xc7, 0xd8, 0x22, 0x4d, 0x8a, 0x51, 0x91, 0x3e, 0x66, 0x93, 0xa9,
	0x62, 0x6e, 0xa7, 0x81, 0x75, 0x02, 0x1a, 0xae, 0x42, 0xa2, 0x28, 0x0d, 0xfd, 0xc7, 0x6d, 0x32,
	0x83, 0x4e, 0xef, 0xc2, 0xd0, 0xb6, 0x7f, 0xa2, 0x64, 0xbb, 0xc3, 0xfa, 0x11, 0x07, 0x21, 0xc0,
	0x5b, 0x15, 0xdd, 0x36, 0xcb, 0x2a, 0x0c, 0x7f, 0xd2, 0x26, 0x17, 0xd1, 0x7d, 0x86, 0x1f, 0x46,
	0xbf, 0x2e, 0xf3, 0xde, 0xfd, 0x29, 0x9b, 0x5c, 0x42, 0xe7, 0xf7, 0x28, 0xa2, 0x4c, 0xf9, 0xb4,
	0x6d, 0x96, 0xf9, 0xe8, 0x77, 0x57, 0xbe, 0xc7, 0x67, 0x6c, 0x32, 0x8f, 0x66, 0xf7, 0xc2, 0x57,
	0x1b, 0x3c, 0x69, 0x93, 0x2b, 0x68, 0x3e, 0x17, 0xb8, 0xd5, 0x03, 0x27, 0xdf, 0xe6, 0xb3, 0x36,
	0xb9, 0x1f, 0x5d, 0xd8, 0xbb, 0x94, 0xda, 0xec, 0x73, 0xf6, 0xec, 0x5f, 0x2d, 0x74, 0x67, 0xad,
	0x75, 0xbd, 0x78, 0xf4, 0xa4, 0xbf, 0x3b, 0x0e, 0x87, 0xe4, 0xaa, 0x70, 0xb8, 0xb4, 0x98, 0xd5,
	0x3f, 0x3e, 0x42, 0x0e, 0xa5, 0x79, 0x9c, 0x2d, 0x2e, 0x80, 0x90, 0x9c, 0x6d, 0xe3, 0x31, 0x35,
	0x27, 0x95, 0x7c, 0x32, 0x1c, 0x5a, 0xf1, 0xba, 0x70, 0xb9, 0xbf, 0x0e, 0x1e, 0x1e, 0x57, 0x0f,
	0x1f, 0x03, 0xbd, 0x11, 0x8a, 0x02, 0x9f, 0x50, 0x73, 0xde, 0xdc, 0x28, 0x1f, 0xd6, 0xf8, 0xa8,
	0xba, 0x2b, 0x0c, 0xaa, 0x8e, 0xb2, 0xbb, 0xd8, 0x06, 0x07, 0xd1, 0xc3, 0xc7, 0xd5, 0x3c, 0x1f,
	0x6a, 0xc1, 0x8d, 0xa8, 0xcd, 0x16, 0x12, 0xeb, 0x4f, 0xcc, 0xfe, 0xf2, 0x76, 0x84, 0x6b, 0x75,
	0x27, 0xe9, 0x99, 0xba, 0x3d, 0xab, 0x96, 0x9a, 0x36, 0xb2, 0x46, 0xda, 0xa7, 0x33, 0xc7, 0x7e,
	0x7f, 0x4c, 0xcd, 0x52, 0x03, 0x51, 0xce, 0xfb, 0xc1, 0x98, 0xaa, 0xbc, 0x14, 0xca, 0x13, 0xb1,
	0xc1, 0x82, 0xc0, 0x61, 0xe1, 0x16, 0xe5, 0xb9, 0x8a, 0x1f, 0x8e, 0xa9, 0x06, 0x31, 0x92, 0xa7,
	0x14, 0xfe, 0x68, 0x4c, 0x35, 0xdb, 0x94, 0x98, 0xd1, 0x6e, 0x42, 0xe0, 0xb2, 0x3e, 0xe0, 0xa7,
	0x27, 0x4d, 0xac, 0x95, 0xbe, 0xd4, 0x72, 0xec, 0x99, 0x49, 0xd3, 0xfa, 0x4c, 0x6e, 0x09, 0x82,
	0x80, 0xe1, 0x67, 0x4b, 0x48, 0x26, 0x95, 0x21, 0xcf, 0x4d, 0xaa, 0x1a, 0x36, 0x64, 0x1c, 0x16,
	0x86, 0x90, 0xbe, 0x1f, 0xd4, 0xa8, 0x78, 0xbe, 0x44, 0xca, 0xc4, 0x07, 0x48, 0x2f, 0x4c, 0xce,
	0xfe, 0xe6, 0x4e, 0x84, 0x6a, 0xc9, 0xd1, 0xd2, 0xec, 0xd3, 0x13, 0x43, 0x7d, 0x67, 0xb3, 0xb0,
	0xea, 0x6e, 0xe2, 0xcf, 0x5b, 0xba, 0x8e, 0x77, 0x62, 0xda, 0x09, 0x5f, 0x28, 0xe6, 0xa2, 0xe2,
	0x24, 0x93, 0x13, 0x3c, 0xfc, 0xc5, 0xe2, 0xea, 0x52, 0x02, 0xb2, 0x07, 0xf7, 0x97, 0x2c, 0xd3,
	0x54, 0x35, 0xa8, 0xe2, 0xf5, 0xc4, 0xea, 0x74, 0x5a, 0x25, 0xef, 0x3f, 0xfc, 0x94, 0xa5, 0x86,
	0x4d, 0x4a, 0x52, 0xf1, 0x19, 0x60, 0x7d, 0xd9, 0x22, 0xf7, 0xa5, 0x37, 0xb5, 0xdd, 0x58, 0xda,
	0xde, 0xaf, 0x14, 0xf7, 0x83, 0xd2, 0x99, 0xd2, 0x17, 0x77, 0x1c, 0x25, 0xcd, 0x2a, 0xbd, 0x5b,
	0x7d, 0x35, 0xbf, 0xb7, 0xa9, 0x2c, 0xa8, 0x3b, 0xad, 0xeb, 0xe5, 0x14, 0xc5, 0x5f, 0x2b, 0x9d,
	0xc1, 0xa0, 0x18, 0x95, 0x82, 0xbf, 0x3e, 0x40, 0x5a, 0x61, 0xd4, 0x53, 0x96, 0x29, 0x3e, 0xfe,
	0x46, 0x7e, 0xc3, 0xd9, 0x85, 0xa4, 0x4f, 0xf0, 0xcd, 0x01, 0x8d, 0xa5, 0x39, 0x9f, 0xdd, 0xe0,
	0xbe, 0x65, 0xa9, 0x76, 0x5e, 0x90, 0x42, 0x7f, 0x0b, 0xb8, 0x00, 0x75, 0x50, 0xfc, 0x6d, 0x4b,
	0xb5, 0xf3, 0x51, 0x0c, 0xbd, 0xe1, 0xd3, 0x56, 0xb9, 0x70, 0xea, 0x8e, 0xba, 0xfe, 0xee, 0x78,
	0x22, 0x3c, 0x63, 0x95, 0x0b, 0xa7, 0xee, 0x64, 0xae, 0xbd, 0xca, 0x19, 0xf5, 0x5c, 0x2a, 0x64,
	0xfe, 0x3e, 0x7d, 0x76, 0x04, 0x51, 0xbb, 0xb6, 0xcd, 0x32, 0xbf, 0x3c, 0x67, 0xa9, 0x6e, 0x7c,
	0x0b, 0xa2, 0x36, 0xf5, 0x3b, 0x03, 0x8e, 0xcc, 0x04, 0x8c, 0x88, 0x24, 0x2f, 0xfe, 0x4c, 0xfb,
	0xf3, 0x03, 0x8e, 0xcc, 0xc8, 0xaa, 0x43, 0x66, 0xa4, 0x17, 0x4a, 0xd9, 0x35, 0xda, 0x84, 0xaa,
	0xd8, 0x0e, 0x5d, 0xfc, 0x5d, 0xeb, 0xea, 0x83, 0x4b, 0xd6, 0xa3, 0x17, 0xba, 0xbe, 0xec, 0xc5,
	0xeb, 0x73, 0x2e, 0xeb, 0xcf, 0x5f, 0xbc, 0xbc, 0x39, 0xdf, 0x65, 0xe7, 0xd3, 0x7f, 0x88, 0x9d,
	0xe7, 0x20, 0x58, 0xcc, 0x5d, 0x10, 0xf3, 0xe9, 0xff, 0xa9, 0xd7, 0xe3, 0x8d, 0x79, 0x8f, 0x49,
	0x7a, 0xe9, 0x09, 0xeb, 0xb6, 0xff, 0x05, 0x00, 0x00, 0xff, 0xff, 0xcd, 0x34, 0x36, 0xef, 0xc8,
	0x16, 0x00, 0x00,
}
