// Code generated by protoc-gen-go. DO NOT EDIT.
// source: steammessages_hiddevices.proto

package steam // import "github.com/13k/go-steam-resources/protobuf/steam"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type EHIDDeviceLocation int32

const (
	EHIDDeviceLocation_k_EDeviceLocationLocal  EHIDDeviceLocation = 0
	EHIDDeviceLocation_k_EDeviceLocationRemote EHIDDeviceLocation = 2
	EHIDDeviceLocation_k_EDeviceLocationAny    EHIDDeviceLocation = 3
)

var EHIDDeviceLocation_name = map[int32]string{
	0: "k_EDeviceLocationLocal",
	2: "k_EDeviceLocationRemote",
	3: "k_EDeviceLocationAny",
}
var EHIDDeviceLocation_value = map[string]int32{
	"k_EDeviceLocationLocal":  0,
	"k_EDeviceLocationRemote": 2,
	"k_EDeviceLocationAny":    3,
}

func (x EHIDDeviceLocation) Enum() *EHIDDeviceLocation {
	p := new(EHIDDeviceLocation)
	*p = x
	return p
}
func (x EHIDDeviceLocation) String() string {
	return proto.EnumName(EHIDDeviceLocation_name, int32(x))
}
func (x *EHIDDeviceLocation) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EHIDDeviceLocation_value, data, "EHIDDeviceLocation")
	if err != nil {
		return err
	}
	*x = EHIDDeviceLocation(value)
	return nil
}
func (EHIDDeviceLocation) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_hiddevices_f35752be2b2e7310, []int{0}
}

type EHIDDeviceDisconnectMethod int32

const (
	EHIDDeviceDisconnectMethod_k_EDeviceDisconnectMethodUnknown       EHIDDeviceDisconnectMethod = 0
	EHIDDeviceDisconnectMethod_k_EDeviceDisconnectMethodBluetooth     EHIDDeviceDisconnectMethod = 1
	EHIDDeviceDisconnectMethod_k_EDeviceDisconnectMethodFeatureReport EHIDDeviceDisconnectMethod = 2
	EHIDDeviceDisconnectMethod_k_EDeviceDisconnectMethodOutputReport  EHIDDeviceDisconnectMethod = 3
)

var EHIDDeviceDisconnectMethod_name = map[int32]string{
	0: "k_EDeviceDisconnectMethodUnknown",
	1: "k_EDeviceDisconnectMethodBluetooth",
	2: "k_EDeviceDisconnectMethodFeatureReport",
	3: "k_EDeviceDisconnectMethodOutputReport",
}
var EHIDDeviceDisconnectMethod_value = map[string]int32{
	"k_EDeviceDisconnectMethodUnknown":       0,
	"k_EDeviceDisconnectMethodBluetooth":     1,
	"k_EDeviceDisconnectMethodFeatureReport": 2,
	"k_EDeviceDisconnectMethodOutputReport":  3,
}

func (x EHIDDeviceDisconnectMethod) Enum() *EHIDDeviceDisconnectMethod {
	p := new(EHIDDeviceDisconnectMethod)
	*p = x
	return p
}
func (x EHIDDeviceDisconnectMethod) String() string {
	return proto.EnumName(EHIDDeviceDisconnectMethod_name, int32(x))
}
func (x *EHIDDeviceDisconnectMethod) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EHIDDeviceDisconnectMethod_value, data, "EHIDDeviceDisconnectMethod")
	if err != nil {
		return err
	}
	*x = EHIDDeviceDisconnectMethod(value)
	return nil
}
func (EHIDDeviceDisconnectMethod) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_hiddevices_f35752be2b2e7310, []int{1}
}

type CHIDDeviceInfo struct {
	Location             *EHIDDeviceLocation `protobuf:"varint,1,opt,name=location,enum=EHIDDeviceLocation,def=0" json:"location,omitempty"`
	Path                 *string             `protobuf:"bytes,2,opt,name=path" json:"path,omitempty"`
	VendorId             *uint32             `protobuf:"varint,3,opt,name=vendor_id,json=vendorId" json:"vendor_id,omitempty"`
	ProductId            *uint32             `protobuf:"varint,4,opt,name=product_id,json=productId" json:"product_id,omitempty"`
	SerialNumber         *string             `protobuf:"bytes,5,opt,name=serial_number,json=serialNumber" json:"serial_number,omitempty"`
	ReleaseNumber        *uint32             `protobuf:"varint,6,opt,name=release_number,json=releaseNumber" json:"release_number,omitempty"`
	ManufacturerString   *string             `protobuf:"bytes,7,opt,name=manufacturer_string,json=manufacturerString" json:"manufacturer_string,omitempty"`
	ProductString        *string             `protobuf:"bytes,8,opt,name=product_string,json=productString" json:"product_string,omitempty"`
	UsagePage            *uint32             `protobuf:"varint,9,opt,name=usage_page,json=usagePage" json:"usage_page,omitempty"`
	Usage                *uint32             `protobuf:"varint,10,opt,name=usage" json:"usage,omitempty"`
	InterfaceNumber      *int32              `protobuf:"varint,11,opt,name=interface_number,json=interfaceNumber,def=-1" json:"interface_number,omitempty"`
	Ostype               *int32              `protobuf:"varint,12,opt,name=ostype,def=-1" json:"ostype,omitempty"`
	IsGenericGamepad     *bool               `protobuf:"varint,13,opt,name=is_generic_gamepad,json=isGenericGamepad" json:"is_generic_gamepad,omitempty"`
	IsGenericJoystick    *bool               `protobuf:"varint,14,opt,name=is_generic_joystick,json=isGenericJoystick" json:"is_generic_joystick,omitempty"`
	CapsBits             *uint32             `protobuf:"varint,15,opt,name=caps_bits,json=capsBits" json:"caps_bits,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *CHIDDeviceInfo) Reset()         { *m = CHIDDeviceInfo{} }
func (m *CHIDDeviceInfo) String() string { return proto.CompactTextString(m) }
func (*CHIDDeviceInfo) ProtoMessage()    {}
func (*CHIDDeviceInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_hiddevices_f35752be2b2e7310, []int{0}
}
func (m *CHIDDeviceInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CHIDDeviceInfo.Unmarshal(m, b)
}
func (m *CHIDDeviceInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CHIDDeviceInfo.Marshal(b, m, deterministic)
}
func (dst *CHIDDeviceInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CHIDDeviceInfo.Merge(dst, src)
}
func (m *CHIDDeviceInfo) XXX_Size() int {
	return xxx_messageInfo_CHIDDeviceInfo.Size(m)
}
func (m *CHIDDeviceInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_CHIDDeviceInfo.DiscardUnknown(m)
}

var xxx_messageInfo_CHIDDeviceInfo proto.InternalMessageInfo

const Default_CHIDDeviceInfo_Location EHIDDeviceLocation = EHIDDeviceLocation_k_EDeviceLocationLocal
const Default_CHIDDeviceInfo_InterfaceNumber int32 = -1
const Default_CHIDDeviceInfo_Ostype int32 = -1

func (m *CHIDDeviceInfo) GetLocation() EHIDDeviceLocation {
	if m != nil && m.Location != nil {
		return *m.Location
	}
	return Default_CHIDDeviceInfo_Location
}

func (m *CHIDDeviceInfo) GetPath() string {
	if m != nil && m.Path != nil {
		return *m.Path
	}
	return ""
}

func (m *CHIDDeviceInfo) GetVendorId() uint32 {
	if m != nil && m.VendorId != nil {
		return *m.VendorId
	}
	return 0
}

func (m *CHIDDeviceInfo) GetProductId() uint32 {
	if m != nil && m.ProductId != nil {
		return *m.ProductId
	}
	return 0
}

func (m *CHIDDeviceInfo) GetSerialNumber() string {
	if m != nil && m.SerialNumber != nil {
		return *m.SerialNumber
	}
	return ""
}

func (m *CHIDDeviceInfo) GetReleaseNumber() uint32 {
	if m != nil && m.ReleaseNumber != nil {
		return *m.ReleaseNumber
	}
	return 0
}

func (m *CHIDDeviceInfo) GetManufacturerString() string {
	if m != nil && m.ManufacturerString != nil {
		return *m.ManufacturerString
	}
	return ""
}

func (m *CHIDDeviceInfo) GetProductString() string {
	if m != nil && m.ProductString != nil {
		return *m.ProductString
	}
	return ""
}

func (m *CHIDDeviceInfo) GetUsagePage() uint32 {
	if m != nil && m.UsagePage != nil {
		return *m.UsagePage
	}
	return 0
}

func (m *CHIDDeviceInfo) GetUsage() uint32 {
	if m != nil && m.Usage != nil {
		return *m.Usage
	}
	return 0
}

func (m *CHIDDeviceInfo) GetInterfaceNumber() int32 {
	if m != nil && m.InterfaceNumber != nil {
		return *m.InterfaceNumber
	}
	return Default_CHIDDeviceInfo_InterfaceNumber
}

func (m *CHIDDeviceInfo) GetOstype() int32 {
	if m != nil && m.Ostype != nil {
		return *m.Ostype
	}
	return Default_CHIDDeviceInfo_Ostype
}

func (m *CHIDDeviceInfo) GetIsGenericGamepad() bool {
	if m != nil && m.IsGenericGamepad != nil {
		return *m.IsGenericGamepad
	}
	return false
}

func (m *CHIDDeviceInfo) GetIsGenericJoystick() bool {
	if m != nil && m.IsGenericJoystick != nil {
		return *m.IsGenericJoystick
	}
	return false
}

func (m *CHIDDeviceInfo) GetCapsBits() uint32 {
	if m != nil && m.CapsBits != nil {
		return *m.CapsBits
	}
	return 0
}

type CHIDDeviceInputReport struct {
	FullReport           []byte   `protobuf:"bytes,1,opt,name=full_report,json=fullReport" json:"full_report,omitempty"`
	DeltaReport          []byte   `protobuf:"bytes,2,opt,name=delta_report,json=deltaReport" json:"delta_report,omitempty"`
	DeltaReportSize      *uint32  `protobuf:"varint,3,opt,name=delta_report_size,json=deltaReportSize" json:"delta_report_size,omitempty"`
	DeltaReportCrc       *uint32  `protobuf:"varint,4,opt,name=delta_report_crc,json=deltaReportCrc" json:"delta_report_crc,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CHIDDeviceInputReport) Reset()         { *m = CHIDDeviceInputReport{} }
func (m *CHIDDeviceInputReport) String() string { return proto.CompactTextString(m) }
func (*CHIDDeviceInputReport) ProtoMessage()    {}
func (*CHIDDeviceInputReport) Descriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_hiddevices_f35752be2b2e7310, []int{1}
}
func (m *CHIDDeviceInputReport) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CHIDDeviceInputReport.Unmarshal(m, b)
}
func (m *CHIDDeviceInputReport) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CHIDDeviceInputReport.Marshal(b, m, deterministic)
}
func (dst *CHIDDeviceInputReport) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CHIDDeviceInputReport.Merge(dst, src)
}
func (m *CHIDDeviceInputReport) XXX_Size() int {
	return xxx_messageInfo_CHIDDeviceInputReport.Size(m)
}
func (m *CHIDDeviceInputReport) XXX_DiscardUnknown() {
	xxx_messageInfo_CHIDDeviceInputReport.DiscardUnknown(m)
}

var xxx_messageInfo_CHIDDeviceInputReport proto.InternalMessageInfo

func (m *CHIDDeviceInputReport) GetFullReport() []byte {
	if m != nil {
		return m.FullReport
	}
	return nil
}

func (m *CHIDDeviceInputReport) GetDeltaReport() []byte {
	if m != nil {
		return m.DeltaReport
	}
	return nil
}

func (m *CHIDDeviceInputReport) GetDeltaReportSize() uint32 {
	if m != nil && m.DeltaReportSize != nil {
		return *m.DeltaReportSize
	}
	return 0
}

func (m *CHIDDeviceInputReport) GetDeltaReportCrc() uint32 {
	if m != nil && m.DeltaReportCrc != nil {
		return *m.DeltaReportCrc
	}
	return 0
}

type CHIDMessageToRemote struct {
	RequestId *uint32 `protobuf:"varint,1,opt,name=request_id,json=requestId" json:"request_id,omitempty"`
	// Types that are valid to be assigned to Command:
	//	*CHIDMessageToRemote_DeviceOpen_
	//	*CHIDMessageToRemote_DeviceClose_
	//	*CHIDMessageToRemote_DeviceWrite_
	//	*CHIDMessageToRemote_DeviceRead_
	//	*CHIDMessageToRemote_DeviceSendFeatureReport_
	//	*CHIDMessageToRemote_DeviceGetFeatureReport_
	//	*CHIDMessageToRemote_DeviceGetVendorString_
	//	*CHIDMessageToRemote_DeviceGetProductString_
	//	*CHIDMessageToRemote_DeviceGetSerialNumberString_
	//	*CHIDMessageToRemote_DeviceStartInputReports_
	//	*CHIDMessageToRemote_DeviceRequestFullReport_
	//	*CHIDMessageToRemote_DeviceDisconnect_
	Command              isCHIDMessageToRemote_Command `protobuf_oneof:"command"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *CHIDMessageToRemote) Reset()         { *m = CHIDMessageToRemote{} }
func (m *CHIDMessageToRemote) String() string { return proto.CompactTextString(m) }
func (*CHIDMessageToRemote) ProtoMessage()    {}
func (*CHIDMessageToRemote) Descriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_hiddevices_f35752be2b2e7310, []int{2}
}
func (m *CHIDMessageToRemote) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CHIDMessageToRemote.Unmarshal(m, b)
}
func (m *CHIDMessageToRemote) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CHIDMessageToRemote.Marshal(b, m, deterministic)
}
func (dst *CHIDMessageToRemote) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CHIDMessageToRemote.Merge(dst, src)
}
func (m *CHIDMessageToRemote) XXX_Size() int {
	return xxx_messageInfo_CHIDMessageToRemote.Size(m)
}
func (m *CHIDMessageToRemote) XXX_DiscardUnknown() {
	xxx_messageInfo_CHIDMessageToRemote.DiscardUnknown(m)
}

var xxx_messageInfo_CHIDMessageToRemote proto.InternalMessageInfo

type isCHIDMessageToRemote_Command interface {
	isCHIDMessageToRemote_Command()
}

type CHIDMessageToRemote_DeviceOpen_ struct {
	DeviceOpen *CHIDMessageToRemote_DeviceOpen `protobuf:"bytes,2,opt,name=device_open,json=deviceOpen,oneof"`
}
type CHIDMessageToRemote_DeviceClose_ struct {
	DeviceClose *CHIDMessageToRemote_DeviceClose `protobuf:"bytes,3,opt,name=device_close,json=deviceClose,oneof"`
}
type CHIDMessageToRemote_DeviceWrite_ struct {
	DeviceWrite *CHIDMessageToRemote_DeviceWrite `protobuf:"bytes,4,opt,name=device_write,json=deviceWrite,oneof"`
}
type CHIDMessageToRemote_DeviceRead_ struct {
	DeviceRead *CHIDMessageToRemote_DeviceRead `protobuf:"bytes,5,opt,name=device_read,json=deviceRead,oneof"`
}
type CHIDMessageToRemote_DeviceSendFeatureReport_ struct {
	DeviceSendFeatureReport *CHIDMessageToRemote_DeviceSendFeatureReport `protobuf:"bytes,6,opt,name=device_send_feature_report,json=deviceSendFeatureReport,oneof"`
}
type CHIDMessageToRemote_DeviceGetFeatureReport_ struct {
	DeviceGetFeatureReport *CHIDMessageToRemote_DeviceGetFeatureReport `protobuf:"bytes,7,opt,name=device_get_feature_report,json=deviceGetFeatureReport,oneof"`
}
type CHIDMessageToRemote_DeviceGetVendorString_ struct {
	DeviceGetVendorString *CHIDMessageToRemote_DeviceGetVendorString `protobuf:"bytes,8,opt,name=device_get_vendor_string,json=deviceGetVendorString,oneof"`
}
type CHIDMessageToRemote_DeviceGetProductString_ struct {
	DeviceGetProductString *CHIDMessageToRemote_DeviceGetProductString `protobuf:"bytes,9,opt,name=device_get_product_string,json=deviceGetProductString,oneof"`
}
type CHIDMessageToRemote_DeviceGetSerialNumberString_ struct {
	DeviceGetSerialNumberString *CHIDMessageToRemote_DeviceGetSerialNumberString `protobuf:"bytes,10,opt,name=device_get_serial_number_string,json=deviceGetSerialNumberString,oneof"`
}
type CHIDMessageToRemote_DeviceStartInputReports_ struct {
	DeviceStartInputReports *CHIDMessageToRemote_DeviceStartInputReports `protobuf:"bytes,11,opt,name=device_start_input_reports,json=deviceStartInputReports,oneof"`
}
type CHIDMessageToRemote_DeviceRequestFullReport_ struct {
	DeviceRequestFullReport *CHIDMessageToRemote_DeviceRequestFullReport `protobuf:"bytes,12,opt,name=device_request_full_report,json=deviceRequestFullReport,oneof"`
}
type CHIDMessageToRemote_DeviceDisconnect_ struct {
	DeviceDisconnect *CHIDMessageToRemote_DeviceDisconnect `protobuf:"bytes,13,opt,name=device_disconnect,json=deviceDisconnect,oneof"`
}

func (*CHIDMessageToRemote_DeviceOpen_) isCHIDMessageToRemote_Command()                  {}
func (*CHIDMessageToRemote_DeviceClose_) isCHIDMessageToRemote_Command()                 {}
func (*CHIDMessageToRemote_DeviceWrite_) isCHIDMessageToRemote_Command()                 {}
func (*CHIDMessageToRemote_DeviceRead_) isCHIDMessageToRemote_Command()                  {}
func (*CHIDMessageToRemote_DeviceSendFeatureReport_) isCHIDMessageToRemote_Command()     {}
func (*CHIDMessageToRemote_DeviceGetFeatureReport_) isCHIDMessageToRemote_Command()      {}
func (*CHIDMessageToRemote_DeviceGetVendorString_) isCHIDMessageToRemote_Command()       {}
func (*CHIDMessageToRemote_DeviceGetProductString_) isCHIDMessageToRemote_Command()      {}
func (*CHIDMessageToRemote_DeviceGetSerialNumberString_) isCHIDMessageToRemote_Command() {}
func (*CHIDMessageToRemote_DeviceStartInputReports_) isCHIDMessageToRemote_Command()     {}
func (*CHIDMessageToRemote_DeviceRequestFullReport_) isCHIDMessageToRemote_Command()     {}
func (*CHIDMessageToRemote_DeviceDisconnect_) isCHIDMessageToRemote_Command()            {}

func (m *CHIDMessageToRemote) GetCommand() isCHIDMessageToRemote_Command {
	if m != nil {
		return m.Command
	}
	return nil
}

func (m *CHIDMessageToRemote) GetRequestId() uint32 {
	if m != nil && m.RequestId != nil {
		return *m.RequestId
	}
	return 0
}

func (m *CHIDMessageToRemote) GetDeviceOpen() *CHIDMessageToRemote_DeviceOpen {
	if x, ok := m.GetCommand().(*CHIDMessageToRemote_DeviceOpen_); ok {
		return x.DeviceOpen
	}
	return nil
}

func (m *CHIDMessageToRemote) GetDeviceClose() *CHIDMessageToRemote_DeviceClose {
	if x, ok := m.GetCommand().(*CHIDMessageToRemote_DeviceClose_); ok {
		return x.DeviceClose
	}
	return nil
}

func (m *CHIDMessageToRemote) GetDeviceWrite() *CHIDMessageToRemote_DeviceWrite {
	if x, ok := m.GetCommand().(*CHIDMessageToRemote_DeviceWrite_); ok {
		return x.DeviceWrite
	}
	return nil
}

func (m *CHIDMessageToRemote) GetDeviceRead() *CHIDMessageToRemote_DeviceRead {
	if x, ok := m.GetCommand().(*CHIDMessageToRemote_DeviceRead_); ok {
		return x.DeviceRead
	}
	return nil
}

func (m *CHIDMessageToRemote) GetDeviceSendFeatureReport() *CHIDMessageToRemote_DeviceSendFeatureReport {
	if x, ok := m.GetCommand().(*CHIDMessageToRemote_DeviceSendFeatureReport_); ok {
		return x.DeviceSendFeatureReport
	}
	return nil
}

func (m *CHIDMessageToRemote) GetDeviceGetFeatureReport() *CHIDMessageToRemote_DeviceGetFeatureReport {
	if x, ok := m.GetCommand().(*CHIDMessageToRemote_DeviceGetFeatureReport_); ok {
		return x.DeviceGetFeatureReport
	}
	return nil
}

func (m *CHIDMessageToRemote) GetDeviceGetVendorString() *CHIDMessageToRemote_DeviceGetVendorString {
	if x, ok := m.GetCommand().(*CHIDMessageToRemote_DeviceGetVendorString_); ok {
		return x.DeviceGetVendorString
	}
	return nil
}

func (m *CHIDMessageToRemote) GetDeviceGetProductString() *CHIDMessageToRemote_DeviceGetProductString {
	if x, ok := m.GetCommand().(*CHIDMessageToRemote_DeviceGetProductString_); ok {
		return x.DeviceGetProductString
	}
	return nil
}

func (m *CHIDMessageToRemote) GetDeviceGetSerialNumberString() *CHIDMessageToRemote_DeviceGetSerialNumberString {
	if x, ok := m.GetCommand().(*CHIDMessageToRemote_DeviceGetSerialNumberString_); ok {
		return x.DeviceGetSerialNumberString
	}
	return nil
}

func (m *CHIDMessageToRemote) GetDeviceStartInputReports() *CHIDMessageToRemote_DeviceStartInputReports {
	if x, ok := m.GetCommand().(*CHIDMessageToRemote_DeviceStartInputReports_); ok {
		return x.DeviceStartInputReports
	}
	return nil
}

func (m *CHIDMessageToRemote) GetDeviceRequestFullReport() *CHIDMessageToRemote_DeviceRequestFullReport {
	if x, ok := m.GetCommand().(*CHIDMessageToRemote_DeviceRequestFullReport_); ok {
		return x.DeviceRequestFullReport
	}
	return nil
}

func (m *CHIDMessageToRemote) GetDeviceDisconnect() *CHIDMessageToRemote_DeviceDisconnect {
	if x, ok := m.GetCommand().(*CHIDMessageToRemote_DeviceDisconnect_); ok {
		return x.DeviceDisconnect
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*CHIDMessageToRemote) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _CHIDMessageToRemote_OneofMarshaler, _CHIDMessageToRemote_OneofUnmarshaler, _CHIDMessageToRemote_OneofSizer, []interface{}{
		(*CHIDMessageToRemote_DeviceOpen_)(nil),
		(*CHIDMessageToRemote_DeviceClose_)(nil),
		(*CHIDMessageToRemote_DeviceWrite_)(nil),
		(*CHIDMessageToRemote_DeviceRead_)(nil),
		(*CHIDMessageToRemote_DeviceSendFeatureReport_)(nil),
		(*CHIDMessageToRemote_DeviceGetFeatureReport_)(nil),
		(*CHIDMessageToRemote_DeviceGetVendorString_)(nil),
		(*CHIDMessageToRemote_DeviceGetProductString_)(nil),
		(*CHIDMessageToRemote_DeviceGetSerialNumberString_)(nil),
		(*CHIDMessageToRemote_DeviceStartInputReports_)(nil),
		(*CHIDMessageToRemote_DeviceRequestFullReport_)(nil),
		(*CHIDMessageToRemote_DeviceDisconnect_)(nil),
	}
}

func _CHIDMessageToRemote_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*CHIDMessageToRemote)
	// command
	switch x := m.Command.(type) {
	case *CHIDMessageToRemote_DeviceOpen_:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DeviceOpen); err != nil {
			return err
		}
	case *CHIDMessageToRemote_DeviceClose_:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DeviceClose); err != nil {
			return err
		}
	case *CHIDMessageToRemote_DeviceWrite_:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DeviceWrite); err != nil {
			return err
		}
	case *CHIDMessageToRemote_DeviceRead_:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DeviceRead); err != nil {
			return err
		}
	case *CHIDMessageToRemote_DeviceSendFeatureReport_:
		b.EncodeVarint(6<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DeviceSendFeatureReport); err != nil {
			return err
		}
	case *CHIDMessageToRemote_DeviceGetFeatureReport_:
		b.EncodeVarint(7<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DeviceGetFeatureReport); err != nil {
			return err
		}
	case *CHIDMessageToRemote_DeviceGetVendorString_:
		b.EncodeVarint(8<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DeviceGetVendorString); err != nil {
			return err
		}
	case *CHIDMessageToRemote_DeviceGetProductString_:
		b.EncodeVarint(9<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DeviceGetProductString); err != nil {
			return err
		}
	case *CHIDMessageToRemote_DeviceGetSerialNumberString_:
		b.EncodeVarint(10<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DeviceGetSerialNumberString); err != nil {
			return err
		}
	case *CHIDMessageToRemote_DeviceStartInputReports_:
		b.EncodeVarint(11<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DeviceStartInputReports); err != nil {
			return err
		}
	case *CHIDMessageToRemote_DeviceRequestFullReport_:
		b.EncodeVarint(12<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DeviceRequestFullReport); err != nil {
			return err
		}
	case *CHIDMessageToRemote_DeviceDisconnect_:
		b.EncodeVarint(13<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DeviceDisconnect); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("CHIDMessageToRemote.Command has unexpected type %T", x)
	}
	return nil
}

func _CHIDMessageToRemote_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*CHIDMessageToRemote)
	switch tag {
	case 2: // command.device_open
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CHIDMessageToRemote_DeviceOpen)
		err := b.DecodeMessage(msg)
		m.Command = &CHIDMessageToRemote_DeviceOpen_{msg}
		return true, err
	case 3: // command.device_close
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CHIDMessageToRemote_DeviceClose)
		err := b.DecodeMessage(msg)
		m.Command = &CHIDMessageToRemote_DeviceClose_{msg}
		return true, err
	case 4: // command.device_write
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CHIDMessageToRemote_DeviceWrite)
		err := b.DecodeMessage(msg)
		m.Command = &CHIDMessageToRemote_DeviceWrite_{msg}
		return true, err
	case 5: // command.device_read
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CHIDMessageToRemote_DeviceRead)
		err := b.DecodeMessage(msg)
		m.Command = &CHIDMessageToRemote_DeviceRead_{msg}
		return true, err
	case 6: // command.device_send_feature_report
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CHIDMessageToRemote_DeviceSendFeatureReport)
		err := b.DecodeMessage(msg)
		m.Command = &CHIDMessageToRemote_DeviceSendFeatureReport_{msg}
		return true, err
	case 7: // command.device_get_feature_report
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CHIDMessageToRemote_DeviceGetFeatureReport)
		err := b.DecodeMessage(msg)
		m.Command = &CHIDMessageToRemote_DeviceGetFeatureReport_{msg}
		return true, err
	case 8: // command.device_get_vendor_string
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CHIDMessageToRemote_DeviceGetVendorString)
		err := b.DecodeMessage(msg)
		m.Command = &CHIDMessageToRemote_DeviceGetVendorString_{msg}
		return true, err
	case 9: // command.device_get_product_string
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CHIDMessageToRemote_DeviceGetProductString)
		err := b.DecodeMessage(msg)
		m.Command = &CHIDMessageToRemote_DeviceGetProductString_{msg}
		return true, err
	case 10: // command.device_get_serial_number_string
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CHIDMessageToRemote_DeviceGetSerialNumberString)
		err := b.DecodeMessage(msg)
		m.Command = &CHIDMessageToRemote_DeviceGetSerialNumberString_{msg}
		return true, err
	case 11: // command.device_start_input_reports
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CHIDMessageToRemote_DeviceStartInputReports)
		err := b.DecodeMessage(msg)
		m.Command = &CHIDMessageToRemote_DeviceStartInputReports_{msg}
		return true, err
	case 12: // command.device_request_full_report
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CHIDMessageToRemote_DeviceRequestFullReport)
		err := b.DecodeMessage(msg)
		m.Command = &CHIDMessageToRemote_DeviceRequestFullReport_{msg}
		return true, err
	case 13: // command.device_disconnect
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CHIDMessageToRemote_DeviceDisconnect)
		err := b.DecodeMessage(msg)
		m.Command = &CHIDMessageToRemote_DeviceDisconnect_{msg}
		return true, err
	default:
		return false, nil
	}
}

func _CHIDMessageToRemote_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*CHIDMessageToRemote)
	// command
	switch x := m.Command.(type) {
	case *CHIDMessageToRemote_DeviceOpen_:
		s := proto.Size(x.DeviceOpen)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *CHIDMessageToRemote_DeviceClose_:
		s := proto.Size(x.DeviceClose)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *CHIDMessageToRemote_DeviceWrite_:
		s := proto.Size(x.DeviceWrite)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *CHIDMessageToRemote_DeviceRead_:
		s := proto.Size(x.DeviceRead)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *CHIDMessageToRemote_DeviceSendFeatureReport_:
		s := proto.Size(x.DeviceSendFeatureReport)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *CHIDMessageToRemote_DeviceGetFeatureReport_:
		s := proto.Size(x.DeviceGetFeatureReport)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *CHIDMessageToRemote_DeviceGetVendorString_:
		s := proto.Size(x.DeviceGetVendorString)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *CHIDMessageToRemote_DeviceGetProductString_:
		s := proto.Size(x.DeviceGetProductString)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *CHIDMessageToRemote_DeviceGetSerialNumberString_:
		s := proto.Size(x.DeviceGetSerialNumberString)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *CHIDMessageToRemote_DeviceStartInputReports_:
		s := proto.Size(x.DeviceStartInputReports)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *CHIDMessageToRemote_DeviceRequestFullReport_:
		s := proto.Size(x.DeviceRequestFullReport)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *CHIDMessageToRemote_DeviceDisconnect_:
		s := proto.Size(x.DeviceDisconnect)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type CHIDMessageToRemote_DeviceOpen struct {
	Info                 *CHIDDeviceInfo `protobuf:"bytes,1,opt,name=info" json:"info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *CHIDMessageToRemote_DeviceOpen) Reset()         { *m = CHIDMessageToRemote_DeviceOpen{} }
func (m *CHIDMessageToRemote_DeviceOpen) String() string { return proto.CompactTextString(m) }
func (*CHIDMessageToRemote_DeviceOpen) ProtoMessage()    {}
func (*CHIDMessageToRemote_DeviceOpen) Descriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_hiddevices_f35752be2b2e7310, []int{2, 0}
}
func (m *CHIDMessageToRemote_DeviceOpen) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CHIDMessageToRemote_DeviceOpen.Unmarshal(m, b)
}
func (m *CHIDMessageToRemote_DeviceOpen) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CHIDMessageToRemote_DeviceOpen.Marshal(b, m, deterministic)
}
func (dst *CHIDMessageToRemote_DeviceOpen) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CHIDMessageToRemote_DeviceOpen.Merge(dst, src)
}
func (m *CHIDMessageToRemote_DeviceOpen) XXX_Size() int {
	return xxx_messageInfo_CHIDMessageToRemote_DeviceOpen.Size(m)
}
func (m *CHIDMessageToRemote_DeviceOpen) XXX_DiscardUnknown() {
	xxx_messageInfo_CHIDMessageToRemote_DeviceOpen.DiscardUnknown(m)
}

var xxx_messageInfo_CHIDMessageToRemote_DeviceOpen proto.InternalMessageInfo

func (m *CHIDMessageToRemote_DeviceOpen) GetInfo() *CHIDDeviceInfo {
	if m != nil {
		return m.Info
	}
	return nil
}

type CHIDMessageToRemote_DeviceClose struct {
	Device               *uint32  `protobuf:"varint,1,opt,name=device" json:"device,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CHIDMessageToRemote_DeviceClose) Reset()         { *m = CHIDMessageToRemote_DeviceClose{} }
func (m *CHIDMessageToRemote_DeviceClose) String() string { return proto.CompactTextString(m) }
func (*CHIDMessageToRemote_DeviceClose) ProtoMessage()    {}
func (*CHIDMessageToRemote_DeviceClose) Descriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_hiddevices_f35752be2b2e7310, []int{2, 1}
}
func (m *CHIDMessageToRemote_DeviceClose) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CHIDMessageToRemote_DeviceClose.Unmarshal(m, b)
}
func (m *CHIDMessageToRemote_DeviceClose) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CHIDMessageToRemote_DeviceClose.Marshal(b, m, deterministic)
}
func (dst *CHIDMessageToRemote_DeviceClose) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CHIDMessageToRemote_DeviceClose.Merge(dst, src)
}
func (m *CHIDMessageToRemote_DeviceClose) XXX_Size() int {
	return xxx_messageInfo_CHIDMessageToRemote_DeviceClose.Size(m)
}
func (m *CHIDMessageToRemote_DeviceClose) XXX_DiscardUnknown() {
	xxx_messageInfo_CHIDMessageToRemote_DeviceClose.DiscardUnknown(m)
}

var xxx_messageInfo_CHIDMessageToRemote_DeviceClose proto.InternalMessageInfo

func (m *CHIDMessageToRemote_DeviceClose) GetDevice() uint32 {
	if m != nil && m.Device != nil {
		return *m.Device
	}
	return 0
}

type CHIDMessageToRemote_DeviceWrite struct {
	Device               *uint32  `protobuf:"varint,1,opt,name=device" json:"device,omitempty"`
	Data                 []byte   `protobuf:"bytes,2,opt,name=data" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CHIDMessageToRemote_DeviceWrite) Reset()         { *m = CHIDMessageToRemote_DeviceWrite{} }
func (m *CHIDMessageToRemote_DeviceWrite) String() string { return proto.CompactTextString(m) }
func (*CHIDMessageToRemote_DeviceWrite) ProtoMessage()    {}
func (*CHIDMessageToRemote_DeviceWrite) Descriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_hiddevices_f35752be2b2e7310, []int{2, 2}
}
func (m *CHIDMessageToRemote_DeviceWrite) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CHIDMessageToRemote_DeviceWrite.Unmarshal(m, b)
}
func (m *CHIDMessageToRemote_DeviceWrite) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CHIDMessageToRemote_DeviceWrite.Marshal(b, m, deterministic)
}
func (dst *CHIDMessageToRemote_DeviceWrite) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CHIDMessageToRemote_DeviceWrite.Merge(dst, src)
}
func (m *CHIDMessageToRemote_DeviceWrite) XXX_Size() int {
	return xxx_messageInfo_CHIDMessageToRemote_DeviceWrite.Size(m)
}
func (m *CHIDMessageToRemote_DeviceWrite) XXX_DiscardUnknown() {
	xxx_messageInfo_CHIDMessageToRemote_DeviceWrite.DiscardUnknown(m)
}

var xxx_messageInfo_CHIDMessageToRemote_DeviceWrite proto.InternalMessageInfo

func (m *CHIDMessageToRemote_DeviceWrite) GetDevice() uint32 {
	if m != nil && m.Device != nil {
		return *m.Device
	}
	return 0
}

func (m *CHIDMessageToRemote_DeviceWrite) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type CHIDMessageToRemote_DeviceRead struct {
	Device               *uint32  `protobuf:"varint,1,opt,name=device" json:"device,omitempty"`
	Length               *uint32  `protobuf:"varint,2,opt,name=length" json:"length,omitempty"`
	TimeoutMs            *int32   `protobuf:"varint,3,opt,name=timeout_ms,json=timeoutMs" json:"timeout_ms,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CHIDMessageToRemote_DeviceRead) Reset()         { *m = CHIDMessageToRemote_DeviceRead{} }
func (m *CHIDMessageToRemote_DeviceRead) String() string { return proto.CompactTextString(m) }
func (*CHIDMessageToRemote_DeviceRead) ProtoMessage()    {}
func (*CHIDMessageToRemote_DeviceRead) Descriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_hiddevices_f35752be2b2e7310, []int{2, 3}
}
func (m *CHIDMessageToRemote_DeviceRead) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CHIDMessageToRemote_DeviceRead.Unmarshal(m, b)
}
func (m *CHIDMessageToRemote_DeviceRead) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CHIDMessageToRemote_DeviceRead.Marshal(b, m, deterministic)
}
func (dst *CHIDMessageToRemote_DeviceRead) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CHIDMessageToRemote_DeviceRead.Merge(dst, src)
}
func (m *CHIDMessageToRemote_DeviceRead) XXX_Size() int {
	return xxx_messageInfo_CHIDMessageToRemote_DeviceRead.Size(m)
}
func (m *CHIDMessageToRemote_DeviceRead) XXX_DiscardUnknown() {
	xxx_messageInfo_CHIDMessageToRemote_DeviceRead.DiscardUnknown(m)
}

var xxx_messageInfo_CHIDMessageToRemote_DeviceRead proto.InternalMessageInfo

func (m *CHIDMessageToRemote_DeviceRead) GetDevice() uint32 {
	if m != nil && m.Device != nil {
		return *m.Device
	}
	return 0
}

func (m *CHIDMessageToRemote_DeviceRead) GetLength() uint32 {
	if m != nil && m.Length != nil {
		return *m.Length
	}
	return 0
}

func (m *CHIDMessageToRemote_DeviceRead) GetTimeoutMs() int32 {
	if m != nil && m.TimeoutMs != nil {
		return *m.TimeoutMs
	}
	return 0
}

type CHIDMessageToRemote_DeviceSendFeatureReport struct {
	Device               *uint32  `protobuf:"varint,1,opt,name=device" json:"device,omitempty"`
	Data                 []byte   `protobuf:"bytes,2,opt,name=data" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CHIDMessageToRemote_DeviceSendFeatureReport) Reset() {
	*m = CHIDMessageToRemote_DeviceSendFeatureReport{}
}
func (m *CHIDMessageToRemote_DeviceSendFeatureReport) String() string {
	return proto.CompactTextString(m)
}
func (*CHIDMessageToRemote_DeviceSendFeatureReport) ProtoMessage() {}
func (*CHIDMessageToRemote_DeviceSendFeatureReport) Descriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_hiddevices_f35752be2b2e7310, []int{2, 4}
}
func (m *CHIDMessageToRemote_DeviceSendFeatureReport) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CHIDMessageToRemote_DeviceSendFeatureReport.Unmarshal(m, b)
}
func (m *CHIDMessageToRemote_DeviceSendFeatureReport) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CHIDMessageToRemote_DeviceSendFeatureReport.Marshal(b, m, deterministic)
}
func (dst *CHIDMessageToRemote_DeviceSendFeatureReport) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CHIDMessageToRemote_DeviceSendFeatureReport.Merge(dst, src)
}
func (m *CHIDMessageToRemote_DeviceSendFeatureReport) XXX_Size() int {
	return xxx_messageInfo_CHIDMessageToRemote_DeviceSendFeatureReport.Size(m)
}
func (m *CHIDMessageToRemote_DeviceSendFeatureReport) XXX_DiscardUnknown() {
	xxx_messageInfo_CHIDMessageToRemote_DeviceSendFeatureReport.DiscardUnknown(m)
}

var xxx_messageInfo_CHIDMessageToRemote_DeviceSendFeatureReport proto.InternalMessageInfo

func (m *CHIDMessageToRemote_DeviceSendFeatureReport) GetDevice() uint32 {
	if m != nil && m.Device != nil {
		return *m.Device
	}
	return 0
}

func (m *CHIDMessageToRemote_DeviceSendFeatureReport) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type CHIDMessageToRemote_DeviceGetFeatureReport struct {
	Device               *uint32  `protobuf:"varint,1,opt,name=device" json:"device,omitempty"`
	ReportNumber         []byte   `protobuf:"bytes,2,opt,name=report_number,json=reportNumber" json:"report_number,omitempty"`
	Length               *uint32  `protobuf:"varint,3,opt,name=length" json:"length,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CHIDMessageToRemote_DeviceGetFeatureReport) Reset() {
	*m = CHIDMessageToRemote_DeviceGetFeatureReport{}
}
func (m *CHIDMessageToRemote_DeviceGetFeatureReport) String() string {
	return proto.CompactTextString(m)
}
func (*CHIDMessageToRemote_DeviceGetFeatureReport) ProtoMessage() {}
func (*CHIDMessageToRemote_DeviceGetFeatureReport) Descriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_hiddevices_f35752be2b2e7310, []int{2, 5}
}
func (m *CHIDMessageToRemote_DeviceGetFeatureReport) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CHIDMessageToRemote_DeviceGetFeatureReport.Unmarshal(m, b)
}
func (m *CHIDMessageToRemote_DeviceGetFeatureReport) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CHIDMessageToRemote_DeviceGetFeatureReport.Marshal(b, m, deterministic)
}
func (dst *CHIDMessageToRemote_DeviceGetFeatureReport) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CHIDMessageToRemote_DeviceGetFeatureReport.Merge(dst, src)
}
func (m *CHIDMessageToRemote_DeviceGetFeatureReport) XXX_Size() int {
	return xxx_messageInfo_CHIDMessageToRemote_DeviceGetFeatureReport.Size(m)
}
func (m *CHIDMessageToRemote_DeviceGetFeatureReport) XXX_DiscardUnknown() {
	xxx_messageInfo_CHIDMessageToRemote_DeviceGetFeatureReport.DiscardUnknown(m)
}

var xxx_messageInfo_CHIDMessageToRemote_DeviceGetFeatureReport proto.InternalMessageInfo

func (m *CHIDMessageToRemote_DeviceGetFeatureReport) GetDevice() uint32 {
	if m != nil && m.Device != nil {
		return *m.Device
	}
	return 0
}

func (m *CHIDMessageToRemote_DeviceGetFeatureReport) GetReportNumber() []byte {
	if m != nil {
		return m.ReportNumber
	}
	return nil
}

func (m *CHIDMessageToRemote_DeviceGetFeatureReport) GetLength() uint32 {
	if m != nil && m.Length != nil {
		return *m.Length
	}
	return 0
}

type CHIDMessageToRemote_DeviceGetVendorString struct {
	Device               *uint32  `protobuf:"varint,1,opt,name=device" json:"device,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CHIDMessageToRemote_DeviceGetVendorString) Reset() {
	*m = CHIDMessageToRemote_DeviceGetVendorString{}
}
func (m *CHIDMessageToRemote_DeviceGetVendorString) String() string { return proto.CompactTextString(m) }
func (*CHIDMessageToRemote_DeviceGetVendorString) ProtoMessage()    {}
func (*CHIDMessageToRemote_DeviceGetVendorString) Descriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_hiddevices_f35752be2b2e7310, []int{2, 6}
}
func (m *CHIDMessageToRemote_DeviceGetVendorString) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CHIDMessageToRemote_DeviceGetVendorString.Unmarshal(m, b)
}
func (m *CHIDMessageToRemote_DeviceGetVendorString) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CHIDMessageToRemote_DeviceGetVendorString.Marshal(b, m, deterministic)
}
func (dst *CHIDMessageToRemote_DeviceGetVendorString) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CHIDMessageToRemote_DeviceGetVendorString.Merge(dst, src)
}
func (m *CHIDMessageToRemote_DeviceGetVendorString) XXX_Size() int {
	return xxx_messageInfo_CHIDMessageToRemote_DeviceGetVendorString.Size(m)
}
func (m *CHIDMessageToRemote_DeviceGetVendorString) XXX_DiscardUnknown() {
	xxx_messageInfo_CHIDMessageToRemote_DeviceGetVendorString.DiscardUnknown(m)
}

var xxx_messageInfo_CHIDMessageToRemote_DeviceGetVendorString proto.InternalMessageInfo

func (m *CHIDMessageToRemote_DeviceGetVendorString) GetDevice() uint32 {
	if m != nil && m.Device != nil {
		return *m.Device
	}
	return 0
}

type CHIDMessageToRemote_DeviceGetProductString struct {
	Device               *uint32  `protobuf:"varint,1,opt,name=device" json:"device,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CHIDMessageToRemote_DeviceGetProductString) Reset() {
	*m = CHIDMessageToRemote_DeviceGetProductString{}
}
func (m *CHIDMessageToRemote_DeviceGetProductString) String() string {
	return proto.CompactTextString(m)
}
func (*CHIDMessageToRemote_DeviceGetProductString) ProtoMessage() {}
func (*CHIDMessageToRemote_DeviceGetProductString) Descriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_hiddevices_f35752be2b2e7310, []int{2, 7}
}
func (m *CHIDMessageToRemote_DeviceGetProductString) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CHIDMessageToRemote_DeviceGetProductString.Unmarshal(m, b)
}
func (m *CHIDMessageToRemote_DeviceGetProductString) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CHIDMessageToRemote_DeviceGetProductString.Marshal(b, m, deterministic)
}
func (dst *CHIDMessageToRemote_DeviceGetProductString) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CHIDMessageToRemote_DeviceGetProductString.Merge(dst, src)
}
func (m *CHIDMessageToRemote_DeviceGetProductString) XXX_Size() int {
	return xxx_messageInfo_CHIDMessageToRemote_DeviceGetProductString.Size(m)
}
func (m *CHIDMessageToRemote_DeviceGetProductString) XXX_DiscardUnknown() {
	xxx_messageInfo_CHIDMessageToRemote_DeviceGetProductString.DiscardUnknown(m)
}

var xxx_messageInfo_CHIDMessageToRemote_DeviceGetProductString proto.InternalMessageInfo

func (m *CHIDMessageToRemote_DeviceGetProductString) GetDevice() uint32 {
	if m != nil && m.Device != nil {
		return *m.Device
	}
	return 0
}

type CHIDMessageToRemote_DeviceGetSerialNumberString struct {
	Device               *uint32  `protobuf:"varint,1,opt,name=device" json:"device,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CHIDMessageToRemote_DeviceGetSerialNumberString) Reset() {
	*m = CHIDMessageToRemote_DeviceGetSerialNumberString{}
}
func (m *CHIDMessageToRemote_DeviceGetSerialNumberString) String() string {
	return proto.CompactTextString(m)
}
func (*CHIDMessageToRemote_DeviceGetSerialNumberString) ProtoMessage() {}
func (*CHIDMessageToRemote_DeviceGetSerialNumberString) Descriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_hiddevices_f35752be2b2e7310, []int{2, 8}
}
func (m *CHIDMessageToRemote_DeviceGetSerialNumberString) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CHIDMessageToRemote_DeviceGetSerialNumberString.Unmarshal(m, b)
}
func (m *CHIDMessageToRemote_DeviceGetSerialNumberString) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CHIDMessageToRemote_DeviceGetSerialNumberString.Marshal(b, m, deterministic)
}
func (dst *CHIDMessageToRemote_DeviceGetSerialNumberString) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CHIDMessageToRemote_DeviceGetSerialNumberString.Merge(dst, src)
}
func (m *CHIDMessageToRemote_DeviceGetSerialNumberString) XXX_Size() int {
	return xxx_messageInfo_CHIDMessageToRemote_DeviceGetSerialNumberString.Size(m)
}
func (m *CHIDMessageToRemote_DeviceGetSerialNumberString) XXX_DiscardUnknown() {
	xxx_messageInfo_CHIDMessageToRemote_DeviceGetSerialNumberString.DiscardUnknown(m)
}

var xxx_messageInfo_CHIDMessageToRemote_DeviceGetSerialNumberString proto.InternalMessageInfo

func (m *CHIDMessageToRemote_DeviceGetSerialNumberString) GetDevice() uint32 {
	if m != nil && m.Device != nil {
		return *m.Device
	}
	return 0
}

type CHIDMessageToRemote_DeviceStartInputReports struct {
	Device               *uint32  `protobuf:"varint,1,opt,name=device" json:"device,omitempty"`
	Length               *uint32  `protobuf:"varint,2,opt,name=length" json:"length,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CHIDMessageToRemote_DeviceStartInputReports) Reset() {
	*m = CHIDMessageToRemote_DeviceStartInputReports{}
}
func (m *CHIDMessageToRemote_DeviceStartInputReports) String() string {
	return proto.CompactTextString(m)
}
func (*CHIDMessageToRemote_DeviceStartInputReports) ProtoMessage() {}
func (*CHIDMessageToRemote_DeviceStartInputReports) Descriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_hiddevices_f35752be2b2e7310, []int{2, 9}
}
func (m *CHIDMessageToRemote_DeviceStartInputReports) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CHIDMessageToRemote_DeviceStartInputReports.Unmarshal(m, b)
}
func (m *CHIDMessageToRemote_DeviceStartInputReports) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CHIDMessageToRemote_DeviceStartInputReports.Marshal(b, m, deterministic)
}
func (dst *CHIDMessageToRemote_DeviceStartInputReports) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CHIDMessageToRemote_DeviceStartInputReports.Merge(dst, src)
}
func (m *CHIDMessageToRemote_DeviceStartInputReports) XXX_Size() int {
	return xxx_messageInfo_CHIDMessageToRemote_DeviceStartInputReports.Size(m)
}
func (m *CHIDMessageToRemote_DeviceStartInputReports) XXX_DiscardUnknown() {
	xxx_messageInfo_CHIDMessageToRemote_DeviceStartInputReports.DiscardUnknown(m)
}

var xxx_messageInfo_CHIDMessageToRemote_DeviceStartInputReports proto.InternalMessageInfo

func (m *CHIDMessageToRemote_DeviceStartInputReports) GetDevice() uint32 {
	if m != nil && m.Device != nil {
		return *m.Device
	}
	return 0
}

func (m *CHIDMessageToRemote_DeviceStartInputReports) GetLength() uint32 {
	if m != nil && m.Length != nil {
		return *m.Length
	}
	return 0
}

type CHIDMessageToRemote_DeviceRequestFullReport struct {
	Device               *uint32  `protobuf:"varint,1,opt,name=device" json:"device,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CHIDMessageToRemote_DeviceRequestFullReport) Reset() {
	*m = CHIDMessageToRemote_DeviceRequestFullReport{}
}
func (m *CHIDMessageToRemote_DeviceRequestFullReport) String() string {
	return proto.CompactTextString(m)
}
func (*CHIDMessageToRemote_DeviceRequestFullReport) ProtoMessage() {}
func (*CHIDMessageToRemote_DeviceRequestFullReport) Descriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_hiddevices_f35752be2b2e7310, []int{2, 10}
}
func (m *CHIDMessageToRemote_DeviceRequestFullReport) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CHIDMessageToRemote_DeviceRequestFullReport.Unmarshal(m, b)
}
func (m *CHIDMessageToRemote_DeviceRequestFullReport) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CHIDMessageToRemote_DeviceRequestFullReport.Marshal(b, m, deterministic)
}
func (dst *CHIDMessageToRemote_DeviceRequestFullReport) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CHIDMessageToRemote_DeviceRequestFullReport.Merge(dst, src)
}
func (m *CHIDMessageToRemote_DeviceRequestFullReport) XXX_Size() int {
	return xxx_messageInfo_CHIDMessageToRemote_DeviceRequestFullReport.Size(m)
}
func (m *CHIDMessageToRemote_DeviceRequestFullReport) XXX_DiscardUnknown() {
	xxx_messageInfo_CHIDMessageToRemote_DeviceRequestFullReport.DiscardUnknown(m)
}

var xxx_messageInfo_CHIDMessageToRemote_DeviceRequestFullReport proto.InternalMessageInfo

func (m *CHIDMessageToRemote_DeviceRequestFullReport) GetDevice() uint32 {
	if m != nil && m.Device != nil {
		return *m.Device
	}
	return 0
}

type CHIDMessageToRemote_DeviceDisconnect struct {
	Device               *uint32                     `protobuf:"varint,1,opt,name=device" json:"device,omitempty"`
	DisconnectMethod     *EHIDDeviceDisconnectMethod `protobuf:"varint,2,opt,name=disconnectMethod,enum=EHIDDeviceDisconnectMethod,def=0" json:"disconnectMethod,omitempty"`
	Data                 []byte                      `protobuf:"bytes,3,opt,name=data" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *CHIDMessageToRemote_DeviceDisconnect) Reset()         { *m = CHIDMessageToRemote_DeviceDisconnect{} }
func (m *CHIDMessageToRemote_DeviceDisconnect) String() string { return proto.CompactTextString(m) }
func (*CHIDMessageToRemote_DeviceDisconnect) ProtoMessage()    {}
func (*CHIDMessageToRemote_DeviceDisconnect) Descriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_hiddevices_f35752be2b2e7310, []int{2, 11}
}
func (m *CHIDMessageToRemote_DeviceDisconnect) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CHIDMessageToRemote_DeviceDisconnect.Unmarshal(m, b)
}
func (m *CHIDMessageToRemote_DeviceDisconnect) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CHIDMessageToRemote_DeviceDisconnect.Marshal(b, m, deterministic)
}
func (dst *CHIDMessageToRemote_DeviceDisconnect) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CHIDMessageToRemote_DeviceDisconnect.Merge(dst, src)
}
func (m *CHIDMessageToRemote_DeviceDisconnect) XXX_Size() int {
	return xxx_messageInfo_CHIDMessageToRemote_DeviceDisconnect.Size(m)
}
func (m *CHIDMessageToRemote_DeviceDisconnect) XXX_DiscardUnknown() {
	xxx_messageInfo_CHIDMessageToRemote_DeviceDisconnect.DiscardUnknown(m)
}

var xxx_messageInfo_CHIDMessageToRemote_DeviceDisconnect proto.InternalMessageInfo

const Default_CHIDMessageToRemote_DeviceDisconnect_DisconnectMethod EHIDDeviceDisconnectMethod = EHIDDeviceDisconnectMethod_k_EDeviceDisconnectMethodUnknown

func (m *CHIDMessageToRemote_DeviceDisconnect) GetDevice() uint32 {
	if m != nil && m.Device != nil {
		return *m.Device
	}
	return 0
}

func (m *CHIDMessageToRemote_DeviceDisconnect) GetDisconnectMethod() EHIDDeviceDisconnectMethod {
	if m != nil && m.DisconnectMethod != nil {
		return *m.DisconnectMethod
	}
	return Default_CHIDMessageToRemote_DeviceDisconnect_DisconnectMethod
}

func (m *CHIDMessageToRemote_DeviceDisconnect) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type CHIDMessageFromRemote struct {
	// Types that are valid to be assigned to Command:
	//	*CHIDMessageFromRemote_UpdateDeviceList_
	//	*CHIDMessageFromRemote_Response
	//	*CHIDMessageFromRemote_Reports
	//	*CHIDMessageFromRemote_CloseDevice_
	//	*CHIDMessageFromRemote_CloseAllDevices_
	Command              isCHIDMessageFromRemote_Command `protobuf_oneof:"command"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *CHIDMessageFromRemote) Reset()         { *m = CHIDMessageFromRemote{} }
func (m *CHIDMessageFromRemote) String() string { return proto.CompactTextString(m) }
func (*CHIDMessageFromRemote) ProtoMessage()    {}
func (*CHIDMessageFromRemote) Descriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_hiddevices_f35752be2b2e7310, []int{3}
}
func (m *CHIDMessageFromRemote) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CHIDMessageFromRemote.Unmarshal(m, b)
}
func (m *CHIDMessageFromRemote) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CHIDMessageFromRemote.Marshal(b, m, deterministic)
}
func (dst *CHIDMessageFromRemote) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CHIDMessageFromRemote.Merge(dst, src)
}
func (m *CHIDMessageFromRemote) XXX_Size() int {
	return xxx_messageInfo_CHIDMessageFromRemote.Size(m)
}
func (m *CHIDMessageFromRemote) XXX_DiscardUnknown() {
	xxx_messageInfo_CHIDMessageFromRemote.DiscardUnknown(m)
}

var xxx_messageInfo_CHIDMessageFromRemote proto.InternalMessageInfo

type isCHIDMessageFromRemote_Command interface {
	isCHIDMessageFromRemote_Command()
}

type CHIDMessageFromRemote_UpdateDeviceList_ struct {
	UpdateDeviceList *CHIDMessageFromRemote_UpdateDeviceList `protobuf:"bytes,1,opt,name=update_device_list,json=updateDeviceList,oneof"`
}
type CHIDMessageFromRemote_Response struct {
	Response *CHIDMessageFromRemote_RequestResponse `protobuf:"bytes,2,opt,name=response,oneof"`
}
type CHIDMessageFromRemote_Reports struct {
	Reports *CHIDMessageFromRemote_DeviceInputReports `protobuf:"bytes,3,opt,name=reports,oneof"`
}
type CHIDMessageFromRemote_CloseDevice_ struct {
	CloseDevice *CHIDMessageFromRemote_CloseDevice `protobuf:"bytes,4,opt,name=close_device,json=closeDevice,oneof"`
}
type CHIDMessageFromRemote_CloseAllDevices_ struct {
	CloseAllDevices *CHIDMessageFromRemote_CloseAllDevices `protobuf:"bytes,5,opt,name=close_all_devices,json=closeAllDevices,oneof"`
}

func (*CHIDMessageFromRemote_UpdateDeviceList_) isCHIDMessageFromRemote_Command() {}
func (*CHIDMessageFromRemote_Response) isCHIDMessageFromRemote_Command()          {}
func (*CHIDMessageFromRemote_Reports) isCHIDMessageFromRemote_Command()           {}
func (*CHIDMessageFromRemote_CloseDevice_) isCHIDMessageFromRemote_Command()      {}
func (*CHIDMessageFromRemote_CloseAllDevices_) isCHIDMessageFromRemote_Command()  {}

func (m *CHIDMessageFromRemote) GetCommand() isCHIDMessageFromRemote_Command {
	if m != nil {
		return m.Command
	}
	return nil
}

func (m *CHIDMessageFromRemote) GetUpdateDeviceList() *CHIDMessageFromRemote_UpdateDeviceList {
	if x, ok := m.GetCommand().(*CHIDMessageFromRemote_UpdateDeviceList_); ok {
		return x.UpdateDeviceList
	}
	return nil
}

func (m *CHIDMessageFromRemote) GetResponse() *CHIDMessageFromRemote_RequestResponse {
	if x, ok := m.GetCommand().(*CHIDMessageFromRemote_Response); ok {
		return x.Response
	}
	return nil
}

func (m *CHIDMessageFromRemote) GetReports() *CHIDMessageFromRemote_DeviceInputReports {
	if x, ok := m.GetCommand().(*CHIDMessageFromRemote_Reports); ok {
		return x.Reports
	}
	return nil
}

func (m *CHIDMessageFromRemote) GetCloseDevice() *CHIDMessageFromRemote_CloseDevice {
	if x, ok := m.GetCommand().(*CHIDMessageFromRemote_CloseDevice_); ok {
		return x.CloseDevice
	}
	return nil
}

func (m *CHIDMessageFromRemote) GetCloseAllDevices() *CHIDMessageFromRemote_CloseAllDevices {
	if x, ok := m.GetCommand().(*CHIDMessageFromRemote_CloseAllDevices_); ok {
		return x.CloseAllDevices
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*CHIDMessageFromRemote) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _CHIDMessageFromRemote_OneofMarshaler, _CHIDMessageFromRemote_OneofUnmarshaler, _CHIDMessageFromRemote_OneofSizer, []interface{}{
		(*CHIDMessageFromRemote_UpdateDeviceList_)(nil),
		(*CHIDMessageFromRemote_Response)(nil),
		(*CHIDMessageFromRemote_Reports)(nil),
		(*CHIDMessageFromRemote_CloseDevice_)(nil),
		(*CHIDMessageFromRemote_CloseAllDevices_)(nil),
	}
}

func _CHIDMessageFromRemote_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*CHIDMessageFromRemote)
	// command
	switch x := m.Command.(type) {
	case *CHIDMessageFromRemote_UpdateDeviceList_:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.UpdateDeviceList); err != nil {
			return err
		}
	case *CHIDMessageFromRemote_Response:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Response); err != nil {
			return err
		}
	case *CHIDMessageFromRemote_Reports:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Reports); err != nil {
			return err
		}
	case *CHIDMessageFromRemote_CloseDevice_:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CloseDevice); err != nil {
			return err
		}
	case *CHIDMessageFromRemote_CloseAllDevices_:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CloseAllDevices); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("CHIDMessageFromRemote.Command has unexpected type %T", x)
	}
	return nil
}

func _CHIDMessageFromRemote_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*CHIDMessageFromRemote)
	switch tag {
	case 1: // command.update_device_list
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CHIDMessageFromRemote_UpdateDeviceList)
		err := b.DecodeMessage(msg)
		m.Command = &CHIDMessageFromRemote_UpdateDeviceList_{msg}
		return true, err
	case 2: // command.response
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CHIDMessageFromRemote_RequestResponse)
		err := b.DecodeMessage(msg)
		m.Command = &CHIDMessageFromRemote_Response{msg}
		return true, err
	case 3: // command.reports
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CHIDMessageFromRemote_DeviceInputReports)
		err := b.DecodeMessage(msg)
		m.Command = &CHIDMessageFromRemote_Reports{msg}
		return true, err
	case 4: // command.close_device
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CHIDMessageFromRemote_CloseDevice)
		err := b.DecodeMessage(msg)
		m.Command = &CHIDMessageFromRemote_CloseDevice_{msg}
		return true, err
	case 5: // command.close_all_devices
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CHIDMessageFromRemote_CloseAllDevices)
		err := b.DecodeMessage(msg)
		m.Command = &CHIDMessageFromRemote_CloseAllDevices_{msg}
		return true, err
	default:
		return false, nil
	}
}

func _CHIDMessageFromRemote_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*CHIDMessageFromRemote)
	// command
	switch x := m.Command.(type) {
	case *CHIDMessageFromRemote_UpdateDeviceList_:
		s := proto.Size(x.UpdateDeviceList)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *CHIDMessageFromRemote_Response:
		s := proto.Size(x.Response)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *CHIDMessageFromRemote_Reports:
		s := proto.Size(x.Reports)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *CHIDMessageFromRemote_CloseDevice_:
		s := proto.Size(x.CloseDevice)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *CHIDMessageFromRemote_CloseAllDevices_:
		s := proto.Size(x.CloseAllDevices)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type CHIDMessageFromRemote_UpdateDeviceList struct {
	Devices              []*CHIDDeviceInfo `protobuf:"bytes,1,rep,name=devices" json:"devices,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *CHIDMessageFromRemote_UpdateDeviceList) Reset() {
	*m = CHIDMessageFromRemote_UpdateDeviceList{}
}
func (m *CHIDMessageFromRemote_UpdateDeviceList) String() string { return proto.CompactTextString(m) }
func (*CHIDMessageFromRemote_UpdateDeviceList) ProtoMessage()    {}
func (*CHIDMessageFromRemote_UpdateDeviceList) Descriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_hiddevices_f35752be2b2e7310, []int{3, 0}
}
func (m *CHIDMessageFromRemote_UpdateDeviceList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CHIDMessageFromRemote_UpdateDeviceList.Unmarshal(m, b)
}
func (m *CHIDMessageFromRemote_UpdateDeviceList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CHIDMessageFromRemote_UpdateDeviceList.Marshal(b, m, deterministic)
}
func (dst *CHIDMessageFromRemote_UpdateDeviceList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CHIDMessageFromRemote_UpdateDeviceList.Merge(dst, src)
}
func (m *CHIDMessageFromRemote_UpdateDeviceList) XXX_Size() int {
	return xxx_messageInfo_CHIDMessageFromRemote_UpdateDeviceList.Size(m)
}
func (m *CHIDMessageFromRemote_UpdateDeviceList) XXX_DiscardUnknown() {
	xxx_messageInfo_CHIDMessageFromRemote_UpdateDeviceList.DiscardUnknown(m)
}

var xxx_messageInfo_CHIDMessageFromRemote_UpdateDeviceList proto.InternalMessageInfo

func (m *CHIDMessageFromRemote_UpdateDeviceList) GetDevices() []*CHIDDeviceInfo {
	if m != nil {
		return m.Devices
	}
	return nil
}

type CHIDMessageFromRemote_RequestResponse struct {
	RequestId            *uint32  `protobuf:"varint,1,opt,name=request_id,json=requestId" json:"request_id,omitempty"`
	Result               *int32   `protobuf:"varint,2,opt,name=result" json:"result,omitempty"`
	Data                 []byte   `protobuf:"bytes,3,opt,name=data" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CHIDMessageFromRemote_RequestResponse) Reset()         { *m = CHIDMessageFromRemote_RequestResponse{} }
func (m *CHIDMessageFromRemote_RequestResponse) String() string { return proto.CompactTextString(m) }
func (*CHIDMessageFromRemote_RequestResponse) ProtoMessage()    {}
func (*CHIDMessageFromRemote_RequestResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_hiddevices_f35752be2b2e7310, []int{3, 1}
}
func (m *CHIDMessageFromRemote_RequestResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CHIDMessageFromRemote_RequestResponse.Unmarshal(m, b)
}
func (m *CHIDMessageFromRemote_RequestResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CHIDMessageFromRemote_RequestResponse.Marshal(b, m, deterministic)
}
func (dst *CHIDMessageFromRemote_RequestResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CHIDMessageFromRemote_RequestResponse.Merge(dst, src)
}
func (m *CHIDMessageFromRemote_RequestResponse) XXX_Size() int {
	return xxx_messageInfo_CHIDMessageFromRemote_RequestResponse.Size(m)
}
func (m *CHIDMessageFromRemote_RequestResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CHIDMessageFromRemote_RequestResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CHIDMessageFromRemote_RequestResponse proto.InternalMessageInfo

func (m *CHIDMessageFromRemote_RequestResponse) GetRequestId() uint32 {
	if m != nil && m.RequestId != nil {
		return *m.RequestId
	}
	return 0
}

func (m *CHIDMessageFromRemote_RequestResponse) GetResult() int32 {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return 0
}

func (m *CHIDMessageFromRemote_RequestResponse) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type CHIDMessageFromRemote_DeviceInputReports struct {
	DeviceReports        []*CHIDMessageFromRemote_DeviceInputReports_DeviceInputReport `protobuf:"bytes,1,rep,name=device_reports,json=deviceReports" json:"device_reports,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                      `json:"-"`
	XXX_unrecognized     []byte                                                        `json:"-"`
	XXX_sizecache        int32                                                         `json:"-"`
}

func (m *CHIDMessageFromRemote_DeviceInputReports) Reset() {
	*m = CHIDMessageFromRemote_DeviceInputReports{}
}
func (m *CHIDMessageFromRemote_DeviceInputReports) String() string { return proto.CompactTextString(m) }
func (*CHIDMessageFromRemote_DeviceInputReports) ProtoMessage()    {}
func (*CHIDMessageFromRemote_DeviceInputReports) Descriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_hiddevices_f35752be2b2e7310, []int{3, 2}
}
func (m *CHIDMessageFromRemote_DeviceInputReports) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CHIDMessageFromRemote_DeviceInputReports.Unmarshal(m, b)
}
func (m *CHIDMessageFromRemote_DeviceInputReports) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CHIDMessageFromRemote_DeviceInputReports.Marshal(b, m, deterministic)
}
func (dst *CHIDMessageFromRemote_DeviceInputReports) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CHIDMessageFromRemote_DeviceInputReports.Merge(dst, src)
}
func (m *CHIDMessageFromRemote_DeviceInputReports) XXX_Size() int {
	return xxx_messageInfo_CHIDMessageFromRemote_DeviceInputReports.Size(m)
}
func (m *CHIDMessageFromRemote_DeviceInputReports) XXX_DiscardUnknown() {
	xxx_messageInfo_CHIDMessageFromRemote_DeviceInputReports.DiscardUnknown(m)
}

var xxx_messageInfo_CHIDMessageFromRemote_DeviceInputReports proto.InternalMessageInfo

func (m *CHIDMessageFromRemote_DeviceInputReports) GetDeviceReports() []*CHIDMessageFromRemote_DeviceInputReports_DeviceInputReport {
	if m != nil {
		return m.DeviceReports
	}
	return nil
}

type CHIDMessageFromRemote_DeviceInputReports_DeviceInputReport struct {
	Device               *uint32                  `protobuf:"varint,1,opt,name=device" json:"device,omitempty"`
	Reports              []*CHIDDeviceInputReport `protobuf:"bytes,2,rep,name=reports" json:"reports,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *CHIDMessageFromRemote_DeviceInputReports_DeviceInputReport) Reset() {
	*m = CHIDMessageFromRemote_DeviceInputReports_DeviceInputReport{}
}
func (m *CHIDMessageFromRemote_DeviceInputReports_DeviceInputReport) String() string {
	return proto.CompactTextString(m)
}
func (*CHIDMessageFromRemote_DeviceInputReports_DeviceInputReport) ProtoMessage() {}
func (*CHIDMessageFromRemote_DeviceInputReports_DeviceInputReport) Descriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_hiddevices_f35752be2b2e7310, []int{3, 2, 0}
}
func (m *CHIDMessageFromRemote_DeviceInputReports_DeviceInputReport) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CHIDMessageFromRemote_DeviceInputReports_DeviceInputReport.Unmarshal(m, b)
}
func (m *CHIDMessageFromRemote_DeviceInputReports_DeviceInputReport) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CHIDMessageFromRemote_DeviceInputReports_DeviceInputReport.Marshal(b, m, deterministic)
}
func (dst *CHIDMessageFromRemote_DeviceInputReports_DeviceInputReport) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CHIDMessageFromRemote_DeviceInputReports_DeviceInputReport.Merge(dst, src)
}
func (m *CHIDMessageFromRemote_DeviceInputReports_DeviceInputReport) XXX_Size() int {
	return xxx_messageInfo_CHIDMessageFromRemote_DeviceInputReports_DeviceInputReport.Size(m)
}
func (m *CHIDMessageFromRemote_DeviceInputReports_DeviceInputReport) XXX_DiscardUnknown() {
	xxx_messageInfo_CHIDMessageFromRemote_DeviceInputReports_DeviceInputReport.DiscardUnknown(m)
}

var xxx_messageInfo_CHIDMessageFromRemote_DeviceInputReports_DeviceInputReport proto.InternalMessageInfo

func (m *CHIDMessageFromRemote_DeviceInputReports_DeviceInputReport) GetDevice() uint32 {
	if m != nil && m.Device != nil {
		return *m.Device
	}
	return 0
}

func (m *CHIDMessageFromRemote_DeviceInputReports_DeviceInputReport) GetReports() []*CHIDDeviceInputReport {
	if m != nil {
		return m.Reports
	}
	return nil
}

type CHIDMessageFromRemote_CloseDevice struct {
	Device               *uint32  `protobuf:"varint,1,opt,name=device" json:"device,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CHIDMessageFromRemote_CloseDevice) Reset()         { *m = CHIDMessageFromRemote_CloseDevice{} }
func (m *CHIDMessageFromRemote_CloseDevice) String() string { return proto.CompactTextString(m) }
func (*CHIDMessageFromRemote_CloseDevice) ProtoMessage()    {}
func (*CHIDMessageFromRemote_CloseDevice) Descriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_hiddevices_f35752be2b2e7310, []int{3, 3}
}
func (m *CHIDMessageFromRemote_CloseDevice) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CHIDMessageFromRemote_CloseDevice.Unmarshal(m, b)
}
func (m *CHIDMessageFromRemote_CloseDevice) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CHIDMessageFromRemote_CloseDevice.Marshal(b, m, deterministic)
}
func (dst *CHIDMessageFromRemote_CloseDevice) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CHIDMessageFromRemote_CloseDevice.Merge(dst, src)
}
func (m *CHIDMessageFromRemote_CloseDevice) XXX_Size() int {
	return xxx_messageInfo_CHIDMessageFromRemote_CloseDevice.Size(m)
}
func (m *CHIDMessageFromRemote_CloseDevice) XXX_DiscardUnknown() {
	xxx_messageInfo_CHIDMessageFromRemote_CloseDevice.DiscardUnknown(m)
}

var xxx_messageInfo_CHIDMessageFromRemote_CloseDevice proto.InternalMessageInfo

func (m *CHIDMessageFromRemote_CloseDevice) GetDevice() uint32 {
	if m != nil && m.Device != nil {
		return *m.Device
	}
	return 0
}

type CHIDMessageFromRemote_CloseAllDevices struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CHIDMessageFromRemote_CloseAllDevices) Reset()         { *m = CHIDMessageFromRemote_CloseAllDevices{} }
func (m *CHIDMessageFromRemote_CloseAllDevices) String() string { return proto.CompactTextString(m) }
func (*CHIDMessageFromRemote_CloseAllDevices) ProtoMessage()    {}
func (*CHIDMessageFromRemote_CloseAllDevices) Descriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_hiddevices_f35752be2b2e7310, []int{3, 4}
}
func (m *CHIDMessageFromRemote_CloseAllDevices) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CHIDMessageFromRemote_CloseAllDevices.Unmarshal(m, b)
}
func (m *CHIDMessageFromRemote_CloseAllDevices) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CHIDMessageFromRemote_CloseAllDevices.Marshal(b, m, deterministic)
}
func (dst *CHIDMessageFromRemote_CloseAllDevices) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CHIDMessageFromRemote_CloseAllDevices.Merge(dst, src)
}
func (m *CHIDMessageFromRemote_CloseAllDevices) XXX_Size() int {
	return xxx_messageInfo_CHIDMessageFromRemote_CloseAllDevices.Size(m)
}
func (m *CHIDMessageFromRemote_CloseAllDevices) XXX_DiscardUnknown() {
	xxx_messageInfo_CHIDMessageFromRemote_CloseAllDevices.DiscardUnknown(m)
}

var xxx_messageInfo_CHIDMessageFromRemote_CloseAllDevices proto.InternalMessageInfo

func init() {
	proto.RegisterType((*CHIDDeviceInfo)(nil), "CHIDDeviceInfo")
	proto.RegisterType((*CHIDDeviceInputReport)(nil), "CHIDDeviceInputReport")
	proto.RegisterType((*CHIDMessageToRemote)(nil), "CHIDMessageToRemote")
	proto.RegisterType((*CHIDMessageToRemote_DeviceOpen)(nil), "CHIDMessageToRemote.DeviceOpen")
	proto.RegisterType((*CHIDMessageToRemote_DeviceClose)(nil), "CHIDMessageToRemote.DeviceClose")
	proto.RegisterType((*CHIDMessageToRemote_DeviceWrite)(nil), "CHIDMessageToRemote.DeviceWrite")
	proto.RegisterType((*CHIDMessageToRemote_DeviceRead)(nil), "CHIDMessageToRemote.DeviceRead")
	proto.RegisterType((*CHIDMessageToRemote_DeviceSendFeatureReport)(nil), "CHIDMessageToRemote.DeviceSendFeatureReport")
	proto.RegisterType((*CHIDMessageToRemote_DeviceGetFeatureReport)(nil), "CHIDMessageToRemote.DeviceGetFeatureReport")
	proto.RegisterType((*CHIDMessageToRemote_DeviceGetVendorString)(nil), "CHIDMessageToRemote.DeviceGetVendorString")
	proto.RegisterType((*CHIDMessageToRemote_DeviceGetProductString)(nil), "CHIDMessageToRemote.DeviceGetProductString")
	proto.RegisterType((*CHIDMessageToRemote_DeviceGetSerialNumberString)(nil), "CHIDMessageToRemote.DeviceGetSerialNumberString")
	proto.RegisterType((*CHIDMessageToRemote_DeviceStartInputReports)(nil), "CHIDMessageToRemote.DeviceStartInputReports")
	proto.RegisterType((*CHIDMessageToRemote_DeviceRequestFullReport)(nil), "CHIDMessageToRemote.DeviceRequestFullReport")
	proto.RegisterType((*CHIDMessageToRemote_DeviceDisconnect)(nil), "CHIDMessageToRemote.DeviceDisconnect")
	proto.RegisterType((*CHIDMessageFromRemote)(nil), "CHIDMessageFromRemote")
	proto.RegisterType((*CHIDMessageFromRemote_UpdateDeviceList)(nil), "CHIDMessageFromRemote.UpdateDeviceList")
	proto.RegisterType((*CHIDMessageFromRemote_RequestResponse)(nil), "CHIDMessageFromRemote.RequestResponse")
	proto.RegisterType((*CHIDMessageFromRemote_DeviceInputReports)(nil), "CHIDMessageFromRemote.DeviceInputReports")
	proto.RegisterType((*CHIDMessageFromRemote_DeviceInputReports_DeviceInputReport)(nil), "CHIDMessageFromRemote.DeviceInputReports.DeviceInputReport")
	proto.RegisterType((*CHIDMessageFromRemote_CloseDevice)(nil), "CHIDMessageFromRemote.CloseDevice")
	proto.RegisterType((*CHIDMessageFromRemote_CloseAllDevices)(nil), "CHIDMessageFromRemote.CloseAllDevices")
	proto.RegisterEnum("EHIDDeviceLocation", EHIDDeviceLocation_name, EHIDDeviceLocation_value)
	proto.RegisterEnum("EHIDDeviceDisconnectMethod", EHIDDeviceDisconnectMethod_name, EHIDDeviceDisconnectMethod_value)
}

func init() {
	proto.RegisterFile("steammessages_hiddevices.proto", fileDescriptor_steammessages_hiddevices_f35752be2b2e7310)
}

var fileDescriptor_steammessages_hiddevices_f35752be2b2e7310 = []byte{
	// 1395 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x57, 0xdd, 0x72, 0xdb, 0x44,
	0x14, 0xb6, 0xf2, 0xe3, 0xc4, 0xc7, 0x7f, 0xca, 0xa6, 0x75, 0x85, 0x32, 0xa5, 0x26, 0x25, 0x21,
	0x0d, 0x8d, 0x93, 0x98, 0x61, 0x18, 0xca, 0x70, 0xd1, 0x34, 0x69, 0x1c, 0x86, 0xd2, 0x8e, 0xd2,
	0xd2, 0x19, 0x7e, 0x46, 0xa3, 0x48, 0x6b, 0x47, 0x44, 0xd2, 0x0a, 0xed, 0xaa, 0xa5, 0xbd, 0xe2,
	0x1d, 0x78, 0x0a, 0x2e, 0x79, 0x04, 0xee, 0x78, 0x03, 0x78, 0x1c, 0x46, 0xbb, 0x2b, 0x59, 0x96,
	0x2d, 0xa7, 0xbd, 0xb2, 0xf7, 0x9c, 0x6f, 0xbf, 0xb3, 0x3f, 0xe7, 0x7c, 0x7b, 0x04, 0x1f, 0x52,
	0x86, 0x2d, 0xdf, 0xc7, 0x94, 0x5a, 0x23, 0x4c, 0xcd, 0x4b, 0xd7, 0x71, 0xf0, 0x2b, 0xd7, 0xc6,
	0xb4, 0x17, 0x46, 0x84, 0x91, 0xcd, 0x7f, 0x96, 0xa0, 0xf5, 0x68, 0x70, 0x76, 0x7c, 0xcc, 0xad,
	0x67, 0xc1, 0x90, 0xa0, 0x53, 0x58, 0xf5, 0x88, 0x6d, 0x31, 0x97, 0x04, 0x9a, 0xd2, 0x55, 0x76,
	0x5a, 0xfd, 0xf5, 0xde, 0x49, 0x06, 0xf9, 0x56, 0xba, 0x1e, 0x74, 0xae, 0xcc, 0x93, 0x49, 0x53,
	0xf2, 0xeb, 0x19, 0xd9, 0x64, 0x84, 0x60, 0x29, 0xb4, 0xd8, 0xa5, 0xb6, 0xd0, 0x55, 0x76, 0x6a,
	0x06, 0xff, 0x8f, 0x36, 0xa0, 0xf6, 0x0a, 0x07, 0x0e, 0x89, 0x4c, 0xd7, 0xd1, 0x16, 0xbb, 0xca,
	0x4e, 0xd3, 0x58, 0x15, 0x86, 0x33, 0x07, 0xdd, 0x06, 0x08, 0x23, 0xe2, 0xc4, 0x36, 0x4b, 0xbc,
	0x4b, 0xdc, 0x5b, 0x93, 0x96, 0x33, 0x07, 0xdd, 0x85, 0x26, 0xc5, 0x91, 0x6b, 0x79, 0x66, 0x10,
	0xfb, 0x17, 0x38, 0xd2, 0x96, 0x39, 0x71, 0x43, 0x18, 0xbf, 0xe3, 0x36, 0xb4, 0x05, 0xad, 0x08,
	0x7b, 0xd8, 0xa2, 0x38, 0x45, 0x55, 0x39, 0x4f, 0x53, 0x5a, 0x25, 0x6c, 0x1f, 0xd6, 0x7d, 0x2b,
	0x88, 0x87, 0x96, 0xcd, 0xe2, 0x08, 0x47, 0x26, 0x65, 0x91, 0x1b, 0x8c, 0xb4, 0x15, 0xce, 0x88,
	0xf2, 0xae, 0x73, 0xee, 0x49, 0x78, 0xd3, 0xb5, 0x49, 0xec, 0x2a, 0xc7, 0x36, 0xa5, 0x55, 0xc2,
	0x6e, 0x03, 0xc4, 0xc9, 0x51, 0x9b, 0xa1, 0x35, 0xc2, 0x5a, 0x4d, 0x6c, 0x81, 0x5b, 0x9e, 0x59,
	0x23, 0x8c, 0x6e, 0xc0, 0x32, 0x1f, 0x68, 0xc0, 0x3d, 0x62, 0x80, 0xf6, 0x40, 0x75, 0x03, 0x86,
	0xa3, 0xa1, 0x65, 0x67, 0xab, 0xae, 0x77, 0x95, 0x9d, 0xe5, 0x07, 0x0b, 0x7b, 0x87, 0x46, 0x3b,
	0xf3, 0xc9, 0xb5, 0xeb, 0x50, 0x25, 0x94, 0xbd, 0x09, 0xb1, 0xd6, 0xc8, 0x40, 0xd2, 0x82, 0xee,
	0x03, 0x72, 0xa9, 0x39, 0xc2, 0x01, 0x8e, 0x5c, 0xdb, 0x1c, 0x59, 0x3e, 0x0e, 0x2d, 0x47, 0x6b,
	0x76, 0x95, 0x9d, 0x55, 0x43, 0x75, 0xe9, 0xa9, 0x70, 0x9c, 0x0a, 0x3b, 0xea, 0xc1, 0x7a, 0x0e,
	0xfd, 0x0b, 0x79, 0x43, 0x99, 0x6b, 0x5f, 0x69, 0x2d, 0x0e, 0x5f, 0xcb, 0xe0, 0xdf, 0x48, 0x47,
	0x72, 0x7b, 0xb6, 0x15, 0x52, 0xf3, 0xc2, 0x65, 0x54, 0x6b, 0x8b, 0xdb, 0x4b, 0x0c, 0x47, 0x2e,
	0xa3, 0x9b, 0x7f, 0x29, 0x70, 0x33, 0x9f, 0x4a, 0x61, 0xcc, 0x0c, 0x1c, 0x92, 0x88, 0xa1, 0x3b,
	0x50, 0x1f, 0xc6, 0x9e, 0x67, 0x46, 0x7c, 0xc8, 0x93, 0xaa, 0x61, 0x40, 0x62, 0x92, 0x80, 0x8f,
	0xa0, 0xe1, 0x60, 0x8f, 0x59, 0x29, 0x62, 0x81, 0x23, 0xea, 0xdc, 0x26, 0x21, 0xbb, 0xb0, 0x96,
	0x87, 0x98, 0xd4, 0x7d, 0x8b, 0x65, 0x02, 0xb5, 0x73, 0xb8, 0x73, 0xf7, 0x2d, 0x46, 0x3b, 0xa0,
	0x4e, 0x60, 0xed, 0xc8, 0x96, 0xd9, 0xd4, 0xca, 0x41, 0x1f, 0x45, 0xf6, 0xe6, 0x1f, 0x2a, 0xac,
	0x27, 0x6b, 0x7e, 0x22, 0x0a, 0xe4, 0x39, 0x31, 0xb0, 0x4f, 0x18, 0x4e, 0xae, 0x31, 0xc2, 0xbf,
	0xc6, 0x98, 0xf2, 0x4c, 0x54, 0xc4, 0x35, 0x4a, 0xcb, 0x99, 0x83, 0x8e, 0xa0, 0x2e, 0xca, 0xc8,
	0x24, 0x21, 0x0e, 0xf8, 0x72, 0xeb, 0xfd, 0x3b, 0xbd, 0x19, 0x4c, 0x3d, 0x71, 0x1a, 0x4f, 0x43,
	0x1c, 0x0c, 0x2a, 0x06, 0x38, 0xd9, 0x08, 0x9d, 0x24, 0x7b, 0xe6, 0x1c, 0xb6, 0x47, 0xa8, 0xd8,
	0x4b, 0xbd, 0xdf, 0x9d, 0x43, 0xf2, 0x28, 0xc1, 0x0d, 0x2a, 0x86, 0x8c, 0xcd, 0x87, 0x39, 0x9a,
	0xd7, 0x91, 0xcb, 0x30, 0xdf, 0xe7, 0x7c, 0x9a, 0x97, 0x09, 0x6e, 0x4c, 0xc3, 0x87, 0xb9, 0x1d,
	0x45, 0xd8, 0x72, 0x78, 0x65, 0xcd, 0xdf, 0x91, 0x81, 0x2d, 0x67, 0xbc, 0xa3, 0x64, 0x84, 0xae,
	0x40, 0x97, 0x1c, 0x14, 0x07, 0x8e, 0x39, 0xc4, 0x56, 0x52, 0x40, 0xe9, 0x9d, 0x56, 0x39, 0xe5,
	0xfd, 0x39, 0x94, 0xe7, 0x38, 0x70, 0x1e, 0x8b, 0x49, 0xe2, 0x86, 0x06, 0x15, 0xe3, 0x96, 0x33,
	0xdb, 0x85, 0x2e, 0xe1, 0x03, 0x19, 0x6c, 0x84, 0x59, 0x31, 0xd6, 0x0a, 0x8f, 0xf5, 0xe9, 0x9c,
	0x58, 0xa7, 0x98, 0x15, 0x43, 0x75, 0x9c, 0x99, 0x1e, 0x84, 0x41, 0xcb, 0x45, 0x92, 0xea, 0x95,
	0xd3, 0x80, 0x7a, 0x7f, 0x77, 0x7e, 0xa0, 0xef, 0xf9, 0x14, 0x21, 0x10, 0x83, 0x8a, 0x71, 0xd3,
	0x99, 0xe5, 0x28, 0x6c, 0xa8, 0xa0, 0x35, 0xb5, 0x77, 0xd9, 0xd0, 0xb3, 0xbc, 0x12, 0x4d, 0x6c,
	0x68, 0xc2, 0x83, 0x7e, 0x83, 0x3b, 0xb9, 0x48, 0x13, 0x92, 0x9a, 0xc6, 0x03, 0x1e, 0xef, 0x60,
	0x7e, 0xbc, 0xf3, 0x9c, 0xee, 0x66, 0x41, 0x37, 0x9c, 0x72, 0x77, 0x3e, 0x43, 0x98, 0x15, 0x31,
	0xd3, 0x4d, 0x44, 0x42, 0x5e, 0x1a, 0xe5, 0x92, 0x77, 0x4d, 0x86, 0x24, 0xb3, 0x72, 0xca, 0x42,
	0x73, 0x19, 0x52, 0x74, 0xe5, 0x82, 0xa5, 0xa5, 0x9c, 0x17, 0xa1, 0xc6, 0xb5, 0xc1, 0x0c, 0x31,
	0xeb, 0x71, 0x26, 0x53, 0xe3, 0x60, 0x53, 0x2e, 0xf4, 0x3c, 0x91, 0x27, 0x1e, 0xcc, 0x71, 0xa9,
	0x4d, 0x82, 0x00, 0xdb, 0x8c, 0xcb, 0x6e, 0xbd, 0xbf, 0x35, 0x27, 0xc6, 0x71, 0x06, 0x1e, 0x54,
	0x0c, 0xd5, 0x29, 0xd8, 0xf4, 0x43, 0x80, 0xb1, 0x7e, 0xa0, 0xbb, 0xb0, 0xe4, 0x06, 0x43, 0xc2,
	0xe5, 0xa8, 0xde, 0x6f, 0xf7, 0x26, 0xdf, 0x6d, 0x83, 0x3b, 0xf5, 0x2d, 0xa8, 0xe7, 0xd4, 0x02,
	0x75, 0xa0, 0x2a, 0x58, 0xa5, 0x88, 0xc9, 0x91, 0xfe, 0x65, 0x0a, 0x13, 0xe5, 0x5f, 0x02, 0x4b,
	0x9e, 0x70, 0xc7, 0x62, 0x96, 0x14, 0x64, 0xfe, 0x5f, 0xff, 0x31, 0x5d, 0x14, 0x2f, 0xfa, 0xb2,
	0x99, 0x1d, 0xa8, 0x7a, 0x38, 0x18, 0xc9, 0xe7, 0xbf, 0x69, 0xc8, 0x51, 0xa2, 0xac, 0xcc, 0xf5,
	0x31, 0x89, 0x99, 0xe9, 0x53, 0x2e, 0x7a, 0xcb, 0x46, 0x4d, 0x5a, 0x9e, 0x50, 0xfd, 0x04, 0x6e,
	0x95, 0x88, 0xc1, 0x7b, 0xad, 0xd1, 0x87, 0xce, 0xec, 0x3a, 0x2f, 0x65, 0xb9, 0x0b, 0x4d, 0xf9,
	0x5a, 0xc8, 0x07, 0x58, 0xd0, 0x35, 0x84, 0x51, 0xbe, 0xbc, 0xe3, 0x4d, 0x2d, 0xe6, 0x37, 0xa5,
	0xef, 0xc3, 0xcd, 0x99, 0xd5, 0x5e, 0x7a, 0xfc, 0x07, 0xb9, 0xf5, 0x4d, 0x16, 0x67, 0xd9, 0x8c,
	0xcf, 0x61, 0x63, 0x4e, 0xe1, 0x95, 0x4e, 0x3b, 0xcb, 0xce, 0x73, 0xaa, 0x3e, 0xde, 0xf3, 0xe6,
	0xf4, 0xc3, 0x94, 0x6a, 0x3a, 0xfb, 0xcb, 0xa2, 0xff, 0xa9, 0x80, 0x5a, 0x4c, 0xf4, 0xd2, 0xb8,
	0x2e, 0xa8, 0xe3, 0xda, 0x79, 0x82, 0xd9, 0x25, 0x71, 0xf8, 0x0a, 0x5a, 0xfd, 0x8d, 0x5c, 0xff,
	0x79, 0x5c, 0x80, 0x3c, 0xe8, 0x66, 0x7d, 0x68, 0xd1, 0xf5, 0x22, 0xb8, 0x0a, 0xc8, 0xeb, 0xc0,
	0x98, 0xa2, 0xcd, 0x52, 0x66, 0x71, 0x9c, 0x32, 0x47, 0x35, 0x58, 0xb1, 0x89, 0xef, 0x5b, 0x81,
	0xb3, 0xf9, 0x5f, 0x55, 0x74, 0x32, 0xb2, 0x66, 0x1f, 0x47, 0xc4, 0x97, 0x7d, 0xc1, 0x4b, 0x40,
	0x71, 0xe8, 0x58, 0x0c, 0x9b, 0xb2, 0xda, 0x3d, 0x97, 0x32, 0x59, 0x90, 0x9f, 0xf4, 0x66, 0xce,
	0xe9, 0xbd, 0xe0, 0x13, 0x64, 0xab, 0xec, 0x52, 0x5e, 0xe9, 0x71, 0xc1, 0x86, 0x8e, 0x61, 0x35,
	0xc2, 0x34, 0x24, 0x01, 0xc5, 0xb2, 0x9d, 0xd8, 0x2e, 0xa1, 0x93, 0xa7, 0x6f, 0x48, 0xf4, 0xa0,
	0x62, 0x64, 0x33, 0xd1, 0x09, 0xac, 0xa4, 0x62, 0x2a, 0xda, 0x89, 0x7b, 0x25, 0x24, 0x53, 0x3d,
	0x5a, 0xa2, 0xa4, 0xe9, 0x5c, 0x74, 0x0a, 0x0d, 0xde, 0x93, 0xc8, 0x4d, 0xca, 0x9e, 0x62, 0xb3,
	0x84, 0x8b, 0x0b, 0x8d, 0x20, 0x4c, 0xba, 0x0a, 0x7b, 0x3c, 0x4c, 0x54, 0x51, 0x10, 0x59, 0x9e,
	0x27, 0xc9, 0xa8, 0xec, 0x2d, 0xb6, 0xe7, 0xb1, 0x3d, 0xf4, 0x3c, 0xc1, 0x90, 0x2c, 0xab, 0x6d,
	0x4f, 0x9a, 0xf4, 0xaf, 0x41, 0x2d, 0x9e, 0x29, 0xba, 0x07, 0x2b, 0x29, 0xbf, 0xd2, 0x5d, 0x9c,
	0x25, 0x8f, 0xa9, 0x5f, 0xff, 0x09, 0xda, 0x85, 0x33, 0xbc, 0xae, 0xdd, 0xeb, 0x40, 0x35, 0xc2,
	0x34, 0xf6, 0x44, 0x63, 0xba, 0x6c, 0xc8, 0xd1, 0xac, 0x34, 0xd2, 0xff, 0x55, 0x00, 0x4d, 0x9f,
	0x2e, 0xba, 0x80, 0x56, 0xf6, 0x18, 0x89, 0x0b, 0x12, 0xcb, 0xfc, 0xea, 0x9d, 0x2f, 0x68, 0xda,
	0x64, 0x34, 0xd3, 0xd7, 0x88, 0x03, 0xf4, 0x9f, 0x61, 0x6d, 0xba, 0xf7, 0x2e, 0xab, 0xb6, 0x83,
	0x71, 0xaa, 0x2c, 0xf0, 0x95, 0x74, 0x7a, 0x33, 0x9b, 0xf7, 0x2c, 0x2b, 0x92, 0x97, 0x25, 0x77,
	0xd5, 0xa5, 0x35, 0xbf, 0x06, 0xed, 0xc2, 0x1d, 0xe6, 0x4a, 0x6b, 0x77, 0x04, 0x68, 0xfa, 0x5b,
	0x12, 0xe9, 0x50, 0xf2, 0x35, 0xa9, 0x56, 0xd0, 0x06, 0xdc, 0x9a, 0xf2, 0x89, 0x43, 0x52, 0x17,
	0x90, 0x06, 0x37, 0xa6, 0x9c, 0x0f, 0x83, 0x37, 0xea, 0xe2, 0xee, 0xdf, 0x0a, 0xe8, 0xe5, 0xaa,
	0x81, 0x3e, 0x86, 0x6b, 0x75, 0x43, 0xad, 0xa0, 0x6d, 0xd8, 0x2c, 0x45, 0x1d, 0x79, 0x31, 0x66,
	0x84, 0xb0, 0x4b, 0x55, 0x41, 0xbb, 0xb0, 0x5d, 0x8a, 0x9b, 0x78, 0x7e, 0xd4, 0x05, 0x74, 0x0f,
	0xb6, 0x4a, 0xb1, 0x4f, 0x63, 0x96, 0x1d, 0xbc, 0xba, 0x78, 0xf4, 0xc5, 0x40, 0xf9, 0xe1, 0x60,
	0xe4, 0xb2, 0xcb, 0xf8, 0xa2, 0x67, 0x13, 0x7f, 0xff, 0xf0, 0xb3, 0xab, 0xfd, 0x11, 0xd9, 0xe3,
	0x9f, 0xf4, 0x7b, 0x11, 0xa6, 0x24, 0x8e, 0x6c, 0x4c, 0xf7, 0xf9, 0x97, 0xfc, 0x45, 0x3c, 0xdc,
	0xe7, 0x8e, 0xdf, 0x95, 0xca, 0xff, 0x01, 0x00, 0x00, 0xff, 0xff, 0xd5, 0xc0, 0x8e, 0x66, 0xf6,
	0x0f, 0x00, 0x00,
}
