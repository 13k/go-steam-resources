// Code generated by protoc-gen-go. DO NOT EDIT.
// source: steammessages_econ.steamclient.proto

package client // import "github.com/13k/go-steam-resources/protobuf/steam/client"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type CEcon_GetTradeOfferAccessToken_Request struct {
	GenerateNewToken     *bool    `protobuf:"varint,1,opt,name=generate_new_token,json=generateNewToken" json:"generate_new_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CEcon_GetTradeOfferAccessToken_Request) Reset() {
	*m = CEcon_GetTradeOfferAccessToken_Request{}
}
func (m *CEcon_GetTradeOfferAccessToken_Request) String() string { return proto.CompactTextString(m) }
func (*CEcon_GetTradeOfferAccessToken_Request) ProtoMessage()    {}
func (*CEcon_GetTradeOfferAccessToken_Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_econ_steamclient_ebacc7adc412818c, []int{0}
}
func (m *CEcon_GetTradeOfferAccessToken_Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CEcon_GetTradeOfferAccessToken_Request.Unmarshal(m, b)
}
func (m *CEcon_GetTradeOfferAccessToken_Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CEcon_GetTradeOfferAccessToken_Request.Marshal(b, m, deterministic)
}
func (dst *CEcon_GetTradeOfferAccessToken_Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CEcon_GetTradeOfferAccessToken_Request.Merge(dst, src)
}
func (m *CEcon_GetTradeOfferAccessToken_Request) XXX_Size() int {
	return xxx_messageInfo_CEcon_GetTradeOfferAccessToken_Request.Size(m)
}
func (m *CEcon_GetTradeOfferAccessToken_Request) XXX_DiscardUnknown() {
	xxx_messageInfo_CEcon_GetTradeOfferAccessToken_Request.DiscardUnknown(m)
}

var xxx_messageInfo_CEcon_GetTradeOfferAccessToken_Request proto.InternalMessageInfo

func (m *CEcon_GetTradeOfferAccessToken_Request) GetGenerateNewToken() bool {
	if m != nil && m.GenerateNewToken != nil {
		return *m.GenerateNewToken
	}
	return false
}

type CEcon_GetTradeOfferAccessToken_Response struct {
	TradeOfferAccessToken *string  `protobuf:"bytes,1,opt,name=trade_offer_access_token,json=tradeOfferAccessToken" json:"trade_offer_access_token,omitempty"`
	XXX_NoUnkeyedLiteral  struct{} `json:"-"`
	XXX_unrecognized      []byte   `json:"-"`
	XXX_sizecache         int32    `json:"-"`
}

func (m *CEcon_GetTradeOfferAccessToken_Response) Reset() {
	*m = CEcon_GetTradeOfferAccessToken_Response{}
}
func (m *CEcon_GetTradeOfferAccessToken_Response) String() string { return proto.CompactTextString(m) }
func (*CEcon_GetTradeOfferAccessToken_Response) ProtoMessage()    {}
func (*CEcon_GetTradeOfferAccessToken_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_econ_steamclient_ebacc7adc412818c, []int{1}
}
func (m *CEcon_GetTradeOfferAccessToken_Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CEcon_GetTradeOfferAccessToken_Response.Unmarshal(m, b)
}
func (m *CEcon_GetTradeOfferAccessToken_Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CEcon_GetTradeOfferAccessToken_Response.Marshal(b, m, deterministic)
}
func (dst *CEcon_GetTradeOfferAccessToken_Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CEcon_GetTradeOfferAccessToken_Response.Merge(dst, src)
}
func (m *CEcon_GetTradeOfferAccessToken_Response) XXX_Size() int {
	return xxx_messageInfo_CEcon_GetTradeOfferAccessToken_Response.Size(m)
}
func (m *CEcon_GetTradeOfferAccessToken_Response) XXX_DiscardUnknown() {
	xxx_messageInfo_CEcon_GetTradeOfferAccessToken_Response.DiscardUnknown(m)
}

var xxx_messageInfo_CEcon_GetTradeOfferAccessToken_Response proto.InternalMessageInfo

func (m *CEcon_GetTradeOfferAccessToken_Response) GetTradeOfferAccessToken() string {
	if m != nil && m.TradeOfferAccessToken != nil {
		return *m.TradeOfferAccessToken
	}
	return ""
}

type CEcon_ClientGetItemShopOverlayAuthURL_Request struct {
	ReturnUrl            *string  `protobuf:"bytes,1,opt,name=return_url,json=returnUrl" json:"return_url,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CEcon_ClientGetItemShopOverlayAuthURL_Request) Reset() {
	*m = CEcon_ClientGetItemShopOverlayAuthURL_Request{}
}
func (m *CEcon_ClientGetItemShopOverlayAuthURL_Request) String() string {
	return proto.CompactTextString(m)
}
func (*CEcon_ClientGetItemShopOverlayAuthURL_Request) ProtoMessage() {}
func (*CEcon_ClientGetItemShopOverlayAuthURL_Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_econ_steamclient_ebacc7adc412818c, []int{2}
}
func (m *CEcon_ClientGetItemShopOverlayAuthURL_Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CEcon_ClientGetItemShopOverlayAuthURL_Request.Unmarshal(m, b)
}
func (m *CEcon_ClientGetItemShopOverlayAuthURL_Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CEcon_ClientGetItemShopOverlayAuthURL_Request.Marshal(b, m, deterministic)
}
func (dst *CEcon_ClientGetItemShopOverlayAuthURL_Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CEcon_ClientGetItemShopOverlayAuthURL_Request.Merge(dst, src)
}
func (m *CEcon_ClientGetItemShopOverlayAuthURL_Request) XXX_Size() int {
	return xxx_messageInfo_CEcon_ClientGetItemShopOverlayAuthURL_Request.Size(m)
}
func (m *CEcon_ClientGetItemShopOverlayAuthURL_Request) XXX_DiscardUnknown() {
	xxx_messageInfo_CEcon_ClientGetItemShopOverlayAuthURL_Request.DiscardUnknown(m)
}

var xxx_messageInfo_CEcon_ClientGetItemShopOverlayAuthURL_Request proto.InternalMessageInfo

func (m *CEcon_ClientGetItemShopOverlayAuthURL_Request) GetReturnUrl() string {
	if m != nil && m.ReturnUrl != nil {
		return *m.ReturnUrl
	}
	return ""
}

type CEcon_ClientGetItemShopOverlayAuthURL_Response struct {
	Url                  *string  `protobuf:"bytes,1,opt,name=url" json:"url,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CEcon_ClientGetItemShopOverlayAuthURL_Response) Reset() {
	*m = CEcon_ClientGetItemShopOverlayAuthURL_Response{}
}
func (m *CEcon_ClientGetItemShopOverlayAuthURL_Response) String() string {
	return proto.CompactTextString(m)
}
func (*CEcon_ClientGetItemShopOverlayAuthURL_Response) ProtoMessage() {}
func (*CEcon_ClientGetItemShopOverlayAuthURL_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_econ_steamclient_ebacc7adc412818c, []int{3}
}
func (m *CEcon_ClientGetItemShopOverlayAuthURL_Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CEcon_ClientGetItemShopOverlayAuthURL_Response.Unmarshal(m, b)
}
func (m *CEcon_ClientGetItemShopOverlayAuthURL_Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CEcon_ClientGetItemShopOverlayAuthURL_Response.Marshal(b, m, deterministic)
}
func (dst *CEcon_ClientGetItemShopOverlayAuthURL_Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CEcon_ClientGetItemShopOverlayAuthURL_Response.Merge(dst, src)
}
func (m *CEcon_ClientGetItemShopOverlayAuthURL_Response) XXX_Size() int {
	return xxx_messageInfo_CEcon_ClientGetItemShopOverlayAuthURL_Response.Size(m)
}
func (m *CEcon_ClientGetItemShopOverlayAuthURL_Response) XXX_DiscardUnknown() {
	xxx_messageInfo_CEcon_ClientGetItemShopOverlayAuthURL_Response.DiscardUnknown(m)
}

var xxx_messageInfo_CEcon_ClientGetItemShopOverlayAuthURL_Response proto.InternalMessageInfo

func (m *CEcon_ClientGetItemShopOverlayAuthURL_Response) GetUrl() string {
	if m != nil && m.Url != nil {
		return *m.Url
	}
	return ""
}

type CEcon_GetAssetClassInfo_Request struct {
	Language             *string                                  `protobuf:"bytes,1,opt,name=language" json:"language,omitempty"`
	Appid                *uint32                                  `protobuf:"varint,2,opt,name=appid" json:"appid,omitempty"`
	Classes              []*CEcon_GetAssetClassInfo_Request_Class `protobuf:"bytes,3,rep,name=classes" json:"classes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                 `json:"-"`
	XXX_unrecognized     []byte                                   `json:"-"`
	XXX_sizecache        int32                                    `json:"-"`
}

func (m *CEcon_GetAssetClassInfo_Request) Reset()         { *m = CEcon_GetAssetClassInfo_Request{} }
func (m *CEcon_GetAssetClassInfo_Request) String() string { return proto.CompactTextString(m) }
func (*CEcon_GetAssetClassInfo_Request) ProtoMessage()    {}
func (*CEcon_GetAssetClassInfo_Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_econ_steamclient_ebacc7adc412818c, []int{4}
}
func (m *CEcon_GetAssetClassInfo_Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CEcon_GetAssetClassInfo_Request.Unmarshal(m, b)
}
func (m *CEcon_GetAssetClassInfo_Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CEcon_GetAssetClassInfo_Request.Marshal(b, m, deterministic)
}
func (dst *CEcon_GetAssetClassInfo_Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CEcon_GetAssetClassInfo_Request.Merge(dst, src)
}
func (m *CEcon_GetAssetClassInfo_Request) XXX_Size() int {
	return xxx_messageInfo_CEcon_GetAssetClassInfo_Request.Size(m)
}
func (m *CEcon_GetAssetClassInfo_Request) XXX_DiscardUnknown() {
	xxx_messageInfo_CEcon_GetAssetClassInfo_Request.DiscardUnknown(m)
}

var xxx_messageInfo_CEcon_GetAssetClassInfo_Request proto.InternalMessageInfo

func (m *CEcon_GetAssetClassInfo_Request) GetLanguage() string {
	if m != nil && m.Language != nil {
		return *m.Language
	}
	return ""
}

func (m *CEcon_GetAssetClassInfo_Request) GetAppid() uint32 {
	if m != nil && m.Appid != nil {
		return *m.Appid
	}
	return 0
}

func (m *CEcon_GetAssetClassInfo_Request) GetClasses() []*CEcon_GetAssetClassInfo_Request_Class {
	if m != nil {
		return m.Classes
	}
	return nil
}

type CEcon_GetAssetClassInfo_Request_Class struct {
	Classid              *uint64  `protobuf:"varint,1,opt,name=classid" json:"classid,omitempty"`
	Instanceid           *uint64  `protobuf:"varint,2,opt,name=instanceid" json:"instanceid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CEcon_GetAssetClassInfo_Request_Class) Reset()         { *m = CEcon_GetAssetClassInfo_Request_Class{} }
func (m *CEcon_GetAssetClassInfo_Request_Class) String() string { return proto.CompactTextString(m) }
func (*CEcon_GetAssetClassInfo_Request_Class) ProtoMessage()    {}
func (*CEcon_GetAssetClassInfo_Request_Class) Descriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_econ_steamclient_ebacc7adc412818c, []int{4, 0}
}
func (m *CEcon_GetAssetClassInfo_Request_Class) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CEcon_GetAssetClassInfo_Request_Class.Unmarshal(m, b)
}
func (m *CEcon_GetAssetClassInfo_Request_Class) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CEcon_GetAssetClassInfo_Request_Class.Marshal(b, m, deterministic)
}
func (dst *CEcon_GetAssetClassInfo_Request_Class) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CEcon_GetAssetClassInfo_Request_Class.Merge(dst, src)
}
func (m *CEcon_GetAssetClassInfo_Request_Class) XXX_Size() int {
	return xxx_messageInfo_CEcon_GetAssetClassInfo_Request_Class.Size(m)
}
func (m *CEcon_GetAssetClassInfo_Request_Class) XXX_DiscardUnknown() {
	xxx_messageInfo_CEcon_GetAssetClassInfo_Request_Class.DiscardUnknown(m)
}

var xxx_messageInfo_CEcon_GetAssetClassInfo_Request_Class proto.InternalMessageInfo

func (m *CEcon_GetAssetClassInfo_Request_Class) GetClassid() uint64 {
	if m != nil && m.Classid != nil {
		return *m.Classid
	}
	return 0
}

func (m *CEcon_GetAssetClassInfo_Request_Class) GetInstanceid() uint64 {
	if m != nil && m.Instanceid != nil {
		return *m.Instanceid
	}
	return 0
}

type CEconItem_DescriptionLine struct {
	Type                 *string  `protobuf:"bytes,1,opt,name=type" json:"type,omitempty"`
	Value                *string  `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
	Color                *string  `protobuf:"bytes,3,opt,name=color" json:"color,omitempty"`
	Label                *string  `protobuf:"bytes,4,opt,name=label" json:"label,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CEconItem_DescriptionLine) Reset()         { *m = CEconItem_DescriptionLine{} }
func (m *CEconItem_DescriptionLine) String() string { return proto.CompactTextString(m) }
func (*CEconItem_DescriptionLine) ProtoMessage()    {}
func (*CEconItem_DescriptionLine) Descriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_econ_steamclient_ebacc7adc412818c, []int{5}
}
func (m *CEconItem_DescriptionLine) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CEconItem_DescriptionLine.Unmarshal(m, b)
}
func (m *CEconItem_DescriptionLine) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CEconItem_DescriptionLine.Marshal(b, m, deterministic)
}
func (dst *CEconItem_DescriptionLine) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CEconItem_DescriptionLine.Merge(dst, src)
}
func (m *CEconItem_DescriptionLine) XXX_Size() int {
	return xxx_messageInfo_CEconItem_DescriptionLine.Size(m)
}
func (m *CEconItem_DescriptionLine) XXX_DiscardUnknown() {
	xxx_messageInfo_CEconItem_DescriptionLine.DiscardUnknown(m)
}

var xxx_messageInfo_CEconItem_DescriptionLine proto.InternalMessageInfo

func (m *CEconItem_DescriptionLine) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ""
}

func (m *CEconItem_DescriptionLine) GetValue() string {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return ""
}

func (m *CEconItem_DescriptionLine) GetColor() string {
	if m != nil && m.Color != nil {
		return *m.Color
	}
	return ""
}

func (m *CEconItem_DescriptionLine) GetLabel() string {
	if m != nil && m.Label != nil {
		return *m.Label
	}
	return ""
}

type CEconItem_Action struct {
	Link                 *string  `protobuf:"bytes,1,opt,name=link" json:"link,omitempty"`
	Name                 *string  `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CEconItem_Action) Reset()         { *m = CEconItem_Action{} }
func (m *CEconItem_Action) String() string { return proto.CompactTextString(m) }
func (*CEconItem_Action) ProtoMessage()    {}
func (*CEconItem_Action) Descriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_econ_steamclient_ebacc7adc412818c, []int{6}
}
func (m *CEconItem_Action) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CEconItem_Action.Unmarshal(m, b)
}
func (m *CEconItem_Action) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CEconItem_Action.Marshal(b, m, deterministic)
}
func (dst *CEconItem_Action) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CEconItem_Action.Merge(dst, src)
}
func (m *CEconItem_Action) XXX_Size() int {
	return xxx_messageInfo_CEconItem_Action.Size(m)
}
func (m *CEconItem_Action) XXX_DiscardUnknown() {
	xxx_messageInfo_CEconItem_Action.DiscardUnknown(m)
}

var xxx_messageInfo_CEconItem_Action proto.InternalMessageInfo

func (m *CEconItem_Action) GetLink() string {
	if m != nil && m.Link != nil {
		return *m.Link
	}
	return ""
}

func (m *CEconItem_Action) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

type CEconItem_Description struct {
	Appid                       *int32                       `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	Classid                     *uint64                      `protobuf:"varint,2,opt,name=classid" json:"classid,omitempty"`
	Instanceid                  *uint64                      `protobuf:"varint,3,opt,name=instanceid" json:"instanceid,omitempty"`
	Currency                    *bool                        `protobuf:"varint,4,opt,name=currency" json:"currency,omitempty"`
	BackgroundColor             *string                      `protobuf:"bytes,5,opt,name=background_color,json=backgroundColor" json:"background_color,omitempty"`
	IconUrl                     *string                      `protobuf:"bytes,6,opt,name=icon_url,json=iconUrl" json:"icon_url,omitempty"`
	IconUrlLarge                *string                      `protobuf:"bytes,7,opt,name=icon_url_large,json=iconUrlLarge" json:"icon_url_large,omitempty"`
	Descriptions                []*CEconItem_DescriptionLine `protobuf:"bytes,8,rep,name=descriptions" json:"descriptions,omitempty"`
	Tradable                    *bool                        `protobuf:"varint,9,opt,name=tradable" json:"tradable,omitempty"`
	Actions                     []*CEconItem_Action          `protobuf:"bytes,10,rep,name=actions" json:"actions,omitempty"`
	OwnerDescriptions           []*CEconItem_DescriptionLine `protobuf:"bytes,11,rep,name=owner_descriptions,json=ownerDescriptions" json:"owner_descriptions,omitempty"`
	OwnerActions                []*CEconItem_Action          `protobuf:"bytes,12,rep,name=owner_actions,json=ownerActions" json:"owner_actions,omitempty"`
	Fraudwarnings               []string                     `protobuf:"bytes,13,rep,name=fraudwarnings" json:"fraudwarnings,omitempty"`
	Name                        *string                      `protobuf:"bytes,14,opt,name=name" json:"name,omitempty"`
	NameColor                   *string                      `protobuf:"bytes,15,opt,name=name_color,json=nameColor" json:"name_color,omitempty"`
	Type                        *string                      `protobuf:"bytes,16,opt,name=type" json:"type,omitempty"`
	MarketName                  *string                      `protobuf:"bytes,17,opt,name=market_name,json=marketName" json:"market_name,omitempty"`
	MarketHashName              *string                      `protobuf:"bytes,18,opt,name=market_hash_name,json=marketHashName" json:"market_hash_name,omitempty"`
	MarketFee                   *string                      `protobuf:"bytes,19,opt,name=market_fee,json=marketFee" json:"market_fee,omitempty"`
	MarketFeeApp                *int32                       `protobuf:"varint,28,opt,name=market_fee_app,json=marketFeeApp" json:"market_fee_app,omitempty"`
	ContainedItem               *CEconItem_Description       `protobuf:"bytes,20,opt,name=contained_item,json=containedItem" json:"contained_item,omitempty"`
	MarketActions               []*CEconItem_Action          `protobuf:"bytes,21,rep,name=market_actions,json=marketActions" json:"market_actions,omitempty"`
	Commodity                   *bool                        `protobuf:"varint,22,opt,name=commodity" json:"commodity,omitempty"`
	MarketTradableRestriction   *int32                       `protobuf:"varint,23,opt,name=market_tradable_restriction,json=marketTradableRestriction" json:"market_tradable_restriction,omitempty"`
	MarketMarketableRestriction *int32                       `protobuf:"varint,24,opt,name=market_marketable_restriction,json=marketMarketableRestriction" json:"market_marketable_restriction,omitempty"`
	Marketable                  *bool                        `protobuf:"varint,25,opt,name=marketable" json:"marketable,omitempty"`
	Tags                        []*CEconItem_Tag             `protobuf:"bytes,26,rep,name=tags" json:"tags,omitempty"`
	ItemExpiration              *string                      `protobuf:"bytes,27,opt,name=item_expiration,json=itemExpiration" json:"item_expiration,omitempty"`
	XXX_NoUnkeyedLiteral        struct{}                     `json:"-"`
	XXX_unrecognized            []byte                       `json:"-"`
	XXX_sizecache               int32                        `json:"-"`
}

func (m *CEconItem_Description) Reset()         { *m = CEconItem_Description{} }
func (m *CEconItem_Description) String() string { return proto.CompactTextString(m) }
func (*CEconItem_Description) ProtoMessage()    {}
func (*CEconItem_Description) Descriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_econ_steamclient_ebacc7adc412818c, []int{7}
}
func (m *CEconItem_Description) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CEconItem_Description.Unmarshal(m, b)
}
func (m *CEconItem_Description) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CEconItem_Description.Marshal(b, m, deterministic)
}
func (dst *CEconItem_Description) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CEconItem_Description.Merge(dst, src)
}
func (m *CEconItem_Description) XXX_Size() int {
	return xxx_messageInfo_CEconItem_Description.Size(m)
}
func (m *CEconItem_Description) XXX_DiscardUnknown() {
	xxx_messageInfo_CEconItem_Description.DiscardUnknown(m)
}

var xxx_messageInfo_CEconItem_Description proto.InternalMessageInfo

func (m *CEconItem_Description) GetAppid() int32 {
	if m != nil && m.Appid != nil {
		return *m.Appid
	}
	return 0
}

func (m *CEconItem_Description) GetClassid() uint64 {
	if m != nil && m.Classid != nil {
		return *m.Classid
	}
	return 0
}

func (m *CEconItem_Description) GetInstanceid() uint64 {
	if m != nil && m.Instanceid != nil {
		return *m.Instanceid
	}
	return 0
}

func (m *CEconItem_Description) GetCurrency() bool {
	if m != nil && m.Currency != nil {
		return *m.Currency
	}
	return false
}

func (m *CEconItem_Description) GetBackgroundColor() string {
	if m != nil && m.BackgroundColor != nil {
		return *m.BackgroundColor
	}
	return ""
}

func (m *CEconItem_Description) GetIconUrl() string {
	if m != nil && m.IconUrl != nil {
		return *m.IconUrl
	}
	return ""
}

func (m *CEconItem_Description) GetIconUrlLarge() string {
	if m != nil && m.IconUrlLarge != nil {
		return *m.IconUrlLarge
	}
	return ""
}

func (m *CEconItem_Description) GetDescriptions() []*CEconItem_DescriptionLine {
	if m != nil {
		return m.Descriptions
	}
	return nil
}

func (m *CEconItem_Description) GetTradable() bool {
	if m != nil && m.Tradable != nil {
		return *m.Tradable
	}
	return false
}

func (m *CEconItem_Description) GetActions() []*CEconItem_Action {
	if m != nil {
		return m.Actions
	}
	return nil
}

func (m *CEconItem_Description) GetOwnerDescriptions() []*CEconItem_DescriptionLine {
	if m != nil {
		return m.OwnerDescriptions
	}
	return nil
}

func (m *CEconItem_Description) GetOwnerActions() []*CEconItem_Action {
	if m != nil {
		return m.OwnerActions
	}
	return nil
}

func (m *CEconItem_Description) GetFraudwarnings() []string {
	if m != nil {
		return m.Fraudwarnings
	}
	return nil
}

func (m *CEconItem_Description) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *CEconItem_Description) GetNameColor() string {
	if m != nil && m.NameColor != nil {
		return *m.NameColor
	}
	return ""
}

func (m *CEconItem_Description) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ""
}

func (m *CEconItem_Description) GetMarketName() string {
	if m != nil && m.MarketName != nil {
		return *m.MarketName
	}
	return ""
}

func (m *CEconItem_Description) GetMarketHashName() string {
	if m != nil && m.MarketHashName != nil {
		return *m.MarketHashName
	}
	return ""
}

func (m *CEconItem_Description) GetMarketFee() string {
	if m != nil && m.MarketFee != nil {
		return *m.MarketFee
	}
	return ""
}

func (m *CEconItem_Description) GetMarketFeeApp() int32 {
	if m != nil && m.MarketFeeApp != nil {
		return *m.MarketFeeApp
	}
	return 0
}

func (m *CEconItem_Description) GetContainedItem() *CEconItem_Description {
	if m != nil {
		return m.ContainedItem
	}
	return nil
}

func (m *CEconItem_Description) GetMarketActions() []*CEconItem_Action {
	if m != nil {
		return m.MarketActions
	}
	return nil
}

func (m *CEconItem_Description) GetCommodity() bool {
	if m != nil && m.Commodity != nil {
		return *m.Commodity
	}
	return false
}

func (m *CEconItem_Description) GetMarketTradableRestriction() int32 {
	if m != nil && m.MarketTradableRestriction != nil {
		return *m.MarketTradableRestriction
	}
	return 0
}

func (m *CEconItem_Description) GetMarketMarketableRestriction() int32 {
	if m != nil && m.MarketMarketableRestriction != nil {
		return *m.MarketMarketableRestriction
	}
	return 0
}

func (m *CEconItem_Description) GetMarketable() bool {
	if m != nil && m.Marketable != nil {
		return *m.Marketable
	}
	return false
}

func (m *CEconItem_Description) GetTags() []*CEconItem_Tag {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *CEconItem_Description) GetItemExpiration() string {
	if m != nil && m.ItemExpiration != nil {
		return *m.ItemExpiration
	}
	return ""
}

type CEconItem_Tag struct {
	Appid                 *uint32  `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	Category              *string  `protobuf:"bytes,2,opt,name=category" json:"category,omitempty"`
	InternalName          *string  `protobuf:"bytes,3,opt,name=internal_name,json=internalName" json:"internal_name,omitempty"`
	LocalizedCategoryName *string  `protobuf:"bytes,4,opt,name=localized_category_name,json=localizedCategoryName" json:"localized_category_name,omitempty"`
	LocalizedTagName      *string  `protobuf:"bytes,5,opt,name=localized_tag_name,json=localizedTagName" json:"localized_tag_name,omitempty"`
	Color                 *string  `protobuf:"bytes,6,opt,name=color" json:"color,omitempty"`
	XXX_NoUnkeyedLiteral  struct{} `json:"-"`
	XXX_unrecognized      []byte   `json:"-"`
	XXX_sizecache         int32    `json:"-"`
}

func (m *CEconItem_Tag) Reset()         { *m = CEconItem_Tag{} }
func (m *CEconItem_Tag) String() string { return proto.CompactTextString(m) }
func (*CEconItem_Tag) ProtoMessage()    {}
func (*CEconItem_Tag) Descriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_econ_steamclient_ebacc7adc412818c, []int{8}
}
func (m *CEconItem_Tag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CEconItem_Tag.Unmarshal(m, b)
}
func (m *CEconItem_Tag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CEconItem_Tag.Marshal(b, m, deterministic)
}
func (dst *CEconItem_Tag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CEconItem_Tag.Merge(dst, src)
}
func (m *CEconItem_Tag) XXX_Size() int {
	return xxx_messageInfo_CEconItem_Tag.Size(m)
}
func (m *CEconItem_Tag) XXX_DiscardUnknown() {
	xxx_messageInfo_CEconItem_Tag.DiscardUnknown(m)
}

var xxx_messageInfo_CEconItem_Tag proto.InternalMessageInfo

func (m *CEconItem_Tag) GetAppid() uint32 {
	if m != nil && m.Appid != nil {
		return *m.Appid
	}
	return 0
}

func (m *CEconItem_Tag) GetCategory() string {
	if m != nil && m.Category != nil {
		return *m.Category
	}
	return ""
}

func (m *CEconItem_Tag) GetInternalName() string {
	if m != nil && m.InternalName != nil {
		return *m.InternalName
	}
	return ""
}

func (m *CEconItem_Tag) GetLocalizedCategoryName() string {
	if m != nil && m.LocalizedCategoryName != nil {
		return *m.LocalizedCategoryName
	}
	return ""
}

func (m *CEconItem_Tag) GetLocalizedTagName() string {
	if m != nil && m.LocalizedTagName != nil {
		return *m.LocalizedTagName
	}
	return ""
}

func (m *CEconItem_Tag) GetColor() string {
	if m != nil && m.Color != nil {
		return *m.Color
	}
	return ""
}

type CEcon_GetAssetClassInfo_Response struct {
	Descriptions         []*CEconItem_Description `protobuf:"bytes,1,rep,name=descriptions" json:"descriptions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *CEcon_GetAssetClassInfo_Response) Reset()         { *m = CEcon_GetAssetClassInfo_Response{} }
func (m *CEcon_GetAssetClassInfo_Response) String() string { return proto.CompactTextString(m) }
func (*CEcon_GetAssetClassInfo_Response) ProtoMessage()    {}
func (*CEcon_GetAssetClassInfo_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_econ_steamclient_ebacc7adc412818c, []int{9}
}
func (m *CEcon_GetAssetClassInfo_Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CEcon_GetAssetClassInfo_Response.Unmarshal(m, b)
}
func (m *CEcon_GetAssetClassInfo_Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CEcon_GetAssetClassInfo_Response.Marshal(b, m, deterministic)
}
func (dst *CEcon_GetAssetClassInfo_Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CEcon_GetAssetClassInfo_Response.Merge(dst, src)
}
func (m *CEcon_GetAssetClassInfo_Response) XXX_Size() int {
	return xxx_messageInfo_CEcon_GetAssetClassInfo_Response.Size(m)
}
func (m *CEcon_GetAssetClassInfo_Response) XXX_DiscardUnknown() {
	xxx_messageInfo_CEcon_GetAssetClassInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_CEcon_GetAssetClassInfo_Response proto.InternalMessageInfo

func (m *CEcon_GetAssetClassInfo_Response) GetDescriptions() []*CEconItem_Description {
	if m != nil {
		return m.Descriptions
	}
	return nil
}

func init() {
	proto.RegisterType((*CEcon_GetTradeOfferAccessToken_Request)(nil), "CEcon_GetTradeOfferAccessToken_Request")
	proto.RegisterType((*CEcon_GetTradeOfferAccessToken_Response)(nil), "CEcon_GetTradeOfferAccessToken_Response")
	proto.RegisterType((*CEcon_ClientGetItemShopOverlayAuthURL_Request)(nil), "CEcon_ClientGetItemShopOverlayAuthURL_Request")
	proto.RegisterType((*CEcon_ClientGetItemShopOverlayAuthURL_Response)(nil), "CEcon_ClientGetItemShopOverlayAuthURL_Response")
	proto.RegisterType((*CEcon_GetAssetClassInfo_Request)(nil), "CEcon_GetAssetClassInfo_Request")
	proto.RegisterType((*CEcon_GetAssetClassInfo_Request_Class)(nil), "CEcon_GetAssetClassInfo_Request.Class")
	proto.RegisterType((*CEconItem_DescriptionLine)(nil), "CEconItem_DescriptionLine")
	proto.RegisterType((*CEconItem_Action)(nil), "CEconItem_Action")
	proto.RegisterType((*CEconItem_Description)(nil), "CEconItem_Description")
	proto.RegisterType((*CEconItem_Tag)(nil), "CEconItem_Tag")
	proto.RegisterType((*CEcon_GetAssetClassInfo_Response)(nil), "CEcon_GetAssetClassInfo_Response")
}

func init() {
	proto.RegisterFile("steammessages_econ.steamclient.proto", fileDescriptor_steammessages_econ_steamclient_ebacc7adc412818c)
}

var fileDescriptor_steammessages_econ_steamclient_ebacc7adc412818c = []byte{
	// 1373 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x57, 0xcd, 0x72, 0xdb, 0xb6,
	0x16, 0x1e, 0xc5, 0x76, 0x6c, 0xc3, 0x96, 0x63, 0xe3, 0xc6, 0x09, 0xad, 0xfc, 0x21, 0x9c, 0x4c,
	0xec, 0x3b, 0x89, 0xe5, 0xb9, 0xb9, 0x77, 0x6e, 0x32, 0x69, 0x9b, 0x56, 0x72, 0x5c, 0x37, 0x33,
	0xae, 0x33, 0x65, 0xed, 0x2e, 0xba, 0x08, 0x07, 0xa2, 0x8e, 0x48, 0x8c, 0x29, 0x80, 0x01, 0x40,
	0xab, 0xee, 0x2a, 0xa3, 0xc7, 0xe8, 0xa6, 0x4f, 0xa1, 0x77, 0x69, 0xb7, 0xdd, 0xf4, 0x35, 0x3a,
	0x00, 0x48, 0x4a, 0x4e, 0xac, 0x38, 0x59, 0x89, 0xf8, 0xf0, 0xe1, 0x3b, 0x38, 0x3f, 0x3a, 0x3c,
	0x44, 0x0f, 0x94, 0x06, 0xda, 0xef, 0x83, 0x52, 0x34, 0x06, 0x15, 0x42, 0x24, 0x78, 0xd3, 0x42,
	0x51, 0xca, 0x80, 0xeb, 0x66, 0x26, 0x85, 0x16, 0x8d, 0xc7, 0xe7, 0x59, 0x39, 0x67, 0x3d, 0x06,
	0xdd, 0xb0, 0x43, 0x15, 0x7c, 0xc8, 0xf6, 0x7f, 0x42, 0x0f, 0x77, 0xf7, 0x22, 0xc1, 0xc3, 0x7d,
	0xd0, 0x47, 0x92, 0x76, 0xe1, 0x75, 0xaf, 0x07, 0xb2, 0x15, 0x45, 0xa0, 0xd4, 0x91, 0x38, 0x01,
	0x1e, 0x06, 0xf0, 0x36, 0x07, 0xa5, 0xf1, 0x63, 0x84, 0x63, 0xe0, 0x20, 0xa9, 0x86, 0x90, 0xc3,
	0x20, 0xd4, 0x66, 0xd7, 0xab, 0x91, 0xda, 0xd6, 0x42, 0xb0, 0x5a, 0xee, 0x1c, 0xc2, 0xc0, 0x9e,
	0xf2, 0x3b, 0x68, 0xf3, 0x52, 0x5d, 0x95, 0x09, 0xae, 0x00, 0x3f, 0x45, 0x9e, 0x36, 0x8c, 0x50,
	0x18, 0x4a, 0x48, 0x2d, 0x67, 0x42, 0x7e, 0x31, 0x58, 0xd7, 0x17, 0x29, 0xf8, 0x87, 0x68, 0xdb,
	0xd9, 0xd8, 0xb5, 0x1e, 0xed, 0x83, 0x7e, 0xa5, 0xa1, 0xff, 0x63, 0x22, 0xb2, 0xd7, 0xa7, 0x20,
	0x53, 0x7a, 0xd6, 0xca, 0x75, 0x72, 0x1c, 0x1c, 0x54, 0x2e, 0xdc, 0x41, 0x48, 0x82, 0xce, 0x25,
	0x0f, 0x73, 0x99, 0x16, 0xda, 0x8b, 0x0e, 0x39, 0x96, 0xa9, 0xdf, 0x46, 0xcd, 0x4f, 0xd5, 0x2b,
	0xae, 0xbe, 0x8a, 0x66, 0xc6, 0x4a, 0xe6, 0xd1, 0xff, 0xa3, 0x86, 0xee, 0x55, 0x8e, 0xb7, 0x94,
	0x02, 0xbd, 0x9b, 0x52, 0xa5, 0x5e, 0xf1, 0x9e, 0xa8, 0xae, 0xd1, 0x40, 0x0b, 0x29, 0xe5, 0x71,
	0x4e, 0x63, 0x28, 0x8e, 0x56, 0x6b, 0x7c, 0x1d, 0xcd, 0xd1, 0x2c, 0x63, 0x5d, 0xef, 0x0a, 0xa9,
	0x6d, 0xd5, 0x03, 0xb7, 0xc0, 0xdf, 0xa0, 0xf9, 0xc8, 0xc8, 0x80, 0xf2, 0x66, 0xc8, 0xcc, 0xd6,
	0xd2, 0x93, 0x87, 0xcd, 0x4b, 0x8c, 0x34, 0x2d, 0x12, 0x94, 0xc7, 0x1a, 0x2d, 0x34, 0x67, 0x11,
	0xec, 0x15, 0x52, 0xac, 0x6b, 0x6d, 0xcf, 0x06, 0xe5, 0x12, 0xdf, 0x45, 0x88, 0x71, 0xa5, 0x29,
	0x8f, 0xa0, 0xb0, 0x3f, 0x1b, 0x4c, 0x20, 0xfe, 0x5b, 0xb4, 0x61, 0x8d, 0x9a, 0xa0, 0x84, 0x2f,
	0x41, 0x45, 0x92, 0x65, 0x9a, 0x09, 0x7e, 0xc0, 0x38, 0x60, 0x8c, 0x66, 0xf5, 0x59, 0x56, 0xfa,
	0x63, 0x9f, 0x8d, 0x2f, 0xa7, 0x34, 0xcd, 0xc1, 0x6a, 0x2d, 0x06, 0x6e, 0x61, 0xd0, 0x48, 0xa4,
	0x42, 0x7a, 0x33, 0x0e, 0xb5, 0x0b, 0x83, 0xa6, 0xb4, 0x03, 0xa9, 0x37, 0xeb, 0x50, 0xbb, 0xf0,
	0x9f, 0xa3, 0xd5, 0xb1, 0xc9, 0x56, 0x64, 0xac, 0x19, 0x4b, 0x29, 0xe3, 0x27, 0xa5, 0x25, 0xf3,
	0x6c, 0x30, 0x4e, 0xfb, 0xa5, 0x21, 0xfb, 0xec, 0xbf, 0x5b, 0x44, 0xeb, 0x17, 0xde, 0x77, 0x1c,
	0x63, 0x23, 0x31, 0x57, 0xc6, 0x78, 0x22, 0x30, 0x57, 0x3e, 0x16, 0x98, 0x99, 0xf7, 0x03, 0x63,
	0xf2, 0x19, 0xe5, 0x52, 0x02, 0x8f, 0xce, 0xec, 0xf5, 0x17, 0x82, 0x6a, 0x8d, 0xff, 0x8d, 0x56,
	0x3b, 0x34, 0x3a, 0x89, 0xa5, 0xc8, 0x79, 0x37, 0x74, 0x8e, 0xcf, 0xd9, 0x5b, 0x5e, 0x1b, 0xe3,
	0xbb, 0x36, 0x04, 0x1b, 0x68, 0x81, 0x99, 0x9c, 0x9a, 0x8a, 0xba, 0x6a, 0x29, 0xf3, 0x66, 0x7d,
	0x2c, 0x53, 0xfc, 0x00, 0xad, 0x94, 0x5b, 0x61, 0x4a, 0x65, 0x0c, 0xde, 0xbc, 0x25, 0x2c, 0x17,
	0x84, 0x03, 0x83, 0xe1, 0x17, 0x68, 0xb9, 0x3b, 0x76, 0x53, 0x79, 0x0b, 0xb6, 0x54, 0x1a, 0xcd,
	0xa9, 0x59, 0x0b, 0xce, 0xf1, 0x8d, 0x1f, 0xe6, 0x8f, 0x46, 0x3b, 0x29, 0x78, 0x8b, 0xce, 0x8f,
	0x72, 0x8d, 0x1f, 0xa1, 0x79, 0x1a, 0x39, 0x59, 0x64, 0x65, 0xd7, 0x9a, 0xef, 0x67, 0x26, 0x28,
	0x19, 0xf8, 0x15, 0xc2, 0x62, 0xc0, 0x41, 0x86, 0xe7, 0xae, 0xb3, 0x74, 0xe9, 0x75, 0xd6, 0xec,
	0xa9, 0x97, 0x93, 0x77, 0xfa, 0x3f, 0xaa, 0x3b, 0xa9, 0xd2, 0xfa, 0xf2, 0x34, 0xeb, 0xcb, 0x96,
	0xd7, 0x2a, 0xae, 0xf0, 0x00, 0xd5, 0x7b, 0x92, 0xe6, 0xdd, 0x01, 0x95, 0x9c, 0xf1, 0x58, 0x79,
	0x75, 0x32, 0xb3, 0xb5, 0x18, 0x9c, 0x07, 0xab, 0xba, 0x59, 0x19, 0xd7, 0x8d, 0x69, 0x12, 0xe6,
	0xb7, 0xc8, 0xd5, 0x35, 0xd7, 0x24, 0x0c, 0xe2, 0xb2, 0x54, 0x16, 0xfa, 0xea, 0x44, 0xa1, 0xdf,
	0x43, 0x4b, 0x7d, 0x2a, 0x4f, 0x40, 0x87, 0x56, 0x6d, 0xcd, 0x6e, 0x21, 0x07, 0x1d, 0x1a, 0xcd,
	0x2d, 0xb4, 0x5a, 0x10, 0x12, 0xaa, 0x12, 0xc7, 0xc2, 0x96, 0xb5, 0xe2, 0xf0, 0xef, 0xa8, 0x4a,
	0x0e, 0x0b, 0xeb, 0x05, 0xb3, 0x07, 0xe0, 0xfd, 0xcb, 0x59, 0x77, 0xc8, 0xb7, 0x00, 0xa6, 0x10,
	0xc6, 0xdb, 0x21, 0xcd, 0x32, 0xef, 0xb6, 0xad, 0xe1, 0xe5, 0x8a, 0xd2, 0xca, 0x32, 0xfc, 0x15,
	0x5a, 0x89, 0x04, 0xd7, 0x94, 0x71, 0xe8, 0x86, 0x4c, 0x43, 0xdf, 0xbb, 0x4e, 0x6a, 0x5b, 0x4b,
	0x4f, 0x6e, 0x5c, 0x1c, 0xfb, 0xa0, 0x5e, 0xb1, 0xcd, 0x16, 0x7e, 0x56, 0x19, 0x29, 0x83, 0xbe,
	0x3e, 0x2d, 0xe8, 0x75, 0x47, 0x2c, 0xa3, 0x7e, 0x1b, 0x2d, 0x46, 0xa2, 0xdf, 0x17, 0x5d, 0xa6,
	0xcf, 0xbc, 0x1b, 0xb6, 0x84, 0xc6, 0x00, 0x7e, 0x81, 0x6e, 0x15, 0xba, 0x65, 0x59, 0x85, 0x12,
	0x94, 0x96, 0xcc, 0x9e, 0xf6, 0x6e, 0x5a, 0x4f, 0x36, 0x1c, 0xe5, 0xa8, 0x60, 0x04, 0x63, 0x02,
	0x6e, 0xa3, 0x3b, 0xc5, 0x79, 0xf7, 0xf3, 0x81, 0x82, 0x67, 0x15, 0x0a, 0x23, 0xdf, 0x57, 0x9c,
	0x49, 0x8d, 0xbb, 0x65, 0x7c, 0x6d, 0x95, 0x6f, 0xd8, 0x2b, 0x4e, 0x20, 0xd8, 0x47, 0xb3, 0x9a,
	0xc6, 0xca, 0x6b, 0x58, 0x8f, 0x57, 0x26, 0x3c, 0x3e, 0xa2, 0x71, 0x60, 0xf7, 0xf0, 0x26, 0xba,
	0x66, 0x82, 0x1a, 0xc2, 0x2f, 0x19, 0x93, 0xd4, 0x5a, 0xbe, 0xe5, 0x92, 0x69, 0xe0, 0xbd, 0x0a,
	0xf5, 0xff, 0x9e, 0x41, 0xf5, 0x73, 0x02, 0xf8, 0xd9, 0x64, 0xeb, 0xa9, 0xb7, 0xfd, 0xe1, 0xc8,
	0xbb, 0x7b, 0x94, 0x00, 0xa1, 0x59, 0x46, 0x74, 0x42, 0x35, 0x29, 0x32, 0xa1, 0x88, 0x4e, 0x80,
	0x18, 0xb9, 0xb2, 0x3d, 0x1d, 0xa1, 0x85, 0x88, 0x6a, 0x88, 0x85, 0x3c, 0x73, 0x6d, 0xae, 0xfd,
	0x6c, 0x38, 0xf2, 0xfe, 0x67, 0x0e, 0x33, 0xae, 0x41, 0x72, 0x9a, 0x12, 0x53, 0x57, 0x44, 0xf4,
	0xec, 0xd9, 0x92, 0x6c, 0x17, 0x9a, 0xc6, 0xa4, 0x03, 0xa9, 0xe0, 0xb1, 0x22, 0x5a, 0x04, 0x95,
	0x12, 0xde, 0x43, 0xf5, 0xf2, 0xb4, 0xab, 0x4a, 0xdb, 0x94, 0xdb, 0x64, 0x38, 0xf2, 0x6e, 0x4f,
	0x95, 0xd6, 0x34, 0x0e, 0x96, 0xcb, 0x1d, 0x5b, 0xb5, 0x6f, 0xd0, 0xcd, 0x54, 0x44, 0x34, 0x65,
	0xbf, 0x42, 0x37, 0x2c, 0xc5, 0x9d, 0xa0, 0xed, 0xe7, 0xed, 0x87, 0xc3, 0x91, 0xe7, 0x1b, 0xc1,
	0x8a, 0x76, 0xe1, 0x65, 0x83, 0xf5, 0x6a, 0x7f, 0xb7, 0x80, 0xac, 0xfe, 0x6b, 0x84, 0xc7, 0xfa,
	0x9a, 0xc6, 0x4e, 0xda, 0xf6, 0xd1, 0xf6, 0xfd, 0xe1, 0xc8, 0xbb, 0x33, 0x5d, 0xda, 0x5c, 0x76,
	0xb5, 0xda, 0x3a, 0xa2, 0xb1, 0x15, 0x3c, 0x2c, 0x5f, 0x42, 0x57, 0xcf, 0x87, 0xd2, 0x82, 0x44,
	0x0b, 0x92, 0x2b, 0x20, 0x83, 0x04, 0x38, 0xe9, 0x32, 0x95, 0xa5, 0xf4, 0x8c, 0xf1, 0xb8, 0x8a,
	0xa4, 0x16, 0xf6, 0x31, 0x57, 0x20, 0x8b, 0xd7, 0x97, 0xff, 0x06, 0x91, 0xe9, 0x2f, 0xe4, 0x62,
	0x58, 0x78, 0xfe, 0x5e, 0x7b, 0xae, 0xd9, 0x12, 0x9b, 0xf6, 0x9f, 0x3c, 0xc7, 0x7d, 0xf2, 0xd7,
	0x2c, 0x9a, 0x35, 0x34, 0xfc, 0x5b, 0x0d, 0x79, 0xd3, 0x46, 0x2a, 0xbc, 0xd9, 0xfc, 0xb4, 0x59,
	0xae, 0xb1, 0xd5, 0xfc, 0xc4, 0xe1, 0xcc, 0x7f, 0x34, 0x1c, 0x79, 0x9b, 0xfb, 0xa0, 0x2b, 0x8f,
	0x37, 0x15, 0xb1, 0xd3, 0x18, 0xb1, 0xd3, 0x1a, 0x71, 0xd3, 0x1a, 0xb1, 0xd3, 0x1a, 0xfe, 0xd3,
	0x0c, 0x3f, 0x1f, 0x9f, 0x9d, 0x70, 0xb3, 0xf9, 0x59, 0x33, 0x5b, 0x63, 0xe7, 0x33, 0x67, 0x32,
	0xff, 0x78, 0x38, 0xf2, 0x7e, 0xd8, 0x2f, 0xe6, 0x51, 0x45, 0x28, 0x39, 0x0e, 0x0e, 0xc8, 0x20,
	0x61, 0x51, 0x42, 0x14, 0x68, 0x03, 0x28, 0x88, 0x72, 0x69, 0x72, 0x2d, 0x4e, 0x18, 0x90, 0x9e,
	0x90, 0x84, 0xf1, 0xed, 0x98, 0xf6, 0x61, 0xbb, 0x23, 0xc5, 0x40, 0x81, 0xb4, 0x7f, 0x3c, 0x95,
	0x88, 0x8c, 0x64, 0xb9, 0x8c, 0x12, 0xaa, 0x40, 0xe1, 0xdf, 0x6b, 0x68, 0xed, 0x83, 0xe4, 0x62,
	0x72, 0xd9, 0x1c, 0xd6, 0xb8, 0xdf, 0xbc, 0xac, 0x30, 0xfc, 0xbd, 0xe1, 0xc8, 0x6b, 0x05, 0x76,
	0x0c, 0x55, 0x64, 0x22, 0xed, 0x84, 0xf1, 0x9e, 0x90, 0x7d, 0xdb, 0x4b, 0x08, 0xed, 0x88, 0xdc,
	0x65, 0x21, 0x33, 0x13, 0x5d, 0x97, 0x30, 0x4e, 0xcc, 0x83, 0x26, 0xe5, 0x88, 0xf7, 0xf5, 0x70,
	0xe4, 0x7d, 0xd1, 0x22, 0x0a, 0xe4, 0x29, 0x8b, 0xc0, 0xb5, 0x93, 0x4c, 0x8a, 0x53, 0xd6, 0x05,
	0x45, 0x4c, 0x17, 0xce, 0x39, 0x8b, 0x9c, 0xd8, 0x80, 0xe9, 0xc4, 0x6a, 0x99, 0x6f, 0x08, 0x7b,
	0x02, 0xa4, 0x6a, 0x7f, 0xf9, 0xf3, 0xd3, 0x98, 0xe9, 0x24, 0xef, 0x34, 0x23, 0xd1, 0xdf, 0xf9,
	0xcf, 0x7f, 0x4f, 0x76, 0x62, 0xb1, 0x6d, 0x3f, 0x19, 0xb6, 0x25, 0x28, 0x91, 0xcb, 0x08, 0xd4,
	0x8e, 0xfd, 0x6c, 0xe8, 0xe4, 0xbd, 0x1d, 0xbb, 0xb1, 0xe3, 0x3e, 0x26, 0xde, 0xd5, 0x6a, 0xff,
	0x04, 0x00, 0x00, 0xff, 0xff, 0xc8, 0x66, 0x39, 0x58, 0x9e, 0x0c, 0x00, 0x00,
}
