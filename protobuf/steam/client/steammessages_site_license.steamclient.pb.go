// Code generated by protoc-gen-go. DO NOT EDIT.
// source: steammessages_site_license.steamclient.proto

package client // import "github.com/13k/go-steam-resources/protobuf/steam/client"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type CSiteManagerClient_IncomingClient_Request struct {
	SiteInstanceid       *uint64  `protobuf:"fixed64,1,opt,name=site_instanceid,json=siteInstanceid" json:"site_instanceid,omitempty"`
	ClientSteamid        *uint64  `protobuf:"fixed64,2,opt,name=client_steamid,json=clientSteamid" json:"client_steamid,omitempty"`
	ClientLocalIp        *uint32  `protobuf:"fixed32,3,opt,name=client_local_ip,json=clientLocalIp" json:"client_local_ip,omitempty"`
	ConnectionKey        []byte   `protobuf:"bytes,4,opt,name=connection_key,json=connectionKey" json:"connection_key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CSiteManagerClient_IncomingClient_Request) Reset() {
	*m = CSiteManagerClient_IncomingClient_Request{}
}
func (m *CSiteManagerClient_IncomingClient_Request) String() string { return proto.CompactTextString(m) }
func (*CSiteManagerClient_IncomingClient_Request) ProtoMessage()    {}
func (*CSiteManagerClient_IncomingClient_Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_site_license_steamclient_91112f31349c65cd, []int{0}
}
func (m *CSiteManagerClient_IncomingClient_Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CSiteManagerClient_IncomingClient_Request.Unmarshal(m, b)
}
func (m *CSiteManagerClient_IncomingClient_Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CSiteManagerClient_IncomingClient_Request.Marshal(b, m, deterministic)
}
func (dst *CSiteManagerClient_IncomingClient_Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CSiteManagerClient_IncomingClient_Request.Merge(dst, src)
}
func (m *CSiteManagerClient_IncomingClient_Request) XXX_Size() int {
	return xxx_messageInfo_CSiteManagerClient_IncomingClient_Request.Size(m)
}
func (m *CSiteManagerClient_IncomingClient_Request) XXX_DiscardUnknown() {
	xxx_messageInfo_CSiteManagerClient_IncomingClient_Request.DiscardUnknown(m)
}

var xxx_messageInfo_CSiteManagerClient_IncomingClient_Request proto.InternalMessageInfo

func (m *CSiteManagerClient_IncomingClient_Request) GetSiteInstanceid() uint64 {
	if m != nil && m.SiteInstanceid != nil {
		return *m.SiteInstanceid
	}
	return 0
}

func (m *CSiteManagerClient_IncomingClient_Request) GetClientSteamid() uint64 {
	if m != nil && m.ClientSteamid != nil {
		return *m.ClientSteamid
	}
	return 0
}

func (m *CSiteManagerClient_IncomingClient_Request) GetClientLocalIp() uint32 {
	if m != nil && m.ClientLocalIp != nil {
		return *m.ClientLocalIp
	}
	return 0
}

func (m *CSiteManagerClient_IncomingClient_Request) GetConnectionKey() []byte {
	if m != nil {
		return m.ConnectionKey
	}
	return nil
}

type CSiteManagerClient_IncomingClient_Response struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CSiteManagerClient_IncomingClient_Response) Reset() {
	*m = CSiteManagerClient_IncomingClient_Response{}
}
func (m *CSiteManagerClient_IncomingClient_Response) String() string {
	return proto.CompactTextString(m)
}
func (*CSiteManagerClient_IncomingClient_Response) ProtoMessage() {}
func (*CSiteManagerClient_IncomingClient_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_site_license_steamclient_91112f31349c65cd, []int{1}
}
func (m *CSiteManagerClient_IncomingClient_Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CSiteManagerClient_IncomingClient_Response.Unmarshal(m, b)
}
func (m *CSiteManagerClient_IncomingClient_Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CSiteManagerClient_IncomingClient_Response.Marshal(b, m, deterministic)
}
func (dst *CSiteManagerClient_IncomingClient_Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CSiteManagerClient_IncomingClient_Response.Merge(dst, src)
}
func (m *CSiteManagerClient_IncomingClient_Response) XXX_Size() int {
	return xxx_messageInfo_CSiteManagerClient_IncomingClient_Response.Size(m)
}
func (m *CSiteManagerClient_IncomingClient_Response) XXX_DiscardUnknown() {
	xxx_messageInfo_CSiteManagerClient_IncomingClient_Response.DiscardUnknown(m)
}

var xxx_messageInfo_CSiteManagerClient_IncomingClient_Response proto.InternalMessageInfo

type CSiteLicense_ClientSeatCheckout_Notification struct {
	Appid                *uint32  `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	Eresult              *uint32  `protobuf:"varint,2,opt,name=eresult" json:"eresult,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CSiteLicense_ClientSeatCheckout_Notification) Reset() {
	*m = CSiteLicense_ClientSeatCheckout_Notification{}
}
func (m *CSiteLicense_ClientSeatCheckout_Notification) String() string {
	return proto.CompactTextString(m)
}
func (*CSiteLicense_ClientSeatCheckout_Notification) ProtoMessage() {}
func (*CSiteLicense_ClientSeatCheckout_Notification) Descriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_site_license_steamclient_91112f31349c65cd, []int{2}
}
func (m *CSiteLicense_ClientSeatCheckout_Notification) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CSiteLicense_ClientSeatCheckout_Notification.Unmarshal(m, b)
}
func (m *CSiteLicense_ClientSeatCheckout_Notification) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CSiteLicense_ClientSeatCheckout_Notification.Marshal(b, m, deterministic)
}
func (dst *CSiteLicense_ClientSeatCheckout_Notification) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CSiteLicense_ClientSeatCheckout_Notification.Merge(dst, src)
}
func (m *CSiteLicense_ClientSeatCheckout_Notification) XXX_Size() int {
	return xxx_messageInfo_CSiteLicense_ClientSeatCheckout_Notification.Size(m)
}
func (m *CSiteLicense_ClientSeatCheckout_Notification) XXX_DiscardUnknown() {
	xxx_messageInfo_CSiteLicense_ClientSeatCheckout_Notification.DiscardUnknown(m)
}

var xxx_messageInfo_CSiteLicense_ClientSeatCheckout_Notification proto.InternalMessageInfo

func (m *CSiteLicense_ClientSeatCheckout_Notification) GetAppid() uint32 {
	if m != nil && m.Appid != nil {
		return *m.Appid
	}
	return 0
}

func (m *CSiteLicense_ClientSeatCheckout_Notification) GetEresult() uint32 {
	if m != nil && m.Eresult != nil {
		return *m.Eresult
	}
	return 0
}

type CSiteLicense_InitiateAssociation_Request struct {
	SiteSteamid          *uint64  `protobuf:"fixed64,1,opt,name=site_steamid,json=siteSteamid" json:"site_steamid,omitempty"`
	SiteInstanceid       *uint64  `protobuf:"fixed64,2,opt,name=site_instanceid,json=siteInstanceid" json:"site_instanceid,omitempty"`
	ClientLocalIp        *uint32  `protobuf:"fixed32,3,opt,name=client_local_ip,json=clientLocalIp" json:"client_local_ip,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CSiteLicense_InitiateAssociation_Request) Reset() {
	*m = CSiteLicense_InitiateAssociation_Request{}
}
func (m *CSiteLicense_InitiateAssociation_Request) String() string { return proto.CompactTextString(m) }
func (*CSiteLicense_InitiateAssociation_Request) ProtoMessage()    {}
func (*CSiteLicense_InitiateAssociation_Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_site_license_steamclient_91112f31349c65cd, []int{3}
}
func (m *CSiteLicense_InitiateAssociation_Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CSiteLicense_InitiateAssociation_Request.Unmarshal(m, b)
}
func (m *CSiteLicense_InitiateAssociation_Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CSiteLicense_InitiateAssociation_Request.Marshal(b, m, deterministic)
}
func (dst *CSiteLicense_InitiateAssociation_Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CSiteLicense_InitiateAssociation_Request.Merge(dst, src)
}
func (m *CSiteLicense_InitiateAssociation_Request) XXX_Size() int {
	return xxx_messageInfo_CSiteLicense_InitiateAssociation_Request.Size(m)
}
func (m *CSiteLicense_InitiateAssociation_Request) XXX_DiscardUnknown() {
	xxx_messageInfo_CSiteLicense_InitiateAssociation_Request.DiscardUnknown(m)
}

var xxx_messageInfo_CSiteLicense_InitiateAssociation_Request proto.InternalMessageInfo

func (m *CSiteLicense_InitiateAssociation_Request) GetSiteSteamid() uint64 {
	if m != nil && m.SiteSteamid != nil {
		return *m.SiteSteamid
	}
	return 0
}

func (m *CSiteLicense_InitiateAssociation_Request) GetSiteInstanceid() uint64 {
	if m != nil && m.SiteInstanceid != nil {
		return *m.SiteInstanceid
	}
	return 0
}

func (m *CSiteLicense_InitiateAssociation_Request) GetClientLocalIp() uint32 {
	if m != nil && m.ClientLocalIp != nil {
		return *m.ClientLocalIp
	}
	return 0
}

type CSiteLicense_InitiateAssociation_Response struct {
	ConnectionKey        []byte   `protobuf:"bytes,1,opt,name=connection_key,json=connectionKey" json:"connection_key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CSiteLicense_InitiateAssociation_Response) Reset() {
	*m = CSiteLicense_InitiateAssociation_Response{}
}
func (m *CSiteLicense_InitiateAssociation_Response) String() string { return proto.CompactTextString(m) }
func (*CSiteLicense_InitiateAssociation_Response) ProtoMessage()    {}
func (*CSiteLicense_InitiateAssociation_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_site_license_steamclient_91112f31349c65cd, []int{4}
}
func (m *CSiteLicense_InitiateAssociation_Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CSiteLicense_InitiateAssociation_Response.Unmarshal(m, b)
}
func (m *CSiteLicense_InitiateAssociation_Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CSiteLicense_InitiateAssociation_Response.Marshal(b, m, deterministic)
}
func (dst *CSiteLicense_InitiateAssociation_Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CSiteLicense_InitiateAssociation_Response.Merge(dst, src)
}
func (m *CSiteLicense_InitiateAssociation_Response) XXX_Size() int {
	return xxx_messageInfo_CSiteLicense_InitiateAssociation_Response.Size(m)
}
func (m *CSiteLicense_InitiateAssociation_Response) XXX_DiscardUnknown() {
	xxx_messageInfo_CSiteLicense_InitiateAssociation_Response.DiscardUnknown(m)
}

var xxx_messageInfo_CSiteLicense_InitiateAssociation_Response proto.InternalMessageInfo

func (m *CSiteLicense_InitiateAssociation_Response) GetConnectionKey() []byte {
	if m != nil {
		return m.ConnectionKey
	}
	return nil
}

type CSiteLicense_LCSAuthenticate_Request struct {
	Instanceid           *uint64  `protobuf:"fixed64,1,opt,name=instanceid" json:"instanceid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CSiteLicense_LCSAuthenticate_Request) Reset()         { *m = CSiteLicense_LCSAuthenticate_Request{} }
func (m *CSiteLicense_LCSAuthenticate_Request) String() string { return proto.CompactTextString(m) }
func (*CSiteLicense_LCSAuthenticate_Request) ProtoMessage()    {}
func (*CSiteLicense_LCSAuthenticate_Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_site_license_steamclient_91112f31349c65cd, []int{5}
}
func (m *CSiteLicense_LCSAuthenticate_Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CSiteLicense_LCSAuthenticate_Request.Unmarshal(m, b)
}
func (m *CSiteLicense_LCSAuthenticate_Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CSiteLicense_LCSAuthenticate_Request.Marshal(b, m, deterministic)
}
func (dst *CSiteLicense_LCSAuthenticate_Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CSiteLicense_LCSAuthenticate_Request.Merge(dst, src)
}
func (m *CSiteLicense_LCSAuthenticate_Request) XXX_Size() int {
	return xxx_messageInfo_CSiteLicense_LCSAuthenticate_Request.Size(m)
}
func (m *CSiteLicense_LCSAuthenticate_Request) XXX_DiscardUnknown() {
	xxx_messageInfo_CSiteLicense_LCSAuthenticate_Request.DiscardUnknown(m)
}

var xxx_messageInfo_CSiteLicense_LCSAuthenticate_Request proto.InternalMessageInfo

func (m *CSiteLicense_LCSAuthenticate_Request) GetInstanceid() uint64 {
	if m != nil && m.Instanceid != nil {
		return *m.Instanceid
	}
	return 0
}

type CSiteLicense_LCSAuthenticate_Response struct {
	SiteId               *uint64  `protobuf:"varint,1,opt,name=site_id,json=siteId" json:"site_id,omitempty"`
	SiteName             *string  `protobuf:"bytes,2,opt,name=site_name,json=siteName" json:"site_name,omitempty"`
	NewSession           *bool    `protobuf:"varint,3,opt,name=new_session,json=newSession" json:"new_session,omitempty"`
	NoSiteLicenses       *bool    `protobuf:"varint,4,opt,name=no_site_licenses,json=noSiteLicenses" json:"no_site_licenses,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CSiteLicense_LCSAuthenticate_Response) Reset()         { *m = CSiteLicense_LCSAuthenticate_Response{} }
func (m *CSiteLicense_LCSAuthenticate_Response) String() string { return proto.CompactTextString(m) }
func (*CSiteLicense_LCSAuthenticate_Response) ProtoMessage()    {}
func (*CSiteLicense_LCSAuthenticate_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_site_license_steamclient_91112f31349c65cd, []int{6}
}
func (m *CSiteLicense_LCSAuthenticate_Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CSiteLicense_LCSAuthenticate_Response.Unmarshal(m, b)
}
func (m *CSiteLicense_LCSAuthenticate_Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CSiteLicense_LCSAuthenticate_Response.Marshal(b, m, deterministic)
}
func (dst *CSiteLicense_LCSAuthenticate_Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CSiteLicense_LCSAuthenticate_Response.Merge(dst, src)
}
func (m *CSiteLicense_LCSAuthenticate_Response) XXX_Size() int {
	return xxx_messageInfo_CSiteLicense_LCSAuthenticate_Response.Size(m)
}
func (m *CSiteLicense_LCSAuthenticate_Response) XXX_DiscardUnknown() {
	xxx_messageInfo_CSiteLicense_LCSAuthenticate_Response.DiscardUnknown(m)
}

var xxx_messageInfo_CSiteLicense_LCSAuthenticate_Response proto.InternalMessageInfo

func (m *CSiteLicense_LCSAuthenticate_Response) GetSiteId() uint64 {
	if m != nil && m.SiteId != nil {
		return *m.SiteId
	}
	return 0
}

func (m *CSiteLicense_LCSAuthenticate_Response) GetSiteName() string {
	if m != nil && m.SiteName != nil {
		return *m.SiteName
	}
	return ""
}

func (m *CSiteLicense_LCSAuthenticate_Response) GetNewSession() bool {
	if m != nil && m.NewSession != nil {
		return *m.NewSession
	}
	return false
}

func (m *CSiteLicense_LCSAuthenticate_Response) GetNoSiteLicenses() bool {
	if m != nil && m.NoSiteLicenses != nil {
		return *m.NoSiteLicenses
	}
	return false
}

type CSiteLicense_LCSAssociateUser_Request struct {
	Steamid              *uint64  `protobuf:"fixed64,1,opt,name=steamid" json:"steamid,omitempty"`
	LocalIp              *uint32  `protobuf:"fixed32,2,opt,name=local_ip,json=localIp" json:"local_ip,omitempty"`
	Instanceid           *uint64  `protobuf:"fixed64,3,opt,name=instanceid" json:"instanceid,omitempty"`
	MachineName          *string  `protobuf:"bytes,4,opt,name=machine_name,json=machineName" json:"machine_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CSiteLicense_LCSAssociateUser_Request) Reset()         { *m = CSiteLicense_LCSAssociateUser_Request{} }
func (m *CSiteLicense_LCSAssociateUser_Request) String() string { return proto.CompactTextString(m) }
func (*CSiteLicense_LCSAssociateUser_Request) ProtoMessage()    {}
func (*CSiteLicense_LCSAssociateUser_Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_site_license_steamclient_91112f31349c65cd, []int{7}
}
func (m *CSiteLicense_LCSAssociateUser_Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CSiteLicense_LCSAssociateUser_Request.Unmarshal(m, b)
}
func (m *CSiteLicense_LCSAssociateUser_Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CSiteLicense_LCSAssociateUser_Request.Marshal(b, m, deterministic)
}
func (dst *CSiteLicense_LCSAssociateUser_Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CSiteLicense_LCSAssociateUser_Request.Merge(dst, src)
}
func (m *CSiteLicense_LCSAssociateUser_Request) XXX_Size() int {
	return xxx_messageInfo_CSiteLicense_LCSAssociateUser_Request.Size(m)
}
func (m *CSiteLicense_LCSAssociateUser_Request) XXX_DiscardUnknown() {
	xxx_messageInfo_CSiteLicense_LCSAssociateUser_Request.DiscardUnknown(m)
}

var xxx_messageInfo_CSiteLicense_LCSAssociateUser_Request proto.InternalMessageInfo

func (m *CSiteLicense_LCSAssociateUser_Request) GetSteamid() uint64 {
	if m != nil && m.Steamid != nil {
		return *m.Steamid
	}
	return 0
}

func (m *CSiteLicense_LCSAssociateUser_Request) GetLocalIp() uint32 {
	if m != nil && m.LocalIp != nil {
		return *m.LocalIp
	}
	return 0
}

func (m *CSiteLicense_LCSAssociateUser_Request) GetInstanceid() uint64 {
	if m != nil && m.Instanceid != nil {
		return *m.Instanceid
	}
	return 0
}

func (m *CSiteLicense_LCSAssociateUser_Request) GetMachineName() string {
	if m != nil && m.MachineName != nil {
		return *m.MachineName
	}
	return ""
}

type CSiteLicense_LCSAssociateUser_Response struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CSiteLicense_LCSAssociateUser_Response) Reset() {
	*m = CSiteLicense_LCSAssociateUser_Response{}
}
func (m *CSiteLicense_LCSAssociateUser_Response) String() string { return proto.CompactTextString(m) }
func (*CSiteLicense_LCSAssociateUser_Response) ProtoMessage()    {}
func (*CSiteLicense_LCSAssociateUser_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_site_license_steamclient_91112f31349c65cd, []int{8}
}
func (m *CSiteLicense_LCSAssociateUser_Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CSiteLicense_LCSAssociateUser_Response.Unmarshal(m, b)
}
func (m *CSiteLicense_LCSAssociateUser_Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CSiteLicense_LCSAssociateUser_Response.Marshal(b, m, deterministic)
}
func (dst *CSiteLicense_LCSAssociateUser_Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CSiteLicense_LCSAssociateUser_Response.Merge(dst, src)
}
func (m *CSiteLicense_LCSAssociateUser_Response) XXX_Size() int {
	return xxx_messageInfo_CSiteLicense_LCSAssociateUser_Response.Size(m)
}
func (m *CSiteLicense_LCSAssociateUser_Response) XXX_DiscardUnknown() {
	xxx_messageInfo_CSiteLicense_LCSAssociateUser_Response.DiscardUnknown(m)
}

var xxx_messageInfo_CSiteLicense_LCSAssociateUser_Response proto.InternalMessageInfo

type CSiteLicense_ClientSeatCheckout_Request struct {
	Steamid              *uint64  `protobuf:"fixed64,1,opt,name=steamid" json:"steamid,omitempty"`
	Instanceid           *uint64  `protobuf:"fixed64,2,opt,name=instanceid" json:"instanceid,omitempty"`
	Appid                *uint32  `protobuf:"varint,3,opt,name=appid" json:"appid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CSiteLicense_ClientSeatCheckout_Request) Reset() {
	*m = CSiteLicense_ClientSeatCheckout_Request{}
}
func (m *CSiteLicense_ClientSeatCheckout_Request) String() string { return proto.CompactTextString(m) }
func (*CSiteLicense_ClientSeatCheckout_Request) ProtoMessage()    {}
func (*CSiteLicense_ClientSeatCheckout_Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_site_license_steamclient_91112f31349c65cd, []int{9}
}
func (m *CSiteLicense_ClientSeatCheckout_Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CSiteLicense_ClientSeatCheckout_Request.Unmarshal(m, b)
}
func (m *CSiteLicense_ClientSeatCheckout_Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CSiteLicense_ClientSeatCheckout_Request.Marshal(b, m, deterministic)
}
func (dst *CSiteLicense_ClientSeatCheckout_Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CSiteLicense_ClientSeatCheckout_Request.Merge(dst, src)
}
func (m *CSiteLicense_ClientSeatCheckout_Request) XXX_Size() int {
	return xxx_messageInfo_CSiteLicense_ClientSeatCheckout_Request.Size(m)
}
func (m *CSiteLicense_ClientSeatCheckout_Request) XXX_DiscardUnknown() {
	xxx_messageInfo_CSiteLicense_ClientSeatCheckout_Request.DiscardUnknown(m)
}

var xxx_messageInfo_CSiteLicense_ClientSeatCheckout_Request proto.InternalMessageInfo

func (m *CSiteLicense_ClientSeatCheckout_Request) GetSteamid() uint64 {
	if m != nil && m.Steamid != nil {
		return *m.Steamid
	}
	return 0
}

func (m *CSiteLicense_ClientSeatCheckout_Request) GetInstanceid() uint64 {
	if m != nil && m.Instanceid != nil {
		return *m.Instanceid
	}
	return 0
}

func (m *CSiteLicense_ClientSeatCheckout_Request) GetAppid() uint32 {
	if m != nil && m.Appid != nil {
		return *m.Appid
	}
	return 0
}

type CSiteLicense_ClientSeatCheckout_Response struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CSiteLicense_ClientSeatCheckout_Response) Reset() {
	*m = CSiteLicense_ClientSeatCheckout_Response{}
}
func (m *CSiteLicense_ClientSeatCheckout_Response) String() string { return proto.CompactTextString(m) }
func (*CSiteLicense_ClientSeatCheckout_Response) ProtoMessage()    {}
func (*CSiteLicense_ClientSeatCheckout_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_site_license_steamclient_91112f31349c65cd, []int{10}
}
func (m *CSiteLicense_ClientSeatCheckout_Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CSiteLicense_ClientSeatCheckout_Response.Unmarshal(m, b)
}
func (m *CSiteLicense_ClientSeatCheckout_Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CSiteLicense_ClientSeatCheckout_Response.Marshal(b, m, deterministic)
}
func (dst *CSiteLicense_ClientSeatCheckout_Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CSiteLicense_ClientSeatCheckout_Response.Merge(dst, src)
}
func (m *CSiteLicense_ClientSeatCheckout_Response) XXX_Size() int {
	return xxx_messageInfo_CSiteLicense_ClientSeatCheckout_Response.Size(m)
}
func (m *CSiteLicense_ClientSeatCheckout_Response) XXX_DiscardUnknown() {
	xxx_messageInfo_CSiteLicense_ClientSeatCheckout_Response.DiscardUnknown(m)
}

var xxx_messageInfo_CSiteLicense_ClientSeatCheckout_Response proto.InternalMessageInfo

type CSiteLicense_ClientGetAvailableSeats_Request struct {
	Steamid              *uint64  `protobuf:"fixed64,1,opt,name=steamid" json:"steamid,omitempty"`
	Instanceid           *uint64  `protobuf:"fixed64,2,opt,name=instanceid" json:"instanceid,omitempty"`
	Appid                *uint32  `protobuf:"varint,3,opt,name=appid" json:"appid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CSiteLicense_ClientGetAvailableSeats_Request) Reset() {
	*m = CSiteLicense_ClientGetAvailableSeats_Request{}
}
func (m *CSiteLicense_ClientGetAvailableSeats_Request) String() string {
	return proto.CompactTextString(m)
}
func (*CSiteLicense_ClientGetAvailableSeats_Request) ProtoMessage() {}
func (*CSiteLicense_ClientGetAvailableSeats_Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_site_license_steamclient_91112f31349c65cd, []int{11}
}
func (m *CSiteLicense_ClientGetAvailableSeats_Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CSiteLicense_ClientGetAvailableSeats_Request.Unmarshal(m, b)
}
func (m *CSiteLicense_ClientGetAvailableSeats_Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CSiteLicense_ClientGetAvailableSeats_Request.Marshal(b, m, deterministic)
}
func (dst *CSiteLicense_ClientGetAvailableSeats_Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CSiteLicense_ClientGetAvailableSeats_Request.Merge(dst, src)
}
func (m *CSiteLicense_ClientGetAvailableSeats_Request) XXX_Size() int {
	return xxx_messageInfo_CSiteLicense_ClientGetAvailableSeats_Request.Size(m)
}
func (m *CSiteLicense_ClientGetAvailableSeats_Request) XXX_DiscardUnknown() {
	xxx_messageInfo_CSiteLicense_ClientGetAvailableSeats_Request.DiscardUnknown(m)
}

var xxx_messageInfo_CSiteLicense_ClientGetAvailableSeats_Request proto.InternalMessageInfo

func (m *CSiteLicense_ClientGetAvailableSeats_Request) GetSteamid() uint64 {
	if m != nil && m.Steamid != nil {
		return *m.Steamid
	}
	return 0
}

func (m *CSiteLicense_ClientGetAvailableSeats_Request) GetInstanceid() uint64 {
	if m != nil && m.Instanceid != nil {
		return *m.Instanceid
	}
	return 0
}

func (m *CSiteLicense_ClientGetAvailableSeats_Request) GetAppid() uint32 {
	if m != nil && m.Appid != nil {
		return *m.Appid
	}
	return 0
}

type CSiteLicense_ClientGetAvailableSeats_Response struct {
	AvailableSeats       *uint32  `protobuf:"varint,1,opt,name=available_seats,json=availableSeats" json:"available_seats,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CSiteLicense_ClientGetAvailableSeats_Response) Reset() {
	*m = CSiteLicense_ClientGetAvailableSeats_Response{}
}
func (m *CSiteLicense_ClientGetAvailableSeats_Response) String() string {
	return proto.CompactTextString(m)
}
func (*CSiteLicense_ClientGetAvailableSeats_Response) ProtoMessage() {}
func (*CSiteLicense_ClientGetAvailableSeats_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_site_license_steamclient_91112f31349c65cd, []int{12}
}
func (m *CSiteLicense_ClientGetAvailableSeats_Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CSiteLicense_ClientGetAvailableSeats_Response.Unmarshal(m, b)
}
func (m *CSiteLicense_ClientGetAvailableSeats_Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CSiteLicense_ClientGetAvailableSeats_Response.Marshal(b, m, deterministic)
}
func (dst *CSiteLicense_ClientGetAvailableSeats_Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CSiteLicense_ClientGetAvailableSeats_Response.Merge(dst, src)
}
func (m *CSiteLicense_ClientGetAvailableSeats_Response) XXX_Size() int {
	return xxx_messageInfo_CSiteLicense_ClientGetAvailableSeats_Response.Size(m)
}
func (m *CSiteLicense_ClientGetAvailableSeats_Response) XXX_DiscardUnknown() {
	xxx_messageInfo_CSiteLicense_ClientGetAvailableSeats_Response.DiscardUnknown(m)
}

var xxx_messageInfo_CSiteLicense_ClientGetAvailableSeats_Response proto.InternalMessageInfo

func (m *CSiteLicense_ClientGetAvailableSeats_Response) GetAvailableSeats() uint32 {
	if m != nil && m.AvailableSeats != nil {
		return *m.AvailableSeats
	}
	return 0
}

func init() {
	proto.RegisterType((*CSiteManagerClient_IncomingClient_Request)(nil), "CSiteManagerClient_IncomingClient_Request")
	proto.RegisterType((*CSiteManagerClient_IncomingClient_Response)(nil), "CSiteManagerClient_IncomingClient_Response")
	proto.RegisterType((*CSiteLicense_ClientSeatCheckout_Notification)(nil), "CSiteLicense_ClientSeatCheckout_Notification")
	proto.RegisterType((*CSiteLicense_InitiateAssociation_Request)(nil), "CSiteLicense_InitiateAssociation_Request")
	proto.RegisterType((*CSiteLicense_InitiateAssociation_Response)(nil), "CSiteLicense_InitiateAssociation_Response")
	proto.RegisterType((*CSiteLicense_LCSAuthenticate_Request)(nil), "CSiteLicense_LCSAuthenticate_Request")
	proto.RegisterType((*CSiteLicense_LCSAuthenticate_Response)(nil), "CSiteLicense_LCSAuthenticate_Response")
	proto.RegisterType((*CSiteLicense_LCSAssociateUser_Request)(nil), "CSiteLicense_LCSAssociateUser_Request")
	proto.RegisterType((*CSiteLicense_LCSAssociateUser_Response)(nil), "CSiteLicense_LCSAssociateUser_Response")
	proto.RegisterType((*CSiteLicense_ClientSeatCheckout_Request)(nil), "CSiteLicense_ClientSeatCheckout_Request")
	proto.RegisterType((*CSiteLicense_ClientSeatCheckout_Response)(nil), "CSiteLicense_ClientSeatCheckout_Response")
	proto.RegisterType((*CSiteLicense_ClientGetAvailableSeats_Request)(nil), "CSiteLicense_ClientGetAvailableSeats_Request")
	proto.RegisterType((*CSiteLicense_ClientGetAvailableSeats_Response)(nil), "CSiteLicense_ClientGetAvailableSeats_Response")
}

func init() {
	proto.RegisterFile("steammessages_site_license.steamclient.proto", fileDescriptor_steammessages_site_license_steamclient_91112f31349c65cd)
}

var fileDescriptor_steammessages_site_license_steamclient_91112f31349c65cd = []byte{
	// 1000 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x56, 0xcf, 0x6f, 0x1b, 0x45,
	0x14, 0xd6, 0x26, 0x21, 0x49, 0x27, 0x8d, 0x53, 0x86, 0x4a, 0x5d, 0x16, 0xa9, 0x4c, 0x57, 0x4d,
	0xe2, 0x84, 0x64, 0xad, 0xa6, 0xfc, 0x3a, 0xf4, 0xd0, 0x10, 0x04, 0x8a, 0x1a, 0x22, 0xb4, 0x16,
	0x12, 0xe2, 0xc0, 0x6a, 0x3c, 0x7e, 0xb6, 0x47, 0x59, 0xcf, 0x98, 0x9d, 0xd9, 0x46, 0xbe, 0x20,
	0xe4, 0x43, 0xff, 0x01, 0xce, 0x94, 0x0b, 0x07, 0x6e, 0x9c, 0xf6, 0xc2, 0x89, 0x33, 0x77, 0xfe,
	0x1f, 0xb4, 0x33, 0x6b, 0x27, 0x6b, 0x6f, 0xc9, 0xe6, 0xc0, 0x71, 0xde, 0x7b, 0xfb, 0xde, 0xf7,
	0xbe, 0xf7, 0xde, 0x67, 0xa3, 0x03, 0xa5, 0x81, 0x0e, 0x87, 0xa0, 0x14, 0xed, 0x83, 0x8a, 0x14,
	0xd7, 0x10, 0xc5, 0x9c, 0x81, 0x50, 0x10, 0x18, 0x17, 0x8b, 0x39, 0x08, 0x1d, 0x8c, 0x12, 0xa9,
	0xa5, 0x37, 0x17, 0x9d, 0x0a, 0xde, 0xe3, 0xd0, 0x8d, 0x3a, 0xb4, 0x2a, 0xda, 0xff, 0xdb, 0x41,
	0x7b, 0x27, 0x6d, 0xae, 0xe1, 0x2b, 0x2a, 0x68, 0x1f, 0x92, 0x13, 0xe3, 0x8c, 0x4e, 0x05, 0x93,
	0x43, 0x2e, 0xfa, 0xc5, 0x33, 0x84, 0x1f, 0x52, 0x50, 0x1a, 0xef, 0xa2, 0x2d, 0x53, 0x9d, 0x0b,
	0xa5, 0xa9, 0x60, 0xc0, 0xbb, 0xae, 0x43, 0x9c, 0xe6, 0x6a, 0xd8, 0xc8, 0xcd, 0xa7, 0x33, 0x2b,
	0xde, 0x46, 0x0d, 0x5b, 0x26, 0x32, 0x25, 0x79, 0xd7, 0x5d, 0x32, 0x71, 0x9b, 0xd6, 0xda, 0xb6,
	0x46, 0xbc, 0x83, 0xb6, 0x8a, 0xb0, 0x58, 0x32, 0x1a, 0x47, 0x7c, 0xe4, 0x2e, 0x13, 0xa7, 0xb9,
	0x36, 0x8d, 0x3b, 0xcb, 0xad, 0xa7, 0x23, 0x93, 0x4e, 0x0a, 0x01, 0x4c, 0x73, 0x29, 0xa2, 0x0b,
	0x18, 0xbb, 0x2b, 0xc4, 0x69, 0xde, 0x0d, 0x37, 0xaf, 0xac, 0x2f, 0x60, 0xec, 0x1f, 0xa0, 0xfd,
	0x3a, 0xbd, 0xa8, 0x91, 0x14, 0x0a, 0xfc, 0xef, 0xd1, 0x81, 0x89, 0x3e, 0xb3, 0x54, 0x46, 0xd6,
	0xdf, 0x06, 0xaa, 0x4f, 0x06, 0xc0, 0x2e, 0x64, 0xaa, 0xa3, 0x73, 0xa9, 0x79, 0x8f, 0x33, 0x9a,
	0x17, 0xc0, 0xf7, 0xd1, 0x5b, 0x74, 0x34, 0x2a, 0x5a, 0xde, 0x0c, 0xed, 0x03, 0xbb, 0x68, 0x0d,
	0x12, 0x50, 0x69, 0xac, 0x4d, 0x8b, 0x9b, 0xe1, 0xf4, 0xe9, 0xbf, 0x76, 0x50, 0xb3, 0x54, 0xe0,
	0x54, 0x70, 0xcd, 0xa9, 0x86, 0x63, 0xa5, 0x24, 0xe3, 0x26, 0xe9, 0x8c, 0xd9, 0x47, 0xe8, 0xae,
	0x61, 0x76, 0x4a, 0x97, 0xa5, 0x75, 0x23, 0xb7, 0x4d, 0xc9, 0xaa, 0x20, 0x7f, 0xa9, 0x92, 0xfc,
	0x9a, 0xac, 0xfa, 0x61, 0x31, 0xfa, 0xff, 0xc6, 0x67, 0xd9, 0xaa, 0x18, 0x81, 0x53, 0x35, 0x82,
	0x2f, 0xd0, 0xe3, 0x52, 0xce, 0xb3, 0x93, 0xf6, 0x71, 0xaa, 0x07, 0x20, 0x74, 0x4e, 0x23, 0xcc,
	0xfa, 0x7d, 0x88, 0xd0, 0xc2, 0x12, 0x5d, 0xb3, 0xf8, 0xbf, 0x3b, 0x68, 0xfb, 0x86, 0x44, 0x05,
	0xb0, 0x07, 0x68, 0xcd, 0xd2, 0x62, 0xd3, 0xac, 0x84, 0xab, 0x86, 0x8e, 0x2e, 0x7e, 0x0f, 0xdd,
	0x31, 0x0e, 0x41, 0x87, 0x60, 0x98, 0xba, 0x13, 0xae, 0xe7, 0x86, 0x73, 0x3a, 0x04, 0xfc, 0x3e,
	0xda, 0x10, 0x70, 0x19, 0x29, 0x50, 0x8a, 0x4b, 0x61, 0xf8, 0x59, 0x0f, 0x91, 0x80, 0xcb, 0xb6,
	0xb5, 0xe0, 0x26, 0xba, 0x27, 0x64, 0xe9, 0xd6, 0x94, 0x59, 0xba, 0xf5, 0xb0, 0x21, 0xe4, 0x35,
	0x60, 0xca, 0xff, 0xb5, 0x0a, 0x6a, 0x41, 0x21, 0x7c, 0xa3, 0x20, 0x99, 0x35, 0xed, 0xa2, 0xb5,
	0xf2, 0x7c, 0xa7, 0x4f, 0xfc, 0x2e, 0x5a, 0x9f, 0xcd, 0x6a, 0xc9, 0xcc, 0x6a, 0x2d, 0x2e, 0x76,
	0xbf, 0xcc, 0xd4, 0xf2, 0x3c, 0x53, 0xf9, 0xe6, 0x0c, 0x29, 0x1b, 0x70, 0x51, 0x74, 0xba, 0x62,
	0x3a, 0xdd, 0x28, 0x6c, 0x79, 0xb3, 0x7e, 0x13, 0xed, 0xdc, 0x04, 0xb0, 0xb8, 0x89, 0x31, 0xda,
	0xbd, 0xe9, 0x26, 0x6e, 0x6e, 0xa6, 0x8c, 0x78, 0x69, 0x01, 0xf1, 0xec, 0x90, 0x96, 0xaf, 0x1d,
	0x92, 0xbf, 0x3f, 0x77, 0x2d, 0x95, 0xa5, 0x0b, 0x98, 0x3f, 0x56, 0x9e, 0xee, 0x97, 0xa0, 0x8f,
	0x5f, 0x52, 0x1e, 0xd3, 0x4e, 0x0c, 0xf9, 0x77, 0xea, 0x7f, 0xc3, 0xfa, 0x2d, 0x3a, 0xac, 0x59,
	0xbf, 0x58, 0xd2, 0x5d, 0xb4, 0x45, 0xa7, 0xae, 0x48, 0xe5, 0xbe, 0x42, 0x45, 0x1a, 0xb4, 0xf4,
	0xc5, 0xd1, 0xab, 0x65, 0xf4, 0xf6, 0x82, 0x84, 0xe1, 0x3f, 0x1c, 0xd4, 0x28, 0xcb, 0x18, 0xde,
	0x0f, 0x6a, 0xcb, 0xb6, 0xf7, 0x41, 0x70, 0x0b, 0x59, 0xfc, 0x7c, 0x92, 0xb9, 0xcf, 0x43, 0xca,
	0x2e, 0x08, 0x17, 0x3d, 0x99, 0xe4, 0x21, 0x24, 0x3f, 0x03, 0x32, 0xb4, 0x9f, 0x13, 0xd9, 0x23,
	0x02, 0x2e, 0x09, 0x17, 0x1d, 0x99, 0x8a, 0x2e, 0xb1, 0x9a, 0x42, 0xbe, 0x6e, 0xbf, 0x20, 0x57,
	0x52, 0x80, 0x7f, 0x76, 0xd0, 0xc3, 0xc5, 0x09, 0x96, 0xf4, 0xf4, 0x30, 0xb8, 0x8d, 0xfc, 0x7a,
	0x1b, 0xc1, 0xb9, 0x9c, 0x81, 0xfc, 0x68, 0x92, 0xb9, 0x4f, 0x8c, 0x7b, 0x3c, 0x05, 0xd0, 0xe5,
	0x09, 0x30, 0x1d, 0x8f, 0x09, 0xed, 0xc8, 0x54, 0x93, 0x9c, 0x64, 0xc2, 0x8a, 0x4c, 0xc4, 0x4a,
	0xb2, 0xb7, 0x37, 0xc9, 0xdc, 0x47, 0x46, 0xfe, 0xca, 0x2d, 0x15, 0x29, 0x14, 0x24, 0x2f, 0x39,
	0x83, 0xbf, 0x32, 0x77, 0xe9, 0xe8, 0x9f, 0x55, 0xb4, 0x71, 0x0d, 0x1e, 0xfe, 0xcd, 0x41, 0xef,
	0x54, 0x08, 0x24, 0xde, 0x0b, 0xea, 0x6a, 0xbc, 0xb7, 0x1f, 0xd4, 0x96, 0x5b, 0xff, 0xe3, 0x49,
	0xe6, 0x1e, 0x59, 0x4a, 0x08, 0x57, 0x24, 0xb1, 0x29, 0xf2, 0x59, 0x18, 0x92, 0xf3, 0x60, 0x33,
	0x1f, 0xd2, 0x93, 0x09, 0x89, 0x67, 0x1d, 0xe1, 0x57, 0x0e, 0xda, 0x9a, 0x93, 0x4a, 0xbc, 0x1d,
	0xd4, 0x91, 0x64, 0x6f, 0x27, 0xa8, 0x25, 0xb8, 0xfe, 0xe3, 0x49, 0xe6, 0x12, 0x4b, 0x22, 0xa3,
	0x3d, 0x30, 0xac, 0x41, 0x42, 0xe8, 0x55, 0x70, 0xce, 0xcb, 0x2f, 0x0e, 0xba, 0x37, 0xaf, 0x33,
	0xb8, 0xa2, 0x44, 0x95, 0x50, 0x7a, 0xbb, 0x41, 0x4d, 0xbd, 0xfa, 0x74, 0x92, 0xb9, 0x1f, 0x2e,
	0x62, 0xb9, 0xa4, 0x42, 0x2b, 0xa2, 0x25, 0xe9, 0x27, 0x54, 0x68, 0x92, 0xaa, 0x1c, 0x1f, 0x63,
	0xa0, 0x8c, 0xd1, 0x10, 0xf5, 0xda, 0x41, 0x78, 0x71, 0xe5, 0x70, 0x33, 0xa8, 0xa9, 0x7f, 0xde,
	0x5e, 0x50, 0x5b, 0xae, 0x9e, 0x4e, 0x32, 0xb7, 0x55, 0x39, 0xcc, 0x54, 0x41, 0x7e, 0x4f, 0xd4,
	0xae, 0x63, 0xf1, 0x43, 0x63, 0x76, 0x17, 0xff, 0xe9, 0xa0, 0x07, 0x6f, 0xd0, 0x95, 0xea, 0xd3,
	0x79, 0xa3, 0xfc, 0x79, 0x41, 0x70, 0x2b, 0xb5, 0xf2, 0x9f, 0x4f, 0x32, 0xf7, 0x59, 0x25, 0x5e,
	0x3d, 0x00, 0x22, 0xd2, 0x61, 0xc7, 0xca, 0x00, 0x4b, 0x93, 0x04, 0x84, 0xb9, 0xb9, 0x69, 0x26,
	0x83, 0x5d, 0x79, 0xee, 0x24, 0x73, 0xef, 0xe7, 0x35, 0xc9, 0xd9, 0xac, 0x27, 0x73, 0x5b, 0x9f,
	0x3d, 0xfb, 0xee, 0x93, 0x3e, 0xd7, 0x83, 0xb4, 0x13, 0x30, 0x39, 0x6c, 0x3d, 0x79, 0x7a, 0xd1,
	0xea, 0xcb, 0x43, 0xa3, 0xc6, 0x87, 0x09, 0x28, 0x99, 0x26, 0x0c, 0x54, 0xcb, 0xfc, 0x37, 0xed,
	0xa4, 0xbd, 0x96, 0x71, 0xb4, 0xec, 0x79, 0xfe, 0xe4, 0x38, 0xff, 0x06, 0x00, 0x00, 0xff, 0xff,
	0x1f, 0x14, 0xc0, 0x49, 0x0b, 0x0b, 0x00, 0x00,
}
