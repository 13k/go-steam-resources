// Code generated by protoc-gen-go. DO NOT EDIT.
// source: steammessages_gamenotifications.steamclient.proto

package client // import "github.com/13k/go-steam-resources/protobuf/steam/client"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type CGameNotifications_Variable struct {
	Key                  *string  `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Value                *string  `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CGameNotifications_Variable) Reset()         { *m = CGameNotifications_Variable{} }
func (m *CGameNotifications_Variable) String() string { return proto.CompactTextString(m) }
func (*CGameNotifications_Variable) ProtoMessage()    {}
func (*CGameNotifications_Variable) Descriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_gamenotifications_steamclient_747a1836df09607d, []int{0}
}
func (m *CGameNotifications_Variable) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CGameNotifications_Variable.Unmarshal(m, b)
}
func (m *CGameNotifications_Variable) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CGameNotifications_Variable.Marshal(b, m, deterministic)
}
func (dst *CGameNotifications_Variable) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CGameNotifications_Variable.Merge(dst, src)
}
func (m *CGameNotifications_Variable) XXX_Size() int {
	return xxx_messageInfo_CGameNotifications_Variable.Size(m)
}
func (m *CGameNotifications_Variable) XXX_DiscardUnknown() {
	xxx_messageInfo_CGameNotifications_Variable.DiscardUnknown(m)
}

var xxx_messageInfo_CGameNotifications_Variable proto.InternalMessageInfo

func (m *CGameNotifications_Variable) GetKey() string {
	if m != nil && m.Key != nil {
		return *m.Key
	}
	return ""
}

func (m *CGameNotifications_Variable) GetValue() string {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return ""
}

type CGameNotifications_LocalizedText struct {
	Token                *string                        `protobuf:"bytes,1,opt,name=token" json:"token,omitempty"`
	Variables            []*CGameNotifications_Variable `protobuf:"bytes,2,rep,name=variables" json:"variables,omitempty"`
	RenderedText         *string                        `protobuf:"bytes,3,opt,name=rendered_text,json=renderedText" json:"rendered_text,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *CGameNotifications_LocalizedText) Reset()         { *m = CGameNotifications_LocalizedText{} }
func (m *CGameNotifications_LocalizedText) String() string { return proto.CompactTextString(m) }
func (*CGameNotifications_LocalizedText) ProtoMessage()    {}
func (*CGameNotifications_LocalizedText) Descriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_gamenotifications_steamclient_747a1836df09607d, []int{1}
}
func (m *CGameNotifications_LocalizedText) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CGameNotifications_LocalizedText.Unmarshal(m, b)
}
func (m *CGameNotifications_LocalizedText) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CGameNotifications_LocalizedText.Marshal(b, m, deterministic)
}
func (dst *CGameNotifications_LocalizedText) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CGameNotifications_LocalizedText.Merge(dst, src)
}
func (m *CGameNotifications_LocalizedText) XXX_Size() int {
	return xxx_messageInfo_CGameNotifications_LocalizedText.Size(m)
}
func (m *CGameNotifications_LocalizedText) XXX_DiscardUnknown() {
	xxx_messageInfo_CGameNotifications_LocalizedText.DiscardUnknown(m)
}

var xxx_messageInfo_CGameNotifications_LocalizedText proto.InternalMessageInfo

func (m *CGameNotifications_LocalizedText) GetToken() string {
	if m != nil && m.Token != nil {
		return *m.Token
	}
	return ""
}

func (m *CGameNotifications_LocalizedText) GetVariables() []*CGameNotifications_Variable {
	if m != nil {
		return m.Variables
	}
	return nil
}

func (m *CGameNotifications_LocalizedText) GetRenderedText() string {
	if m != nil && m.RenderedText != nil {
		return *m.RenderedText
	}
	return ""
}

type CGameNotifications_UserStatus struct {
	Steamid              *uint64                           `protobuf:"fixed64,1,opt,name=steamid" json:"steamid,omitempty"`
	State                *string                           `protobuf:"bytes,2,opt,name=state" json:"state,omitempty"`
	Title                *CGameNotifications_LocalizedText `protobuf:"bytes,3,opt,name=title" json:"title,omitempty"`
	Message              *CGameNotifications_LocalizedText `protobuf:"bytes,4,opt,name=message" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                          `json:"-"`
	XXX_unrecognized     []byte                            `json:"-"`
	XXX_sizecache        int32                             `json:"-"`
}

func (m *CGameNotifications_UserStatus) Reset()         { *m = CGameNotifications_UserStatus{} }
func (m *CGameNotifications_UserStatus) String() string { return proto.CompactTextString(m) }
func (*CGameNotifications_UserStatus) ProtoMessage()    {}
func (*CGameNotifications_UserStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_gamenotifications_steamclient_747a1836df09607d, []int{2}
}
func (m *CGameNotifications_UserStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CGameNotifications_UserStatus.Unmarshal(m, b)
}
func (m *CGameNotifications_UserStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CGameNotifications_UserStatus.Marshal(b, m, deterministic)
}
func (dst *CGameNotifications_UserStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CGameNotifications_UserStatus.Merge(dst, src)
}
func (m *CGameNotifications_UserStatus) XXX_Size() int {
	return xxx_messageInfo_CGameNotifications_UserStatus.Size(m)
}
func (m *CGameNotifications_UserStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_CGameNotifications_UserStatus.DiscardUnknown(m)
}

var xxx_messageInfo_CGameNotifications_UserStatus proto.InternalMessageInfo

func (m *CGameNotifications_UserStatus) GetSteamid() uint64 {
	if m != nil && m.Steamid != nil {
		return *m.Steamid
	}
	return 0
}

func (m *CGameNotifications_UserStatus) GetState() string {
	if m != nil && m.State != nil {
		return *m.State
	}
	return ""
}

func (m *CGameNotifications_UserStatus) GetTitle() *CGameNotifications_LocalizedText {
	if m != nil {
		return m.Title
	}
	return nil
}

func (m *CGameNotifications_UserStatus) GetMessage() *CGameNotifications_LocalizedText {
	if m != nil {
		return m.Message
	}
	return nil
}

type CGameNotifications_CreateSession_Request struct {
	Appid                *uint32                           `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	Context              *uint64                           `protobuf:"varint,2,opt,name=context" json:"context,omitempty"`
	Title                *CGameNotifications_LocalizedText `protobuf:"bytes,3,opt,name=title" json:"title,omitempty"`
	Users                []*CGameNotifications_UserStatus  `protobuf:"bytes,4,rep,name=users" json:"users,omitempty"`
	Steamid              *uint64                           `protobuf:"fixed64,5,opt,name=steamid" json:"steamid,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                          `json:"-"`
	XXX_unrecognized     []byte                            `json:"-"`
	XXX_sizecache        int32                             `json:"-"`
}

func (m *CGameNotifications_CreateSession_Request) Reset() {
	*m = CGameNotifications_CreateSession_Request{}
}
func (m *CGameNotifications_CreateSession_Request) String() string { return proto.CompactTextString(m) }
func (*CGameNotifications_CreateSession_Request) ProtoMessage()    {}
func (*CGameNotifications_CreateSession_Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_gamenotifications_steamclient_747a1836df09607d, []int{3}
}
func (m *CGameNotifications_CreateSession_Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CGameNotifications_CreateSession_Request.Unmarshal(m, b)
}
func (m *CGameNotifications_CreateSession_Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CGameNotifications_CreateSession_Request.Marshal(b, m, deterministic)
}
func (dst *CGameNotifications_CreateSession_Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CGameNotifications_CreateSession_Request.Merge(dst, src)
}
func (m *CGameNotifications_CreateSession_Request) XXX_Size() int {
	return xxx_messageInfo_CGameNotifications_CreateSession_Request.Size(m)
}
func (m *CGameNotifications_CreateSession_Request) XXX_DiscardUnknown() {
	xxx_messageInfo_CGameNotifications_CreateSession_Request.DiscardUnknown(m)
}

var xxx_messageInfo_CGameNotifications_CreateSession_Request proto.InternalMessageInfo

func (m *CGameNotifications_CreateSession_Request) GetAppid() uint32 {
	if m != nil && m.Appid != nil {
		return *m.Appid
	}
	return 0
}

func (m *CGameNotifications_CreateSession_Request) GetContext() uint64 {
	if m != nil && m.Context != nil {
		return *m.Context
	}
	return 0
}

func (m *CGameNotifications_CreateSession_Request) GetTitle() *CGameNotifications_LocalizedText {
	if m != nil {
		return m.Title
	}
	return nil
}

func (m *CGameNotifications_CreateSession_Request) GetUsers() []*CGameNotifications_UserStatus {
	if m != nil {
		return m.Users
	}
	return nil
}

func (m *CGameNotifications_CreateSession_Request) GetSteamid() uint64 {
	if m != nil && m.Steamid != nil {
		return *m.Steamid
	}
	return 0
}

type CGameNotifications_CreateSession_Response struct {
	Sessionid            *uint64  `protobuf:"varint,1,opt,name=sessionid" json:"sessionid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CGameNotifications_CreateSession_Response) Reset() {
	*m = CGameNotifications_CreateSession_Response{}
}
func (m *CGameNotifications_CreateSession_Response) String() string { return proto.CompactTextString(m) }
func (*CGameNotifications_CreateSession_Response) ProtoMessage()    {}
func (*CGameNotifications_CreateSession_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_gamenotifications_steamclient_747a1836df09607d, []int{4}
}
func (m *CGameNotifications_CreateSession_Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CGameNotifications_CreateSession_Response.Unmarshal(m, b)
}
func (m *CGameNotifications_CreateSession_Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CGameNotifications_CreateSession_Response.Marshal(b, m, deterministic)
}
func (dst *CGameNotifications_CreateSession_Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CGameNotifications_CreateSession_Response.Merge(dst, src)
}
func (m *CGameNotifications_CreateSession_Response) XXX_Size() int {
	return xxx_messageInfo_CGameNotifications_CreateSession_Response.Size(m)
}
func (m *CGameNotifications_CreateSession_Response) XXX_DiscardUnknown() {
	xxx_messageInfo_CGameNotifications_CreateSession_Response.DiscardUnknown(m)
}

var xxx_messageInfo_CGameNotifications_CreateSession_Response proto.InternalMessageInfo

func (m *CGameNotifications_CreateSession_Response) GetSessionid() uint64 {
	if m != nil && m.Sessionid != nil {
		return *m.Sessionid
	}
	return 0
}

type CGameNotifications_DeleteSession_Request struct {
	Sessionid            *uint64  `protobuf:"varint,1,opt,name=sessionid" json:"sessionid,omitempty"`
	Appid                *uint32  `protobuf:"varint,2,opt,name=appid" json:"appid,omitempty"`
	Steamid              *uint64  `protobuf:"fixed64,3,opt,name=steamid" json:"steamid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CGameNotifications_DeleteSession_Request) Reset() {
	*m = CGameNotifications_DeleteSession_Request{}
}
func (m *CGameNotifications_DeleteSession_Request) String() string { return proto.CompactTextString(m) }
func (*CGameNotifications_DeleteSession_Request) ProtoMessage()    {}
func (*CGameNotifications_DeleteSession_Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_gamenotifications_steamclient_747a1836df09607d, []int{5}
}
func (m *CGameNotifications_DeleteSession_Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CGameNotifications_DeleteSession_Request.Unmarshal(m, b)
}
func (m *CGameNotifications_DeleteSession_Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CGameNotifications_DeleteSession_Request.Marshal(b, m, deterministic)
}
func (dst *CGameNotifications_DeleteSession_Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CGameNotifications_DeleteSession_Request.Merge(dst, src)
}
func (m *CGameNotifications_DeleteSession_Request) XXX_Size() int {
	return xxx_messageInfo_CGameNotifications_DeleteSession_Request.Size(m)
}
func (m *CGameNotifications_DeleteSession_Request) XXX_DiscardUnknown() {
	xxx_messageInfo_CGameNotifications_DeleteSession_Request.DiscardUnknown(m)
}

var xxx_messageInfo_CGameNotifications_DeleteSession_Request proto.InternalMessageInfo

func (m *CGameNotifications_DeleteSession_Request) GetSessionid() uint64 {
	if m != nil && m.Sessionid != nil {
		return *m.Sessionid
	}
	return 0
}

func (m *CGameNotifications_DeleteSession_Request) GetAppid() uint32 {
	if m != nil && m.Appid != nil {
		return *m.Appid
	}
	return 0
}

func (m *CGameNotifications_DeleteSession_Request) GetSteamid() uint64 {
	if m != nil && m.Steamid != nil {
		return *m.Steamid
	}
	return 0
}

type CGameNotifications_DeleteSession_Response struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CGameNotifications_DeleteSession_Response) Reset() {
	*m = CGameNotifications_DeleteSession_Response{}
}
func (m *CGameNotifications_DeleteSession_Response) String() string { return proto.CompactTextString(m) }
func (*CGameNotifications_DeleteSession_Response) ProtoMessage()    {}
func (*CGameNotifications_DeleteSession_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_gamenotifications_steamclient_747a1836df09607d, []int{6}
}
func (m *CGameNotifications_DeleteSession_Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CGameNotifications_DeleteSession_Response.Unmarshal(m, b)
}
func (m *CGameNotifications_DeleteSession_Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CGameNotifications_DeleteSession_Response.Marshal(b, m, deterministic)
}
func (dst *CGameNotifications_DeleteSession_Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CGameNotifications_DeleteSession_Response.Merge(dst, src)
}
func (m *CGameNotifications_DeleteSession_Response) XXX_Size() int {
	return xxx_messageInfo_CGameNotifications_DeleteSession_Response.Size(m)
}
func (m *CGameNotifications_DeleteSession_Response) XXX_DiscardUnknown() {
	xxx_messageInfo_CGameNotifications_DeleteSession_Response.DiscardUnknown(m)
}

var xxx_messageInfo_CGameNotifications_DeleteSession_Response proto.InternalMessageInfo

type CGameNotifications_UpdateSession_Request struct {
	Sessionid            *uint64                           `protobuf:"varint,1,opt,name=sessionid" json:"sessionid,omitempty"`
	Appid                *uint32                           `protobuf:"varint,2,opt,name=appid" json:"appid,omitempty"`
	Title                *CGameNotifications_LocalizedText `protobuf:"bytes,3,opt,name=title" json:"title,omitempty"`
	Users                []*CGameNotifications_UserStatus  `protobuf:"bytes,4,rep,name=users" json:"users,omitempty"`
	Steamid              *uint64                           `protobuf:"fixed64,6,opt,name=steamid" json:"steamid,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                          `json:"-"`
	XXX_unrecognized     []byte                            `json:"-"`
	XXX_sizecache        int32                             `json:"-"`
}

func (m *CGameNotifications_UpdateSession_Request) Reset() {
	*m = CGameNotifications_UpdateSession_Request{}
}
func (m *CGameNotifications_UpdateSession_Request) String() string { return proto.CompactTextString(m) }
func (*CGameNotifications_UpdateSession_Request) ProtoMessage()    {}
func (*CGameNotifications_UpdateSession_Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_gamenotifications_steamclient_747a1836df09607d, []int{7}
}
func (m *CGameNotifications_UpdateSession_Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CGameNotifications_UpdateSession_Request.Unmarshal(m, b)
}
func (m *CGameNotifications_UpdateSession_Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CGameNotifications_UpdateSession_Request.Marshal(b, m, deterministic)
}
func (dst *CGameNotifications_UpdateSession_Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CGameNotifications_UpdateSession_Request.Merge(dst, src)
}
func (m *CGameNotifications_UpdateSession_Request) XXX_Size() int {
	return xxx_messageInfo_CGameNotifications_UpdateSession_Request.Size(m)
}
func (m *CGameNotifications_UpdateSession_Request) XXX_DiscardUnknown() {
	xxx_messageInfo_CGameNotifications_UpdateSession_Request.DiscardUnknown(m)
}

var xxx_messageInfo_CGameNotifications_UpdateSession_Request proto.InternalMessageInfo

func (m *CGameNotifications_UpdateSession_Request) GetSessionid() uint64 {
	if m != nil && m.Sessionid != nil {
		return *m.Sessionid
	}
	return 0
}

func (m *CGameNotifications_UpdateSession_Request) GetAppid() uint32 {
	if m != nil && m.Appid != nil {
		return *m.Appid
	}
	return 0
}

func (m *CGameNotifications_UpdateSession_Request) GetTitle() *CGameNotifications_LocalizedText {
	if m != nil {
		return m.Title
	}
	return nil
}

func (m *CGameNotifications_UpdateSession_Request) GetUsers() []*CGameNotifications_UserStatus {
	if m != nil {
		return m.Users
	}
	return nil
}

func (m *CGameNotifications_UpdateSession_Request) GetSteamid() uint64 {
	if m != nil && m.Steamid != nil {
		return *m.Steamid
	}
	return 0
}

type CGameNotifications_UpdateSession_Response struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CGameNotifications_UpdateSession_Response) Reset() {
	*m = CGameNotifications_UpdateSession_Response{}
}
func (m *CGameNotifications_UpdateSession_Response) String() string { return proto.CompactTextString(m) }
func (*CGameNotifications_UpdateSession_Response) ProtoMessage()    {}
func (*CGameNotifications_UpdateSession_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_gamenotifications_steamclient_747a1836df09607d, []int{8}
}
func (m *CGameNotifications_UpdateSession_Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CGameNotifications_UpdateSession_Response.Unmarshal(m, b)
}
func (m *CGameNotifications_UpdateSession_Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CGameNotifications_UpdateSession_Response.Marshal(b, m, deterministic)
}
func (dst *CGameNotifications_UpdateSession_Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CGameNotifications_UpdateSession_Response.Merge(dst, src)
}
func (m *CGameNotifications_UpdateSession_Response) XXX_Size() int {
	return xxx_messageInfo_CGameNotifications_UpdateSession_Response.Size(m)
}
func (m *CGameNotifications_UpdateSession_Response) XXX_DiscardUnknown() {
	xxx_messageInfo_CGameNotifications_UpdateSession_Response.DiscardUnknown(m)
}

var xxx_messageInfo_CGameNotifications_UpdateSession_Response proto.InternalMessageInfo

type CGameNotifications_EnumerateSessions_Request struct {
	Appid                  *uint32  `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	IncludeAllUserMessages *bool    `protobuf:"varint,3,opt,name=include_all_user_messages,json=includeAllUserMessages" json:"include_all_user_messages,omitempty"`
	IncludeAuthUserMessage *bool    `protobuf:"varint,4,opt,name=include_auth_user_message,json=includeAuthUserMessage" json:"include_auth_user_message,omitempty"`
	Language               *string  `protobuf:"bytes,5,opt,name=language" json:"language,omitempty"`
	XXX_NoUnkeyedLiteral   struct{} `json:"-"`
	XXX_unrecognized       []byte   `json:"-"`
	XXX_sizecache          int32    `json:"-"`
}

func (m *CGameNotifications_EnumerateSessions_Request) Reset() {
	*m = CGameNotifications_EnumerateSessions_Request{}
}
func (m *CGameNotifications_EnumerateSessions_Request) String() string {
	return proto.CompactTextString(m)
}
func (*CGameNotifications_EnumerateSessions_Request) ProtoMessage() {}
func (*CGameNotifications_EnumerateSessions_Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_gamenotifications_steamclient_747a1836df09607d, []int{9}
}
func (m *CGameNotifications_EnumerateSessions_Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CGameNotifications_EnumerateSessions_Request.Unmarshal(m, b)
}
func (m *CGameNotifications_EnumerateSessions_Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CGameNotifications_EnumerateSessions_Request.Marshal(b, m, deterministic)
}
func (dst *CGameNotifications_EnumerateSessions_Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CGameNotifications_EnumerateSessions_Request.Merge(dst, src)
}
func (m *CGameNotifications_EnumerateSessions_Request) XXX_Size() int {
	return xxx_messageInfo_CGameNotifications_EnumerateSessions_Request.Size(m)
}
func (m *CGameNotifications_EnumerateSessions_Request) XXX_DiscardUnknown() {
	xxx_messageInfo_CGameNotifications_EnumerateSessions_Request.DiscardUnknown(m)
}

var xxx_messageInfo_CGameNotifications_EnumerateSessions_Request proto.InternalMessageInfo

func (m *CGameNotifications_EnumerateSessions_Request) GetAppid() uint32 {
	if m != nil && m.Appid != nil {
		return *m.Appid
	}
	return 0
}

func (m *CGameNotifications_EnumerateSessions_Request) GetIncludeAllUserMessages() bool {
	if m != nil && m.IncludeAllUserMessages != nil {
		return *m.IncludeAllUserMessages
	}
	return false
}

func (m *CGameNotifications_EnumerateSessions_Request) GetIncludeAuthUserMessage() bool {
	if m != nil && m.IncludeAuthUserMessage != nil {
		return *m.IncludeAuthUserMessage
	}
	return false
}

func (m *CGameNotifications_EnumerateSessions_Request) GetLanguage() string {
	if m != nil && m.Language != nil {
		return *m.Language
	}
	return ""
}

type CGameNotifications_Session struct {
	Sessionid            *uint64                           `protobuf:"varint,1,opt,name=sessionid" json:"sessionid,omitempty"`
	Appid                *uint64                           `protobuf:"varint,2,opt,name=appid" json:"appid,omitempty"`
	Context              *uint64                           `protobuf:"varint,3,opt,name=context" json:"context,omitempty"`
	Title                *CGameNotifications_LocalizedText `protobuf:"bytes,4,opt,name=title" json:"title,omitempty"`
	TimeCreated          *uint32                           `protobuf:"varint,5,opt,name=time_created,json=timeCreated" json:"time_created,omitempty"`
	TimeUpdated          *uint32                           `protobuf:"varint,6,opt,name=time_updated,json=timeUpdated" json:"time_updated,omitempty"`
	UserStatus           []*CGameNotifications_UserStatus  `protobuf:"bytes,7,rep,name=user_status,json=userStatus" json:"user_status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                          `json:"-"`
	XXX_unrecognized     []byte                            `json:"-"`
	XXX_sizecache        int32                             `json:"-"`
}

func (m *CGameNotifications_Session) Reset()         { *m = CGameNotifications_Session{} }
func (m *CGameNotifications_Session) String() string { return proto.CompactTextString(m) }
func (*CGameNotifications_Session) ProtoMessage()    {}
func (*CGameNotifications_Session) Descriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_gamenotifications_steamclient_747a1836df09607d, []int{10}
}
func (m *CGameNotifications_Session) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CGameNotifications_Session.Unmarshal(m, b)
}
func (m *CGameNotifications_Session) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CGameNotifications_Session.Marshal(b, m, deterministic)
}
func (dst *CGameNotifications_Session) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CGameNotifications_Session.Merge(dst, src)
}
func (m *CGameNotifications_Session) XXX_Size() int {
	return xxx_messageInfo_CGameNotifications_Session.Size(m)
}
func (m *CGameNotifications_Session) XXX_DiscardUnknown() {
	xxx_messageInfo_CGameNotifications_Session.DiscardUnknown(m)
}

var xxx_messageInfo_CGameNotifications_Session proto.InternalMessageInfo

func (m *CGameNotifications_Session) GetSessionid() uint64 {
	if m != nil && m.Sessionid != nil {
		return *m.Sessionid
	}
	return 0
}

func (m *CGameNotifications_Session) GetAppid() uint64 {
	if m != nil && m.Appid != nil {
		return *m.Appid
	}
	return 0
}

func (m *CGameNotifications_Session) GetContext() uint64 {
	if m != nil && m.Context != nil {
		return *m.Context
	}
	return 0
}

func (m *CGameNotifications_Session) GetTitle() *CGameNotifications_LocalizedText {
	if m != nil {
		return m.Title
	}
	return nil
}

func (m *CGameNotifications_Session) GetTimeCreated() uint32 {
	if m != nil && m.TimeCreated != nil {
		return *m.TimeCreated
	}
	return 0
}

func (m *CGameNotifications_Session) GetTimeUpdated() uint32 {
	if m != nil && m.TimeUpdated != nil {
		return *m.TimeUpdated
	}
	return 0
}

func (m *CGameNotifications_Session) GetUserStatus() []*CGameNotifications_UserStatus {
	if m != nil {
		return m.UserStatus
	}
	return nil
}

type CGameNotifications_EnumerateSessions_Response struct {
	Sessions             []*CGameNotifications_Session `protobuf:"bytes,1,rep,name=sessions" json:"sessions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *CGameNotifications_EnumerateSessions_Response) Reset() {
	*m = CGameNotifications_EnumerateSessions_Response{}
}
func (m *CGameNotifications_EnumerateSessions_Response) String() string {
	return proto.CompactTextString(m)
}
func (*CGameNotifications_EnumerateSessions_Response) ProtoMessage() {}
func (*CGameNotifications_EnumerateSessions_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_gamenotifications_steamclient_747a1836df09607d, []int{11}
}
func (m *CGameNotifications_EnumerateSessions_Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CGameNotifications_EnumerateSessions_Response.Unmarshal(m, b)
}
func (m *CGameNotifications_EnumerateSessions_Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CGameNotifications_EnumerateSessions_Response.Marshal(b, m, deterministic)
}
func (dst *CGameNotifications_EnumerateSessions_Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CGameNotifications_EnumerateSessions_Response.Merge(dst, src)
}
func (m *CGameNotifications_EnumerateSessions_Response) XXX_Size() int {
	return xxx_messageInfo_CGameNotifications_EnumerateSessions_Response.Size(m)
}
func (m *CGameNotifications_EnumerateSessions_Response) XXX_DiscardUnknown() {
	xxx_messageInfo_CGameNotifications_EnumerateSessions_Response.DiscardUnknown(m)
}

var xxx_messageInfo_CGameNotifications_EnumerateSessions_Response proto.InternalMessageInfo

func (m *CGameNotifications_EnumerateSessions_Response) GetSessions() []*CGameNotifications_Session {
	if m != nil {
		return m.Sessions
	}
	return nil
}

type CGameNotifications_GetSessionDetails_Request struct {
	Sessions             []*CGameNotifications_GetSessionDetails_Request_RequestedSession `protobuf:"bytes,1,rep,name=sessions" json:"sessions,omitempty"`
	Appid                *uint32                                                          `protobuf:"varint,2,opt,name=appid" json:"appid,omitempty"`
	Language             *string                                                          `protobuf:"bytes,3,opt,name=language" json:"language,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                         `json:"-"`
	XXX_unrecognized     []byte                                                           `json:"-"`
	XXX_sizecache        int32                                                            `json:"-"`
}

func (m *CGameNotifications_GetSessionDetails_Request) Reset() {
	*m = CGameNotifications_GetSessionDetails_Request{}
}
func (m *CGameNotifications_GetSessionDetails_Request) String() string {
	return proto.CompactTextString(m)
}
func (*CGameNotifications_GetSessionDetails_Request) ProtoMessage() {}
func (*CGameNotifications_GetSessionDetails_Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_gamenotifications_steamclient_747a1836df09607d, []int{12}
}
func (m *CGameNotifications_GetSessionDetails_Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CGameNotifications_GetSessionDetails_Request.Unmarshal(m, b)
}
func (m *CGameNotifications_GetSessionDetails_Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CGameNotifications_GetSessionDetails_Request.Marshal(b, m, deterministic)
}
func (dst *CGameNotifications_GetSessionDetails_Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CGameNotifications_GetSessionDetails_Request.Merge(dst, src)
}
func (m *CGameNotifications_GetSessionDetails_Request) XXX_Size() int {
	return xxx_messageInfo_CGameNotifications_GetSessionDetails_Request.Size(m)
}
func (m *CGameNotifications_GetSessionDetails_Request) XXX_DiscardUnknown() {
	xxx_messageInfo_CGameNotifications_GetSessionDetails_Request.DiscardUnknown(m)
}

var xxx_messageInfo_CGameNotifications_GetSessionDetails_Request proto.InternalMessageInfo

func (m *CGameNotifications_GetSessionDetails_Request) GetSessions() []*CGameNotifications_GetSessionDetails_Request_RequestedSession {
	if m != nil {
		return m.Sessions
	}
	return nil
}

func (m *CGameNotifications_GetSessionDetails_Request) GetAppid() uint32 {
	if m != nil && m.Appid != nil {
		return *m.Appid
	}
	return 0
}

func (m *CGameNotifications_GetSessionDetails_Request) GetLanguage() string {
	if m != nil && m.Language != nil {
		return *m.Language
	}
	return ""
}

type CGameNotifications_GetSessionDetails_Request_RequestedSession struct {
	Sessionid              *uint64  `protobuf:"varint,1,opt,name=sessionid" json:"sessionid,omitempty"`
	IncludeAuthUserMessage *bool    `protobuf:"varint,3,opt,name=include_auth_user_message,json=includeAuthUserMessage" json:"include_auth_user_message,omitempty"`
	XXX_NoUnkeyedLiteral   struct{} `json:"-"`
	XXX_unrecognized       []byte   `json:"-"`
	XXX_sizecache          int32    `json:"-"`
}

func (m *CGameNotifications_GetSessionDetails_Request_RequestedSession) Reset() {
	*m = CGameNotifications_GetSessionDetails_Request_RequestedSession{}
}
func (m *CGameNotifications_GetSessionDetails_Request_RequestedSession) String() string {
	return proto.CompactTextString(m)
}
func (*CGameNotifications_GetSessionDetails_Request_RequestedSession) ProtoMessage() {}
func (*CGameNotifications_GetSessionDetails_Request_RequestedSession) Descriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_gamenotifications_steamclient_747a1836df09607d, []int{12, 0}
}
func (m *CGameNotifications_GetSessionDetails_Request_RequestedSession) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CGameNotifications_GetSessionDetails_Request_RequestedSession.Unmarshal(m, b)
}
func (m *CGameNotifications_GetSessionDetails_Request_RequestedSession) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CGameNotifications_GetSessionDetails_Request_RequestedSession.Marshal(b, m, deterministic)
}
func (dst *CGameNotifications_GetSessionDetails_Request_RequestedSession) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CGameNotifications_GetSessionDetails_Request_RequestedSession.Merge(dst, src)
}
func (m *CGameNotifications_GetSessionDetails_Request_RequestedSession) XXX_Size() int {
	return xxx_messageInfo_CGameNotifications_GetSessionDetails_Request_RequestedSession.Size(m)
}
func (m *CGameNotifications_GetSessionDetails_Request_RequestedSession) XXX_DiscardUnknown() {
	xxx_messageInfo_CGameNotifications_GetSessionDetails_Request_RequestedSession.DiscardUnknown(m)
}

var xxx_messageInfo_CGameNotifications_GetSessionDetails_Request_RequestedSession proto.InternalMessageInfo

func (m *CGameNotifications_GetSessionDetails_Request_RequestedSession) GetSessionid() uint64 {
	if m != nil && m.Sessionid != nil {
		return *m.Sessionid
	}
	return 0
}

func (m *CGameNotifications_GetSessionDetails_Request_RequestedSession) GetIncludeAuthUserMessage() bool {
	if m != nil && m.IncludeAuthUserMessage != nil {
		return *m.IncludeAuthUserMessage
	}
	return false
}

type CGameNotifications_GetSessionDetails_Response struct {
	Sessions             []*CGameNotifications_Session `protobuf:"bytes,1,rep,name=sessions" json:"sessions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *CGameNotifications_GetSessionDetails_Response) Reset() {
	*m = CGameNotifications_GetSessionDetails_Response{}
}
func (m *CGameNotifications_GetSessionDetails_Response) String() string {
	return proto.CompactTextString(m)
}
func (*CGameNotifications_GetSessionDetails_Response) ProtoMessage() {}
func (*CGameNotifications_GetSessionDetails_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_gamenotifications_steamclient_747a1836df09607d, []int{13}
}
func (m *CGameNotifications_GetSessionDetails_Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CGameNotifications_GetSessionDetails_Response.Unmarshal(m, b)
}
func (m *CGameNotifications_GetSessionDetails_Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CGameNotifications_GetSessionDetails_Response.Marshal(b, m, deterministic)
}
func (dst *CGameNotifications_GetSessionDetails_Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CGameNotifications_GetSessionDetails_Response.Merge(dst, src)
}
func (m *CGameNotifications_GetSessionDetails_Response) XXX_Size() int {
	return xxx_messageInfo_CGameNotifications_GetSessionDetails_Response.Size(m)
}
func (m *CGameNotifications_GetSessionDetails_Response) XXX_DiscardUnknown() {
	xxx_messageInfo_CGameNotifications_GetSessionDetails_Response.DiscardUnknown(m)
}

var xxx_messageInfo_CGameNotifications_GetSessionDetails_Response proto.InternalMessageInfo

func (m *CGameNotifications_GetSessionDetails_Response) GetSessions() []*CGameNotifications_Session {
	if m != nil {
		return m.Sessions
	}
	return nil
}

type GameNotificationSettings struct {
	Appid                *uint32  `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	AllowNotifications   *bool    `protobuf:"varint,2,opt,name=allow_notifications,json=allowNotifications" json:"allow_notifications,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GameNotificationSettings) Reset()         { *m = GameNotificationSettings{} }
func (m *GameNotificationSettings) String() string { return proto.CompactTextString(m) }
func (*GameNotificationSettings) ProtoMessage()    {}
func (*GameNotificationSettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_gamenotifications_steamclient_747a1836df09607d, []int{14}
}
func (m *GameNotificationSettings) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GameNotificationSettings.Unmarshal(m, b)
}
func (m *GameNotificationSettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GameNotificationSettings.Marshal(b, m, deterministic)
}
func (dst *GameNotificationSettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GameNotificationSettings.Merge(dst, src)
}
func (m *GameNotificationSettings) XXX_Size() int {
	return xxx_messageInfo_GameNotificationSettings.Size(m)
}
func (m *GameNotificationSettings) XXX_DiscardUnknown() {
	xxx_messageInfo_GameNotificationSettings.DiscardUnknown(m)
}

var xxx_messageInfo_GameNotificationSettings proto.InternalMessageInfo

func (m *GameNotificationSettings) GetAppid() uint32 {
	if m != nil && m.Appid != nil {
		return *m.Appid
	}
	return 0
}

func (m *GameNotificationSettings) GetAllowNotifications() bool {
	if m != nil && m.AllowNotifications != nil {
		return *m.AllowNotifications
	}
	return false
}

type CGameNotifications_UpdateNotificationSettings_Request struct {
	GameNotificationSettings []*GameNotificationSettings `protobuf:"bytes,1,rep,name=game_notification_settings,json=gameNotificationSettings" json:"game_notification_settings,omitempty"`
	XXX_NoUnkeyedLiteral     struct{}                    `json:"-"`
	XXX_unrecognized         []byte                      `json:"-"`
	XXX_sizecache            int32                       `json:"-"`
}

func (m *CGameNotifications_UpdateNotificationSettings_Request) Reset() {
	*m = CGameNotifications_UpdateNotificationSettings_Request{}
}
func (m *CGameNotifications_UpdateNotificationSettings_Request) String() string {
	return proto.CompactTextString(m)
}
func (*CGameNotifications_UpdateNotificationSettings_Request) ProtoMessage() {}
func (*CGameNotifications_UpdateNotificationSettings_Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_gamenotifications_steamclient_747a1836df09607d, []int{15}
}
func (m *CGameNotifications_UpdateNotificationSettings_Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CGameNotifications_UpdateNotificationSettings_Request.Unmarshal(m, b)
}
func (m *CGameNotifications_UpdateNotificationSettings_Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CGameNotifications_UpdateNotificationSettings_Request.Marshal(b, m, deterministic)
}
func (dst *CGameNotifications_UpdateNotificationSettings_Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CGameNotifications_UpdateNotificationSettings_Request.Merge(dst, src)
}
func (m *CGameNotifications_UpdateNotificationSettings_Request) XXX_Size() int {
	return xxx_messageInfo_CGameNotifications_UpdateNotificationSettings_Request.Size(m)
}
func (m *CGameNotifications_UpdateNotificationSettings_Request) XXX_DiscardUnknown() {
	xxx_messageInfo_CGameNotifications_UpdateNotificationSettings_Request.DiscardUnknown(m)
}

var xxx_messageInfo_CGameNotifications_UpdateNotificationSettings_Request proto.InternalMessageInfo

func (m *CGameNotifications_UpdateNotificationSettings_Request) GetGameNotificationSettings() []*GameNotificationSettings {
	if m != nil {
		return m.GameNotificationSettings
	}
	return nil
}

type CGameNotifications_UpdateNotificationSettings_Response struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CGameNotifications_UpdateNotificationSettings_Response) Reset() {
	*m = CGameNotifications_UpdateNotificationSettings_Response{}
}
func (m *CGameNotifications_UpdateNotificationSettings_Response) String() string {
	return proto.CompactTextString(m)
}
func (*CGameNotifications_UpdateNotificationSettings_Response) ProtoMessage() {}
func (*CGameNotifications_UpdateNotificationSettings_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_gamenotifications_steamclient_747a1836df09607d, []int{16}
}
func (m *CGameNotifications_UpdateNotificationSettings_Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CGameNotifications_UpdateNotificationSettings_Response.Unmarshal(m, b)
}
func (m *CGameNotifications_UpdateNotificationSettings_Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CGameNotifications_UpdateNotificationSettings_Response.Marshal(b, m, deterministic)
}
func (dst *CGameNotifications_UpdateNotificationSettings_Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CGameNotifications_UpdateNotificationSettings_Response.Merge(dst, src)
}
func (m *CGameNotifications_UpdateNotificationSettings_Response) XXX_Size() int {
	return xxx_messageInfo_CGameNotifications_UpdateNotificationSettings_Response.Size(m)
}
func (m *CGameNotifications_UpdateNotificationSettings_Response) XXX_DiscardUnknown() {
	xxx_messageInfo_CGameNotifications_UpdateNotificationSettings_Response.DiscardUnknown(m)
}

var xxx_messageInfo_CGameNotifications_UpdateNotificationSettings_Response proto.InternalMessageInfo

type CGameNotifications_OnNotificationsRequested_Notification struct {
	Steamid              *uint64  `protobuf:"fixed64,1,opt,name=steamid" json:"steamid,omitempty"`
	Appid                *uint32  `protobuf:"varint,2,opt,name=appid" json:"appid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CGameNotifications_OnNotificationsRequested_Notification) Reset() {
	*m = CGameNotifications_OnNotificationsRequested_Notification{}
}
func (m *CGameNotifications_OnNotificationsRequested_Notification) String() string {
	return proto.CompactTextString(m)
}
func (*CGameNotifications_OnNotificationsRequested_Notification) ProtoMessage() {}
func (*CGameNotifications_OnNotificationsRequested_Notification) Descriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_gamenotifications_steamclient_747a1836df09607d, []int{17}
}
func (m *CGameNotifications_OnNotificationsRequested_Notification) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CGameNotifications_OnNotificationsRequested_Notification.Unmarshal(m, b)
}
func (m *CGameNotifications_OnNotificationsRequested_Notification) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CGameNotifications_OnNotificationsRequested_Notification.Marshal(b, m, deterministic)
}
func (dst *CGameNotifications_OnNotificationsRequested_Notification) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CGameNotifications_OnNotificationsRequested_Notification.Merge(dst, src)
}
func (m *CGameNotifications_OnNotificationsRequested_Notification) XXX_Size() int {
	return xxx_messageInfo_CGameNotifications_OnNotificationsRequested_Notification.Size(m)
}
func (m *CGameNotifications_OnNotificationsRequested_Notification) XXX_DiscardUnknown() {
	xxx_messageInfo_CGameNotifications_OnNotificationsRequested_Notification.DiscardUnknown(m)
}

var xxx_messageInfo_CGameNotifications_OnNotificationsRequested_Notification proto.InternalMessageInfo

func (m *CGameNotifications_OnNotificationsRequested_Notification) GetSteamid() uint64 {
	if m != nil && m.Steamid != nil {
		return *m.Steamid
	}
	return 0
}

func (m *CGameNotifications_OnNotificationsRequested_Notification) GetAppid() uint32 {
	if m != nil && m.Appid != nil {
		return *m.Appid
	}
	return 0
}

type CGameNotifications_OnUserStatusChanged_Notification struct {
	Steamid              *uint64                        `protobuf:"fixed64,1,opt,name=steamid" json:"steamid,omitempty"`
	Sessionid            *uint64                        `protobuf:"varint,2,opt,name=sessionid" json:"sessionid,omitempty"`
	Appid                *uint32                        `protobuf:"varint,3,opt,name=appid" json:"appid,omitempty"`
	Status               *CGameNotifications_UserStatus `protobuf:"bytes,4,opt,name=status" json:"status,omitempty"`
	Removed              *bool                          `protobuf:"varint,5,opt,name=removed" json:"removed,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *CGameNotifications_OnUserStatusChanged_Notification) Reset() {
	*m = CGameNotifications_OnUserStatusChanged_Notification{}
}
func (m *CGameNotifications_OnUserStatusChanged_Notification) String() string {
	return proto.CompactTextString(m)
}
func (*CGameNotifications_OnUserStatusChanged_Notification) ProtoMessage() {}
func (*CGameNotifications_OnUserStatusChanged_Notification) Descriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_gamenotifications_steamclient_747a1836df09607d, []int{18}
}
func (m *CGameNotifications_OnUserStatusChanged_Notification) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CGameNotifications_OnUserStatusChanged_Notification.Unmarshal(m, b)
}
func (m *CGameNotifications_OnUserStatusChanged_Notification) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CGameNotifications_OnUserStatusChanged_Notification.Marshal(b, m, deterministic)
}
func (dst *CGameNotifications_OnUserStatusChanged_Notification) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CGameNotifications_OnUserStatusChanged_Notification.Merge(dst, src)
}
func (m *CGameNotifications_OnUserStatusChanged_Notification) XXX_Size() int {
	return xxx_messageInfo_CGameNotifications_OnUserStatusChanged_Notification.Size(m)
}
func (m *CGameNotifications_OnUserStatusChanged_Notification) XXX_DiscardUnknown() {
	xxx_messageInfo_CGameNotifications_OnUserStatusChanged_Notification.DiscardUnknown(m)
}

var xxx_messageInfo_CGameNotifications_OnUserStatusChanged_Notification proto.InternalMessageInfo

func (m *CGameNotifications_OnUserStatusChanged_Notification) GetSteamid() uint64 {
	if m != nil && m.Steamid != nil {
		return *m.Steamid
	}
	return 0
}

func (m *CGameNotifications_OnUserStatusChanged_Notification) GetSessionid() uint64 {
	if m != nil && m.Sessionid != nil {
		return *m.Sessionid
	}
	return 0
}

func (m *CGameNotifications_OnUserStatusChanged_Notification) GetAppid() uint32 {
	if m != nil && m.Appid != nil {
		return *m.Appid
	}
	return 0
}

func (m *CGameNotifications_OnUserStatusChanged_Notification) GetStatus() *CGameNotifications_UserStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *CGameNotifications_OnUserStatusChanged_Notification) GetRemoved() bool {
	if m != nil && m.Removed != nil {
		return *m.Removed
	}
	return false
}

func init() {
	proto.RegisterType((*CGameNotifications_Variable)(nil), "CGameNotifications_Variable")
	proto.RegisterType((*CGameNotifications_LocalizedText)(nil), "CGameNotifications_LocalizedText")
	proto.RegisterType((*CGameNotifications_UserStatus)(nil), "CGameNotifications_UserStatus")
	proto.RegisterType((*CGameNotifications_CreateSession_Request)(nil), "CGameNotifications_CreateSession_Request")
	proto.RegisterType((*CGameNotifications_CreateSession_Response)(nil), "CGameNotifications_CreateSession_Response")
	proto.RegisterType((*CGameNotifications_DeleteSession_Request)(nil), "CGameNotifications_DeleteSession_Request")
	proto.RegisterType((*CGameNotifications_DeleteSession_Response)(nil), "CGameNotifications_DeleteSession_Response")
	proto.RegisterType((*CGameNotifications_UpdateSession_Request)(nil), "CGameNotifications_UpdateSession_Request")
	proto.RegisterType((*CGameNotifications_UpdateSession_Response)(nil), "CGameNotifications_UpdateSession_Response")
	proto.RegisterType((*CGameNotifications_EnumerateSessions_Request)(nil), "CGameNotifications_EnumerateSessions_Request")
	proto.RegisterType((*CGameNotifications_Session)(nil), "CGameNotifications_Session")
	proto.RegisterType((*CGameNotifications_EnumerateSessions_Response)(nil), "CGameNotifications_EnumerateSessions_Response")
	proto.RegisterType((*CGameNotifications_GetSessionDetails_Request)(nil), "CGameNotifications_GetSessionDetails_Request")
	proto.RegisterType((*CGameNotifications_GetSessionDetails_Request_RequestedSession)(nil), "CGameNotifications_GetSessionDetails_Request.RequestedSession")
	proto.RegisterType((*CGameNotifications_GetSessionDetails_Response)(nil), "CGameNotifications_GetSessionDetails_Response")
	proto.RegisterType((*GameNotificationSettings)(nil), "GameNotificationSettings")
	proto.RegisterType((*CGameNotifications_UpdateNotificationSettings_Request)(nil), "CGameNotifications_UpdateNotificationSettings_Request")
	proto.RegisterType((*CGameNotifications_UpdateNotificationSettings_Response)(nil), "CGameNotifications_UpdateNotificationSettings_Response")
	proto.RegisterType((*CGameNotifications_OnNotificationsRequested_Notification)(nil), "CGameNotifications_OnNotificationsRequested_Notification")
	proto.RegisterType((*CGameNotifications_OnUserStatusChanged_Notification)(nil), "CGameNotifications_OnUserStatusChanged_Notification")
}

func init() {
	proto.RegisterFile("steammessages_gamenotifications.steamclient.proto", fileDescriptor_steammessages_gamenotifications_steamclient_747a1836df09607d)
}

var fileDescriptor_steammessages_gamenotifications_steamclient_747a1836df09607d = []byte{
	// 2435 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x59, 0xcb, 0x8f, 0x1c, 0x47,
	0x19, 0x57, 0xef, 0x23, 0x5e, 0x97, 0x63, 0x09, 0x77, 0x10, 0x54, 0xc6, 0x8e, 0x53, 0x9e, 0xe0,
	0xd8, 0x8e, 0x77, 0x7a, 0xf1, 0x3a, 0x76, 0xe2, 0x88, 0x44, 0xda, 0x59, 0x47, 0x4b, 0x24, 0x3f,
	0xc2, 0xd8, 0xc1, 0x91, 0x41, 0x19, 0xd5, 0x74, 0x7f, 0x33, 0x53, 0xd9, 0x9e, 0xee, 0xa1, 0xab,
	0x7a, 0xc7, 0xcb, 0x09, 0x35, 0x42, 0xbc, 0x12, 0x81, 0x84, 0x11, 0x41, 0x48, 0xbe, 0x91, 0x4b,
	0xb8, 0x20, 0xd4, 0x27, 0x2e, 0x48, 0x5c, 0xb9, 0x92, 0x2b, 0x07, 0x24, 0x0e, 0x88, 0x3f, 0x02,
	0xd5, 0xa3, 0x5f, 0x33, 0x3d, 0xf6, 0xce, 0x5a, 0xe2, 0x71, 0x59, 0x69, 0xa7, 0xea, 0xfb, 0xea,
	0xf7, 0xbd, 0x7e, 0xdf, 0x57, 0xd5, 0xe8, 0x12, 0x17, 0x40, 0x47, 0x23, 0xe0, 0x9c, 0x0e, 0x80,
	0x77, 0x07, 0x74, 0x04, 0x41, 0x28, 0x58, 0x9f, 0xb9, 0x54, 0xb0, 0x30, 0xe0, 0x8e, 0x5a, 0x77,
	0x7d, 0x06, 0x81, 0x70, 0xc6, 0x51, 0x28, 0xc2, 0xc6, 0x7a, 0x55, 0x24, 0x0e, 0x58, 0x9f, 0x81,
	0xd7, 0xed, 0x51, 0x0e, 0xb3, 0xbb, 0x9b, 0xff, 0x5a, 0x42, 0x27, 0xb7, 0x77, 0xe8, 0x08, 0x6e,
	0x95, 0xd5, 0x76, 0xbf, 0x49, 0x23, 0x46, 0x7b, 0x3e, 0xd8, 0x9f, 0x59, 0x68, 0x79, 0x17, 0xf6,
	0xb1, 0x45, 0xac, 0xf3, 0x47, 0xdb, 0x9f, 0x58, 0x49, 0x8a, 0x7f, 0x61, 0xdd, 0x1d, 0x02, 0x09,
	0xe8, 0x08, 0x48, 0xd8, 0x27, 0x62, 0x08, 0x64, 0xcf, 0xec, 0x26, 0x2c, 0x50, 0xff, 0xfb, 0xa1,
	0x4b, 0x7d, 0xf6, 0x5d, 0xf0, 0x88, 0x80, 0x07, 0x82, 0xb4, 0x5a, 0x84, 0x06, 0xfb, 0x93, 0x21,
	0x44, 0x40, 0xc4, 0x90, 0x0a, 0x72, 0x36, 0x13, 0x90, 0x4a, 0xce, 0x12, 0xc6, 0x49, 0x3f, 0x8c,
	0x03, 0x8f, 0x4c, 0x98, 0x18, 0x1a, 0x15, 0x4a, 0x90, 0x09, 0x32, 0x61, 0xbe, 0x4f, 0x7a, 0x40,
	0x78, 0xdc, 0xe3, 0x82, 0x89, 0xd8, 0x03, 0xbd, 0x4d, 0x6d, 0x1a, 0xb0, 0x3d, 0x08, 0xc8, 0x1e,
	0xf5, 0x63, 0xe8, 0x48, 0x94, 0xf6, 0x23, 0x0b, 0xad, 0xaa, 0x7f, 0xf1, 0x92, 0xc2, 0xfb, 0x43,
	0x89, 0x37, 0x51, 0x78, 0xd5, 0xcf, 0x33, 0x80, 0x45, 0x98, 0x6b, 0x16, 0xf3, 0xe0, 0xb3, 0x80,
	0x8c, 0x7d, 0xea, 0xe6, 0xc2, 0xd9, 0xa9, 0x5a, 0x85, 0x43, 0xc8, 0x36, 0x0d, 0x08, 0x13, 0x1c,
	0xfc, 0xbe, 0x44, 0x4a, 0x33, 0x79, 0xe5, 0x4a, 0x22, 0xc2, 0x5d, 0x08, 0x9c, 0x8e, 0x86, 0xd5,
	0xfc, 0xed, 0x32, 0x22, 0x35, 0xee, 0xbe, 0x91, 0x9d, 0x78, 0x17, 0x1e, 0x08, 0xfb, 0x36, 0x5a,
	0x55, 0x52, 0xc6, 0xe9, 0xd7, 0x92, 0x14, 0x5f, 0xd9, 0xaa, 0xd1, 0xaa, 0x9d, 0x39, 0xa2, 0x63,
	0x2e, 0xed, 0x90, 0xd0, 0x3c, 0xe0, 0x2c, 0x02, 0x8f, 0x70, 0x11, 0xb1, 0x60, 0xe0, 0x74, 0xb4,
	0x1e, 0xfb, 0x13, 0x0b, 0x1d, 0xcd, 0xf0, 0x72, 0xbc, 0x44, 0x96, 0xcf, 0x1f, 0xdb, 0x3c, 0xe5,
	0x3c, 0x26, 0xec, 0xed, 0x6f, 0x27, 0x29, 0x7e, 0x7f, 0x8b, 0xf8, 0x8c, 0x0b, 0x69, 0x76, 0x2e,
	0xac, 0xdd, 0xc8, 0x67, 0xfd, 0x46, 0x83, 0xfd, 0xd2, 0x2e, 0x1d, 0xce, 0x19, 0x77, 0x66, 0xb0,
	0x0a, 0x30, 0xf6, 0x43, 0x0b, 0x1d, 0x8f, 0x20, 0xf0, 0x20, 0x02, 0xaf, 0x2b, 0xdd, 0x8d, 0x97,
	0x95, 0xd1, 0x61, 0x92, 0xe2, 0x5d, 0xe9, 0x0d, 0x92, 0xad, 0x66, 0xea, 0x22, 0xf8, 0x4e, 0x0c,
	0x5c, 0x80, 0x47, 0x7c, 0x1a, 0x0c, 0x62, 0x3a, 0x80, 0x75, 0xe2, 0x86, 0xa3, 0xb1, 0x0f, 0x02,
	0x74, 0x6a, 0xe4, 0xd1, 0xcd, 0x21, 0x4a, 0xe3, 0xd6, 0x09, 0xeb, 0xcb, 0xe0, 0x18, 0x21, 0x32,
	0xa1, 0x9c, 0xf0, 0x31, 0xb8, 0xaa, 0x3c, 0x9c, 0xce, 0xb3, 0xd9, 0x39, 0xf2, 0xd0, 0x66, 0xba,
	0x82, 0x5e, 0xa8, 0xf1, 0xcf, 0x7b, 0x1c, 0xa2, 0x3b, 0x82, 0x8a, 0x98, 0xdb, 0x6f, 0xa0, 0x23,
	0xaa, 0x9a, 0x98, 0xa7, 0xc2, 0xf4, 0x4c, 0x9b, 0x24, 0x29, 0x3e, 0x25, 0x33, 0xcd, 0x28, 0x75,
	0x49, 0xcc, 0x21, 0x3a, 0xc7, 0x89, 0xd9, 0xe6, 0x74, 0x32, 0x01, 0x59, 0x54, 0xab, 0x5c, 0x50,
	0x91, 0xa5, 0xe9, 0x43, 0x99, 0xa6, 0x3f, 0x53, 0x69, 0x9a, 0xcb, 0x50, 0x21, 0x53, 0x2b, 0x02,
	0xea, 0xed, 0xcb, 0x02, 0x12, 0x66, 0x4d, 0x16, 0x8b, 0xfe, 0x51, 0x84, 0x32, 0x2d, 0xf7, 0x1d,
	0x42, 0x26, 0x94, 0x09, 0x16, 0x0c, 0xe4, 0x36, 0xa9, 0x42, 0x92, 0x84, 0xdc, 0x96, 0xfd, 0x1c,
	0xca, 0xe8, 0x10, 0xea, 0xaa, 0xc4, 0xe9, 0x47, 0xe1, 0x28, 0x57, 0xe6, 0xe4, 0x8e, 0xf3, 0xd6,
	0x75, 0x6a, 0x1b, 0xd1, 0x70, 0x0f, 0x22, 0xa7, 0xa3, 0x31, 0xda, 0x3f, 0xb5, 0xd0, 0xaa, 0x60,
	0xc2, 0x07, 0x15, 0x9a, 0x63, 0x9b, 0x67, 0x9c, 0x27, 0x65, 0x70, 0xbb, 0x93, 0xa4, 0xf8, 0xd6,
	0x5d, 0x29, 0x93, 0x15, 0x0d, 0x07, 0xce, 0x75, 0xe2, 0x12, 0x8f, 0x71, 0x09, 0x5c, 0xe7, 0x2c,
	0xe3, 0xc6, 0x2c, 0x15, 0x5c, 0x16, 0xe5, 0x29, 0x27, 0xf1, 0xee, 0xe5, 0x72, 0x5c, 0xe6, 0xb2,
	0xd4, 0x67, 0xff, 0xc6, 0x42, 0x47, 0x0c, 0xb9, 0xe1, 0x95, 0x83, 0xe2, 0xf9, 0x20, 0x49, 0xf1,
	0xfd, 0x3b, 0x71, 0x4f, 0x2c, 0x02, 0x49, 0xfd, 0x29, 0x28, 0xe9, 0x71, 0xd8, 0x32, 0x44, 0xcd,
	0x3f, 0xae, 0xa2, 0xf3, 0x35, 0x68, 0xb6, 0x23, 0xa0, 0x02, 0xee, 0xe8, 0xfd, 0xdd, 0x8e, 0xce,
	0x60, 0xfb, 0x2d, 0xb4, 0x4a, 0xc7, 0x63, 0x93, 0x40, 0xc7, 0xdb, 0xe7, 0x93, 0x14, 0x7f, 0x45,
	0x06, 0x50, 0xfd, 0x28, 0xb1, 0xb8, 0x4a, 0xac, 0x02, 0xb6, 0x1f, 0xca, 0xc0, 0xa8, 0x1d, 0xf6,
	0x8f, 0x2c, 0x74, 0xc4, 0x0d, 0x03, 0x55, 0x35, 0x32, 0x91, 0x56, 0xda, 0x41, 0x92, 0xe2, 0x0f,
	0xe5, 0xf1, 0xad, 0x3c, 0xb3, 0x89, 0xd9, 0x61, 0x08, 0x30, 0x8f, 0xb2, 0x4b, 0x03, 0x69, 0xa1,
	0x3a, 0x87, 0x72, 0x1e, 0xba, 0x6c, 0xfa, 0x28, 0x55, 0x4b, 0x3c, 0x94, 0x34, 0xdf, 0xfb, 0x10,
	0x5c, 0x21, 0x13, 0x49, 0xfb, 0xa1, 0x47, 0xdd, 0x5d, 0x08, 0x64, 0x46, 0x1b, 0xe5, 0xf6, 0x4f,
	0x16, 0xcf, 0x91, 0x6f, 0x24, 0x29, 0xbe, 0x29, 0xcd, 0x9d, 0x17, 0x94, 0x1e, 0x64, 0x71, 0x81,
	0xbc, 0x35, 0x00, 0x75, 0x87, 0x59, 0x8d, 0x64, 0xd1, 0x98, 0x49, 0x91, 0x21, 0x5a, 0x95, 0x5b,
	0x38, 0x5e, 0x51, 0x4c, 0x77, 0xda, 0x79, 0x6c, 0x25, 0xb7, 0x37, 0x93, 0x14, 0x3b, 0x12, 0x08,
	0x0b, 0x98, 0x60, 0xd4, 0xd7, 0xc5, 0xa7, 0xe2, 0xec, 0xfb, 0xea, 0x30, 0x9e, 0x71, 0x8f, 0x39,
	0xca, 0xe9, 0xe8, 0x03, 0xec, 0xbf, 0x58, 0x05, 0x0b, 0xac, 0x2a, 0x16, 0xf8, 0xbd, 0x2c, 0xe5,
	0xdf, 0x59, 0xe7, 0x6f, 0x8f, 0xe5, 0x39, 0xd4, 0xbf, 0x90, 0x95, 0xbf, 0xb4, 0x68, 0x44, 0x77,
	0xa1, 0xcc, 0x61, 0xd2, 0xa3, 0x3d, 0x18, 0x52, 0xbf, 0x2f, 0x4f, 0x6b, 0xb5, 0x24, 0x43, 0xe5,
	0x81, 0x5b, 0x2f, 0x6a, 0x7e, 0x14, 0x73, 0x21, 0xdd, 0x51, 0x45, 0x41, 0x68, 0xe0, 0x95, 0x20,
	0xf6, 0x40, 0x16, 0x3b, 0xf5, 0x3c, 0x1d, 0xd3, 0xf2, 0xc6, 0x4c, 0xbe, 0x1f, 0x31, 0x08, 0x3c,
	0x5e, 0x34, 0x50, 0x45, 0x02, 0x39, 0x2f, 0x35, 0x05, 0xba, 0x70, 0x80, 0xe4, 0xe5, 0xe3, 0x30,
	0xe0, 0x60, 0xef, 0xa0, 0xa3, 0x46, 0xbf, 0xc9, 0xe0, 0x95, 0xf6, 0x85, 0x24, 0xc5, 0x67, 0xef,
	0x16, 0x07, 0x33, 0x2f, 0x0b, 0xab, 0xce, 0x64, 0xaf, 0x70, 0x60, 0x21, 0xdb, 0xfc, 0x6c, 0xa9,
	0xb6, 0x66, 0xae, 0x83, 0x24, 0xa6, 0xe9, 0x9a, 0x79, 0x63, 0xf6, 0xd4, 0x53, 0x49, 0x8a, 0x71,
	0xf5, 0x54, 0x59, 0xd2, 0x4a, 0xbc, 0x7c, 0x90, 0xfd, 0x66, 0x56, 0x6f, 0x4b, 0xaa, 0xde, 0xce,
	0x25, 0x29, 0x7e, 0xa9, 0xa8, 0xb7, 0x1a, 0x56, 0x30, 0x2a, 0x4c, 0xb9, 0x7d, 0xbf, 0x14, 0xec,
	0x65, 0x15, 0x6c, 0x96, 0xa4, 0x18, 0xfe, 0x13, 0xa1, 0x2e, 0xc5, 0xe8, 0x62, 0x6d, 0x8c, 0xa6,
	0x9d, 0xa5, 0x63, 0xd4, 0xfc, 0x47, 0x3d, 0x1d, 0xbd, 0x37, 0xf6, 0xe8, 0x53, 0xb8, 0x36, 0x56,
	0xe2, 0x4f, 0xe5, 0xda, 0x4c, 0x85, 0x71, 0xed, 0xaf, 0x16, 0xa7, 0x0f, 0x45, 0xe9, 0x25, 0xdf,
	0xab, 0x99, 0x14, 0x26, 0xb5, 0x6c, 0xe2, 0x10, 0xf2, 0x4e, 0x9f, 0x04, 0xa1, 0x98, 0x76, 0xb9,
	0xde, 0xac, 0x66, 0x4c, 0xb9, 0xda, 0x03, 0xe2, 0x0e, 0x69, 0x30, 0x90, 0xf3, 0x80, 0xe1, 0x92,
	0xbf, 0x5a, 0x8b, 0x91, 0xc9, 0x23, 0x59, 0xff, 0xbf, 0x2e, 0xd7, 0x7f, 0x31, 0x45, 0xe9, 0x3a,
	0x9d, 0x0c, 0x43, 0x0e, 0x86, 0x63, 0xb2, 0xe9, 0x56, 0xbb, 0x43, 0x39, 0x37, 0x82, 0xbe, 0x2f,
	0xc9, 0xb6, 0x98, 0x34, 0xcd, 0x2c, 0xf0, 0x4e, 0x3f, 0xcf, 0x12, 0x4e, 0x68, 0x04, 0x0a, 0x31,
	0xf5, 0xf5, 0x30, 0x50, 0x4d, 0x17, 0x65, 0xdc, 0x7e, 0xae, 0x3d, 0xe7, 0x04, 0x26, 0x6a, 0x99,
	0xeb, 0x99, 0xff, 0x7f, 0xe6, 0xaa, 0xaf, 0x8a, 0xe9, 0x3c, 0x37, 0x55, 0xf1, 0xf7, 0x15, 0xb4,
	0x5e, 0xb3, 0xfb, 0xed, 0x20, 0x1e, 0x41, 0x54, 0x08, 0xf0, 0xbc, 0x32, 0x7e, 0x60, 0x55, 0x3b,
	0xb5, 0x1e, 0x4e, 0xa7, 0xcb, 0x22, 0x73, 0x8d, 0x07, 0x82, 0x32, 0x9f, 0xab, 0x56, 0x4d, 0x32,
	0x6f, 0x3a, 0x35, 0x19, 0x28, 0x3d, 0x20, 0x4a, 0x33, 0x9f, 0x39, 0x36, 0x8f, 0x5b, 0x04, 0x22,
	0x8e, 0x02, 0x95, 0x8c, 0xba, 0x4c, 0x3e, 0xb5, 0xd0, 0xf3, 0x2c, 0x70, 0xfd, 0xd8, 0x83, 0x2e,
	0xf5, 0xfd, 0xae, 0x14, 0xec, 0x66, 0x37, 0x3d, 0x55, 0x3a, 0x6b, 0xed, 0xdd, 0x24, 0xc5, 0x83,
	0x52, 0x10, 0xdb, 0x61, 0xe8, 0x03, 0x0d, 0x24, 0x2a, 0x88, 0x46, 0x2c, 0x90, 0xae, 0x9e, 0x0c,
	0x41, 0x0c, 0x21, 0x52, 0x87, 0x1b, 0x71, 0x89, 0xb6, 0x14, 0x12, 0x3e, 0x0c, 0x63, 0xdf, 0xd3,
	0x91, 0x53, 0xe7, 0x79, 0x0e, 0xb9, 0x0e, 0x7d, 0x1a, 0xfb, 0x42, 0x0d, 0xff, 0x7d, 0xea, 0x73,
	0x70, 0x3a, 0x5f, 0x32, 0xab, 0x5b, 0xbe, 0x2f, 0x6b, 0xe0, 0xa6, 0x81, 0x62, 0xff, 0xa1, 0x0c,
	0x34, 0x16, 0xc3, 0x0a, 0x52, 0x35, 0xb6, 0xad, 0xb5, 0x1f, 0x24, 0x29, 0x16, 0x87, 0x04, 0x2a,
	0xff, 0x97, 0x7a, 0x21, 0x10, 0x32, 0x7c, 0xe0, 0xe9, 0x6c, 0x5b, 0x14, 0x75, 0x2c, 0x86, 0x25,
	0xd8, 0xf6, 0x0d, 0xb4, 0x96, 0xdd, 0x0e, 0x54, 0x37, 0x3f, 0xda, 0xfe, 0x6a, 0x92, 0xe2, 0xf5,
	0x12, 0xc6, 0x1b, 0xd9, 0xe5, 0x41, 0x84, 0xf9, 0xb5, 0xa6, 0x74, 0x5d, 0x0d, 0x9c, 0x4e, 0xae,
	0xa1, 0xf9, 0xd1, 0x2a, 0x6a, 0xd4, 0x64, 0x99, 0x49, 0x2e, 0x7b, 0x6b, 0x96, 0x6d, 0x5f, 0x4a,
	0x52, 0xfc, 0x62, 0x35, 0xad, 0xb4, 0xb1, 0x8c, 0xd7, 0x35, 0x4e, 0xfb, 0xd5, 0x32, 0xe9, 0xae,
	0xb4, 0x4f, 0x27, 0x29, 0x6e, 0x14, 0xa4, 0x9b, 0xf9, 0xa9, 0x98, 0x59, 0x66, 0xa7, 0xc6, 0xe5,
	0xff, 0xee, 0xd4, 0xd8, 0xcd, 0x58, 0xff, 0xc0, 0x83, 0xfc, 0xcb, 0x49, 0x8a, 0x9b, 0xd2, 0x46,
	0x37, 0x8e, 0x22, 0x08, 0x84, 0x61, 0xf0, 0x59, 0x5b, 0x35, 0x7b, 0x7f, 0x1d, 0x3d, 0x2b, 0xd8,
	0x08, 0xba, 0x66, 0xfc, 0x50, 0x51, 0x3d, 0xde, 0x3e, 0x9b, 0xa4, 0xf8, 0x8c, 0x9e, 0x3c, 0x47,
	0x53, 0xe0, 0x29, 0xcf, 0x46, 0x15, 0xa7, 0x73, 0x4c, 0x2e, 0xeb, 0xe1, 0xc7, 0xb3, 0x6f, 0x1a,
	0x4d, 0x86, 0xa9, 0x15, 0x67, 0x1e, 0x6f, 0xbf, 0x92, 0xa4, 0xf8, 0x65, 0xa9, 0xc9, 0xa7, 0x5c,
	0xd4, 0xab, 0x33, 0x02, 0x46, 0x9d, 0x66, 0x24, 0xcf, 0x1e, 0xa3, 0x63, 0xaa, 0x24, 0xb8, 0xea,
	0x1a, 0xf8, 0xc8, 0x81, 0x7a, 0xcb, 0x46, 0x92, 0xe2, 0x8b, 0x2a, 0x3f, 0xd4, 0xff, 0xd9, 0x84,
	0x5a, 0x74, 0x85, 0xe9, 0xa1, 0x01, 0xc5, 0xb9, 0x70, 0xf3, 0x23, 0x0b, 0xb5, 0x0e, 0x48, 0x7a,
	0x66, 0xc0, 0xfb, 0x16, 0x5a, 0xcb, 0x28, 0x09, 0x5b, 0x0a, 0xe0, 0x49, 0x67, 0x7e, 0x42, 0xb7,
	0x9b, 0x49, 0x8a, 0x4f, 0x17, 0xcd, 0xae, 0x86, 0xd8, 0x9c, 0x4e, 0xae, 0xb0, 0xf9, 0xb0, 0x9e,
	0x83, 0x77, 0x40, 0x18, 0x7d, 0xd7, 0x35, 0x8b, 0xe6, 0x1c, 0x7c, 0x7f, 0x06, 0xcd, 0x5b, 0xce,
	0x22, 0x0a, 0x9c, 0x4e, 0xf6, 0x6e, 0x60, 0xd6, 0x0b, 0x30, 0xf6, 0x95, 0xea, 0xf4, 0xf2, 0x62,
	0x92, 0xe2, 0x93, 0x73, 0x0b, 0x89, 0xe7, 0x95, 0xb4, 0x55, 0xe2, 0x0b, 0xfd, 0x6a, 0xa1, 0x32,
	0x6b, 0x01, 0x92, 0x68, 0x7c, 0xbc, 0x84, 0xbe, 0x30, 0x0d, 0xcc, 0xde, 0x9e, 0xa5, 0x86, 0x3c,
	0x65, 0x2b, 0x1d, 0x67, 0x00, 0xd5, 0x6e, 0x53, 0x26, 0x87, 0xc7, 0x53, 0xf0, 0xf2, 0xff, 0x26,
	0x05, 0x37, 0x7f, 0x5c, 0x9f, 0xa5, 0x75, 0x51, 0x35, 0x59, 0xfa, 0xfe, 0x62, 0x59, 0x9a, 0xc7,
	0x36, 0xf3, 0xdb, 0xd4, 0xa4, 0x58, 0x4a, 0xd1, 0x3f, 0x5b, 0x08, 0x4f, 0x2b, 0xba, 0x03, 0x42,
	0xb0, 0x60, 0xc0, 0x9f, 0xfa, 0xee, 0x3e, 0x40, 0xcf, 0x51, 0xdf, 0x0f, 0x27, 0xdd, 0xca, 0x73,
	0xae, 0x4a, 0xc0, 0xb5, 0xf6, 0xd5, 0x24, 0xc5, 0x9b, 0xf7, 0x4a, 0x8e, 0x57, 0xae, 0x55, 0xfb,
	0x39, 0x29, 0x0b, 0x14, 0xfd, 0x81, 0x8e, 0xc7, 0x4e, 0xc7, 0x56, 0x5b, 0x2a, 0x86, 0x37, 0x7f,
	0x6e, 0xa1, 0x2b, 0x73, 0x47, 0xa3, 0x3a, 0xd3, 0xf2, 0x8a, 0xbb, 0x87, 0x1a, 0x92, 0xf3, 0x2b,
	0x08, 0xbb, 0xdc, 0xec, 0x32, 0xbe, 0x7e, 0xde, 0x99, 0xe7, 0xa1, 0x0e, 0x1e, 0xcc, 0x59, 0x69,
	0xbe, 0x8e, 0xae, 0x2e, 0x8a, 0xc8, 0x4c, 0x6e, 0x9f, 0x5b, 0xe8, 0xf5, 0x1a, 0xd1, 0xdb, 0x41,
	0xe5, 0xff, 0xbc, 0xa0, 0xba, 0xe5, 0x9f, 0xed, 0x7b, 0xd3, 0x2f, 0x76, 0x6f, 0x26, 0x29, 0xbe,
	0x96, 0x0d, 0xb9, 0x25, 0xca, 0x92, 0x23, 0x7a, 0xc5, 0xcd, 0x9c, 0x4c, 0x20, 0x2a, 0xbf, 0x3c,
	0xaa, 0x48, 0xe6, 0xcf, 0x79, 0x5b, 0x55, 0xfa, 0xb8, 0x98, 0xa4, 0xf8, 0x5c, 0x29, 0x17, 0x86,
	0x54, 0x94, 0x44, 0xab, 0xcf, 0xf7, 0x26, 0x1d, 0x9a, 0xff, 0x5c, 0x46, 0x97, 0x6b, 0x0d, 0x2b,
	0xe8, 0x7f, 0x5b, 0xdf, 0x4c, 0xaa, 0x36, 0xed, 0x4c, 0xdb, 0xd4, 0x4a, 0x52, 0x7c, 0x61, 0x8e,
	0x4d, 0x3c, 0xef, 0x1c, 0xf9, 0x2d, 0x27, 0xb7, 0xc1, 0x2d, 0x73, 0x8e, 0x9e, 0x27, 0xde, 0x4e,
	0x52, 0xbc, 0x55, 0x7b, 0x9b, 0xcf, 0xfb, 0x9b, 0x79, 0xd2, 0xaf, 0x3c, 0x5b, 0xc6, 0x5c, 0xb7,
	0xd1, 0xec, 0x88, 0x12, 0x27, 0xdd, 0xc9, 0x1c, 0xb5, 0xac, 0x1c, 0xa5, 0xfc, 0x3f, 0xf7, 0x96,
	0x38, 0x4f, 0x79, 0x71, 0x43, 0xd3, 0x95, 0xf4, 0x01, 0x7a, 0xc6, 0x74, 0x51, 0x3d, 0x45, 0x3c,
	0xa9, 0x8b, 0xaa, 0x11, 0xa2, 0x44, 0x7a, 0xb7, 0x60, 0x52, 0x6a, 0xa8, 0xc5, 0xdd, 0xc2, 0x68,
	0xb5, 0xdf, 0x45, 0x47, 0x22, 0x18, 0x85, 0x7b, 0x66, 0x7c, 0x30, 0xd5, 0x59, 0x52, 0x20, 0x75,
	0x93, 0x21, 0x95, 0xf7, 0x18, 0x08, 0x88, 0xd9, 0x5b, 0x3c, 0xb4, 0x16, 0x57, 0x78, 0xb3, 0xb4,
	0xf9, 0xe9, 0x1a, 0x3a, 0x31, 0x03, 0xd1, 0xfe, 0xd8, 0x42, 0x27, 0xa4, 0xaa, 0xca, 0x73, 0x8b,
	0x7d, 0xc1, 0x39, 0xe8, 0x73, 0x62, 0xe3, 0x15, 0xe7, 0xc0, 0x8f, 0x37, 0xcd, 0x33, 0x49, 0x8a,
	0x5f, 0xd0, 0x6b, 0x5c, 0xbd, 0x0e, 0xf3, 0xfd, 0xc0, 0xd5, 0x23, 0x9e, 0xc1, 0x9b, 0xe3, 0xa9,
	0x3c, 0x2d, 0xd4, 0xe3, 0xa9, 0x7d, 0xaa, 0xa9, 0xc7, 0x33, 0xe7, 0xa1, 0x42, 0xe1, 0xd1, 0x6b,
	0x4f, 0xc2, 0x53, 0xb9, 0xd4, 0xd5, 0xe3, 0xa9, 0x7d, 0xdf, 0xa8, 0xc7, 0x33, 0xe7, 0x8a, 0xa8,
	0xf0, 0xe8, 0xb5, 0x79, 0x78, 0x1e, 0x5a, 0xe8, 0xc4, 0xcc, 0xf4, 0x64, 0xb7, 0x9c, 0x45, 0x6e,
	0x96, 0x0d, 0xc7, 0x59, 0x68, 0x26, 0x6b, 0xaa, 0x8f, 0x0c, 0xf9, 0x3a, 0x27, 0x74, 0x7a, 0xc6,
	0xb2, 0x1f, 0x59, 0xe8, 0xc4, 0x4c, 0xbb, 0xac, 0x87, 0x35, 0x77, 0x56, 0xaa, 0x87, 0x35, 0xbf,
	0x09, 0x37, 0xd5, 0x1c, 0xbc, 0x03, 0xc2, 0x7c, 0x84, 0xca, 0x27, 0x12, 0x42, 0x8b, 0xaf, 0x21,
	0x99, 0xdf, 0x3e, 0xb7, 0x50, 0x63, 0x3e, 0xd7, 0xdb, 0x57, 0x9d, 0x43, 0x75, 0xab, 0xc6, 0x6b,
	0xce, 0x21, 0x7b, 0xca, 0x4e, 0x92, 0xe2, 0xed, 0x2c, 0xd4, 0xd9, 0xb4, 0x43, 0x2b, 0x2d, 0x57,
	0xc5, 0xbd, 0xda, 0x10, 0xa6, 0x8c, 0xa3, 0xe3, 0x71, 0xe3, 0xdd, 0x24, 0xc5, 0x37, 0xb6, 0x08,
	0x87, 0x68, 0x8f, 0xb9, 0x7a, 0x48, 0xea, 0xc7, 0x81, 0xab, 0xf7, 0x47, 0xe0, 0x67, 0x2f, 0x3c,
	0x6a, 0x72, 0x92, 0xf9, 0x14, 0x85, 0x41, 0x18, 0xd7, 0x68, 0x57, 0x2a, 0x20, 0x72, 0x36, 0xff,
	0xb6, 0x84, 0xbe, 0x3c, 0x63, 0xd4, 0xb6, 0xfa, 0x7c, 0x6b, 0xff, 0xd2, 0x42, 0x78, 0x5e, 0xdf,
	0xb3, 0xaf, 0x39, 0x87, 0xed, 0x92, 0x8d, 0x63, 0xce, 0xad, 0x30, 0xf7, 0xcd, 0xa5, 0x24, 0xc5,
	0x2d, 0xb3, 0x91, 0xeb, 0x4e, 0x96, 0x37, 0x94, 0x70, 0x2c, 0x87, 0x59, 0x31, 0xd5, 0x29, 0x65,
	0x99, 0x3e, 0x57, 0xd3, 0xb6, 0xec, 0x57, 0x9d, 0x43, 0xf4, 0xb7, 0x2a, 0x9a, 0xcb, 0x49, 0x8a,
	0x37, 0xca, 0xcb, 0x55, 0x44, 0x45, 0x8b, 0x18, 0x16, 0xfd, 0xa7, 0x71, 0x2a, 0x49, 0xf1, 0x17,
	0xb5, 0xcf, 0xaa, 0x48, 0xff, 0x94, 0xe2, 0xa5, 0xf6, 0xd7, 0xee, 0xbf, 0x36, 0x60, 0x62, 0x18,
	0xf7, 0x1c, 0x37, 0x1c, 0x6d, 0x5c, 0xba, 0xbc, 0xbb, 0x31, 0x08, 0x5b, 0xaa, 0x27, 0xb6, 0x22,
	0xe0, 0x61, 0x1c, 0xb9, 0xc0, 0x37, 0xd4, 0x97, 0xf2, 0x5e, 0xdc, 0xdf, 0x50, 0x0b, 0x1b, 0xfa,
	0xfb, 0xf9, 0xf7, 0x2c, 0xeb, 0xdf, 0x01, 0x00, 0x00, 0xff, 0xff, 0x64, 0x3e, 0x51, 0xb2, 0x9e,
	0x1f, 0x00, 0x00,
}
