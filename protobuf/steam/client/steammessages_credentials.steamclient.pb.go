// Code generated by protoc-gen-go. DO NOT EDIT.
// source: steammessages_credentials.steamclient.proto

package client // import "github.com/13k/go-steam-resources/protobuf/steam/client"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type CCredentials_TestAvailablePassword_Request struct {
	Password             *string  `protobuf:"bytes,1,opt,name=password" json:"password,omitempty"`
	ShaDigestPassword    []byte   `protobuf:"bytes,2,opt,name=sha_digest_password,json=shaDigestPassword" json:"sha_digest_password,omitempty"`
	AccountName          *string  `protobuf:"bytes,3,opt,name=account_name,json=accountName" json:"account_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CCredentials_TestAvailablePassword_Request) Reset() {
	*m = CCredentials_TestAvailablePassword_Request{}
}
func (m *CCredentials_TestAvailablePassword_Request) String() string {
	return proto.CompactTextString(m)
}
func (*CCredentials_TestAvailablePassword_Request) ProtoMessage() {}
func (*CCredentials_TestAvailablePassword_Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_credentials_steamclient_40181b9c7cad4797, []int{0}
}
func (m *CCredentials_TestAvailablePassword_Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CCredentials_TestAvailablePassword_Request.Unmarshal(m, b)
}
func (m *CCredentials_TestAvailablePassword_Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CCredentials_TestAvailablePassword_Request.Marshal(b, m, deterministic)
}
func (dst *CCredentials_TestAvailablePassword_Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CCredentials_TestAvailablePassword_Request.Merge(dst, src)
}
func (m *CCredentials_TestAvailablePassword_Request) XXX_Size() int {
	return xxx_messageInfo_CCredentials_TestAvailablePassword_Request.Size(m)
}
func (m *CCredentials_TestAvailablePassword_Request) XXX_DiscardUnknown() {
	xxx_messageInfo_CCredentials_TestAvailablePassword_Request.DiscardUnknown(m)
}

var xxx_messageInfo_CCredentials_TestAvailablePassword_Request proto.InternalMessageInfo

func (m *CCredentials_TestAvailablePassword_Request) GetPassword() string {
	if m != nil && m.Password != nil {
		return *m.Password
	}
	return ""
}

func (m *CCredentials_TestAvailablePassword_Request) GetShaDigestPassword() []byte {
	if m != nil {
		return m.ShaDigestPassword
	}
	return nil
}

func (m *CCredentials_TestAvailablePassword_Request) GetAccountName() string {
	if m != nil && m.AccountName != nil {
		return *m.AccountName
	}
	return ""
}

type CCredentials_TestAvailablePassword_Response struct {
	IsValid              *bool    `protobuf:"varint,3,opt,name=is_valid,json=isValid" json:"is_valid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CCredentials_TestAvailablePassword_Response) Reset() {
	*m = CCredentials_TestAvailablePassword_Response{}
}
func (m *CCredentials_TestAvailablePassword_Response) String() string {
	return proto.CompactTextString(m)
}
func (*CCredentials_TestAvailablePassword_Response) ProtoMessage() {}
func (*CCredentials_TestAvailablePassword_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_credentials_steamclient_40181b9c7cad4797, []int{1}
}
func (m *CCredentials_TestAvailablePassword_Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CCredentials_TestAvailablePassword_Response.Unmarshal(m, b)
}
func (m *CCredentials_TestAvailablePassword_Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CCredentials_TestAvailablePassword_Response.Marshal(b, m, deterministic)
}
func (dst *CCredentials_TestAvailablePassword_Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CCredentials_TestAvailablePassword_Response.Merge(dst, src)
}
func (m *CCredentials_TestAvailablePassword_Response) XXX_Size() int {
	return xxx_messageInfo_CCredentials_TestAvailablePassword_Response.Size(m)
}
func (m *CCredentials_TestAvailablePassword_Response) XXX_DiscardUnknown() {
	xxx_messageInfo_CCredentials_TestAvailablePassword_Response.DiscardUnknown(m)
}

var xxx_messageInfo_CCredentials_TestAvailablePassword_Response proto.InternalMessageInfo

func (m *CCredentials_TestAvailablePassword_Response) GetIsValid() bool {
	if m != nil && m.IsValid != nil {
		return *m.IsValid
	}
	return false
}

type CCredentials_GetSteamGuardDetails_Request struct {
	IncludeNewAuthentications *bool    `protobuf:"varint,1,opt,name=include_new_authentications,json=includeNewAuthentications,def=1" json:"include_new_authentications,omitempty"`
	Webcookie                 *string  `protobuf:"bytes,2,opt,name=webcookie" json:"webcookie,omitempty"`
	TimestampMinimumWanted    *uint32  `protobuf:"fixed32,3,opt,name=timestamp_minimum_wanted,json=timestampMinimumWanted" json:"timestamp_minimum_wanted,omitempty"`
	Ipaddress                 *int32   `protobuf:"varint,4,opt,name=ipaddress" json:"ipaddress,omitempty"`
	XXX_NoUnkeyedLiteral      struct{} `json:"-"`
	XXX_unrecognized          []byte   `json:"-"`
	XXX_sizecache             int32    `json:"-"`
}

func (m *CCredentials_GetSteamGuardDetails_Request) Reset() {
	*m = CCredentials_GetSteamGuardDetails_Request{}
}
func (m *CCredentials_GetSteamGuardDetails_Request) String() string { return proto.CompactTextString(m) }
func (*CCredentials_GetSteamGuardDetails_Request) ProtoMessage()    {}
func (*CCredentials_GetSteamGuardDetails_Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_credentials_steamclient_40181b9c7cad4797, []int{2}
}
func (m *CCredentials_GetSteamGuardDetails_Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CCredentials_GetSteamGuardDetails_Request.Unmarshal(m, b)
}
func (m *CCredentials_GetSteamGuardDetails_Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CCredentials_GetSteamGuardDetails_Request.Marshal(b, m, deterministic)
}
func (dst *CCredentials_GetSteamGuardDetails_Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CCredentials_GetSteamGuardDetails_Request.Merge(dst, src)
}
func (m *CCredentials_GetSteamGuardDetails_Request) XXX_Size() int {
	return xxx_messageInfo_CCredentials_GetSteamGuardDetails_Request.Size(m)
}
func (m *CCredentials_GetSteamGuardDetails_Request) XXX_DiscardUnknown() {
	xxx_messageInfo_CCredentials_GetSteamGuardDetails_Request.DiscardUnknown(m)
}

var xxx_messageInfo_CCredentials_GetSteamGuardDetails_Request proto.InternalMessageInfo

const Default_CCredentials_GetSteamGuardDetails_Request_IncludeNewAuthentications bool = true

func (m *CCredentials_GetSteamGuardDetails_Request) GetIncludeNewAuthentications() bool {
	if m != nil && m.IncludeNewAuthentications != nil {
		return *m.IncludeNewAuthentications
	}
	return Default_CCredentials_GetSteamGuardDetails_Request_IncludeNewAuthentications
}

func (m *CCredentials_GetSteamGuardDetails_Request) GetWebcookie() string {
	if m != nil && m.Webcookie != nil {
		return *m.Webcookie
	}
	return ""
}

func (m *CCredentials_GetSteamGuardDetails_Request) GetTimestampMinimumWanted() uint32 {
	if m != nil && m.TimestampMinimumWanted != nil {
		return *m.TimestampMinimumWanted
	}
	return 0
}

func (m *CCredentials_GetSteamGuardDetails_Request) GetIpaddress() int32 {
	if m != nil && m.Ipaddress != nil {
		return *m.Ipaddress
	}
	return 0
}

type CCredentials_GetSteamGuardDetails_Response struct {
	IsSteamguardEnabled                                   *bool                                                           `protobuf:"varint,1,opt,name=is_steamguard_enabled,json=isSteamguardEnabled" json:"is_steamguard_enabled,omitempty"`
	TimestampSteamguardEnabled                            *uint32                                                         `protobuf:"fixed32,2,opt,name=timestamp_steamguard_enabled,json=timestampSteamguardEnabled" json:"timestamp_steamguard_enabled,omitempty"`
	DeprecatedNewauthentication                           []*CCredentials_GetSteamGuardDetails_Response_NewAuthentication `protobuf:"bytes,3,rep,name=deprecated_newauthentication,json=deprecatedNewauthentication" json:"deprecated_newauthentication,omitempty"`
	DeprecatedMachineNameUserchosen                       *string                                                         `protobuf:"bytes,4,opt,name=deprecated_machine_name_userchosen,json=deprecatedMachineNameUserchosen" json:"deprecated_machine_name_userchosen,omitempty"`
	DeprecatedTimestampMachineSteamguardEnabled           *uint32                                                         `protobuf:"fixed32,5,opt,name=deprecated_timestamp_machine_steamguard_enabled,json=deprecatedTimestampMachineSteamguardEnabled" json:"deprecated_timestamp_machine_steamguard_enabled,omitempty"`
	DeprecatedAuthenticationExistsFromGeolocBeforeMintime *bool                                                           `protobuf:"varint,6,opt,name=deprecated_authentication_exists_from_geoloc_before_mintime,json=deprecatedAuthenticationExistsFromGeolocBeforeMintime" json:"deprecated_authentication_exists_from_geoloc_before_mintime,omitempty"`
	DeprecatedMachineId                                   *uint64                                                         `protobuf:"varint,7,opt,name=deprecated_machine_id,json=deprecatedMachineId" json:"deprecated_machine_id,omitempty"`
	SessionData                                           []*CCredentials_GetSteamGuardDetails_Response_SessionData       `protobuf:"bytes,8,rep,name=session_data,json=sessionData" json:"session_data,omitempty"`
	IsTwofactorEnabled                                    *bool                                                           `protobuf:"varint,9,opt,name=is_twofactor_enabled,json=isTwofactorEnabled" json:"is_twofactor_enabled,omitempty"`
	TimestampTwofactorEnabled                             *uint32                                                         `protobuf:"fixed32,10,opt,name=timestamp_twofactor_enabled,json=timestampTwofactorEnabled" json:"timestamp_twofactor_enabled,omitempty"`
	IsPhoneVerified                                       *bool                                                           `protobuf:"varint,11,opt,name=is_phone_verified,json=isPhoneVerified" json:"is_phone_verified,omitempty"`
	XXX_NoUnkeyedLiteral                                  struct{}                                                        `json:"-"`
	XXX_unrecognized                                      []byte                                                          `json:"-"`
	XXX_sizecache                                         int32                                                           `json:"-"`
}

func (m *CCredentials_GetSteamGuardDetails_Response) Reset() {
	*m = CCredentials_GetSteamGuardDetails_Response{}
}
func (m *CCredentials_GetSteamGuardDetails_Response) String() string {
	return proto.CompactTextString(m)
}
func (*CCredentials_GetSteamGuardDetails_Response) ProtoMessage() {}
func (*CCredentials_GetSteamGuardDetails_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_credentials_steamclient_40181b9c7cad4797, []int{3}
}
func (m *CCredentials_GetSteamGuardDetails_Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CCredentials_GetSteamGuardDetails_Response.Unmarshal(m, b)
}
func (m *CCredentials_GetSteamGuardDetails_Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CCredentials_GetSteamGuardDetails_Response.Marshal(b, m, deterministic)
}
func (dst *CCredentials_GetSteamGuardDetails_Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CCredentials_GetSteamGuardDetails_Response.Merge(dst, src)
}
func (m *CCredentials_GetSteamGuardDetails_Response) XXX_Size() int {
	return xxx_messageInfo_CCredentials_GetSteamGuardDetails_Response.Size(m)
}
func (m *CCredentials_GetSteamGuardDetails_Response) XXX_DiscardUnknown() {
	xxx_messageInfo_CCredentials_GetSteamGuardDetails_Response.DiscardUnknown(m)
}

var xxx_messageInfo_CCredentials_GetSteamGuardDetails_Response proto.InternalMessageInfo

func (m *CCredentials_GetSteamGuardDetails_Response) GetIsSteamguardEnabled() bool {
	if m != nil && m.IsSteamguardEnabled != nil {
		return *m.IsSteamguardEnabled
	}
	return false
}

func (m *CCredentials_GetSteamGuardDetails_Response) GetTimestampSteamguardEnabled() uint32 {
	if m != nil && m.TimestampSteamguardEnabled != nil {
		return *m.TimestampSteamguardEnabled
	}
	return 0
}

func (m *CCredentials_GetSteamGuardDetails_Response) GetDeprecatedNewauthentication() []*CCredentials_GetSteamGuardDetails_Response_NewAuthentication {
	if m != nil {
		return m.DeprecatedNewauthentication
	}
	return nil
}

func (m *CCredentials_GetSteamGuardDetails_Response) GetDeprecatedMachineNameUserchosen() string {
	if m != nil && m.DeprecatedMachineNameUserchosen != nil {
		return *m.DeprecatedMachineNameUserchosen
	}
	return ""
}

func (m *CCredentials_GetSteamGuardDetails_Response) GetDeprecatedTimestampMachineSteamguardEnabled() uint32 {
	if m != nil && m.DeprecatedTimestampMachineSteamguardEnabled != nil {
		return *m.DeprecatedTimestampMachineSteamguardEnabled
	}
	return 0
}

func (m *CCredentials_GetSteamGuardDetails_Response) GetDeprecatedAuthenticationExistsFromGeolocBeforeMintime() bool {
	if m != nil && m.DeprecatedAuthenticationExistsFromGeolocBeforeMintime != nil {
		return *m.DeprecatedAuthenticationExistsFromGeolocBeforeMintime
	}
	return false
}

func (m *CCredentials_GetSteamGuardDetails_Response) GetDeprecatedMachineId() uint64 {
	if m != nil && m.DeprecatedMachineId != nil {
		return *m.DeprecatedMachineId
	}
	return 0
}

func (m *CCredentials_GetSteamGuardDetails_Response) GetSessionData() []*CCredentials_GetSteamGuardDetails_Response_SessionData {
	if m != nil {
		return m.SessionData
	}
	return nil
}

func (m *CCredentials_GetSteamGuardDetails_Response) GetIsTwofactorEnabled() bool {
	if m != nil && m.IsTwofactorEnabled != nil {
		return *m.IsTwofactorEnabled
	}
	return false
}

func (m *CCredentials_GetSteamGuardDetails_Response) GetTimestampTwofactorEnabled() uint32 {
	if m != nil && m.TimestampTwofactorEnabled != nil {
		return *m.TimestampTwofactorEnabled
	}
	return 0
}

func (m *CCredentials_GetSteamGuardDetails_Response) GetIsPhoneVerified() bool {
	if m != nil && m.IsPhoneVerified != nil {
		return *m.IsPhoneVerified
	}
	return false
}

type CCredentials_GetSteamGuardDetails_Response_NewAuthentication struct {
	TimestampSteamguardEnabled *uint32  `protobuf:"fixed32,1,opt,name=timestamp_steamguard_enabled,json=timestampSteamguardEnabled" json:"timestamp_steamguard_enabled,omitempty"`
	IsWebCookie                *bool    `protobuf:"varint,2,opt,name=is_web_cookie,json=isWebCookie" json:"is_web_cookie,omitempty"`
	Ipaddress                  *int32   `protobuf:"varint,3,opt,name=ipaddress" json:"ipaddress,omitempty"`
	GeolocInfo                 *string  `protobuf:"bytes,4,opt,name=geoloc_info,json=geolocInfo" json:"geoloc_info,omitempty"`
	IsRemembered               *bool    `protobuf:"varint,5,opt,name=is_remembered,json=isRemembered" json:"is_remembered,omitempty"`
	MachineNameUserSupplied    *string  `protobuf:"bytes,6,opt,name=machine_name_user_supplied,json=machineNameUserSupplied" json:"machine_name_user_supplied,omitempty"`
	Status                     *int32   `protobuf:"varint,7,opt,name=status" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral       struct{} `json:"-"`
	XXX_unrecognized           []byte   `json:"-"`
	XXX_sizecache              int32    `json:"-"`
}

func (m *CCredentials_GetSteamGuardDetails_Response_NewAuthentication) Reset() {
	*m = CCredentials_GetSteamGuardDetails_Response_NewAuthentication{}
}
func (m *CCredentials_GetSteamGuardDetails_Response_NewAuthentication) String() string {
	return proto.CompactTextString(m)
}
func (*CCredentials_GetSteamGuardDetails_Response_NewAuthentication) ProtoMessage() {}
func (*CCredentials_GetSteamGuardDetails_Response_NewAuthentication) Descriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_credentials_steamclient_40181b9c7cad4797, []int{3, 0}
}
func (m *CCredentials_GetSteamGuardDetails_Response_NewAuthentication) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CCredentials_GetSteamGuardDetails_Response_NewAuthentication.Unmarshal(m, b)
}
func (m *CCredentials_GetSteamGuardDetails_Response_NewAuthentication) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CCredentials_GetSteamGuardDetails_Response_NewAuthentication.Marshal(b, m, deterministic)
}
func (dst *CCredentials_GetSteamGuardDetails_Response_NewAuthentication) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CCredentials_GetSteamGuardDetails_Response_NewAuthentication.Merge(dst, src)
}
func (m *CCredentials_GetSteamGuardDetails_Response_NewAuthentication) XXX_Size() int {
	return xxx_messageInfo_CCredentials_GetSteamGuardDetails_Response_NewAuthentication.Size(m)
}
func (m *CCredentials_GetSteamGuardDetails_Response_NewAuthentication) XXX_DiscardUnknown() {
	xxx_messageInfo_CCredentials_GetSteamGuardDetails_Response_NewAuthentication.DiscardUnknown(m)
}

var xxx_messageInfo_CCredentials_GetSteamGuardDetails_Response_NewAuthentication proto.InternalMessageInfo

func (m *CCredentials_GetSteamGuardDetails_Response_NewAuthentication) GetTimestampSteamguardEnabled() uint32 {
	if m != nil && m.TimestampSteamguardEnabled != nil {
		return *m.TimestampSteamguardEnabled
	}
	return 0
}

func (m *CCredentials_GetSteamGuardDetails_Response_NewAuthentication) GetIsWebCookie() bool {
	if m != nil && m.IsWebCookie != nil {
		return *m.IsWebCookie
	}
	return false
}

func (m *CCredentials_GetSteamGuardDetails_Response_NewAuthentication) GetIpaddress() int32 {
	if m != nil && m.Ipaddress != nil {
		return *m.Ipaddress
	}
	return 0
}

func (m *CCredentials_GetSteamGuardDetails_Response_NewAuthentication) GetGeolocInfo() string {
	if m != nil && m.GeolocInfo != nil {
		return *m.GeolocInfo
	}
	return ""
}

func (m *CCredentials_GetSteamGuardDetails_Response_NewAuthentication) GetIsRemembered() bool {
	if m != nil && m.IsRemembered != nil {
		return *m.IsRemembered
	}
	return false
}

func (m *CCredentials_GetSteamGuardDetails_Response_NewAuthentication) GetMachineNameUserSupplied() string {
	if m != nil && m.MachineNameUserSupplied != nil {
		return *m.MachineNameUserSupplied
	}
	return ""
}

func (m *CCredentials_GetSteamGuardDetails_Response_NewAuthentication) GetStatus() int32 {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return 0
}

type CCredentials_GetSteamGuardDetails_Response_SessionData struct {
	MachineId                                   *uint64                                                         `protobuf:"varint,1,opt,name=machine_id,json=machineId" json:"machine_id,omitempty"`
	MachineNameUserchosen                       *string                                                         `protobuf:"bytes,2,opt,name=machine_name_userchosen,json=machineNameUserchosen" json:"machine_name_userchosen,omitempty"`
	TimestampMachineSteamguardEnabled           *uint32                                                         `protobuf:"fixed32,3,opt,name=timestamp_machine_steamguard_enabled,json=timestampMachineSteamguardEnabled" json:"timestamp_machine_steamguard_enabled,omitempty"`
	AuthenticationExistsFromGeolocBeforeMintime *bool                                                           `protobuf:"varint,4,opt,name=authentication_exists_from_geoloc_before_mintime,json=authenticationExistsFromGeolocBeforeMintime" json:"authentication_exists_from_geoloc_before_mintime,omitempty"`
	Newauthentication                           []*CCredentials_GetSteamGuardDetails_Response_NewAuthentication `protobuf:"bytes,5,rep,name=newauthentication" json:"newauthentication,omitempty"`
	AuthenticationExistsFromSameIpBeforeMintime *bool                                                           `protobuf:"varint,6,opt,name=authentication_exists_from_same_ip_before_mintime,json=authenticationExistsFromSameIpBeforeMintime" json:"authentication_exists_from_same_ip_before_mintime,omitempty"`
	PublicIpv4                                  *uint32                                                         `protobuf:"varint,7,opt,name=public_ipv4,json=publicIpv4" json:"public_ipv4,omitempty"`
	XXX_NoUnkeyedLiteral                        struct{}                                                        `json:"-"`
	XXX_unrecognized                            []byte                                                          `json:"-"`
	XXX_sizecache                               int32                                                           `json:"-"`
}

func (m *CCredentials_GetSteamGuardDetails_Response_SessionData) Reset() {
	*m = CCredentials_GetSteamGuardDetails_Response_SessionData{}
}
func (m *CCredentials_GetSteamGuardDetails_Response_SessionData) String() string {
	return proto.CompactTextString(m)
}
func (*CCredentials_GetSteamGuardDetails_Response_SessionData) ProtoMessage() {}
func (*CCredentials_GetSteamGuardDetails_Response_SessionData) Descriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_credentials_steamclient_40181b9c7cad4797, []int{3, 1}
}
func (m *CCredentials_GetSteamGuardDetails_Response_SessionData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CCredentials_GetSteamGuardDetails_Response_SessionData.Unmarshal(m, b)
}
func (m *CCredentials_GetSteamGuardDetails_Response_SessionData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CCredentials_GetSteamGuardDetails_Response_SessionData.Marshal(b, m, deterministic)
}
func (dst *CCredentials_GetSteamGuardDetails_Response_SessionData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CCredentials_GetSteamGuardDetails_Response_SessionData.Merge(dst, src)
}
func (m *CCredentials_GetSteamGuardDetails_Response_SessionData) XXX_Size() int {
	return xxx_messageInfo_CCredentials_GetSteamGuardDetails_Response_SessionData.Size(m)
}
func (m *CCredentials_GetSteamGuardDetails_Response_SessionData) XXX_DiscardUnknown() {
	xxx_messageInfo_CCredentials_GetSteamGuardDetails_Response_SessionData.DiscardUnknown(m)
}

var xxx_messageInfo_CCredentials_GetSteamGuardDetails_Response_SessionData proto.InternalMessageInfo

func (m *CCredentials_GetSteamGuardDetails_Response_SessionData) GetMachineId() uint64 {
	if m != nil && m.MachineId != nil {
		return *m.MachineId
	}
	return 0
}

func (m *CCredentials_GetSteamGuardDetails_Response_SessionData) GetMachineNameUserchosen() string {
	if m != nil && m.MachineNameUserchosen != nil {
		return *m.MachineNameUserchosen
	}
	return ""
}

func (m *CCredentials_GetSteamGuardDetails_Response_SessionData) GetTimestampMachineSteamguardEnabled() uint32 {
	if m != nil && m.TimestampMachineSteamguardEnabled != nil {
		return *m.TimestampMachineSteamguardEnabled
	}
	return 0
}

func (m *CCredentials_GetSteamGuardDetails_Response_SessionData) GetAuthenticationExistsFromGeolocBeforeMintime() bool {
	if m != nil && m.AuthenticationExistsFromGeolocBeforeMintime != nil {
		return *m.AuthenticationExistsFromGeolocBeforeMintime
	}
	return false
}

func (m *CCredentials_GetSteamGuardDetails_Response_SessionData) GetNewauthentication() []*CCredentials_GetSteamGuardDetails_Response_NewAuthentication {
	if m != nil {
		return m.Newauthentication
	}
	return nil
}

func (m *CCredentials_GetSteamGuardDetails_Response_SessionData) GetAuthenticationExistsFromSameIpBeforeMintime() bool {
	if m != nil && m.AuthenticationExistsFromSameIpBeforeMintime != nil {
		return *m.AuthenticationExistsFromSameIpBeforeMintime
	}
	return false
}

func (m *CCredentials_GetSteamGuardDetails_Response_SessionData) GetPublicIpv4() uint32 {
	if m != nil && m.PublicIpv4 != nil {
		return *m.PublicIpv4
	}
	return 0
}

type CCredentials_NewMachineNotificationDialog_Request struct {
	IsApproved           *bool    `protobuf:"varint,1,opt,name=is_approved,json=isApproved" json:"is_approved,omitempty"`
	IsWizardComplete     *bool    `protobuf:"varint,2,opt,name=is_wizard_complete,json=isWizardComplete" json:"is_wizard_complete,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CCredentials_NewMachineNotificationDialog_Request) Reset() {
	*m = CCredentials_NewMachineNotificationDialog_Request{}
}
func (m *CCredentials_NewMachineNotificationDialog_Request) String() string {
	return proto.CompactTextString(m)
}
func (*CCredentials_NewMachineNotificationDialog_Request) ProtoMessage() {}
func (*CCredentials_NewMachineNotificationDialog_Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_credentials_steamclient_40181b9c7cad4797, []int{4}
}
func (m *CCredentials_NewMachineNotificationDialog_Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CCredentials_NewMachineNotificationDialog_Request.Unmarshal(m, b)
}
func (m *CCredentials_NewMachineNotificationDialog_Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CCredentials_NewMachineNotificationDialog_Request.Marshal(b, m, deterministic)
}
func (dst *CCredentials_NewMachineNotificationDialog_Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CCredentials_NewMachineNotificationDialog_Request.Merge(dst, src)
}
func (m *CCredentials_NewMachineNotificationDialog_Request) XXX_Size() int {
	return xxx_messageInfo_CCredentials_NewMachineNotificationDialog_Request.Size(m)
}
func (m *CCredentials_NewMachineNotificationDialog_Request) XXX_DiscardUnknown() {
	xxx_messageInfo_CCredentials_NewMachineNotificationDialog_Request.DiscardUnknown(m)
}

var xxx_messageInfo_CCredentials_NewMachineNotificationDialog_Request proto.InternalMessageInfo

func (m *CCredentials_NewMachineNotificationDialog_Request) GetIsApproved() bool {
	if m != nil && m.IsApproved != nil {
		return *m.IsApproved
	}
	return false
}

func (m *CCredentials_NewMachineNotificationDialog_Request) GetIsWizardComplete() bool {
	if m != nil && m.IsWizardComplete != nil {
		return *m.IsWizardComplete
	}
	return false
}

type CCredentials_NewMachineNotificationDialog_Response struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CCredentials_NewMachineNotificationDialog_Response) Reset() {
	*m = CCredentials_NewMachineNotificationDialog_Response{}
}
func (m *CCredentials_NewMachineNotificationDialog_Response) String() string {
	return proto.CompactTextString(m)
}
func (*CCredentials_NewMachineNotificationDialog_Response) ProtoMessage() {}
func (*CCredentials_NewMachineNotificationDialog_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_credentials_steamclient_40181b9c7cad4797, []int{5}
}
func (m *CCredentials_NewMachineNotificationDialog_Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CCredentials_NewMachineNotificationDialog_Response.Unmarshal(m, b)
}
func (m *CCredentials_NewMachineNotificationDialog_Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CCredentials_NewMachineNotificationDialog_Response.Marshal(b, m, deterministic)
}
func (dst *CCredentials_NewMachineNotificationDialog_Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CCredentials_NewMachineNotificationDialog_Response.Merge(dst, src)
}
func (m *CCredentials_NewMachineNotificationDialog_Response) XXX_Size() int {
	return xxx_messageInfo_CCredentials_NewMachineNotificationDialog_Response.Size(m)
}
func (m *CCredentials_NewMachineNotificationDialog_Response) XXX_DiscardUnknown() {
	xxx_messageInfo_CCredentials_NewMachineNotificationDialog_Response.DiscardUnknown(m)
}

var xxx_messageInfo_CCredentials_NewMachineNotificationDialog_Response proto.InternalMessageInfo

type CCredentials_ValidateEmailAddress_Request struct {
	Stoken               *string  `protobuf:"bytes,1,opt,name=stoken" json:"stoken,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CCredentials_ValidateEmailAddress_Request) Reset() {
	*m = CCredentials_ValidateEmailAddress_Request{}
}
func (m *CCredentials_ValidateEmailAddress_Request) String() string { return proto.CompactTextString(m) }
func (*CCredentials_ValidateEmailAddress_Request) ProtoMessage()    {}
func (*CCredentials_ValidateEmailAddress_Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_credentials_steamclient_40181b9c7cad4797, []int{6}
}
func (m *CCredentials_ValidateEmailAddress_Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CCredentials_ValidateEmailAddress_Request.Unmarshal(m, b)
}
func (m *CCredentials_ValidateEmailAddress_Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CCredentials_ValidateEmailAddress_Request.Marshal(b, m, deterministic)
}
func (dst *CCredentials_ValidateEmailAddress_Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CCredentials_ValidateEmailAddress_Request.Merge(dst, src)
}
func (m *CCredentials_ValidateEmailAddress_Request) XXX_Size() int {
	return xxx_messageInfo_CCredentials_ValidateEmailAddress_Request.Size(m)
}
func (m *CCredentials_ValidateEmailAddress_Request) XXX_DiscardUnknown() {
	xxx_messageInfo_CCredentials_ValidateEmailAddress_Request.DiscardUnknown(m)
}

var xxx_messageInfo_CCredentials_ValidateEmailAddress_Request proto.InternalMessageInfo

func (m *CCredentials_ValidateEmailAddress_Request) GetStoken() string {
	if m != nil && m.Stoken != nil {
		return *m.Stoken
	}
	return ""
}

type CCredentials_ValidateEmailAddress_Response struct {
	WasValidated         *bool    `protobuf:"varint,1,opt,name=was_validated,json=wasValidated" json:"was_validated,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CCredentials_ValidateEmailAddress_Response) Reset() {
	*m = CCredentials_ValidateEmailAddress_Response{}
}
func (m *CCredentials_ValidateEmailAddress_Response) String() string {
	return proto.CompactTextString(m)
}
func (*CCredentials_ValidateEmailAddress_Response) ProtoMessage() {}
func (*CCredentials_ValidateEmailAddress_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_credentials_steamclient_40181b9c7cad4797, []int{7}
}
func (m *CCredentials_ValidateEmailAddress_Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CCredentials_ValidateEmailAddress_Response.Unmarshal(m, b)
}
func (m *CCredentials_ValidateEmailAddress_Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CCredentials_ValidateEmailAddress_Response.Marshal(b, m, deterministic)
}
func (dst *CCredentials_ValidateEmailAddress_Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CCredentials_ValidateEmailAddress_Response.Merge(dst, src)
}
func (m *CCredentials_ValidateEmailAddress_Response) XXX_Size() int {
	return xxx_messageInfo_CCredentials_ValidateEmailAddress_Response.Size(m)
}
func (m *CCredentials_ValidateEmailAddress_Response) XXX_DiscardUnknown() {
	xxx_messageInfo_CCredentials_ValidateEmailAddress_Response.DiscardUnknown(m)
}

var xxx_messageInfo_CCredentials_ValidateEmailAddress_Response proto.InternalMessageInfo

func (m *CCredentials_ValidateEmailAddress_Response) GetWasValidated() bool {
	if m != nil && m.WasValidated != nil {
		return *m.WasValidated
	}
	return false
}

type CCredentials_SteamGuardPhishingReport_Request struct {
	ParamString          *string  `protobuf:"bytes,1,opt,name=param_string,json=paramString" json:"param_string,omitempty"`
	IpaddressActual      *uint32  `protobuf:"varint,2,opt,name=ipaddress_actual,json=ipaddressActual" json:"ipaddress_actual,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CCredentials_SteamGuardPhishingReport_Request) Reset() {
	*m = CCredentials_SteamGuardPhishingReport_Request{}
}
func (m *CCredentials_SteamGuardPhishingReport_Request) String() string {
	return proto.CompactTextString(m)
}
func (*CCredentials_SteamGuardPhishingReport_Request) ProtoMessage() {}
func (*CCredentials_SteamGuardPhishingReport_Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_credentials_steamclient_40181b9c7cad4797, []int{8}
}
func (m *CCredentials_SteamGuardPhishingReport_Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CCredentials_SteamGuardPhishingReport_Request.Unmarshal(m, b)
}
func (m *CCredentials_SteamGuardPhishingReport_Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CCredentials_SteamGuardPhishingReport_Request.Marshal(b, m, deterministic)
}
func (dst *CCredentials_SteamGuardPhishingReport_Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CCredentials_SteamGuardPhishingReport_Request.Merge(dst, src)
}
func (m *CCredentials_SteamGuardPhishingReport_Request) XXX_Size() int {
	return xxx_messageInfo_CCredentials_SteamGuardPhishingReport_Request.Size(m)
}
func (m *CCredentials_SteamGuardPhishingReport_Request) XXX_DiscardUnknown() {
	xxx_messageInfo_CCredentials_SteamGuardPhishingReport_Request.DiscardUnknown(m)
}

var xxx_messageInfo_CCredentials_SteamGuardPhishingReport_Request proto.InternalMessageInfo

func (m *CCredentials_SteamGuardPhishingReport_Request) GetParamString() string {
	if m != nil && m.ParamString != nil {
		return *m.ParamString
	}
	return ""
}

func (m *CCredentials_SteamGuardPhishingReport_Request) GetIpaddressActual() uint32 {
	if m != nil && m.IpaddressActual != nil {
		return *m.IpaddressActual
	}
	return 0
}

type CCredentials_SteamGuardPhishingReport_Response struct {
	IpaddressLoginattempt   *uint32  `protobuf:"varint,1,opt,name=ipaddress_loginattempt,json=ipaddressLoginattempt" json:"ipaddress_loginattempt,omitempty"`
	CountrynameLoginattempt *string  `protobuf:"bytes,2,opt,name=countryname_loginattempt,json=countrynameLoginattempt" json:"countryname_loginattempt,omitempty"`
	StatenameLoginattempt   *string  `protobuf:"bytes,3,opt,name=statename_loginattempt,json=statenameLoginattempt" json:"statename_loginattempt,omitempty"`
	CitynameLoginattempt    *string  `protobuf:"bytes,4,opt,name=cityname_loginattempt,json=citynameLoginattempt" json:"cityname_loginattempt,omitempty"`
	IpaddressActual         *uint32  `protobuf:"varint,5,opt,name=ipaddress_actual,json=ipaddressActual" json:"ipaddress_actual,omitempty"`
	CountrynameActual       *string  `protobuf:"bytes,6,opt,name=countryname_actual,json=countrynameActual" json:"countryname_actual,omitempty"`
	StatenameActual         *string  `protobuf:"bytes,7,opt,name=statename_actual,json=statenameActual" json:"statename_actual,omitempty"`
	CitynameActual          *string  `protobuf:"bytes,8,opt,name=cityname_actual,json=citynameActual" json:"cityname_actual,omitempty"`
	SteamguardCode          *string  `protobuf:"bytes,9,opt,name=steamguard_code,json=steamguardCode" json:"steamguard_code,omitempty"`
	XXX_NoUnkeyedLiteral    struct{} `json:"-"`
	XXX_unrecognized        []byte   `json:"-"`
	XXX_sizecache           int32    `json:"-"`
}

func (m *CCredentials_SteamGuardPhishingReport_Response) Reset() {
	*m = CCredentials_SteamGuardPhishingReport_Response{}
}
func (m *CCredentials_SteamGuardPhishingReport_Response) String() string {
	return proto.CompactTextString(m)
}
func (*CCredentials_SteamGuardPhishingReport_Response) ProtoMessage() {}
func (*CCredentials_SteamGuardPhishingReport_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_credentials_steamclient_40181b9c7cad4797, []int{9}
}
func (m *CCredentials_SteamGuardPhishingReport_Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CCredentials_SteamGuardPhishingReport_Response.Unmarshal(m, b)
}
func (m *CCredentials_SteamGuardPhishingReport_Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CCredentials_SteamGuardPhishingReport_Response.Marshal(b, m, deterministic)
}
func (dst *CCredentials_SteamGuardPhishingReport_Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CCredentials_SteamGuardPhishingReport_Response.Merge(dst, src)
}
func (m *CCredentials_SteamGuardPhishingReport_Response) XXX_Size() int {
	return xxx_messageInfo_CCredentials_SteamGuardPhishingReport_Response.Size(m)
}
func (m *CCredentials_SteamGuardPhishingReport_Response) XXX_DiscardUnknown() {
	xxx_messageInfo_CCredentials_SteamGuardPhishingReport_Response.DiscardUnknown(m)
}

var xxx_messageInfo_CCredentials_SteamGuardPhishingReport_Response proto.InternalMessageInfo

func (m *CCredentials_SteamGuardPhishingReport_Response) GetIpaddressLoginattempt() uint32 {
	if m != nil && m.IpaddressLoginattempt != nil {
		return *m.IpaddressLoginattempt
	}
	return 0
}

func (m *CCredentials_SteamGuardPhishingReport_Response) GetCountrynameLoginattempt() string {
	if m != nil && m.CountrynameLoginattempt != nil {
		return *m.CountrynameLoginattempt
	}
	return ""
}

func (m *CCredentials_SteamGuardPhishingReport_Response) GetStatenameLoginattempt() string {
	if m != nil && m.StatenameLoginattempt != nil {
		return *m.StatenameLoginattempt
	}
	return ""
}

func (m *CCredentials_SteamGuardPhishingReport_Response) GetCitynameLoginattempt() string {
	if m != nil && m.CitynameLoginattempt != nil {
		return *m.CitynameLoginattempt
	}
	return ""
}

func (m *CCredentials_SteamGuardPhishingReport_Response) GetIpaddressActual() uint32 {
	if m != nil && m.IpaddressActual != nil {
		return *m.IpaddressActual
	}
	return 0
}

func (m *CCredentials_SteamGuardPhishingReport_Response) GetCountrynameActual() string {
	if m != nil && m.CountrynameActual != nil {
		return *m.CountrynameActual
	}
	return ""
}

func (m *CCredentials_SteamGuardPhishingReport_Response) GetStatenameActual() string {
	if m != nil && m.StatenameActual != nil {
		return *m.StatenameActual
	}
	return ""
}

func (m *CCredentials_SteamGuardPhishingReport_Response) GetCitynameActual() string {
	if m != nil && m.CitynameActual != nil {
		return *m.CitynameActual
	}
	return ""
}

func (m *CCredentials_SteamGuardPhishingReport_Response) GetSteamguardCode() string {
	if m != nil && m.SteamguardCode != nil {
		return *m.SteamguardCode
	}
	return ""
}

type CCredentials_LastCredentialChangeTime_Request struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CCredentials_LastCredentialChangeTime_Request) Reset() {
	*m = CCredentials_LastCredentialChangeTime_Request{}
}
func (m *CCredentials_LastCredentialChangeTime_Request) String() string {
	return proto.CompactTextString(m)
}
func (*CCredentials_LastCredentialChangeTime_Request) ProtoMessage() {}
func (*CCredentials_LastCredentialChangeTime_Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_credentials_steamclient_40181b9c7cad4797, []int{10}
}
func (m *CCredentials_LastCredentialChangeTime_Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CCredentials_LastCredentialChangeTime_Request.Unmarshal(m, b)
}
func (m *CCredentials_LastCredentialChangeTime_Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CCredentials_LastCredentialChangeTime_Request.Marshal(b, m, deterministic)
}
func (dst *CCredentials_LastCredentialChangeTime_Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CCredentials_LastCredentialChangeTime_Request.Merge(dst, src)
}
func (m *CCredentials_LastCredentialChangeTime_Request) XXX_Size() int {
	return xxx_messageInfo_CCredentials_LastCredentialChangeTime_Request.Size(m)
}
func (m *CCredentials_LastCredentialChangeTime_Request) XXX_DiscardUnknown() {
	xxx_messageInfo_CCredentials_LastCredentialChangeTime_Request.DiscardUnknown(m)
}

var xxx_messageInfo_CCredentials_LastCredentialChangeTime_Request proto.InternalMessageInfo

type CCredentials_LastCredentialChangeTime_Response struct {
	TimestampLastPasswordChange *uint32  `protobuf:"fixed32,1,opt,name=timestamp_last_password_change,json=timestampLastPasswordChange" json:"timestamp_last_password_change,omitempty"`
	TimestampLastEmailChange    *uint32  `protobuf:"fixed32,2,opt,name=timestamp_last_email_change,json=timestampLastEmailChange" json:"timestamp_last_email_change,omitempty"`
	TimestampLastPasswordReset  *uint32  `protobuf:"fixed32,3,opt,name=timestamp_last_password_reset,json=timestampLastPasswordReset" json:"timestamp_last_password_reset,omitempty"`
	XXX_NoUnkeyedLiteral        struct{} `json:"-"`
	XXX_unrecognized            []byte   `json:"-"`
	XXX_sizecache               int32    `json:"-"`
}

func (m *CCredentials_LastCredentialChangeTime_Response) Reset() {
	*m = CCredentials_LastCredentialChangeTime_Response{}
}
func (m *CCredentials_LastCredentialChangeTime_Response) String() string {
	return proto.CompactTextString(m)
}
func (*CCredentials_LastCredentialChangeTime_Response) ProtoMessage() {}
func (*CCredentials_LastCredentialChangeTime_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_credentials_steamclient_40181b9c7cad4797, []int{11}
}
func (m *CCredentials_LastCredentialChangeTime_Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CCredentials_LastCredentialChangeTime_Response.Unmarshal(m, b)
}
func (m *CCredentials_LastCredentialChangeTime_Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CCredentials_LastCredentialChangeTime_Response.Marshal(b, m, deterministic)
}
func (dst *CCredentials_LastCredentialChangeTime_Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CCredentials_LastCredentialChangeTime_Response.Merge(dst, src)
}
func (m *CCredentials_LastCredentialChangeTime_Response) XXX_Size() int {
	return xxx_messageInfo_CCredentials_LastCredentialChangeTime_Response.Size(m)
}
func (m *CCredentials_LastCredentialChangeTime_Response) XXX_DiscardUnknown() {
	xxx_messageInfo_CCredentials_LastCredentialChangeTime_Response.DiscardUnknown(m)
}

var xxx_messageInfo_CCredentials_LastCredentialChangeTime_Response proto.InternalMessageInfo

func (m *CCredentials_LastCredentialChangeTime_Response) GetTimestampLastPasswordChange() uint32 {
	if m != nil && m.TimestampLastPasswordChange != nil {
		return *m.TimestampLastPasswordChange
	}
	return 0
}

func (m *CCredentials_LastCredentialChangeTime_Response) GetTimestampLastEmailChange() uint32 {
	if m != nil && m.TimestampLastEmailChange != nil {
		return *m.TimestampLastEmailChange
	}
	return 0
}

func (m *CCredentials_LastCredentialChangeTime_Response) GetTimestampLastPasswordReset() uint32 {
	if m != nil && m.TimestampLastPasswordReset != nil {
		return *m.TimestampLastPasswordReset
	}
	return 0
}

type CCredentials_GetAccountAuthSecret_Request struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CCredentials_GetAccountAuthSecret_Request) Reset() {
	*m = CCredentials_GetAccountAuthSecret_Request{}
}
func (m *CCredentials_GetAccountAuthSecret_Request) String() string { return proto.CompactTextString(m) }
func (*CCredentials_GetAccountAuthSecret_Request) ProtoMessage()    {}
func (*CCredentials_GetAccountAuthSecret_Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_credentials_steamclient_40181b9c7cad4797, []int{12}
}
func (m *CCredentials_GetAccountAuthSecret_Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CCredentials_GetAccountAuthSecret_Request.Unmarshal(m, b)
}
func (m *CCredentials_GetAccountAuthSecret_Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CCredentials_GetAccountAuthSecret_Request.Marshal(b, m, deterministic)
}
func (dst *CCredentials_GetAccountAuthSecret_Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CCredentials_GetAccountAuthSecret_Request.Merge(dst, src)
}
func (m *CCredentials_GetAccountAuthSecret_Request) XXX_Size() int {
	return xxx_messageInfo_CCredentials_GetAccountAuthSecret_Request.Size(m)
}
func (m *CCredentials_GetAccountAuthSecret_Request) XXX_DiscardUnknown() {
	xxx_messageInfo_CCredentials_GetAccountAuthSecret_Request.DiscardUnknown(m)
}

var xxx_messageInfo_CCredentials_GetAccountAuthSecret_Request proto.InternalMessageInfo

type CCredentials_GetAccountAuthSecret_Response struct {
	SecretId             *int32   `protobuf:"varint,1,opt,name=secret_id,json=secretId" json:"secret_id,omitempty"`
	Secret               []byte   `protobuf:"bytes,2,opt,name=secret" json:"secret,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CCredentials_GetAccountAuthSecret_Response) Reset() {
	*m = CCredentials_GetAccountAuthSecret_Response{}
}
func (m *CCredentials_GetAccountAuthSecret_Response) String() string {
	return proto.CompactTextString(m)
}
func (*CCredentials_GetAccountAuthSecret_Response) ProtoMessage() {}
func (*CCredentials_GetAccountAuthSecret_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_credentials_steamclient_40181b9c7cad4797, []int{13}
}
func (m *CCredentials_GetAccountAuthSecret_Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CCredentials_GetAccountAuthSecret_Response.Unmarshal(m, b)
}
func (m *CCredentials_GetAccountAuthSecret_Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CCredentials_GetAccountAuthSecret_Response.Marshal(b, m, deterministic)
}
func (dst *CCredentials_GetAccountAuthSecret_Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CCredentials_GetAccountAuthSecret_Response.Merge(dst, src)
}
func (m *CCredentials_GetAccountAuthSecret_Response) XXX_Size() int {
	return xxx_messageInfo_CCredentials_GetAccountAuthSecret_Response.Size(m)
}
func (m *CCredentials_GetAccountAuthSecret_Response) XXX_DiscardUnknown() {
	xxx_messageInfo_CCredentials_GetAccountAuthSecret_Response.DiscardUnknown(m)
}

var xxx_messageInfo_CCredentials_GetAccountAuthSecret_Response proto.InternalMessageInfo

func (m *CCredentials_GetAccountAuthSecret_Response) GetSecretId() int32 {
	if m != nil && m.SecretId != nil {
		return *m.SecretId
	}
	return 0
}

func (m *CCredentials_GetAccountAuthSecret_Response) GetSecret() []byte {
	if m != nil {
		return m.Secret
	}
	return nil
}

func init() {
	proto.RegisterType((*CCredentials_TestAvailablePassword_Request)(nil), "CCredentials_TestAvailablePassword_Request")
	proto.RegisterType((*CCredentials_TestAvailablePassword_Response)(nil), "CCredentials_TestAvailablePassword_Response")
	proto.RegisterType((*CCredentials_GetSteamGuardDetails_Request)(nil), "CCredentials_GetSteamGuardDetails_Request")
	proto.RegisterType((*CCredentials_GetSteamGuardDetails_Response)(nil), "CCredentials_GetSteamGuardDetails_Response")
	proto.RegisterType((*CCredentials_GetSteamGuardDetails_Response_NewAuthentication)(nil), "CCredentials_GetSteamGuardDetails_Response.NewAuthentication")
	proto.RegisterType((*CCredentials_GetSteamGuardDetails_Response_SessionData)(nil), "CCredentials_GetSteamGuardDetails_Response.SessionData")
	proto.RegisterType((*CCredentials_NewMachineNotificationDialog_Request)(nil), "CCredentials_NewMachineNotificationDialog_Request")
	proto.RegisterType((*CCredentials_NewMachineNotificationDialog_Response)(nil), "CCredentials_NewMachineNotificationDialog_Response")
	proto.RegisterType((*CCredentials_ValidateEmailAddress_Request)(nil), "CCredentials_ValidateEmailAddress_Request")
	proto.RegisterType((*CCredentials_ValidateEmailAddress_Response)(nil), "CCredentials_ValidateEmailAddress_Response")
	proto.RegisterType((*CCredentials_SteamGuardPhishingReport_Request)(nil), "CCredentials_SteamGuardPhishingReport_Request")
	proto.RegisterType((*CCredentials_SteamGuardPhishingReport_Response)(nil), "CCredentials_SteamGuardPhishingReport_Response")
	proto.RegisterType((*CCredentials_LastCredentialChangeTime_Request)(nil), "CCredentials_LastCredentialChangeTime_Request")
	proto.RegisterType((*CCredentials_LastCredentialChangeTime_Response)(nil), "CCredentials_LastCredentialChangeTime_Response")
	proto.RegisterType((*CCredentials_GetAccountAuthSecret_Request)(nil), "CCredentials_GetAccountAuthSecret_Request")
	proto.RegisterType((*CCredentials_GetAccountAuthSecret_Response)(nil), "CCredentials_GetAccountAuthSecret_Response")
}

func init() {
	proto.RegisterFile("steammessages_credentials.steamclient.proto", fileDescriptor_steammessages_credentials_steamclient_40181b9c7cad4797)
}

var fileDescriptor_steammessages_credentials_steamclient_40181b9c7cad4797 = []byte{
	// 1766 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x58, 0x4f, 0x6f, 0x1c, 0x49,
	0x15, 0x57, 0xc7, 0x76, 0x32, 0x53, 0x63, 0x6f, 0xe2, 0x4a, 0xec, 0x74, 0x26, 0xd9, 0x75, 0xa5,
	0x83, 0x64, 0x27, 0x4e, 0xda, 0x1b, 0x27, 0x61, 0x81, 0x65, 0x11, 0x8e, 0x9d, 0x0d, 0x86, 0x4d,
	0x08, 0xed, 0xb0, 0x91, 0xf6, 0xd2, 0xaa, 0xe9, 0x7e, 0x33, 0x53, 0x72, 0x77, 0x57, 0xd3, 0x55,
	0x3d, 0x03, 0x2b, 0xad, 0x14, 0xe6, 0x06, 0x07, 0x84, 0xb8, 0x21, 0x38, 0x70, 0xe2, 0x03, 0x20,
	0x0d, 0x12, 0xdf, 0x81, 0xaf, 0xc1, 0x91, 0x33, 0x57, 0xd4, 0xd5, 0x35, 0xdd, 0xf3, 0xa7, 0xc7,
	0xf6, 0x20, 0x6e, 0xd3, 0xef, 0x5f, 0xbd, 0xbf, 0xbf, 0x57, 0x35, 0x68, 0x57, 0x48, 0xa0, 0x61,
	0x08, 0x42, 0xd0, 0x0e, 0x08, 0xd7, 0x4b, 0xc0, 0x87, 0x48, 0x32, 0x1a, 0x08, 0x5b, 0x71, 0xbc,
	0x80, 0x41, 0x24, 0xed, 0x38, 0xe1, 0x92, 0x37, 0x1f, 0x4e, 0x0a, 0xa7, 0x11, 0x6b, 0x33, 0xf0,
	0xdd, 0x16, 0x15, 0x30, 0x2b, 0x6d, 0xfd, 0xc9, 0x40, 0x0f, 0x0e, 0x0f, 0x4b, 0x83, 0xee, 0x5b,
	0x10, 0xf2, 0xa0, 0x47, 0x59, 0x40, 0x5b, 0x01, 0xbc, 0xa1, 0x42, 0xf4, 0x79, 0xe2, 0xbb, 0x0e,
	0xfc, 0x22, 0x05, 0x21, 0x71, 0x13, 0xd5, 0x62, 0x4d, 0x33, 0x0d, 0x62, 0xec, 0xd4, 0x9d, 0xe2,
	0x1b, 0xdb, 0xe8, 0xba, 0xe8, 0x52, 0xd7, 0x67, 0x1d, 0x10, 0xd2, 0x2d, 0xc4, 0x2e, 0x11, 0x63,
	0x67, 0xd5, 0x59, 0x17, 0x5d, 0x7a, 0xa4, 0x38, 0x23, 0x9b, 0xf8, 0x2e, 0x5a, 0xa5, 0x9e, 0xc7,
	0xd3, 0x48, 0xba, 0x11, 0x0d, 0xc1, 0x5c, 0x52, 0xf6, 0x1a, 0x9a, 0xf6, 0x9a, 0x86, 0x60, 0xfd,
	0x08, 0xed, 0x5e, 0xc8, 0x39, 0x11, 0xf3, 0x48, 0x00, 0xbe, 0x85, 0x6a, 0x4c, 0xb8, 0x3d, 0x1a,
	0x30, 0x5f, 0x59, 0xab, 0x39, 0x57, 0x98, 0xf8, 0x32, 0xfb, 0xb4, 0xfe, 0xb1, 0x84, 0xee, 0x4f,
	0x98, 0x7a, 0x09, 0xf2, 0x24, 0xcb, 0xc6, 0xcb, 0x94, 0x26, 0xfe, 0x11, 0x48, 0xca, 0x02, 0x51,
	0x84, 0xf9, 0x7b, 0x03, 0xdd, 0x66, 0x91, 0x17, 0xa4, 0x3e, 0xb8, 0x11, 0xf4, 0x5d, 0x9a, 0xca,
	0x6e, 0xa6, 0xe8, 0x51, 0xc9, 0x78, 0x24, 0x54, 0xe8, 0xb5, 0xef, 0x2d, 0xcb, 0x24, 0x85, 0xe7,
	0x3f, 0x1e, 0x0c, 0xcd, 0xcf, 0xdf, 0x75, 0x41, 0x76, 0x21, 0x21, 0x3c, 0x21, 0x11, 0x97, 0x44,
	0x72, 0x12, 0xf3, 0x38, 0x0d, 0xa8, 0x04, 0x22, 0xbb, 0x40, 0x22, 0xe8, 0x4f, 0x9a, 0x20, 0x6d,
	0x06, 0x81, 0x4f, 0x58, 0xa4, 0xd8, 0x89, 0x0e, 0xc0, 0xb9, 0xa5, 0x0f, 0x7d, 0x0d, 0xfd, 0x83,
	0xc9, 0x23, 0xf1, 0x5f, 0x0c, 0x54, 0xef, 0x43, 0xcb, 0xe3, 0xfc, 0x94, 0x81, 0x4a, 0x6a, 0xfd,
	0xf9, 0xaf, 0x8d, 0xc1, 0xd0, 0xfc, 0xe6, 0x6d, 0x17, 0x48, 0x2a, 0x20, 0xd9, 0x16, 0x44, 0x45,
	0x44, 0x54, 0x48, 0x24, 0xa4, 0x5e, 0x97, 0x45, 0x40, 0xb2, 0x83, 0x49, 0xae, 0x66, 0x93, 0xe3,
	0x36, 0x89, 0x13, 0x10, 0x10, 0xc9, 0x87, 0x84, 0xc9, 0xed, 0x20, 0x20, 0x2d, 0xa5, 0xec, 0x67,
	0x2e, 0x77, 0x40, 0x2a, 0x77, 0xb4, 0xb1, 0x91, 0x81, 0xe3, 0x23, 0xc2, 0xa2, 0xac, 0x73, 0x7c,
	0xc2, 0xdb, 0x4a, 0xe0, 0xe0, 0x15, 0x11, 0x20, 0x04, 0xe3, 0x91, 0xed, 0x94, 0x4e, 0xe1, 0xef,
	0x20, 0x53, 0xb2, 0x10, 0x84, 0xa4, 0x61, 0xec, 0x86, 0x2c, 0x62, 0x61, 0x1a, 0xba, 0x7d, 0x1a,
	0x49, 0xc8, 0xcb, 0x71, 0xc5, 0xd9, 0x2c, 0xf8, 0xaf, 0x72, 0xf6, 0x3b, 0xc5, 0xc5, 0x77, 0x50,
	0x9d, 0xc5, 0xd4, 0xf7, 0x13, 0x10, 0xc2, 0x5c, 0x26, 0xc6, 0xce, 0x8a, 0x53, 0x12, 0xac, 0x7f,
	0xae, 0x4d, 0xf5, 0xe8, 0x9c, 0xda, 0xe9, 0x2e, 0xd8, 0x47, 0x1b, 0x4c, 0xb8, 0xaa, 0xd5, 0x3b,
	0x99, 0x80, 0x0b, 0x51, 0xd6, 0x2e, 0x79, 0xc3, 0xd6, 0x9c, 0xeb, 0x4c, 0x9c, 0x14, 0xbc, 0x17,
	0x39, 0x0b, 0xff, 0x10, 0xdd, 0x29, 0x5d, 0xaf, 0x50, 0xbd, 0xa4, 0xdc, 0x6f, 0x16, 0x32, 0xb3,
	0x16, 0xde, 0x1b, 0xe8, 0x8e, 0x0f, 0x71, 0x02, 0x1e, 0x95, 0xe0, 0xbb, 0x33, 0x15, 0x37, 0x97,
	0xc8, 0xd2, 0x4e, 0x63, 0xff, 0x33, 0xfb, 0xe2, 0x91, 0xd8, 0x33, 0x6d, 0xe0, 0xdc, 0x2e, 0x8f,
	0x78, 0x3d, 0x7d, 0x02, 0xfe, 0x09, 0xb2, 0xc6, 0x3c, 0xd0, 0xe5, 0x53, 0xb3, 0xe5, 0x66, 0x25,
	0xf5, 0xba, 0x5c, 0x40, 0xa4, 0xd2, 0x5b, 0x77, 0xb6, 0x4a, 0xc9, 0x57, 0xb9, 0x60, 0x36, 0x70,
	0x3f, 0x2f, 0xc4, 0xb0, 0x8f, 0xf6, 0xc6, 0x8c, 0x8d, 0xd5, 0x55, 0x9b, 0xad, 0x48, 0xd2, 0x8a,
	0x4a, 0xd2, 0x6e, 0xa9, 0xf6, 0xb6, 0xa8, 0x76, 0xae, 0x34, 0x9b, 0xb5, 0xaf, 0xd1, 0xa7, 0x63,
	0xa7, 0x4c, 0xc6, 0xe3, 0xc2, 0x2f, 0x99, 0x90, 0xc2, 0x6d, 0x27, 0x3c, 0x74, 0x3b, 0xc0, 0x03,
	0xee, 0xb9, 0x2d, 0x68, 0xf3, 0x04, 0xb2, 0xe6, 0xca, 0x3c, 0x32, 0x2f, 0xab, 0x8a, 0x3e, 0x2b,
	0x4d, 0x4c, 0xa6, 0xeb, 0x85, 0x32, 0xf0, 0x79, 0xc2, 0xc3, 0x97, 0x4a, 0xfd, 0xb9, 0xd2, 0x7e,
	0x95, 0x2b, 0x67, 0x7d, 0x52, 0x91, 0x2e, 0xe6, 0x9b, 0x57, 0x88, 0xb1, 0xb3, 0xec, 0x5c, 0x9f,
	0xc9, 0xd0, 0xb1, 0x8f, 0xbf, 0x42, 0xab, 0xba, 0xf3, 0x5d, 0x9f, 0x4a, 0x6a, 0xd6, 0x54, 0x51,
	0x3f, 0x59, 0xa4, 0xa8, 0x27, 0xb9, 0xfe, 0x11, 0x95, 0xd4, 0x69, 0x88, 0xf2, 0x03, 0x7f, 0x8c,
	0x6e, 0x30, 0xe1, 0xca, 0x3e, 0x6f, 0x53, 0x4f, 0xf2, 0xa4, 0x48, 0x6b, 0x5d, 0x05, 0x89, 0x99,
	0x78, 0x3b, 0x62, 0x8d, 0xb2, 0xf7, 0x03, 0x74, 0xbb, 0x2c, 0xcc, 0xac, 0x22, 0x52, 0xf5, 0xb8,
	0x55, 0x88, 0xcc, 0xe8, 0x3f, 0x40, 0xeb, 0x4c, 0xb8, 0x71, 0x97, 0x47, 0xe0, 0xf6, 0x20, 0x51,
	0x8b, 0xc2, 0x6c, 0xa8, 0xe3, 0xae, 0x32, 0xf1, 0x26, 0xa3, 0x7f, 0xa9, 0xc9, 0xcd, 0xbf, 0x5d,
	0x42, 0xeb, 0x33, 0xfd, 0x78, 0xee, 0xdc, 0x18, 0xe7, 0xce, 0x8d, 0x85, 0xd6, 0x98, 0x70, 0xfb,
	0xd0, 0x72, 0xc7, 0xa0, 0xad, 0xe6, 0x34, 0x98, 0x78, 0x07, 0xad, 0xc3, 0x1c, 0x58, 0x26, 0xe0,
	0x61, 0x69, 0x0a, 0x1e, 0xf0, 0x16, 0x6a, 0xe8, 0xee, 0x60, 0x51, 0x9b, 0xeb, 0xfe, 0x46, 0x39,
	0xe9, 0x38, 0x6a, 0x73, 0x7c, 0x4f, 0x1d, 0x91, 0x40, 0x08, 0x61, 0x0b, 0x12, 0xdd, 0xa8, 0x35,
	0x67, 0x95, 0x09, 0xa7, 0xa0, 0xe1, 0x4f, 0x51, 0x73, 0x66, 0x62, 0x5c, 0x91, 0xc6, 0x71, 0x90,
	0x25, 0xe5, 0xb2, 0x32, 0x7a, 0x33, 0x9c, 0x1c, 0x95, 0x13, 0xcd, 0xc6, 0x9b, 0xe8, 0xb2, 0x90,
	0x54, 0xa6, 0x42, 0xf5, 0xce, 0x8a, 0xa3, 0xbf, 0x9a, 0x7f, 0x58, 0x46, 0x8d, 0xb1, 0x7a, 0xe3,
	0x0f, 0x11, 0x1a, 0xeb, 0x33, 0x43, 0xf5, 0x59, 0x3d, 0x2c, 0xba, 0xeb, 0xdb, 0xe8, 0xe6, 0xbc,
	0xa9, 0x55, 0x80, 0xef, 0x6c, 0x84, 0x95, 0xb3, 0xfa, 0x53, 0xf4, 0xad, 0x0b, 0x0d, 0x68, 0x0e,
	0xc2, 0x77, 0xe5, 0xb9, 0x63, 0x09, 0xe8, 0xe3, 0x85, 0x67, 0x71, 0x59, 0x25, 0x75, 0x97, 0x2e,
	0x30, 0x81, 0xa7, 0x68, 0x7d, 0x16, 0x27, 0x57, 0xfe, 0x1f, 0x38, 0x39, 0x6b, 0x17, 0xb7, 0xd1,
	0xe3, 0x33, 0x62, 0x12, 0x59, 0xbe, 0x59, 0x5c, 0x0d, 0x30, 0x73, 0x83, 0x3a, 0xa1, 0x21, 0x1c,
	0xc7, 0x93, 0x41, 0x6d, 0xa1, 0x46, 0x9c, 0xb6, 0x02, 0xe6, 0xb9, 0x2c, 0xee, 0x3d, 0x55, 0x0d,
	0xb1, 0xe6, 0xa0, 0x9c, 0x74, 0x1c, 0xf7, 0x9e, 0x5a, 0x03, 0x03, 0x3d, 0x9e, 0x08, 0xee, 0x35,
	0xf4, 0x47, 0x18, 0xcc, 0x25, 0x6b, 0xeb, 0x53, 0x8e, 0x18, 0x0d, 0x78, 0xa7, 0xb8, 0x92, 0x6c,
	0xa1, 0x06, 0x13, 0x2e, 0x8d, 0xe3, 0x84, 0xf7, 0x8a, 0x5d, 0x86, 0x98, 0x38, 0xd0, 0x14, 0xfc,
	0x10, 0xe1, 0x6c, 0x90, 0xd8, 0xd7, 0x59, 0xc5, 0x3d, 0x1e, 0xc6, 0x01, 0xc8, 0xd1, 0x34, 0x5d,
	0x63, 0xe2, 0x9d, 0x62, 0x1c, 0x6a, 0xba, 0xf5, 0x14, 0xed, 0x2f, 0xe2, 0x43, 0x9e, 0x68, 0xeb,
	0x70, 0xea, 0x12, 0xa5, 0xee, 0x56, 0x54, 0xc2, 0x8b, 0x90, 0xb2, 0xe0, 0x20, 0x9f, 0xc7, 0xc2,
	0x63, 0x35, 0x14, 0xfc, 0x14, 0x22, 0x7d, 0x53, 0xd4, 0x5f, 0xd6, 0xcf, 0xa6, 0xb6, 0xf9, 0x1c,
	0x23, 0x7a, 0x9b, 0xdf, 0x43, 0x6b, 0x7d, 0xaa, 0x2f, 0x75, 0x19, 0x16, 0xeb, 0xc8, 0x57, 0xfb,
	0x54, 0x8c, 0x14, 0x7d, 0xeb, 0x1b, 0xf4, 0x68, 0xc2, 0x64, 0xd9, 0x2b, 0x6f, 0xba, 0x4c, 0x74,
	0x59, 0xd4, 0x71, 0x20, 0xe6, 0x89, 0x2c, 0x7c, 0xbb, 0x8b, 0x56, 0x63, 0x9a, 0xd0, 0xd0, 0x15,
	0x32, 0x61, 0x51, 0x47, 0x7b, 0xd8, 0x50, 0xb4, 0x13, 0x45, 0xc2, 0xf7, 0xd1, 0xb5, 0x02, 0x63,
	0x5c, 0xea, 0xc9, 0x94, 0x06, 0x2a, 0x9b, 0x6b, 0xce, 0xd5, 0x82, 0x7e, 0xa0, 0xc8, 0xd6, 0xbf,
	0x96, 0x90, 0x7d, 0xd1, 0xf3, 0x75, 0x58, 0xcf, 0xd0, 0x66, 0x69, 0x3d, 0xe0, 0x1d, 0x16, 0x51,
	0x29, 0x21, 0x8c, 0xa5, 0x72, 0x65, 0xcd, 0xd9, 0x28, 0xb8, 0x5f, 0x8c, 0x31, 0xf1, 0x77, 0x91,
	0xa9, 0x6e, 0xc7, 0xc9, 0xaf, 0x14, 0x40, 0x4c, 0x28, 0xe6, 0x10, 0x71, 0x73, 0x8c, 0x3f, 0xa1,
	0xfa, 0x0c, 0x6d, 0x66, 0xa8, 0x04, 0xb3, 0x8a, 0xf9, 0xc5, 0x7b, 0xa3, 0xe0, 0x4e, 0xa8, 0x3d,
	0x41, 0x1b, 0x1e, 0x93, 0x15, 0xc7, 0xe5, 0x38, 0x7b, 0x63, 0xc4, 0x9c, 0x50, 0xaa, 0xca, 0xdd,
	0x4a, 0x65, 0xee, 0xf0, 0x23, 0x84, 0xc7, 0x23, 0xd2, 0xc2, 0x39, 0xde, 0xae, 0x8f, 0x71, 0xb4,
	0xf8, 0x7d, 0x74, 0xad, 0x8c, 0x42, 0x0b, 0x5f, 0x51, 0xc2, 0x57, 0x0b, 0xba, 0x16, 0xdd, 0x46,
	0x57, 0x0b, 0xcf, 0xb5, 0x64, 0x4d, 0x49, 0x7e, 0x30, 0x22, 0x97, 0x82, 0x63, 0x60, 0xe9, 0x71,
	0x1f, 0xd4, 0xce, 0xad, 0x3b, 0x1f, 0x94, 0xe4, 0x43, 0xee, 0x83, 0xb5, 0x37, 0xd5, 0x66, 0x5f,
	0x50, 0x21, 0xcb, 0xef, 0xc3, 0x2e, 0x8d, 0x3a, 0x90, 0xdd, 0x79, 0x46, 0x6d, 0x66, 0xfd, 0xc7,
	0x98, 0x6a, 0x8c, 0x33, 0x34, 0x74, 0x63, 0x1c, 0xa2, 0x8f, 0x4a, 0x2c, 0x0f, 0xe8, 0xd8, 0x4b,
	0xca, 0xf5, 0x94, 0xb8, 0xde, 0xa9, 0xe5, 0xe6, 0xcf, 0x6c, 0x8e, 0xde, 0x42, 0xb9, 0x45, 0xfc,
	0xd9, 0xf8, 0xc5, 0x40, 0x19, 0x81, 0x6c, 0xb8, 0x46, 0x16, 0xf2, 0xdb, 0xac, 0x39, 0x61, 0x41,
	0x4d, 0x9f, 0x56, 0x3f, 0x40, 0x1f, 0xce, 0xf3, 0x21, 0x7b, 0x3c, 0x48, 0xbd, 0x48, 0x9a, 0x95,
	0x2e, 0x38, 0x99, 0x84, 0xb5, 0x3b, 0xfb, 0xdc, 0x3a, 0xc8, 0x1f, 0x76, 0x19, 0x52, 0x9f, 0x80,
	0x97, 0x40, 0x31, 0x8d, 0x16, 0x9d, 0xbd, 0xdf, 0x57, 0x09, 0xeb, 0x0c, 0xdd, 0x46, 0x75, 0x91,
	0x93, 0xf4, 0x0e, 0x5d, 0x71, 0x6a, 0x39, 0xe1, 0x38, 0xdf, 0xc4, 0xea, 0xb7, 0x7e, 0x77, 0xea,
	0xaf, 0xfd, 0x7f, 0xd7, 0x50, 0x63, 0xec, 0x08, 0xfc, 0x3b, 0x03, 0x6d, 0x54, 0xbe, 0x26, 0xf1,
	0xae, 0x7d, 0xf1, 0xf7, 0x70, 0xf3, 0xa1, 0xbd, 0xc0, 0xfb, 0xd4, 0x6a, 0x0e, 0x86, 0xe6, 0x66,
	0xa5, 0x8c, 0x8d, 0x7f, 0x6b, 0xa0, 0x1b, 0x55, 0x5b, 0x0e, 0x3f, 0xb0, 0x2f, 0xfc, 0x6e, 0x6d,
	0xee, 0x2e, 0xb0, 0x35, 0xad, 0x5b, 0x83, 0xa1, 0xb9, 0x51, 0x25, 0x62, 0xe3, 0xbf, 0x1b, 0xc8,
	0x3a, 0x6b, 0x23, 0x38, 0x20, 0xd2, 0x40, 0xe2, 0x7d, 0x7b, 0xe1, 0x3d, 0xd6, 0x7c, 0x62, 0xff,
	0x0f, 0x7b, 0x67, 0x7b, 0x30, 0x34, 0xef, 0x9d, 0xef, 0x90, 0x8d, 0xff, 0x6c, 0xa0, 0x1b, 0x55,
	0xfb, 0x64, 0x3a, 0x8b, 0x67, 0x2d, 0xae, 0xe9, 0x2c, 0x9e, 0xb9, 0x9f, 0xac, 0xdd, 0xc1, 0xd0,
	0xdc, 0x1e, 0x89, 0x10, 0x1a, 0x11, 0x35, 0x69, 0x44, 0x83, 0x1c, 0xe9, 0xb0, 0x1e, 0x44, 0x84,
	0x12, 0xb5, 0xfa, 0xf0, 0x1f, 0x0d, 0x64, 0xce, 0xdb, 0x0d, 0xd8, 0xb6, 0x17, 0xda, 0x61, 0xcd,
	0xbd, 0x05, 0x77, 0x8e, 0x75, 0x67, 0x30, 0x34, 0xe7, 0x1f, 0xff, 0x57, 0x03, 0x7d, 0xf4, 0x12,
	0x2a, 0xd1, 0x69, 0xd4, 0x8a, 0xb6, 0xbd, 0x10, 0xfc, 0x4d, 0x7b, 0x78, 0x2e, 0xf8, 0x59, 0xf7,
	0x06, 0x43, 0x73, 0xeb, 0x6c, 0x27, 0x6c, 0xfc, 0x9b, 0x7c, 0x52, 0x66, 0x10, 0xa2, 0x62, 0x52,
	0xe6, 0x42, 0x4e, 0xc5, 0xa4, 0xcc, 0x47, 0x1c, 0xcb, 0x1c, 0x0c, 0xcd, 0xca, 0x23, 0x9b, 0x37,
	0x07, 0x43, 0xf3, 0xfa, 0x98, 0x21, 0x22, 0x20, 0xe9, 0x31, 0x0f, 0x9e, 0x7f, 0xff, 0xab, 0x4f,
	0x3a, 0x4c, 0x76, 0xd3, 0x96, 0xed, 0xf1, 0x70, 0xef, 0xf1, 0x93, 0xd3, 0xbd, 0x0e, 0x7f, 0xa4,
	0xd6, 0xc9, 0xa3, 0x04, 0x04, 0x4f, 0x13, 0x0f, 0xc4, 0x9e, 0xfa, 0x0b, 0xae, 0x95, 0xb6, 0xf7,
	0x14, 0x63, 0x2f, 0xff, 0x63, 0xee, 0xbd, 0x61, 0xfc, 0x37, 0x00, 0x00, 0xff, 0xff, 0xc0, 0xeb,
	0x40, 0x0e, 0xf1, 0x13, 0x00, 0x00,
}
