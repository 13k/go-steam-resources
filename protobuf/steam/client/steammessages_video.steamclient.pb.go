// Code generated by protoc-gen-go. DO NOT EDIT.
// source: steammessages_video.steamclient.proto

package client // import "github.com/13k/go-steam-resources/protobuf/steam/client"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type CVideo_ClientGetVideoURL_Request struct {
	VideoId              *uint64  `protobuf:"varint,1,opt,name=video_id,json=videoId" json:"video_id,omitempty"`
	ClientCellid         *uint32  `protobuf:"varint,2,opt,name=client_cellid,json=clientCellid" json:"client_cellid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CVideo_ClientGetVideoURL_Request) Reset()         { *m = CVideo_ClientGetVideoURL_Request{} }
func (m *CVideo_ClientGetVideoURL_Request) String() string { return proto.CompactTextString(m) }
func (*CVideo_ClientGetVideoURL_Request) ProtoMessage()    {}
func (*CVideo_ClientGetVideoURL_Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_video_steamclient_9eb326ede80f66b8, []int{0}
}
func (m *CVideo_ClientGetVideoURL_Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CVideo_ClientGetVideoURL_Request.Unmarshal(m, b)
}
func (m *CVideo_ClientGetVideoURL_Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CVideo_ClientGetVideoURL_Request.Marshal(b, m, deterministic)
}
func (dst *CVideo_ClientGetVideoURL_Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CVideo_ClientGetVideoURL_Request.Merge(dst, src)
}
func (m *CVideo_ClientGetVideoURL_Request) XXX_Size() int {
	return xxx_messageInfo_CVideo_ClientGetVideoURL_Request.Size(m)
}
func (m *CVideo_ClientGetVideoURL_Request) XXX_DiscardUnknown() {
	xxx_messageInfo_CVideo_ClientGetVideoURL_Request.DiscardUnknown(m)
}

var xxx_messageInfo_CVideo_ClientGetVideoURL_Request proto.InternalMessageInfo

func (m *CVideo_ClientGetVideoURL_Request) GetVideoId() uint64 {
	if m != nil && m.VideoId != nil {
		return *m.VideoId
	}
	return 0
}

func (m *CVideo_ClientGetVideoURL_Request) GetClientCellid() uint32 {
	if m != nil && m.ClientCellid != nil {
		return *m.ClientCellid
	}
	return 0
}

type CVideo_ClientGetVideoURL_Response struct {
	VideoId              *uint64  `protobuf:"varint,1,opt,name=video_id,json=videoId" json:"video_id,omitempty"`
	VideoUrl             *string  `protobuf:"bytes,2,opt,name=video_url,json=videoUrl" json:"video_url,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CVideo_ClientGetVideoURL_Response) Reset()         { *m = CVideo_ClientGetVideoURL_Response{} }
func (m *CVideo_ClientGetVideoURL_Response) String() string { return proto.CompactTextString(m) }
func (*CVideo_ClientGetVideoURL_Response) ProtoMessage()    {}
func (*CVideo_ClientGetVideoURL_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_video_steamclient_9eb326ede80f66b8, []int{1}
}
func (m *CVideo_ClientGetVideoURL_Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CVideo_ClientGetVideoURL_Response.Unmarshal(m, b)
}
func (m *CVideo_ClientGetVideoURL_Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CVideo_ClientGetVideoURL_Response.Marshal(b, m, deterministic)
}
func (dst *CVideo_ClientGetVideoURL_Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CVideo_ClientGetVideoURL_Response.Merge(dst, src)
}
func (m *CVideo_ClientGetVideoURL_Response) XXX_Size() int {
	return xxx_messageInfo_CVideo_ClientGetVideoURL_Response.Size(m)
}
func (m *CVideo_ClientGetVideoURL_Response) XXX_DiscardUnknown() {
	xxx_messageInfo_CVideo_ClientGetVideoURL_Response.DiscardUnknown(m)
}

var xxx_messageInfo_CVideo_ClientGetVideoURL_Response proto.InternalMessageInfo

func (m *CVideo_ClientGetVideoURL_Response) GetVideoId() uint64 {
	if m != nil && m.VideoId != nil {
		return *m.VideoId
	}
	return 0
}

func (m *CVideo_ClientGetVideoURL_Response) GetVideoUrl() string {
	if m != nil && m.VideoUrl != nil {
		return *m.VideoUrl
	}
	return ""
}

type VideoBookmark struct {
	AppId                     *uint32  `protobuf:"varint,1,opt,name=app_id,json=appId" json:"app_id,omitempty"`
	PlaybackPositionInSeconds *uint32  `protobuf:"varint,2,opt,name=playback_position_in_seconds,json=playbackPositionInSeconds" json:"playback_position_in_seconds,omitempty"`
	VideoTrackId              *uint64  `protobuf:"varint,3,opt,name=video_track_id,json=videoTrackId" json:"video_track_id,omitempty"`
	AudioTrackId              *uint64  `protobuf:"varint,4,opt,name=audio_track_id,json=audioTrackId" json:"audio_track_id,omitempty"`
	TimedtextTrackId          *uint64  `protobuf:"varint,5,opt,name=timedtext_track_id,json=timedtextTrackId" json:"timedtext_track_id,omitempty"`
	XXX_NoUnkeyedLiteral      struct{} `json:"-"`
	XXX_unrecognized          []byte   `json:"-"`
	XXX_sizecache             int32    `json:"-"`
}

func (m *VideoBookmark) Reset()         { *m = VideoBookmark{} }
func (m *VideoBookmark) String() string { return proto.CompactTextString(m) }
func (*VideoBookmark) ProtoMessage()    {}
func (*VideoBookmark) Descriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_video_steamclient_9eb326ede80f66b8, []int{2}
}
func (m *VideoBookmark) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VideoBookmark.Unmarshal(m, b)
}
func (m *VideoBookmark) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VideoBookmark.Marshal(b, m, deterministic)
}
func (dst *VideoBookmark) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VideoBookmark.Merge(dst, src)
}
func (m *VideoBookmark) XXX_Size() int {
	return xxx_messageInfo_VideoBookmark.Size(m)
}
func (m *VideoBookmark) XXX_DiscardUnknown() {
	xxx_messageInfo_VideoBookmark.DiscardUnknown(m)
}

var xxx_messageInfo_VideoBookmark proto.InternalMessageInfo

func (m *VideoBookmark) GetAppId() uint32 {
	if m != nil && m.AppId != nil {
		return *m.AppId
	}
	return 0
}

func (m *VideoBookmark) GetPlaybackPositionInSeconds() uint32 {
	if m != nil && m.PlaybackPositionInSeconds != nil {
		return *m.PlaybackPositionInSeconds
	}
	return 0
}

func (m *VideoBookmark) GetVideoTrackId() uint64 {
	if m != nil && m.VideoTrackId != nil {
		return *m.VideoTrackId
	}
	return 0
}

func (m *VideoBookmark) GetAudioTrackId() uint64 {
	if m != nil && m.AudioTrackId != nil {
		return *m.AudioTrackId
	}
	return 0
}

func (m *VideoBookmark) GetTimedtextTrackId() uint64 {
	if m != nil && m.TimedtextTrackId != nil {
		return *m.TimedtextTrackId
	}
	return 0
}

type CVideo_SetVideoBookmark_Notification struct {
	Bookmarks            []*VideoBookmark `protobuf:"bytes,1,rep,name=bookmarks" json:"bookmarks,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *CVideo_SetVideoBookmark_Notification) Reset()         { *m = CVideo_SetVideoBookmark_Notification{} }
func (m *CVideo_SetVideoBookmark_Notification) String() string { return proto.CompactTextString(m) }
func (*CVideo_SetVideoBookmark_Notification) ProtoMessage()    {}
func (*CVideo_SetVideoBookmark_Notification) Descriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_video_steamclient_9eb326ede80f66b8, []int{3}
}
func (m *CVideo_SetVideoBookmark_Notification) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CVideo_SetVideoBookmark_Notification.Unmarshal(m, b)
}
func (m *CVideo_SetVideoBookmark_Notification) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CVideo_SetVideoBookmark_Notification.Marshal(b, m, deterministic)
}
func (dst *CVideo_SetVideoBookmark_Notification) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CVideo_SetVideoBookmark_Notification.Merge(dst, src)
}
func (m *CVideo_SetVideoBookmark_Notification) XXX_Size() int {
	return xxx_messageInfo_CVideo_SetVideoBookmark_Notification.Size(m)
}
func (m *CVideo_SetVideoBookmark_Notification) XXX_DiscardUnknown() {
	xxx_messageInfo_CVideo_SetVideoBookmark_Notification.DiscardUnknown(m)
}

var xxx_messageInfo_CVideo_SetVideoBookmark_Notification proto.InternalMessageInfo

func (m *CVideo_SetVideoBookmark_Notification) GetBookmarks() []*VideoBookmark {
	if m != nil {
		return m.Bookmarks
	}
	return nil
}

type CVideo_GetVideoBookmarks_Request struct {
	Appids               []uint32 `protobuf:"varint,1,rep,name=appids" json:"appids,omitempty"`
	UpdatedSince         *uint32  `protobuf:"varint,2,opt,name=updated_since,json=updatedSince" json:"updated_since,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CVideo_GetVideoBookmarks_Request) Reset()         { *m = CVideo_GetVideoBookmarks_Request{} }
func (m *CVideo_GetVideoBookmarks_Request) String() string { return proto.CompactTextString(m) }
func (*CVideo_GetVideoBookmarks_Request) ProtoMessage()    {}
func (*CVideo_GetVideoBookmarks_Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_video_steamclient_9eb326ede80f66b8, []int{4}
}
func (m *CVideo_GetVideoBookmarks_Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CVideo_GetVideoBookmarks_Request.Unmarshal(m, b)
}
func (m *CVideo_GetVideoBookmarks_Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CVideo_GetVideoBookmarks_Request.Marshal(b, m, deterministic)
}
func (dst *CVideo_GetVideoBookmarks_Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CVideo_GetVideoBookmarks_Request.Merge(dst, src)
}
func (m *CVideo_GetVideoBookmarks_Request) XXX_Size() int {
	return xxx_messageInfo_CVideo_GetVideoBookmarks_Request.Size(m)
}
func (m *CVideo_GetVideoBookmarks_Request) XXX_DiscardUnknown() {
	xxx_messageInfo_CVideo_GetVideoBookmarks_Request.DiscardUnknown(m)
}

var xxx_messageInfo_CVideo_GetVideoBookmarks_Request proto.InternalMessageInfo

func (m *CVideo_GetVideoBookmarks_Request) GetAppids() []uint32 {
	if m != nil {
		return m.Appids
	}
	return nil
}

func (m *CVideo_GetVideoBookmarks_Request) GetUpdatedSince() uint32 {
	if m != nil && m.UpdatedSince != nil {
		return *m.UpdatedSince
	}
	return 0
}

type CVideo_GetVideoBookmarks_Response struct {
	Bookmarks            []*VideoBookmark `protobuf:"bytes,1,rep,name=bookmarks" json:"bookmarks,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *CVideo_GetVideoBookmarks_Response) Reset()         { *m = CVideo_GetVideoBookmarks_Response{} }
func (m *CVideo_GetVideoBookmarks_Response) String() string { return proto.CompactTextString(m) }
func (*CVideo_GetVideoBookmarks_Response) ProtoMessage()    {}
func (*CVideo_GetVideoBookmarks_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_video_steamclient_9eb326ede80f66b8, []int{5}
}
func (m *CVideo_GetVideoBookmarks_Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CVideo_GetVideoBookmarks_Response.Unmarshal(m, b)
}
func (m *CVideo_GetVideoBookmarks_Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CVideo_GetVideoBookmarks_Response.Marshal(b, m, deterministic)
}
func (dst *CVideo_GetVideoBookmarks_Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CVideo_GetVideoBookmarks_Response.Merge(dst, src)
}
func (m *CVideo_GetVideoBookmarks_Response) XXX_Size() int {
	return xxx_messageInfo_CVideo_GetVideoBookmarks_Response.Size(m)
}
func (m *CVideo_GetVideoBookmarks_Response) XXX_DiscardUnknown() {
	xxx_messageInfo_CVideo_GetVideoBookmarks_Response.DiscardUnknown(m)
}

var xxx_messageInfo_CVideo_GetVideoBookmarks_Response proto.InternalMessageInfo

func (m *CVideo_GetVideoBookmarks_Response) GetBookmarks() []*VideoBookmark {
	if m != nil {
		return m.Bookmarks
	}
	return nil
}

type CVideo_UnlockedH264_Notification struct {
	EncryptionKey        []byte   `protobuf:"bytes,1,opt,name=encryption_key,json=encryptionKey" json:"encryption_key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CVideo_UnlockedH264_Notification) Reset()         { *m = CVideo_UnlockedH264_Notification{} }
func (m *CVideo_UnlockedH264_Notification) String() string { return proto.CompactTextString(m) }
func (*CVideo_UnlockedH264_Notification) ProtoMessage()    {}
func (*CVideo_UnlockedH264_Notification) Descriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_video_steamclient_9eb326ede80f66b8, []int{6}
}
func (m *CVideo_UnlockedH264_Notification) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CVideo_UnlockedH264_Notification.Unmarshal(m, b)
}
func (m *CVideo_UnlockedH264_Notification) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CVideo_UnlockedH264_Notification.Marshal(b, m, deterministic)
}
func (dst *CVideo_UnlockedH264_Notification) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CVideo_UnlockedH264_Notification.Merge(dst, src)
}
func (m *CVideo_UnlockedH264_Notification) XXX_Size() int {
	return xxx_messageInfo_CVideo_UnlockedH264_Notification.Size(m)
}
func (m *CVideo_UnlockedH264_Notification) XXX_DiscardUnknown() {
	xxx_messageInfo_CVideo_UnlockedH264_Notification.DiscardUnknown(m)
}

var xxx_messageInfo_CVideo_UnlockedH264_Notification proto.InternalMessageInfo

func (m *CVideo_UnlockedH264_Notification) GetEncryptionKey() []byte {
	if m != nil {
		return m.EncryptionKey
	}
	return nil
}

type CFovasVideo_ClientGetOPFSettings_Request struct {
	AppId                *uint32  `protobuf:"varint,1,opt,name=app_id,json=appId" json:"app_id,omitempty"`
	ClientCellid         *uint32  `protobuf:"varint,2,opt,name=client_cellid,json=clientCellid" json:"client_cellid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CFovasVideo_ClientGetOPFSettings_Request) Reset() {
	*m = CFovasVideo_ClientGetOPFSettings_Request{}
}
func (m *CFovasVideo_ClientGetOPFSettings_Request) String() string { return proto.CompactTextString(m) }
func (*CFovasVideo_ClientGetOPFSettings_Request) ProtoMessage()    {}
func (*CFovasVideo_ClientGetOPFSettings_Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_video_steamclient_9eb326ede80f66b8, []int{7}
}
func (m *CFovasVideo_ClientGetOPFSettings_Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CFovasVideo_ClientGetOPFSettings_Request.Unmarshal(m, b)
}
func (m *CFovasVideo_ClientGetOPFSettings_Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CFovasVideo_ClientGetOPFSettings_Request.Marshal(b, m, deterministic)
}
func (dst *CFovasVideo_ClientGetOPFSettings_Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CFovasVideo_ClientGetOPFSettings_Request.Merge(dst, src)
}
func (m *CFovasVideo_ClientGetOPFSettings_Request) XXX_Size() int {
	return xxx_messageInfo_CFovasVideo_ClientGetOPFSettings_Request.Size(m)
}
func (m *CFovasVideo_ClientGetOPFSettings_Request) XXX_DiscardUnknown() {
	xxx_messageInfo_CFovasVideo_ClientGetOPFSettings_Request.DiscardUnknown(m)
}

var xxx_messageInfo_CFovasVideo_ClientGetOPFSettings_Request proto.InternalMessageInfo

func (m *CFovasVideo_ClientGetOPFSettings_Request) GetAppId() uint32 {
	if m != nil && m.AppId != nil {
		return *m.AppId
	}
	return 0
}

func (m *CFovasVideo_ClientGetOPFSettings_Request) GetClientCellid() uint32 {
	if m != nil && m.ClientCellid != nil {
		return *m.ClientCellid
	}
	return 0
}

type CFovasVideo_ClientGetOPFSettings_Response struct {
	AppId                *uint32  `protobuf:"varint,1,opt,name=app_id,json=appId" json:"app_id,omitempty"`
	OpfSettings          *string  `protobuf:"bytes,2,opt,name=opf_settings,json=opfSettings" json:"opf_settings,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CFovasVideo_ClientGetOPFSettings_Response) Reset() {
	*m = CFovasVideo_ClientGetOPFSettings_Response{}
}
func (m *CFovasVideo_ClientGetOPFSettings_Response) String() string { return proto.CompactTextString(m) }
func (*CFovasVideo_ClientGetOPFSettings_Response) ProtoMessage()    {}
func (*CFovasVideo_ClientGetOPFSettings_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_video_steamclient_9eb326ede80f66b8, []int{8}
}
func (m *CFovasVideo_ClientGetOPFSettings_Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CFovasVideo_ClientGetOPFSettings_Response.Unmarshal(m, b)
}
func (m *CFovasVideo_ClientGetOPFSettings_Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CFovasVideo_ClientGetOPFSettings_Response.Marshal(b, m, deterministic)
}
func (dst *CFovasVideo_ClientGetOPFSettings_Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CFovasVideo_ClientGetOPFSettings_Response.Merge(dst, src)
}
func (m *CFovasVideo_ClientGetOPFSettings_Response) XXX_Size() int {
	return xxx_messageInfo_CFovasVideo_ClientGetOPFSettings_Response.Size(m)
}
func (m *CFovasVideo_ClientGetOPFSettings_Response) XXX_DiscardUnknown() {
	xxx_messageInfo_CFovasVideo_ClientGetOPFSettings_Response.DiscardUnknown(m)
}

var xxx_messageInfo_CFovasVideo_ClientGetOPFSettings_Response proto.InternalMessageInfo

func (m *CFovasVideo_ClientGetOPFSettings_Response) GetAppId() uint32 {
	if m != nil && m.AppId != nil {
		return *m.AppId
	}
	return 0
}

func (m *CFovasVideo_ClientGetOPFSettings_Response) GetOpfSettings() string {
	if m != nil && m.OpfSettings != nil {
		return *m.OpfSettings
	}
	return ""
}

func init() {
	proto.RegisterType((*CVideo_ClientGetVideoURL_Request)(nil), "CVideo_ClientGetVideoURL_Request")
	proto.RegisterType((*CVideo_ClientGetVideoURL_Response)(nil), "CVideo_ClientGetVideoURL_Response")
	proto.RegisterType((*VideoBookmark)(nil), "VideoBookmark")
	proto.RegisterType((*CVideo_SetVideoBookmark_Notification)(nil), "CVideo_SetVideoBookmark_Notification")
	proto.RegisterType((*CVideo_GetVideoBookmarks_Request)(nil), "CVideo_GetVideoBookmarks_Request")
	proto.RegisterType((*CVideo_GetVideoBookmarks_Response)(nil), "CVideo_GetVideoBookmarks_Response")
	proto.RegisterType((*CVideo_UnlockedH264_Notification)(nil), "CVideo_UnlockedH264_Notification")
	proto.RegisterType((*CFovasVideo_ClientGetOPFSettings_Request)(nil), "CFovasVideo_ClientGetOPFSettings_Request")
	proto.RegisterType((*CFovasVideo_ClientGetOPFSettings_Response)(nil), "CFovasVideo_ClientGetOPFSettings_Response")
}

func init() {
	proto.RegisterFile("steammessages_video.steamclient.proto", fileDescriptor_steammessages_video_steamclient_9eb326ede80f66b8)
}

var fileDescriptor_steammessages_video_steamclient_9eb326ede80f66b8 = []byte{
	// 1222 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x56, 0x5f, 0x6f, 0x1b, 0xc5,
	0x16, 0xd7, 0xb6, 0x69, 0x6f, 0x3b, 0x89, 0xab, 0x76, 0xef, 0xd5, 0x65, 0x6b, 0x40, 0x9c, 0x1a,
	0x4a, 0x13, 0xd4, 0x6e, 0x1a, 0xb7, 0x6a, 0x84, 0x04, 0x88, 0x3a, 0x55, 0x5a, 0xb7, 0x69, 0x13,
	0x6d, 0x6a, 0x1e, 0xe0, 0xc1, 0x1a, 0xef, 0x9e, 0xb5, 0x47, 0x5e, 0xcf, 0x2c, 0x33, 0xb3, 0x4e,
	0x8d, 0x84, 0x54, 0x56, 0x42, 0x42, 0x3c, 0x20, 0x1e, 0x2b, 0x1e, 0xf8, 0x16, 0xfb, 0x0e, 0xe2,
	0x23, 0xf1, 0x05, 0xd0, 0xcc, 0xae, 0xed, 0x38, 0xfd, 0xe7, 0x07, 0x5e, 0xa2, 0xec, 0x9c, 0x73,
	0x7e, 0xe7, 0xcc, 0x39, 0xe7, 0xf7, 0x1b, 0x93, 0xab, 0x4a, 0x23, 0x1d, 0x8d, 0x50, 0x29, 0xda,
	0x47, 0xd5, 0x1d, 0xb3, 0x08, 0x85, 0x6f, 0xcf, 0xc2, 0x84, 0x21, 0xd7, 0x7e, 0x2a, 0x85, 0x16,
	0xf5, 0xeb, 0x8b, 0x6e, 0x19, 0x67, 0x31, 0xc3, 0xa8, 0xdb, 0xa3, 0x0a, 0x5f, 0xf6, 0x6e, 0xbc,
	0x70, 0x08, 0xec, 0x7c, 0x65, 0xa0, 0xba, 0x3b, 0xf6, 0xfc, 0x3e, 0x6a, 0xfb, 0xd9, 0x09, 0xf6,
	0xba, 0x01, 0x7e, 0x9b, 0xa1, 0xd2, 0xee, 0x35, 0x72, 0xce, 0x66, 0xeb, 0xb2, 0xc8, 0x73, 0xc0,
	0x59, 0x5f, 0x69, 0xad, 0xe5, 0x85, 0x77, 0xce, 0xfa, 0x41, 0xfb, 0x5e, 0xf0, 0x1f, 0x6b, 0x6d,
	0x47, 0xee, 0x23, 0x52, 0x2b, 0xd1, 0xbb, 0x21, 0x26, 0x09, 0x8b, 0xbc, 0x53, 0xe0, 0xac, 0xd7,
	0x5a, 0x1f, 0xe7, 0x85, 0xd7, 0xd8, 0xc1, 0x24, 0x81, 0xf6, 0x3d, 0x10, 0x31, 0x94, 0x3e, 0xd7,
	0xe1, 0x3b, 0x94, 0x02, 0x58, 0x0c, 0x19, 0x1f, 0x72, 0x71, 0xc4, 0x83, 0xb5, 0xd2, 0xb0, 0x63,
	0x63, 0x1b, 0x3f, 0x3a, 0xe4, 0xca, 0x1b, 0x4a, 0x53, 0xa9, 0xe0, 0x0a, 0x97, 0xaf, 0x6d, 0x9b,
	0x9c, 0x2f, 0x1d, 0x33, 0x99, 0xd8, 0xba, 0xce, 0xb7, 0xea, 0x79, 0xe1, 0xfd, 0xbf, 0x13, 0xec,
	0x41, 0x2c, 0x24, 0x58, 0x23, 0x8c, 0x28, 0x67, 0x31, 0x2a, 0x1d, 0x94, 0xa8, 0x1d, 0x99, 0x34,
	0x7e, 0x38, 0x4d, 0x6a, 0x16, 0xae, 0x25, 0xc4, 0x70, 0x44, 0xe5, 0xd0, 0xbd, 0x42, 0xce, 0xd2,
	0x34, 0x9d, 0x66, 0xac, 0xb5, 0x48, 0x5e, 0x78, 0x67, 0xef, 0xa6, 0xa9, 0xc9, 0x77, 0x86, 0xa6,
	0x69, 0x3b, 0x72, 0x9f, 0x91, 0xf7, 0xd2, 0x84, 0x4e, 0x7a, 0x34, 0x1c, 0x76, 0x53, 0xa1, 0x98,
	0x66, 0x82, 0x77, 0x19, 0xef, 0x2a, 0x0c, 0x05, 0x8f, 0x54, 0xd5, 0x98, 0xed, 0xbc, 0xf0, 0x6e,
	0x3d, 0x10, 0x47, 0x26, 0xed, 0x04, 0x2a, 0x1b, 0x30, 0xae, 0x05, 0xe8, 0x01, 0x56, 0x25, 0x99,
	0xff, 0x7a, 0x55, 0x6a, 0x60, 0xca, 0x14, 0x1b, 0x5c, 0x9e, 0x82, 0x1f, 0x54, 0xd8, 0x6d, 0x7e,
	0x58, 0x46, 0xbb, 0x9f, 0x93, 0x0b, 0xe5, 0x3d, 0xb5, 0x34, 0xc9, 0x59, 0xe4, 0x9d, 0xb6, 0x6d,
	0x79, 0x27, 0x2f, 0xbc, 0xff, 0x56, 0x88, 0xc6, 0x02, 0xe1, 0x40, 0xb0, 0x10, 0xfd, 0x60, 0xcd,
	0x1e, 0x3e, 0x35, 0x67, 0xed, 0xc8, 0x84, 0xd3, 0x2c, 0x62, 0xc7, 0xc2, 0x57, 0xe6, 0xe1, 0xd6,
	0x72, 0x32, 0xdc, 0x1e, 0x4e, 0xc3, 0x3b, 0xc4, 0xd5, 0x6c, 0x84, 0x91, 0xc6, 0x67, 0x7a, 0x0e,
	0x71, 0xc6, 0x42, 0x5c, 0xcb, 0x0b, 0xef, 0xc3, 0xd2, 0x6a, 0xfe, 0x80, 0x90, 0xa0, 0xb2, 0x9e,
	0x66, 0x3a, 0xc1, 0x05, 0xcc, 0xe0, 0xe2, 0x0c, 0xa2, 0x82, 0x6d, 0x7c, 0x4f, 0x3e, 0xaa, 0x56,
	0xe1, 0xb0, 0x5a, 0x82, 0xe9, 0x30, 0xba, 0x4f, 0x84, 0x66, 0x31, 0x0b, 0xa9, 0xe9, 0x82, 0xdb,
	0x21, 0xe7, 0xa7, 0xad, 0x52, 0x9e, 0x03, 0xa7, 0xd7, 0x57, 0x9b, 0x17, 0xfc, 0x05, 0xff, 0xb2,
	0x8a, 0x84, 0x29, 0x6d, 0x36, 0x71, 0xe6, 0x0c, 0x47, 0x08, 0x47, 0x94, 0x6b, 0xd0, 0x02, 0x94,
	0x16, 0x12, 0xfd, 0x60, 0x8e, 0xd4, 0x78, 0x71, 0x6a, 0xc6, 0x92, 0xfb, 0x27, 0xf2, 0xab, 0x19,
	0x4b, 0xfa, 0x76, 0x2b, 0x58, 0x54, 0x26, 0xae, 0xb5, 0xf6, 0xf3, 0xc2, 0x7b, 0xb4, 0x57, 0x25,
	0x2a, 0xb7, 0x43, 0x19, 0xf8, 0xbe, 0xa4, 0xbd, 0x63, 0x89, 0x63, 0x21, 0x7d, 0xd8, 0xa1, 0x1c,
	0x7a, 0x08, 0x38, 0x4a, 0xf5, 0xc4, 0x32, 0x42, 0x31, 0xde, 0x87, 0x2c, 0x8d, 0xa8, 0xc6, 0xa8,
	0xab, 0x18, 0x37, 0x9d, 0xae, 0xe0, 0xdd, 0x9f, 0x1d, 0x52, 0x5b, 0x30, 0x55, 0xdb, 0x84, 0x79,
	0xe1, 0xd1, 0x7d, 0x9e, 0x4c, 0x40, 0xa2, 0xce, 0x24, 0x07, 0x89, 0x2a, 0x4b, 0xb4, 0x02, 0x1a,
	0x6b, 0x94, 0x60, 0x9a, 0xea, 0xc3, 0x63, 0xc6, 0x61, 0x4c, 0x93, 0x0c, 0xcd, 0x2a, 0x6d, 0xf9,
	0xb0, 0x3e, 0xdd, 0x3a, 0x8b, 0x04, 0x98, 0x8a, 0x70, 0x00, 0x0f, 0x29, 0xcf, 0xa8, 0x9c, 0xc0,
	0x96, 0xd2, 0xd7, 0x61, 0xeb, 0xd3, 0xed, 0x9b, 0xd0, 0xe1, 0xec, 0x19, 0x3c, 0x65, 0x23, 0xdc,
	0x08, 0xd6, 0xaa, 0xdc, 0x87, 0x26, 0xa0, 0xf1, 0x7c, 0xce, 0xd2, 0x57, 0xb5, 0xa6, 0x62, 0xe9,
	0x37, 0x6f, 0x9f, 0xcb, 0x8d, 0xbc, 0xf0, 0x36, 0xf6, 0x5e, 0x35, 0x97, 0x58, 0x64, 0x3c, 0x5a,
	0xec, 0xd1, 0xc2, 0x74, 0xda, 0xb3, 0xe1, 0x74, 0x78, 0x22, 0xc2, 0x21, 0x46, 0x0f, 0x9a, 0x77,
	0x6e, 0x2f, 0x2e, 0xc6, 0x55, 0x72, 0x01, 0x79, 0x28, 0x27, 0xa9, 0x25, 0xe2, 0x10, 0x27, 0x96,
	0xba, 0x6b, 0x41, 0x6d, 0x7e, 0xfa, 0x08, 0x27, 0x8d, 0xdf, 0x1c, 0xb2, 0xbe, 0xb3, 0x2b, 0xc6,
	0x54, 0x9d, 0x10, 0x9e, 0xfd, 0x83, 0xdd, 0x43, 0xd4, 0x9a, 0xf1, 0xfe, 0x7c, 0xe0, 0x4b, 0xc8,
	0xc0, 0xbf, 0x2a, 0x88, 0xbf, 0x3a, 0x64, 0x63, 0x89, 0xe2, 0xaa, 0x96, 0x2f, 0x51, 0xdd, 0x97,
	0x64, 0x4d, 0xa4, 0x71, 0x57, 0x55, 0xb1, 0x95, 0x2a, 0xbe, 0x9f, 0x17, 0xde, 0xe5, 0x87, 0x87,
	0xfb, 0x4f, 0xa0, 0x97, 0x88, 0x9e, 0x29, 0x6f, 0xff, 0x60, 0x17, 0xa6, 0x09, 0x82, 0x55, 0x91,
	0xc6, 0xd3, 0x8f, 0x66, 0xb1, 0x42, 0xce, 0xd8, 0x62, 0xdc, 0x5f, 0x1c, 0x72, 0xe9, 0x25, 0x99,
	0x76, 0xaf, 0xf8, 0x6f, 0x7b, 0x5c, 0xea, 0x0d, 0xff, 0xad, 0x22, 0xdf, 0x68, 0xe6, 0x85, 0xe7,
	0xdf, 0x47, 0x6d, 0xb5, 0x90, 0x71, 0xa6, 0x19, 0x4d, 0xc0, 0x08, 0xb7, 0x16, 0xd0, 0xc3, 0x3e,
	0xe3, 0xa0, 0xb4, 0x44, 0x3a, 0x32, 0xa4, 0xa1, 0xa5, 0x6c, 0xba, 0x7f, 0x3a, 0xe4, 0xe2, 0x49,
	0xb1, 0x70, 0xaf, 0xfa, 0xcb, 0xc8, 0x48, 0x7d, 0xd5, 0x7f, 0x22, 0x66, 0xc9, 0x27, 0x79, 0xe1,
	0x65, 0xb3, 0x9d, 0xb6, 0x25, 0x24, 0xa2, 0x74, 0x34, 0x5a, 0x7d, 0x42, 0xa9, 0x33, 0x85, 0x12,
	0x06, 0x54, 0x81, 0x44, 0x1a, 0x0e, 0x30, 0xf2, 0xe1, 0xae, 0x02, 0xfb, 0x19, 0x0a, 0x19, 0xc1,
	0x54, 0xb7, 0x61, 0xda, 0x74, 0x48, 0xb1, 0x7a, 0x7b, 0x7c, 0xd8, 0x65, 0x12, 0x81, 0xf2, 0xc8,
	0x68, 0x42, 0x1f, 0xb5, 0xef, 0xfe, 0xe5, 0x90, 0x4b, 0x2f, 0xb1, 0x6a, 0xde, 0xd4, 0xd7, 0x6a,
	0xd1, 0xbc, 0xa9, 0xaf, 0xe7, 0x64, 0xa3, 0x9f, 0x17, 0x5e, 0x18, 0x58, 0xa5, 0x50, 0xc7, 0x2e,
	0x31, 0xa7, 0xde, 0xfc, 0x96, 0xe6, 0x7d, 0x34, 0x1e, 0x2a, 0xc5, 0xd0, 0x74, 0xa9, 0x74, 0x55,
	0x3e, 0xb4, 0x79, 0x98, 0x64, 0x11, 0xaa, 0x37, 0xdd, 0xab, 0x7e, 0x29, 0x2f, 0xbc, 0xf2, 0x05,
	0x85, 0x11, 0xea, 0x81, 0x88, 0x54, 0xf3, 0x77, 0x87, 0xac, 0xda, 0x93, 0x72, 0xe8, 0xee, 0x4f,
	0x0e, 0x71, 0xed, 0x04, 0x26, 0xc7, 0x29, 0x3c, 0xbf, 0xe9, 0x6b, 0x89, 0xbd, 0x38, 0xaa, 0x56,
	0x5e, 0x78, 0x5f, 0x1c, 0x37, 0x43, 0x2c, 0xc5, 0x08, 0x14, 0xca, 0xb1, 0x11, 0x40, 0x51, 0x11,
	0x0d, 0xf4, 0x80, 0x6a, 0x18, 0x34, 0xef, 0xdc, 0xb6, 0x93, 0xea, 0x21, 0x72, 0xc8, 0xaa, 0x0c,
	0xf5, 0x95, 0x3f, 0x0a, 0xef, 0x54, 0xf3, 0x6f, 0x87, 0x90, 0x39, 0xd5, 0xcc, 0x20, 0xfe, 0xf7,
	0x2a, 0xba, 0xb9, 0x1b, 0xfe, 0xb2, 0x72, 0x51, 0xff, 0xc4, 0x5f, 0x9a, 0xbc, 0x8d, 0xa7, 0x79,
	0xe1, 0x1d, 0x04, 0xa8, 0x25, 0xc3, 0x31, 0xda, 0xd6, 0x1b, 0x0e, 0xce, 0x7a, 0x3b, 0x63, 0xa7,
	0x0f, 0x77, 0xc7, 0x94, 0x25, 0xb4, 0x97, 0x98, 0xf1, 0x51, 0xeb, 0x59, 0x22, 0xdb, 0x99, 0xdd,
	0xba, 0x73, 0x13, 0x0e, 0x12, 0x3a, 0x41, 0x69, 0x1e, 0xa0, 0xfa, 0x07, 0x79, 0xe1, 0xbd, 0x6b,
	0x6b, 0x80, 0x72, 0x1c, 0x87, 0x28, 0xc7, 0x2c, 0x44, 0x78, 0x5c, 0x8e, 0xa5, 0xf5, 0xd9, 0xd7,
	0xdb, 0x7d, 0xa6, 0x07, 0x59, 0xcf, 0x0f, 0xc5, 0x68, 0x73, 0xeb, 0xd6, 0x70, 0xb3, 0x2f, 0x6e,
	0xd8, 0x1f, 0x8d, 0x37, 0x24, 0x2a, 0x91, 0xc9, 0x10, 0xd5, 0xa6, 0xfd, 0xe1, 0xd8, 0xcb, 0xe2,
	0x4d, 0x6b, 0xd8, 0x2c, 0x5b, 0xfa, 0xdc, 0x71, 0xfe, 0x09, 0x00, 0x00, 0xff, 0xff, 0x75, 0xb0,
	0xe2, 0xb7, 0xa1, 0x0a, 0x00, 0x00,
}
