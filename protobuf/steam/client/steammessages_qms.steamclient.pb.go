// Code generated by protoc-gen-go. DO NOT EDIT.
// source: steammessages_qms.steamclient.proto

package client // import "github.com/13k/go-steam-resources/protobuf/steam/client"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type EGameSearchAction int32

const (
	EGameSearchAction_k_EGameSearchAction_None    EGameSearchAction = 0
	EGameSearchAction_k_EGameSearchAction_Accept  EGameSearchAction = 1
	EGameSearchAction_k_EGameSearchAction_Decline EGameSearchAction = 2
	EGameSearchAction_k_EGameSearchAction_Cancel  EGameSearchAction = 3
)

var EGameSearchAction_name = map[int32]string{
	0: "k_EGameSearchAction_None",
	1: "k_EGameSearchAction_Accept",
	2: "k_EGameSearchAction_Decline",
	3: "k_EGameSearchAction_Cancel",
}
var EGameSearchAction_value = map[string]int32{
	"k_EGameSearchAction_None":    0,
	"k_EGameSearchAction_Accept":  1,
	"k_EGameSearchAction_Decline": 2,
	"k_EGameSearchAction_Cancel":  3,
}

func (x EGameSearchAction) Enum() *EGameSearchAction {
	p := new(EGameSearchAction)
	*p = x
	return p
}
func (x EGameSearchAction) String() string {
	return proto.EnumName(EGameSearchAction_name, int32(x))
}
func (x *EGameSearchAction) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EGameSearchAction_value, data, "EGameSearchAction")
	if err != nil {
		return err
	}
	*x = EGameSearchAction(value)
	return nil
}
func (EGameSearchAction) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_qms_steamclient_2f0fe2304ffe7914, []int{0}
}

type EGameSearchResult int32

const (
	EGameSearchResult_k_EGameSearchResult_Invalid                EGameSearchResult = 0
	EGameSearchResult_k_EGameSearchResult_SearchInProgress       EGameSearchResult = 1
	EGameSearchResult_k_EGameSearchResult_SearchFailedNoHosts    EGameSearchResult = 2
	EGameSearchResult_k_EGameSearchResult_SearchGameFound        EGameSearchResult = 3
	EGameSearchResult_k_EGameSearchResult_SearchCompleteAccepted EGameSearchResult = 4
	EGameSearchResult_k_EGameSearchResult_SearchCompleteDeclined EGameSearchResult = 5
	EGameSearchResult_k_EGameSearchResult_SearchCanceled         EGameSearchResult = 6
)

var EGameSearchResult_name = map[int32]string{
	0: "k_EGameSearchResult_Invalid",
	1: "k_EGameSearchResult_SearchInProgress",
	2: "k_EGameSearchResult_SearchFailedNoHosts",
	3: "k_EGameSearchResult_SearchGameFound",
	4: "k_EGameSearchResult_SearchCompleteAccepted",
	5: "k_EGameSearchResult_SearchCompleteDeclined",
	6: "k_EGameSearchResult_SearchCanceled",
}
var EGameSearchResult_value = map[string]int32{
	"k_EGameSearchResult_Invalid":                0,
	"k_EGameSearchResult_SearchInProgress":       1,
	"k_EGameSearchResult_SearchFailedNoHosts":    2,
	"k_EGameSearchResult_SearchGameFound":        3,
	"k_EGameSearchResult_SearchCompleteAccepted": 4,
	"k_EGameSearchResult_SearchCompleteDeclined": 5,
	"k_EGameSearchResult_SearchCanceled":         6,
}

func (x EGameSearchResult) Enum() *EGameSearchResult {
	p := new(EGameSearchResult)
	*p = x
	return p
}
func (x EGameSearchResult) String() string {
	return proto.EnumName(EGameSearchResult_name, int32(x))
}
func (x *EGameSearchResult) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EGameSearchResult_value, data, "EGameSearchResult")
	if err != nil {
		return err
	}
	*x = EGameSearchResult(value)
	return nil
}
func (EGameSearchResult) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_qms_steamclient_2f0fe2304ffe7914, []int{1}
}

type GameSearchParam struct {
	KeyName              *string  `protobuf:"bytes,1,opt,name=key_name,json=keyName" json:"key_name,omitempty"`
	Value                []string `protobuf:"bytes,2,rep,name=value" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GameSearchParam) Reset()         { *m = GameSearchParam{} }
func (m *GameSearchParam) String() string { return proto.CompactTextString(m) }
func (*GameSearchParam) ProtoMessage()    {}
func (*GameSearchParam) Descriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_qms_steamclient_2f0fe2304ffe7914, []int{0}
}
func (m *GameSearchParam) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GameSearchParam.Unmarshal(m, b)
}
func (m *GameSearchParam) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GameSearchParam.Marshal(b, m, deterministic)
}
func (dst *GameSearchParam) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GameSearchParam.Merge(dst, src)
}
func (m *GameSearchParam) XXX_Size() int {
	return xxx_messageInfo_GameSearchParam.Size(m)
}
func (m *GameSearchParam) XXX_DiscardUnknown() {
	xxx_messageInfo_GameSearchParam.DiscardUnknown(m)
}

var xxx_messageInfo_GameSearchParam proto.InternalMessageInfo

func (m *GameSearchParam) GetKeyName() string {
	if m != nil && m.KeyName != nil {
		return *m.KeyName
	}
	return ""
}

func (m *GameSearchParam) GetValue() []string {
	if m != nil {
		return m.Value
	}
	return nil
}

type CQueuedMatchmaking_SearchForGame_Request struct {
	Appid                *uint32            `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	Action               *EGameSearchAction `protobuf:"varint,2,opt,name=action,enum=EGameSearchAction,def=0" json:"action,omitempty"`
	Params               []*GameSearchParam `protobuf:"bytes,3,rep,name=params" json:"params,omitempty"`
	PlayerMin            *uint32            `protobuf:"varint,4,opt,name=player_min,json=playerMin" json:"player_min,omitempty"`
	PlayerMax            *uint32            `protobuf:"varint,5,opt,name=player_max,json=playerMax" json:"player_max,omitempty"`
	Steamidlobby         *uint64            `protobuf:"fixed64,6,opt,name=steamidlobby" json:"steamidlobby,omitempty"`
	Searchid             *uint64            `protobuf:"varint,7,opt,name=searchid" json:"searchid,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *CQueuedMatchmaking_SearchForGame_Request) Reset() {
	*m = CQueuedMatchmaking_SearchForGame_Request{}
}
func (m *CQueuedMatchmaking_SearchForGame_Request) String() string { return proto.CompactTextString(m) }
func (*CQueuedMatchmaking_SearchForGame_Request) ProtoMessage()    {}
func (*CQueuedMatchmaking_SearchForGame_Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_qms_steamclient_2f0fe2304ffe7914, []int{1}
}
func (m *CQueuedMatchmaking_SearchForGame_Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CQueuedMatchmaking_SearchForGame_Request.Unmarshal(m, b)
}
func (m *CQueuedMatchmaking_SearchForGame_Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CQueuedMatchmaking_SearchForGame_Request.Marshal(b, m, deterministic)
}
func (dst *CQueuedMatchmaking_SearchForGame_Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CQueuedMatchmaking_SearchForGame_Request.Merge(dst, src)
}
func (m *CQueuedMatchmaking_SearchForGame_Request) XXX_Size() int {
	return xxx_messageInfo_CQueuedMatchmaking_SearchForGame_Request.Size(m)
}
func (m *CQueuedMatchmaking_SearchForGame_Request) XXX_DiscardUnknown() {
	xxx_messageInfo_CQueuedMatchmaking_SearchForGame_Request.DiscardUnknown(m)
}

var xxx_messageInfo_CQueuedMatchmaking_SearchForGame_Request proto.InternalMessageInfo

const Default_CQueuedMatchmaking_SearchForGame_Request_Action EGameSearchAction = EGameSearchAction_k_EGameSearchAction_None

func (m *CQueuedMatchmaking_SearchForGame_Request) GetAppid() uint32 {
	if m != nil && m.Appid != nil {
		return *m.Appid
	}
	return 0
}

func (m *CQueuedMatchmaking_SearchForGame_Request) GetAction() EGameSearchAction {
	if m != nil && m.Action != nil {
		return *m.Action
	}
	return Default_CQueuedMatchmaking_SearchForGame_Request_Action
}

func (m *CQueuedMatchmaking_SearchForGame_Request) GetParams() []*GameSearchParam {
	if m != nil {
		return m.Params
	}
	return nil
}

func (m *CQueuedMatchmaking_SearchForGame_Request) GetPlayerMin() uint32 {
	if m != nil && m.PlayerMin != nil {
		return *m.PlayerMin
	}
	return 0
}

func (m *CQueuedMatchmaking_SearchForGame_Request) GetPlayerMax() uint32 {
	if m != nil && m.PlayerMax != nil {
		return *m.PlayerMax
	}
	return 0
}

func (m *CQueuedMatchmaking_SearchForGame_Request) GetSteamidlobby() uint64 {
	if m != nil && m.Steamidlobby != nil {
		return *m.Steamidlobby
	}
	return 0
}

func (m *CQueuedMatchmaking_SearchForGame_Request) GetSearchid() uint64 {
	if m != nil && m.Searchid != nil {
		return *m.Searchid
	}
	return 0
}

type CQueuedMatchmaking_SearchForGame_Response struct {
	Gamesearchresult      *EGameSearchResult `protobuf:"varint,1,opt,name=gamesearchresult,enum=EGameSearchResult,def=0" json:"gamesearchresult,omitempty"`
	Searchid              *uint64            `protobuf:"varint,2,opt,name=searchid" json:"searchid,omitempty"`
	SecondsTimeEstimate   *uint32            `protobuf:"varint,3,opt,name=seconds_time_estimate,json=secondsTimeEstimate" json:"seconds_time_estimate,omitempty"`
	PollFrequency         *uint32            `protobuf:"varint,4,opt,name=poll_frequency,json=pollFrequency" json:"poll_frequency,omitempty"`
	CountSearching        *uint32            `protobuf:"varint,5,opt,name=count_searching,json=countSearching" json:"count_searching,omitempty"`
	PlayersInMatch        *uint32            `protobuf:"varint,6,opt,name=players_in_match,json=playersInMatch" json:"players_in_match,omitempty"`
	PlayersAccepted       *uint32            `protobuf:"varint,7,opt,name=players_accepted,json=playersAccepted" json:"players_accepted,omitempty"`
	ConnectString         *string            `protobuf:"bytes,9,opt,name=connect_string,json=connectString" json:"connect_string,omitempty"`
	Steamidhost           *uint64            `protobuf:"fixed64,10,opt,name=steamidhost" json:"steamidhost,omitempty"`
	RtimeMatchMade        *uint32            `protobuf:"varint,11,opt,name=rtime_match_made,json=rtimeMatchMade" json:"rtime_match_made,omitempty"`
	RtimeNow              *uint32            `protobuf:"varint,12,opt,name=rtime_now,json=rtimeNow" json:"rtime_now,omitempty"`
	SteamidCanceledSearch *uint64            `protobuf:"fixed64,13,opt,name=steamid_canceled_search,json=steamidCanceledSearch" json:"steamid_canceled_search,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}           `json:"-"`
	XXX_unrecognized      []byte             `json:"-"`
	XXX_sizecache         int32              `json:"-"`
}

func (m *CQueuedMatchmaking_SearchForGame_Response) Reset() {
	*m = CQueuedMatchmaking_SearchForGame_Response{}
}
func (m *CQueuedMatchmaking_SearchForGame_Response) String() string { return proto.CompactTextString(m) }
func (*CQueuedMatchmaking_SearchForGame_Response) ProtoMessage()    {}
func (*CQueuedMatchmaking_SearchForGame_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_qms_steamclient_2f0fe2304ffe7914, []int{2}
}
func (m *CQueuedMatchmaking_SearchForGame_Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CQueuedMatchmaking_SearchForGame_Response.Unmarshal(m, b)
}
func (m *CQueuedMatchmaking_SearchForGame_Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CQueuedMatchmaking_SearchForGame_Response.Marshal(b, m, deterministic)
}
func (dst *CQueuedMatchmaking_SearchForGame_Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CQueuedMatchmaking_SearchForGame_Response.Merge(dst, src)
}
func (m *CQueuedMatchmaking_SearchForGame_Response) XXX_Size() int {
	return xxx_messageInfo_CQueuedMatchmaking_SearchForGame_Response.Size(m)
}
func (m *CQueuedMatchmaking_SearchForGame_Response) XXX_DiscardUnknown() {
	xxx_messageInfo_CQueuedMatchmaking_SearchForGame_Response.DiscardUnknown(m)
}

var xxx_messageInfo_CQueuedMatchmaking_SearchForGame_Response proto.InternalMessageInfo

const Default_CQueuedMatchmaking_SearchForGame_Response_Gamesearchresult EGameSearchResult = EGameSearchResult_k_EGameSearchResult_Invalid

func (m *CQueuedMatchmaking_SearchForGame_Response) GetGamesearchresult() EGameSearchResult {
	if m != nil && m.Gamesearchresult != nil {
		return *m.Gamesearchresult
	}
	return Default_CQueuedMatchmaking_SearchForGame_Response_Gamesearchresult
}

func (m *CQueuedMatchmaking_SearchForGame_Response) GetSearchid() uint64 {
	if m != nil && m.Searchid != nil {
		return *m.Searchid
	}
	return 0
}

func (m *CQueuedMatchmaking_SearchForGame_Response) GetSecondsTimeEstimate() uint32 {
	if m != nil && m.SecondsTimeEstimate != nil {
		return *m.SecondsTimeEstimate
	}
	return 0
}

func (m *CQueuedMatchmaking_SearchForGame_Response) GetPollFrequency() uint32 {
	if m != nil && m.PollFrequency != nil {
		return *m.PollFrequency
	}
	return 0
}

func (m *CQueuedMatchmaking_SearchForGame_Response) GetCountSearching() uint32 {
	if m != nil && m.CountSearching != nil {
		return *m.CountSearching
	}
	return 0
}

func (m *CQueuedMatchmaking_SearchForGame_Response) GetPlayersInMatch() uint32 {
	if m != nil && m.PlayersInMatch != nil {
		return *m.PlayersInMatch
	}
	return 0
}

func (m *CQueuedMatchmaking_SearchForGame_Response) GetPlayersAccepted() uint32 {
	if m != nil && m.PlayersAccepted != nil {
		return *m.PlayersAccepted
	}
	return 0
}

func (m *CQueuedMatchmaking_SearchForGame_Response) GetConnectString() string {
	if m != nil && m.ConnectString != nil {
		return *m.ConnectString
	}
	return ""
}

func (m *CQueuedMatchmaking_SearchForGame_Response) GetSteamidhost() uint64 {
	if m != nil && m.Steamidhost != nil {
		return *m.Steamidhost
	}
	return 0
}

func (m *CQueuedMatchmaking_SearchForGame_Response) GetRtimeMatchMade() uint32 {
	if m != nil && m.RtimeMatchMade != nil {
		return *m.RtimeMatchMade
	}
	return 0
}

func (m *CQueuedMatchmaking_SearchForGame_Response) GetRtimeNow() uint32 {
	if m != nil && m.RtimeNow != nil {
		return *m.RtimeNow
	}
	return 0
}

func (m *CQueuedMatchmaking_SearchForGame_Response) GetSteamidCanceledSearch() uint64 {
	if m != nil && m.SteamidCanceledSearch != nil {
		return *m.SteamidCanceledSearch
	}
	return 0
}

type CQueuedMatchmakingGameHost_SearchForPlayers_Request struct {
	Appid                *uint32            `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	Action               *EGameSearchAction `protobuf:"varint,2,opt,name=action,enum=EGameSearchAction,def=0" json:"action,omitempty"`
	Params               []*GameSearchParam `protobuf:"bytes,3,rep,name=params" json:"params,omitempty"`
	PlayerMin            *uint32            `protobuf:"varint,4,opt,name=player_min,json=playerMin" json:"player_min,omitempty"`
	PlayerMax            *uint32            `protobuf:"varint,5,opt,name=player_max,json=playerMax" json:"player_max,omitempty"`
	PlayerMaxTeamSize    *uint32            `protobuf:"varint,6,opt,name=player_max_team_size,json=playerMaxTeamSize" json:"player_max_team_size,omitempty"`
	ConnectionString     *string            `protobuf:"bytes,7,opt,name=connection_string,json=connectionString" json:"connection_string,omitempty"`
	Searchid             *uint64            `protobuf:"varint,8,opt,name=searchid" json:"searchid,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *CQueuedMatchmakingGameHost_SearchForPlayers_Request) Reset() {
	*m = CQueuedMatchmakingGameHost_SearchForPlayers_Request{}
}
func (m *CQueuedMatchmakingGameHost_SearchForPlayers_Request) String() string {
	return proto.CompactTextString(m)
}
func (*CQueuedMatchmakingGameHost_SearchForPlayers_Request) ProtoMessage() {}
func (*CQueuedMatchmakingGameHost_SearchForPlayers_Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_qms_steamclient_2f0fe2304ffe7914, []int{3}
}
func (m *CQueuedMatchmakingGameHost_SearchForPlayers_Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CQueuedMatchmakingGameHost_SearchForPlayers_Request.Unmarshal(m, b)
}
func (m *CQueuedMatchmakingGameHost_SearchForPlayers_Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CQueuedMatchmakingGameHost_SearchForPlayers_Request.Marshal(b, m, deterministic)
}
func (dst *CQueuedMatchmakingGameHost_SearchForPlayers_Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CQueuedMatchmakingGameHost_SearchForPlayers_Request.Merge(dst, src)
}
func (m *CQueuedMatchmakingGameHost_SearchForPlayers_Request) XXX_Size() int {
	return xxx_messageInfo_CQueuedMatchmakingGameHost_SearchForPlayers_Request.Size(m)
}
func (m *CQueuedMatchmakingGameHost_SearchForPlayers_Request) XXX_DiscardUnknown() {
	xxx_messageInfo_CQueuedMatchmakingGameHost_SearchForPlayers_Request.DiscardUnknown(m)
}

var xxx_messageInfo_CQueuedMatchmakingGameHost_SearchForPlayers_Request proto.InternalMessageInfo

const Default_CQueuedMatchmakingGameHost_SearchForPlayers_Request_Action EGameSearchAction = EGameSearchAction_k_EGameSearchAction_None

func (m *CQueuedMatchmakingGameHost_SearchForPlayers_Request) GetAppid() uint32 {
	if m != nil && m.Appid != nil {
		return *m.Appid
	}
	return 0
}

func (m *CQueuedMatchmakingGameHost_SearchForPlayers_Request) GetAction() EGameSearchAction {
	if m != nil && m.Action != nil {
		return *m.Action
	}
	return Default_CQueuedMatchmakingGameHost_SearchForPlayers_Request_Action
}

func (m *CQueuedMatchmakingGameHost_SearchForPlayers_Request) GetParams() []*GameSearchParam {
	if m != nil {
		return m.Params
	}
	return nil
}

func (m *CQueuedMatchmakingGameHost_SearchForPlayers_Request) GetPlayerMin() uint32 {
	if m != nil && m.PlayerMin != nil {
		return *m.PlayerMin
	}
	return 0
}

func (m *CQueuedMatchmakingGameHost_SearchForPlayers_Request) GetPlayerMax() uint32 {
	if m != nil && m.PlayerMax != nil {
		return *m.PlayerMax
	}
	return 0
}

func (m *CQueuedMatchmakingGameHost_SearchForPlayers_Request) GetPlayerMaxTeamSize() uint32 {
	if m != nil && m.PlayerMaxTeamSize != nil {
		return *m.PlayerMaxTeamSize
	}
	return 0
}

func (m *CQueuedMatchmakingGameHost_SearchForPlayers_Request) GetConnectionString() string {
	if m != nil && m.ConnectionString != nil {
		return *m.ConnectionString
	}
	return ""
}

func (m *CQueuedMatchmakingGameHost_SearchForPlayers_Request) GetSearchid() uint64 {
	if m != nil && m.Searchid != nil {
		return *m.Searchid
	}
	return 0
}

type PlayerFound struct {
	Steamid              *uint64            `protobuf:"fixed64,1,opt,name=steamid" json:"steamid,omitempty"`
	Action               *EGameSearchAction `protobuf:"varint,2,opt,name=action,enum=EGameSearchAction,def=0" json:"action,omitempty"`
	Params               []*GameSearchParam `protobuf:"bytes,3,rep,name=params" json:"params,omitempty"`
	TeamNumber           *uint32            `protobuf:"varint,4,opt,name=team_number,json=teamNumber" json:"team_number,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *PlayerFound) Reset()         { *m = PlayerFound{} }
func (m *PlayerFound) String() string { return proto.CompactTextString(m) }
func (*PlayerFound) ProtoMessage()    {}
func (*PlayerFound) Descriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_qms_steamclient_2f0fe2304ffe7914, []int{4}
}
func (m *PlayerFound) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlayerFound.Unmarshal(m, b)
}
func (m *PlayerFound) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlayerFound.Marshal(b, m, deterministic)
}
func (dst *PlayerFound) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlayerFound.Merge(dst, src)
}
func (m *PlayerFound) XXX_Size() int {
	return xxx_messageInfo_PlayerFound.Size(m)
}
func (m *PlayerFound) XXX_DiscardUnknown() {
	xxx_messageInfo_PlayerFound.DiscardUnknown(m)
}

var xxx_messageInfo_PlayerFound proto.InternalMessageInfo

const Default_PlayerFound_Action EGameSearchAction = EGameSearchAction_k_EGameSearchAction_None

func (m *PlayerFound) GetSteamid() uint64 {
	if m != nil && m.Steamid != nil {
		return *m.Steamid
	}
	return 0
}

func (m *PlayerFound) GetAction() EGameSearchAction {
	if m != nil && m.Action != nil {
		return *m.Action
	}
	return Default_PlayerFound_Action
}

func (m *PlayerFound) GetParams() []*GameSearchParam {
	if m != nil {
		return m.Params
	}
	return nil
}

func (m *PlayerFound) GetTeamNumber() uint32 {
	if m != nil && m.TeamNumber != nil {
		return *m.TeamNumber
	}
	return 0
}

type CQueuedMatchmakingGameHost_SearchForPlayers_Response struct {
	Gamesearchresult     *EGameSearchResult `protobuf:"varint,1,opt,name=gamesearchresult,enum=EGameSearchResult,def=0" json:"gamesearchresult,omitempty"`
	Searchid             *uint64            `protobuf:"varint,2,opt,name=searchid" json:"searchid,omitempty"`
	PollFrequency        *uint32            `protobuf:"varint,3,opt,name=poll_frequency,json=pollFrequency" json:"poll_frequency,omitempty"`
	Matchid              *uint64            `protobuf:"varint,4,opt,name=matchid" json:"matchid,omitempty"`
	Players              []*PlayerFound     `protobuf:"bytes,5,rep,name=players" json:"players,omitempty"`
	RtimeMatchMade       *uint32            `protobuf:"varint,6,opt,name=rtime_match_made,json=rtimeMatchMade" json:"rtime_match_made,omitempty"`
	RtimeNow             *uint32            `protobuf:"varint,7,opt,name=rtime_now,json=rtimeNow" json:"rtime_now,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *CQueuedMatchmakingGameHost_SearchForPlayers_Response) Reset() {
	*m = CQueuedMatchmakingGameHost_SearchForPlayers_Response{}
}
func (m *CQueuedMatchmakingGameHost_SearchForPlayers_Response) String() string {
	return proto.CompactTextString(m)
}
func (*CQueuedMatchmakingGameHost_SearchForPlayers_Response) ProtoMessage() {}
func (*CQueuedMatchmakingGameHost_SearchForPlayers_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_qms_steamclient_2f0fe2304ffe7914, []int{5}
}
func (m *CQueuedMatchmakingGameHost_SearchForPlayers_Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CQueuedMatchmakingGameHost_SearchForPlayers_Response.Unmarshal(m, b)
}
func (m *CQueuedMatchmakingGameHost_SearchForPlayers_Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CQueuedMatchmakingGameHost_SearchForPlayers_Response.Marshal(b, m, deterministic)
}
func (dst *CQueuedMatchmakingGameHost_SearchForPlayers_Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CQueuedMatchmakingGameHost_SearchForPlayers_Response.Merge(dst, src)
}
func (m *CQueuedMatchmakingGameHost_SearchForPlayers_Response) XXX_Size() int {
	return xxx_messageInfo_CQueuedMatchmakingGameHost_SearchForPlayers_Response.Size(m)
}
func (m *CQueuedMatchmakingGameHost_SearchForPlayers_Response) XXX_DiscardUnknown() {
	xxx_messageInfo_CQueuedMatchmakingGameHost_SearchForPlayers_Response.DiscardUnknown(m)
}

var xxx_messageInfo_CQueuedMatchmakingGameHost_SearchForPlayers_Response proto.InternalMessageInfo

const Default_CQueuedMatchmakingGameHost_SearchForPlayers_Response_Gamesearchresult EGameSearchResult = EGameSearchResult_k_EGameSearchResult_Invalid

func (m *CQueuedMatchmakingGameHost_SearchForPlayers_Response) GetGamesearchresult() EGameSearchResult {
	if m != nil && m.Gamesearchresult != nil {
		return *m.Gamesearchresult
	}
	return Default_CQueuedMatchmakingGameHost_SearchForPlayers_Response_Gamesearchresult
}

func (m *CQueuedMatchmakingGameHost_SearchForPlayers_Response) GetSearchid() uint64 {
	if m != nil && m.Searchid != nil {
		return *m.Searchid
	}
	return 0
}

func (m *CQueuedMatchmakingGameHost_SearchForPlayers_Response) GetPollFrequency() uint32 {
	if m != nil && m.PollFrequency != nil {
		return *m.PollFrequency
	}
	return 0
}

func (m *CQueuedMatchmakingGameHost_SearchForPlayers_Response) GetMatchid() uint64 {
	if m != nil && m.Matchid != nil {
		return *m.Matchid
	}
	return 0
}

func (m *CQueuedMatchmakingGameHost_SearchForPlayers_Response) GetPlayers() []*PlayerFound {
	if m != nil {
		return m.Players
	}
	return nil
}

func (m *CQueuedMatchmakingGameHost_SearchForPlayers_Response) GetRtimeMatchMade() uint32 {
	if m != nil && m.RtimeMatchMade != nil {
		return *m.RtimeMatchMade
	}
	return 0
}

func (m *CQueuedMatchmakingGameHost_SearchForPlayers_Response) GetRtimeNow() uint32 {
	if m != nil && m.RtimeNow != nil {
		return *m.RtimeNow
	}
	return 0
}

type PlayerResult struct {
	Steamid              *uint64  `protobuf:"fixed64,1,opt,name=steamid" json:"steamid,omitempty"`
	Value                *uint32  `protobuf:"varint,2,opt,name=value" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PlayerResult) Reset()         { *m = PlayerResult{} }
func (m *PlayerResult) String() string { return proto.CompactTextString(m) }
func (*PlayerResult) ProtoMessage()    {}
func (*PlayerResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_qms_steamclient_2f0fe2304ffe7914, []int{6}
}
func (m *PlayerResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlayerResult.Unmarshal(m, b)
}
func (m *PlayerResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlayerResult.Marshal(b, m, deterministic)
}
func (dst *PlayerResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlayerResult.Merge(dst, src)
}
func (m *PlayerResult) XXX_Size() int {
	return xxx_messageInfo_PlayerResult.Size(m)
}
func (m *PlayerResult) XXX_DiscardUnknown() {
	xxx_messageInfo_PlayerResult.DiscardUnknown(m)
}

var xxx_messageInfo_PlayerResult proto.InternalMessageInfo

func (m *PlayerResult) GetSteamid() uint64 {
	if m != nil && m.Steamid != nil {
		return *m.Steamid
	}
	return 0
}

func (m *PlayerResult) GetValue() uint32 {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return 0
}

type CQueuedMatchmakingGameHost_SubmitPlayerResult_Request struct {
	Appid                *uint32         `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	Matchid              *uint64         `protobuf:"varint,2,opt,name=matchid" json:"matchid,omitempty"`
	PlayerResults        []*PlayerResult `protobuf:"bytes,3,rep,name=player_results,json=playerResults" json:"player_results,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *CQueuedMatchmakingGameHost_SubmitPlayerResult_Request) Reset() {
	*m = CQueuedMatchmakingGameHost_SubmitPlayerResult_Request{}
}
func (m *CQueuedMatchmakingGameHost_SubmitPlayerResult_Request) String() string {
	return proto.CompactTextString(m)
}
func (*CQueuedMatchmakingGameHost_SubmitPlayerResult_Request) ProtoMessage() {}
func (*CQueuedMatchmakingGameHost_SubmitPlayerResult_Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_qms_steamclient_2f0fe2304ffe7914, []int{7}
}
func (m *CQueuedMatchmakingGameHost_SubmitPlayerResult_Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CQueuedMatchmakingGameHost_SubmitPlayerResult_Request.Unmarshal(m, b)
}
func (m *CQueuedMatchmakingGameHost_SubmitPlayerResult_Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CQueuedMatchmakingGameHost_SubmitPlayerResult_Request.Marshal(b, m, deterministic)
}
func (dst *CQueuedMatchmakingGameHost_SubmitPlayerResult_Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CQueuedMatchmakingGameHost_SubmitPlayerResult_Request.Merge(dst, src)
}
func (m *CQueuedMatchmakingGameHost_SubmitPlayerResult_Request) XXX_Size() int {
	return xxx_messageInfo_CQueuedMatchmakingGameHost_SubmitPlayerResult_Request.Size(m)
}
func (m *CQueuedMatchmakingGameHost_SubmitPlayerResult_Request) XXX_DiscardUnknown() {
	xxx_messageInfo_CQueuedMatchmakingGameHost_SubmitPlayerResult_Request.DiscardUnknown(m)
}

var xxx_messageInfo_CQueuedMatchmakingGameHost_SubmitPlayerResult_Request proto.InternalMessageInfo

func (m *CQueuedMatchmakingGameHost_SubmitPlayerResult_Request) GetAppid() uint32 {
	if m != nil && m.Appid != nil {
		return *m.Appid
	}
	return 0
}

func (m *CQueuedMatchmakingGameHost_SubmitPlayerResult_Request) GetMatchid() uint64 {
	if m != nil && m.Matchid != nil {
		return *m.Matchid
	}
	return 0
}

func (m *CQueuedMatchmakingGameHost_SubmitPlayerResult_Request) GetPlayerResults() []*PlayerResult {
	if m != nil {
		return m.PlayerResults
	}
	return nil
}

type CQueuedMatchmakingGameHost_SubmitPlayerResult_Response struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CQueuedMatchmakingGameHost_SubmitPlayerResult_Response) Reset() {
	*m = CQueuedMatchmakingGameHost_SubmitPlayerResult_Response{}
}
func (m *CQueuedMatchmakingGameHost_SubmitPlayerResult_Response) String() string {
	return proto.CompactTextString(m)
}
func (*CQueuedMatchmakingGameHost_SubmitPlayerResult_Response) ProtoMessage() {}
func (*CQueuedMatchmakingGameHost_SubmitPlayerResult_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_qms_steamclient_2f0fe2304ffe7914, []int{8}
}
func (m *CQueuedMatchmakingGameHost_SubmitPlayerResult_Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CQueuedMatchmakingGameHost_SubmitPlayerResult_Response.Unmarshal(m, b)
}
func (m *CQueuedMatchmakingGameHost_SubmitPlayerResult_Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CQueuedMatchmakingGameHost_SubmitPlayerResult_Response.Marshal(b, m, deterministic)
}
func (dst *CQueuedMatchmakingGameHost_SubmitPlayerResult_Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CQueuedMatchmakingGameHost_SubmitPlayerResult_Response.Merge(dst, src)
}
func (m *CQueuedMatchmakingGameHost_SubmitPlayerResult_Response) XXX_Size() int {
	return xxx_messageInfo_CQueuedMatchmakingGameHost_SubmitPlayerResult_Response.Size(m)
}
func (m *CQueuedMatchmakingGameHost_SubmitPlayerResult_Response) XXX_DiscardUnknown() {
	xxx_messageInfo_CQueuedMatchmakingGameHost_SubmitPlayerResult_Response.DiscardUnknown(m)
}

var xxx_messageInfo_CQueuedMatchmakingGameHost_SubmitPlayerResult_Response proto.InternalMessageInfo

type CQueuedMatchmakingGameHost_EndGame_Request struct {
	Appid                *uint32  `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	Matchid              *uint64  `protobuf:"varint,2,opt,name=matchid" json:"matchid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CQueuedMatchmakingGameHost_EndGame_Request) Reset() {
	*m = CQueuedMatchmakingGameHost_EndGame_Request{}
}
func (m *CQueuedMatchmakingGameHost_EndGame_Request) String() string {
	return proto.CompactTextString(m)
}
func (*CQueuedMatchmakingGameHost_EndGame_Request) ProtoMessage() {}
func (*CQueuedMatchmakingGameHost_EndGame_Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_qms_steamclient_2f0fe2304ffe7914, []int{9}
}
func (m *CQueuedMatchmakingGameHost_EndGame_Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CQueuedMatchmakingGameHost_EndGame_Request.Unmarshal(m, b)
}
func (m *CQueuedMatchmakingGameHost_EndGame_Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CQueuedMatchmakingGameHost_EndGame_Request.Marshal(b, m, deterministic)
}
func (dst *CQueuedMatchmakingGameHost_EndGame_Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CQueuedMatchmakingGameHost_EndGame_Request.Merge(dst, src)
}
func (m *CQueuedMatchmakingGameHost_EndGame_Request) XXX_Size() int {
	return xxx_messageInfo_CQueuedMatchmakingGameHost_EndGame_Request.Size(m)
}
func (m *CQueuedMatchmakingGameHost_EndGame_Request) XXX_DiscardUnknown() {
	xxx_messageInfo_CQueuedMatchmakingGameHost_EndGame_Request.DiscardUnknown(m)
}

var xxx_messageInfo_CQueuedMatchmakingGameHost_EndGame_Request proto.InternalMessageInfo

func (m *CQueuedMatchmakingGameHost_EndGame_Request) GetAppid() uint32 {
	if m != nil && m.Appid != nil {
		return *m.Appid
	}
	return 0
}

func (m *CQueuedMatchmakingGameHost_EndGame_Request) GetMatchid() uint64 {
	if m != nil && m.Matchid != nil {
		return *m.Matchid
	}
	return 0
}

type CQueuedMatchmakingGameHost_EndGame_Response struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CQueuedMatchmakingGameHost_EndGame_Response) Reset() {
	*m = CQueuedMatchmakingGameHost_EndGame_Response{}
}
func (m *CQueuedMatchmakingGameHost_EndGame_Response) String() string {
	return proto.CompactTextString(m)
}
func (*CQueuedMatchmakingGameHost_EndGame_Response) ProtoMessage() {}
func (*CQueuedMatchmakingGameHost_EndGame_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_qms_steamclient_2f0fe2304ffe7914, []int{10}
}
func (m *CQueuedMatchmakingGameHost_EndGame_Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CQueuedMatchmakingGameHost_EndGame_Response.Unmarshal(m, b)
}
func (m *CQueuedMatchmakingGameHost_EndGame_Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CQueuedMatchmakingGameHost_EndGame_Response.Marshal(b, m, deterministic)
}
func (dst *CQueuedMatchmakingGameHost_EndGame_Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CQueuedMatchmakingGameHost_EndGame_Response.Merge(dst, src)
}
func (m *CQueuedMatchmakingGameHost_EndGame_Response) XXX_Size() int {
	return xxx_messageInfo_CQueuedMatchmakingGameHost_EndGame_Response.Size(m)
}
func (m *CQueuedMatchmakingGameHost_EndGame_Response) XXX_DiscardUnknown() {
	xxx_messageInfo_CQueuedMatchmakingGameHost_EndGame_Response.DiscardUnknown(m)
}

var xxx_messageInfo_CQueuedMatchmakingGameHost_EndGame_Response proto.InternalMessageInfo

func init() {
	proto.RegisterType((*GameSearchParam)(nil), "GameSearchParam")
	proto.RegisterType((*CQueuedMatchmaking_SearchForGame_Request)(nil), "CQueuedMatchmaking_SearchForGame_Request")
	proto.RegisterType((*CQueuedMatchmaking_SearchForGame_Response)(nil), "CQueuedMatchmaking_SearchForGame_Response")
	proto.RegisterType((*CQueuedMatchmakingGameHost_SearchForPlayers_Request)(nil), "CQueuedMatchmakingGameHost_SearchForPlayers_Request")
	proto.RegisterType((*PlayerFound)(nil), "PlayerFound")
	proto.RegisterType((*CQueuedMatchmakingGameHost_SearchForPlayers_Response)(nil), "CQueuedMatchmakingGameHost_SearchForPlayers_Response")
	proto.RegisterType((*PlayerResult)(nil), "PlayerResult")
	proto.RegisterType((*CQueuedMatchmakingGameHost_SubmitPlayerResult_Request)(nil), "CQueuedMatchmakingGameHost_SubmitPlayerResult_Request")
	proto.RegisterType((*CQueuedMatchmakingGameHost_SubmitPlayerResult_Response)(nil), "CQueuedMatchmakingGameHost_SubmitPlayerResult_Response")
	proto.RegisterType((*CQueuedMatchmakingGameHost_EndGame_Request)(nil), "CQueuedMatchmakingGameHost_EndGame_Request")
	proto.RegisterType((*CQueuedMatchmakingGameHost_EndGame_Response)(nil), "CQueuedMatchmakingGameHost_EndGame_Response")
	proto.RegisterEnum("EGameSearchAction", EGameSearchAction_name, EGameSearchAction_value)
	proto.RegisterEnum("EGameSearchResult", EGameSearchResult_name, EGameSearchResult_value)
}

func init() {
	proto.RegisterFile("steammessages_qms.steamclient.proto", fileDescriptor_steammessages_qms_steamclient_2f0fe2304ffe7914)
}

var fileDescriptor_steammessages_qms_steamclient_2f0fe2304ffe7914 = []byte{
	// 1166 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xdc, 0x57, 0xc1, 0x6e, 0xdb, 0x46,
	0x13, 0x0e, 0x25, 0x5b, 0xb2, 0x47, 0x96, 0x43, 0xef, 0x9f, 0xfc, 0x65, 0x94, 0x36, 0x21, 0x98,
	0x36, 0x51, 0xec, 0x84, 0x42, 0x1d, 0xc7, 0x29, 0x82, 0xa2, 0x40, 0xe2, 0xd8, 0xad, 0x0f, 0x36,
	0x5c, 0x3a, 0xa7, 0xb6, 0x00, 0xb1, 0x22, 0xc7, 0x32, 0x61, 0x72, 0x29, 0x73, 0x49, 0x27, 0x0e,
	0x50, 0xa0, 0xd0, 0x23, 0x14, 0xe8, 0x31, 0xaf, 0xd0, 0x43, 0x01, 0x01, 0x3d, 0xf4, 0xda, 0xe7,
	0xe8, 0x03, 0xf4, 0xd8, 0x17, 0x28, 0xb8, 0xbb, 0x8a, 0x24, 0x4b, 0x72, 0x64, 0x1f, 0x5a, 0xa0,
	0xc7, 0xfd, 0x66, 0x38, 0x3b, 0xfb, 0xcd, 0x7c, 0xb3, 0x4b, 0xb8, 0xc3, 0x53, 0xa4, 0x51, 0x84,
	0x9c, 0xd3, 0x16, 0x72, 0xf7, 0x38, 0xe2, 0xb6, 0x40, 0xbc, 0x30, 0x40, 0x96, 0xda, 0xed, 0x24,
	0x4e, 0xe3, 0xda, 0x83, 0x61, 0xa7, 0x8c, 0x05, 0x07, 0x01, 0xfa, 0x6e, 0x93, 0x72, 0x1c, 0xf5,
	0xb6, 0x9e, 0xc3, 0xd5, 0x2f, 0x69, 0x84, 0xfb, 0x48, 0x13, 0xef, 0x70, 0x8f, 0x26, 0x34, 0x22,
	0x37, 0x60, 0xee, 0x08, 0x4f, 0x5d, 0x46, 0x23, 0x34, 0x34, 0x53, 0xab, 0xcf, 0x3b, 0xe5, 0x23,
	0x3c, 0xdd, 0xa5, 0x11, 0x92, 0x6b, 0x30, 0x7b, 0x42, 0xc3, 0x0c, 0x8d, 0x82, 0x59, 0xac, 0xcf,
	0x3b, 0x72, 0x61, 0xfd, 0x5c, 0x80, 0xfa, 0xc6, 0xd7, 0x19, 0x66, 0xe8, 0xef, 0xd0, 0xd4, 0x3b,
	0x8c, 0xe8, 0x51, 0xc0, 0x5a, 0xae, 0x8c, 0xb9, 0x15, 0x27, 0xf9, 0x06, 0xae, 0x83, 0xc7, 0x19,
	0xf2, 0x34, 0x0f, 0x41, 0xdb, 0xed, 0xc0, 0x17, 0xa1, 0xab, 0x8e, 0x5c, 0x90, 0x17, 0x50, 0xa2,
	0x5e, 0x1a, 0xc4, 0xcc, 0x28, 0x98, 0x5a, 0x7d, 0x71, 0x95, 0xd8, 0x9b, 0xfd, 0xb4, 0x9e, 0x09,
	0xcb, 0x53, 0xe3, 0xc8, 0x1d, 0x01, 0xdd, 0xdd, 0x98, 0xa1, 0xa3, 0xbe, 0x25, 0x75, 0x28, 0xb5,
	0xf3, 0x23, 0x70, 0xa3, 0x68, 0x16, 0xeb, 0x95, 0x55, 0xdd, 0x3e, 0x73, 0x36, 0x47, 0xd9, 0xc9,
	0x47, 0x00, 0xed, 0x90, 0x9e, 0x62, 0xe2, 0x46, 0x01, 0x33, 0x66, 0x44, 0x2a, 0xf3, 0x12, 0xd9,
	0x09, 0xd8, 0xa0, 0x99, 0xbe, 0x36, 0x66, 0x87, 0xcc, 0xf4, 0x35, 0xb1, 0x60, 0x41, 0x30, 0x19,
	0xf8, 0x61, 0xdc, 0x6c, 0x9e, 0x1a, 0x25, 0x53, 0xab, 0x97, 0x9c, 0x21, 0x8c, 0xd4, 0x60, 0x8e,
	0x8b, 0x8d, 0x03, 0xdf, 0x28, 0x9b, 0x5a, 0x7d, 0xc6, 0x79, 0xb7, 0xb6, 0x7e, 0x9f, 0x81, 0xfb,
	0x53, 0x10, 0xc6, 0xdb, 0x31, 0xe3, 0x48, 0xbe, 0x05, 0xbd, 0x45, 0x23, 0x94, 0x5f, 0x27, 0xc8,
	0xb3, 0x30, 0x15, 0xe4, 0x9d, 0x61, 0xc9, 0x11, 0x96, 0xa7, 0x37, 0x87, 0x58, 0x92, 0xa0, 0xbb,
	0xcd, 0x4e, 0x68, 0x18, 0xf8, 0xce, 0x48, 0xa0, 0xa1, 0x34, 0x0b, 0xc3, 0x69, 0x92, 0x55, 0xb8,
	0xce, 0xd1, 0x8b, 0x99, 0xcf, 0xdd, 0x34, 0x88, 0xd0, 0x45, 0x9e, 0x06, 0x11, 0x4d, 0xd1, 0x28,
	0x0a, 0x42, 0xfe, 0xa7, 0x8c, 0x2f, 0x83, 0x08, 0x37, 0x95, 0x89, 0x7c, 0x02, 0x8b, 0xed, 0x38,
	0x0c, 0xdd, 0x83, 0x24, 0xaf, 0x37, 0xf3, 0x4e, 0x15, 0xb9, 0xd5, 0x1c, 0xdd, 0xea, 0x81, 0xe4,
	0x1e, 0x5c, 0xf5, 0xe2, 0x8c, 0xa5, 0xae, 0xda, 0x8c, 0xb5, 0x14, 0xcb, 0x8b, 0x02, 0xde, 0xef,
	0xa1, 0xa4, 0x0e, 0xba, 0xe4, 0x9d, 0xbb, 0x01, 0x73, 0xa3, 0x9c, 0x2d, 0x41, 0x77, 0xd5, 0x59,
	0x54, 0xf8, 0x36, 0x13, 0x1c, 0x92, 0xfb, 0x7d, 0x4f, 0xea, 0x79, 0xd8, 0x4e, 0x51, 0x12, 0x5f,
	0x75, 0xae, 0x2a, 0xfc, 0x99, 0x82, 0xf3, 0x24, 0xbd, 0x98, 0x31, 0xf4, 0x52, 0x97, 0xa7, 0x49,
	0xbe, 0xf9, 0xbc, 0xe8, 0xf3, 0xaa, 0x42, 0xf7, 0x05, 0x48, 0x4c, 0xa8, 0xa8, 0x92, 0x1e, 0xc6,
	0x3c, 0x35, 0x40, 0x54, 0x79, 0x10, 0xca, 0xb3, 0x4b, 0x04, 0x35, 0x22, 0x31, 0x37, 0xa2, 0x3e,
	0x1a, 0x15, 0x99, 0x9d, 0xc0, 0x45, 0x66, 0x3b, 0xd4, 0x47, 0x72, 0x13, 0xe6, 0xa5, 0x27, 0x8b,
	0x5f, 0x19, 0x0b, 0xc2, 0x65, 0x4e, 0x00, 0xbb, 0xf1, 0x2b, 0xb2, 0x0e, 0x1f, 0xa8, 0xa8, 0xae,
	0x47, 0x99, 0x87, 0x21, 0xfa, 0x8a, 0x18, 0xa3, 0x2a, 0x36, 0xbd, 0xae, 0xcc, 0x1b, 0xca, 0x2a,
	0xf9, 0xb1, 0xfe, 0x2a, 0xc0, 0xa3, 0xd1, 0x3e, 0xca, 0xab, 0xff, 0x55, 0xcc, 0xd3, 0x7e, 0x3f,
	0xed, 0x29, 0x5e, 0xfe, 0x4b, 0x1a, 0x6c, 0xc0, 0xb5, 0xbe, 0xd9, 0xcd, 0xe9, 0x71, 0x79, 0xf0,
	0x06, 0x55, 0x73, 0x2c, 0xbd, 0x73, 0x7c, 0x89, 0x34, 0xda, 0x0f, 0xde, 0x20, 0x59, 0x81, 0x25,
	0x55, 0xde, 0x3c, 0x67, 0x55, 0xf7, 0xb2, 0xa8, 0xbb, 0xde, 0x37, 0xa8, 0xd2, 0x0f, 0xca, 0x62,
	0xee, 0x8c, 0x7a, 0x7f, 0xd5, 0xa0, 0x22, 0x19, 0xdd, 0x8a, 0x33, 0xe6, 0x13, 0x03, 0xca, 0xaa,
	0x3c, 0x82, 0xcf, 0x92, 0xd3, 0x5b, 0xfe, 0xe3, 0x8c, 0xde, 0x86, 0x8a, 0x20, 0x82, 0x65, 0x51,
	0x13, 0x13, 0x45, 0x29, 0xe4, 0xd0, 0xae, 0x40, 0xac, 0x3f, 0x0a, 0xb0, 0x76, 0xb1, 0x86, 0xf9,
	0xb7, 0x67, 0xd0, 0xe8, 0x3c, 0x29, 0x8e, 0x9b, 0x27, 0x06, 0x94, 0x85, 0x04, 0x03, 0x5f, 0x9c,
	0x7a, 0xc6, 0xe9, 0x2d, 0xc9, 0x5d, 0x28, 0x2b, 0xf9, 0x1b, 0xb3, 0x82, 0xbe, 0x05, 0x7b, 0xa0,
	0x78, 0x4e, 0xcf, 0x38, 0x56, 0xca, 0xa5, 0xf7, 0x4b, 0xb9, 0x3c, 0x2c, 0x65, 0xeb, 0x0b, 0x58,
	0x90, 0xe1, 0xe5, 0xa9, 0xcf, 0x69, 0x8e, 0x81, 0xbb, 0x54, 0x88, 0x50, 0xde, 0xa5, 0x6f, 0x35,
	0x78, 0x7c, 0x5e, 0x85, 0xb2, 0x66, 0x14, 0xa4, 0x83, 0x3b, 0xbc, 0x47, 0xd4, 0x03, 0xc4, 0x14,
	0x86, 0x89, 0x59, 0x03, 0x35, 0x41, 0x5d, 0x59, 0x86, 0x5e, 0x7b, 0x55, 0xed, 0xc1, 0xf0, 0x4e,
	0xb5, 0x3d, 0xb0, 0xe2, 0xd6, 0x67, 0xb0, 0x7e, 0xd1, 0xf4, 0x64, 0x0b, 0x59, 0xdf, 0xc1, 0xf2,
	0x39, 0x5f, 0x6e, 0x32, 0x7f, 0x8a, 0x67, 0xc2, 0xc4, 0xd3, 0x58, 0x0f, 0x61, 0x65, 0xaa, 0xe8,
	0x32, 0x99, 0xe5, 0x1f, 0x35, 0x58, 0x1a, 0x91, 0x1d, 0xf9, 0x10, 0x26, 0xaa, 0x51, 0xbf, 0x42,
	0x6e, 0x41, 0x6d, 0x9c, 0x55, 0xde, 0x2a, 0xba, 0x46, 0x6e, 0xc3, 0xcd, 0x71, 0xf6, 0x17, 0xe8,
	0x85, 0x01, 0x43, 0xbd, 0x30, 0x29, 0x80, 0x1c, 0xea, 0x7a, 0x71, 0xf9, 0xb7, 0xc2, 0x50, 0x52,
	0xaa, 0x83, 0xce, 0x86, 0x1d, 0x96, 0x93, 0x7e, 0x85, 0xd4, 0xe1, 0xe3, 0x71, 0x0e, 0x72, 0xb1,
	0xcd, 0xf6, 0x92, 0xb8, 0x95, 0x20, 0xe7, 0xba, 0x46, 0x56, 0xe0, 0xde, 0x64, 0xcf, 0x2d, 0x1a,
	0x84, 0xe8, 0xef, 0xc6, 0x39, 0x61, 0x5c, 0x2f, 0x90, 0x7b, 0x70, 0x67, 0xb2, 0x73, 0x0e, 0x0b,
	0x01, 0xe9, 0x45, 0x62, 0xc3, 0xf2, 0x64, 0xc7, 0x8d, 0x38, 0x6a, 0x87, 0x98, 0x62, 0xef, 0xee,
	0xd5, 0x67, 0xa6, 0xf3, 0x57, 0xac, 0xf9, 0xfa, 0x2c, 0xb9, 0x0b, 0xd6, 0x39, 0xfe, 0xea, 0x46,
	0xd4, 0x4b, 0xab, 0xbf, 0x68, 0xb0, 0x34, 0xd2, 0x02, 0xe4, 0x7b, 0xa8, 0x0e, 0xbd, 0xab, 0xc8,
	0x7d, 0x7b, 0xda, 0xb7, 0x6a, 0x6d, 0xd9, 0x9e, 0xfa, 0x95, 0x66, 0x5d, 0xef, 0x74, 0x8d, 0x25,
	0x69, 0x33, 0x0f, 0xe2, 0xc4, 0xa4, 0x66, 0x3e, 0xe7, 0x6a, 0xb7, 0x3a, 0x5d, 0xa3, 0x26, 0x83,
	0x98, 0x51, 0x3f, 0x8a, 0xc9, 0x31, 0x39, 0x09, 0x3c, 0x5c, 0xfd, 0xb3, 0x08, 0x37, 0x26, 0xf6,
	0x2d, 0xf9, 0x49, 0x03, 0xfd, 0xec, 0x50, 0x26, 0x6b, 0xf6, 0x25, 0xee, 0xfc, 0xda, 0x63, 0xfb,
	0x32, 0x83, 0xdf, 0xba, 0xd6, 0xe9, 0x1a, 0xa3, 0x29, 0xbc, 0xd5, 0x80, 0x8c, 0x6a, 0x9d, 0xac,
	0xdb, 0x97, 0x1a, 0x5d, 0xb5, 0x27, 0xf6, 0x25, 0x67, 0xca, 0xff, 0x3b, 0x5d, 0x63, 0x5c, 0x22,
	0xc7, 0x50, 0x56, 0x92, 0x27, 0x2b, 0xf6, 0xf4, 0x53, 0xa7, 0xf6, 0xc0, 0xbe, 0xc0, 0x10, 0xb1,
	0x2a, 0x9d, 0xae, 0xd1, 0xdb, 0xa7, 0x76, 0xa7, 0xd3, 0x35, 0x6e, 0x8f, 0x29, 0x74, 0xfe, 0x4e,
	0xec, 0x55, 0xfb, 0xf9, 0xe7, 0xdf, 0x3c, 0x69, 0x05, 0xe9, 0x61, 0xd6, 0xb4, 0xbd, 0x38, 0x6a,
	0x7c, 0xfa, 0xe8, 0xa8, 0xd1, 0x8a, 0x1f, 0x8a, 0x0b, 0xe1, 0x61, 0x82, 0x3c, 0xce, 0x12, 0x0f,
	0x79, 0x43, 0xfc, 0x98, 0x35, 0xb3, 0x83, 0x86, 0x30, 0x34, 0xe4, 0xef, 0xda, 0x0f, 0x9a, 0xf6,
	0x77, 0x00, 0x00, 0x00, 0xff, 0xff, 0xe1, 0xc2, 0xec, 0x7e, 0xff, 0x0d, 0x00, 0x00,
}
