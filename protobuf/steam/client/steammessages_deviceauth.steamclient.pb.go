// Code generated by protoc-gen-go. DO NOT EDIT.
// source: steammessages_deviceauth.steamclient.proto

package client // import "github.com/13k/go-steam-resources/protobuf/steam/client"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type CDeviceAuth_GetOwnAuthorizedDevices_Request struct {
	Steamid              *uint64  `protobuf:"fixed64,1,opt,name=steamid" json:"steamid,omitempty"`
	IncludeCanceled      *bool    `protobuf:"varint,2,opt,name=include_canceled,json=includeCanceled" json:"include_canceled,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CDeviceAuth_GetOwnAuthorizedDevices_Request) Reset() {
	*m = CDeviceAuth_GetOwnAuthorizedDevices_Request{}
}
func (m *CDeviceAuth_GetOwnAuthorizedDevices_Request) String() string {
	return proto.CompactTextString(m)
}
func (*CDeviceAuth_GetOwnAuthorizedDevices_Request) ProtoMessage() {}
func (*CDeviceAuth_GetOwnAuthorizedDevices_Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_deviceauth_steamclient_07e7dd7d80be16d7, []int{0}
}
func (m *CDeviceAuth_GetOwnAuthorizedDevices_Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CDeviceAuth_GetOwnAuthorizedDevices_Request.Unmarshal(m, b)
}
func (m *CDeviceAuth_GetOwnAuthorizedDevices_Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CDeviceAuth_GetOwnAuthorizedDevices_Request.Marshal(b, m, deterministic)
}
func (dst *CDeviceAuth_GetOwnAuthorizedDevices_Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CDeviceAuth_GetOwnAuthorizedDevices_Request.Merge(dst, src)
}
func (m *CDeviceAuth_GetOwnAuthorizedDevices_Request) XXX_Size() int {
	return xxx_messageInfo_CDeviceAuth_GetOwnAuthorizedDevices_Request.Size(m)
}
func (m *CDeviceAuth_GetOwnAuthorizedDevices_Request) XXX_DiscardUnknown() {
	xxx_messageInfo_CDeviceAuth_GetOwnAuthorizedDevices_Request.DiscardUnknown(m)
}

var xxx_messageInfo_CDeviceAuth_GetOwnAuthorizedDevices_Request proto.InternalMessageInfo

func (m *CDeviceAuth_GetOwnAuthorizedDevices_Request) GetSteamid() uint64 {
	if m != nil && m.Steamid != nil {
		return *m.Steamid
	}
	return 0
}

func (m *CDeviceAuth_GetOwnAuthorizedDevices_Request) GetIncludeCanceled() bool {
	if m != nil && m.IncludeCanceled != nil {
		return *m.IncludeCanceled
	}
	return false
}

type CDeviceAuth_GetOwnAuthorizedDevices_Response struct {
	Devices              []*CDeviceAuth_GetOwnAuthorizedDevices_Response_Device `protobuf:"bytes,1,rep,name=devices" json:"devices,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                               `json:"-"`
	XXX_unrecognized     []byte                                                 `json:"-"`
	XXX_sizecache        int32                                                  `json:"-"`
}

func (m *CDeviceAuth_GetOwnAuthorizedDevices_Response) Reset() {
	*m = CDeviceAuth_GetOwnAuthorizedDevices_Response{}
}
func (m *CDeviceAuth_GetOwnAuthorizedDevices_Response) String() string {
	return proto.CompactTextString(m)
}
func (*CDeviceAuth_GetOwnAuthorizedDevices_Response) ProtoMessage() {}
func (*CDeviceAuth_GetOwnAuthorizedDevices_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_deviceauth_steamclient_07e7dd7d80be16d7, []int{1}
}
func (m *CDeviceAuth_GetOwnAuthorizedDevices_Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CDeviceAuth_GetOwnAuthorizedDevices_Response.Unmarshal(m, b)
}
func (m *CDeviceAuth_GetOwnAuthorizedDevices_Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CDeviceAuth_GetOwnAuthorizedDevices_Response.Marshal(b, m, deterministic)
}
func (dst *CDeviceAuth_GetOwnAuthorizedDevices_Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CDeviceAuth_GetOwnAuthorizedDevices_Response.Merge(dst, src)
}
func (m *CDeviceAuth_GetOwnAuthorizedDevices_Response) XXX_Size() int {
	return xxx_messageInfo_CDeviceAuth_GetOwnAuthorizedDevices_Response.Size(m)
}
func (m *CDeviceAuth_GetOwnAuthorizedDevices_Response) XXX_DiscardUnknown() {
	xxx_messageInfo_CDeviceAuth_GetOwnAuthorizedDevices_Response.DiscardUnknown(m)
}

var xxx_messageInfo_CDeviceAuth_GetOwnAuthorizedDevices_Response proto.InternalMessageInfo

func (m *CDeviceAuth_GetOwnAuthorizedDevices_Response) GetDevices() []*CDeviceAuth_GetOwnAuthorizedDevices_Response_Device {
	if m != nil {
		return m.Devices
	}
	return nil
}

type CDeviceAuth_GetOwnAuthorizedDevices_Response_Device struct {
	AuthDeviceToken      *uint64  `protobuf:"fixed64,1,opt,name=auth_device_token,json=authDeviceToken" json:"auth_device_token,omitempty"`
	DeviceName           *string  `protobuf:"bytes,2,opt,name=device_name,json=deviceName" json:"device_name,omitempty"`
	IsPending            *bool    `protobuf:"varint,3,opt,name=is_pending,json=isPending" json:"is_pending,omitempty"`
	IsCanceled           *bool    `protobuf:"varint,4,opt,name=is_canceled,json=isCanceled" json:"is_canceled,omitempty"`
	LastTimeUsed         *uint32  `protobuf:"varint,5,opt,name=last_time_used,json=lastTimeUsed" json:"last_time_used,omitempty"`
	LastBorrowerId       *uint64  `protobuf:"fixed64,6,opt,name=last_borrower_id,json=lastBorrowerId" json:"last_borrower_id,omitempty"`
	LastAppPlayed        *uint32  `protobuf:"varint,7,opt,name=last_app_played,json=lastAppPlayed" json:"last_app_played,omitempty"`
	IsLimited            *bool    `protobuf:"varint,8,opt,name=is_limited,json=isLimited" json:"is_limited,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CDeviceAuth_GetOwnAuthorizedDevices_Response_Device) Reset() {
	*m = CDeviceAuth_GetOwnAuthorizedDevices_Response_Device{}
}
func (m *CDeviceAuth_GetOwnAuthorizedDevices_Response_Device) String() string {
	return proto.CompactTextString(m)
}
func (*CDeviceAuth_GetOwnAuthorizedDevices_Response_Device) ProtoMessage() {}
func (*CDeviceAuth_GetOwnAuthorizedDevices_Response_Device) Descriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_deviceauth_steamclient_07e7dd7d80be16d7, []int{1, 0}
}
func (m *CDeviceAuth_GetOwnAuthorizedDevices_Response_Device) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CDeviceAuth_GetOwnAuthorizedDevices_Response_Device.Unmarshal(m, b)
}
func (m *CDeviceAuth_GetOwnAuthorizedDevices_Response_Device) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CDeviceAuth_GetOwnAuthorizedDevices_Response_Device.Marshal(b, m, deterministic)
}
func (dst *CDeviceAuth_GetOwnAuthorizedDevices_Response_Device) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CDeviceAuth_GetOwnAuthorizedDevices_Response_Device.Merge(dst, src)
}
func (m *CDeviceAuth_GetOwnAuthorizedDevices_Response_Device) XXX_Size() int {
	return xxx_messageInfo_CDeviceAuth_GetOwnAuthorizedDevices_Response_Device.Size(m)
}
func (m *CDeviceAuth_GetOwnAuthorizedDevices_Response_Device) XXX_DiscardUnknown() {
	xxx_messageInfo_CDeviceAuth_GetOwnAuthorizedDevices_Response_Device.DiscardUnknown(m)
}

var xxx_messageInfo_CDeviceAuth_GetOwnAuthorizedDevices_Response_Device proto.InternalMessageInfo

func (m *CDeviceAuth_GetOwnAuthorizedDevices_Response_Device) GetAuthDeviceToken() uint64 {
	if m != nil && m.AuthDeviceToken != nil {
		return *m.AuthDeviceToken
	}
	return 0
}

func (m *CDeviceAuth_GetOwnAuthorizedDevices_Response_Device) GetDeviceName() string {
	if m != nil && m.DeviceName != nil {
		return *m.DeviceName
	}
	return ""
}

func (m *CDeviceAuth_GetOwnAuthorizedDevices_Response_Device) GetIsPending() bool {
	if m != nil && m.IsPending != nil {
		return *m.IsPending
	}
	return false
}

func (m *CDeviceAuth_GetOwnAuthorizedDevices_Response_Device) GetIsCanceled() bool {
	if m != nil && m.IsCanceled != nil {
		return *m.IsCanceled
	}
	return false
}

func (m *CDeviceAuth_GetOwnAuthorizedDevices_Response_Device) GetLastTimeUsed() uint32 {
	if m != nil && m.LastTimeUsed != nil {
		return *m.LastTimeUsed
	}
	return 0
}

func (m *CDeviceAuth_GetOwnAuthorizedDevices_Response_Device) GetLastBorrowerId() uint64 {
	if m != nil && m.LastBorrowerId != nil {
		return *m.LastBorrowerId
	}
	return 0
}

func (m *CDeviceAuth_GetOwnAuthorizedDevices_Response_Device) GetLastAppPlayed() uint32 {
	if m != nil && m.LastAppPlayed != nil {
		return *m.LastAppPlayed
	}
	return 0
}

func (m *CDeviceAuth_GetOwnAuthorizedDevices_Response_Device) GetIsLimited() bool {
	if m != nil && m.IsLimited != nil {
		return *m.IsLimited
	}
	return false
}

type CDeviceAuth_AcceptAuthorizationRequest_Request struct {
	Steamid              *uint64  `protobuf:"fixed64,1,opt,name=steamid" json:"steamid,omitempty"`
	AuthDeviceToken      *uint64  `protobuf:"fixed64,2,opt,name=auth_device_token,json=authDeviceToken" json:"auth_device_token,omitempty"`
	AuthCode             *uint64  `protobuf:"fixed64,3,opt,name=auth_code,json=authCode" json:"auth_code,omitempty"`
	FromSteamid          *uint64  `protobuf:"fixed64,4,opt,name=from_steamid,json=fromSteamid" json:"from_steamid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CDeviceAuth_AcceptAuthorizationRequest_Request) Reset() {
	*m = CDeviceAuth_AcceptAuthorizationRequest_Request{}
}
func (m *CDeviceAuth_AcceptAuthorizationRequest_Request) String() string {
	return proto.CompactTextString(m)
}
func (*CDeviceAuth_AcceptAuthorizationRequest_Request) ProtoMessage() {}
func (*CDeviceAuth_AcceptAuthorizationRequest_Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_deviceauth_steamclient_07e7dd7d80be16d7, []int{2}
}
func (m *CDeviceAuth_AcceptAuthorizationRequest_Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CDeviceAuth_AcceptAuthorizationRequest_Request.Unmarshal(m, b)
}
func (m *CDeviceAuth_AcceptAuthorizationRequest_Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CDeviceAuth_AcceptAuthorizationRequest_Request.Marshal(b, m, deterministic)
}
func (dst *CDeviceAuth_AcceptAuthorizationRequest_Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CDeviceAuth_AcceptAuthorizationRequest_Request.Merge(dst, src)
}
func (m *CDeviceAuth_AcceptAuthorizationRequest_Request) XXX_Size() int {
	return xxx_messageInfo_CDeviceAuth_AcceptAuthorizationRequest_Request.Size(m)
}
func (m *CDeviceAuth_AcceptAuthorizationRequest_Request) XXX_DiscardUnknown() {
	xxx_messageInfo_CDeviceAuth_AcceptAuthorizationRequest_Request.DiscardUnknown(m)
}

var xxx_messageInfo_CDeviceAuth_AcceptAuthorizationRequest_Request proto.InternalMessageInfo

func (m *CDeviceAuth_AcceptAuthorizationRequest_Request) GetSteamid() uint64 {
	if m != nil && m.Steamid != nil {
		return *m.Steamid
	}
	return 0
}

func (m *CDeviceAuth_AcceptAuthorizationRequest_Request) GetAuthDeviceToken() uint64 {
	if m != nil && m.AuthDeviceToken != nil {
		return *m.AuthDeviceToken
	}
	return 0
}

func (m *CDeviceAuth_AcceptAuthorizationRequest_Request) GetAuthCode() uint64 {
	if m != nil && m.AuthCode != nil {
		return *m.AuthCode
	}
	return 0
}

func (m *CDeviceAuth_AcceptAuthorizationRequest_Request) GetFromSteamid() uint64 {
	if m != nil && m.FromSteamid != nil {
		return *m.FromSteamid
	}
	return 0
}

type CDeviceAuth_AcceptAuthorizationRequest_Response struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CDeviceAuth_AcceptAuthorizationRequest_Response) Reset() {
	*m = CDeviceAuth_AcceptAuthorizationRequest_Response{}
}
func (m *CDeviceAuth_AcceptAuthorizationRequest_Response) String() string {
	return proto.CompactTextString(m)
}
func (*CDeviceAuth_AcceptAuthorizationRequest_Response) ProtoMessage() {}
func (*CDeviceAuth_AcceptAuthorizationRequest_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_deviceauth_steamclient_07e7dd7d80be16d7, []int{3}
}
func (m *CDeviceAuth_AcceptAuthorizationRequest_Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CDeviceAuth_AcceptAuthorizationRequest_Response.Unmarshal(m, b)
}
func (m *CDeviceAuth_AcceptAuthorizationRequest_Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CDeviceAuth_AcceptAuthorizationRequest_Response.Marshal(b, m, deterministic)
}
func (dst *CDeviceAuth_AcceptAuthorizationRequest_Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CDeviceAuth_AcceptAuthorizationRequest_Response.Merge(dst, src)
}
func (m *CDeviceAuth_AcceptAuthorizationRequest_Response) XXX_Size() int {
	return xxx_messageInfo_CDeviceAuth_AcceptAuthorizationRequest_Response.Size(m)
}
func (m *CDeviceAuth_AcceptAuthorizationRequest_Response) XXX_DiscardUnknown() {
	xxx_messageInfo_CDeviceAuth_AcceptAuthorizationRequest_Response.DiscardUnknown(m)
}

var xxx_messageInfo_CDeviceAuth_AcceptAuthorizationRequest_Response proto.InternalMessageInfo

type CDeviceAuth_AuthorizeRemoteDevice_Request struct {
	Steamid              *uint64  `protobuf:"fixed64,1,opt,name=steamid" json:"steamid,omitempty"`
	AuthDeviceToken      *uint64  `protobuf:"fixed64,2,opt,name=auth_device_token,json=authDeviceToken" json:"auth_device_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CDeviceAuth_AuthorizeRemoteDevice_Request) Reset() {
	*m = CDeviceAuth_AuthorizeRemoteDevice_Request{}
}
func (m *CDeviceAuth_AuthorizeRemoteDevice_Request) String() string { return proto.CompactTextString(m) }
func (*CDeviceAuth_AuthorizeRemoteDevice_Request) ProtoMessage()    {}
func (*CDeviceAuth_AuthorizeRemoteDevice_Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_deviceauth_steamclient_07e7dd7d80be16d7, []int{4}
}
func (m *CDeviceAuth_AuthorizeRemoteDevice_Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CDeviceAuth_AuthorizeRemoteDevice_Request.Unmarshal(m, b)
}
func (m *CDeviceAuth_AuthorizeRemoteDevice_Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CDeviceAuth_AuthorizeRemoteDevice_Request.Marshal(b, m, deterministic)
}
func (dst *CDeviceAuth_AuthorizeRemoteDevice_Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CDeviceAuth_AuthorizeRemoteDevice_Request.Merge(dst, src)
}
func (m *CDeviceAuth_AuthorizeRemoteDevice_Request) XXX_Size() int {
	return xxx_messageInfo_CDeviceAuth_AuthorizeRemoteDevice_Request.Size(m)
}
func (m *CDeviceAuth_AuthorizeRemoteDevice_Request) XXX_DiscardUnknown() {
	xxx_messageInfo_CDeviceAuth_AuthorizeRemoteDevice_Request.DiscardUnknown(m)
}

var xxx_messageInfo_CDeviceAuth_AuthorizeRemoteDevice_Request proto.InternalMessageInfo

func (m *CDeviceAuth_AuthorizeRemoteDevice_Request) GetSteamid() uint64 {
	if m != nil && m.Steamid != nil {
		return *m.Steamid
	}
	return 0
}

func (m *CDeviceAuth_AuthorizeRemoteDevice_Request) GetAuthDeviceToken() uint64 {
	if m != nil && m.AuthDeviceToken != nil {
		return *m.AuthDeviceToken
	}
	return 0
}

type CDeviceAuth_AuthorizeRemoteDevice_Response struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CDeviceAuth_AuthorizeRemoteDevice_Response) Reset() {
	*m = CDeviceAuth_AuthorizeRemoteDevice_Response{}
}
func (m *CDeviceAuth_AuthorizeRemoteDevice_Response) String() string {
	return proto.CompactTextString(m)
}
func (*CDeviceAuth_AuthorizeRemoteDevice_Response) ProtoMessage() {}
func (*CDeviceAuth_AuthorizeRemoteDevice_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_deviceauth_steamclient_07e7dd7d80be16d7, []int{5}
}
func (m *CDeviceAuth_AuthorizeRemoteDevice_Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CDeviceAuth_AuthorizeRemoteDevice_Response.Unmarshal(m, b)
}
func (m *CDeviceAuth_AuthorizeRemoteDevice_Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CDeviceAuth_AuthorizeRemoteDevice_Response.Marshal(b, m, deterministic)
}
func (dst *CDeviceAuth_AuthorizeRemoteDevice_Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CDeviceAuth_AuthorizeRemoteDevice_Response.Merge(dst, src)
}
func (m *CDeviceAuth_AuthorizeRemoteDevice_Response) XXX_Size() int {
	return xxx_messageInfo_CDeviceAuth_AuthorizeRemoteDevice_Response.Size(m)
}
func (m *CDeviceAuth_AuthorizeRemoteDevice_Response) XXX_DiscardUnknown() {
	xxx_messageInfo_CDeviceAuth_AuthorizeRemoteDevice_Response.DiscardUnknown(m)
}

var xxx_messageInfo_CDeviceAuth_AuthorizeRemoteDevice_Response proto.InternalMessageInfo

type CDeviceAuth_DeauthorizeRemoteDevice_Request struct {
	Steamid              *uint64  `protobuf:"fixed64,1,opt,name=steamid" json:"steamid,omitempty"`
	AuthDeviceToken      *uint64  `protobuf:"fixed64,2,opt,name=auth_device_token,json=authDeviceToken" json:"auth_device_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CDeviceAuth_DeauthorizeRemoteDevice_Request) Reset() {
	*m = CDeviceAuth_DeauthorizeRemoteDevice_Request{}
}
func (m *CDeviceAuth_DeauthorizeRemoteDevice_Request) String() string {
	return proto.CompactTextString(m)
}
func (*CDeviceAuth_DeauthorizeRemoteDevice_Request) ProtoMessage() {}
func (*CDeviceAuth_DeauthorizeRemoteDevice_Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_deviceauth_steamclient_07e7dd7d80be16d7, []int{6}
}
func (m *CDeviceAuth_DeauthorizeRemoteDevice_Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CDeviceAuth_DeauthorizeRemoteDevice_Request.Unmarshal(m, b)
}
func (m *CDeviceAuth_DeauthorizeRemoteDevice_Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CDeviceAuth_DeauthorizeRemoteDevice_Request.Marshal(b, m, deterministic)
}
func (dst *CDeviceAuth_DeauthorizeRemoteDevice_Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CDeviceAuth_DeauthorizeRemoteDevice_Request.Merge(dst, src)
}
func (m *CDeviceAuth_DeauthorizeRemoteDevice_Request) XXX_Size() int {
	return xxx_messageInfo_CDeviceAuth_DeauthorizeRemoteDevice_Request.Size(m)
}
func (m *CDeviceAuth_DeauthorizeRemoteDevice_Request) XXX_DiscardUnknown() {
	xxx_messageInfo_CDeviceAuth_DeauthorizeRemoteDevice_Request.DiscardUnknown(m)
}

var xxx_messageInfo_CDeviceAuth_DeauthorizeRemoteDevice_Request proto.InternalMessageInfo

func (m *CDeviceAuth_DeauthorizeRemoteDevice_Request) GetSteamid() uint64 {
	if m != nil && m.Steamid != nil {
		return *m.Steamid
	}
	return 0
}

func (m *CDeviceAuth_DeauthorizeRemoteDevice_Request) GetAuthDeviceToken() uint64 {
	if m != nil && m.AuthDeviceToken != nil {
		return *m.AuthDeviceToken
	}
	return 0
}

type CDeviceAuth_DeauthorizeRemoteDevice_Response struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CDeviceAuth_DeauthorizeRemoteDevice_Response) Reset() {
	*m = CDeviceAuth_DeauthorizeRemoteDevice_Response{}
}
func (m *CDeviceAuth_DeauthorizeRemoteDevice_Response) String() string {
	return proto.CompactTextString(m)
}
func (*CDeviceAuth_DeauthorizeRemoteDevice_Response) ProtoMessage() {}
func (*CDeviceAuth_DeauthorizeRemoteDevice_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_deviceauth_steamclient_07e7dd7d80be16d7, []int{7}
}
func (m *CDeviceAuth_DeauthorizeRemoteDevice_Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CDeviceAuth_DeauthorizeRemoteDevice_Response.Unmarshal(m, b)
}
func (m *CDeviceAuth_DeauthorizeRemoteDevice_Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CDeviceAuth_DeauthorizeRemoteDevice_Response.Marshal(b, m, deterministic)
}
func (dst *CDeviceAuth_DeauthorizeRemoteDevice_Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CDeviceAuth_DeauthorizeRemoteDevice_Response.Merge(dst, src)
}
func (m *CDeviceAuth_DeauthorizeRemoteDevice_Response) XXX_Size() int {
	return xxx_messageInfo_CDeviceAuth_DeauthorizeRemoteDevice_Response.Size(m)
}
func (m *CDeviceAuth_DeauthorizeRemoteDevice_Response) XXX_DiscardUnknown() {
	xxx_messageInfo_CDeviceAuth_DeauthorizeRemoteDevice_Response.DiscardUnknown(m)
}

var xxx_messageInfo_CDeviceAuth_DeauthorizeRemoteDevice_Response proto.InternalMessageInfo

type CDeviceAuth_GetUsedAuthorizedDevices_Request struct {
	Steamid              *uint64  `protobuf:"fixed64,1,opt,name=steamid" json:"steamid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CDeviceAuth_GetUsedAuthorizedDevices_Request) Reset() {
	*m = CDeviceAuth_GetUsedAuthorizedDevices_Request{}
}
func (m *CDeviceAuth_GetUsedAuthorizedDevices_Request) String() string {
	return proto.CompactTextString(m)
}
func (*CDeviceAuth_GetUsedAuthorizedDevices_Request) ProtoMessage() {}
func (*CDeviceAuth_GetUsedAuthorizedDevices_Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_deviceauth_steamclient_07e7dd7d80be16d7, []int{8}
}
func (m *CDeviceAuth_GetUsedAuthorizedDevices_Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CDeviceAuth_GetUsedAuthorizedDevices_Request.Unmarshal(m, b)
}
func (m *CDeviceAuth_GetUsedAuthorizedDevices_Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CDeviceAuth_GetUsedAuthorizedDevices_Request.Marshal(b, m, deterministic)
}
func (dst *CDeviceAuth_GetUsedAuthorizedDevices_Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CDeviceAuth_GetUsedAuthorizedDevices_Request.Merge(dst, src)
}
func (m *CDeviceAuth_GetUsedAuthorizedDevices_Request) XXX_Size() int {
	return xxx_messageInfo_CDeviceAuth_GetUsedAuthorizedDevices_Request.Size(m)
}
func (m *CDeviceAuth_GetUsedAuthorizedDevices_Request) XXX_DiscardUnknown() {
	xxx_messageInfo_CDeviceAuth_GetUsedAuthorizedDevices_Request.DiscardUnknown(m)
}

var xxx_messageInfo_CDeviceAuth_GetUsedAuthorizedDevices_Request proto.InternalMessageInfo

func (m *CDeviceAuth_GetUsedAuthorizedDevices_Request) GetSteamid() uint64 {
	if m != nil && m.Steamid != nil {
		return *m.Steamid
	}
	return 0
}

type CDeviceAuth_GetUsedAuthorizedDevices_Response struct {
	Devices              []*CDeviceAuth_GetUsedAuthorizedDevices_Response_Device `protobuf:"bytes,1,rep,name=devices" json:"devices,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                `json:"-"`
	XXX_unrecognized     []byte                                                  `json:"-"`
	XXX_sizecache        int32                                                   `json:"-"`
}

func (m *CDeviceAuth_GetUsedAuthorizedDevices_Response) Reset() {
	*m = CDeviceAuth_GetUsedAuthorizedDevices_Response{}
}
func (m *CDeviceAuth_GetUsedAuthorizedDevices_Response) String() string {
	return proto.CompactTextString(m)
}
func (*CDeviceAuth_GetUsedAuthorizedDevices_Response) ProtoMessage() {}
func (*CDeviceAuth_GetUsedAuthorizedDevices_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_deviceauth_steamclient_07e7dd7d80be16d7, []int{9}
}
func (m *CDeviceAuth_GetUsedAuthorizedDevices_Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CDeviceAuth_GetUsedAuthorizedDevices_Response.Unmarshal(m, b)
}
func (m *CDeviceAuth_GetUsedAuthorizedDevices_Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CDeviceAuth_GetUsedAuthorizedDevices_Response.Marshal(b, m, deterministic)
}
func (dst *CDeviceAuth_GetUsedAuthorizedDevices_Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CDeviceAuth_GetUsedAuthorizedDevices_Response.Merge(dst, src)
}
func (m *CDeviceAuth_GetUsedAuthorizedDevices_Response) XXX_Size() int {
	return xxx_messageInfo_CDeviceAuth_GetUsedAuthorizedDevices_Response.Size(m)
}
func (m *CDeviceAuth_GetUsedAuthorizedDevices_Response) XXX_DiscardUnknown() {
	xxx_messageInfo_CDeviceAuth_GetUsedAuthorizedDevices_Response.DiscardUnknown(m)
}

var xxx_messageInfo_CDeviceAuth_GetUsedAuthorizedDevices_Response proto.InternalMessageInfo

func (m *CDeviceAuth_GetUsedAuthorizedDevices_Response) GetDevices() []*CDeviceAuth_GetUsedAuthorizedDevices_Response_Device {
	if m != nil {
		return m.Devices
	}
	return nil
}

type CDeviceAuth_GetUsedAuthorizedDevices_Response_Device struct {
	AuthDeviceToken      *uint64  `protobuf:"fixed64,1,opt,name=auth_device_token,json=authDeviceToken" json:"auth_device_token,omitempty"`
	DeviceName           *string  `protobuf:"bytes,2,opt,name=device_name,json=deviceName" json:"device_name,omitempty"`
	OwnerSteamid         *uint64  `protobuf:"fixed64,3,opt,name=owner_steamid,json=ownerSteamid" json:"owner_steamid,omitempty"`
	LastTimeUsed         *uint32  `protobuf:"varint,4,opt,name=last_time_used,json=lastTimeUsed" json:"last_time_used,omitempty"`
	LastAppPlayed        *uint32  `protobuf:"varint,5,opt,name=last_app_played,json=lastAppPlayed" json:"last_app_played,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CDeviceAuth_GetUsedAuthorizedDevices_Response_Device) Reset() {
	*m = CDeviceAuth_GetUsedAuthorizedDevices_Response_Device{}
}
func (m *CDeviceAuth_GetUsedAuthorizedDevices_Response_Device) String() string {
	return proto.CompactTextString(m)
}
func (*CDeviceAuth_GetUsedAuthorizedDevices_Response_Device) ProtoMessage() {}
func (*CDeviceAuth_GetUsedAuthorizedDevices_Response_Device) Descriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_deviceauth_steamclient_07e7dd7d80be16d7, []int{9, 0}
}
func (m *CDeviceAuth_GetUsedAuthorizedDevices_Response_Device) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CDeviceAuth_GetUsedAuthorizedDevices_Response_Device.Unmarshal(m, b)
}
func (m *CDeviceAuth_GetUsedAuthorizedDevices_Response_Device) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CDeviceAuth_GetUsedAuthorizedDevices_Response_Device.Marshal(b, m, deterministic)
}
func (dst *CDeviceAuth_GetUsedAuthorizedDevices_Response_Device) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CDeviceAuth_GetUsedAuthorizedDevices_Response_Device.Merge(dst, src)
}
func (m *CDeviceAuth_GetUsedAuthorizedDevices_Response_Device) XXX_Size() int {
	return xxx_messageInfo_CDeviceAuth_GetUsedAuthorizedDevices_Response_Device.Size(m)
}
func (m *CDeviceAuth_GetUsedAuthorizedDevices_Response_Device) XXX_DiscardUnknown() {
	xxx_messageInfo_CDeviceAuth_GetUsedAuthorizedDevices_Response_Device.DiscardUnknown(m)
}

var xxx_messageInfo_CDeviceAuth_GetUsedAuthorizedDevices_Response_Device proto.InternalMessageInfo

func (m *CDeviceAuth_GetUsedAuthorizedDevices_Response_Device) GetAuthDeviceToken() uint64 {
	if m != nil && m.AuthDeviceToken != nil {
		return *m.AuthDeviceToken
	}
	return 0
}

func (m *CDeviceAuth_GetUsedAuthorizedDevices_Response_Device) GetDeviceName() string {
	if m != nil && m.DeviceName != nil {
		return *m.DeviceName
	}
	return ""
}

func (m *CDeviceAuth_GetUsedAuthorizedDevices_Response_Device) GetOwnerSteamid() uint64 {
	if m != nil && m.OwnerSteamid != nil {
		return *m.OwnerSteamid
	}
	return 0
}

func (m *CDeviceAuth_GetUsedAuthorizedDevices_Response_Device) GetLastTimeUsed() uint32 {
	if m != nil && m.LastTimeUsed != nil {
		return *m.LastTimeUsed
	}
	return 0
}

func (m *CDeviceAuth_GetUsedAuthorizedDevices_Response_Device) GetLastAppPlayed() uint32 {
	if m != nil && m.LastAppPlayed != nil {
		return *m.LastAppPlayed
	}
	return 0
}

type CDeviceAuth_GetAuthorizedBorrowers_Request struct {
	Steamid              *uint64  `protobuf:"fixed64,1,opt,name=steamid" json:"steamid,omitempty"`
	IncludeCanceled      *bool    `protobuf:"varint,2,opt,name=include_canceled,json=includeCanceled" json:"include_canceled,omitempty"`
	IncludePending       *bool    `protobuf:"varint,3,opt,name=include_pending,json=includePending" json:"include_pending,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CDeviceAuth_GetAuthorizedBorrowers_Request) Reset() {
	*m = CDeviceAuth_GetAuthorizedBorrowers_Request{}
}
func (m *CDeviceAuth_GetAuthorizedBorrowers_Request) String() string {
	return proto.CompactTextString(m)
}
func (*CDeviceAuth_GetAuthorizedBorrowers_Request) ProtoMessage() {}
func (*CDeviceAuth_GetAuthorizedBorrowers_Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_deviceauth_steamclient_07e7dd7d80be16d7, []int{10}
}
func (m *CDeviceAuth_GetAuthorizedBorrowers_Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CDeviceAuth_GetAuthorizedBorrowers_Request.Unmarshal(m, b)
}
func (m *CDeviceAuth_GetAuthorizedBorrowers_Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CDeviceAuth_GetAuthorizedBorrowers_Request.Marshal(b, m, deterministic)
}
func (dst *CDeviceAuth_GetAuthorizedBorrowers_Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CDeviceAuth_GetAuthorizedBorrowers_Request.Merge(dst, src)
}
func (m *CDeviceAuth_GetAuthorizedBorrowers_Request) XXX_Size() int {
	return xxx_messageInfo_CDeviceAuth_GetAuthorizedBorrowers_Request.Size(m)
}
func (m *CDeviceAuth_GetAuthorizedBorrowers_Request) XXX_DiscardUnknown() {
	xxx_messageInfo_CDeviceAuth_GetAuthorizedBorrowers_Request.DiscardUnknown(m)
}

var xxx_messageInfo_CDeviceAuth_GetAuthorizedBorrowers_Request proto.InternalMessageInfo

func (m *CDeviceAuth_GetAuthorizedBorrowers_Request) GetSteamid() uint64 {
	if m != nil && m.Steamid != nil {
		return *m.Steamid
	}
	return 0
}

func (m *CDeviceAuth_GetAuthorizedBorrowers_Request) GetIncludeCanceled() bool {
	if m != nil && m.IncludeCanceled != nil {
		return *m.IncludeCanceled
	}
	return false
}

func (m *CDeviceAuth_GetAuthorizedBorrowers_Request) GetIncludePending() bool {
	if m != nil && m.IncludePending != nil {
		return *m.IncludePending
	}
	return false
}

type CDeviceAuth_GetAuthorizedBorrowers_Response struct {
	Borrowers            []*CDeviceAuth_GetAuthorizedBorrowers_Response_Borrower `protobuf:"bytes,1,rep,name=borrowers" json:"borrowers,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                `json:"-"`
	XXX_unrecognized     []byte                                                  `json:"-"`
	XXX_sizecache        int32                                                   `json:"-"`
}

func (m *CDeviceAuth_GetAuthorizedBorrowers_Response) Reset() {
	*m = CDeviceAuth_GetAuthorizedBorrowers_Response{}
}
func (m *CDeviceAuth_GetAuthorizedBorrowers_Response) String() string {
	return proto.CompactTextString(m)
}
func (*CDeviceAuth_GetAuthorizedBorrowers_Response) ProtoMessage() {}
func (*CDeviceAuth_GetAuthorizedBorrowers_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_deviceauth_steamclient_07e7dd7d80be16d7, []int{11}
}
func (m *CDeviceAuth_GetAuthorizedBorrowers_Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CDeviceAuth_GetAuthorizedBorrowers_Response.Unmarshal(m, b)
}
func (m *CDeviceAuth_GetAuthorizedBorrowers_Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CDeviceAuth_GetAuthorizedBorrowers_Response.Marshal(b, m, deterministic)
}
func (dst *CDeviceAuth_GetAuthorizedBorrowers_Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CDeviceAuth_GetAuthorizedBorrowers_Response.Merge(dst, src)
}
func (m *CDeviceAuth_GetAuthorizedBorrowers_Response) XXX_Size() int {
	return xxx_messageInfo_CDeviceAuth_GetAuthorizedBorrowers_Response.Size(m)
}
func (m *CDeviceAuth_GetAuthorizedBorrowers_Response) XXX_DiscardUnknown() {
	xxx_messageInfo_CDeviceAuth_GetAuthorizedBorrowers_Response.DiscardUnknown(m)
}

var xxx_messageInfo_CDeviceAuth_GetAuthorizedBorrowers_Response proto.InternalMessageInfo

func (m *CDeviceAuth_GetAuthorizedBorrowers_Response) GetBorrowers() []*CDeviceAuth_GetAuthorizedBorrowers_Response_Borrower {
	if m != nil {
		return m.Borrowers
	}
	return nil
}

type CDeviceAuth_GetAuthorizedBorrowers_Response_Borrower struct {
	Steamid              *uint64  `protobuf:"fixed64,1,opt,name=steamid" json:"steamid,omitempty"`
	IsPending            *bool    `protobuf:"varint,2,opt,name=is_pending,json=isPending" json:"is_pending,omitempty"`
	IsCanceled           *bool    `protobuf:"varint,3,opt,name=is_canceled,json=isCanceled" json:"is_canceled,omitempty"`
	TimeCreated          *uint32  `protobuf:"varint,4,opt,name=time_created,json=timeCreated" json:"time_created,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CDeviceAuth_GetAuthorizedBorrowers_Response_Borrower) Reset() {
	*m = CDeviceAuth_GetAuthorizedBorrowers_Response_Borrower{}
}
func (m *CDeviceAuth_GetAuthorizedBorrowers_Response_Borrower) String() string {
	return proto.CompactTextString(m)
}
func (*CDeviceAuth_GetAuthorizedBorrowers_Response_Borrower) ProtoMessage() {}
func (*CDeviceAuth_GetAuthorizedBorrowers_Response_Borrower) Descriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_deviceauth_steamclient_07e7dd7d80be16d7, []int{11, 0}
}
func (m *CDeviceAuth_GetAuthorizedBorrowers_Response_Borrower) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CDeviceAuth_GetAuthorizedBorrowers_Response_Borrower.Unmarshal(m, b)
}
func (m *CDeviceAuth_GetAuthorizedBorrowers_Response_Borrower) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CDeviceAuth_GetAuthorizedBorrowers_Response_Borrower.Marshal(b, m, deterministic)
}
func (dst *CDeviceAuth_GetAuthorizedBorrowers_Response_Borrower) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CDeviceAuth_GetAuthorizedBorrowers_Response_Borrower.Merge(dst, src)
}
func (m *CDeviceAuth_GetAuthorizedBorrowers_Response_Borrower) XXX_Size() int {
	return xxx_messageInfo_CDeviceAuth_GetAuthorizedBorrowers_Response_Borrower.Size(m)
}
func (m *CDeviceAuth_GetAuthorizedBorrowers_Response_Borrower) XXX_DiscardUnknown() {
	xxx_messageInfo_CDeviceAuth_GetAuthorizedBorrowers_Response_Borrower.DiscardUnknown(m)
}

var xxx_messageInfo_CDeviceAuth_GetAuthorizedBorrowers_Response_Borrower proto.InternalMessageInfo

func (m *CDeviceAuth_GetAuthorizedBorrowers_Response_Borrower) GetSteamid() uint64 {
	if m != nil && m.Steamid != nil {
		return *m.Steamid
	}
	return 0
}

func (m *CDeviceAuth_GetAuthorizedBorrowers_Response_Borrower) GetIsPending() bool {
	if m != nil && m.IsPending != nil {
		return *m.IsPending
	}
	return false
}

func (m *CDeviceAuth_GetAuthorizedBorrowers_Response_Borrower) GetIsCanceled() bool {
	if m != nil && m.IsCanceled != nil {
		return *m.IsCanceled
	}
	return false
}

func (m *CDeviceAuth_GetAuthorizedBorrowers_Response_Borrower) GetTimeCreated() uint32 {
	if m != nil && m.TimeCreated != nil {
		return *m.TimeCreated
	}
	return 0
}

type CDeviceAuth_AddAuthorizedBorrowers_Request struct {
	Steamid              *uint64  `protobuf:"fixed64,1,opt,name=steamid" json:"steamid,omitempty"`
	SteamidBorrower      []uint64 `protobuf:"fixed64,2,rep,name=steamid_borrower,json=steamidBorrower" json:"steamid_borrower,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CDeviceAuth_AddAuthorizedBorrowers_Request) Reset() {
	*m = CDeviceAuth_AddAuthorizedBorrowers_Request{}
}
func (m *CDeviceAuth_AddAuthorizedBorrowers_Request) String() string {
	return proto.CompactTextString(m)
}
func (*CDeviceAuth_AddAuthorizedBorrowers_Request) ProtoMessage() {}
func (*CDeviceAuth_AddAuthorizedBorrowers_Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_deviceauth_steamclient_07e7dd7d80be16d7, []int{12}
}
func (m *CDeviceAuth_AddAuthorizedBorrowers_Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CDeviceAuth_AddAuthorizedBorrowers_Request.Unmarshal(m, b)
}
func (m *CDeviceAuth_AddAuthorizedBorrowers_Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CDeviceAuth_AddAuthorizedBorrowers_Request.Marshal(b, m, deterministic)
}
func (dst *CDeviceAuth_AddAuthorizedBorrowers_Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CDeviceAuth_AddAuthorizedBorrowers_Request.Merge(dst, src)
}
func (m *CDeviceAuth_AddAuthorizedBorrowers_Request) XXX_Size() int {
	return xxx_messageInfo_CDeviceAuth_AddAuthorizedBorrowers_Request.Size(m)
}
func (m *CDeviceAuth_AddAuthorizedBorrowers_Request) XXX_DiscardUnknown() {
	xxx_messageInfo_CDeviceAuth_AddAuthorizedBorrowers_Request.DiscardUnknown(m)
}

var xxx_messageInfo_CDeviceAuth_AddAuthorizedBorrowers_Request proto.InternalMessageInfo

func (m *CDeviceAuth_AddAuthorizedBorrowers_Request) GetSteamid() uint64 {
	if m != nil && m.Steamid != nil {
		return *m.Steamid
	}
	return 0
}

func (m *CDeviceAuth_AddAuthorizedBorrowers_Request) GetSteamidBorrower() []uint64 {
	if m != nil {
		return m.SteamidBorrower
	}
	return nil
}

type CDeviceAuth_AddAuthorizedBorrowers_Response struct {
	SecondsToWait        *int32   `protobuf:"varint,1,opt,name=seconds_to_wait,json=secondsToWait" json:"seconds_to_wait,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CDeviceAuth_AddAuthorizedBorrowers_Response) Reset() {
	*m = CDeviceAuth_AddAuthorizedBorrowers_Response{}
}
func (m *CDeviceAuth_AddAuthorizedBorrowers_Response) String() string {
	return proto.CompactTextString(m)
}
func (*CDeviceAuth_AddAuthorizedBorrowers_Response) ProtoMessage() {}
func (*CDeviceAuth_AddAuthorizedBorrowers_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_deviceauth_steamclient_07e7dd7d80be16d7, []int{13}
}
func (m *CDeviceAuth_AddAuthorizedBorrowers_Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CDeviceAuth_AddAuthorizedBorrowers_Response.Unmarshal(m, b)
}
func (m *CDeviceAuth_AddAuthorizedBorrowers_Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CDeviceAuth_AddAuthorizedBorrowers_Response.Marshal(b, m, deterministic)
}
func (dst *CDeviceAuth_AddAuthorizedBorrowers_Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CDeviceAuth_AddAuthorizedBorrowers_Response.Merge(dst, src)
}
func (m *CDeviceAuth_AddAuthorizedBorrowers_Response) XXX_Size() int {
	return xxx_messageInfo_CDeviceAuth_AddAuthorizedBorrowers_Response.Size(m)
}
func (m *CDeviceAuth_AddAuthorizedBorrowers_Response) XXX_DiscardUnknown() {
	xxx_messageInfo_CDeviceAuth_AddAuthorizedBorrowers_Response.DiscardUnknown(m)
}

var xxx_messageInfo_CDeviceAuth_AddAuthorizedBorrowers_Response proto.InternalMessageInfo

func (m *CDeviceAuth_AddAuthorizedBorrowers_Response) GetSecondsToWait() int32 {
	if m != nil && m.SecondsToWait != nil {
		return *m.SecondsToWait
	}
	return 0
}

type CDeviceAuth_RemoveAuthorizedBorrowers_Request struct {
	Steamid              *uint64  `protobuf:"fixed64,1,opt,name=steamid" json:"steamid,omitempty"`
	SteamidBorrower      []uint64 `protobuf:"fixed64,2,rep,name=steamid_borrower,json=steamidBorrower" json:"steamid_borrower,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CDeviceAuth_RemoveAuthorizedBorrowers_Request) Reset() {
	*m = CDeviceAuth_RemoveAuthorizedBorrowers_Request{}
}
func (m *CDeviceAuth_RemoveAuthorizedBorrowers_Request) String() string {
	return proto.CompactTextString(m)
}
func (*CDeviceAuth_RemoveAuthorizedBorrowers_Request) ProtoMessage() {}
func (*CDeviceAuth_RemoveAuthorizedBorrowers_Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_deviceauth_steamclient_07e7dd7d80be16d7, []int{14}
}
func (m *CDeviceAuth_RemoveAuthorizedBorrowers_Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CDeviceAuth_RemoveAuthorizedBorrowers_Request.Unmarshal(m, b)
}
func (m *CDeviceAuth_RemoveAuthorizedBorrowers_Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CDeviceAuth_RemoveAuthorizedBorrowers_Request.Marshal(b, m, deterministic)
}
func (dst *CDeviceAuth_RemoveAuthorizedBorrowers_Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CDeviceAuth_RemoveAuthorizedBorrowers_Request.Merge(dst, src)
}
func (m *CDeviceAuth_RemoveAuthorizedBorrowers_Request) XXX_Size() int {
	return xxx_messageInfo_CDeviceAuth_RemoveAuthorizedBorrowers_Request.Size(m)
}
func (m *CDeviceAuth_RemoveAuthorizedBorrowers_Request) XXX_DiscardUnknown() {
	xxx_messageInfo_CDeviceAuth_RemoveAuthorizedBorrowers_Request.DiscardUnknown(m)
}

var xxx_messageInfo_CDeviceAuth_RemoveAuthorizedBorrowers_Request proto.InternalMessageInfo

func (m *CDeviceAuth_RemoveAuthorizedBorrowers_Request) GetSteamid() uint64 {
	if m != nil && m.Steamid != nil {
		return *m.Steamid
	}
	return 0
}

func (m *CDeviceAuth_RemoveAuthorizedBorrowers_Request) GetSteamidBorrower() []uint64 {
	if m != nil {
		return m.SteamidBorrower
	}
	return nil
}

type CDeviceAuth_RemoveAuthorizedBorrowers_Response struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CDeviceAuth_RemoveAuthorizedBorrowers_Response) Reset() {
	*m = CDeviceAuth_RemoveAuthorizedBorrowers_Response{}
}
func (m *CDeviceAuth_RemoveAuthorizedBorrowers_Response) String() string {
	return proto.CompactTextString(m)
}
func (*CDeviceAuth_RemoveAuthorizedBorrowers_Response) ProtoMessage() {}
func (*CDeviceAuth_RemoveAuthorizedBorrowers_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_deviceauth_steamclient_07e7dd7d80be16d7, []int{15}
}
func (m *CDeviceAuth_RemoveAuthorizedBorrowers_Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CDeviceAuth_RemoveAuthorizedBorrowers_Response.Unmarshal(m, b)
}
func (m *CDeviceAuth_RemoveAuthorizedBorrowers_Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CDeviceAuth_RemoveAuthorizedBorrowers_Response.Marshal(b, m, deterministic)
}
func (dst *CDeviceAuth_RemoveAuthorizedBorrowers_Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CDeviceAuth_RemoveAuthorizedBorrowers_Response.Merge(dst, src)
}
func (m *CDeviceAuth_RemoveAuthorizedBorrowers_Response) XXX_Size() int {
	return xxx_messageInfo_CDeviceAuth_RemoveAuthorizedBorrowers_Response.Size(m)
}
func (m *CDeviceAuth_RemoveAuthorizedBorrowers_Response) XXX_DiscardUnknown() {
	xxx_messageInfo_CDeviceAuth_RemoveAuthorizedBorrowers_Response.DiscardUnknown(m)
}

var xxx_messageInfo_CDeviceAuth_RemoveAuthorizedBorrowers_Response proto.InternalMessageInfo

type CDeviceAuth_GetAuthorizedAsBorrower_Request struct {
	Steamid              *uint64  `protobuf:"fixed64,1,opt,name=steamid" json:"steamid,omitempty"`
	IncludeCanceled      *bool    `protobuf:"varint,2,opt,name=include_canceled,json=includeCanceled" json:"include_canceled,omitempty"`
	IncludePending       *bool    `protobuf:"varint,3,opt,name=include_pending,json=includePending" json:"include_pending,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CDeviceAuth_GetAuthorizedAsBorrower_Request) Reset() {
	*m = CDeviceAuth_GetAuthorizedAsBorrower_Request{}
}
func (m *CDeviceAuth_GetAuthorizedAsBorrower_Request) String() string {
	return proto.CompactTextString(m)
}
func (*CDeviceAuth_GetAuthorizedAsBorrower_Request) ProtoMessage() {}
func (*CDeviceAuth_GetAuthorizedAsBorrower_Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_deviceauth_steamclient_07e7dd7d80be16d7, []int{16}
}
func (m *CDeviceAuth_GetAuthorizedAsBorrower_Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CDeviceAuth_GetAuthorizedAsBorrower_Request.Unmarshal(m, b)
}
func (m *CDeviceAuth_GetAuthorizedAsBorrower_Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CDeviceAuth_GetAuthorizedAsBorrower_Request.Marshal(b, m, deterministic)
}
func (dst *CDeviceAuth_GetAuthorizedAsBorrower_Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CDeviceAuth_GetAuthorizedAsBorrower_Request.Merge(dst, src)
}
func (m *CDeviceAuth_GetAuthorizedAsBorrower_Request) XXX_Size() int {
	return xxx_messageInfo_CDeviceAuth_GetAuthorizedAsBorrower_Request.Size(m)
}
func (m *CDeviceAuth_GetAuthorizedAsBorrower_Request) XXX_DiscardUnknown() {
	xxx_messageInfo_CDeviceAuth_GetAuthorizedAsBorrower_Request.DiscardUnknown(m)
}

var xxx_messageInfo_CDeviceAuth_GetAuthorizedAsBorrower_Request proto.InternalMessageInfo

func (m *CDeviceAuth_GetAuthorizedAsBorrower_Request) GetSteamid() uint64 {
	if m != nil && m.Steamid != nil {
		return *m.Steamid
	}
	return 0
}

func (m *CDeviceAuth_GetAuthorizedAsBorrower_Request) GetIncludeCanceled() bool {
	if m != nil && m.IncludeCanceled != nil {
		return *m.IncludeCanceled
	}
	return false
}

func (m *CDeviceAuth_GetAuthorizedAsBorrower_Request) GetIncludePending() bool {
	if m != nil && m.IncludePending != nil {
		return *m.IncludePending
	}
	return false
}

type CDeviceAuth_GetAuthorizedAsBorrower_Response struct {
	Lenders              []*CDeviceAuth_GetAuthorizedAsBorrower_Response_Lender `protobuf:"bytes,1,rep,name=lenders" json:"lenders,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                               `json:"-"`
	XXX_unrecognized     []byte                                                 `json:"-"`
	XXX_sizecache        int32                                                  `json:"-"`
}

func (m *CDeviceAuth_GetAuthorizedAsBorrower_Response) Reset() {
	*m = CDeviceAuth_GetAuthorizedAsBorrower_Response{}
}
func (m *CDeviceAuth_GetAuthorizedAsBorrower_Response) String() string {
	return proto.CompactTextString(m)
}
func (*CDeviceAuth_GetAuthorizedAsBorrower_Response) ProtoMessage() {}
func (*CDeviceAuth_GetAuthorizedAsBorrower_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_deviceauth_steamclient_07e7dd7d80be16d7, []int{17}
}
func (m *CDeviceAuth_GetAuthorizedAsBorrower_Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CDeviceAuth_GetAuthorizedAsBorrower_Response.Unmarshal(m, b)
}
func (m *CDeviceAuth_GetAuthorizedAsBorrower_Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CDeviceAuth_GetAuthorizedAsBorrower_Response.Marshal(b, m, deterministic)
}
func (dst *CDeviceAuth_GetAuthorizedAsBorrower_Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CDeviceAuth_GetAuthorizedAsBorrower_Response.Merge(dst, src)
}
func (m *CDeviceAuth_GetAuthorizedAsBorrower_Response) XXX_Size() int {
	return xxx_messageInfo_CDeviceAuth_GetAuthorizedAsBorrower_Response.Size(m)
}
func (m *CDeviceAuth_GetAuthorizedAsBorrower_Response) XXX_DiscardUnknown() {
	xxx_messageInfo_CDeviceAuth_GetAuthorizedAsBorrower_Response.DiscardUnknown(m)
}

var xxx_messageInfo_CDeviceAuth_GetAuthorizedAsBorrower_Response proto.InternalMessageInfo

func (m *CDeviceAuth_GetAuthorizedAsBorrower_Response) GetLenders() []*CDeviceAuth_GetAuthorizedAsBorrower_Response_Lender {
	if m != nil {
		return m.Lenders
	}
	return nil
}

type CDeviceAuth_GetAuthorizedAsBorrower_Response_Lender struct {
	Steamid              *uint64  `protobuf:"fixed64,1,opt,name=steamid" json:"steamid,omitempty"`
	TimeCreated          *uint32  `protobuf:"varint,2,opt,name=time_created,json=timeCreated" json:"time_created,omitempty"`
	IsPending            *bool    `protobuf:"varint,3,opt,name=is_pending,json=isPending" json:"is_pending,omitempty"`
	IsCanceled           *bool    `protobuf:"varint,4,opt,name=is_canceled,json=isCanceled" json:"is_canceled,omitempty"`
	IsUsed               *bool    `protobuf:"varint,5,opt,name=is_used,json=isUsed" json:"is_used,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CDeviceAuth_GetAuthorizedAsBorrower_Response_Lender) Reset() {
	*m = CDeviceAuth_GetAuthorizedAsBorrower_Response_Lender{}
}
func (m *CDeviceAuth_GetAuthorizedAsBorrower_Response_Lender) String() string {
	return proto.CompactTextString(m)
}
func (*CDeviceAuth_GetAuthorizedAsBorrower_Response_Lender) ProtoMessage() {}
func (*CDeviceAuth_GetAuthorizedAsBorrower_Response_Lender) Descriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_deviceauth_steamclient_07e7dd7d80be16d7, []int{17, 0}
}
func (m *CDeviceAuth_GetAuthorizedAsBorrower_Response_Lender) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CDeviceAuth_GetAuthorizedAsBorrower_Response_Lender.Unmarshal(m, b)
}
func (m *CDeviceAuth_GetAuthorizedAsBorrower_Response_Lender) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CDeviceAuth_GetAuthorizedAsBorrower_Response_Lender.Marshal(b, m, deterministic)
}
func (dst *CDeviceAuth_GetAuthorizedAsBorrower_Response_Lender) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CDeviceAuth_GetAuthorizedAsBorrower_Response_Lender.Merge(dst, src)
}
func (m *CDeviceAuth_GetAuthorizedAsBorrower_Response_Lender) XXX_Size() int {
	return xxx_messageInfo_CDeviceAuth_GetAuthorizedAsBorrower_Response_Lender.Size(m)
}
func (m *CDeviceAuth_GetAuthorizedAsBorrower_Response_Lender) XXX_DiscardUnknown() {
	xxx_messageInfo_CDeviceAuth_GetAuthorizedAsBorrower_Response_Lender.DiscardUnknown(m)
}

var xxx_messageInfo_CDeviceAuth_GetAuthorizedAsBorrower_Response_Lender proto.InternalMessageInfo

func (m *CDeviceAuth_GetAuthorizedAsBorrower_Response_Lender) GetSteamid() uint64 {
	if m != nil && m.Steamid != nil {
		return *m.Steamid
	}
	return 0
}

func (m *CDeviceAuth_GetAuthorizedAsBorrower_Response_Lender) GetTimeCreated() uint32 {
	if m != nil && m.TimeCreated != nil {
		return *m.TimeCreated
	}
	return 0
}

func (m *CDeviceAuth_GetAuthorizedAsBorrower_Response_Lender) GetIsPending() bool {
	if m != nil && m.IsPending != nil {
		return *m.IsPending
	}
	return false
}

func (m *CDeviceAuth_GetAuthorizedAsBorrower_Response_Lender) GetIsCanceled() bool {
	if m != nil && m.IsCanceled != nil {
		return *m.IsCanceled
	}
	return false
}

func (m *CDeviceAuth_GetAuthorizedAsBorrower_Response_Lender) GetIsUsed() bool {
	if m != nil && m.IsUsed != nil {
		return *m.IsUsed
	}
	return false
}

type CDeviceAuth_GetExcludedGamesInLibrary_Request struct {
	Steamid              *uint64  `protobuf:"fixed64,1,opt,name=steamid" json:"steamid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CDeviceAuth_GetExcludedGamesInLibrary_Request) Reset() {
	*m = CDeviceAuth_GetExcludedGamesInLibrary_Request{}
}
func (m *CDeviceAuth_GetExcludedGamesInLibrary_Request) String() string {
	return proto.CompactTextString(m)
}
func (*CDeviceAuth_GetExcludedGamesInLibrary_Request) ProtoMessage() {}
func (*CDeviceAuth_GetExcludedGamesInLibrary_Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_deviceauth_steamclient_07e7dd7d80be16d7, []int{18}
}
func (m *CDeviceAuth_GetExcludedGamesInLibrary_Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CDeviceAuth_GetExcludedGamesInLibrary_Request.Unmarshal(m, b)
}
func (m *CDeviceAuth_GetExcludedGamesInLibrary_Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CDeviceAuth_GetExcludedGamesInLibrary_Request.Marshal(b, m, deterministic)
}
func (dst *CDeviceAuth_GetExcludedGamesInLibrary_Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CDeviceAuth_GetExcludedGamesInLibrary_Request.Merge(dst, src)
}
func (m *CDeviceAuth_GetExcludedGamesInLibrary_Request) XXX_Size() int {
	return xxx_messageInfo_CDeviceAuth_GetExcludedGamesInLibrary_Request.Size(m)
}
func (m *CDeviceAuth_GetExcludedGamesInLibrary_Request) XXX_DiscardUnknown() {
	xxx_messageInfo_CDeviceAuth_GetExcludedGamesInLibrary_Request.DiscardUnknown(m)
}

var xxx_messageInfo_CDeviceAuth_GetExcludedGamesInLibrary_Request proto.InternalMessageInfo

func (m *CDeviceAuth_GetExcludedGamesInLibrary_Request) GetSteamid() uint64 {
	if m != nil && m.Steamid != nil {
		return *m.Steamid
	}
	return 0
}

type CDeviceAuth_GetExcludedGamesInLibrary_Response struct {
	ExcludedGames        []*CDeviceAuth_GetExcludedGamesInLibrary_Response_ExcludedGame `protobuf:"bytes,1,rep,name=excluded_games,json=excludedGames" json:"excluded_games,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                       `json:"-"`
	XXX_unrecognized     []byte                                                         `json:"-"`
	XXX_sizecache        int32                                                          `json:"-"`
}

func (m *CDeviceAuth_GetExcludedGamesInLibrary_Response) Reset() {
	*m = CDeviceAuth_GetExcludedGamesInLibrary_Response{}
}
func (m *CDeviceAuth_GetExcludedGamesInLibrary_Response) String() string {
	return proto.CompactTextString(m)
}
func (*CDeviceAuth_GetExcludedGamesInLibrary_Response) ProtoMessage() {}
func (*CDeviceAuth_GetExcludedGamesInLibrary_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_deviceauth_steamclient_07e7dd7d80be16d7, []int{19}
}
func (m *CDeviceAuth_GetExcludedGamesInLibrary_Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CDeviceAuth_GetExcludedGamesInLibrary_Response.Unmarshal(m, b)
}
func (m *CDeviceAuth_GetExcludedGamesInLibrary_Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CDeviceAuth_GetExcludedGamesInLibrary_Response.Marshal(b, m, deterministic)
}
func (dst *CDeviceAuth_GetExcludedGamesInLibrary_Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CDeviceAuth_GetExcludedGamesInLibrary_Response.Merge(dst, src)
}
func (m *CDeviceAuth_GetExcludedGamesInLibrary_Response) XXX_Size() int {
	return xxx_messageInfo_CDeviceAuth_GetExcludedGamesInLibrary_Response.Size(m)
}
func (m *CDeviceAuth_GetExcludedGamesInLibrary_Response) XXX_DiscardUnknown() {
	xxx_messageInfo_CDeviceAuth_GetExcludedGamesInLibrary_Response.DiscardUnknown(m)
}

var xxx_messageInfo_CDeviceAuth_GetExcludedGamesInLibrary_Response proto.InternalMessageInfo

func (m *CDeviceAuth_GetExcludedGamesInLibrary_Response) GetExcludedGames() []*CDeviceAuth_GetExcludedGamesInLibrary_Response_ExcludedGame {
	if m != nil {
		return m.ExcludedGames
	}
	return nil
}

type CDeviceAuth_GetExcludedGamesInLibrary_Response_ExcludedGame struct {
	Appid                *uint32  `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	GameName             *string  `protobuf:"bytes,2,opt,name=game_name,json=gameName" json:"game_name,omitempty"`
	VacBanned            *bool    `protobuf:"varint,3,opt,name=vac_banned,json=vacBanned" json:"vac_banned,omitempty"`
	PackageExcluded      *bool    `protobuf:"varint,4,opt,name=package_excluded,json=packageExcluded" json:"package_excluded,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CDeviceAuth_GetExcludedGamesInLibrary_Response_ExcludedGame) Reset() {
	*m = CDeviceAuth_GetExcludedGamesInLibrary_Response_ExcludedGame{}
}
func (m *CDeviceAuth_GetExcludedGamesInLibrary_Response_ExcludedGame) String() string {
	return proto.CompactTextString(m)
}
func (*CDeviceAuth_GetExcludedGamesInLibrary_Response_ExcludedGame) ProtoMessage() {}
func (*CDeviceAuth_GetExcludedGamesInLibrary_Response_ExcludedGame) Descriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_deviceauth_steamclient_07e7dd7d80be16d7, []int{19, 0}
}
func (m *CDeviceAuth_GetExcludedGamesInLibrary_Response_ExcludedGame) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CDeviceAuth_GetExcludedGamesInLibrary_Response_ExcludedGame.Unmarshal(m, b)
}
func (m *CDeviceAuth_GetExcludedGamesInLibrary_Response_ExcludedGame) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CDeviceAuth_GetExcludedGamesInLibrary_Response_ExcludedGame.Marshal(b, m, deterministic)
}
func (dst *CDeviceAuth_GetExcludedGamesInLibrary_Response_ExcludedGame) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CDeviceAuth_GetExcludedGamesInLibrary_Response_ExcludedGame.Merge(dst, src)
}
func (m *CDeviceAuth_GetExcludedGamesInLibrary_Response_ExcludedGame) XXX_Size() int {
	return xxx_messageInfo_CDeviceAuth_GetExcludedGamesInLibrary_Response_ExcludedGame.Size(m)
}
func (m *CDeviceAuth_GetExcludedGamesInLibrary_Response_ExcludedGame) XXX_DiscardUnknown() {
	xxx_messageInfo_CDeviceAuth_GetExcludedGamesInLibrary_Response_ExcludedGame.DiscardUnknown(m)
}

var xxx_messageInfo_CDeviceAuth_GetExcludedGamesInLibrary_Response_ExcludedGame proto.InternalMessageInfo

func (m *CDeviceAuth_GetExcludedGamesInLibrary_Response_ExcludedGame) GetAppid() uint32 {
	if m != nil && m.Appid != nil {
		return *m.Appid
	}
	return 0
}

func (m *CDeviceAuth_GetExcludedGamesInLibrary_Response_ExcludedGame) GetGameName() string {
	if m != nil && m.GameName != nil {
		return *m.GameName
	}
	return ""
}

func (m *CDeviceAuth_GetExcludedGamesInLibrary_Response_ExcludedGame) GetVacBanned() bool {
	if m != nil && m.VacBanned != nil {
		return *m.VacBanned
	}
	return false
}

func (m *CDeviceAuth_GetExcludedGamesInLibrary_Response_ExcludedGame) GetPackageExcluded() bool {
	if m != nil && m.PackageExcluded != nil {
		return *m.PackageExcluded
	}
	return false
}

func init() {
	proto.RegisterType((*CDeviceAuth_GetOwnAuthorizedDevices_Request)(nil), "CDeviceAuth_GetOwnAuthorizedDevices_Request")
	proto.RegisterType((*CDeviceAuth_GetOwnAuthorizedDevices_Response)(nil), "CDeviceAuth_GetOwnAuthorizedDevices_Response")
	proto.RegisterType((*CDeviceAuth_GetOwnAuthorizedDevices_Response_Device)(nil), "CDeviceAuth_GetOwnAuthorizedDevices_Response.Device")
	proto.RegisterType((*CDeviceAuth_AcceptAuthorizationRequest_Request)(nil), "CDeviceAuth_AcceptAuthorizationRequest_Request")
	proto.RegisterType((*CDeviceAuth_AcceptAuthorizationRequest_Response)(nil), "CDeviceAuth_AcceptAuthorizationRequest_Response")
	proto.RegisterType((*CDeviceAuth_AuthorizeRemoteDevice_Request)(nil), "CDeviceAuth_AuthorizeRemoteDevice_Request")
	proto.RegisterType((*CDeviceAuth_AuthorizeRemoteDevice_Response)(nil), "CDeviceAuth_AuthorizeRemoteDevice_Response")
	proto.RegisterType((*CDeviceAuth_DeauthorizeRemoteDevice_Request)(nil), "CDeviceAuth_DeauthorizeRemoteDevice_Request")
	proto.RegisterType((*CDeviceAuth_DeauthorizeRemoteDevice_Response)(nil), "CDeviceAuth_DeauthorizeRemoteDevice_Response")
	proto.RegisterType((*CDeviceAuth_GetUsedAuthorizedDevices_Request)(nil), "CDeviceAuth_GetUsedAuthorizedDevices_Request")
	proto.RegisterType((*CDeviceAuth_GetUsedAuthorizedDevices_Response)(nil), "CDeviceAuth_GetUsedAuthorizedDevices_Response")
	proto.RegisterType((*CDeviceAuth_GetUsedAuthorizedDevices_Response_Device)(nil), "CDeviceAuth_GetUsedAuthorizedDevices_Response.Device")
	proto.RegisterType((*CDeviceAuth_GetAuthorizedBorrowers_Request)(nil), "CDeviceAuth_GetAuthorizedBorrowers_Request")
	proto.RegisterType((*CDeviceAuth_GetAuthorizedBorrowers_Response)(nil), "CDeviceAuth_GetAuthorizedBorrowers_Response")
	proto.RegisterType((*CDeviceAuth_GetAuthorizedBorrowers_Response_Borrower)(nil), "CDeviceAuth_GetAuthorizedBorrowers_Response.Borrower")
	proto.RegisterType((*CDeviceAuth_AddAuthorizedBorrowers_Request)(nil), "CDeviceAuth_AddAuthorizedBorrowers_Request")
	proto.RegisterType((*CDeviceAuth_AddAuthorizedBorrowers_Response)(nil), "CDeviceAuth_AddAuthorizedBorrowers_Response")
	proto.RegisterType((*CDeviceAuth_RemoveAuthorizedBorrowers_Request)(nil), "CDeviceAuth_RemoveAuthorizedBorrowers_Request")
	proto.RegisterType((*CDeviceAuth_RemoveAuthorizedBorrowers_Response)(nil), "CDeviceAuth_RemoveAuthorizedBorrowers_Response")
	proto.RegisterType((*CDeviceAuth_GetAuthorizedAsBorrower_Request)(nil), "CDeviceAuth_GetAuthorizedAsBorrower_Request")
	proto.RegisterType((*CDeviceAuth_GetAuthorizedAsBorrower_Response)(nil), "CDeviceAuth_GetAuthorizedAsBorrower_Response")
	proto.RegisterType((*CDeviceAuth_GetAuthorizedAsBorrower_Response_Lender)(nil), "CDeviceAuth_GetAuthorizedAsBorrower_Response.Lender")
	proto.RegisterType((*CDeviceAuth_GetExcludedGamesInLibrary_Request)(nil), "CDeviceAuth_GetExcludedGamesInLibrary_Request")
	proto.RegisterType((*CDeviceAuth_GetExcludedGamesInLibrary_Response)(nil), "CDeviceAuth_GetExcludedGamesInLibrary_Response")
	proto.RegisterType((*CDeviceAuth_GetExcludedGamesInLibrary_Response_ExcludedGame)(nil), "CDeviceAuth_GetExcludedGamesInLibrary_Response.ExcludedGame")
}

func init() {
	proto.RegisterFile("steammessages_deviceauth.steamclient.proto", fileDescriptor_steammessages_deviceauth_steamclient_07e7dd7d80be16d7)
}

var fileDescriptor_steammessages_deviceauth_steamclient_07e7dd7d80be16d7 = []byte{
	// 1376 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x58, 0x5b, 0x6f, 0x1b, 0x45,
	0x14, 0xd6, 0x3a, 0xcd, 0x6d, 0x72, 0x2b, 0x23, 0x68, 0xb7, 0x8b, 0xa0, 0xd3, 0x6d, 0x55, 0xd2,
	0x34, 0x59, 0xb7, 0x25, 0xa8, 0x5c, 0x5a, 0x44, 0x9a, 0xa2, 0x50, 0xa9, 0x6a, 0xab, 0x6d, 0x2b,
	0x24, 0x5e, 0x56, 0xe3, 0xdd, 0x13, 0x7b, 0x14, 0x7b, 0xc6, 0xdd, 0x19, 0x3b, 0x94, 0x27, 0xe4,
	0x17, 0x1e, 0xe0, 0x17, 0xb4, 0x12, 0x3c, 0x20, 0x5e, 0x10, 0x08, 0x84, 0x64, 0x24, 0x04, 0x3f,
	0x00, 0x89, 0x3f, 0x85, 0x76, 0x76, 0xd6, 0x77, 0x3b, 0xde, 0xd2, 0x88, 0x37, 0xfb, 0x9b, 0x33,
	0x67, 0xce, 0x39, 0x73, 0xe6, 0x3b, 0x9f, 0x8d, 0x36, 0xa4, 0x02, 0x5a, 0xab, 0x81, 0x94, 0xb4,
	0x0c, 0x32, 0x88, 0xa0, 0xc9, 0x42, 0xa0, 0x0d, 0x55, 0xf1, 0xf4, 0x42, 0x58, 0x65, 0xc0, 0x95,
	0x57, 0x8f, 0x85, 0x12, 0xce, 0x66, 0xbf, 0x6d, 0x83, 0xb3, 0x7d, 0x06, 0x51, 0x50, 0xa2, 0x12,
	0x86, 0xad, 0xdd, 0x18, 0x5d, 0xde, 0xbd, 0xad, 0xdd, 0xed, 0x34, 0x54, 0x25, 0xd8, 0x03, 0x75,
	0xff, 0x90, 0x27, 0x1f, 0x45, 0xcc, 0xbe, 0x80, 0x28, 0x5d, 0x92, 0x81, 0x0f, 0x4f, 0x1a, 0x20,
	0x15, 0xb6, 0xd1, 0xbc, 0xf6, 0xc1, 0x22, 0xdb, 0x22, 0xd6, 0xfa, 0x9c, 0x9f, 0x7d, 0xc5, 0x97,
	0xd0, 0x49, 0xc6, 0xc3, 0x6a, 0x23, 0x82, 0x20, 0xa4, 0x3c, 0x84, 0x2a, 0x44, 0x76, 0x81, 0x58,
	0xeb, 0x0b, 0xfe, 0x9a, 0xc1, 0x77, 0x0d, 0xec, 0xfe, 0x3c, 0x83, 0x36, 0xa7, 0x3b, 0x54, 0xd6,
	0x05, 0x97, 0x80, 0xef, 0xa1, 0xf9, 0x34, 0x65, 0x69, 0x5b, 0x64, 0x66, 0x7d, 0xe9, 0xda, 0xb6,
	0x97, 0x67, 0xbf, 0x97, 0x02, 0x7e, 0xe6, 0xc4, 0xf9, 0xa9, 0x80, 0xe6, 0x52, 0x0c, 0x6f, 0xa0,
	0x57, 0x92, 0x3a, 0x9a, 0x92, 0x06, 0x4a, 0x1c, 0x00, 0x37, 0xa9, 0xad, 0x25, 0x0b, 0xa9, 0xd9,
	0xa3, 0x04, 0xc6, 0x67, 0xd1, 0x92, 0x31, 0xe3, 0xb4, 0x06, 0x3a, 0xbb, 0x45, 0x1f, 0xa5, 0xd0,
	0x3d, 0x5a, 0x03, 0xfc, 0x06, 0x42, 0x4c, 0x06, 0x75, 0xe0, 0x11, 0xe3, 0x65, 0x7b, 0x46, 0x67,
	0xbf, 0xc8, 0xe4, 0x83, 0x14, 0x48, 0xf6, 0x33, 0xd9, 0xad, 0xce, 0x09, 0xbd, 0x8e, 0x98, 0xcc,
	0x0a, 0x83, 0x2f, 0xa0, 0xd5, 0x2a, 0x95, 0x2a, 0x50, 0xac, 0x06, 0x41, 0x43, 0x42, 0x64, 0xcf,
	0x12, 0x6b, 0x7d, 0xc5, 0x5f, 0x4e, 0xd0, 0x47, 0xac, 0x06, 0x8f, 0x25, 0x44, 0x78, 0x1d, 0x9d,
	0xd4, 0x56, 0x25, 0x11, 0xc7, 0xe2, 0x10, 0xe2, 0x80, 0x45, 0xf6, 0x9c, 0x8e, 0x58, 0xef, 0xbe,
	0x65, 0xe0, 0x3b, 0x11, 0xbe, 0x88, 0xd6, 0xb4, 0x25, 0xad, 0xd7, 0x83, 0x7a, 0x95, 0x3e, 0x85,
	0xc8, 0x9e, 0xd7, 0x0e, 0x57, 0x12, 0x78, 0xa7, 0x5e, 0x7f, 0xa0, 0x41, 0x13, 0x77, 0x95, 0xd5,
	0x98, 0x82, 0xc8, 0x5e, 0xc8, 0xe2, 0xbe, 0x9b, 0x02, 0xee, 0xef, 0x16, 0xea, 0xab, 0xf7, 0x4e,
	0x18, 0x42, 0x5d, 0x65, 0xf5, 0xa6, 0x8a, 0x09, 0x6e, 0xfa, 0x63, 0x8a, 0x3e, 0x19, 0x59, 0xf0,
	0xc2, 0xe8, 0x82, 0xbf, 0x8e, 0x16, 0xb5, 0x6d, 0x28, 0x22, 0xd0, 0xe5, 0x9c, 0xf3, 0x17, 0x12,
	0x60, 0x57, 0x44, 0x80, 0xcf, 0xa1, 0xe5, 0xfd, 0x58, 0xd4, 0x82, 0xec, 0x9c, 0x13, 0x7a, 0x7d,
	0x29, 0xc1, 0x1e, 0xa6, 0x90, 0x7b, 0x15, 0x15, 0xa7, 0x8e, 0x3b, 0x6d, 0x15, 0xf7, 0x09, 0xba,
	0xd4, 0xb7, 0x25, 0x6b, 0x2a, 0x1f, 0x6a, 0x42, 0x41, 0xba, 0xf2, 0x72, 0xb3, 0x74, 0x37, 0xd1,
	0xc6, 0x34, 0x47, 0x9a, 0x00, 0x65, 0xff, 0x83, 0xbd, 0xad, 0x69, 0xe0, 0xb8, 0x43, 0xf4, 0xfa,
	0x1f, 0xec, 0xf8, 0x43, 0x4d, 0x90, 0x9f, 0x0c, 0x3d, 0xf0, 0xa4, 0x73, 0x5f, 0x80, 0x56, 0xdc,
	0x7f, 0x0a, 0x68, 0x6b, 0x4a, 0x57, 0x86, 0x2c, 0xee, 0x0f, 0x92, 0xc5, 0x3b, 0x5e, 0x2e, 0x07,
	0x43, 0x6c, 0xf1, 0xb7, 0x75, 0x3c, 0x6c, 0x71, 0x1e, 0xad, 0x88, 0x43, 0x0e, 0x71, 0xa7, 0x83,
	0xd3, 0x0e, 0x5f, 0xd6, 0xa0, 0x69, 0xe1, 0x11, 0x94, 0x70, 0x62, 0x04, 0x25, 0x8c, 0x78, 0xe8,
	0xb3, 0x23, 0x1e, 0xba, 0xfb, 0xcc, 0xea, 0xef, 0xb5, 0x3d, 0x50, 0xdd, 0x42, 0x64, 0xc4, 0xf1,
	0x72, 0xd9, 0x1e, 0xbf, 0x85, 0x32, 0x68, 0x80, 0x19, 0x57, 0x0d, 0x6c, 0xe8, 0xd1, 0xfd, 0xa6,
	0x30, 0x34, 0x8b, 0x46, 0x07, 0x67, 0x2e, 0xfa, 0x21, 0x5a, 0xcc, 0x28, 0x70, 0xec, 0x55, 0x4f,
	0x72, 0xe0, 0x65, 0x90, 0xdf, 0xf5, 0xe3, 0x7c, 0x65, 0xa1, 0x85, 0x0c, 0x9f, 0x90, 0x7f, 0x3f,
	0xd3, 0x17, 0x8e, 0x60, 0xfa, 0x99, 0x21, 0xa6, 0x3f, 0x87, 0x96, 0xf5, 0x8d, 0x86, 0x31, 0x50,
	0xd5, 0xb9, 0xd4, 0xa5, 0x04, 0xdb, 0x4d, 0x21, 0xf7, 0xc9, 0x00, 0x2d, 0x44, 0xd1, 0x0b, 0x5f,
	0x95, 0xf9, 0xd8, 0x99, 0x18, 0x76, 0x81, 0xcc, 0x24, 0x2d, 0x6b, 0xf0, 0xcc, 0x9b, 0xfb, 0xb8,
	0xff, 0x02, 0xc6, 0x1e, 0x69, 0x2e, 0xe0, 0x22, 0x5a, 0x93, 0x10, 0x0a, 0x1e, 0xc9, 0x40, 0x89,
	0xe0, 0x90, 0x32, 0xa5, 0xcf, 0x9e, 0xf5, 0x57, 0x0c, 0xfc, 0x48, 0x7c, 0x4a, 0x99, 0x72, 0x55,
	0xff, 0x13, 0x4e, 0x28, 0xa3, 0x09, 0xc7, 0x9e, 0xcc, 0x95, 0xfe, 0xa1, 0x35, 0xe9, 0x54, 0xc3,
	0x5a, 0xcf, 0xad, 0x09, 0x0d, 0xb8, 0x23, 0xb3, 0x1d, 0xff, 0xd3, 0xf3, 0xf8, 0xae, 0x30, 0x44,
	0xaa, 0x63, 0xa2, 0xeb, 0xaa, 0xa6, 0x2a, 0xf0, 0xa8, 0xfb, 0x3a, 0xb6, 0xbd, 0x3c, 0xfb, 0xbd,
	0xbb, 0x7a, 0xb3, 0x9f, 0x39, 0x71, 0xbe, 0xb5, 0xd0, 0x5c, 0x8a, 0x4d, 0xc8, 0x7c, 0xb0, 0xb1,
	0x0b, 0x43, 0x8d, 0xfd, 0x9f, 0x55, 0xd2, 0x69, 0x34, 0xcf, 0x64, 0x57, 0x1e, 0x2d, 0xf8, 0x73,
	0x4c, 0x26, 0x2c, 0xe8, 0xde, 0x19, 0x1a, 0x15, 0x1f, 0x7f, 0xae, 0x4b, 0x18, 0xed, 0xd1, 0x1a,
	0xc8, 0x3b, 0xfc, 0x2e, 0x2b, 0xc5, 0x34, 0x7e, 0x3a, 0xc5, 0xd8, 0xf9, 0xbe, 0x80, 0xbc, 0x69,
	0x7d, 0x99, 0x72, 0x87, 0x68, 0x15, 0x8c, 0x49, 0x50, 0x4e, 0x6c, 0x4c, 0xd5, 0x6f, 0xe4, 0x74,
	0xe4, 0xf5, 0xae, 0xfb, 0x2b, 0xd0, 0x6b, 0xed, 0x7c, 0x6d, 0xa1, 0xe5, 0xde, 0x75, 0xfc, 0x2a,
	0x9a, 0xa5, 0xf5, 0xba, 0x49, 0x60, 0xc5, 0x4f, 0xbf, 0x24, 0xc2, 0x29, 0x09, 0xa1, 0x77, 0xf2,
	0x2c, 0x24, 0x40, 0xa6, 0x52, 0x9b, 0x34, 0x0c, 0x4a, 0x94, 0xf3, 0x0e, 0x37, 0x2d, 0x36, 0x69,
	0x78, 0x4b, 0x03, 0x49, 0xef, 0xd6, 0x69, 0x78, 0x40, 0xcb, 0x10, 0x64, 0x67, 0x9b, 0x4b, 0x58,
	0x33, 0x78, 0x16, 0xc0, 0xb5, 0x1f, 0x56, 0x11, 0xea, 0xe6, 0x86, 0x9f, 0x59, 0xe8, 0xf4, 0x18,
	0x2d, 0x8e, 0x37, 0xbd, 0x1c, 0x3f, 0x33, 0x9c, 0xad, 0x5c, 0xfa, 0xde, 0x75, 0x5b, 0x6d, 0xfb,
	0xcd, 0x3d, 0x50, 0xa4, 0xca, 0xa4, 0x22, 0x62, 0x9f, 0x74, 0xe4, 0x49, 0x44, 0xcc, 0x14, 0xc7,
	0x6d, 0x0b, 0x39, 0xe3, 0x05, 0x20, 0x2e, 0xe6, 0x54, 0xb8, 0xce, 0x15, 0x2f, 0xaf, 0xb4, 0xdc,
	0x6e, 0xb5, 0xed, 0x2b, 0xa9, 0x21, 0xa1, 0xbc, 0x13, 0xa3, 0x36, 0x26, 0x71, 0x6a, 0x4d, 0x4a,
	0x4f, 0x09, 0xe5, 0x42, 0x55, 0x20, 0x26, 0x0d, 0x09, 0xb1, 0xc4, 0x3f, 0x5a, 0xe8, 0xb5, 0x91,
	0x92, 0x10, 0x6f, 0x78, 0x53, 0x2b, 0x55, 0xe7, 0xb2, 0x97, 0x43, 0x62, 0xbe, 0xdb, 0x6a, 0xdb,
	0xdb, 0x1d, 0x1b, 0x22, 0x0e, 0x93, 0xf0, 0x12, 0x43, 0x53, 0x4c, 0xa2, 0x2a, 0x54, 0x91, 0x0a,
	0x95, 0xc4, 0x3c, 0xe2, 0x2c, 0x7a, 0xfc, 0xdc, 0x42, 0xa7, 0xc7, 0x88, 0xc3, 0x81, 0x0e, 0x38,
	0x42, 0xb7, 0x0e, 0x74, 0xc0, 0x91, 0x82, 0xf3, 0x7c, 0xab, 0x6d, 0x9f, 0xf5, 0xa1, 0x29, 0x0e,
	0xd2, 0x78, 0x4d, 0xa0, 0x7d, 0x35, 0xc6, 0x7f, 0x5a, 0xc8, 0x1e, 0x27, 0xff, 0xf0, 0x96, 0x97,
	0x47, 0xb1, 0x3a, 0x5e, 0x3e, 0x51, 0xe9, 0x7e, 0xd4, 0x6a, 0xdb, 0x37, 0x26, 0xb7, 0xa8, 0xbe,
	0x70, 0x92, 0xca, 0x37, 0x62, 0xa6, 0x5b, 0x44, 0x34, 0x95, 0x10, 0xc1, 0xf1, 0x6f, 0x16, 0x3a,
	0x35, 0x5a, 0xd1, 0xe0, 0xcb, 0xde, 0xf4, 0xa2, 0xce, 0xd9, 0xcc, 0xa3, 0x91, 0xdc, 0x9b, 0xad,
	0xb6, 0xfd, 0x5e, 0x6f, 0xdc, 0xba, 0x2b, 0xd3, 0x0e, 0x08, 0x29, 0x37, 0x71, 0x12, 0xc1, 0x7b,
	0x5b, 0xba, 0x93, 0x13, 0xfe, 0xd5, 0x42, 0xa7, 0x46, 0xcb, 0x88, 0x81, 0xa0, 0x27, 0xcb, 0x9b,
	0x81, 0xa0, 0x8f, 0x10, 0x26, 0xee, 0x07, 0xad, 0xb6, 0x7d, 0x7d, 0x27, 0x8a, 0xc6, 0x07, 0x6b,
	0x7e, 0xeb, 0x8e, 0x22, 0x8a, 0xbf, 0x2c, 0x74, 0x66, 0xac, 0x58, 0xc0, 0x9e, 0x97, 0x4b, 0xca,
	0x38, 0xc5, 0xbc, 0x22, 0xe4, 0xc3, 0x56, 0xdb, 0x7e, 0x3f, 0xb5, 0x7b, 0xa1, 0xf0, 0xff, 0x48,
	0x49, 0x78, 0xd4, 0x68, 0xc7, 0x9b, 0x5e, 0x0e, 0x79, 0x33, 0x4c, 0xc2, 0x13, 0xe5, 0x82, 0xbb,
	0xd3, 0x6a, 0xdb, 0x37, 0x7b, 0x3b, 0xc5, 0xe8, 0x86, 0x34, 0xfe, 0x9e, 0x48, 0xcb, 0xac, 0x09,
	0x9c, 0xd0, 0x30, 0x14, 0x0d, 0xae, 0x08, 0x95, 0x59, 0xaf, 0xc7, 0xf8, 0x17, 0x0b, 0x9d, 0x19,
	0x3b, 0x20, 0xb1, 0xe7, 0xe5, 0x9a, 0xee, 0x03, 0xa5, 0x3f, 0x7a, 0xf0, 0xba, 0x57, 0x5b, 0x6d,
	0x7b, 0xab, 0x37, 0x83, 0x6c, 0xfe, 0x99, 0x47, 0xc8, 0x78, 0x27, 0xa7, 0x6a, 0xba, 0xd7, 0xb9,
	0xd0, 0x6a, 0xdb, 0xc4, 0x38, 0x22, 0x0f, 0x2b, 0x34, 0x4e, 0xd8, 0x50, 0x82, 0x52, 0x8c, 0x97,
	0x25, 0x91, 0x10, 0x27, 0xe7, 0xdf, 0xba, 0xf1, 0xd9, 0xf5, 0x32, 0x53, 0x95, 0x46, 0xc9, 0x0b,
	0x45, 0xad, 0x78, 0xf5, 0xed, 0x83, 0x62, 0x59, 0x6c, 0x69, 0xa9, 0xb1, 0x15, 0x83, 0x14, 0x8d,
	0x38, 0x04, 0x59, 0xd4, 0xff, 0xc7, 0x95, 0x1a, 0xfb, 0x45, 0xbd, 0x50, 0x4c, 0xff, 0xa5, 0xfb,
	0xd2, 0xb2, 0xfe, 0x0d, 0x00, 0x00, 0xff, 0xff, 0x63, 0x45, 0x2f, 0xae, 0xfd, 0x13, 0x00, 0x00,
}
