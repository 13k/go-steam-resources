// Code generated by protoc-gen-go. DO NOT EDIT.
// source: steammessages_clientlanp2p.proto

package steam // import "github.com/13k/go-steam-resources/protobuf/steam"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type CMsgClientLANP2PRequestChunks struct {
	ChunkKeys            []*CMsgClientLANP2PRequestChunks_ChunkKey `protobuf:"bytes,1,rep,name=chunk_keys,json=chunkKeys" json:"chunk_keys,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                  `json:"-"`
	XXX_unrecognized     []byte                                    `json:"-"`
	XXX_sizecache        int32                                     `json:"-"`
}

func (m *CMsgClientLANP2PRequestChunks) Reset()         { *m = CMsgClientLANP2PRequestChunks{} }
func (m *CMsgClientLANP2PRequestChunks) String() string { return proto.CompactTextString(m) }
func (*CMsgClientLANP2PRequestChunks) ProtoMessage()    {}
func (*CMsgClientLANP2PRequestChunks) Descriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_clientlanp2p_388128bfa23fe408, []int{0}
}
func (m *CMsgClientLANP2PRequestChunks) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgClientLANP2PRequestChunks.Unmarshal(m, b)
}
func (m *CMsgClientLANP2PRequestChunks) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgClientLANP2PRequestChunks.Marshal(b, m, deterministic)
}
func (dst *CMsgClientLANP2PRequestChunks) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgClientLANP2PRequestChunks.Merge(dst, src)
}
func (m *CMsgClientLANP2PRequestChunks) XXX_Size() int {
	return xxx_messageInfo_CMsgClientLANP2PRequestChunks.Size(m)
}
func (m *CMsgClientLANP2PRequestChunks) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgClientLANP2PRequestChunks.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgClientLANP2PRequestChunks proto.InternalMessageInfo

func (m *CMsgClientLANP2PRequestChunks) GetChunkKeys() []*CMsgClientLANP2PRequestChunks_ChunkKey {
	if m != nil {
		return m.ChunkKeys
	}
	return nil
}

type CMsgClientLANP2PRequestChunks_ChunkKey struct {
	DepotId              *uint32  `protobuf:"varint,1,opt,name=depot_id,json=depotId" json:"depot_id,omitempty"`
	Sha                  []byte   `protobuf:"bytes,2,opt,name=sha" json:"sha,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgClientLANP2PRequestChunks_ChunkKey) Reset() {
	*m = CMsgClientLANP2PRequestChunks_ChunkKey{}
}
func (m *CMsgClientLANP2PRequestChunks_ChunkKey) String() string { return proto.CompactTextString(m) }
func (*CMsgClientLANP2PRequestChunks_ChunkKey) ProtoMessage()    {}
func (*CMsgClientLANP2PRequestChunks_ChunkKey) Descriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_clientlanp2p_388128bfa23fe408, []int{0, 0}
}
func (m *CMsgClientLANP2PRequestChunks_ChunkKey) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgClientLANP2PRequestChunks_ChunkKey.Unmarshal(m, b)
}
func (m *CMsgClientLANP2PRequestChunks_ChunkKey) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgClientLANP2PRequestChunks_ChunkKey.Marshal(b, m, deterministic)
}
func (dst *CMsgClientLANP2PRequestChunks_ChunkKey) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgClientLANP2PRequestChunks_ChunkKey.Merge(dst, src)
}
func (m *CMsgClientLANP2PRequestChunks_ChunkKey) XXX_Size() int {
	return xxx_messageInfo_CMsgClientLANP2PRequestChunks_ChunkKey.Size(m)
}
func (m *CMsgClientLANP2PRequestChunks_ChunkKey) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgClientLANP2PRequestChunks_ChunkKey.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgClientLANP2PRequestChunks_ChunkKey proto.InternalMessageInfo

func (m *CMsgClientLANP2PRequestChunks_ChunkKey) GetDepotId() uint32 {
	if m != nil && m.DepotId != nil {
		return *m.DepotId
	}
	return 0
}

func (m *CMsgClientLANP2PRequestChunks_ChunkKey) GetSha() []byte {
	if m != nil {
		return m.Sha
	}
	return nil
}

type CMsgClientLANP2PRequestChunksResponse struct {
	ChunkResponses       []*CMsgClientLANP2PRequestChunksResponse_ChunkData `protobuf:"bytes,1,rep,name=chunk_responses,json=chunkResponses" json:"chunk_responses,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                           `json:"-"`
	XXX_unrecognized     []byte                                             `json:"-"`
	XXX_sizecache        int32                                              `json:"-"`
}

func (m *CMsgClientLANP2PRequestChunksResponse) Reset()         { *m = CMsgClientLANP2PRequestChunksResponse{} }
func (m *CMsgClientLANP2PRequestChunksResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgClientLANP2PRequestChunksResponse) ProtoMessage()    {}
func (*CMsgClientLANP2PRequestChunksResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_clientlanp2p_388128bfa23fe408, []int{1}
}
func (m *CMsgClientLANP2PRequestChunksResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgClientLANP2PRequestChunksResponse.Unmarshal(m, b)
}
func (m *CMsgClientLANP2PRequestChunksResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgClientLANP2PRequestChunksResponse.Marshal(b, m, deterministic)
}
func (dst *CMsgClientLANP2PRequestChunksResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgClientLANP2PRequestChunksResponse.Merge(dst, src)
}
func (m *CMsgClientLANP2PRequestChunksResponse) XXX_Size() int {
	return xxx_messageInfo_CMsgClientLANP2PRequestChunksResponse.Size(m)
}
func (m *CMsgClientLANP2PRequestChunksResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgClientLANP2PRequestChunksResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgClientLANP2PRequestChunksResponse proto.InternalMessageInfo

func (m *CMsgClientLANP2PRequestChunksResponse) GetChunkResponses() []*CMsgClientLANP2PRequestChunksResponse_ChunkData {
	if m != nil {
		return m.ChunkResponses
	}
	return nil
}

type CMsgClientLANP2PRequestChunksResponse_ChunkData struct {
	Result               *uint32  `protobuf:"varint,1,opt,name=result" json:"result,omitempty"`
	DepotId              *uint32  `protobuf:"varint,2,opt,name=depot_id,json=depotId" json:"depot_id,omitempty"`
	Sha                  []byte   `protobuf:"bytes,3,opt,name=sha" json:"sha,omitempty"`
	ChunkData            []byte   `protobuf:"bytes,4,opt,name=chunk_data,json=chunkData" json:"chunk_data,omitempty"`
	Encrypted            *bool    `protobuf:"varint,5,opt,name=encrypted" json:"encrypted,omitempty"`
	Compressed           *bool    `protobuf:"varint,6,opt,name=compressed" json:"compressed,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgClientLANP2PRequestChunksResponse_ChunkData) Reset() {
	*m = CMsgClientLANP2PRequestChunksResponse_ChunkData{}
}
func (m *CMsgClientLANP2PRequestChunksResponse_ChunkData) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgClientLANP2PRequestChunksResponse_ChunkData) ProtoMessage() {}
func (*CMsgClientLANP2PRequestChunksResponse_ChunkData) Descriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_clientlanp2p_388128bfa23fe408, []int{1, 0}
}
func (m *CMsgClientLANP2PRequestChunksResponse_ChunkData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgClientLANP2PRequestChunksResponse_ChunkData.Unmarshal(m, b)
}
func (m *CMsgClientLANP2PRequestChunksResponse_ChunkData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgClientLANP2PRequestChunksResponse_ChunkData.Marshal(b, m, deterministic)
}
func (dst *CMsgClientLANP2PRequestChunksResponse_ChunkData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgClientLANP2PRequestChunksResponse_ChunkData.Merge(dst, src)
}
func (m *CMsgClientLANP2PRequestChunksResponse_ChunkData) XXX_Size() int {
	return xxx_messageInfo_CMsgClientLANP2PRequestChunksResponse_ChunkData.Size(m)
}
func (m *CMsgClientLANP2PRequestChunksResponse_ChunkData) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgClientLANP2PRequestChunksResponse_ChunkData.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgClientLANP2PRequestChunksResponse_ChunkData proto.InternalMessageInfo

func (m *CMsgClientLANP2PRequestChunksResponse_ChunkData) GetResult() uint32 {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return 0
}

func (m *CMsgClientLANP2PRequestChunksResponse_ChunkData) GetDepotId() uint32 {
	if m != nil && m.DepotId != nil {
		return *m.DepotId
	}
	return 0
}

func (m *CMsgClientLANP2PRequestChunksResponse_ChunkData) GetSha() []byte {
	if m != nil {
		return m.Sha
	}
	return nil
}

func (m *CMsgClientLANP2PRequestChunksResponse_ChunkData) GetChunkData() []byte {
	if m != nil {
		return m.ChunkData
	}
	return nil
}

func (m *CMsgClientLANP2PRequestChunksResponse_ChunkData) GetEncrypted() bool {
	if m != nil && m.Encrypted != nil {
		return *m.Encrypted
	}
	return false
}

func (m *CMsgClientLANP2PRequestChunksResponse_ChunkData) GetCompressed() bool {
	if m != nil && m.Compressed != nil {
		return *m.Compressed
	}
	return false
}

func init() {
	proto.RegisterType((*CMsgClientLANP2PRequestChunks)(nil), "CMsgClientLANP2PRequestChunks")
	proto.RegisterType((*CMsgClientLANP2PRequestChunks_ChunkKey)(nil), "CMsgClientLANP2PRequestChunks.ChunkKey")
	proto.RegisterType((*CMsgClientLANP2PRequestChunksResponse)(nil), "CMsgClientLANP2PRequestChunksResponse")
	proto.RegisterType((*CMsgClientLANP2PRequestChunksResponse_ChunkData)(nil), "CMsgClientLANP2PRequestChunksResponse.ChunkData")
}

func init() {
	proto.RegisterFile("steammessages_clientlanp2p.proto", fileDescriptor_steammessages_clientlanp2p_388128bfa23fe408)
}

var fileDescriptor_steammessages_clientlanp2p_388128bfa23fe408 = []byte{
	// 348 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x52, 0xcf, 0x4f, 0xea, 0x40,
	0x10, 0x7e, 0x0b, 0xef, 0xf1, 0x60, 0xde, 0xf3, 0x47, 0x7a, 0x30, 0x95, 0x88, 0x69, 0x48, 0x8c,
	0xbd, 0xd0, 0x22, 0x1e, 0x38, 0x2b, 0xc6, 0x68, 0xfc, 0x11, 0xd2, 0x9b, 0x5e, 0xc8, 0xd2, 0x8e,
	0x85, 0x40, 0xbb, 0xeb, 0xce, 0xf6, 0xc0, 0xcd, 0x3f, 0xc5, 0x7f, 0xc0, 0x8b, 0x7f, 0xa1, 0x61,
	0xdb, 0xa2, 0x24, 0x86, 0x78, 0xda, 0x99, 0xef, 0xdb, 0x99, 0xf9, 0xbe, 0xc9, 0x80, 0x43, 0x1a,
	0x79, 0x92, 0x20, 0x11, 0x8f, 0x91, 0x46, 0xe1, 0x7c, 0x8a, 0xa9, 0x9e, 0xf3, 0x54, 0xf6, 0xa4,
	0x27, 0x95, 0xd0, 0xa2, 0x69, 0xaf, 0xff, 0x18, 0x73, 0xc2, 0x9c, 0x69, 0xbf, 0x32, 0x68, 0x0d,
	0xee, 0x28, 0x1e, 0x98, 0xa2, 0xdb, 0xb3, 0xfb, 0x61, 0x6f, 0x18, 0xe0, 0x73, 0x86, 0xa4, 0x07,
	0x93, 0x2c, 0x9d, 0x91, 0x75, 0x09, 0x10, 0x2e, 0xa3, 0xd1, 0x0c, 0x17, 0x64, 0x33, 0xa7, 0xea,
	0xfe, 0xeb, 0x1d, 0x7b, 0x1b, 0x6b, 0x3c, 0xf3, 0xdc, 0xe0, 0x22, 0x68, 0x84, 0x45, 0x44, 0xcd,
	0x3e, 0xd4, 0x4b, 0xd8, 0xda, 0x87, 0x7a, 0x84, 0x52, 0xe8, 0xd1, 0x34, 0xb2, 0x99, 0xc3, 0xdc,
	0xad, 0xe0, 0xaf, 0xc9, 0xaf, 0x23, 0x6b, 0x17, 0xaa, 0x34, 0xe1, 0x76, 0xc5, 0x61, 0xee, 0xff,
	0x60, 0x19, 0xb6, 0xdf, 0x2b, 0x70, 0xb4, 0x71, 0x5c, 0x80, 0x24, 0x45, 0x4a, 0x68, 0x3d, 0xc0,
	0x4e, 0x2e, 0x55, 0x15, 0x48, 0xa9, 0xb7, 0xeb, 0xfd, 0xa8, 0x41, 0xae, 0xfb, 0x82, 0x6b, 0x1e,
	0x6c, 0x9b, 0x46, 0x25, 0x41, 0xcd, 0x37, 0x06, 0x8d, 0x15, 0x6b, 0xed, 0x41, 0x4d, 0x21, 0x65,
	0x73, 0x5d, 0xa8, 0x2f, 0xb2, 0x35, 0x5f, 0x95, 0x6f, 0x7d, 0x55, 0x57, 0xbe, 0xac, 0x56, 0xb9,
	0xd8, 0x88, 0x6b, 0x6e, 0xff, 0x36, 0x44, 0xbe, 0x2f, 0x33, 0xe3, 0x00, 0x1a, 0x98, 0x86, 0x6a,
	0x21, 0x35, 0x46, 0xf6, 0x1f, 0x87, 0xb9, 0xf5, 0xe0, 0x13, 0xb0, 0x0e, 0x01, 0x42, 0x91, 0x48,
	0x85, 0x44, 0x18, 0xd9, 0x35, 0x43, 0x7f, 0x41, 0xce, 0xfb, 0x57, 0xec, 0xb1, 0x1b, 0x4f, 0xf5,
	0x24, 0x1b, 0x7b, 0xa1, 0x48, 0xfc, 0x93, 0xd3, 0x99, 0x1f, 0x8b, 0x8e, 0xb9, 0x83, 0x8e, 0x42,
	0x12, 0x99, 0x0a, 0x91, 0x7c, 0x73, 0x04, 0xe3, 0xec, 0xc9, 0x37, 0xc4, 0x0b, 0xfb, 0xf5, 0x11,
	0x00, 0x00, 0xff, 0xff, 0x0f, 0x93, 0xb2, 0x8d, 0x4d, 0x02, 0x00, 0x00,
}
