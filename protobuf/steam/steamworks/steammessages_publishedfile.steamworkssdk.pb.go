// Code generated by protoc-gen-go. DO NOT EDIT.
// source: steammessages_publishedfile.steamworkssdk.proto

package steamworks // import "github.com/13k/go-steam-resources/protobuf/steam/steamworks"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type CPublishedFile_Subscribe_Request struct {
	Publishedfileid      *uint64  `protobuf:"varint,1,opt,name=publishedfileid" json:"publishedfileid,omitempty"`
	ListType             *uint32  `protobuf:"varint,2,opt,name=list_type,json=listType" json:"list_type,omitempty"`
	Appid                *int32   `protobuf:"varint,3,opt,name=appid" json:"appid,omitempty"`
	NotifyClient         *bool    `protobuf:"varint,4,opt,name=notify_client,json=notifyClient" json:"notify_client,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CPublishedFile_Subscribe_Request) Reset()         { *m = CPublishedFile_Subscribe_Request{} }
func (m *CPublishedFile_Subscribe_Request) String() string { return proto.CompactTextString(m) }
func (*CPublishedFile_Subscribe_Request) ProtoMessage()    {}
func (*CPublishedFile_Subscribe_Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_publishedfile_steamworkssdk_b01c6372b7edfb89, []int{0}
}
func (m *CPublishedFile_Subscribe_Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CPublishedFile_Subscribe_Request.Unmarshal(m, b)
}
func (m *CPublishedFile_Subscribe_Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CPublishedFile_Subscribe_Request.Marshal(b, m, deterministic)
}
func (dst *CPublishedFile_Subscribe_Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CPublishedFile_Subscribe_Request.Merge(dst, src)
}
func (m *CPublishedFile_Subscribe_Request) XXX_Size() int {
	return xxx_messageInfo_CPublishedFile_Subscribe_Request.Size(m)
}
func (m *CPublishedFile_Subscribe_Request) XXX_DiscardUnknown() {
	xxx_messageInfo_CPublishedFile_Subscribe_Request.DiscardUnknown(m)
}

var xxx_messageInfo_CPublishedFile_Subscribe_Request proto.InternalMessageInfo

func (m *CPublishedFile_Subscribe_Request) GetPublishedfileid() uint64 {
	if m != nil && m.Publishedfileid != nil {
		return *m.Publishedfileid
	}
	return 0
}

func (m *CPublishedFile_Subscribe_Request) GetListType() uint32 {
	if m != nil && m.ListType != nil {
		return *m.ListType
	}
	return 0
}

func (m *CPublishedFile_Subscribe_Request) GetAppid() int32 {
	if m != nil && m.Appid != nil {
		return *m.Appid
	}
	return 0
}

func (m *CPublishedFile_Subscribe_Request) GetNotifyClient() bool {
	if m != nil && m.NotifyClient != nil {
		return *m.NotifyClient
	}
	return false
}

type CPublishedFile_Subscribe_Response struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CPublishedFile_Subscribe_Response) Reset()         { *m = CPublishedFile_Subscribe_Response{} }
func (m *CPublishedFile_Subscribe_Response) String() string { return proto.CompactTextString(m) }
func (*CPublishedFile_Subscribe_Response) ProtoMessage()    {}
func (*CPublishedFile_Subscribe_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_publishedfile_steamworkssdk_b01c6372b7edfb89, []int{1}
}
func (m *CPublishedFile_Subscribe_Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CPublishedFile_Subscribe_Response.Unmarshal(m, b)
}
func (m *CPublishedFile_Subscribe_Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CPublishedFile_Subscribe_Response.Marshal(b, m, deterministic)
}
func (dst *CPublishedFile_Subscribe_Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CPublishedFile_Subscribe_Response.Merge(dst, src)
}
func (m *CPublishedFile_Subscribe_Response) XXX_Size() int {
	return xxx_messageInfo_CPublishedFile_Subscribe_Response.Size(m)
}
func (m *CPublishedFile_Subscribe_Response) XXX_DiscardUnknown() {
	xxx_messageInfo_CPublishedFile_Subscribe_Response.DiscardUnknown(m)
}

var xxx_messageInfo_CPublishedFile_Subscribe_Response proto.InternalMessageInfo

type CPublishedFile_Unsubscribe_Request struct {
	Publishedfileid      *uint64  `protobuf:"varint,1,opt,name=publishedfileid" json:"publishedfileid,omitempty"`
	ListType             *uint32  `protobuf:"varint,2,opt,name=list_type,json=listType" json:"list_type,omitempty"`
	Appid                *int32   `protobuf:"varint,3,opt,name=appid" json:"appid,omitempty"`
	NotifyClient         *bool    `protobuf:"varint,4,opt,name=notify_client,json=notifyClient" json:"notify_client,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CPublishedFile_Unsubscribe_Request) Reset()         { *m = CPublishedFile_Unsubscribe_Request{} }
func (m *CPublishedFile_Unsubscribe_Request) String() string { return proto.CompactTextString(m) }
func (*CPublishedFile_Unsubscribe_Request) ProtoMessage()    {}
func (*CPublishedFile_Unsubscribe_Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_publishedfile_steamworkssdk_b01c6372b7edfb89, []int{2}
}
func (m *CPublishedFile_Unsubscribe_Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CPublishedFile_Unsubscribe_Request.Unmarshal(m, b)
}
func (m *CPublishedFile_Unsubscribe_Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CPublishedFile_Unsubscribe_Request.Marshal(b, m, deterministic)
}
func (dst *CPublishedFile_Unsubscribe_Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CPublishedFile_Unsubscribe_Request.Merge(dst, src)
}
func (m *CPublishedFile_Unsubscribe_Request) XXX_Size() int {
	return xxx_messageInfo_CPublishedFile_Unsubscribe_Request.Size(m)
}
func (m *CPublishedFile_Unsubscribe_Request) XXX_DiscardUnknown() {
	xxx_messageInfo_CPublishedFile_Unsubscribe_Request.DiscardUnknown(m)
}

var xxx_messageInfo_CPublishedFile_Unsubscribe_Request proto.InternalMessageInfo

func (m *CPublishedFile_Unsubscribe_Request) GetPublishedfileid() uint64 {
	if m != nil && m.Publishedfileid != nil {
		return *m.Publishedfileid
	}
	return 0
}

func (m *CPublishedFile_Unsubscribe_Request) GetListType() uint32 {
	if m != nil && m.ListType != nil {
		return *m.ListType
	}
	return 0
}

func (m *CPublishedFile_Unsubscribe_Request) GetAppid() int32 {
	if m != nil && m.Appid != nil {
		return *m.Appid
	}
	return 0
}

func (m *CPublishedFile_Unsubscribe_Request) GetNotifyClient() bool {
	if m != nil && m.NotifyClient != nil {
		return *m.NotifyClient
	}
	return false
}

type CPublishedFile_Unsubscribe_Response struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CPublishedFile_Unsubscribe_Response) Reset()         { *m = CPublishedFile_Unsubscribe_Response{} }
func (m *CPublishedFile_Unsubscribe_Response) String() string { return proto.CompactTextString(m) }
func (*CPublishedFile_Unsubscribe_Response) ProtoMessage()    {}
func (*CPublishedFile_Unsubscribe_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_publishedfile_steamworkssdk_b01c6372b7edfb89, []int{3}
}
func (m *CPublishedFile_Unsubscribe_Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CPublishedFile_Unsubscribe_Response.Unmarshal(m, b)
}
func (m *CPublishedFile_Unsubscribe_Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CPublishedFile_Unsubscribe_Response.Marshal(b, m, deterministic)
}
func (dst *CPublishedFile_Unsubscribe_Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CPublishedFile_Unsubscribe_Response.Merge(dst, src)
}
func (m *CPublishedFile_Unsubscribe_Response) XXX_Size() int {
	return xxx_messageInfo_CPublishedFile_Unsubscribe_Response.Size(m)
}
func (m *CPublishedFile_Unsubscribe_Response) XXX_DiscardUnknown() {
	xxx_messageInfo_CPublishedFile_Unsubscribe_Response.DiscardUnknown(m)
}

var xxx_messageInfo_CPublishedFile_Unsubscribe_Response proto.InternalMessageInfo

type CPublishedFile_Publish_Request struct {
	Appid                *uint32  `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	ConsumerAppid        *uint32  `protobuf:"varint,2,opt,name=consumer_appid,json=consumerAppid" json:"consumer_appid,omitempty"`
	Cloudfilename        *string  `protobuf:"bytes,3,opt,name=cloudfilename" json:"cloudfilename,omitempty"`
	PreviewCloudfilename *string  `protobuf:"bytes,4,opt,name=preview_cloudfilename,json=previewCloudfilename" json:"preview_cloudfilename,omitempty"`
	Title                *string  `protobuf:"bytes,5,opt,name=title" json:"title,omitempty"`
	FileDescription      *string  `protobuf:"bytes,6,opt,name=file_description,json=fileDescription" json:"file_description,omitempty"`
	FileType             *uint32  `protobuf:"varint,7,opt,name=file_type,json=fileType" json:"file_type,omitempty"`
	ConsumerShortcutName *string  `protobuf:"bytes,8,opt,name=consumer_shortcut_name,json=consumerShortcutName" json:"consumer_shortcut_name,omitempty"`
	YoutubeUsername      *string  `protobuf:"bytes,9,opt,name=youtube_username,json=youtubeUsername" json:"youtube_username,omitempty"`
	YoutubeVideoid       *string  `protobuf:"bytes,10,opt,name=youtube_videoid,json=youtubeVideoid" json:"youtube_videoid,omitempty"`
	Visibility           *uint32  `protobuf:"varint,11,opt,name=visibility" json:"visibility,omitempty"`
	RedirectUri          *string  `protobuf:"bytes,12,opt,name=redirect_uri,json=redirectUri" json:"redirect_uri,omitempty"`
	Tags                 []string `protobuf:"bytes,13,rep,name=tags" json:"tags,omitempty"`
	CollectionType       *string  `protobuf:"bytes,14,opt,name=collection_type,json=collectionType" json:"collection_type,omitempty"`
	GameType             *string  `protobuf:"bytes,15,opt,name=game_type,json=gameType" json:"game_type,omitempty"`
	Url                  *string  `protobuf:"bytes,16,opt,name=url" json:"url,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CPublishedFile_Publish_Request) Reset()         { *m = CPublishedFile_Publish_Request{} }
func (m *CPublishedFile_Publish_Request) String() string { return proto.CompactTextString(m) }
func (*CPublishedFile_Publish_Request) ProtoMessage()    {}
func (*CPublishedFile_Publish_Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_publishedfile_steamworkssdk_b01c6372b7edfb89, []int{4}
}
func (m *CPublishedFile_Publish_Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CPublishedFile_Publish_Request.Unmarshal(m, b)
}
func (m *CPublishedFile_Publish_Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CPublishedFile_Publish_Request.Marshal(b, m, deterministic)
}
func (dst *CPublishedFile_Publish_Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CPublishedFile_Publish_Request.Merge(dst, src)
}
func (m *CPublishedFile_Publish_Request) XXX_Size() int {
	return xxx_messageInfo_CPublishedFile_Publish_Request.Size(m)
}
func (m *CPublishedFile_Publish_Request) XXX_DiscardUnknown() {
	xxx_messageInfo_CPublishedFile_Publish_Request.DiscardUnknown(m)
}

var xxx_messageInfo_CPublishedFile_Publish_Request proto.InternalMessageInfo

func (m *CPublishedFile_Publish_Request) GetAppid() uint32 {
	if m != nil && m.Appid != nil {
		return *m.Appid
	}
	return 0
}

func (m *CPublishedFile_Publish_Request) GetConsumerAppid() uint32 {
	if m != nil && m.ConsumerAppid != nil {
		return *m.ConsumerAppid
	}
	return 0
}

func (m *CPublishedFile_Publish_Request) GetCloudfilename() string {
	if m != nil && m.Cloudfilename != nil {
		return *m.Cloudfilename
	}
	return ""
}

func (m *CPublishedFile_Publish_Request) GetPreviewCloudfilename() string {
	if m != nil && m.PreviewCloudfilename != nil {
		return *m.PreviewCloudfilename
	}
	return ""
}

func (m *CPublishedFile_Publish_Request) GetTitle() string {
	if m != nil && m.Title != nil {
		return *m.Title
	}
	return ""
}

func (m *CPublishedFile_Publish_Request) GetFileDescription() string {
	if m != nil && m.FileDescription != nil {
		return *m.FileDescription
	}
	return ""
}

func (m *CPublishedFile_Publish_Request) GetFileType() uint32 {
	if m != nil && m.FileType != nil {
		return *m.FileType
	}
	return 0
}

func (m *CPublishedFile_Publish_Request) GetConsumerShortcutName() string {
	if m != nil && m.ConsumerShortcutName != nil {
		return *m.ConsumerShortcutName
	}
	return ""
}

func (m *CPublishedFile_Publish_Request) GetYoutubeUsername() string {
	if m != nil && m.YoutubeUsername != nil {
		return *m.YoutubeUsername
	}
	return ""
}

func (m *CPublishedFile_Publish_Request) GetYoutubeVideoid() string {
	if m != nil && m.YoutubeVideoid != nil {
		return *m.YoutubeVideoid
	}
	return ""
}

func (m *CPublishedFile_Publish_Request) GetVisibility() uint32 {
	if m != nil && m.Visibility != nil {
		return *m.Visibility
	}
	return 0
}

func (m *CPublishedFile_Publish_Request) GetRedirectUri() string {
	if m != nil && m.RedirectUri != nil {
		return *m.RedirectUri
	}
	return ""
}

func (m *CPublishedFile_Publish_Request) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *CPublishedFile_Publish_Request) GetCollectionType() string {
	if m != nil && m.CollectionType != nil {
		return *m.CollectionType
	}
	return ""
}

func (m *CPublishedFile_Publish_Request) GetGameType() string {
	if m != nil && m.GameType != nil {
		return *m.GameType
	}
	return ""
}

func (m *CPublishedFile_Publish_Request) GetUrl() string {
	if m != nil && m.Url != nil {
		return *m.Url
	}
	return ""
}

type CPublishedFile_Publish_Response struct {
	Publishedfileid      *uint64  `protobuf:"varint,1,opt,name=publishedfileid" json:"publishedfileid,omitempty"`
	RedirectUri          *string  `protobuf:"bytes,2,opt,name=redirect_uri,json=redirectUri" json:"redirect_uri,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CPublishedFile_Publish_Response) Reset()         { *m = CPublishedFile_Publish_Response{} }
func (m *CPublishedFile_Publish_Response) String() string { return proto.CompactTextString(m) }
func (*CPublishedFile_Publish_Response) ProtoMessage()    {}
func (*CPublishedFile_Publish_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_publishedfile_steamworkssdk_b01c6372b7edfb89, []int{5}
}
func (m *CPublishedFile_Publish_Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CPublishedFile_Publish_Response.Unmarshal(m, b)
}
func (m *CPublishedFile_Publish_Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CPublishedFile_Publish_Response.Marshal(b, m, deterministic)
}
func (dst *CPublishedFile_Publish_Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CPublishedFile_Publish_Response.Merge(dst, src)
}
func (m *CPublishedFile_Publish_Response) XXX_Size() int {
	return xxx_messageInfo_CPublishedFile_Publish_Response.Size(m)
}
func (m *CPublishedFile_Publish_Response) XXX_DiscardUnknown() {
	xxx_messageInfo_CPublishedFile_Publish_Response.DiscardUnknown(m)
}

var xxx_messageInfo_CPublishedFile_Publish_Response proto.InternalMessageInfo

func (m *CPublishedFile_Publish_Response) GetPublishedfileid() uint64 {
	if m != nil && m.Publishedfileid != nil {
		return *m.Publishedfileid
	}
	return 0
}

func (m *CPublishedFile_Publish_Response) GetRedirectUri() string {
	if m != nil && m.RedirectUri != nil {
		return *m.RedirectUri
	}
	return ""
}

type CPublishedFile_GetDetails_Request struct {
	Publishedfileids          []uint64 `protobuf:"fixed64,1,rep,name=publishedfileids" json:"publishedfileids,omitempty"`
	Includetags               *bool    `protobuf:"varint,2,opt,name=includetags" json:"includetags,omitempty"`
	Includeadditionalpreviews *bool    `protobuf:"varint,3,opt,name=includeadditionalpreviews" json:"includeadditionalpreviews,omitempty"`
	Includechildren           *bool    `protobuf:"varint,4,opt,name=includechildren" json:"includechildren,omitempty"`
	Includekvtags             *bool    `protobuf:"varint,5,opt,name=includekvtags" json:"includekvtags,omitempty"`
	Includevotes              *bool    `protobuf:"varint,6,opt,name=includevotes" json:"includevotes,omitempty"`
	ShortDescription          *bool    `protobuf:"varint,8,opt,name=short_description,json=shortDescription" json:"short_description,omitempty"`
	XXX_NoUnkeyedLiteral      struct{} `json:"-"`
	XXX_unrecognized          []byte   `json:"-"`
	XXX_sizecache             int32    `json:"-"`
}

func (m *CPublishedFile_GetDetails_Request) Reset()         { *m = CPublishedFile_GetDetails_Request{} }
func (m *CPublishedFile_GetDetails_Request) String() string { return proto.CompactTextString(m) }
func (*CPublishedFile_GetDetails_Request) ProtoMessage()    {}
func (*CPublishedFile_GetDetails_Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_publishedfile_steamworkssdk_b01c6372b7edfb89, []int{6}
}
func (m *CPublishedFile_GetDetails_Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CPublishedFile_GetDetails_Request.Unmarshal(m, b)
}
func (m *CPublishedFile_GetDetails_Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CPublishedFile_GetDetails_Request.Marshal(b, m, deterministic)
}
func (dst *CPublishedFile_GetDetails_Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CPublishedFile_GetDetails_Request.Merge(dst, src)
}
func (m *CPublishedFile_GetDetails_Request) XXX_Size() int {
	return xxx_messageInfo_CPublishedFile_GetDetails_Request.Size(m)
}
func (m *CPublishedFile_GetDetails_Request) XXX_DiscardUnknown() {
	xxx_messageInfo_CPublishedFile_GetDetails_Request.DiscardUnknown(m)
}

var xxx_messageInfo_CPublishedFile_GetDetails_Request proto.InternalMessageInfo

func (m *CPublishedFile_GetDetails_Request) GetPublishedfileids() []uint64 {
	if m != nil {
		return m.Publishedfileids
	}
	return nil
}

func (m *CPublishedFile_GetDetails_Request) GetIncludetags() bool {
	if m != nil && m.Includetags != nil {
		return *m.Includetags
	}
	return false
}

func (m *CPublishedFile_GetDetails_Request) GetIncludeadditionalpreviews() bool {
	if m != nil && m.Includeadditionalpreviews != nil {
		return *m.Includeadditionalpreviews
	}
	return false
}

func (m *CPublishedFile_GetDetails_Request) GetIncludechildren() bool {
	if m != nil && m.Includechildren != nil {
		return *m.Includechildren
	}
	return false
}

func (m *CPublishedFile_GetDetails_Request) GetIncludekvtags() bool {
	if m != nil && m.Includekvtags != nil {
		return *m.Includekvtags
	}
	return false
}

func (m *CPublishedFile_GetDetails_Request) GetIncludevotes() bool {
	if m != nil && m.Includevotes != nil {
		return *m.Includevotes
	}
	return false
}

func (m *CPublishedFile_GetDetails_Request) GetShortDescription() bool {
	if m != nil && m.ShortDescription != nil {
		return *m.ShortDescription
	}
	return false
}

type PublishedFileDetails struct {
	Result                *uint32                         `protobuf:"varint,1,opt,name=result" json:"result,omitempty"`
	Publishedfileid       *uint64                         `protobuf:"varint,2,opt,name=publishedfileid" json:"publishedfileid,omitempty"`
	Creator               *uint64                         `protobuf:"fixed64,3,opt,name=creator" json:"creator,omitempty"`
	CreatorAppid          *uint32                         `protobuf:"varint,4,opt,name=creator_appid,json=creatorAppid" json:"creator_appid,omitempty"`
	ConsumerAppid         *uint32                         `protobuf:"varint,5,opt,name=consumer_appid,json=consumerAppid" json:"consumer_appid,omitempty"`
	ConsumerShortcutid    *uint32                         `protobuf:"varint,6,opt,name=consumer_shortcutid,json=consumerShortcutid" json:"consumer_shortcutid,omitempty"`
	Filename              *string                         `protobuf:"bytes,7,opt,name=filename" json:"filename,omitempty"`
	FileSize              *uint64                         `protobuf:"varint,8,opt,name=file_size,json=fileSize" json:"file_size,omitempty"`
	PreviewFileSize       *uint64                         `protobuf:"varint,9,opt,name=preview_file_size,json=previewFileSize" json:"preview_file_size,omitempty"`
	FileUrl               *string                         `protobuf:"bytes,10,opt,name=file_url,json=fileUrl" json:"file_url,omitempty"`
	PreviewUrl            *string                         `protobuf:"bytes,11,opt,name=preview_url,json=previewUrl" json:"preview_url,omitempty"`
	Youtubevideoid        *string                         `protobuf:"bytes,12,opt,name=youtubevideoid" json:"youtubevideoid,omitempty"`
	Url                   *string                         `protobuf:"bytes,13,opt,name=url" json:"url,omitempty"`
	HcontentFile          *uint64                         `protobuf:"fixed64,14,opt,name=hcontent_file,json=hcontentFile" json:"hcontent_file,omitempty"`
	HcontentPreview       *uint64                         `protobuf:"fixed64,15,opt,name=hcontent_preview,json=hcontentPreview" json:"hcontent_preview,omitempty"`
	Title                 *string                         `protobuf:"bytes,16,opt,name=title" json:"title,omitempty"`
	FileDescription       *string                         `protobuf:"bytes,17,opt,name=file_description,json=fileDescription" json:"file_description,omitempty"`
	ShortDescription      *string                         `protobuf:"bytes,18,opt,name=short_description,json=shortDescription" json:"short_description,omitempty"`
	TimeCreated           *uint32                         `protobuf:"varint,19,opt,name=time_created,json=timeCreated" json:"time_created,omitempty"`
	TimeUpdated           *uint32                         `protobuf:"varint,20,opt,name=time_updated,json=timeUpdated" json:"time_updated,omitempty"`
	Visibility            *uint32                         `protobuf:"varint,21,opt,name=visibility" json:"visibility,omitempty"`
	Flags                 *uint32                         `protobuf:"varint,22,opt,name=flags" json:"flags,omitempty"`
	WorkshopFile          *bool                           `protobuf:"varint,23,opt,name=workshop_file,json=workshopFile" json:"workshop_file,omitempty"`
	WorkshopAccepted      *bool                           `protobuf:"varint,24,opt,name=workshop_accepted,json=workshopAccepted" json:"workshop_accepted,omitempty"`
	ShowSubscribeAll      *bool                           `protobuf:"varint,25,opt,name=show_subscribe_all,json=showSubscribeAll" json:"show_subscribe_all,omitempty"`
	NumCommentsDeveloper  *int32                          `protobuf:"varint,26,opt,name=num_comments_developer,json=numCommentsDeveloper" json:"num_comments_developer,omitempty"`
	NumCommentsPublic     *int32                          `protobuf:"varint,27,opt,name=num_comments_public,json=numCommentsPublic" json:"num_comments_public,omitempty"`
	Banned                *bool                           `protobuf:"varint,28,opt,name=banned" json:"banned,omitempty"`
	BanReason             *string                         `protobuf:"bytes,29,opt,name=ban_reason,json=banReason" json:"ban_reason,omitempty"`
	Banner                *uint64                         `protobuf:"fixed64,30,opt,name=banner" json:"banner,omitempty"`
	CanBeDeleted          *bool                           `protobuf:"varint,31,opt,name=can_be_deleted,json=canBeDeleted" json:"can_be_deleted,omitempty"`
	Incompatible          *bool                           `protobuf:"varint,32,opt,name=incompatible" json:"incompatible,omitempty"`
	AppName               *string                         `protobuf:"bytes,33,opt,name=app_name,json=appName" json:"app_name,omitempty"`
	FileType              *uint32                         `protobuf:"varint,34,opt,name=file_type,json=fileType" json:"file_type,omitempty"`
	CanSubscribe          *bool                           `protobuf:"varint,35,opt,name=can_subscribe,json=canSubscribe" json:"can_subscribe,omitempty"`
	Subscriptions         *uint32                         `protobuf:"varint,36,opt,name=subscriptions" json:"subscriptions,omitempty"`
	Favorited             *uint32                         `protobuf:"varint,37,opt,name=favorited" json:"favorited,omitempty"`
	Followers             *uint32                         `protobuf:"varint,38,opt,name=followers" json:"followers,omitempty"`
	LifetimeSubscriptions *uint32                         `protobuf:"varint,39,opt,name=lifetime_subscriptions,json=lifetimeSubscriptions" json:"lifetime_subscriptions,omitempty"`
	LifetimeFavorited     *uint32                         `protobuf:"varint,40,opt,name=lifetime_favorited,json=lifetimeFavorited" json:"lifetime_favorited,omitempty"`
	LifetimeFollowers     *uint32                         `protobuf:"varint,41,opt,name=lifetime_followers,json=lifetimeFollowers" json:"lifetime_followers,omitempty"`
	Views                 *uint32                         `protobuf:"varint,42,opt,name=views" json:"views,omitempty"`
	ImageWidth            *uint32                         `protobuf:"varint,43,opt,name=image_width,json=imageWidth" json:"image_width,omitempty"`
	ImageHeight           *uint32                         `protobuf:"varint,44,opt,name=image_height,json=imageHeight" json:"image_height,omitempty"`
	ImageUrl              *string                         `protobuf:"bytes,45,opt,name=image_url,json=imageUrl" json:"image_url,omitempty"`
	SpoilerTag            *bool                           `protobuf:"varint,46,opt,name=spoiler_tag,json=spoilerTag" json:"spoiler_tag,omitempty"`
	Shortcutid            *uint32                         `protobuf:"varint,47,opt,name=shortcutid" json:"shortcutid,omitempty"`
	Shortcutname          *string                         `protobuf:"bytes,48,opt,name=shortcutname" json:"shortcutname,omitempty"`
	NumChildren           *uint32                         `protobuf:"varint,49,opt,name=num_children,json=numChildren" json:"num_children,omitempty"`
	NumReports            *uint32                         `protobuf:"varint,50,opt,name=num_reports,json=numReports" json:"num_reports,omitempty"`
	Previews              []*PublishedFileDetails_Preview `protobuf:"bytes,51,rep,name=previews" json:"previews,omitempty"`
	Tags                  []*PublishedFileDetails_Tag     `protobuf:"bytes,52,rep,name=tags" json:"tags,omitempty"`
	Children              []*PublishedFileDetails_Child   `protobuf:"bytes,53,rep,name=children" json:"children,omitempty"`
	Kvtags                []*PublishedFileDetails_KVTag   `protobuf:"bytes,54,rep,name=kvtags" json:"kvtags,omitempty"`
	VoteData              *PublishedFileDetails_VoteData  `protobuf:"bytes,55,opt,name=vote_data,json=voteData" json:"vote_data,omitempty"`
	TimeSubscribed        *uint32                         `protobuf:"varint,56,opt,name=time_subscribed,json=timeSubscribed" json:"time_subscribed,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}                        `json:"-"`
	XXX_unrecognized      []byte                          `json:"-"`
	XXX_sizecache         int32                           `json:"-"`
}

func (m *PublishedFileDetails) Reset()         { *m = PublishedFileDetails{} }
func (m *PublishedFileDetails) String() string { return proto.CompactTextString(m) }
func (*PublishedFileDetails) ProtoMessage()    {}
func (*PublishedFileDetails) Descriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_publishedfile_steamworkssdk_b01c6372b7edfb89, []int{7}
}
func (m *PublishedFileDetails) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PublishedFileDetails.Unmarshal(m, b)
}
func (m *PublishedFileDetails) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PublishedFileDetails.Marshal(b, m, deterministic)
}
func (dst *PublishedFileDetails) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PublishedFileDetails.Merge(dst, src)
}
func (m *PublishedFileDetails) XXX_Size() int {
	return xxx_messageInfo_PublishedFileDetails.Size(m)
}
func (m *PublishedFileDetails) XXX_DiscardUnknown() {
	xxx_messageInfo_PublishedFileDetails.DiscardUnknown(m)
}

var xxx_messageInfo_PublishedFileDetails proto.InternalMessageInfo

func (m *PublishedFileDetails) GetResult() uint32 {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return 0
}

func (m *PublishedFileDetails) GetPublishedfileid() uint64 {
	if m != nil && m.Publishedfileid != nil {
		return *m.Publishedfileid
	}
	return 0
}

func (m *PublishedFileDetails) GetCreator() uint64 {
	if m != nil && m.Creator != nil {
		return *m.Creator
	}
	return 0
}

func (m *PublishedFileDetails) GetCreatorAppid() uint32 {
	if m != nil && m.CreatorAppid != nil {
		return *m.CreatorAppid
	}
	return 0
}

func (m *PublishedFileDetails) GetConsumerAppid() uint32 {
	if m != nil && m.ConsumerAppid != nil {
		return *m.ConsumerAppid
	}
	return 0
}

func (m *PublishedFileDetails) GetConsumerShortcutid() uint32 {
	if m != nil && m.ConsumerShortcutid != nil {
		return *m.ConsumerShortcutid
	}
	return 0
}

func (m *PublishedFileDetails) GetFilename() string {
	if m != nil && m.Filename != nil {
		return *m.Filename
	}
	return ""
}

func (m *PublishedFileDetails) GetFileSize() uint64 {
	if m != nil && m.FileSize != nil {
		return *m.FileSize
	}
	return 0
}

func (m *PublishedFileDetails) GetPreviewFileSize() uint64 {
	if m != nil && m.PreviewFileSize != nil {
		return *m.PreviewFileSize
	}
	return 0
}

func (m *PublishedFileDetails) GetFileUrl() string {
	if m != nil && m.FileUrl != nil {
		return *m.FileUrl
	}
	return ""
}

func (m *PublishedFileDetails) GetPreviewUrl() string {
	if m != nil && m.PreviewUrl != nil {
		return *m.PreviewUrl
	}
	return ""
}

func (m *PublishedFileDetails) GetYoutubevideoid() string {
	if m != nil && m.Youtubevideoid != nil {
		return *m.Youtubevideoid
	}
	return ""
}

func (m *PublishedFileDetails) GetUrl() string {
	if m != nil && m.Url != nil {
		return *m.Url
	}
	return ""
}

func (m *PublishedFileDetails) GetHcontentFile() uint64 {
	if m != nil && m.HcontentFile != nil {
		return *m.HcontentFile
	}
	return 0
}

func (m *PublishedFileDetails) GetHcontentPreview() uint64 {
	if m != nil && m.HcontentPreview != nil {
		return *m.HcontentPreview
	}
	return 0
}

func (m *PublishedFileDetails) GetTitle() string {
	if m != nil && m.Title != nil {
		return *m.Title
	}
	return ""
}

func (m *PublishedFileDetails) GetFileDescription() string {
	if m != nil && m.FileDescription != nil {
		return *m.FileDescription
	}
	return ""
}

func (m *PublishedFileDetails) GetShortDescription() string {
	if m != nil && m.ShortDescription != nil {
		return *m.ShortDescription
	}
	return ""
}

func (m *PublishedFileDetails) GetTimeCreated() uint32 {
	if m != nil && m.TimeCreated != nil {
		return *m.TimeCreated
	}
	return 0
}

func (m *PublishedFileDetails) GetTimeUpdated() uint32 {
	if m != nil && m.TimeUpdated != nil {
		return *m.TimeUpdated
	}
	return 0
}

func (m *PublishedFileDetails) GetVisibility() uint32 {
	if m != nil && m.Visibility != nil {
		return *m.Visibility
	}
	return 0
}

func (m *PublishedFileDetails) GetFlags() uint32 {
	if m != nil && m.Flags != nil {
		return *m.Flags
	}
	return 0
}

func (m *PublishedFileDetails) GetWorkshopFile() bool {
	if m != nil && m.WorkshopFile != nil {
		return *m.WorkshopFile
	}
	return false
}

func (m *PublishedFileDetails) GetWorkshopAccepted() bool {
	if m != nil && m.WorkshopAccepted != nil {
		return *m.WorkshopAccepted
	}
	return false
}

func (m *PublishedFileDetails) GetShowSubscribeAll() bool {
	if m != nil && m.ShowSubscribeAll != nil {
		return *m.ShowSubscribeAll
	}
	return false
}

func (m *PublishedFileDetails) GetNumCommentsDeveloper() int32 {
	if m != nil && m.NumCommentsDeveloper != nil {
		return *m.NumCommentsDeveloper
	}
	return 0
}

func (m *PublishedFileDetails) GetNumCommentsPublic() int32 {
	if m != nil && m.NumCommentsPublic != nil {
		return *m.NumCommentsPublic
	}
	return 0
}

func (m *PublishedFileDetails) GetBanned() bool {
	if m != nil && m.Banned != nil {
		return *m.Banned
	}
	return false
}

func (m *PublishedFileDetails) GetBanReason() string {
	if m != nil && m.BanReason != nil {
		return *m.BanReason
	}
	return ""
}

func (m *PublishedFileDetails) GetBanner() uint64 {
	if m != nil && m.Banner != nil {
		return *m.Banner
	}
	return 0
}

func (m *PublishedFileDetails) GetCanBeDeleted() bool {
	if m != nil && m.CanBeDeleted != nil {
		return *m.CanBeDeleted
	}
	return false
}

func (m *PublishedFileDetails) GetIncompatible() bool {
	if m != nil && m.Incompatible != nil {
		return *m.Incompatible
	}
	return false
}

func (m *PublishedFileDetails) GetAppName() string {
	if m != nil && m.AppName != nil {
		return *m.AppName
	}
	return ""
}

func (m *PublishedFileDetails) GetFileType() uint32 {
	if m != nil && m.FileType != nil {
		return *m.FileType
	}
	return 0
}

func (m *PublishedFileDetails) GetCanSubscribe() bool {
	if m != nil && m.CanSubscribe != nil {
		return *m.CanSubscribe
	}
	return false
}

func (m *PublishedFileDetails) GetSubscriptions() uint32 {
	if m != nil && m.Subscriptions != nil {
		return *m.Subscriptions
	}
	return 0
}

func (m *PublishedFileDetails) GetFavorited() uint32 {
	if m != nil && m.Favorited != nil {
		return *m.Favorited
	}
	return 0
}

func (m *PublishedFileDetails) GetFollowers() uint32 {
	if m != nil && m.Followers != nil {
		return *m.Followers
	}
	return 0
}

func (m *PublishedFileDetails) GetLifetimeSubscriptions() uint32 {
	if m != nil && m.LifetimeSubscriptions != nil {
		return *m.LifetimeSubscriptions
	}
	return 0
}

func (m *PublishedFileDetails) GetLifetimeFavorited() uint32 {
	if m != nil && m.LifetimeFavorited != nil {
		return *m.LifetimeFavorited
	}
	return 0
}

func (m *PublishedFileDetails) GetLifetimeFollowers() uint32 {
	if m != nil && m.LifetimeFollowers != nil {
		return *m.LifetimeFollowers
	}
	return 0
}

func (m *PublishedFileDetails) GetViews() uint32 {
	if m != nil && m.Views != nil {
		return *m.Views
	}
	return 0
}

func (m *PublishedFileDetails) GetImageWidth() uint32 {
	if m != nil && m.ImageWidth != nil {
		return *m.ImageWidth
	}
	return 0
}

func (m *PublishedFileDetails) GetImageHeight() uint32 {
	if m != nil && m.ImageHeight != nil {
		return *m.ImageHeight
	}
	return 0
}

func (m *PublishedFileDetails) GetImageUrl() string {
	if m != nil && m.ImageUrl != nil {
		return *m.ImageUrl
	}
	return ""
}

func (m *PublishedFileDetails) GetSpoilerTag() bool {
	if m != nil && m.SpoilerTag != nil {
		return *m.SpoilerTag
	}
	return false
}

func (m *PublishedFileDetails) GetShortcutid() uint32 {
	if m != nil && m.Shortcutid != nil {
		return *m.Shortcutid
	}
	return 0
}

func (m *PublishedFileDetails) GetShortcutname() string {
	if m != nil && m.Shortcutname != nil {
		return *m.Shortcutname
	}
	return ""
}

func (m *PublishedFileDetails) GetNumChildren() uint32 {
	if m != nil && m.NumChildren != nil {
		return *m.NumChildren
	}
	return 0
}

func (m *PublishedFileDetails) GetNumReports() uint32 {
	if m != nil && m.NumReports != nil {
		return *m.NumReports
	}
	return 0
}

func (m *PublishedFileDetails) GetPreviews() []*PublishedFileDetails_Preview {
	if m != nil {
		return m.Previews
	}
	return nil
}

func (m *PublishedFileDetails) GetTags() []*PublishedFileDetails_Tag {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *PublishedFileDetails) GetChildren() []*PublishedFileDetails_Child {
	if m != nil {
		return m.Children
	}
	return nil
}

func (m *PublishedFileDetails) GetKvtags() []*PublishedFileDetails_KVTag {
	if m != nil {
		return m.Kvtags
	}
	return nil
}

func (m *PublishedFileDetails) GetVoteData() *PublishedFileDetails_VoteData {
	if m != nil {
		return m.VoteData
	}
	return nil
}

func (m *PublishedFileDetails) GetTimeSubscribed() uint32 {
	if m != nil && m.TimeSubscribed != nil {
		return *m.TimeSubscribed
	}
	return 0
}

type PublishedFileDetails_Tag struct {
	Tag                  *string  `protobuf:"bytes,1,opt,name=tag" json:"tag,omitempty"`
	Adminonly            *bool    `protobuf:"varint,2,opt,name=adminonly" json:"adminonly,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PublishedFileDetails_Tag) Reset()         { *m = PublishedFileDetails_Tag{} }
func (m *PublishedFileDetails_Tag) String() string { return proto.CompactTextString(m) }
func (*PublishedFileDetails_Tag) ProtoMessage()    {}
func (*PublishedFileDetails_Tag) Descriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_publishedfile_steamworkssdk_b01c6372b7edfb89, []int{7, 0}
}
func (m *PublishedFileDetails_Tag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PublishedFileDetails_Tag.Unmarshal(m, b)
}
func (m *PublishedFileDetails_Tag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PublishedFileDetails_Tag.Marshal(b, m, deterministic)
}
func (dst *PublishedFileDetails_Tag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PublishedFileDetails_Tag.Merge(dst, src)
}
func (m *PublishedFileDetails_Tag) XXX_Size() int {
	return xxx_messageInfo_PublishedFileDetails_Tag.Size(m)
}
func (m *PublishedFileDetails_Tag) XXX_DiscardUnknown() {
	xxx_messageInfo_PublishedFileDetails_Tag.DiscardUnknown(m)
}

var xxx_messageInfo_PublishedFileDetails_Tag proto.InternalMessageInfo

func (m *PublishedFileDetails_Tag) GetTag() string {
	if m != nil && m.Tag != nil {
		return *m.Tag
	}
	return ""
}

func (m *PublishedFileDetails_Tag) GetAdminonly() bool {
	if m != nil && m.Adminonly != nil {
		return *m.Adminonly
	}
	return false
}

type PublishedFileDetails_Preview struct {
	Previewid            *uint64  `protobuf:"varint,1,opt,name=previewid" json:"previewid,omitempty"`
	Sortorder            *uint32  `protobuf:"varint,2,opt,name=sortorder" json:"sortorder,omitempty"`
	Url                  *string  `protobuf:"bytes,3,opt,name=url" json:"url,omitempty"`
	Size                 *uint32  `protobuf:"varint,4,opt,name=size" json:"size,omitempty"`
	Filename             *string  `protobuf:"bytes,5,opt,name=filename" json:"filename,omitempty"`
	Youtubevideoid       *string  `protobuf:"bytes,6,opt,name=youtubevideoid" json:"youtubevideoid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PublishedFileDetails_Preview) Reset()         { *m = PublishedFileDetails_Preview{} }
func (m *PublishedFileDetails_Preview) String() string { return proto.CompactTextString(m) }
func (*PublishedFileDetails_Preview) ProtoMessage()    {}
func (*PublishedFileDetails_Preview) Descriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_publishedfile_steamworkssdk_b01c6372b7edfb89, []int{7, 1}
}
func (m *PublishedFileDetails_Preview) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PublishedFileDetails_Preview.Unmarshal(m, b)
}
func (m *PublishedFileDetails_Preview) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PublishedFileDetails_Preview.Marshal(b, m, deterministic)
}
func (dst *PublishedFileDetails_Preview) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PublishedFileDetails_Preview.Merge(dst, src)
}
func (m *PublishedFileDetails_Preview) XXX_Size() int {
	return xxx_messageInfo_PublishedFileDetails_Preview.Size(m)
}
func (m *PublishedFileDetails_Preview) XXX_DiscardUnknown() {
	xxx_messageInfo_PublishedFileDetails_Preview.DiscardUnknown(m)
}

var xxx_messageInfo_PublishedFileDetails_Preview proto.InternalMessageInfo

func (m *PublishedFileDetails_Preview) GetPreviewid() uint64 {
	if m != nil && m.Previewid != nil {
		return *m.Previewid
	}
	return 0
}

func (m *PublishedFileDetails_Preview) GetSortorder() uint32 {
	if m != nil && m.Sortorder != nil {
		return *m.Sortorder
	}
	return 0
}

func (m *PublishedFileDetails_Preview) GetUrl() string {
	if m != nil && m.Url != nil {
		return *m.Url
	}
	return ""
}

func (m *PublishedFileDetails_Preview) GetSize() uint32 {
	if m != nil && m.Size != nil {
		return *m.Size
	}
	return 0
}

func (m *PublishedFileDetails_Preview) GetFilename() string {
	if m != nil && m.Filename != nil {
		return *m.Filename
	}
	return ""
}

func (m *PublishedFileDetails_Preview) GetYoutubevideoid() string {
	if m != nil && m.Youtubevideoid != nil {
		return *m.Youtubevideoid
	}
	return ""
}

type PublishedFileDetails_Child struct {
	Publishedfileid      *uint64  `protobuf:"varint,1,opt,name=publishedfileid" json:"publishedfileid,omitempty"`
	Sortorder            *uint32  `protobuf:"varint,2,opt,name=sortorder" json:"sortorder,omitempty"`
	FileType             *uint32  `protobuf:"varint,3,opt,name=file_type,json=fileType" json:"file_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PublishedFileDetails_Child) Reset()         { *m = PublishedFileDetails_Child{} }
func (m *PublishedFileDetails_Child) String() string { return proto.CompactTextString(m) }
func (*PublishedFileDetails_Child) ProtoMessage()    {}
func (*PublishedFileDetails_Child) Descriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_publishedfile_steamworkssdk_b01c6372b7edfb89, []int{7, 2}
}
func (m *PublishedFileDetails_Child) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PublishedFileDetails_Child.Unmarshal(m, b)
}
func (m *PublishedFileDetails_Child) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PublishedFileDetails_Child.Marshal(b, m, deterministic)
}
func (dst *PublishedFileDetails_Child) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PublishedFileDetails_Child.Merge(dst, src)
}
func (m *PublishedFileDetails_Child) XXX_Size() int {
	return xxx_messageInfo_PublishedFileDetails_Child.Size(m)
}
func (m *PublishedFileDetails_Child) XXX_DiscardUnknown() {
	xxx_messageInfo_PublishedFileDetails_Child.DiscardUnknown(m)
}

var xxx_messageInfo_PublishedFileDetails_Child proto.InternalMessageInfo

func (m *PublishedFileDetails_Child) GetPublishedfileid() uint64 {
	if m != nil && m.Publishedfileid != nil {
		return *m.Publishedfileid
	}
	return 0
}

func (m *PublishedFileDetails_Child) GetSortorder() uint32 {
	if m != nil && m.Sortorder != nil {
		return *m.Sortorder
	}
	return 0
}

func (m *PublishedFileDetails_Child) GetFileType() uint32 {
	if m != nil && m.FileType != nil {
		return *m.FileType
	}
	return 0
}

type PublishedFileDetails_KVTag struct {
	Key                  *string  `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Value                *string  `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PublishedFileDetails_KVTag) Reset()         { *m = PublishedFileDetails_KVTag{} }
func (m *PublishedFileDetails_KVTag) String() string { return proto.CompactTextString(m) }
func (*PublishedFileDetails_KVTag) ProtoMessage()    {}
func (*PublishedFileDetails_KVTag) Descriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_publishedfile_steamworkssdk_b01c6372b7edfb89, []int{7, 3}
}
func (m *PublishedFileDetails_KVTag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PublishedFileDetails_KVTag.Unmarshal(m, b)
}
func (m *PublishedFileDetails_KVTag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PublishedFileDetails_KVTag.Marshal(b, m, deterministic)
}
func (dst *PublishedFileDetails_KVTag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PublishedFileDetails_KVTag.Merge(dst, src)
}
func (m *PublishedFileDetails_KVTag) XXX_Size() int {
	return xxx_messageInfo_PublishedFileDetails_KVTag.Size(m)
}
func (m *PublishedFileDetails_KVTag) XXX_DiscardUnknown() {
	xxx_messageInfo_PublishedFileDetails_KVTag.DiscardUnknown(m)
}

var xxx_messageInfo_PublishedFileDetails_KVTag proto.InternalMessageInfo

func (m *PublishedFileDetails_KVTag) GetKey() string {
	if m != nil && m.Key != nil {
		return *m.Key
	}
	return ""
}

func (m *PublishedFileDetails_KVTag) GetValue() string {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return ""
}

type PublishedFileDetails_VoteData struct {
	Score                *float32 `protobuf:"fixed32,1,opt,name=score" json:"score,omitempty"`
	VotesUp              *uint32  `protobuf:"varint,2,opt,name=votes_up,json=votesUp" json:"votes_up,omitempty"`
	VotesDown            *uint32  `protobuf:"varint,3,opt,name=votes_down,json=votesDown" json:"votes_down,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PublishedFileDetails_VoteData) Reset()         { *m = PublishedFileDetails_VoteData{} }
func (m *PublishedFileDetails_VoteData) String() string { return proto.CompactTextString(m) }
func (*PublishedFileDetails_VoteData) ProtoMessage()    {}
func (*PublishedFileDetails_VoteData) Descriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_publishedfile_steamworkssdk_b01c6372b7edfb89, []int{7, 4}
}
func (m *PublishedFileDetails_VoteData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PublishedFileDetails_VoteData.Unmarshal(m, b)
}
func (m *PublishedFileDetails_VoteData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PublishedFileDetails_VoteData.Marshal(b, m, deterministic)
}
func (dst *PublishedFileDetails_VoteData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PublishedFileDetails_VoteData.Merge(dst, src)
}
func (m *PublishedFileDetails_VoteData) XXX_Size() int {
	return xxx_messageInfo_PublishedFileDetails_VoteData.Size(m)
}
func (m *PublishedFileDetails_VoteData) XXX_DiscardUnknown() {
	xxx_messageInfo_PublishedFileDetails_VoteData.DiscardUnknown(m)
}

var xxx_messageInfo_PublishedFileDetails_VoteData proto.InternalMessageInfo

func (m *PublishedFileDetails_VoteData) GetScore() float32 {
	if m != nil && m.Score != nil {
		return *m.Score
	}
	return 0
}

func (m *PublishedFileDetails_VoteData) GetVotesUp() uint32 {
	if m != nil && m.VotesUp != nil {
		return *m.VotesUp
	}
	return 0
}

func (m *PublishedFileDetails_VoteData) GetVotesDown() uint32 {
	if m != nil && m.VotesDown != nil {
		return *m.VotesDown
	}
	return 0
}

type CPublishedFile_GetDetails_Response struct {
	Publishedfiledetails []*PublishedFileDetails `protobuf:"bytes,1,rep,name=publishedfiledetails" json:"publishedfiledetails,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *CPublishedFile_GetDetails_Response) Reset()         { *m = CPublishedFile_GetDetails_Response{} }
func (m *CPublishedFile_GetDetails_Response) String() string { return proto.CompactTextString(m) }
func (*CPublishedFile_GetDetails_Response) ProtoMessage()    {}
func (*CPublishedFile_GetDetails_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_publishedfile_steamworkssdk_b01c6372b7edfb89, []int{8}
}
func (m *CPublishedFile_GetDetails_Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CPublishedFile_GetDetails_Response.Unmarshal(m, b)
}
func (m *CPublishedFile_GetDetails_Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CPublishedFile_GetDetails_Response.Marshal(b, m, deterministic)
}
func (dst *CPublishedFile_GetDetails_Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CPublishedFile_GetDetails_Response.Merge(dst, src)
}
func (m *CPublishedFile_GetDetails_Response) XXX_Size() int {
	return xxx_messageInfo_CPublishedFile_GetDetails_Response.Size(m)
}
func (m *CPublishedFile_GetDetails_Response) XXX_DiscardUnknown() {
	xxx_messageInfo_CPublishedFile_GetDetails_Response.DiscardUnknown(m)
}

var xxx_messageInfo_CPublishedFile_GetDetails_Response proto.InternalMessageInfo

func (m *CPublishedFile_GetDetails_Response) GetPublishedfiledetails() []*PublishedFileDetails {
	if m != nil {
		return m.Publishedfiledetails
	}
	return nil
}

type CPublishedFile_GetUserFiles_Request struct {
	Appid                *uint32  `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	Page                 *uint32  `protobuf:"varint,3,opt,name=page,def=1" json:"page,omitempty"`
	Numperpage           *uint32  `protobuf:"varint,4,opt,name=numperpage,def=1" json:"numperpage,omitempty"`
	Sortmethod           *string  `protobuf:"bytes,6,opt,name=sortmethod,def=lastupdated" json:"sortmethod,omitempty"`
	Totalonly            *bool    `protobuf:"varint,7,opt,name=totalonly" json:"totalonly,omitempty"`
	Privacy              *uint32  `protobuf:"varint,9,opt,name=privacy" json:"privacy,omitempty"`
	IdsOnly              *bool    `protobuf:"varint,10,opt,name=ids_only,json=idsOnly" json:"ids_only,omitempty"`
	Requiredtags         []string `protobuf:"bytes,11,rep,name=requiredtags" json:"requiredtags,omitempty"`
	Excludedtags         []string `protobuf:"bytes,12,rep,name=excludedtags" json:"excludedtags,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CPublishedFile_GetUserFiles_Request) Reset()         { *m = CPublishedFile_GetUserFiles_Request{} }
func (m *CPublishedFile_GetUserFiles_Request) String() string { return proto.CompactTextString(m) }
func (*CPublishedFile_GetUserFiles_Request) ProtoMessage()    {}
func (*CPublishedFile_GetUserFiles_Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_publishedfile_steamworkssdk_b01c6372b7edfb89, []int{9}
}
func (m *CPublishedFile_GetUserFiles_Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CPublishedFile_GetUserFiles_Request.Unmarshal(m, b)
}
func (m *CPublishedFile_GetUserFiles_Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CPublishedFile_GetUserFiles_Request.Marshal(b, m, deterministic)
}
func (dst *CPublishedFile_GetUserFiles_Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CPublishedFile_GetUserFiles_Request.Merge(dst, src)
}
func (m *CPublishedFile_GetUserFiles_Request) XXX_Size() int {
	return xxx_messageInfo_CPublishedFile_GetUserFiles_Request.Size(m)
}
func (m *CPublishedFile_GetUserFiles_Request) XXX_DiscardUnknown() {
	xxx_messageInfo_CPublishedFile_GetUserFiles_Request.DiscardUnknown(m)
}

var xxx_messageInfo_CPublishedFile_GetUserFiles_Request proto.InternalMessageInfo

const Default_CPublishedFile_GetUserFiles_Request_Page uint32 = 1
const Default_CPublishedFile_GetUserFiles_Request_Numperpage uint32 = 1
const Default_CPublishedFile_GetUserFiles_Request_Sortmethod string = "lastupdated"

func (m *CPublishedFile_GetUserFiles_Request) GetAppid() uint32 {
	if m != nil && m.Appid != nil {
		return *m.Appid
	}
	return 0
}

func (m *CPublishedFile_GetUserFiles_Request) GetPage() uint32 {
	if m != nil && m.Page != nil {
		return *m.Page
	}
	return Default_CPublishedFile_GetUserFiles_Request_Page
}

func (m *CPublishedFile_GetUserFiles_Request) GetNumperpage() uint32 {
	if m != nil && m.Numperpage != nil {
		return *m.Numperpage
	}
	return Default_CPublishedFile_GetUserFiles_Request_Numperpage
}

func (m *CPublishedFile_GetUserFiles_Request) GetSortmethod() string {
	if m != nil && m.Sortmethod != nil {
		return *m.Sortmethod
	}
	return Default_CPublishedFile_GetUserFiles_Request_Sortmethod
}

func (m *CPublishedFile_GetUserFiles_Request) GetTotalonly() bool {
	if m != nil && m.Totalonly != nil {
		return *m.Totalonly
	}
	return false
}

func (m *CPublishedFile_GetUserFiles_Request) GetPrivacy() uint32 {
	if m != nil && m.Privacy != nil {
		return *m.Privacy
	}
	return 0
}

func (m *CPublishedFile_GetUserFiles_Request) GetIdsOnly() bool {
	if m != nil && m.IdsOnly != nil {
		return *m.IdsOnly
	}
	return false
}

func (m *CPublishedFile_GetUserFiles_Request) GetRequiredtags() []string {
	if m != nil {
		return m.Requiredtags
	}
	return nil
}

func (m *CPublishedFile_GetUserFiles_Request) GetExcludedtags() []string {
	if m != nil {
		return m.Excludedtags
	}
	return nil
}

type CPublishedFile_GetUserFiles_Response struct {
	Total                *uint32                                     `protobuf:"varint,1,opt,name=total" json:"total,omitempty"`
	Startindex           *uint32                                     `protobuf:"varint,2,opt,name=startindex" json:"startindex,omitempty"`
	Publishedfiledetails []*PublishedFileDetails                     `protobuf:"bytes,3,rep,name=publishedfiledetails" json:"publishedfiledetails,omitempty"`
	Apps                 []*CPublishedFile_GetUserFiles_Response_App `protobuf:"bytes,4,rep,name=apps" json:"apps,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                    `json:"-"`
	XXX_unrecognized     []byte                                      `json:"-"`
	XXX_sizecache        int32                                       `json:"-"`
}

func (m *CPublishedFile_GetUserFiles_Response) Reset()         { *m = CPublishedFile_GetUserFiles_Response{} }
func (m *CPublishedFile_GetUserFiles_Response) String() string { return proto.CompactTextString(m) }
func (*CPublishedFile_GetUserFiles_Response) ProtoMessage()    {}
func (*CPublishedFile_GetUserFiles_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_publishedfile_steamworkssdk_b01c6372b7edfb89, []int{10}
}
func (m *CPublishedFile_GetUserFiles_Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CPublishedFile_GetUserFiles_Response.Unmarshal(m, b)
}
func (m *CPublishedFile_GetUserFiles_Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CPublishedFile_GetUserFiles_Response.Marshal(b, m, deterministic)
}
func (dst *CPublishedFile_GetUserFiles_Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CPublishedFile_GetUserFiles_Response.Merge(dst, src)
}
func (m *CPublishedFile_GetUserFiles_Response) XXX_Size() int {
	return xxx_messageInfo_CPublishedFile_GetUserFiles_Response.Size(m)
}
func (m *CPublishedFile_GetUserFiles_Response) XXX_DiscardUnknown() {
	xxx_messageInfo_CPublishedFile_GetUserFiles_Response.DiscardUnknown(m)
}

var xxx_messageInfo_CPublishedFile_GetUserFiles_Response proto.InternalMessageInfo

func (m *CPublishedFile_GetUserFiles_Response) GetTotal() uint32 {
	if m != nil && m.Total != nil {
		return *m.Total
	}
	return 0
}

func (m *CPublishedFile_GetUserFiles_Response) GetStartindex() uint32 {
	if m != nil && m.Startindex != nil {
		return *m.Startindex
	}
	return 0
}

func (m *CPublishedFile_GetUserFiles_Response) GetPublishedfiledetails() []*PublishedFileDetails {
	if m != nil {
		return m.Publishedfiledetails
	}
	return nil
}

func (m *CPublishedFile_GetUserFiles_Response) GetApps() []*CPublishedFile_GetUserFiles_Response_App {
	if m != nil {
		return m.Apps
	}
	return nil
}

type CPublishedFile_GetUserFiles_Response_App struct {
	Appid                *uint32  `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	Name                 *string  `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Shortcutid           *uint32  `protobuf:"varint,3,opt,name=shortcutid" json:"shortcutid,omitempty"`
	Private              *bool    `protobuf:"varint,4,opt,name=private" json:"private,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CPublishedFile_GetUserFiles_Response_App) Reset() {
	*m = CPublishedFile_GetUserFiles_Response_App{}
}
func (m *CPublishedFile_GetUserFiles_Response_App) String() string { return proto.CompactTextString(m) }
func (*CPublishedFile_GetUserFiles_Response_App) ProtoMessage()    {}
func (*CPublishedFile_GetUserFiles_Response_App) Descriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_publishedfile_steamworkssdk_b01c6372b7edfb89, []int{10, 0}
}
func (m *CPublishedFile_GetUserFiles_Response_App) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CPublishedFile_GetUserFiles_Response_App.Unmarshal(m, b)
}
func (m *CPublishedFile_GetUserFiles_Response_App) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CPublishedFile_GetUserFiles_Response_App.Marshal(b, m, deterministic)
}
func (dst *CPublishedFile_GetUserFiles_Response_App) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CPublishedFile_GetUserFiles_Response_App.Merge(dst, src)
}
func (m *CPublishedFile_GetUserFiles_Response_App) XXX_Size() int {
	return xxx_messageInfo_CPublishedFile_GetUserFiles_Response_App.Size(m)
}
func (m *CPublishedFile_GetUserFiles_Response_App) XXX_DiscardUnknown() {
	xxx_messageInfo_CPublishedFile_GetUserFiles_Response_App.DiscardUnknown(m)
}

var xxx_messageInfo_CPublishedFile_GetUserFiles_Response_App proto.InternalMessageInfo

func (m *CPublishedFile_GetUserFiles_Response_App) GetAppid() uint32 {
	if m != nil && m.Appid != nil {
		return *m.Appid
	}
	return 0
}

func (m *CPublishedFile_GetUserFiles_Response_App) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *CPublishedFile_GetUserFiles_Response_App) GetShortcutid() uint32 {
	if m != nil && m.Shortcutid != nil {
		return *m.Shortcutid
	}
	return 0
}

func (m *CPublishedFile_GetUserFiles_Response_App) GetPrivate() bool {
	if m != nil && m.Private != nil {
		return *m.Private
	}
	return false
}

type CPublishedFile_Update_Request struct {
	Appid                *uint32  `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	Publishedfileid      *uint64  `protobuf:"fixed64,2,opt,name=publishedfileid" json:"publishedfileid,omitempty"`
	Title                *string  `protobuf:"bytes,3,opt,name=title" json:"title,omitempty"`
	FileDescription      *string  `protobuf:"bytes,4,opt,name=file_description,json=fileDescription" json:"file_description,omitempty"`
	Visibility           *uint32  `protobuf:"varint,5,opt,name=visibility" json:"visibility,omitempty"`
	Tags                 []string `protobuf:"bytes,6,rep,name=tags" json:"tags,omitempty"`
	Filename             *string  `protobuf:"bytes,7,opt,name=filename" json:"filename,omitempty"`
	PreviewFilename      *string  `protobuf:"bytes,8,opt,name=preview_filename,json=previewFilename" json:"preview_filename,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CPublishedFile_Update_Request) Reset()         { *m = CPublishedFile_Update_Request{} }
func (m *CPublishedFile_Update_Request) String() string { return proto.CompactTextString(m) }
func (*CPublishedFile_Update_Request) ProtoMessage()    {}
func (*CPublishedFile_Update_Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_publishedfile_steamworkssdk_b01c6372b7edfb89, []int{11}
}
func (m *CPublishedFile_Update_Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CPublishedFile_Update_Request.Unmarshal(m, b)
}
func (m *CPublishedFile_Update_Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CPublishedFile_Update_Request.Marshal(b, m, deterministic)
}
func (dst *CPublishedFile_Update_Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CPublishedFile_Update_Request.Merge(dst, src)
}
func (m *CPublishedFile_Update_Request) XXX_Size() int {
	return xxx_messageInfo_CPublishedFile_Update_Request.Size(m)
}
func (m *CPublishedFile_Update_Request) XXX_DiscardUnknown() {
	xxx_messageInfo_CPublishedFile_Update_Request.DiscardUnknown(m)
}

var xxx_messageInfo_CPublishedFile_Update_Request proto.InternalMessageInfo

func (m *CPublishedFile_Update_Request) GetAppid() uint32 {
	if m != nil && m.Appid != nil {
		return *m.Appid
	}
	return 0
}

func (m *CPublishedFile_Update_Request) GetPublishedfileid() uint64 {
	if m != nil && m.Publishedfileid != nil {
		return *m.Publishedfileid
	}
	return 0
}

func (m *CPublishedFile_Update_Request) GetTitle() string {
	if m != nil && m.Title != nil {
		return *m.Title
	}
	return ""
}

func (m *CPublishedFile_Update_Request) GetFileDescription() string {
	if m != nil && m.FileDescription != nil {
		return *m.FileDescription
	}
	return ""
}

func (m *CPublishedFile_Update_Request) GetVisibility() uint32 {
	if m != nil && m.Visibility != nil {
		return *m.Visibility
	}
	return 0
}

func (m *CPublishedFile_Update_Request) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *CPublishedFile_Update_Request) GetFilename() string {
	if m != nil && m.Filename != nil {
		return *m.Filename
	}
	return ""
}

func (m *CPublishedFile_Update_Request) GetPreviewFilename() string {
	if m != nil && m.PreviewFilename != nil {
		return *m.PreviewFilename
	}
	return ""
}

type CPublishedFile_Update_Response struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CPublishedFile_Update_Response) Reset()         { *m = CPublishedFile_Update_Response{} }
func (m *CPublishedFile_Update_Response) String() string { return proto.CompactTextString(m) }
func (*CPublishedFile_Update_Response) ProtoMessage()    {}
func (*CPublishedFile_Update_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_publishedfile_steamworkssdk_b01c6372b7edfb89, []int{12}
}
func (m *CPublishedFile_Update_Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CPublishedFile_Update_Response.Unmarshal(m, b)
}
func (m *CPublishedFile_Update_Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CPublishedFile_Update_Response.Marshal(b, m, deterministic)
}
func (dst *CPublishedFile_Update_Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CPublishedFile_Update_Response.Merge(dst, src)
}
func (m *CPublishedFile_Update_Response) XXX_Size() int {
	return xxx_messageInfo_CPublishedFile_Update_Response.Size(m)
}
func (m *CPublishedFile_Update_Response) XXX_DiscardUnknown() {
	xxx_messageInfo_CPublishedFile_Update_Response.DiscardUnknown(m)
}

var xxx_messageInfo_CPublishedFile_Update_Response proto.InternalMessageInfo

type CPublishedFile_RefreshVotingQueue_Request struct {
	Appid                *uint32  `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	MatchingFileType     *uint32  `protobuf:"varint,2,opt,name=matching_file_type,json=matchingFileType" json:"matching_file_type,omitempty"`
	Tags                 []string `protobuf:"bytes,3,rep,name=tags" json:"tags,omitempty"`
	MatchAllTags         *bool    `protobuf:"varint,4,opt,name=match_all_tags,json=matchAllTags,def=1" json:"match_all_tags,omitempty"`
	ExcludedTags         []string `protobuf:"bytes,5,rep,name=excluded_tags,json=excludedTags" json:"excluded_tags,omitempty"`
	DesiredQueueSize     *uint32  `protobuf:"varint,6,opt,name=desired_queue_size,json=desiredQueueSize" json:"desired_queue_size,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CPublishedFile_RefreshVotingQueue_Request) Reset() {
	*m = CPublishedFile_RefreshVotingQueue_Request{}
}
func (m *CPublishedFile_RefreshVotingQueue_Request) String() string { return proto.CompactTextString(m) }
func (*CPublishedFile_RefreshVotingQueue_Request) ProtoMessage()    {}
func (*CPublishedFile_RefreshVotingQueue_Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_publishedfile_steamworkssdk_b01c6372b7edfb89, []int{13}
}
func (m *CPublishedFile_RefreshVotingQueue_Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CPublishedFile_RefreshVotingQueue_Request.Unmarshal(m, b)
}
func (m *CPublishedFile_RefreshVotingQueue_Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CPublishedFile_RefreshVotingQueue_Request.Marshal(b, m, deterministic)
}
func (dst *CPublishedFile_RefreshVotingQueue_Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CPublishedFile_RefreshVotingQueue_Request.Merge(dst, src)
}
func (m *CPublishedFile_RefreshVotingQueue_Request) XXX_Size() int {
	return xxx_messageInfo_CPublishedFile_RefreshVotingQueue_Request.Size(m)
}
func (m *CPublishedFile_RefreshVotingQueue_Request) XXX_DiscardUnknown() {
	xxx_messageInfo_CPublishedFile_RefreshVotingQueue_Request.DiscardUnknown(m)
}

var xxx_messageInfo_CPublishedFile_RefreshVotingQueue_Request proto.InternalMessageInfo

const Default_CPublishedFile_RefreshVotingQueue_Request_MatchAllTags bool = true

func (m *CPublishedFile_RefreshVotingQueue_Request) GetAppid() uint32 {
	if m != nil && m.Appid != nil {
		return *m.Appid
	}
	return 0
}

func (m *CPublishedFile_RefreshVotingQueue_Request) GetMatchingFileType() uint32 {
	if m != nil && m.MatchingFileType != nil {
		return *m.MatchingFileType
	}
	return 0
}

func (m *CPublishedFile_RefreshVotingQueue_Request) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *CPublishedFile_RefreshVotingQueue_Request) GetMatchAllTags() bool {
	if m != nil && m.MatchAllTags != nil {
		return *m.MatchAllTags
	}
	return Default_CPublishedFile_RefreshVotingQueue_Request_MatchAllTags
}

func (m *CPublishedFile_RefreshVotingQueue_Request) GetExcludedTags() []string {
	if m != nil {
		return m.ExcludedTags
	}
	return nil
}

func (m *CPublishedFile_RefreshVotingQueue_Request) GetDesiredQueueSize() uint32 {
	if m != nil && m.DesiredQueueSize != nil {
		return *m.DesiredQueueSize
	}
	return 0
}

type CPublishedFile_RefreshVotingQueue_Response struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CPublishedFile_RefreshVotingQueue_Response) Reset() {
	*m = CPublishedFile_RefreshVotingQueue_Response{}
}
func (m *CPublishedFile_RefreshVotingQueue_Response) String() string {
	return proto.CompactTextString(m)
}
func (*CPublishedFile_RefreshVotingQueue_Response) ProtoMessage() {}
func (*CPublishedFile_RefreshVotingQueue_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_steammessages_publishedfile_steamworkssdk_b01c6372b7edfb89, []int{14}
}
func (m *CPublishedFile_RefreshVotingQueue_Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CPublishedFile_RefreshVotingQueue_Response.Unmarshal(m, b)
}
func (m *CPublishedFile_RefreshVotingQueue_Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CPublishedFile_RefreshVotingQueue_Response.Marshal(b, m, deterministic)
}
func (dst *CPublishedFile_RefreshVotingQueue_Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CPublishedFile_RefreshVotingQueue_Response.Merge(dst, src)
}
func (m *CPublishedFile_RefreshVotingQueue_Response) XXX_Size() int {
	return xxx_messageInfo_CPublishedFile_RefreshVotingQueue_Response.Size(m)
}
func (m *CPublishedFile_RefreshVotingQueue_Response) XXX_DiscardUnknown() {
	xxx_messageInfo_CPublishedFile_RefreshVotingQueue_Response.DiscardUnknown(m)
}

var xxx_messageInfo_CPublishedFile_RefreshVotingQueue_Response proto.InternalMessageInfo

func init() {
	proto.RegisterType((*CPublishedFile_Subscribe_Request)(nil), "CPublishedFile_Subscribe_Request")
	proto.RegisterType((*CPublishedFile_Subscribe_Response)(nil), "CPublishedFile_Subscribe_Response")
	proto.RegisterType((*CPublishedFile_Unsubscribe_Request)(nil), "CPublishedFile_Unsubscribe_Request")
	proto.RegisterType((*CPublishedFile_Unsubscribe_Response)(nil), "CPublishedFile_Unsubscribe_Response")
	proto.RegisterType((*CPublishedFile_Publish_Request)(nil), "CPublishedFile_Publish_Request")
	proto.RegisterType((*CPublishedFile_Publish_Response)(nil), "CPublishedFile_Publish_Response")
	proto.RegisterType((*CPublishedFile_GetDetails_Request)(nil), "CPublishedFile_GetDetails_Request")
	proto.RegisterType((*PublishedFileDetails)(nil), "PublishedFileDetails")
	proto.RegisterType((*PublishedFileDetails_Tag)(nil), "PublishedFileDetails.Tag")
	proto.RegisterType((*PublishedFileDetails_Preview)(nil), "PublishedFileDetails.Preview")
	proto.RegisterType((*PublishedFileDetails_Child)(nil), "PublishedFileDetails.Child")
	proto.RegisterType((*PublishedFileDetails_KVTag)(nil), "PublishedFileDetails.KVTag")
	proto.RegisterType((*PublishedFileDetails_VoteData)(nil), "PublishedFileDetails.VoteData")
	proto.RegisterType((*CPublishedFile_GetDetails_Response)(nil), "CPublishedFile_GetDetails_Response")
	proto.RegisterType((*CPublishedFile_GetUserFiles_Request)(nil), "CPublishedFile_GetUserFiles_Request")
	proto.RegisterType((*CPublishedFile_GetUserFiles_Response)(nil), "CPublishedFile_GetUserFiles_Response")
	proto.RegisterType((*CPublishedFile_GetUserFiles_Response_App)(nil), "CPublishedFile_GetUserFiles_Response.App")
	proto.RegisterType((*CPublishedFile_Update_Request)(nil), "CPublishedFile_Update_Request")
	proto.RegisterType((*CPublishedFile_Update_Response)(nil), "CPublishedFile_Update_Response")
	proto.RegisterType((*CPublishedFile_RefreshVotingQueue_Request)(nil), "CPublishedFile_RefreshVotingQueue_Request")
	proto.RegisterType((*CPublishedFile_RefreshVotingQueue_Response)(nil), "CPublishedFile_RefreshVotingQueue_Response")
}

func init() {
	proto.RegisterFile("steammessages_publishedfile.steamworkssdk.proto", fileDescriptor_steammessages_publishedfile_steamworkssdk_b01c6372b7edfb89)
}

var fileDescriptor_steammessages_publishedfile_steamworkssdk_b01c6372b7edfb89 = []byte{
	// 3498 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x3a, 0x5d, 0x6f, 0x1c, 0xb7,
	0x76, 0xd8, 0xe8, 0x9b, 0x92, 0x6c, 0x99, 0x51, 0x5c, 0x66, 0x93, 0xd8, 0xcc, 0xda, 0x8e, 0x57,
	0xb6, 0x3c, 0x8a, 0xed, 0x38, 0xc9, 0x4d, 0x72, 0xd1, 0x48, 0x56, 0x7c, 0xaf, 0xef, 0x6d, 0xec,
	0xdc, 0xb1, 0x65, 0xf7, 0x1a, 0xe9, 0x9d, 0x72, 0x67, 0xb8, 0xbb, 0x84, 0x67, 0x67, 0xc6, 0x43,
	0x8e, 0x14, 0x19, 0x45, 0xd1, 0x4e, 0x51, 0xa0, 0x40, 0x51, 0xa0, 0x8f, 0xed, 0x4b, 0x5f, 0x5a,
	0xf4, 0xa9, 0x40, 0x9f, 0xe6, 0x87, 0xf4, 0xc7, 0xf4, 0xb5, 0x28, 0x78, 0xc8, 0x99, 0x9d, 0xd9,
	0x5d, 0x7d, 0xa4, 0x4f, 0x7d, 0x91, 0x96, 0x87, 0x87, 0xe7, 0x1c, 0x92, 0xe7, 0x9b, 0x83, 0x76,
	0xa4, 0xe2, 0x6c, 0x34, 0xe2, 0x52, 0xb2, 0x01, 0x97, 0x5e, 0x92, 0xf5, 0x42, 0x21, 0x87, 0x3c,
	0xe8, 0x8b, 0x90, 0x3b, 0x30, 0x77, 0x14, 0xa7, 0xaf, 0xa5, 0x0c, 0x5e, 0x3b, 0x49, 0x1a, 0xab,
	0xb8, 0xed, 0x34, 0x17, 0x64, 0x91, 0xe8, 0x0b, 0x1e, 0x78, 0x3d, 0x26, 0x67, 0xe2, 0x77, 0xfe,
	0xad, 0x85, 0xe8, 0xc3, 0x1f, 0x4a, 0xb2, 0x8f, 0x44, 0xc8, 0xbd, 0x67, 0x59, 0x4f, 0xfa, 0xa9,
	0xe8, 0x71, 0xcf, 0xe5, 0x6f, 0x32, 0x2e, 0x15, 0xee, 0xa2, 0x8b, 0x0d, 0xce, 0x22, 0x20, 0x2d,
	0xda, 0xea, 0xce, 0xbb, 0x93, 0x60, 0xfc, 0x01, 0x5a, 0x09, 0x85, 0x54, 0x9e, 0x3a, 0x4e, 0x38,
	0x79, 0x87, 0xb6, 0xba, 0xeb, 0xee, 0xb2, 0x06, 0x3c, 0x3f, 0x4e, 0x38, 0xde, 0x44, 0x0b, 0x2c,
	0x49, 0x44, 0x40, 0xe6, 0x68, 0xab, 0xbb, 0xe0, 0x9a, 0x01, 0xbe, 0x86, 0xd6, 0xa3, 0x58, 0x89,
	0xfe, 0xb1, 0xe7, 0x87, 0x82, 0x47, 0x8a, 0xcc, 0xd3, 0x56, 0x77, 0xd9, 0x5d, 0x33, 0xc0, 0x87,
	0x00, 0xeb, 0x5c, 0x43, 0x1f, 0x9f, 0x22, 0xa5, 0x4c, 0xe2, 0x48, 0xf2, 0xce, 0xbf, 0xb7, 0x50,
	0x67, 0x02, 0xeb, 0x20, 0x92, 0xff, 0x0f, 0x77, 0x73, 0x03, 0x5d, 0x3b, 0x55, 0x4e, 0xbb, 0x9f,
	0x7f, 0x59, 0x43, 0x57, 0x26, 0xf0, 0xec, 0xa8, 0xda, 0xcb, 0xc3, 0x52, 0x08, 0xbd, 0x83, 0xf5,
	0xbd, 0x3b, 0x79, 0x41, 0xb6, 0x76, 0x93, 0x84, 0x3e, 0x0e, 0xa8, 0x1a, 0x0a, 0x49, 0xf5, 0x46,
	0xa8, 0x90, 0xb4, 0xc7, 0x45, 0x34, 0xa0, 0xd5, 0xfe, 0xe8, 0x23, 0xf7, 0xe9, 0xf7, 0x4e, 0x29,
	0xb3, 0x8b, 0x2e, 0xf8, 0x71, 0x24, 0xb3, 0x11, 0x4f, 0x3d, 0x43, 0x0d, 0xf6, 0xba, 0x77, 0x3b,
	0x2f, 0xc8, 0xcd, 0xf3, 0x50, 0x7b, 0xfe, 0xd4, 0x71, 0xd7, 0x4b, 0x12, 0xbb, 0x40, 0xf3, 0x15,
	0x5a, 0xf7, 0xc3, 0x38, 0x83, 0x93, 0x8c, 0xd8, 0x88, 0xc3, 0x29, 0xad, 0xec, 0x7d, 0x96, 0x17,
	0xe4, 0xd3, 0x27, 0x6c, 0xc4, 0x69, 0xdc, 0xa7, 0x6a, 0xc8, 0x0d, 0x49, 0x15, 0x97, 0xc4, 0xa8,
	0x88, 0x00, 0x9c, 0x49, 0x9e, 0xde, 0x94, 0x14, 0x48, 0x68, 0xda, 0x75, 0x52, 0xf8, 0x0d, 0x7a,
	0x2f, 0x49, 0xf9, 0xa1, 0xe0, 0x47, 0x5e, 0x93, 0xc7, 0x3c, 0xf0, 0xf8, 0x26, 0x2f, 0xc8, 0x97,
	0xb3, 0x78, 0x64, 0x92, 0x53, 0x26, 0x01, 0x34, 0x96, 0x5d, 0x4f, 0xde, 0x94, 0xd4, 0x12, 0x74,
	0xdc, 0x4d, 0xfb, 0xeb, 0x61, 0x83, 0xe5, 0x37, 0x68, 0x41, 0x09, 0x15, 0x72, 0xb2, 0x00, 0x2c,
	0x3e, 0xc9, 0x0b, 0xd2, 0x79, 0xce, 0x7f, 0x52, 0x14, 0xa0, 0xb4, 0x1f, 0xa7, 0x33, 0xc8, 0x3a,
	0xae, 0x59, 0x84, 0x5f, 0xa2, 0x0d, 0x3d, 0xf6, 0x02, 0xae, 0xaf, 0x38, 0x51, 0x22, 0x8e, 0xc8,
	0x22, 0x10, 0xda, 0xce, 0x0b, 0xd2, 0x05, 0x42, 0xb5, 0xb9, 0x13, 0xc9, 0x5d, 0xd4, 0xff, 0xf6,
	0xc7, 0x88, 0xf8, 0x05, 0x5a, 0x01, 0xc2, 0xa0, 0xa0, 0x4b, 0x70, 0x69, 0xbf, 0xc8, 0x0b, 0xf2,
	0xa0, 0xfb, 0xdd, 0x4b, 0x6d, 0xe6, 0xc3, 0x38, 0xd1, 0x5a, 0xa3, 0xd5, 0x75, 0x8b, 0xea, 0xbf,
	0xfa, 0x44, 0xca, 0x99, 0xc9, 0xa3, 0x77, 0xdc, 0xe5, 0xbe, 0x45, 0xc6, 0x1e, 0xba, 0x5c, 0x69,
	0x84, 0x1c, 0xc6, 0xa9, 0xf2, 0x33, 0xe5, 0xc1, 0x11, 0x2f, 0x83, 0xd8, 0x5b, 0x79, 0x41, 0x6e,
	0x3c, 0xb3, 0x13, 0x54, 0x4f, 0x9c, 0x28, 0xf3, 0x66, 0x49, 0xa8, 0x44, 0xd7, 0x37, 0x83, 0x5f,
	0xa1, 0x8d, 0xe3, 0x38, 0x53, 0x59, 0x8f, 0x7b, 0xfa, 0xaa, 0x81, 0xf4, 0x0a, 0x90, 0xde, 0xc9,
	0x0b, 0x72, 0xbb, 0xfb, 0x14, 0xf6, 0xc7, 0xc2, 0x2d, 0x7a, 0x60, 0x34, 0xe1, 0xf7, 0x71, 0xf6,
	0x3c, 0xeb, 0x71, 0xca, 0x7c, 0x3f, 0xce, 0x22, 0x45, 0xcb, 0x55, 0x8e, 0x7b, 0xd1, 0x12, 0x3a,
	0xb0, 0x10, 0x1c, 0xa2, 0x12, 0xe4, 0x1d, 0x8a, 0x80, 0xc7, 0x22, 0x20, 0x08, 0x48, 0x3f, 0xcc,
	0x0b, 0xf2, 0xc7, 0x35, 0xd2, 0x2f, 0xf4, 0xac, 0x56, 0xee, 0xb8, 0x4f, 0x59, 0xc5, 0x01, 0xd6,
	0xd8, 0xed, 0x08, 0x39, 0xb5, 0x9f, 0x0b, 0x96, 0xf6, 0x0b, 0x43, 0x1a, 0xff, 0x43, 0x0b, 0xa1,
	0x43, 0x21, 0x45, 0x4f, 0x84, 0x42, 0x1d, 0x93, 0x55, 0xb8, 0x84, 0x51, 0x5e, 0x10, 0xd1, 0xfd,
	0xce, 0xe5, 0xa3, 0x58, 0xf1, 0x67, 0x2a, 0x4e, 0xd9, 0x80, 0x37, 0x0c, 0xf9, 0x45, 0xb5, 0x42,
	0x8b, 0x51, 0xfe, 0x2e, 0x15, 0xb6, 0xc9, 0x93, 0x76, 0x93, 0x54, 0x1c, 0x32, 0xc5, 0xb7, 0x69,
	0x3f, 0x15, 0x3c, 0x0a, 0xe4, 0xb6, 0xc1, 0xf0, 0xb7, 0x29, 0x57, 0xbe, 0xb3, 0xe5, 0xd6, 0x04,
	0xc0, 0x3f, 0xa1, 0xb5, 0x94, 0x07, 0x22, 0xe5, 0xbe, 0xf2, 0xb2, 0x54, 0x90, 0x35, 0xd8, 0xfa,
	0x41, 0x5e, 0x90, 0xdf, 0xd5, 0xb6, 0xfe, 0xb8, 0x4f, 0x65, 0x96, 0x24, 0xa1, 0xe0, 0xc1, 0x36,
	0xb0, 0x4c, 0xb9, 0xcc, 0x42, 0xd5, 0x34, 0x6b, 0x6b, 0x1a, 0x8f, 0x03, 0x6d, 0xf3, 0x2c, 0x49,
	0x78, 0x14, 0xf0, 0x40, 0x6b, 0x8c, 0x5e, 0x70, 0xe0, 0x3e, 0x76, 0xdc, 0xd5, 0x92, 0xd5, 0x41,
	0x2a, 0xf0, 0x6f, 0xd0, 0xbc, 0x62, 0x03, 0x49, 0xd6, 0xe9, 0x5c, 0x77, 0x65, 0xef, 0xf3, 0xbc,
	0x20, 0xf7, 0x76, 0xd3, 0x94, 0x99, 0x5d, 0x81, 0xad, 0xb0, 0x81, 0xd4, 0xcb, 0x59, 0x92, 0x84,
	0xc7, 0x25, 0x9d, 0xc9, 0xf3, 0x05, 0x1a, 0x58, 0xa0, 0x8b, 0x7e, 0x1c, 0x86, 0xdc, 0xd7, 0x02,
	0x1b, 0xf5, 0xbe, 0x00, 0x1b, 0xf9, 0x36, 0x2f, 0xc8, 0x37, 0xb5, 0x8d, 0x94, 0x5a, 0x3d, 0xc6,
	0x9e, 0x75, 0x82, 0x29, 0x4f, 0x52, 0x2e, 0x79, 0xa4, 0xa4, 0xe3, 0x5e, 0x18, 0xa3, 0x82, 0xae,
	0xbf, 0x44, 0x2b, 0x03, 0x36, 0xb2, 0x36, 0x74, 0x11, 0x98, 0x7c, 0x95, 0x17, 0xe4, 0xf3, 0x19,
	0x4c, 0x34, 0xde, 0x59, 0xe4, 0x97, 0x35, 0x12, 0x10, 0xfe, 0x73, 0x34, 0x97, 0xa5, 0x21, 0xd9,
	0x00, 0x92, 0x4f, 0xf2, 0x82, 0xfc, 0xa6, 0x79, 0x01, 0xa0, 0x5e, 0xe3, 0xa5, 0x94, 0x01, 0xfd,
	0x6d, 0x03, 0x17, 0xd2, 0x9e, 0xf2, 0x9f, 0x98, 0x83, 0x62, 0x0a, 0x66, 0xb5, 0xa7, 0x62, 0x03,
	0xee, 0xb8, 0x9a, 0x74, 0x27, 0x42, 0x57, 0x4f, 0x8c, 0x0f, 0x26, 0x86, 0xfc, 0x8c, 0x60, 0xf7,
	0xf1, 0x84, 0xe2, 0xe8, 0x18, 0xb0, 0xd2, 0xb8, 0xe1, 0xce, 0xff, 0x2c, 0x4c, 0x85, 0xe1, 0x5f,
	0x71, 0xb5, 0xcf, 0x15, 0x13, 0xa1, 0xac, 0x62, 0x52, 0x0f, 0x6d, 0x4c, 0xd0, 0x96, 0xa4, 0x45,
	0xe7, 0xba, 0x8b, 0x46, 0x27, 0x9e, 0x71, 0xa5, 0xcf, 0x72, 0xe2, 0x08, 0x1f, 0x07, 0xa0, 0x1a,
	0x29, 0x57, 0xa9, 0xe0, 0x87, 0x9c, 0x06, 0x86, 0xa8, 0xb6, 0x43, 0xc7, 0x9d, 0xa2, 0x87, 0xff,
	0x80, 0x56, 0x45, 0xe4, 0x87, 0x99, 0x46, 0x1b, 0x48, 0x90, 0x75, 0xd9, 0x38, 0x7e, 0x7d, 0xb0,
	0x69, 0xc6, 0xb7, 0x35, 0xa9, 0x2c, 0x8d, 0xb4, 0xd2, 0x51, 0x11, 0xf5, 0xe3, 0x74, 0xc4, 0x40,
	0x3b, 0x6c, 0x80, 0x31, 0xb3, 0x3c, 0x28, 0x19, 0x39, 0x6e, 0x9d, 0x20, 0xfe, 0x4b, 0xf4, 0xbe,
	0x1d, 0xb2, 0x20, 0x10, 0xe6, 0xd2, 0x6c, 0x60, 0x90, 0x10, 0xca, 0x96, 0x8d, 0x26, 0x4e, 0x72,
	0xb3, 0x38, 0xe7, 0xe3, 0x78, 0x32, 0x0b, 0xec, 0xa1, 0x8b, 0x76, 0xd2, 0x1f, 0x8a, 0x30, 0x48,
	0x79, 0x64, 0x12, 0x89, 0xbd, 0x07, 0x79, 0x41, 0xee, 0x4e, 0x72, 0x2d, 0x71, 0x4e, 0x66, 0x35,
	0x49, 0x0d, 0x33, 0xb4, 0x6e, 0x41, 0xaf, 0x0f, 0xe1, 0x08, 0x17, 0x80, 0xfc, 0xd7, 0x79, 0x41,
	0xbe, 0x98, 0x24, 0xff, 0x9a, 0x1f, 0xd3, 0x43, 0x16, 0x66, 0xdc, 0x58, 0xf0, 0x89, 0x4c, 0x9a,
	0x14, 0xf1, 0x2b, 0xb4, 0x66, 0x01, 0x87, 0xb1, 0xe2, 0x12, 0x22, 0xde, 0xb2, 0xd1, 0x81, 0x49,
	0x0e, 0x1a, 0x81, 0x06, 0x4c, 0xb1, 0x93, 0x89, 0x37, 0x68, 0xe1, 0x0c, 0x5d, 0x82, 0xb8, 0xd4,
	0x08, 0xa9, 0xcb, 0xc0, 0xe0, 0xd7, 0x79, 0x41, 0xf6, 0x27, 0x19, 0x30, 0x0a, 0xe8, 0x8d, 0x28,
	0x2b, 0x22, 0x9d, 0x10, 0x07, 0x55, 0x96, 0x90, 0x85, 0x61, 0x7d, 0xde, 0x71, 0x37, 0x60, 0x4d,
	0x2d, 0xde, 0x76, 0xfe, 0x7b, 0x13, 0x6d, 0x36, 0xf4, 0xdf, 0xea, 0x3e, 0xbe, 0x8c, 0x16, 0x8d,
	0x07, 0x35, 0x89, 0x98, 0x6b, 0x47, 0xb3, 0xcc, 0xef, 0x9d, 0xd9, 0xe6, 0x47, 0xd0, 0x92, 0x9f,
	0x72, 0xa6, 0xe2, 0x14, 0xf4, 0x6b, 0xd1, 0x2d, 0x87, 0x3a, 0xa5, 0xb4, 0x3f, 0x6d, 0x76, 0x36,
	0x0f, 0x2c, 0xd6, 0x2c, 0xd0, 0xe4, 0x5b, 0x37, 0xa6, 0x72, 0xb8, 0x05, 0xc0, 0x9a, 0x48, 0xcb,
	0x76, 0xd0, 0xbb, 0x53, 0x81, 0x5d, 0x04, 0x70, 0x35, 0xeb, 0x2e, 0x9e, 0x0c, 0xd5, 0x22, 0xc0,
	0x6d, 0xb4, 0x5c, 0xa5, 0x57, 0x4b, 0xe0, 0x11, 0xaa, 0xb1, 0x4e, 0x8f, 0x21, 0xfb, 0x90, 0xe2,
	0xad, 0x49, 0x0c, 0xe6, 0xcd, 0xe4, 0x33, 0xf1, 0x96, 0xe3, 0x5b, 0xe8, 0x52, 0x99, 0xa4, 0x8d,
	0x91, 0x56, 0xec, 0xde, 0xcd, 0xc4, 0xa3, 0x12, 0xf7, 0x7d, 0xc3, 0xc4, 0xd3, 0xee, 0x12, 0x42,
	0xb5, 0xbb, 0xa4, 0xc7, 0x07, 0x69, 0x88, 0xaf, 0xa2, 0xd5, 0x92, 0x8c, 0x9e, 0x5d, 0x85, 0x59,
	0x64, 0x41, 0x1a, 0xe1, 0x13, 0x54, 0x46, 0xe4, 0x32, 0xd8, 0x43, 0xc4, 0x73, 0x27, 0xa0, 0x78,
	0xc3, 0x78, 0xe3, 0x75, 0x98, 0xd4, 0x3f, 0xf5, 0xb9, 0x0e, 0xfd, 0x38, 0x52, 0x3c, 0x52, 0x20,
	0x22, 0x44, 0x98, 0x45, 0x77, 0xad, 0x04, 0x6a, 0xf1, 0xf0, 0x16, 0xda, 0xa8, 0x90, 0x2c, 0x57,
	0x08, 0x12, 0x8b, 0xee, 0xc5, 0x12, 0xfe, 0x83, 0x01, 0xeb, 0x82, 0xc0, 0xe4, 0x88, 0xe0, 0xf1,
	0xcb, 0xdc, 0x6f, 0x6b, 0x46, 0xee, 0x77, 0x09, 0x10, 0xa6, 0xb2, 0xb9, 0xdb, 0xb3, 0x94, 0x1a,
	0x03, 0xee, 0x94, 0x2a, 0x6a, 0x77, 0xad, 0xc4, 0x88, 0x7b, 0xa0, 0x05, 0x3c, 0x20, 0xef, 0xc2,
	0x15, 0xae, 0x6a, 0xd8, 0x43, 0x03, 0xaa, 0x50, 0xb2, 0x24, 0x00, 0x94, 0xcd, 0x31, 0xca, 0x81,
	0x01, 0xe1, 0x2b, 0x8d, 0xe4, 0xe5, 0x3d, 0x40, 0xa8, 0x67, 0x13, 0x9b, 0x68, 0xa1, 0x1f, 0x6a,
	0xf7, 0x70, 0x19, 0xa6, 0xcc, 0x40, 0x9f, 0xdc, 0x91, 0xcd, 0x22, 0xcd, 0xc9, 0xfd, 0x91, 0x29,
	0x72, 0x8e, 0x6a, 0x49, 0xa7, 0xde, 0x4d, 0x85, 0xc4, 0x7c, 0x9f, 0x27, 0x5a, 0x04, 0x02, 0x88,
	0x1b, 0xe5, 0xc4, 0xae, 0x85, 0xe3, 0x6d, 0x84, 0xe5, 0x30, 0x3e, 0xf2, 0xc6, 0x55, 0x10, 0x0b,
	0x43, 0xf2, 0xbe, 0xc1, 0xd6, 0x33, 0x55, 0xb9, 0xb7, 0x1b, 0x86, 0xf8, 0x33, 0x74, 0x39, 0xca,
	0x46, 0x9e, 0x1f, 0x8f, 0x46, 0x3a, 0x72, 0x7a, 0x01, 0x3f, 0xe4, 0x61, 0x9c, 0xf0, 0x94, 0xb4,
	0xa1, 0x16, 0xdb, 0x8c, 0xb2, 0xd1, 0x43, 0x3b, 0xb9, 0x5f, 0xce, 0x61, 0x07, 0xbd, 0xdb, 0x58,
	0x65, 0x72, 0x28, 0xf2, 0x01, 0x2c, 0xb9, 0x54, 0x5b, 0x02, 0x16, 0xee, 0x6b, 0x9b, 0xee, 0xb1,
	0x28, 0xe2, 0x01, 0xf9, 0x10, 0xe4, 0xb0, 0x23, 0xfc, 0x11, 0x42, 0x3d, 0x16, 0x79, 0x29, 0x67,
	0x32, 0x8e, 0xc8, 0x47, 0x70, 0x3f, 0x2b, 0x3d, 0x16, 0xb9, 0x00, 0xa8, 0x96, 0xa5, 0xe4, 0x0a,
	0xe8, 0x89, 0x1d, 0xe1, 0xeb, 0xe8, 0x82, 0xcf, 0x22, 0xaf, 0xa7, 0x55, 0x21, 0xe4, 0xfa, 0x30,
	0xae, 0x9a, 0x53, 0xf3, 0x59, 0xb4, 0xc7, 0xf7, 0x0d, 0x0c, 0x77, 0xc0, 0x69, 0xc6, 0xa3, 0x84,
	0x29, 0xd1, 0x0b, 0x39, 0xa1, 0x06, 0xa7, 0x0e, 0xd3, 0xe6, 0xc2, 0x92, 0xc4, 0xe4, 0xe3, 0x1f,
	0x1b, 0x73, 0x61, 0x49, 0xf2, 0xa4, 0x6e, 0x92, 0x90, 0xcc, 0x74, 0x4c, 0xc5, 0x5a, 0x65, 0xf5,
	0xda, 0x91, 0xb0, 0x68, 0x7c, 0xc6, 0xe4, 0x5a, 0x25, 0x40, 0x75, 0xbc, 0xf8, 0x3a, 0x5a, 0xb7,
	0x08, 0xa0, 0x67, 0x92, 0x5c, 0x37, 0x7e, 0xa4, 0x01, 0xc4, 0x1f, 0xa2, 0x95, 0x3e, 0x3b, 0x8c,
	0x53, 0xa1, 0xf7, 0x71, 0x03, 0x30, 0xc6, 0x00, 0x98, 0x8d, 0xc3, 0x30, 0x3e, 0xe2, 0xa9, 0x24,
	0x9f, 0xd8, 0xd9, 0x12, 0x80, 0x1f, 0xa0, 0xcb, 0xa1, 0xe8, 0x73, 0x50, 0xcd, 0x26, 0xab, 0x9b,
	0x80, 0xfa, 0x5e, 0x39, 0xfb, 0xac, 0xc1, 0xf2, 0x0e, 0xc2, 0xd5, 0xb2, 0x31, 0xef, 0x2e, 0x2c,
	0xb9, 0x54, 0xce, 0x3c, 0xaa, 0x64, 0x68, 0xa0, 0x57, 0xc2, 0x6c, 0x4d, 0xa0, 0x57, 0x42, 0x6d,
	0xa2, 0x05, 0x13, 0xdc, 0x6f, 0x19, 0x45, 0x37, 0x61, 0xf8, 0x2a, 0x5a, 0x15, 0x23, 0x36, 0xe0,
	0xde, 0x91, 0x08, 0xd4, 0x90, 0xdc, 0x36, 0xf6, 0x01, 0xa0, 0x97, 0x1a, 0xa2, 0x4d, 0xcc, 0x20,
	0x0c, 0xb9, 0x18, 0x0c, 0x15, 0xd9, 0x36, 0x26, 0x06, 0xb0, 0x5f, 0x03, 0x48, 0x5f, 0x89, 0x41,
	0xd1, 0xee, 0xe7, 0x8e, 0x71, 0xa1, 0x00, 0xb0, 0xee, 0x4d, 0x26, 0xb1, 0x08, 0x79, 0xea, 0x29,
	0x36, 0x20, 0x0e, 0x5c, 0x08, 0xb2, 0xa0, 0xe7, 0x6c, 0xa0, 0x0d, 0xb4, 0xe6, 0xa7, 0x77, 0x8c,
	0x00, 0x63, 0x88, 0xd6, 0x97, 0x72, 0x04, 0xfa, 0xf0, 0x29, 0x30, 0x68, 0xc0, 0xb4, 0x90, 0xa0,
	0xf8, 0x65, 0x26, 0x71, 0xd7, 0x08, 0xa9, 0x35, 0xbe, 0x4c, 0x07, 0xae, 0x22, 0x3d, 0xf4, 0x52,
	0x9e, 0xc4, 0xa9, 0x92, 0xe4, 0x9e, 0xe1, 0x13, 0x65, 0x23, 0xd7, 0x40, 0xf0, 0x2f, 0xd0, 0x72,
	0x95, 0xff, 0xdc, 0xa7, 0x73, 0xdd, 0xd5, 0x7b, 0x1f, 0x39, 0xb3, 0x22, 0xa1, 0x63, 0xbd, 0xa1,
	0x5b, 0xa1, 0xe3, 0x3b, 0xb6, 0x2e, 0xf8, 0x0c, 0x96, 0xbd, 0x3f, 0x7b, 0xd9, 0x73, 0x36, 0xb0,
	0xa9, 0xff, 0x17, 0x68, 0xb9, 0x92, 0xf4, 0x01, 0x2c, 0xf9, 0x60, 0xf6, 0x12, 0x10, 0xde, 0xad,
	0x90, 0xf1, 0x7d, 0xb4, 0x68, 0x73, 0x99, 0xcf, 0x4f, 0x5b, 0xf6, 0xdb, 0x17, 0x9a, 0x97, 0x45,
	0xc5, 0x5f, 0xa3, 0x15, 0x9d, 0x51, 0x78, 0x3a, 0xf9, 0x20, 0x5f, 0xd0, 0x56, 0x77, 0xf5, 0xde,
	0x95, 0xd9, 0xeb, 0x5e, 0xc4, 0x8a, 0xef, 0x33, 0xc5, 0xdc, 0xe5, 0x43, 0xfb, 0x0b, 0xe7, 0x2d,
	0x74, 0xb1, 0xae, 0xc6, 0x3d, 0x1e, 0x90, 0x2f, 0xa1, 0x00, 0xfc, 0x7d, 0x5e, 0x90, 0x83, 0xa7,
	0x51, 0x08, 0x89, 0x93, 0x08, 0x74, 0x5a, 0xd3, 0x20, 0xea, 0xfc, 0x8a, 0x2b, 0x5d, 0xb0, 0xea,
	0xdf, 0x92, 0xb2, 0x28, 0xa0, 0x51, 0xac, 0x68, 0xa4, 0x73, 0xc6, 0x70, 0x1a, 0xd3, 0x88, 0x40,
	0x7d, 0x16, 0x86, 0xd2, 0xbd, 0x50, 0x33, 0x8d, 0x1e, 0x0f, 0xda, 0x0f, 0xd0, 0x9c, 0x56, 0x94,
	0x0d, 0x34, 0xa7, 0x35, 0xa8, 0x65, 0xe2, 0x9b, 0x62, 0x03, 0x6d, 0x85, 0x2c, 0x18, 0x89, 0x28,
	0x8e, 0xc2, 0x63, 0x93, 0x21, 0xbb, 0x63, 0x40, 0xfb, 0x3f, 0x5b, 0x68, 0xa9, 0x8c, 0x5c, 0x1f,
	0xa2, 0x15, 0x7b, 0x5b, 0x55, 0x79, 0x30, 0x06, 0xe8, 0x59, 0x19, 0xa7, 0x2a, 0x4e, 0x03, 0x9e,
	0xda, 0x2e, 0xd8, 0x18, 0x50, 0xc6, 0xd5, 0xb9, 0x71, 0x5c, 0xc5, 0x68, 0x1e, 0x82, 0xbd, 0x49,
	0x53, 0xe0, 0x77, 0x23, 0x8d, 0x58, 0x98, 0x48, 0x23, 0xa6, 0x23, 0xf8, 0xe2, 0xac, 0x08, 0xde,
	0x0e, 0xd1, 0x02, 0x5c, 0xf9, 0xcf, 0xa8, 0x69, 0x4e, 0x17, 0xbd, 0xe1, 0x2c, 0xe7, 0x9a, 0xce,
	0xb2, 0xbd, 0x83, 0x16, 0x40, 0x53, 0xf4, 0x06, 0x5f, 0xf3, 0xe3, 0xf2, 0x60, 0x5f, 0x73, 0x08,
	0x8a, 0x90, 0x0e, 0xdb, 0x12, 0xc9, 0x0c, 0xda, 0xaf, 0xd0, 0x72, 0xa9, 0x22, 0x1a, 0x43, 0xfa,
	0x71, 0xca, 0x61, 0xd5, 0x3b, 0xae, 0x19, 0x68, 0xbf, 0x0d, 0xd9, 0xab, 0x97, 0x25, 0x56, 0x98,
	0x25, 0x18, 0x1f, 0x24, 0x3a, 0xa6, 0x98, 0xa9, 0x20, 0x3e, 0x8a, 0xac, 0x2c, 0xa0, 0x98, 0x72,
	0x3f, 0x3e, 0x8a, 0x3a, 0xf1, 0x54, 0x63, 0xb3, 0x51, 0x77, 0xd9, 0x5a, 0xef, 0x31, 0xda, 0x6c,
	0x1c, 0x80, 0xcd, 0x9d, 0xa1, 0xf8, 0x5a, 0xbd, 0xf7, 0xde, 0x4c, 0xb5, 0x76, 0x67, 0x2e, 0xe9,
	0xfc, 0xf3, 0xd2, 0x54, 0x8b, 0xb2, 0xae, 0xb1, 0x55, 0xad, 0xb7, 0xd7, 0xec, 0x3f, 0x42, 0x3b,
	0xab, 0xec, 0x18, 0xd6, 0xaa, 0xb9, 0x66, 0xb1, 0x27, 0x69, 0x3f, 0x8d, 0x47, 0x55, 0xfb, 0xf1,
	0x5b, 0x34, 0xaf, 0x6b, 0x5a, 0xb3, 0xeb, 0xaf, 0x5a, 0x77, 0x4d, 0x77, 0xa9, 0x56, 0x2b, 0x3f,
	0x53, 0x2c, 0x35, 0xad, 0x09, 0x36, 0x30, 0x8d, 0x26, 0x93, 0x5d, 0x4b, 0xc7, 0x85, 0x95, 0xf8,
	0x47, 0xa4, 0x5d, 0x55, 0xc2, 0x53, 0xa0, 0x33, 0x5f, 0xd2, 0x31, 0xad, 0xb0, 0x5a, 0x19, 0x3f,
	0xe4, 0x34, 0xca, 0x46, 0x3d, 0x9e, 0xea, 0x9c, 0xdf, 0xd2, 0xd8, 0xa6, 0x09, 0x4f, 0x0d, 0x65,
	0x23, 0x71, 0x96, 0x46, 0x8e, 0x5b, 0xa3, 0x87, 0x39, 0x42, 0x5a, 0x67, 0x46, 0x5c, 0x0d, 0x63,
	0xab, 0x9b, 0x5f, 0xad, 0x86, 0x4c, 0x2a, 0x9b, 0x57, 0xed, 0x7d, 0x99, 0x17, 0xe4, 0xb3, 0xba,
	0xbc, 0xb1, 0x11, 0xd7, 0xac, 0x28, 0x3b, 0x8f, 0x71, 0x34, 0xae, 0x6a, 0x40, 0x63, 0xa4, 0xe3,
	0xd6, 0x08, 0x63, 0x85, 0x56, 0x54, 0xac, 0x58, 0x08, 0xe6, 0xba, 0x04, 0xa5, 0xcc, 0x8b, 0xbc,
	0x20, 0xee, 0x44, 0xd3, 0x00, 0xaa, 0x1a, 0x8d, 0x53, 0x15, 0xb8, 0x43, 0x2d, 0xb9, 0x62, 0x61,
	0x6d, 0x6f, 0xe6, 0x94, 0xa1, 0x6b, 0x20, 0x99, 0x12, 0xb2, 0x7f, 0x6c, 0xba, 0x0a, 0x6f, 0x32,
	0x9e, 0x1e, 0x3b, 0xee, 0x98, 0x11, 0xde, 0x47, 0x4b, 0xd0, 0x5d, 0xf2, 0x8f, 0x21, 0x39, 0x5f,
	0xdf, 0xbb, 0x95, 0x17, 0xe4, 0x93, 0x6e, 0x5c, 0xf1, 0x7c, 0x24, 0x42, 0xc5, 0x53, 0xda, 0x3b,
	0xa6, 0x16, 0x8f, 0x4a, 0xae, 0xf4, 0xf6, 0xa4, 0xe3, 0x96, 0x4b, 0xf1, 0x11, 0x5a, 0x16, 0x81,
	0xf4, 0x40, 0x74, 0x04, 0xa2, 0xff, 0x98, 0x17, 0xe4, 0x4f, 0xcf, 0x23, 0xfa, 0x44, 0x1f, 0x40,
	0x04, 0xf2, 0x1c, 0x1b, 0x58, 0x12, 0x81, 0xd4, 0xde, 0x15, 0x1f, 0xa2, 0xb5, 0x94, 0xbf, 0xc9,
	0x44, 0xca, 0x03, 0xf0, 0xfc, 0xab, 0xd0, 0x7b, 0x72, 0xf3, 0x82, 0x3c, 0xa9, 0x5f, 0x3c, 0x34,
	0x9e, 0x34, 0xb1, 0x51, 0x26, 0x15, 0xed, 0x71, 0x6a, 0x9b, 0x2e, 0xfa, 0x52, 0xd8, 0xa4, 0x08,
	0x2a, 0xae, 0xf1, 0xe4, 0x25, 0xcb, 0x06, 0x1f, 0xfc, 0x16, 0xad, 0xf1, 0x9f, 0xa0, 0x1e, 0x35,
	0x7c, 0xd7, 0x80, 0xef, 0xe4, 0x7d, 0x4d, 0xf0, 0x7d, 0xf2, 0xf4, 0xf9, 0xff, 0x91, 0x77, 0x9d,
	0x57, 0xe7, 0xbf, 0xde, 0x41, 0xd7, 0x4f, 0xb7, 0x4d, 0xeb, 0x0f, 0x74, 0x41, 0xa2, 0x2f, 0xda,
	0xd6, 0xa4, 0x66, 0x00, 0x19, 0x85, 0x31, 0xa8, 0x80, 0xff, 0x64, 0xfd, 0x50, 0x0d, 0x72, 0xa2,
	0x17, 0x99, 0xfb, 0xd9, 0x5e, 0x04, 0xff, 0x12, 0xcd, 0xb3, 0x24, 0x91, 0x64, 0x1e, 0x96, 0x6e,
	0x39, 0xe7, 0x91, 0xda, 0xd9, 0x4d, 0x12, 0x17, 0x96, 0xb5, 0x05, 0x9a, 0xdb, 0x4d, 0x92, 0xf1,
	0x43, 0x8b, 0xdd, 0x86, 0xf1, 0x1a, 0x18, 0xcd, 0x43, 0x34, 0x31, 0x3e, 0x18, 0x7e, 0x4f, 0x24,
	0x4b, 0x73, 0x53, 0xc9, 0x12, 0xb1, 0xca, 0xae, 0xb8, 0x7d, 0x96, 0x29, 0x87, 0x9d, 0xff, 0x58,
	0x40, 0x1f, 0x4d, 0x3e, 0xc9, 0x80, 0x75, 0x57, 0x9e, 0xee, 0xdb, 0xa6, 0xa7, 0x03, 0x33, 0xa9,
	0xbf, 0x8d, 0x4c, 0x5c, 0x64, 0x8f, 0x87, 0x71, 0x04, 0xed, 0xce, 0xca, 0xcf, 0xfd, 0xd9, 0xec,
	0x5e, 0xc0, 0xe2, 0xde, 0xfd, 0xbc, 0x20, 0x3b, 0x3f, 0x4c, 0xda, 0x41, 0xe3, 0xf5, 0xe2, 0x88,
	0xdf, 0x0c, 0x68, 0x28, 0x5e, 0x73, 0x6a, 0x9c, 0x8e, 0x33, 0x1d, 0xeb, 0x76, 0xcb, 0xf2, 0xd3,
	0xbc, 0xb4, 0xc0, 0xe3, 0x4d, 0x5d, 0x17, 0xe1, 0xa1, 0x62, 0x66, 0x83, 0xb9, 0x7a, 0xa7, 0xf8,
	0x71, 0x46, 0xad, 0x6a, 0xde, 0x54, 0xee, 0xe6, 0x05, 0xb9, 0x53, 0xa3, 0x56, 0xab, 0x44, 0x4f,
	0xa2, 0x39, 0x55, 0xde, 0xfe, 0xd0, 0xa8, 0x35, 0xa1, 0x3d, 0xb1, 0xf7, 0x69, 0x5e, 0x90, 0xed,
	0x46, 0x4b, 0xfe, 0xf4, 0x5e, 0xb8, 0xd3, 0xa8, 0x4e, 0x1f, 0xd9, 0xcc, 0x72, 0x11, 0xac, 0xef,
	0x5e, 0x5e, 0x10, 0xa7, 0xee, 0x86, 0x4d, 0xa3, 0x11, 0x7a, 0x56, 0x27, 0xbd, 0x4e, 0x98, 0x94,
	0xf3, 0xb7, 0x93, 0x4d, 0x8e, 0xa9, 0x57, 0x88, 0x47, 0x76, 0xfa, 0x44, 0x42, 0xe3, 0x74, 0xa6,
	0x87, 0x36, 0xea, 0x8d, 0x8f, 0xda, 0xab, 0xc9, 0x17, 0x79, 0x41, 0xee, 0xd7, 0x88, 0xda, 0xf4,
	0x8b, 0xf6, 0xcf, 0x22, 0x5e, 0x6f, 0x98, 0x68, 0xc4, 0x0e, 0x9d, 0x7a, 0x18, 0xac, 0xb4, 0xd5,
	0xbe, 0x1d, 0xfe, 0xdd, 0x02, 0xda, 0x9a, 0x40, 0x71, 0x79, 0x3f, 0xe5, 0x72, 0xf8, 0x22, 0xd6,
	0xde, 0xfb, 0x77, 0x19, 0xcf, 0xc6, 0xca, 0x3d, 0xdb, 0xc4, 0x9e, 0x23, 0x3c, 0x62, 0xca, 0x1f,
	0x8a, 0x68, 0xe0, 0x8d, 0x13, 0x25, 0xf3, 0x36, 0x08, 0x2f, 0x60, 0xdf, 0x35, 0x18, 0x3c, 0x8e,
	0xfa, 0xf1, 0xf7, 0x16, 0xbf, 0x7c, 0x76, 0x72, 0x37, 0x46, 0x13, 0x10, 0x9c, 0xda, 0x4b, 0x9b,
	0x83, 0x4b, 0xfb, 0x43, 0x5e, 0x90, 0x57, 0x8f, 0x4d, 0x6b, 0xaf, 0xee, 0xf5, 0x87, 0xec, 0x90,
	0x53, 0x16, 0x86, 0x26, 0xbc, 0xe9, 0x2b, 0x8c, 0x53, 0xca, 0xa2, 0x4a, 0x2d, 0x4c, 0x27, 0xb2,
	0x4f, 0x81, 0xbc, 0xc7, 0xc2, 0xd0, 0x33, 0x10, 0xa9, 0xc3, 0x93, 0x76, 0xa3, 0x7d, 0x16, 0xca,
	0xea, 0x82, 0xff, 0xb5, 0x85, 0x2e, 0x34, 0x31, 0x8d, 0x03, 0xf8, 0x6a, 0x5e, 0x07, 0xa5, 0xbd,
	0xa3, 0xbc, 0x20, 0xb2, 0x8a, 0x50, 0x6a, 0xc8, 0x23, 0x2b, 0x0a, 0xb8, 0xed, 0x69, 0x51, 0x64,
	0xc2, 0x7d, 0x78, 0x57, 0x77, 0xa8, 0x0e, 0x6c, 0xc0, 0xca, 0xae, 0xab, 0xad, 0x50, 0x34, 0xe4,
	0x4c, 0x6a, 0x3f, 0xcf, 0x1b, 0x52, 0x8f, 0x57, 0xbb, 0x6b, 0x20, 0xd4, 0x6e, 0x18, 0xea, 0x48,
	0x81, 0x5f, 0xa2, 0xf5, 0xd2, 0xd1, 0x7b, 0xb6, 0x27, 0x5b, 0xe9, 0xf5, 0x77, 0x66, 0x02, 0x8e,
	0x60, 0xea, 0x98, 0xaa, 0x63, 0x91, 0x86, 0x45, 0x2d, 0x62, 0x00, 0xe1, 0xbf, 0x40, 0x38, 0xe0,
	0x52, 0x07, 0x2f, 0xef, 0x0d, 0xdc, 0x3b, 0xe4, 0xe7, 0xd0, 0xf4, 0x33, 0x0f, 0x13, 0xfb, 0x66,
	0xb6, 0x96, 0x41, 0x08, 0xc5, 0x47, 0x55, 0xab, 0xf7, 0x10, 0x54, 0x86, 0xc2, 0x5a, 0x87, 0xd2,
	0xef, 0xd9, 0xb1, 0x8e, 0x63, 0x7e, 0xc8, 0x46, 0x09, 0x0f, 0x74, 0x6a, 0xa0, 0x91, 0x24, 0x4f,
	0x0f, 0x79, 0xea, 0x6e, 0x58, 0x4e, 0xa0, 0x60, 0xcf, 0xc4, 0x5b, 0xde, 0xd9, 0x46, 0xb7, 0xce,
	0xa3, 0x89, 0x46, 0x71, 0xef, 0xfd, 0xcd, 0x32, 0x5a, 0x6f, 0x60, 0xe3, 0xbf, 0x6e, 0xa1, 0x95,
	0x71, 0x7f, 0xe2, 0x63, 0xe7, 0xac, 0xcf, 0x15, 0xda, 0x1d, 0xe7, 0xec, 0x6f, 0x05, 0xe0, 0xa5,
	0xbc, 0x82, 0xcb, 0xea, 0xd1, 0x79, 0xf6, 0xb3, 0x14, 0xfe, 0xfb, 0x16, 0x5a, 0xad, 0xbd, 0xd1,
	0xe3, 0x6b, 0xce, 0xd9, 0x1f, 0x1a, 0xb4, 0xaf, 0x3b, 0xe7, 0x79, 0xe5, 0x07, 0xd7, 0x5a, 0x9b,
	0xa9, 0xc9, 0xa2, 0xd3, 0xe4, 0x59, 0xd2, 0xfc, 0x95, 0xae, 0xdd, 0x0c, 0x08, 0x5f, 0x75, 0x4e,
	0xff, 0x44, 0xa0, 0x4d, 0x9d, 0x33, 0xde, 0x88, 0x3a, 0xa0, 0x60, 0x25, 0x8e, 0xa4, 0xcc, 0x3c,
	0xbb, 0xf3, 0xc0, 0x0a, 0x61, 0xf3, 0x12, 0x2d, 0x47, 0xf9, 0x76, 0xec, 0xe0, 0x7f, 0x6c, 0x21,
	0x34, 0xae, 0x41, 0x70, 0xc7, 0x39, 0xf3, 0x5d, 0xa8, 0x7d, 0xcd, 0x39, 0xbb, 0x86, 0xe9, 0x40,
	0xce, 0xee, 0xda, 0xba, 0x41, 0x36, 0xde, 0x51, 0x58, 0x2f, 0xce, 0x14, 0x65, 0x60, 0xe0, 0x53,
	0x0f, 0x48, 0xd2, 0xc1, 0x7f, 0xdb, 0x42, 0x6b, 0xf5, 0x94, 0x02, 0x5f, 0x77, 0xce, 0x51, 0xc2,
	0xb4, 0x6f, 0x9c, 0x2b, 0x2d, 0xe9, 0x74, 0xf3, 0x82, 0x5c, 0x1f, 0x0b, 0x66, 0x6c, 0x70, 0x2c,
	0x43, 0xef, 0x98, 0x32, 0x38, 0x2f, 0x07, 0xbf, 0x45, 0x8b, 0xc6, 0x1b, 0xe3, 0x2b, 0xce, 0xa9,
	0x39, 0x45, 0xfb, 0xaa, 0x73, 0x86, 0x17, 0x87, 0x30, 0x64, 0x80, 0xb3, 0xcf, 0x62, 0x22, 0x52,
	0xe0, 0x7f, 0x6a, 0x21, 0x3c, 0x6d, 0x5d, 0xf8, 0x96, 0x73, 0xee, 0x58, 0xd0, 0xbe, 0xed, 0x9c,
	0xdf, 0x5a, 0x3b, 0x50, 0xaa, 0x59, 0x84, 0x29, 0x57, 0x51, 0xc5, 0x33, 0x7d, 0x2e, 0x6d, 0xf3,
	0x35, 0x09, 0xb8, 0x09, 0xe1, 0x83, 0x46, 0x31, 0xdf, 0xe7, 0x72, 0x2a, 0x73, 0x0a, 0x98, 0x62,
	0x7b, 0xbf, 0x7c, 0xf5, 0xf5, 0x40, 0xa8, 0x61, 0xd6, 0x73, 0xfc, 0x78, 0xb4, 0x73, 0xf7, 0xfe,
	0xeb, 0x9d, 0x41, 0x7c, 0x07, 0xbe, 0x5f, 0xba, 0x93, 0x72, 0x19, 0x67, 0xa9, 0xcf, 0xe5, 0x0e,
	0x7c, 0xc1, 0xd4, 0xcb, 0xfa, 0xe6, 0x23, 0xa9, 0x9d, 0xf1, 0xe7, 0x4d, 0xff, 0x1b, 0x00, 0x00,
	0xff, 0xff, 0xdb, 0x9c, 0x12, 0x7f, 0x37, 0x25, 0x00, 0x00,
}
