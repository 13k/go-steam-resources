// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.21.0
// 	protoc        v3.6.1
// source: steam/htmlmessages.proto

package steam

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type EJSRegisterMethodType int32

const (
	EJSRegisterMethodType_k_EJSRegisterMethodType_Invalid  EJSRegisterMethodType = 0
	EJSRegisterMethodType_k_EJSRegisterMethodType_Function EJSRegisterMethodType = 1
	EJSRegisterMethodType_k_EJSRegisterMethodType_Callback EJSRegisterMethodType = 2
	EJSRegisterMethodType_k_EJSRegisterMethodType_Promise  EJSRegisterMethodType = 3
)

// Enum value maps for EJSRegisterMethodType.
var (
	EJSRegisterMethodType_name = map[int32]string{
		0: "k_EJSRegisterMethodType_Invalid",
		1: "k_EJSRegisterMethodType_Function",
		2: "k_EJSRegisterMethodType_Callback",
		3: "k_EJSRegisterMethodType_Promise",
	}
	EJSRegisterMethodType_value = map[string]int32{
		"k_EJSRegisterMethodType_Invalid":  0,
		"k_EJSRegisterMethodType_Function": 1,
		"k_EJSRegisterMethodType_Callback": 2,
		"k_EJSRegisterMethodType_Promise":  3,
	}
)

func (x EJSRegisterMethodType) Enum() *EJSRegisterMethodType {
	p := new(EJSRegisterMethodType)
	*p = x
	return p
}

func (x EJSRegisterMethodType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EJSRegisterMethodType) Descriptor() protoreflect.EnumDescriptor {
	return file_steam_htmlmessages_proto_enumTypes[0].Descriptor()
}

func (EJSRegisterMethodType) Type() protoreflect.EnumType {
	return &file_steam_htmlmessages_proto_enumTypes[0]
}

func (x EJSRegisterMethodType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *EJSRegisterMethodType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = EJSRegisterMethodType(num)
	return nil
}

// Deprecated: Use EJSRegisterMethodType.Descriptor instead.
func (EJSRegisterMethodType) EnumDescriptor() ([]byte, []int) {
	return file_steam_htmlmessages_proto_rawDescGZIP(), []int{0}
}

type CMsgKeyUp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrowserHandle *uint32 `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	KeyCode       *uint32 `protobuf:"varint,2,opt,name=keyCode" json:"keyCode,omitempty"`
	Modifiers     *uint32 `protobuf:"varint,3,opt,name=modifiers" json:"modifiers,omitempty"`
	NativeKeyCode *uint32 `protobuf:"varint,4,opt,name=nativeKeyCode" json:"nativeKeyCode,omitempty"`
}

func (x *CMsgKeyUp) Reset() {
	*x = CMsgKeyUp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_htmlmessages_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgKeyUp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgKeyUp) ProtoMessage() {}

func (x *CMsgKeyUp) ProtoReflect() protoreflect.Message {
	mi := &file_steam_htmlmessages_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgKeyUp.ProtoReflect.Descriptor instead.
func (*CMsgKeyUp) Descriptor() ([]byte, []int) {
	return file_steam_htmlmessages_proto_rawDescGZIP(), []int{0}
}

func (x *CMsgKeyUp) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgKeyUp) GetKeyCode() uint32 {
	if x != nil && x.KeyCode != nil {
		return *x.KeyCode
	}
	return 0
}

func (x *CMsgKeyUp) GetModifiers() uint32 {
	if x != nil && x.Modifiers != nil {
		return *x.Modifiers
	}
	return 0
}

func (x *CMsgKeyUp) GetNativeKeyCode() uint32 {
	if x != nil && x.NativeKeyCode != nil {
		return *x.NativeKeyCode
	}
	return 0
}

type CMsgKeyDown struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrowserHandle *uint32 `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	KeyCode       *uint32 `protobuf:"varint,2,opt,name=keyCode" json:"keyCode,omitempty"`
	Modifiers     *uint32 `protobuf:"varint,3,opt,name=modifiers" json:"modifiers,omitempty"`
	IsSystemKey   *bool   `protobuf:"varint,4,opt,name=is_system_key,json=isSystemKey" json:"is_system_key,omitempty"`
	NativeKeyCode *uint32 `protobuf:"varint,5,opt,name=nativeKeyCode" json:"nativeKeyCode,omitempty"`
}

func (x *CMsgKeyDown) Reset() {
	*x = CMsgKeyDown{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_htmlmessages_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgKeyDown) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgKeyDown) ProtoMessage() {}

func (x *CMsgKeyDown) ProtoReflect() protoreflect.Message {
	mi := &file_steam_htmlmessages_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgKeyDown.ProtoReflect.Descriptor instead.
func (*CMsgKeyDown) Descriptor() ([]byte, []int) {
	return file_steam_htmlmessages_proto_rawDescGZIP(), []int{1}
}

func (x *CMsgKeyDown) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgKeyDown) GetKeyCode() uint32 {
	if x != nil && x.KeyCode != nil {
		return *x.KeyCode
	}
	return 0
}

func (x *CMsgKeyDown) GetModifiers() uint32 {
	if x != nil && x.Modifiers != nil {
		return *x.Modifiers
	}
	return 0
}

func (x *CMsgKeyDown) GetIsSystemKey() bool {
	if x != nil && x.IsSystemKey != nil {
		return *x.IsSystemKey
	}
	return false
}

func (x *CMsgKeyDown) GetNativeKeyCode() uint32 {
	if x != nil && x.NativeKeyCode != nil {
		return *x.NativeKeyCode
	}
	return 0
}

type CMsgKeyChar struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrowserHandle *uint32 `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	Unichar       *uint32 `protobuf:"varint,2,opt,name=unichar" json:"unichar,omitempty"`
	Modifiers     *uint32 `protobuf:"varint,3,opt,name=modifiers" json:"modifiers,omitempty"`
	KeyCode       *uint32 `protobuf:"varint,4,opt,name=keyCode" json:"keyCode,omitempty"`
	NativeKeyCode *uint32 `protobuf:"varint,5,opt,name=nativeKeyCode" json:"nativeKeyCode,omitempty"`
}

func (x *CMsgKeyChar) Reset() {
	*x = CMsgKeyChar{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_htmlmessages_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgKeyChar) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgKeyChar) ProtoMessage() {}

func (x *CMsgKeyChar) ProtoReflect() protoreflect.Message {
	mi := &file_steam_htmlmessages_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgKeyChar.ProtoReflect.Descriptor instead.
func (*CMsgKeyChar) Descriptor() ([]byte, []int) {
	return file_steam_htmlmessages_proto_rawDescGZIP(), []int{2}
}

func (x *CMsgKeyChar) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgKeyChar) GetUnichar() uint32 {
	if x != nil && x.Unichar != nil {
		return *x.Unichar
	}
	return 0
}

func (x *CMsgKeyChar) GetModifiers() uint32 {
	if x != nil && x.Modifiers != nil {
		return *x.Modifiers
	}
	return 0
}

func (x *CMsgKeyChar) GetKeyCode() uint32 {
	if x != nil && x.KeyCode != nil {
		return *x.KeyCode
	}
	return 0
}

func (x *CMsgKeyChar) GetNativeKeyCode() uint32 {
	if x != nil && x.NativeKeyCode != nil {
		return *x.NativeKeyCode
	}
	return 0
}

type CMsgMouseDown struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrowserHandle *uint32 `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	MouseButton   *uint32 `protobuf:"varint,2,opt,name=mouse_button,json=mouseButton" json:"mouse_button,omitempty"`
	Modifiers     *uint32 `protobuf:"varint,3,opt,name=modifiers" json:"modifiers,omitempty"`
}

func (x *CMsgMouseDown) Reset() {
	*x = CMsgMouseDown{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_htmlmessages_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgMouseDown) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgMouseDown) ProtoMessage() {}

func (x *CMsgMouseDown) ProtoReflect() protoreflect.Message {
	mi := &file_steam_htmlmessages_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgMouseDown.ProtoReflect.Descriptor instead.
func (*CMsgMouseDown) Descriptor() ([]byte, []int) {
	return file_steam_htmlmessages_proto_rawDescGZIP(), []int{3}
}

func (x *CMsgMouseDown) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgMouseDown) GetMouseButton() uint32 {
	if x != nil && x.MouseButton != nil {
		return *x.MouseButton
	}
	return 0
}

func (x *CMsgMouseDown) GetModifiers() uint32 {
	if x != nil && x.Modifiers != nil {
		return *x.Modifiers
	}
	return 0
}

type CMsgMouseUp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrowserHandle *uint32 `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	MouseButton   *uint32 `protobuf:"varint,2,opt,name=mouse_button,json=mouseButton" json:"mouse_button,omitempty"`
	Modifiers     *uint32 `protobuf:"varint,3,opt,name=modifiers" json:"modifiers,omitempty"`
	IsOffPanel    *bool   `protobuf:"varint,4,opt,name=is_off_panel,json=isOffPanel" json:"is_off_panel,omitempty"`
	X             *int32  `protobuf:"varint,5,opt,name=x" json:"x,omitempty"`
	Y             *int32  `protobuf:"varint,6,opt,name=y" json:"y,omitempty"`
}

func (x *CMsgMouseUp) Reset() {
	*x = CMsgMouseUp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_htmlmessages_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgMouseUp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgMouseUp) ProtoMessage() {}

func (x *CMsgMouseUp) ProtoReflect() protoreflect.Message {
	mi := &file_steam_htmlmessages_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgMouseUp.ProtoReflect.Descriptor instead.
func (*CMsgMouseUp) Descriptor() ([]byte, []int) {
	return file_steam_htmlmessages_proto_rawDescGZIP(), []int{4}
}

func (x *CMsgMouseUp) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgMouseUp) GetMouseButton() uint32 {
	if x != nil && x.MouseButton != nil {
		return *x.MouseButton
	}
	return 0
}

func (x *CMsgMouseUp) GetModifiers() uint32 {
	if x != nil && x.Modifiers != nil {
		return *x.Modifiers
	}
	return 0
}

func (x *CMsgMouseUp) GetIsOffPanel() bool {
	if x != nil && x.IsOffPanel != nil {
		return *x.IsOffPanel
	}
	return false
}

func (x *CMsgMouseUp) GetX() int32 {
	if x != nil && x.X != nil {
		return *x.X
	}
	return 0
}

func (x *CMsgMouseUp) GetY() int32 {
	if x != nil && x.Y != nil {
		return *x.Y
	}
	return 0
}

type CMsgMouseDblClick struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrowserHandle *uint32 `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	MouseButton   *uint32 `protobuf:"varint,2,opt,name=mouse_button,json=mouseButton" json:"mouse_button,omitempty"`
	Modifiers     *uint32 `protobuf:"varint,3,opt,name=modifiers" json:"modifiers,omitempty"`
}

func (x *CMsgMouseDblClick) Reset() {
	*x = CMsgMouseDblClick{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_htmlmessages_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgMouseDblClick) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgMouseDblClick) ProtoMessage() {}

func (x *CMsgMouseDblClick) ProtoReflect() protoreflect.Message {
	mi := &file_steam_htmlmessages_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgMouseDblClick.ProtoReflect.Descriptor instead.
func (*CMsgMouseDblClick) Descriptor() ([]byte, []int) {
	return file_steam_htmlmessages_proto_rawDescGZIP(), []int{5}
}

func (x *CMsgMouseDblClick) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgMouseDblClick) GetMouseButton() uint32 {
	if x != nil && x.MouseButton != nil {
		return *x.MouseButton
	}
	return 0
}

func (x *CMsgMouseDblClick) GetModifiers() uint32 {
	if x != nil && x.Modifiers != nil {
		return *x.Modifiers
	}
	return 0
}

type CMsgMouseWheel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrowserHandle *uint32 `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	Deltax        *int32  `protobuf:"varint,2,opt,name=deltax" json:"deltax,omitempty"`
	Deltay        *int32  `protobuf:"varint,3,opt,name=deltay" json:"deltay,omitempty"`
	Modifiers     *uint32 `protobuf:"varint,4,opt,name=modifiers" json:"modifiers,omitempty"`
}

func (x *CMsgMouseWheel) Reset() {
	*x = CMsgMouseWheel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_htmlmessages_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgMouseWheel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgMouseWheel) ProtoMessage() {}

func (x *CMsgMouseWheel) ProtoReflect() protoreflect.Message {
	mi := &file_steam_htmlmessages_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgMouseWheel.ProtoReflect.Descriptor instead.
func (*CMsgMouseWheel) Descriptor() ([]byte, []int) {
	return file_steam_htmlmessages_proto_rawDescGZIP(), []int{6}
}

func (x *CMsgMouseWheel) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgMouseWheel) GetDeltax() int32 {
	if x != nil && x.Deltax != nil {
		return *x.Deltax
	}
	return 0
}

func (x *CMsgMouseWheel) GetDeltay() int32 {
	if x != nil && x.Deltay != nil {
		return *x.Deltay
	}
	return 0
}

func (x *CMsgMouseWheel) GetModifiers() uint32 {
	if x != nil && x.Modifiers != nil {
		return *x.Modifiers
	}
	return 0
}

type CMsgMouseMove struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrowserHandle *uint32 `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	X             *int32  `protobuf:"varint,2,opt,name=x" json:"x,omitempty"`
	Y             *int32  `protobuf:"varint,3,opt,name=y" json:"y,omitempty"`
	Modifiers     *uint32 `protobuf:"varint,4,opt,name=modifiers" json:"modifiers,omitempty"`
}

func (x *CMsgMouseMove) Reset() {
	*x = CMsgMouseMove{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_htmlmessages_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgMouseMove) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgMouseMove) ProtoMessage() {}

func (x *CMsgMouseMove) ProtoReflect() protoreflect.Message {
	mi := &file_steam_htmlmessages_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgMouseMove.ProtoReflect.Descriptor instead.
func (*CMsgMouseMove) Descriptor() ([]byte, []int) {
	return file_steam_htmlmessages_proto_rawDescGZIP(), []int{7}
}

func (x *CMsgMouseMove) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgMouseMove) GetX() int32 {
	if x != nil && x.X != nil {
		return *x.X
	}
	return 0
}

func (x *CMsgMouseMove) GetY() int32 {
	if x != nil && x.Y != nil {
		return *x.Y
	}
	return 0
}

func (x *CMsgMouseMove) GetModifiers() uint32 {
	if x != nil && x.Modifiers != nil {
		return *x.Modifiers
	}
	return 0
}

type CMsgMouseLeave struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrowserHandle *uint32 `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
}

func (x *CMsgMouseLeave) Reset() {
	*x = CMsgMouseLeave{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_htmlmessages_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgMouseLeave) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgMouseLeave) ProtoMessage() {}

func (x *CMsgMouseLeave) ProtoReflect() protoreflect.Message {
	mi := &file_steam_htmlmessages_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgMouseLeave.ProtoReflect.Descriptor instead.
func (*CMsgMouseLeave) Descriptor() ([]byte, []int) {
	return file_steam_htmlmessages_proto_rawDescGZIP(), []int{8}
}

func (x *CMsgMouseLeave) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

type CMsgBrowserCreate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId              *uint32  `protobuf:"varint,1,opt,name=request_id,json=requestId" json:"request_id,omitempty"`
	Useragent              *string  `protobuf:"bytes,3,opt,name=useragent" json:"useragent,omitempty"`
	UserCss                *string  `protobuf:"bytes,5,opt,name=user_css,json=userCss" json:"user_css,omitempty"`
	NativeDropdowns        *bool    `protobuf:"varint,6,opt,name=native_dropdowns,json=nativeDropdowns" json:"native_dropdowns,omitempty"`
	DpiScaling             *float32 `protobuf:"fixed32,7,opt,name=dpi_scaling,json=dpiScaling" json:"dpi_scaling,omitempty"`
	Offscreen              *bool    `protobuf:"varint,8,opt,name=offscreen,def=1" json:"offscreen,omitempty"`
	InitialWidth           *uint32  `protobuf:"varint,9,opt,name=initial_width,json=initialWidth,def=0" json:"initial_width,omitempty"`
	InitialHeight          *uint32  `protobuf:"varint,10,opt,name=initial_height,json=initialHeight,def=0" json:"initial_height,omitempty"`
	WindowIcon             *string  `protobuf:"bytes,11,opt,name=window_icon,json=windowIcon" json:"window_icon,omitempty"`
	Borderless             *bool    `protobuf:"varint,12,opt,name=borderless,def=0" json:"borderless,omitempty"`
	VroverlayKey           *string  `protobuf:"bytes,13,opt,name=vroverlay_key,json=vroverlayKey" json:"vroverlay_key,omitempty"`
	BrowserType            *uint32  `protobuf:"varint,14,opt,name=browser_type,json=browserType,def=0" json:"browser_type,omitempty"`
	InitialTop             *int32   `protobuf:"varint,15,opt,name=initial_top,json=initialTop,def=-2147483648" json:"initial_top,omitempty"`
	InitialLeft            *int32   `protobuf:"varint,16,opt,name=initial_left,json=initialLeft,def=-2147483648" json:"initial_left,omitempty"`
	OnlyAllowTrustedPopups *bool    `protobuf:"varint,17,opt,name=only_allow_trusted_popups,json=onlyAllowTrustedPopups,def=0" json:"only_allow_trusted_popups,omitempty"`
	InitialUrl             *string  `protobuf:"bytes,18,opt,name=initial_url,json=initialUrl" json:"initial_url,omitempty"`
	HwndParent             *uint64  `protobuf:"fixed64,19,opt,name=hwnd_parent,json=hwndParent" json:"hwnd_parent,omitempty"`
}

// Default values for CMsgBrowserCreate fields.
const (
	Default_CMsgBrowserCreate_Offscreen              = bool(true)
	Default_CMsgBrowserCreate_InitialWidth           = uint32(0)
	Default_CMsgBrowserCreate_InitialHeight          = uint32(0)
	Default_CMsgBrowserCreate_Borderless             = bool(false)
	Default_CMsgBrowserCreate_BrowserType            = uint32(0)
	Default_CMsgBrowserCreate_InitialTop             = int32(-2147483648)
	Default_CMsgBrowserCreate_InitialLeft            = int32(-2147483648)
	Default_CMsgBrowserCreate_OnlyAllowTrustedPopups = bool(false)
)

func (x *CMsgBrowserCreate) Reset() {
	*x = CMsgBrowserCreate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_htmlmessages_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgBrowserCreate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgBrowserCreate) ProtoMessage() {}

func (x *CMsgBrowserCreate) ProtoReflect() protoreflect.Message {
	mi := &file_steam_htmlmessages_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgBrowserCreate.ProtoReflect.Descriptor instead.
func (*CMsgBrowserCreate) Descriptor() ([]byte, []int) {
	return file_steam_htmlmessages_proto_rawDescGZIP(), []int{9}
}

func (x *CMsgBrowserCreate) GetRequestId() uint32 {
	if x != nil && x.RequestId != nil {
		return *x.RequestId
	}
	return 0
}

func (x *CMsgBrowserCreate) GetUseragent() string {
	if x != nil && x.Useragent != nil {
		return *x.Useragent
	}
	return ""
}

func (x *CMsgBrowserCreate) GetUserCss() string {
	if x != nil && x.UserCss != nil {
		return *x.UserCss
	}
	return ""
}

func (x *CMsgBrowserCreate) GetNativeDropdowns() bool {
	if x != nil && x.NativeDropdowns != nil {
		return *x.NativeDropdowns
	}
	return false
}

func (x *CMsgBrowserCreate) GetDpiScaling() float32 {
	if x != nil && x.DpiScaling != nil {
		return *x.DpiScaling
	}
	return 0
}

func (x *CMsgBrowserCreate) GetOffscreen() bool {
	if x != nil && x.Offscreen != nil {
		return *x.Offscreen
	}
	return Default_CMsgBrowserCreate_Offscreen
}

func (x *CMsgBrowserCreate) GetInitialWidth() uint32 {
	if x != nil && x.InitialWidth != nil {
		return *x.InitialWidth
	}
	return Default_CMsgBrowserCreate_InitialWidth
}

func (x *CMsgBrowserCreate) GetInitialHeight() uint32 {
	if x != nil && x.InitialHeight != nil {
		return *x.InitialHeight
	}
	return Default_CMsgBrowserCreate_InitialHeight
}

func (x *CMsgBrowserCreate) GetWindowIcon() string {
	if x != nil && x.WindowIcon != nil {
		return *x.WindowIcon
	}
	return ""
}

func (x *CMsgBrowserCreate) GetBorderless() bool {
	if x != nil && x.Borderless != nil {
		return *x.Borderless
	}
	return Default_CMsgBrowserCreate_Borderless
}

func (x *CMsgBrowserCreate) GetVroverlayKey() string {
	if x != nil && x.VroverlayKey != nil {
		return *x.VroverlayKey
	}
	return ""
}

func (x *CMsgBrowserCreate) GetBrowserType() uint32 {
	if x != nil && x.BrowserType != nil {
		return *x.BrowserType
	}
	return Default_CMsgBrowserCreate_BrowserType
}

func (x *CMsgBrowserCreate) GetInitialTop() int32 {
	if x != nil && x.InitialTop != nil {
		return *x.InitialTop
	}
	return Default_CMsgBrowserCreate_InitialTop
}

func (x *CMsgBrowserCreate) GetInitialLeft() int32 {
	if x != nil && x.InitialLeft != nil {
		return *x.InitialLeft
	}
	return Default_CMsgBrowserCreate_InitialLeft
}

func (x *CMsgBrowserCreate) GetOnlyAllowTrustedPopups() bool {
	if x != nil && x.OnlyAllowTrustedPopups != nil {
		return *x.OnlyAllowTrustedPopups
	}
	return Default_CMsgBrowserCreate_OnlyAllowTrustedPopups
}

func (x *CMsgBrowserCreate) GetInitialUrl() string {
	if x != nil && x.InitialUrl != nil {
		return *x.InitialUrl
	}
	return ""
}

func (x *CMsgBrowserCreate) GetHwndParent() uint64 {
	if x != nil && x.HwndParent != nil {
		return *x.HwndParent
	}
	return 0
}

type CMsgBrowserCreateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrowserHandle *uint32 `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	RequestId     *uint32 `protobuf:"varint,2,opt,name=request_id,json=requestId" json:"request_id,omitempty"`
}

func (x *CMsgBrowserCreateResponse) Reset() {
	*x = CMsgBrowserCreateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_htmlmessages_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgBrowserCreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgBrowserCreateResponse) ProtoMessage() {}

func (x *CMsgBrowserCreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_steam_htmlmessages_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgBrowserCreateResponse.ProtoReflect.Descriptor instead.
func (*CMsgBrowserCreateResponse) Descriptor() ([]byte, []int) {
	return file_steam_htmlmessages_proto_rawDescGZIP(), []int{10}
}

func (x *CMsgBrowserCreateResponse) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgBrowserCreateResponse) GetRequestId() uint32 {
	if x != nil && x.RequestId != nil {
		return *x.RequestId
	}
	return 0
}

type CMsgBrowserRemove struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrowserHandle *uint32 `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
}

func (x *CMsgBrowserRemove) Reset() {
	*x = CMsgBrowserRemove{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_htmlmessages_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgBrowserRemove) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgBrowserRemove) ProtoMessage() {}

func (x *CMsgBrowserRemove) ProtoReflect() protoreflect.Message {
	mi := &file_steam_htmlmessages_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgBrowserRemove.ProtoReflect.Descriptor instead.
func (*CMsgBrowserRemove) Descriptor() ([]byte, []int) {
	return file_steam_htmlmessages_proto_rawDescGZIP(), []int{11}
}

func (x *CMsgBrowserRemove) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

type CMsgSetLocalFileRequestMapping struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrowserHandle    *uint32                                           `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	RequestUrl       *string                                           `protobuf:"bytes,2,opt,name=request_url,json=requestUrl" json:"request_url,omitempty"`
	DefaultLocalPath *string                                           `protobuf:"bytes,3,opt,name=default_local_path,json=defaultLocalPath" json:"default_local_path,omitempty"`
	Routes           []*CMsgSetLocalFileRequestMapping_AdditionalRoute `protobuf:"bytes,4,rep,name=routes" json:"routes,omitempty"`
}

func (x *CMsgSetLocalFileRequestMapping) Reset() {
	*x = CMsgSetLocalFileRequestMapping{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_htmlmessages_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgSetLocalFileRequestMapping) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSetLocalFileRequestMapping) ProtoMessage() {}

func (x *CMsgSetLocalFileRequestMapping) ProtoReflect() protoreflect.Message {
	mi := &file_steam_htmlmessages_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSetLocalFileRequestMapping.ProtoReflect.Descriptor instead.
func (*CMsgSetLocalFileRequestMapping) Descriptor() ([]byte, []int) {
	return file_steam_htmlmessages_proto_rawDescGZIP(), []int{12}
}

func (x *CMsgSetLocalFileRequestMapping) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgSetLocalFileRequestMapping) GetRequestUrl() string {
	if x != nil && x.RequestUrl != nil {
		return *x.RequestUrl
	}
	return ""
}

func (x *CMsgSetLocalFileRequestMapping) GetDefaultLocalPath() string {
	if x != nil && x.DefaultLocalPath != nil {
		return *x.DefaultLocalPath
	}
	return ""
}

func (x *CMsgSetLocalFileRequestMapping) GetRoutes() []*CMsgSetLocalFileRequestMapping_AdditionalRoute {
	if x != nil {
		return x.Routes
	}
	return nil
}

type CMsgBrowserErrorStrings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrowserHandle     *uint32 `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	Title             *string `protobuf:"bytes,2,opt,name=title" json:"title,omitempty"`
	Header            *string `protobuf:"bytes,3,opt,name=header" json:"header,omitempty"`
	CacheMiss         *string `protobuf:"bytes,4,opt,name=cache_miss,json=cacheMiss" json:"cache_miss,omitempty"`
	BadUrl            *string `protobuf:"bytes,5,opt,name=bad_url,json=badUrl" json:"bad_url,omitempty"`
	ConnectionProblem *string `protobuf:"bytes,6,opt,name=connection_problem,json=connectionProblem" json:"connection_problem,omitempty"`
	ProxyProblem      *string `protobuf:"bytes,7,opt,name=proxy_problem,json=proxyProblem" json:"proxy_problem,omitempty"`
	Unknown           *string `protobuf:"bytes,8,opt,name=unknown" json:"unknown,omitempty"`
}

func (x *CMsgBrowserErrorStrings) Reset() {
	*x = CMsgBrowserErrorStrings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_htmlmessages_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgBrowserErrorStrings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgBrowserErrorStrings) ProtoMessage() {}

func (x *CMsgBrowserErrorStrings) ProtoReflect() protoreflect.Message {
	mi := &file_steam_htmlmessages_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgBrowserErrorStrings.ProtoReflect.Descriptor instead.
func (*CMsgBrowserErrorStrings) Descriptor() ([]byte, []int) {
	return file_steam_htmlmessages_proto_rawDescGZIP(), []int{13}
}

func (x *CMsgBrowserErrorStrings) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgBrowserErrorStrings) GetTitle() string {
	if x != nil && x.Title != nil {
		return *x.Title
	}
	return ""
}

func (x *CMsgBrowserErrorStrings) GetHeader() string {
	if x != nil && x.Header != nil {
		return *x.Header
	}
	return ""
}

func (x *CMsgBrowserErrorStrings) GetCacheMiss() string {
	if x != nil && x.CacheMiss != nil {
		return *x.CacheMiss
	}
	return ""
}

func (x *CMsgBrowserErrorStrings) GetBadUrl() string {
	if x != nil && x.BadUrl != nil {
		return *x.BadUrl
	}
	return ""
}

func (x *CMsgBrowserErrorStrings) GetConnectionProblem() string {
	if x != nil && x.ConnectionProblem != nil {
		return *x.ConnectionProblem
	}
	return ""
}

func (x *CMsgBrowserErrorStrings) GetProxyProblem() string {
	if x != nil && x.ProxyProblem != nil {
		return *x.ProxyProblem
	}
	return ""
}

func (x *CMsgBrowserErrorStrings) GetUnknown() string {
	if x != nil && x.Unknown != nil {
		return *x.Unknown
	}
	return ""
}

type CMsgBrowserSize struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrowserHandle *uint32 `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	Width         *uint32 `protobuf:"varint,2,opt,name=width" json:"width,omitempty"`
	Height        *uint32 `protobuf:"varint,3,opt,name=height" json:"height,omitempty"`
}

func (x *CMsgBrowserSize) Reset() {
	*x = CMsgBrowserSize{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_htmlmessages_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgBrowserSize) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgBrowserSize) ProtoMessage() {}

func (x *CMsgBrowserSize) ProtoReflect() protoreflect.Message {
	mi := &file_steam_htmlmessages_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgBrowserSize.ProtoReflect.Descriptor instead.
func (*CMsgBrowserSize) Descriptor() ([]byte, []int) {
	return file_steam_htmlmessages_proto_rawDescGZIP(), []int{14}
}

func (x *CMsgBrowserSize) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgBrowserSize) GetWidth() uint32 {
	if x != nil && x.Width != nil {
		return *x.Width
	}
	return 0
}

func (x *CMsgBrowserSize) GetHeight() uint32 {
	if x != nil && x.Height != nil {
		return *x.Height
	}
	return 0
}

type CMsgBrowserSetMinSize struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrowserHandle *uint32 `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	Width         *uint32 `protobuf:"varint,2,opt,name=width" json:"width,omitempty"`
	Height        *uint32 `protobuf:"varint,3,opt,name=height" json:"height,omitempty"`
}

func (x *CMsgBrowserSetMinSize) Reset() {
	*x = CMsgBrowserSetMinSize{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_htmlmessages_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgBrowserSetMinSize) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgBrowserSetMinSize) ProtoMessage() {}

func (x *CMsgBrowserSetMinSize) ProtoReflect() protoreflect.Message {
	mi := &file_steam_htmlmessages_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgBrowserSetMinSize.ProtoReflect.Descriptor instead.
func (*CMsgBrowserSetMinSize) Descriptor() ([]byte, []int) {
	return file_steam_htmlmessages_proto_rawDescGZIP(), []int{15}
}

func (x *CMsgBrowserSetMinSize) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgBrowserSetMinSize) GetWidth() uint32 {
	if x != nil && x.Width != nil {
		return *x.Width
	}
	return 0
}

func (x *CMsgBrowserSetMinSize) GetHeight() uint32 {
	if x != nil && x.Height != nil {
		return *x.Height
	}
	return 0
}

type CMsgBrowserPosition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrowserHandle *uint32 `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	X             *int32  `protobuf:"varint,2,opt,name=x" json:"x,omitempty"`
	Y             *int32  `protobuf:"varint,3,opt,name=y" json:"y,omitempty"`
	XLocal        *int32  `protobuf:"varint,4,opt,name=x_local,json=xLocal" json:"x_local,omitempty"`
	YLocal        *int32  `protobuf:"varint,5,opt,name=y_local,json=yLocal" json:"y_local,omitempty"`
}

func (x *CMsgBrowserPosition) Reset() {
	*x = CMsgBrowserPosition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_htmlmessages_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgBrowserPosition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgBrowserPosition) ProtoMessage() {}

func (x *CMsgBrowserPosition) ProtoReflect() protoreflect.Message {
	mi := &file_steam_htmlmessages_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgBrowserPosition.ProtoReflect.Descriptor instead.
func (*CMsgBrowserPosition) Descriptor() ([]byte, []int) {
	return file_steam_htmlmessages_proto_rawDescGZIP(), []int{16}
}

func (x *CMsgBrowserPosition) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgBrowserPosition) GetX() int32 {
	if x != nil && x.X != nil {
		return *x.X
	}
	return 0
}

func (x *CMsgBrowserPosition) GetY() int32 {
	if x != nil && x.Y != nil {
		return *x.Y
	}
	return 0
}

func (x *CMsgBrowserPosition) GetXLocal() int32 {
	if x != nil && x.XLocal != nil {
		return *x.XLocal
	}
	return 0
}

func (x *CMsgBrowserPosition) GetYLocal() int32 {
	if x != nil && x.YLocal != nil {
		return *x.YLocal
	}
	return 0
}

type CMsgBrowserResized struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrowserHandle *uint32 `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	X             *int32  `protobuf:"varint,2,opt,name=x" json:"x,omitempty"`
	Y             *int32  `protobuf:"varint,3,opt,name=y" json:"y,omitempty"`
	Width         *uint32 `protobuf:"varint,4,opt,name=width" json:"width,omitempty"`
	Height        *uint32 `protobuf:"varint,5,opt,name=height" json:"height,omitempty"`
}

func (x *CMsgBrowserResized) Reset() {
	*x = CMsgBrowserResized{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_htmlmessages_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgBrowserResized) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgBrowserResized) ProtoMessage() {}

func (x *CMsgBrowserResized) ProtoReflect() protoreflect.Message {
	mi := &file_steam_htmlmessages_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgBrowserResized.ProtoReflect.Descriptor instead.
func (*CMsgBrowserResized) Descriptor() ([]byte, []int) {
	return file_steam_htmlmessages_proto_rawDescGZIP(), []int{17}
}

func (x *CMsgBrowserResized) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgBrowserResized) GetX() int32 {
	if x != nil && x.X != nil {
		return *x.X
	}
	return 0
}

func (x *CMsgBrowserResized) GetY() int32 {
	if x != nil && x.Y != nil {
		return *x.Y
	}
	return 0
}

func (x *CMsgBrowserResized) GetWidth() uint32 {
	if x != nil && x.Width != nil {
		return *x.Width
	}
	return 0
}

func (x *CMsgBrowserResized) GetHeight() uint32 {
	if x != nil && x.Height != nil {
		return *x.Height
	}
	return 0
}

type CMsgPostURL struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrowserHandle *uint32 `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	Url           *string `protobuf:"bytes,2,opt,name=url" json:"url,omitempty"`
	Post          *string `protobuf:"bytes,3,opt,name=post" json:"post,omitempty"`
	Pageserial    *uint32 `protobuf:"varint,4,opt,name=pageserial" json:"pageserial,omitempty"`
}

func (x *CMsgPostURL) Reset() {
	*x = CMsgPostURL{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_htmlmessages_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgPostURL) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgPostURL) ProtoMessage() {}

func (x *CMsgPostURL) ProtoReflect() protoreflect.Message {
	mi := &file_steam_htmlmessages_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgPostURL.ProtoReflect.Descriptor instead.
func (*CMsgPostURL) Descriptor() ([]byte, []int) {
	return file_steam_htmlmessages_proto_rawDescGZIP(), []int{18}
}

func (x *CMsgPostURL) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgPostURL) GetUrl() string {
	if x != nil && x.Url != nil {
		return *x.Url
	}
	return ""
}

func (x *CMsgPostURL) GetPost() string {
	if x != nil && x.Post != nil {
		return *x.Post
	}
	return ""
}

func (x *CMsgPostURL) GetPageserial() uint32 {
	if x != nil && x.Pageserial != nil {
		return *x.Pageserial
	}
	return 0
}

type CMsgAddHeader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrowserHandle *uint32 `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	Key           *string `protobuf:"bytes,2,opt,name=key" json:"key,omitempty"`
	Value         *string `protobuf:"bytes,3,opt,name=value" json:"value,omitempty"`
}

func (x *CMsgAddHeader) Reset() {
	*x = CMsgAddHeader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_htmlmessages_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgAddHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgAddHeader) ProtoMessage() {}

func (x *CMsgAddHeader) ProtoReflect() protoreflect.Message {
	mi := &file_steam_htmlmessages_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgAddHeader.ProtoReflect.Descriptor instead.
func (*CMsgAddHeader) Descriptor() ([]byte, []int) {
	return file_steam_htmlmessages_proto_rawDescGZIP(), []int{19}
}

func (x *CMsgAddHeader) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgAddHeader) GetKey() string {
	if x != nil && x.Key != nil {
		return *x.Key
	}
	return ""
}

func (x *CMsgAddHeader) GetValue() string {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return ""
}

type CMsgStopLoad struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrowserHandle *uint32 `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
}

func (x *CMsgStopLoad) Reset() {
	*x = CMsgStopLoad{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_htmlmessages_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgStopLoad) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgStopLoad) ProtoMessage() {}

func (x *CMsgStopLoad) ProtoReflect() protoreflect.Message {
	mi := &file_steam_htmlmessages_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgStopLoad.ProtoReflect.Descriptor instead.
func (*CMsgStopLoad) Descriptor() ([]byte, []int) {
	return file_steam_htmlmessages_proto_rawDescGZIP(), []int{20}
}

func (x *CMsgStopLoad) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

type CMsgReload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrowserHandle *uint32 `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
}

func (x *CMsgReload) Reset() {
	*x = CMsgReload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_htmlmessages_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgReload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgReload) ProtoMessage() {}

func (x *CMsgReload) ProtoReflect() protoreflect.Message {
	mi := &file_steam_htmlmessages_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgReload.ProtoReflect.Descriptor instead.
func (*CMsgReload) Descriptor() ([]byte, []int) {
	return file_steam_htmlmessages_proto_rawDescGZIP(), []int{21}
}

func (x *CMsgReload) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

type CMsgGoForward struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrowserHandle *uint32 `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
}

func (x *CMsgGoForward) Reset() {
	*x = CMsgGoForward{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_htmlmessages_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGoForward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGoForward) ProtoMessage() {}

func (x *CMsgGoForward) ProtoReflect() protoreflect.Message {
	mi := &file_steam_htmlmessages_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGoForward.ProtoReflect.Descriptor instead.
func (*CMsgGoForward) Descriptor() ([]byte, []int) {
	return file_steam_htmlmessages_proto_rawDescGZIP(), []int{22}
}

func (x *CMsgGoForward) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

type CMsgGoBack struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrowserHandle *uint32 `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
}

func (x *CMsgGoBack) Reset() {
	*x = CMsgGoBack{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_htmlmessages_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGoBack) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGoBack) ProtoMessage() {}

func (x *CMsgGoBack) ProtoReflect() protoreflect.Message {
	mi := &file_steam_htmlmessages_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGoBack.ProtoReflect.Descriptor instead.
func (*CMsgGoBack) Descriptor() ([]byte, []int) {
	return file_steam_htmlmessages_proto_rawDescGZIP(), []int{23}
}

func (x *CMsgGoBack) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

type CMsgWasHidden struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrowserHandle *uint32 `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	Hidden        *bool   `protobuf:"varint,2,opt,name=hidden" json:"hidden,omitempty"`
}

func (x *CMsgWasHidden) Reset() {
	*x = CMsgWasHidden{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_htmlmessages_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgWasHidden) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgWasHidden) ProtoMessage() {}

func (x *CMsgWasHidden) ProtoReflect() protoreflect.Message {
	mi := &file_steam_htmlmessages_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgWasHidden.ProtoReflect.Descriptor instead.
func (*CMsgWasHidden) Descriptor() ([]byte, []int) {
	return file_steam_htmlmessages_proto_rawDescGZIP(), []int{24}
}

func (x *CMsgWasHidden) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgWasHidden) GetHidden() bool {
	if x != nil && x.Hidden != nil {
		return *x.Hidden
	}
	return false
}

type CMsgClearHistory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrowserHandle *uint32 `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
}

func (x *CMsgClearHistory) Reset() {
	*x = CMsgClearHistory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_htmlmessages_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClearHistory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClearHistory) ProtoMessage() {}

func (x *CMsgClearHistory) ProtoReflect() protoreflect.Message {
	mi := &file_steam_htmlmessages_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClearHistory.ProtoReflect.Descriptor instead.
func (*CMsgClearHistory) Descriptor() ([]byte, []int) {
	return file_steam_htmlmessages_proto_rawDescGZIP(), []int{25}
}

func (x *CMsgClearHistory) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

type CMsgClearAllBrowsingData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrowserHandle *uint32 `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
}

func (x *CMsgClearAllBrowsingData) Reset() {
	*x = CMsgClearAllBrowsingData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_htmlmessages_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClearAllBrowsingData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClearAllBrowsingData) ProtoMessage() {}

func (x *CMsgClearAllBrowsingData) ProtoReflect() protoreflect.Message {
	mi := &file_steam_htmlmessages_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClearAllBrowsingData.ProtoReflect.Descriptor instead.
func (*CMsgClearAllBrowsingData) Descriptor() ([]byte, []int) {
	return file_steam_htmlmessages_proto_rawDescGZIP(), []int{26}
}

func (x *CMsgClearAllBrowsingData) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

type CMsgCopy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrowserHandle *uint32 `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
}

func (x *CMsgCopy) Reset() {
	*x = CMsgCopy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_htmlmessages_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgCopy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgCopy) ProtoMessage() {}

func (x *CMsgCopy) ProtoReflect() protoreflect.Message {
	mi := &file_steam_htmlmessages_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgCopy.ProtoReflect.Descriptor instead.
func (*CMsgCopy) Descriptor() ([]byte, []int) {
	return file_steam_htmlmessages_proto_rawDescGZIP(), []int{27}
}

func (x *CMsgCopy) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

type CMsgPaste struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrowserHandle *uint32 `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
}

func (x *CMsgPaste) Reset() {
	*x = CMsgPaste{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_htmlmessages_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgPaste) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgPaste) ProtoMessage() {}

func (x *CMsgPaste) ProtoReflect() protoreflect.Message {
	mi := &file_steam_htmlmessages_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgPaste.ProtoReflect.Descriptor instead.
func (*CMsgPaste) Descriptor() ([]byte, []int) {
	return file_steam_htmlmessages_proto_rawDescGZIP(), []int{28}
}

func (x *CMsgPaste) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

type CMsgExecuteJavaScript struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrowserHandle *uint32 `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	Script        *string `protobuf:"bytes,2,opt,name=script" json:"script,omitempty"`
}

func (x *CMsgExecuteJavaScript) Reset() {
	*x = CMsgExecuteJavaScript{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_htmlmessages_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgExecuteJavaScript) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgExecuteJavaScript) ProtoMessage() {}

func (x *CMsgExecuteJavaScript) ProtoReflect() protoreflect.Message {
	mi := &file_steam_htmlmessages_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgExecuteJavaScript.ProtoReflect.Descriptor instead.
func (*CMsgExecuteJavaScript) Descriptor() ([]byte, []int) {
	return file_steam_htmlmessages_proto_rawDescGZIP(), []int{29}
}

func (x *CMsgExecuteJavaScript) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgExecuteJavaScript) GetScript() string {
	if x != nil && x.Script != nil {
		return *x.Script
	}
	return ""
}

type CMsgSetFocus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrowserHandle *uint32 `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	Focus         *bool   `protobuf:"varint,2,opt,name=focus" json:"focus,omitempty"`
}

func (x *CMsgSetFocus) Reset() {
	*x = CMsgSetFocus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_htmlmessages_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgSetFocus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSetFocus) ProtoMessage() {}

func (x *CMsgSetFocus) ProtoReflect() protoreflect.Message {
	mi := &file_steam_htmlmessages_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSetFocus.ProtoReflect.Descriptor instead.
func (*CMsgSetFocus) Descriptor() ([]byte, []int) {
	return file_steam_htmlmessages_proto_rawDescGZIP(), []int{30}
}

func (x *CMsgSetFocus) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgSetFocus) GetFocus() bool {
	if x != nil && x.Focus != nil {
		return *x.Focus
	}
	return false
}

type CMsgHorizontalScrollBarSize struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrowserHandle *uint32 `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
}

func (x *CMsgHorizontalScrollBarSize) Reset() {
	*x = CMsgHorizontalScrollBarSize{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_htmlmessages_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgHorizontalScrollBarSize) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgHorizontalScrollBarSize) ProtoMessage() {}

func (x *CMsgHorizontalScrollBarSize) ProtoReflect() protoreflect.Message {
	mi := &file_steam_htmlmessages_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgHorizontalScrollBarSize.ProtoReflect.Descriptor instead.
func (*CMsgHorizontalScrollBarSize) Descriptor() ([]byte, []int) {
	return file_steam_htmlmessages_proto_rawDescGZIP(), []int{31}
}

func (x *CMsgHorizontalScrollBarSize) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

type CMsgHorizontalScrollBarSizeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrowserHandle *uint32  `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	ScrollMax     *uint32  `protobuf:"varint,6,opt,name=scroll_max,json=scrollMax" json:"scroll_max,omitempty"`
	Scroll        *uint32  `protobuf:"varint,7,opt,name=scroll" json:"scroll,omitempty"`
	Zoom          *float32 `protobuf:"fixed32,8,opt,name=zoom" json:"zoom,omitempty"`
	Visible       *bool    `protobuf:"varint,9,opt,name=visible" json:"visible,omitempty"`
	PageSize      *uint32  `protobuf:"varint,10,opt,name=page_size,json=pageSize" json:"page_size,omitempty"`
}

func (x *CMsgHorizontalScrollBarSizeResponse) Reset() {
	*x = CMsgHorizontalScrollBarSizeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_htmlmessages_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgHorizontalScrollBarSizeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgHorizontalScrollBarSizeResponse) ProtoMessage() {}

func (x *CMsgHorizontalScrollBarSizeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_steam_htmlmessages_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgHorizontalScrollBarSizeResponse.ProtoReflect.Descriptor instead.
func (*CMsgHorizontalScrollBarSizeResponse) Descriptor() ([]byte, []int) {
	return file_steam_htmlmessages_proto_rawDescGZIP(), []int{32}
}

func (x *CMsgHorizontalScrollBarSizeResponse) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgHorizontalScrollBarSizeResponse) GetScrollMax() uint32 {
	if x != nil && x.ScrollMax != nil {
		return *x.ScrollMax
	}
	return 0
}

func (x *CMsgHorizontalScrollBarSizeResponse) GetScroll() uint32 {
	if x != nil && x.Scroll != nil {
		return *x.Scroll
	}
	return 0
}

func (x *CMsgHorizontalScrollBarSizeResponse) GetZoom() float32 {
	if x != nil && x.Zoom != nil {
		return *x.Zoom
	}
	return 0
}

func (x *CMsgHorizontalScrollBarSizeResponse) GetVisible() bool {
	if x != nil && x.Visible != nil {
		return *x.Visible
	}
	return false
}

func (x *CMsgHorizontalScrollBarSizeResponse) GetPageSize() uint32 {
	if x != nil && x.PageSize != nil {
		return *x.PageSize
	}
	return 0
}

type CMsgVerticalScrollBarSize struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrowserHandle *uint32 `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
}

func (x *CMsgVerticalScrollBarSize) Reset() {
	*x = CMsgVerticalScrollBarSize{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_htmlmessages_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgVerticalScrollBarSize) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgVerticalScrollBarSize) ProtoMessage() {}

func (x *CMsgVerticalScrollBarSize) ProtoReflect() protoreflect.Message {
	mi := &file_steam_htmlmessages_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgVerticalScrollBarSize.ProtoReflect.Descriptor instead.
func (*CMsgVerticalScrollBarSize) Descriptor() ([]byte, []int) {
	return file_steam_htmlmessages_proto_rawDescGZIP(), []int{33}
}

func (x *CMsgVerticalScrollBarSize) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

type CMsgVerticalScrollBarSizeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrowserHandle *uint32  `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	ScrollMax     *uint32  `protobuf:"varint,6,opt,name=scroll_max,json=scrollMax" json:"scroll_max,omitempty"`
	Scroll        *uint32  `protobuf:"varint,7,opt,name=scroll" json:"scroll,omitempty"`
	Zoom          *float32 `protobuf:"fixed32,8,opt,name=zoom" json:"zoom,omitempty"`
	Visible       *bool    `protobuf:"varint,9,opt,name=visible" json:"visible,omitempty"`
	PageSize      *uint32  `protobuf:"varint,10,opt,name=page_size,json=pageSize" json:"page_size,omitempty"`
}

func (x *CMsgVerticalScrollBarSizeResponse) Reset() {
	*x = CMsgVerticalScrollBarSizeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_htmlmessages_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgVerticalScrollBarSizeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgVerticalScrollBarSizeResponse) ProtoMessage() {}

func (x *CMsgVerticalScrollBarSizeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_steam_htmlmessages_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgVerticalScrollBarSizeResponse.ProtoReflect.Descriptor instead.
func (*CMsgVerticalScrollBarSizeResponse) Descriptor() ([]byte, []int) {
	return file_steam_htmlmessages_proto_rawDescGZIP(), []int{34}
}

func (x *CMsgVerticalScrollBarSizeResponse) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgVerticalScrollBarSizeResponse) GetScrollMax() uint32 {
	if x != nil && x.ScrollMax != nil {
		return *x.ScrollMax
	}
	return 0
}

func (x *CMsgVerticalScrollBarSizeResponse) GetScroll() uint32 {
	if x != nil && x.Scroll != nil {
		return *x.Scroll
	}
	return 0
}

func (x *CMsgVerticalScrollBarSizeResponse) GetZoom() float32 {
	if x != nil && x.Zoom != nil {
		return *x.Zoom
	}
	return 0
}

func (x *CMsgVerticalScrollBarSizeResponse) GetVisible() bool {
	if x != nil && x.Visible != nil {
		return *x.Visible
	}
	return false
}

func (x *CMsgVerticalScrollBarSizeResponse) GetPageSize() uint32 {
	if x != nil && x.PageSize != nil {
		return *x.PageSize
	}
	return 0
}

type CMsgFind struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrowserHandle *uint32 `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	Find          *string `protobuf:"bytes,2,opt,name=find" json:"find,omitempty"`
	Infind        *bool   `protobuf:"varint,3,opt,name=infind" json:"infind,omitempty"`
	Reverse       *bool   `protobuf:"varint,4,opt,name=reverse,def=0" json:"reverse,omitempty"`
}

// Default values for CMsgFind fields.
const (
	Default_CMsgFind_Reverse = bool(false)
)

func (x *CMsgFind) Reset() {
	*x = CMsgFind{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_htmlmessages_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgFind) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgFind) ProtoMessage() {}

func (x *CMsgFind) ProtoReflect() protoreflect.Message {
	mi := &file_steam_htmlmessages_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgFind.ProtoReflect.Descriptor instead.
func (*CMsgFind) Descriptor() ([]byte, []int) {
	return file_steam_htmlmessages_proto_rawDescGZIP(), []int{35}
}

func (x *CMsgFind) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgFind) GetFind() string {
	if x != nil && x.Find != nil {
		return *x.Find
	}
	return ""
}

func (x *CMsgFind) GetInfind() bool {
	if x != nil && x.Infind != nil {
		return *x.Infind
	}
	return false
}

func (x *CMsgFind) GetReverse() bool {
	if x != nil && x.Reverse != nil {
		return *x.Reverse
	}
	return Default_CMsgFind_Reverse
}

type CMsgStopFind struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrowserHandle *uint32 `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
}

func (x *CMsgStopFind) Reset() {
	*x = CMsgStopFind{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_htmlmessages_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgStopFind) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgStopFind) ProtoMessage() {}

func (x *CMsgStopFind) ProtoReflect() protoreflect.Message {
	mi := &file_steam_htmlmessages_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgStopFind.ProtoReflect.Descriptor instead.
func (*CMsgStopFind) Descriptor() ([]byte, []int) {
	return file_steam_htmlmessages_proto_rawDescGZIP(), []int{36}
}

func (x *CMsgStopFind) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

type CMsgSetHorizontalScroll struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrowserHandle *uint32 `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	Scroll        *uint32 `protobuf:"varint,2,opt,name=scroll" json:"scroll,omitempty"`
}

func (x *CMsgSetHorizontalScroll) Reset() {
	*x = CMsgSetHorizontalScroll{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_htmlmessages_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgSetHorizontalScroll) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSetHorizontalScroll) ProtoMessage() {}

func (x *CMsgSetHorizontalScroll) ProtoReflect() protoreflect.Message {
	mi := &file_steam_htmlmessages_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSetHorizontalScroll.ProtoReflect.Descriptor instead.
func (*CMsgSetHorizontalScroll) Descriptor() ([]byte, []int) {
	return file_steam_htmlmessages_proto_rawDescGZIP(), []int{37}
}

func (x *CMsgSetHorizontalScroll) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgSetHorizontalScroll) GetScroll() uint32 {
	if x != nil && x.Scroll != nil {
		return *x.Scroll
	}
	return 0
}

type CMsgSetVerticalScroll struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrowserHandle *uint32 `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	Scroll        *uint32 `protobuf:"varint,2,opt,name=scroll" json:"scroll,omitempty"`
}

func (x *CMsgSetVerticalScroll) Reset() {
	*x = CMsgSetVerticalScroll{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_htmlmessages_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgSetVerticalScroll) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSetVerticalScroll) ProtoMessage() {}

func (x *CMsgSetVerticalScroll) ProtoReflect() protoreflect.Message {
	mi := &file_steam_htmlmessages_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSetVerticalScroll.ProtoReflect.Descriptor instead.
func (*CMsgSetVerticalScroll) Descriptor() ([]byte, []int) {
	return file_steam_htmlmessages_proto_rawDescGZIP(), []int{38}
}

func (x *CMsgSetVerticalScroll) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgSetVerticalScroll) GetScroll() uint32 {
	if x != nil && x.Scroll != nil {
		return *x.Scroll
	}
	return 0
}

type CMsgSetZoomLevel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrowserHandle *uint32  `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	Zoom          *float64 `protobuf:"fixed64,2,opt,name=zoom" json:"zoom,omitempty"`
}

func (x *CMsgSetZoomLevel) Reset() {
	*x = CMsgSetZoomLevel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_htmlmessages_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgSetZoomLevel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSetZoomLevel) ProtoMessage() {}

func (x *CMsgSetZoomLevel) ProtoReflect() protoreflect.Message {
	mi := &file_steam_htmlmessages_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSetZoomLevel.ProtoReflect.Descriptor instead.
func (*CMsgSetZoomLevel) Descriptor() ([]byte, []int) {
	return file_steam_htmlmessages_proto_rawDescGZIP(), []int{39}
}

func (x *CMsgSetZoomLevel) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgSetZoomLevel) GetZoom() float64 {
	if x != nil && x.Zoom != nil {
		return *x.Zoom
	}
	return 0
}

type CMsgViewSource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrowserHandle *uint32 `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
}

func (x *CMsgViewSource) Reset() {
	*x = CMsgViewSource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_htmlmessages_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgViewSource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgViewSource) ProtoMessage() {}

func (x *CMsgViewSource) ProtoReflect() protoreflect.Message {
	mi := &file_steam_htmlmessages_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgViewSource.ProtoReflect.Descriptor instead.
func (*CMsgViewSource) Descriptor() ([]byte, []int) {
	return file_steam_htmlmessages_proto_rawDescGZIP(), []int{40}
}

func (x *CMsgViewSource) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

type CMsgBrowserReady struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrowserHandle *uint32 `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	VrOverlayKey  *string `protobuf:"bytes,2,opt,name=vr_overlay_key,json=vrOverlayKey" json:"vr_overlay_key,omitempty"`
	HwndBrowser   *uint64 `protobuf:"fixed64,3,opt,name=hwnd_browser,json=hwndBrowser" json:"hwnd_browser,omitempty"`
}

func (x *CMsgBrowserReady) Reset() {
	*x = CMsgBrowserReady{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_htmlmessages_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgBrowserReady) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgBrowserReady) ProtoMessage() {}

func (x *CMsgBrowserReady) ProtoReflect() protoreflect.Message {
	mi := &file_steam_htmlmessages_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgBrowserReady.ProtoReflect.Descriptor instead.
func (*CMsgBrowserReady) Descriptor() ([]byte, []int) {
	return file_steam_htmlmessages_proto_rawDescGZIP(), []int{41}
}

func (x *CMsgBrowserReady) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgBrowserReady) GetVrOverlayKey() string {
	if x != nil && x.VrOverlayKey != nil {
		return *x.VrOverlayKey
	}
	return ""
}

func (x *CMsgBrowserReady) GetHwndBrowser() uint64 {
	if x != nil && x.HwndBrowser != nil {
		return *x.HwndBrowser
	}
	return 0
}

type CMsgURLChanged struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrowserHandle  *uint32 `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	Url            *string `protobuf:"bytes,2,opt,name=url" json:"url,omitempty"`
	PostData       *string `protobuf:"bytes,3,opt,name=postData" json:"postData,omitempty"`
	BIsRedirect    *bool   `protobuf:"varint,4,opt,name=bIsRedirect" json:"bIsRedirect,omitempty"`
	Pagetitle      *string `protobuf:"bytes,5,opt,name=pagetitle" json:"pagetitle,omitempty"`
	BNewNavigation *bool   `protobuf:"varint,6,opt,name=bNewNavigation" json:"bNewNavigation,omitempty"`
}

func (x *CMsgURLChanged) Reset() {
	*x = CMsgURLChanged{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_htmlmessages_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgURLChanged) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgURLChanged) ProtoMessage() {}

func (x *CMsgURLChanged) ProtoReflect() protoreflect.Message {
	mi := &file_steam_htmlmessages_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgURLChanged.ProtoReflect.Descriptor instead.
func (*CMsgURLChanged) Descriptor() ([]byte, []int) {
	return file_steam_htmlmessages_proto_rawDescGZIP(), []int{42}
}

func (x *CMsgURLChanged) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgURLChanged) GetUrl() string {
	if x != nil && x.Url != nil {
		return *x.Url
	}
	return ""
}

func (x *CMsgURLChanged) GetPostData() string {
	if x != nil && x.PostData != nil {
		return *x.PostData
	}
	return ""
}

func (x *CMsgURLChanged) GetBIsRedirect() bool {
	if x != nil && x.BIsRedirect != nil {
		return *x.BIsRedirect
	}
	return false
}

func (x *CMsgURLChanged) GetPagetitle() string {
	if x != nil && x.Pagetitle != nil {
		return *x.Pagetitle
	}
	return ""
}

func (x *CMsgURLChanged) GetBNewNavigation() bool {
	if x != nil && x.BNewNavigation != nil {
		return *x.BNewNavigation
	}
	return false
}

type CHTMLHeader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   *string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Value *string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (x *CHTMLHeader) Reset() {
	*x = CHTMLHeader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_htmlmessages_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CHTMLHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CHTMLHeader) ProtoMessage() {}

func (x *CHTMLHeader) ProtoReflect() protoreflect.Message {
	mi := &file_steam_htmlmessages_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CHTMLHeader.ProtoReflect.Descriptor instead.
func (*CHTMLHeader) Descriptor() ([]byte, []int) {
	return file_steam_htmlmessages_proto_rawDescGZIP(), []int{43}
}

func (x *CHTMLHeader) GetKey() string {
	if x != nil && x.Key != nil {
		return *x.Key
	}
	return ""
}

func (x *CHTMLHeader) GetValue() string {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return ""
}

type CHTMLPageSecurityInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BIsSecure     *bool   `protobuf:"varint,1,opt,name=bIsSecure,def=0" json:"bIsSecure,omitempty"`
	BHasCertError *bool   `protobuf:"varint,2,opt,name=bHasCertError,def=0" json:"bHasCertError,omitempty"`
	IssuerName    *string `protobuf:"bytes,3,opt,name=issuerName" json:"issuerName,omitempty"`
	CertName      *string `protobuf:"bytes,4,opt,name=certName" json:"certName,omitempty"`
	CertExpiry    *int32  `protobuf:"varint,5,opt,name=certExpiry,def=0" json:"certExpiry,omitempty"`
	NCertBits     *int32  `protobuf:"varint,6,opt,name=nCertBits,def=0" json:"nCertBits,omitempty"`
	BIsEVCert     *bool   `protobuf:"varint,7,opt,name=bIsEVCert,def=0" json:"bIsEVCert,omitempty"`
}

// Default values for CHTMLPageSecurityInfo fields.
const (
	Default_CHTMLPageSecurityInfo_BIsSecure     = bool(false)
	Default_CHTMLPageSecurityInfo_BHasCertError = bool(false)
	Default_CHTMLPageSecurityInfo_CertExpiry    = int32(0)
	Default_CHTMLPageSecurityInfo_NCertBits     = int32(0)
	Default_CHTMLPageSecurityInfo_BIsEVCert     = bool(false)
)

func (x *CHTMLPageSecurityInfo) Reset() {
	*x = CHTMLPageSecurityInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_htmlmessages_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CHTMLPageSecurityInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CHTMLPageSecurityInfo) ProtoMessage() {}

func (x *CHTMLPageSecurityInfo) ProtoReflect() protoreflect.Message {
	mi := &file_steam_htmlmessages_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CHTMLPageSecurityInfo.ProtoReflect.Descriptor instead.
func (*CHTMLPageSecurityInfo) Descriptor() ([]byte, []int) {
	return file_steam_htmlmessages_proto_rawDescGZIP(), []int{44}
}

func (x *CHTMLPageSecurityInfo) GetBIsSecure() bool {
	if x != nil && x.BIsSecure != nil {
		return *x.BIsSecure
	}
	return Default_CHTMLPageSecurityInfo_BIsSecure
}

func (x *CHTMLPageSecurityInfo) GetBHasCertError() bool {
	if x != nil && x.BHasCertError != nil {
		return *x.BHasCertError
	}
	return Default_CHTMLPageSecurityInfo_BHasCertError
}

func (x *CHTMLPageSecurityInfo) GetIssuerName() string {
	if x != nil && x.IssuerName != nil {
		return *x.IssuerName
	}
	return ""
}

func (x *CHTMLPageSecurityInfo) GetCertName() string {
	if x != nil && x.CertName != nil {
		return *x.CertName
	}
	return ""
}

func (x *CHTMLPageSecurityInfo) GetCertExpiry() int32 {
	if x != nil && x.CertExpiry != nil {
		return *x.CertExpiry
	}
	return Default_CHTMLPageSecurityInfo_CertExpiry
}

func (x *CHTMLPageSecurityInfo) GetNCertBits() int32 {
	if x != nil && x.NCertBits != nil {
		return *x.NCertBits
	}
	return Default_CHTMLPageSecurityInfo_NCertBits
}

func (x *CHTMLPageSecurityInfo) GetBIsEVCert() bool {
	if x != nil && x.BIsEVCert != nil {
		return *x.BIsEVCert
	}
	return Default_CHTMLPageSecurityInfo_BIsEVCert
}

type CMsgFinishedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrowserHandle *uint32 `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	Url           *string `protobuf:"bytes,2,opt,name=url" json:"url,omitempty"`
	PageTitle     *string `protobuf:"bytes,3,opt,name=pageTitle" json:"pageTitle,omitempty"`
}

func (x *CMsgFinishedRequest) Reset() {
	*x = CMsgFinishedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_htmlmessages_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgFinishedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgFinishedRequest) ProtoMessage() {}

func (x *CMsgFinishedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_steam_htmlmessages_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgFinishedRequest.ProtoReflect.Descriptor instead.
func (*CMsgFinishedRequest) Descriptor() ([]byte, []int) {
	return file_steam_htmlmessages_proto_rawDescGZIP(), []int{45}
}

func (x *CMsgFinishedRequest) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgFinishedRequest) GetUrl() string {
	if x != nil && x.Url != nil {
		return *x.Url
	}
	return ""
}

func (x *CMsgFinishedRequest) GetPageTitle() string {
	if x != nil && x.PageTitle != nil {
		return *x.PageTitle
	}
	return ""
}

type CMsgLoadedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrowserHandle *uint32        `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	Url           *string        `protobuf:"bytes,2,opt,name=url" json:"url,omitempty"`
	PageTitle     *string        `protobuf:"bytes,3,opt,name=pageTitle" json:"pageTitle,omitempty"`
	Headers       []*CHTMLHeader `protobuf:"bytes,5,rep,name=headers" json:"headers,omitempty"`
}

func (x *CMsgLoadedRequest) Reset() {
	*x = CMsgLoadedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_htmlmessages_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgLoadedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgLoadedRequest) ProtoMessage() {}

func (x *CMsgLoadedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_steam_htmlmessages_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgLoadedRequest.ProtoReflect.Descriptor instead.
func (*CMsgLoadedRequest) Descriptor() ([]byte, []int) {
	return file_steam_htmlmessages_proto_rawDescGZIP(), []int{46}
}

func (x *CMsgLoadedRequest) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgLoadedRequest) GetUrl() string {
	if x != nil && x.Url != nil {
		return *x.Url
	}
	return ""
}

func (x *CMsgLoadedRequest) GetPageTitle() string {
	if x != nil && x.PageTitle != nil {
		return *x.PageTitle
	}
	return ""
}

func (x *CMsgLoadedRequest) GetHeaders() []*CHTMLHeader {
	if x != nil {
		return x.Headers
	}
	return nil
}

type CMsgPageSecurity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrowserHandle *uint32                `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	Url           *string                `protobuf:"bytes,2,opt,name=url" json:"url,omitempty"`
	SecurityInfo  *CHTMLPageSecurityInfo `protobuf:"bytes,3,opt,name=security_info,json=securityInfo" json:"security_info,omitempty"`
}

func (x *CMsgPageSecurity) Reset() {
	*x = CMsgPageSecurity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_htmlmessages_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgPageSecurity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgPageSecurity) ProtoMessage() {}

func (x *CMsgPageSecurity) ProtoReflect() protoreflect.Message {
	mi := &file_steam_htmlmessages_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgPageSecurity.ProtoReflect.Descriptor instead.
func (*CMsgPageSecurity) Descriptor() ([]byte, []int) {
	return file_steam_htmlmessages_proto_rawDescGZIP(), []int{47}
}

func (x *CMsgPageSecurity) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgPageSecurity) GetUrl() string {
	if x != nil && x.Url != nil {
		return *x.Url
	}
	return ""
}

func (x *CMsgPageSecurity) GetSecurityInfo() *CHTMLPageSecurityInfo {
	if x != nil {
		return x.SecurityInfo
	}
	return nil
}

type CMsgStartRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrowserHandle *uint32 `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	Url           *string `protobuf:"bytes,2,opt,name=url" json:"url,omitempty"`
	Target        *string `protobuf:"bytes,3,opt,name=target" json:"target,omitempty"`
	PostData      *string `protobuf:"bytes,4,opt,name=postData" json:"postData,omitempty"`
	BIsRedirect   *bool   `protobuf:"varint,5,opt,name=bIsRedirect" json:"bIsRedirect,omitempty"`
}

func (x *CMsgStartRequest) Reset() {
	*x = CMsgStartRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_htmlmessages_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgStartRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgStartRequest) ProtoMessage() {}

func (x *CMsgStartRequest) ProtoReflect() protoreflect.Message {
	mi := &file_steam_htmlmessages_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgStartRequest.ProtoReflect.Descriptor instead.
func (*CMsgStartRequest) Descriptor() ([]byte, []int) {
	return file_steam_htmlmessages_proto_rawDescGZIP(), []int{48}
}

func (x *CMsgStartRequest) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgStartRequest) GetUrl() string {
	if x != nil && x.Url != nil {
		return *x.Url
	}
	return ""
}

func (x *CMsgStartRequest) GetTarget() string {
	if x != nil && x.Target != nil {
		return *x.Target
	}
	return ""
}

func (x *CMsgStartRequest) GetPostData() string {
	if x != nil && x.PostData != nil {
		return *x.PostData
	}
	return ""
}

func (x *CMsgStartRequest) GetBIsRedirect() bool {
	if x != nil && x.BIsRedirect != nil {
		return *x.BIsRedirect
	}
	return false
}

type CMsgStartRequestResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrowserHandle *uint32 `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	BAllow        *bool   `protobuf:"varint,2,opt,name=bAllow" json:"bAllow,omitempty"`
}

func (x *CMsgStartRequestResponse) Reset() {
	*x = CMsgStartRequestResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_htmlmessages_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgStartRequestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgStartRequestResponse) ProtoMessage() {}

func (x *CMsgStartRequestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_steam_htmlmessages_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgStartRequestResponse.ProtoReflect.Descriptor instead.
func (*CMsgStartRequestResponse) Descriptor() ([]byte, []int) {
	return file_steam_htmlmessages_proto_rawDescGZIP(), []int{49}
}

func (x *CMsgStartRequestResponse) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgStartRequestResponse) GetBAllow() bool {
	if x != nil && x.BAllow != nil {
		return *x.BAllow
	}
	return false
}

type CMsgShowPopup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrowserHandle *uint32 `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
}

func (x *CMsgShowPopup) Reset() {
	*x = CMsgShowPopup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_htmlmessages_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgShowPopup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgShowPopup) ProtoMessage() {}

func (x *CMsgShowPopup) ProtoReflect() protoreflect.Message {
	mi := &file_steam_htmlmessages_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgShowPopup.ProtoReflect.Descriptor instead.
func (*CMsgShowPopup) Descriptor() ([]byte, []int) {
	return file_steam_htmlmessages_proto_rawDescGZIP(), []int{50}
}

func (x *CMsgShowPopup) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

type CMsgHidePopup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrowserHandle *uint32 `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
}

func (x *CMsgHidePopup) Reset() {
	*x = CMsgHidePopup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_htmlmessages_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgHidePopup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgHidePopup) ProtoMessage() {}

func (x *CMsgHidePopup) ProtoReflect() protoreflect.Message {
	mi := &file_steam_htmlmessages_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgHidePopup.ProtoReflect.Descriptor instead.
func (*CMsgHidePopup) Descriptor() ([]byte, []int) {
	return file_steam_htmlmessages_proto_rawDescGZIP(), []int{51}
}

func (x *CMsgHidePopup) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

type CMsgSizePopup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrowserHandle *uint32 `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	X             *int32  `protobuf:"varint,2,opt,name=x" json:"x,omitempty"`
	Y             *int32  `protobuf:"varint,3,opt,name=y" json:"y,omitempty"`
	Wide          *uint32 `protobuf:"varint,4,opt,name=wide" json:"wide,omitempty"`
	Tall          *uint32 `protobuf:"varint,5,opt,name=tall" json:"tall,omitempty"`
}

func (x *CMsgSizePopup) Reset() {
	*x = CMsgSizePopup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_htmlmessages_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgSizePopup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSizePopup) ProtoMessage() {}

func (x *CMsgSizePopup) ProtoReflect() protoreflect.Message {
	mi := &file_steam_htmlmessages_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSizePopup.ProtoReflect.Descriptor instead.
func (*CMsgSizePopup) Descriptor() ([]byte, []int) {
	return file_steam_htmlmessages_proto_rawDescGZIP(), []int{52}
}

func (x *CMsgSizePopup) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgSizePopup) GetX() int32 {
	if x != nil && x.X != nil {
		return *x.X
	}
	return 0
}

func (x *CMsgSizePopup) GetY() int32 {
	if x != nil && x.Y != nil {
		return *x.Y
	}
	return 0
}

func (x *CMsgSizePopup) GetWide() uint32 {
	if x != nil && x.Wide != nil {
		return *x.Wide
	}
	return 0
}

func (x *CMsgSizePopup) GetTall() uint32 {
	if x != nil && x.Tall != nil {
		return *x.Tall
	}
	return 0
}

type CMsgOpenNewTab struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrowserHandle *uint32 `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	Url           *string `protobuf:"bytes,2,opt,name=url" json:"url,omitempty"`
	BForeground   *bool   `protobuf:"varint,3,opt,name=bForeground" json:"bForeground,omitempty"`
}

func (x *CMsgOpenNewTab) Reset() {
	*x = CMsgOpenNewTab{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_htmlmessages_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgOpenNewTab) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgOpenNewTab) ProtoMessage() {}

func (x *CMsgOpenNewTab) ProtoReflect() protoreflect.Message {
	mi := &file_steam_htmlmessages_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgOpenNewTab.ProtoReflect.Descriptor instead.
func (*CMsgOpenNewTab) Descriptor() ([]byte, []int) {
	return file_steam_htmlmessages_proto_rawDescGZIP(), []int{53}
}

func (x *CMsgOpenNewTab) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgOpenNewTab) GetUrl() string {
	if x != nil && x.Url != nil {
		return *x.Url
	}
	return ""
}

func (x *CMsgOpenNewTab) GetBForeground() bool {
	if x != nil && x.BForeground != nil {
		return *x.BForeground
	}
	return false
}

type CMsgPopupHTMLWindow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrowserHandle  *uint32 `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	Url            *string `protobuf:"bytes,2,opt,name=url" json:"url,omitempty"`
	X              *int32  `protobuf:"varint,3,opt,name=x,def=-2147483648" json:"x,omitempty"`
	Y              *int32  `protobuf:"varint,4,opt,name=y,def=-2147483648" json:"y,omitempty"`
	Wide           *uint32 `protobuf:"varint,5,opt,name=wide" json:"wide,omitempty"`
	Tall           *uint32 `protobuf:"varint,6,opt,name=tall" json:"tall,omitempty"`
	PopupIndex     *uint32 `protobuf:"varint,7,opt,name=popup_index,json=popupIndex" json:"popup_index,omitempty"`
	TrustedCreator *bool   `protobuf:"varint,8,opt,name=trusted_creator,json=trustedCreator" json:"trusted_creator,omitempty"`
}

// Default values for CMsgPopupHTMLWindow fields.
const (
	Default_CMsgPopupHTMLWindow_X = int32(-2147483648)
	Default_CMsgPopupHTMLWindow_Y = int32(-2147483648)
)

func (x *CMsgPopupHTMLWindow) Reset() {
	*x = CMsgPopupHTMLWindow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_htmlmessages_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgPopupHTMLWindow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgPopupHTMLWindow) ProtoMessage() {}

func (x *CMsgPopupHTMLWindow) ProtoReflect() protoreflect.Message {
	mi := &file_steam_htmlmessages_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgPopupHTMLWindow.ProtoReflect.Descriptor instead.
func (*CMsgPopupHTMLWindow) Descriptor() ([]byte, []int) {
	return file_steam_htmlmessages_proto_rawDescGZIP(), []int{54}
}

func (x *CMsgPopupHTMLWindow) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgPopupHTMLWindow) GetUrl() string {
	if x != nil && x.Url != nil {
		return *x.Url
	}
	return ""
}

func (x *CMsgPopupHTMLWindow) GetX() int32 {
	if x != nil && x.X != nil {
		return *x.X
	}
	return Default_CMsgPopupHTMLWindow_X
}

func (x *CMsgPopupHTMLWindow) GetY() int32 {
	if x != nil && x.Y != nil {
		return *x.Y
	}
	return Default_CMsgPopupHTMLWindow_Y
}

func (x *CMsgPopupHTMLWindow) GetWide() uint32 {
	if x != nil && x.Wide != nil {
		return *x.Wide
	}
	return 0
}

func (x *CMsgPopupHTMLWindow) GetTall() uint32 {
	if x != nil && x.Tall != nil {
		return *x.Tall
	}
	return 0
}

func (x *CMsgPopupHTMLWindow) GetPopupIndex() uint32 {
	if x != nil && x.PopupIndex != nil {
		return *x.PopupIndex
	}
	return 0
}

func (x *CMsgPopupHTMLWindow) GetTrustedCreator() bool {
	if x != nil && x.TrustedCreator != nil {
		return *x.TrustedCreator
	}
	return false
}

type CMsgPopupHTMLWindowResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrowserHandle *uint32 `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	BAllow        *bool   `protobuf:"varint,2,opt,name=bAllow" json:"bAllow,omitempty"`
}

func (x *CMsgPopupHTMLWindowResponse) Reset() {
	*x = CMsgPopupHTMLWindowResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_htmlmessages_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgPopupHTMLWindowResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgPopupHTMLWindowResponse) ProtoMessage() {}

func (x *CMsgPopupHTMLWindowResponse) ProtoReflect() protoreflect.Message {
	mi := &file_steam_htmlmessages_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgPopupHTMLWindowResponse.ProtoReflect.Descriptor instead.
func (*CMsgPopupHTMLWindowResponse) Descriptor() ([]byte, []int) {
	return file_steam_htmlmessages_proto_rawDescGZIP(), []int{55}
}

func (x *CMsgPopupHTMLWindowResponse) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgPopupHTMLWindowResponse) GetBAllow() bool {
	if x != nil && x.BAllow != nil {
		return *x.BAllow
	}
	return false
}

type CMsgSetHTMLTitle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrowserHandle *uint32 `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	Title         *string `protobuf:"bytes,2,opt,name=title" json:"title,omitempty"`
}

func (x *CMsgSetHTMLTitle) Reset() {
	*x = CMsgSetHTMLTitle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_htmlmessages_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgSetHTMLTitle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSetHTMLTitle) ProtoMessage() {}

func (x *CMsgSetHTMLTitle) ProtoReflect() protoreflect.Message {
	mi := &file_steam_htmlmessages_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSetHTMLTitle.ProtoReflect.Descriptor instead.
func (*CMsgSetHTMLTitle) Descriptor() ([]byte, []int) {
	return file_steam_htmlmessages_proto_rawDescGZIP(), []int{56}
}

func (x *CMsgSetHTMLTitle) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgSetHTMLTitle) GetTitle() string {
	if x != nil && x.Title != nil {
		return *x.Title
	}
	return ""
}

type CMsgLoadingResource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrowserHandle *uint32 `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	Url           *string `protobuf:"bytes,2,opt,name=url" json:"url,omitempty"`
}

func (x *CMsgLoadingResource) Reset() {
	*x = CMsgLoadingResource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_htmlmessages_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgLoadingResource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgLoadingResource) ProtoMessage() {}

func (x *CMsgLoadingResource) ProtoReflect() protoreflect.Message {
	mi := &file_steam_htmlmessages_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgLoadingResource.ProtoReflect.Descriptor instead.
func (*CMsgLoadingResource) Descriptor() ([]byte, []int) {
	return file_steam_htmlmessages_proto_rawDescGZIP(), []int{57}
}

func (x *CMsgLoadingResource) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgLoadingResource) GetUrl() string {
	if x != nil && x.Url != nil {
		return *x.Url
	}
	return ""
}

type CMsgStatusText struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrowserHandle *uint32 `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	Text          *string `protobuf:"bytes,2,opt,name=text" json:"text,omitempty"`
}

func (x *CMsgStatusText) Reset() {
	*x = CMsgStatusText{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_htmlmessages_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgStatusText) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgStatusText) ProtoMessage() {}

func (x *CMsgStatusText) ProtoReflect() protoreflect.Message {
	mi := &file_steam_htmlmessages_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgStatusText.ProtoReflect.Descriptor instead.
func (*CMsgStatusText) Descriptor() ([]byte, []int) {
	return file_steam_htmlmessages_proto_rawDescGZIP(), []int{58}
}

func (x *CMsgStatusText) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgStatusText) GetText() string {
	if x != nil && x.Text != nil {
		return *x.Text
	}
	return ""
}

type CMsgSetCursor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrowserHandle *uint32 `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	Cursor        *uint32 `protobuf:"varint,2,opt,name=cursor" json:"cursor,omitempty"`
	CustomData    []byte  `protobuf:"bytes,3,opt,name=custom_data,json=customData" json:"custom_data,omitempty"`
	Wide          *uint32 `protobuf:"varint,4,opt,name=wide" json:"wide,omitempty"`
	Tall          *uint32 `protobuf:"varint,5,opt,name=tall" json:"tall,omitempty"`
	Xhotspot      *uint32 `protobuf:"varint,6,opt,name=xhotspot" json:"xhotspot,omitempty"`
	Yhotspot      *uint32 `protobuf:"varint,7,opt,name=yhotspot" json:"yhotspot,omitempty"`
}

func (x *CMsgSetCursor) Reset() {
	*x = CMsgSetCursor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_htmlmessages_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgSetCursor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSetCursor) ProtoMessage() {}

func (x *CMsgSetCursor) ProtoReflect() protoreflect.Message {
	mi := &file_steam_htmlmessages_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSetCursor.ProtoReflect.Descriptor instead.
func (*CMsgSetCursor) Descriptor() ([]byte, []int) {
	return file_steam_htmlmessages_proto_rawDescGZIP(), []int{59}
}

func (x *CMsgSetCursor) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgSetCursor) GetCursor() uint32 {
	if x != nil && x.Cursor != nil {
		return *x.Cursor
	}
	return 0
}

func (x *CMsgSetCursor) GetCustomData() []byte {
	if x != nil {
		return x.CustomData
	}
	return nil
}

func (x *CMsgSetCursor) GetWide() uint32 {
	if x != nil && x.Wide != nil {
		return *x.Wide
	}
	return 0
}

func (x *CMsgSetCursor) GetTall() uint32 {
	if x != nil && x.Tall != nil {
		return *x.Tall
	}
	return 0
}

func (x *CMsgSetCursor) GetXhotspot() uint32 {
	if x != nil && x.Xhotspot != nil {
		return *x.Xhotspot
	}
	return 0
}

func (x *CMsgSetCursor) GetYhotspot() uint32 {
	if x != nil && x.Yhotspot != nil {
		return *x.Yhotspot
	}
	return 0
}

type CMsgFileLoadDialog struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrowserHandle *uint32  `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	Title         *string  `protobuf:"bytes,2,opt,name=title" json:"title,omitempty"`
	InitialFile   *string  `protobuf:"bytes,3,opt,name=initialFile" json:"initialFile,omitempty"`
	AcceptTypes   []string `protobuf:"bytes,4,rep,name=accept_types,json=acceptTypes" json:"accept_types,omitempty"`
	IsSave        *bool    `protobuf:"varint,5,opt,name=is_save,json=isSave" json:"is_save,omitempty"`
}

func (x *CMsgFileLoadDialog) Reset() {
	*x = CMsgFileLoadDialog{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_htmlmessages_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgFileLoadDialog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgFileLoadDialog) ProtoMessage() {}

func (x *CMsgFileLoadDialog) ProtoReflect() protoreflect.Message {
	mi := &file_steam_htmlmessages_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgFileLoadDialog.ProtoReflect.Descriptor instead.
func (*CMsgFileLoadDialog) Descriptor() ([]byte, []int) {
	return file_steam_htmlmessages_proto_rawDescGZIP(), []int{60}
}

func (x *CMsgFileLoadDialog) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgFileLoadDialog) GetTitle() string {
	if x != nil && x.Title != nil {
		return *x.Title
	}
	return ""
}

func (x *CMsgFileLoadDialog) GetInitialFile() string {
	if x != nil && x.InitialFile != nil {
		return *x.InitialFile
	}
	return ""
}

func (x *CMsgFileLoadDialog) GetAcceptTypes() []string {
	if x != nil {
		return x.AcceptTypes
	}
	return nil
}

func (x *CMsgFileLoadDialog) GetIsSave() bool {
	if x != nil && x.IsSave != nil {
		return *x.IsSave
	}
	return false
}

type CMsgFileLoadDialogResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrowserHandle *uint32  `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	Files         []string `protobuf:"bytes,2,rep,name=files" json:"files,omitempty"`
}

func (x *CMsgFileLoadDialogResponse) Reset() {
	*x = CMsgFileLoadDialogResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_htmlmessages_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgFileLoadDialogResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgFileLoadDialogResponse) ProtoMessage() {}

func (x *CMsgFileLoadDialogResponse) ProtoReflect() protoreflect.Message {
	mi := &file_steam_htmlmessages_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgFileLoadDialogResponse.ProtoReflect.Descriptor instead.
func (*CMsgFileLoadDialogResponse) Descriptor() ([]byte, []int) {
	return file_steam_htmlmessages_proto_rawDescGZIP(), []int{61}
}

func (x *CMsgFileLoadDialogResponse) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgFileLoadDialogResponse) GetFiles() []string {
	if x != nil {
		return x.Files
	}
	return nil
}

type CMsgShowToolTip struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrowserHandle *uint32 `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	Text          *string `protobuf:"bytes,2,opt,name=text" json:"text,omitempty"`
}

func (x *CMsgShowToolTip) Reset() {
	*x = CMsgShowToolTip{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_htmlmessages_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgShowToolTip) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgShowToolTip) ProtoMessage() {}

func (x *CMsgShowToolTip) ProtoReflect() protoreflect.Message {
	mi := &file_steam_htmlmessages_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgShowToolTip.ProtoReflect.Descriptor instead.
func (*CMsgShowToolTip) Descriptor() ([]byte, []int) {
	return file_steam_htmlmessages_proto_rawDescGZIP(), []int{62}
}

func (x *CMsgShowToolTip) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgShowToolTip) GetText() string {
	if x != nil && x.Text != nil {
		return *x.Text
	}
	return ""
}

type CMsgUpdateToolTip struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrowserHandle *uint32 `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	Text          *string `protobuf:"bytes,2,opt,name=text" json:"text,omitempty"`
}

func (x *CMsgUpdateToolTip) Reset() {
	*x = CMsgUpdateToolTip{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_htmlmessages_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgUpdateToolTip) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgUpdateToolTip) ProtoMessage() {}

func (x *CMsgUpdateToolTip) ProtoReflect() protoreflect.Message {
	mi := &file_steam_htmlmessages_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgUpdateToolTip.ProtoReflect.Descriptor instead.
func (*CMsgUpdateToolTip) Descriptor() ([]byte, []int) {
	return file_steam_htmlmessages_proto_rawDescGZIP(), []int{63}
}

func (x *CMsgUpdateToolTip) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgUpdateToolTip) GetText() string {
	if x != nil && x.Text != nil {
		return *x.Text
	}
	return ""
}

type CMsgHideToolTip struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrowserHandle *uint32 `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
}

func (x *CMsgHideToolTip) Reset() {
	*x = CMsgHideToolTip{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_htmlmessages_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgHideToolTip) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgHideToolTip) ProtoMessage() {}

func (x *CMsgHideToolTip) ProtoReflect() protoreflect.Message {
	mi := &file_steam_htmlmessages_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgHideToolTip.ProtoReflect.Descriptor instead.
func (*CMsgHideToolTip) Descriptor() ([]byte, []int) {
	return file_steam_htmlmessages_proto_rawDescGZIP(), []int{64}
}

func (x *CMsgHideToolTip) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

type CMsgSearchResults struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrowserHandle *uint32 `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	ActiveMatch   *int32  `protobuf:"varint,2,opt,name=activeMatch" json:"activeMatch,omitempty"`
	Results       *int32  `protobuf:"varint,3,opt,name=results" json:"results,omitempty"`
}

func (x *CMsgSearchResults) Reset() {
	*x = CMsgSearchResults{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_htmlmessages_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgSearchResults) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSearchResults) ProtoMessage() {}

func (x *CMsgSearchResults) ProtoReflect() protoreflect.Message {
	mi := &file_steam_htmlmessages_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSearchResults.ProtoReflect.Descriptor instead.
func (*CMsgSearchResults) Descriptor() ([]byte, []int) {
	return file_steam_htmlmessages_proto_rawDescGZIP(), []int{65}
}

func (x *CMsgSearchResults) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgSearchResults) GetActiveMatch() int32 {
	if x != nil && x.ActiveMatch != nil {
		return *x.ActiveMatch
	}
	return 0
}

func (x *CMsgSearchResults) GetResults() int32 {
	if x != nil && x.Results != nil {
		return *x.Results
	}
	return 0
}

type CMsgClose struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrowserHandle *uint32 `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
}

func (x *CMsgClose) Reset() {
	*x = CMsgClose{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_htmlmessages_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClose) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClose) ProtoMessage() {}

func (x *CMsgClose) ProtoReflect() protoreflect.Message {
	mi := &file_steam_htmlmessages_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClose.ProtoReflect.Descriptor instead.
func (*CMsgClose) Descriptor() ([]byte, []int) {
	return file_steam_htmlmessages_proto_rawDescGZIP(), []int{66}
}

func (x *CMsgClose) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

type CMsgSetSharedPaintBuffers struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrowserHandle *uint32 `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	Wide          *uint32 `protobuf:"varint,2,opt,name=wide" json:"wide,omitempty"`
	Tall          *uint32 `protobuf:"varint,3,opt,name=tall" json:"tall,omitempty"`
	SourcePid     *uint64 `protobuf:"varint,4,opt,name=source_pid,json=sourcePid" json:"source_pid,omitempty"`
	SourceHandle  *uint64 `protobuf:"varint,5,opt,name=source_handle,json=sourceHandle" json:"source_handle,omitempty"`
	Handle        *uint64 `protobuf:"varint,6,opt,name=handle" json:"handle,omitempty"`
}

func (x *CMsgSetSharedPaintBuffers) Reset() {
	*x = CMsgSetSharedPaintBuffers{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_htmlmessages_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgSetSharedPaintBuffers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSetSharedPaintBuffers) ProtoMessage() {}

func (x *CMsgSetSharedPaintBuffers) ProtoReflect() protoreflect.Message {
	mi := &file_steam_htmlmessages_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSetSharedPaintBuffers.ProtoReflect.Descriptor instead.
func (*CMsgSetSharedPaintBuffers) Descriptor() ([]byte, []int) {
	return file_steam_htmlmessages_proto_rawDescGZIP(), []int{67}
}

func (x *CMsgSetSharedPaintBuffers) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgSetSharedPaintBuffers) GetWide() uint32 {
	if x != nil && x.Wide != nil {
		return *x.Wide
	}
	return 0
}

func (x *CMsgSetSharedPaintBuffers) GetTall() uint32 {
	if x != nil && x.Tall != nil {
		return *x.Tall
	}
	return 0
}

func (x *CMsgSetSharedPaintBuffers) GetSourcePid() uint64 {
	if x != nil && x.SourcePid != nil {
		return *x.SourcePid
	}
	return 0
}

func (x *CMsgSetSharedPaintBuffers) GetSourceHandle() uint64 {
	if x != nil && x.SourceHandle != nil {
		return *x.SourceHandle
	}
	return 0
}

func (x *CMsgSetSharedPaintBuffers) GetHandle() uint64 {
	if x != nil && x.Handle != nil {
		return *x.Handle
	}
	return 0
}

type CMsgAckSharedPaintBuffers struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrowserHandle *uint32 `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
}

func (x *CMsgAckSharedPaintBuffers) Reset() {
	*x = CMsgAckSharedPaintBuffers{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_htmlmessages_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgAckSharedPaintBuffers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgAckSharedPaintBuffers) ProtoMessage() {}

func (x *CMsgAckSharedPaintBuffers) ProtoReflect() protoreflect.Message {
	mi := &file_steam_htmlmessages_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgAckSharedPaintBuffers.ProtoReflect.Descriptor instead.
func (*CMsgAckSharedPaintBuffers) Descriptor() ([]byte, []int) {
	return file_steam_htmlmessages_proto_rawDescGZIP(), []int{68}
}

func (x *CMsgAckSharedPaintBuffers) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

type CMsgNeedsPaint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrowserHandle *uint32  `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	Scrollx       *uint32  `protobuf:"varint,10,opt,name=scrollx" json:"scrollx,omitempty"`
	Scrolly       *uint32  `protobuf:"varint,11,opt,name=scrolly" json:"scrolly,omitempty"`
	Pagescale     *float32 `protobuf:"fixed32,12,opt,name=pagescale" json:"pagescale,omitempty"`
	Pageserial    *uint32  `protobuf:"varint,15,opt,name=pageserial" json:"pageserial,omitempty"`
}

func (x *CMsgNeedsPaint) Reset() {
	*x = CMsgNeedsPaint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_htmlmessages_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgNeedsPaint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgNeedsPaint) ProtoMessage() {}

func (x *CMsgNeedsPaint) ProtoReflect() protoreflect.Message {
	mi := &file_steam_htmlmessages_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgNeedsPaint.ProtoReflect.Descriptor instead.
func (*CMsgNeedsPaint) Descriptor() ([]byte, []int) {
	return file_steam_htmlmessages_proto_rawDescGZIP(), []int{69}
}

func (x *CMsgNeedsPaint) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgNeedsPaint) GetScrollx() uint32 {
	if x != nil && x.Scrollx != nil {
		return *x.Scrollx
	}
	return 0
}

func (x *CMsgNeedsPaint) GetScrolly() uint32 {
	if x != nil && x.Scrolly != nil {
		return *x.Scrolly
	}
	return 0
}

func (x *CMsgNeedsPaint) GetPagescale() float32 {
	if x != nil && x.Pagescale != nil {
		return *x.Pagescale
	}
	return 0
}

func (x *CMsgNeedsPaint) GetPageserial() uint32 {
	if x != nil && x.Pageserial != nil {
		return *x.Pageserial
	}
	return 0
}

type CMsgComboNeedsPaint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrowserHandle      *uint32 `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	Rgba               *uint64 `protobuf:"varint,2,opt,name=rgba" json:"rgba,omitempty"`
	ComboboxWide       *uint32 `protobuf:"varint,3,opt,name=combobox_wide,json=comboboxWide,def=0" json:"combobox_wide,omitempty"`
	ComboboxTall       *uint32 `protobuf:"varint,4,opt,name=combobox_tall,json=comboboxTall,def=0" json:"combobox_tall,omitempty"`
	SharedMemoryHandle *uint64 `protobuf:"varint,5,opt,name=shared_memory_handle,json=sharedMemoryHandle,def=0" json:"shared_memory_handle,omitempty"`
	SharedMemorySize   *uint64 `protobuf:"varint,7,opt,name=shared_memory_size,json=sharedMemorySize,def=0" json:"shared_memory_size,omitempty"`
}

// Default values for CMsgComboNeedsPaint fields.
const (
	Default_CMsgComboNeedsPaint_ComboboxWide       = uint32(0)
	Default_CMsgComboNeedsPaint_ComboboxTall       = uint32(0)
	Default_CMsgComboNeedsPaint_SharedMemoryHandle = uint64(0)
	Default_CMsgComboNeedsPaint_SharedMemorySize   = uint64(0)
)

func (x *CMsgComboNeedsPaint) Reset() {
	*x = CMsgComboNeedsPaint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_htmlmessages_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgComboNeedsPaint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgComboNeedsPaint) ProtoMessage() {}

func (x *CMsgComboNeedsPaint) ProtoReflect() protoreflect.Message {
	mi := &file_steam_htmlmessages_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgComboNeedsPaint.ProtoReflect.Descriptor instead.
func (*CMsgComboNeedsPaint) Descriptor() ([]byte, []int) {
	return file_steam_htmlmessages_proto_rawDescGZIP(), []int{70}
}

func (x *CMsgComboNeedsPaint) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgComboNeedsPaint) GetRgba() uint64 {
	if x != nil && x.Rgba != nil {
		return *x.Rgba
	}
	return 0
}

func (x *CMsgComboNeedsPaint) GetComboboxWide() uint32 {
	if x != nil && x.ComboboxWide != nil {
		return *x.ComboboxWide
	}
	return Default_CMsgComboNeedsPaint_ComboboxWide
}

func (x *CMsgComboNeedsPaint) GetComboboxTall() uint32 {
	if x != nil && x.ComboboxTall != nil {
		return *x.ComboboxTall
	}
	return Default_CMsgComboNeedsPaint_ComboboxTall
}

func (x *CMsgComboNeedsPaint) GetSharedMemoryHandle() uint64 {
	if x != nil && x.SharedMemoryHandle != nil {
		return *x.SharedMemoryHandle
	}
	return Default_CMsgComboNeedsPaint_SharedMemoryHandle
}

func (x *CMsgComboNeedsPaint) GetSharedMemorySize() uint64 {
	if x != nil && x.SharedMemorySize != nil {
		return *x.SharedMemorySize
	}
	return Default_CMsgComboNeedsPaint_SharedMemorySize
}

type CMsgNeedsSharedTexturePaint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrowserHandle *uint32  `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	ShareHandle   *uint32  `protobuf:"varint,2,opt,name=share_handle,json=shareHandle" json:"share_handle,omitempty"`
	Width         *uint32  `protobuf:"varint,3,opt,name=width" json:"width,omitempty"`
	Height        *uint32  `protobuf:"varint,4,opt,name=height" json:"height,omitempty"`
	Scrollx       *uint32  `protobuf:"varint,5,opt,name=scrollx" json:"scrollx,omitempty"`
	Scrolly       *uint32  `protobuf:"varint,6,opt,name=scrolly" json:"scrolly,omitempty"`
	Pagescale     *float32 `protobuf:"fixed32,7,opt,name=pagescale" json:"pagescale,omitempty"`
	Pageserial    *uint32  `protobuf:"varint,8,opt,name=pageserial" json:"pageserial,omitempty"`
}

func (x *CMsgNeedsSharedTexturePaint) Reset() {
	*x = CMsgNeedsSharedTexturePaint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_htmlmessages_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgNeedsSharedTexturePaint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgNeedsSharedTexturePaint) ProtoMessage() {}

func (x *CMsgNeedsSharedTexturePaint) ProtoReflect() protoreflect.Message {
	mi := &file_steam_htmlmessages_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgNeedsSharedTexturePaint.ProtoReflect.Descriptor instead.
func (*CMsgNeedsSharedTexturePaint) Descriptor() ([]byte, []int) {
	return file_steam_htmlmessages_proto_rawDescGZIP(), []int{71}
}

func (x *CMsgNeedsSharedTexturePaint) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgNeedsSharedTexturePaint) GetShareHandle() uint32 {
	if x != nil && x.ShareHandle != nil {
		return *x.ShareHandle
	}
	return 0
}

func (x *CMsgNeedsSharedTexturePaint) GetWidth() uint32 {
	if x != nil && x.Width != nil {
		return *x.Width
	}
	return 0
}

func (x *CMsgNeedsSharedTexturePaint) GetHeight() uint32 {
	if x != nil && x.Height != nil {
		return *x.Height
	}
	return 0
}

func (x *CMsgNeedsSharedTexturePaint) GetScrollx() uint32 {
	if x != nil && x.Scrollx != nil {
		return *x.Scrollx
	}
	return 0
}

func (x *CMsgNeedsSharedTexturePaint) GetScrolly() uint32 {
	if x != nil && x.Scrolly != nil {
		return *x.Scrolly
	}
	return 0
}

func (x *CMsgNeedsSharedTexturePaint) GetPagescale() float32 {
	if x != nil && x.Pagescale != nil {
		return *x.Pagescale
	}
	return 0
}

func (x *CMsgNeedsSharedTexturePaint) GetPageserial() uint32 {
	if x != nil && x.Pageserial != nil {
		return *x.Pageserial
	}
	return 0
}

type CMsgGameOverlayTexturePaint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrowserHandle *uint32  `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	Width         *uint32  `protobuf:"varint,3,opt,name=width" json:"width,omitempty"`
	Height        *uint32  `protobuf:"varint,4,opt,name=height" json:"height,omitempty"`
	Scrollx       *uint32  `protobuf:"varint,5,opt,name=scrollx" json:"scrollx,omitempty"`
	Scrolly       *uint32  `protobuf:"varint,6,opt,name=scrolly" json:"scrolly,omitempty"`
	Pagescale     *float32 `protobuf:"fixed32,7,opt,name=pagescale" json:"pagescale,omitempty"`
	Pageserial    *uint32  `protobuf:"varint,8,opt,name=pageserial" json:"pageserial,omitempty"`
}

func (x *CMsgGameOverlayTexturePaint) Reset() {
	*x = CMsgGameOverlayTexturePaint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_htmlmessages_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGameOverlayTexturePaint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGameOverlayTexturePaint) ProtoMessage() {}

func (x *CMsgGameOverlayTexturePaint) ProtoReflect() protoreflect.Message {
	mi := &file_steam_htmlmessages_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGameOverlayTexturePaint.ProtoReflect.Descriptor instead.
func (*CMsgGameOverlayTexturePaint) Descriptor() ([]byte, []int) {
	return file_steam_htmlmessages_proto_rawDescGZIP(), []int{72}
}

func (x *CMsgGameOverlayTexturePaint) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgGameOverlayTexturePaint) GetWidth() uint32 {
	if x != nil && x.Width != nil {
		return *x.Width
	}
	return 0
}

func (x *CMsgGameOverlayTexturePaint) GetHeight() uint32 {
	if x != nil && x.Height != nil {
		return *x.Height
	}
	return 0
}

func (x *CMsgGameOverlayTexturePaint) GetScrollx() uint32 {
	if x != nil && x.Scrollx != nil {
		return *x.Scrollx
	}
	return 0
}

func (x *CMsgGameOverlayTexturePaint) GetScrolly() uint32 {
	if x != nil && x.Scrolly != nil {
		return *x.Scrolly
	}
	return 0
}

func (x *CMsgGameOverlayTexturePaint) GetPagescale() float32 {
	if x != nil && x.Pagescale != nil {
		return *x.Pagescale
	}
	return 0
}

func (x *CMsgGameOverlayTexturePaint) GetPageserial() uint32 {
	if x != nil && x.Pageserial != nil {
		return *x.Pageserial
	}
	return 0
}

type CMsgGetZoom struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrowserHandle *uint32 `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
}

func (x *CMsgGetZoom) Reset() {
	*x = CMsgGetZoom{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_htmlmessages_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGetZoom) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGetZoom) ProtoMessage() {}

func (x *CMsgGetZoom) ProtoReflect() protoreflect.Message {
	mi := &file_steam_htmlmessages_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGetZoom.ProtoReflect.Descriptor instead.
func (*CMsgGetZoom) Descriptor() ([]byte, []int) {
	return file_steam_htmlmessages_proto_rawDescGZIP(), []int{73}
}

func (x *CMsgGetZoom) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

type CMsgGetZoomResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrowserHandle *uint32  `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	Zoom          *float32 `protobuf:"fixed32,2,opt,name=zoom" json:"zoom,omitempty"`
}

func (x *CMsgGetZoomResponse) Reset() {
	*x = CMsgGetZoomResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_htmlmessages_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGetZoomResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGetZoomResponse) ProtoMessage() {}

func (x *CMsgGetZoomResponse) ProtoReflect() protoreflect.Message {
	mi := &file_steam_htmlmessages_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGetZoomResponse.ProtoReflect.Descriptor instead.
func (*CMsgGetZoomResponse) Descriptor() ([]byte, []int) {
	return file_steam_htmlmessages_proto_rawDescGZIP(), []int{74}
}

func (x *CMsgGetZoomResponse) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgGetZoomResponse) GetZoom() float32 {
	if x != nil && x.Zoom != nil {
		return *x.Zoom
	}
	return 0
}

type CMsgLinkAtPosition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrowserHandle *uint32 `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	X             *uint32 `protobuf:"varint,2,opt,name=x" json:"x,omitempty"`
	Y             *uint32 `protobuf:"varint,3,opt,name=y" json:"y,omitempty"`
}

func (x *CMsgLinkAtPosition) Reset() {
	*x = CMsgLinkAtPosition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_htmlmessages_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgLinkAtPosition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgLinkAtPosition) ProtoMessage() {}

func (x *CMsgLinkAtPosition) ProtoReflect() protoreflect.Message {
	mi := &file_steam_htmlmessages_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgLinkAtPosition.ProtoReflect.Descriptor instead.
func (*CMsgLinkAtPosition) Descriptor() ([]byte, []int) {
	return file_steam_htmlmessages_proto_rawDescGZIP(), []int{75}
}

func (x *CMsgLinkAtPosition) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgLinkAtPosition) GetX() uint32 {
	if x != nil && x.X != nil {
		return *x.X
	}
	return 0
}

func (x *CMsgLinkAtPosition) GetY() uint32 {
	if x != nil && x.Y != nil {
		return *x.Y
	}
	return 0
}

type CMsgLinkAtPositionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrowserHandle *uint32 `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	X             *uint32 `protobuf:"varint,2,opt,name=x" json:"x,omitempty"`
	Y             *uint32 `protobuf:"varint,3,opt,name=y" json:"y,omitempty"`
	Url           *string `protobuf:"bytes,4,opt,name=url" json:"url,omitempty"`
	Blivelink     *bool   `protobuf:"varint,5,opt,name=blivelink" json:"blivelink,omitempty"`
	Binput        *bool   `protobuf:"varint,6,opt,name=binput" json:"binput,omitempty"`
}

func (x *CMsgLinkAtPositionResponse) Reset() {
	*x = CMsgLinkAtPositionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_htmlmessages_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgLinkAtPositionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgLinkAtPositionResponse) ProtoMessage() {}

func (x *CMsgLinkAtPositionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_steam_htmlmessages_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgLinkAtPositionResponse.ProtoReflect.Descriptor instead.
func (*CMsgLinkAtPositionResponse) Descriptor() ([]byte, []int) {
	return file_steam_htmlmessages_proto_rawDescGZIP(), []int{76}
}

func (x *CMsgLinkAtPositionResponse) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgLinkAtPositionResponse) GetX() uint32 {
	if x != nil && x.X != nil {
		return *x.X
	}
	return 0
}

func (x *CMsgLinkAtPositionResponse) GetY() uint32 {
	if x != nil && x.Y != nil {
		return *x.Y
	}
	return 0
}

func (x *CMsgLinkAtPositionResponse) GetUrl() string {
	if x != nil && x.Url != nil {
		return *x.Url
	}
	return ""
}

func (x *CMsgLinkAtPositionResponse) GetBlivelink() bool {
	if x != nil && x.Blivelink != nil {
		return *x.Blivelink
	}
	return false
}

func (x *CMsgLinkAtPositionResponse) GetBinput() bool {
	if x != nil && x.Binput != nil {
		return *x.Binput
	}
	return false
}

type CMsgZoomToElementAtPosition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrowserHandle *uint32 `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	X             *uint32 `protobuf:"varint,2,opt,name=x" json:"x,omitempty"`
	Y             *uint32 `protobuf:"varint,3,opt,name=y" json:"y,omitempty"`
}

func (x *CMsgZoomToElementAtPosition) Reset() {
	*x = CMsgZoomToElementAtPosition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_htmlmessages_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgZoomToElementAtPosition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgZoomToElementAtPosition) ProtoMessage() {}

func (x *CMsgZoomToElementAtPosition) ProtoReflect() protoreflect.Message {
	mi := &file_steam_htmlmessages_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgZoomToElementAtPosition.ProtoReflect.Descriptor instead.
func (*CMsgZoomToElementAtPosition) Descriptor() ([]byte, []int) {
	return file_steam_htmlmessages_proto_rawDescGZIP(), []int{77}
}

func (x *CMsgZoomToElementAtPosition) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgZoomToElementAtPosition) GetX() uint32 {
	if x != nil && x.X != nil {
		return *x.X
	}
	return 0
}

func (x *CMsgZoomToElementAtPosition) GetY() uint32 {
	if x != nil && x.Y != nil {
		return *x.Y
	}
	return 0
}

type CMsgZoomToElementAtPositionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrowserHandle *uint32  `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	Scale         *float32 `protobuf:"fixed32,2,opt,name=scale" json:"scale,omitempty"`
	Duration      *float32 `protobuf:"fixed32,3,opt,name=duration" json:"duration,omitempty"`
}

func (x *CMsgZoomToElementAtPositionResponse) Reset() {
	*x = CMsgZoomToElementAtPositionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_htmlmessages_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgZoomToElementAtPositionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgZoomToElementAtPositionResponse) ProtoMessage() {}

func (x *CMsgZoomToElementAtPositionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_steam_htmlmessages_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgZoomToElementAtPositionResponse.ProtoReflect.Descriptor instead.
func (*CMsgZoomToElementAtPositionResponse) Descriptor() ([]byte, []int) {
	return file_steam_htmlmessages_proto_rawDescGZIP(), []int{78}
}

func (x *CMsgZoomToElementAtPositionResponse) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgZoomToElementAtPositionResponse) GetScale() float32 {
	if x != nil && x.Scale != nil {
		return *x.Scale
	}
	return 0
}

func (x *CMsgZoomToElementAtPositionResponse) GetDuration() float32 {
	if x != nil && x.Duration != nil {
		return *x.Duration
	}
	return 0
}

type CMsgScalePageToValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrowserHandle *uint32  `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	Scale         *float32 `protobuf:"fixed32,2,opt,name=scale" json:"scale,omitempty"`
	X             *float32 `protobuf:"fixed32,3,opt,name=x" json:"x,omitempty"`
	Y             *float32 `protobuf:"fixed32,4,opt,name=y" json:"y,omitempty"`
}

func (x *CMsgScalePageToValue) Reset() {
	*x = CMsgScalePageToValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_htmlmessages_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgScalePageToValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgScalePageToValue) ProtoMessage() {}

func (x *CMsgScalePageToValue) ProtoReflect() protoreflect.Message {
	mi := &file_steam_htmlmessages_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgScalePageToValue.ProtoReflect.Descriptor instead.
func (*CMsgScalePageToValue) Descriptor() ([]byte, []int) {
	return file_steam_htmlmessages_proto_rawDescGZIP(), []int{79}
}

func (x *CMsgScalePageToValue) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgScalePageToValue) GetScale() float32 {
	if x != nil && x.Scale != nil {
		return *x.Scale
	}
	return 0
}

func (x *CMsgScalePageToValue) GetX() float32 {
	if x != nil && x.X != nil {
		return *x.X
	}
	return 0
}

func (x *CMsgScalePageToValue) GetY() float32 {
	if x != nil && x.Y != nil {
		return *x.Y
	}
	return 0
}

type CMsgForcePopupsToDirectHWND struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrowserHandle         *uint32 `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	ForceDirectHwndPopups *bool   `protobuf:"varint,2,opt,name=force_direct_hwnd_popups,json=forceDirectHwndPopups" json:"force_direct_hwnd_popups,omitempty"`
}

func (x *CMsgForcePopupsToDirectHWND) Reset() {
	*x = CMsgForcePopupsToDirectHWND{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_htmlmessages_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgForcePopupsToDirectHWND) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgForcePopupsToDirectHWND) ProtoMessage() {}

func (x *CMsgForcePopupsToDirectHWND) ProtoReflect() protoreflect.Message {
	mi := &file_steam_htmlmessages_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgForcePopupsToDirectHWND.ProtoReflect.Descriptor instead.
func (*CMsgForcePopupsToDirectHWND) Descriptor() ([]byte, []int) {
	return file_steam_htmlmessages_proto_rawDescGZIP(), []int{80}
}

func (x *CMsgForcePopupsToDirectHWND) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgForcePopupsToDirectHWND) GetForceDirectHwndPopups() bool {
	if x != nil && x.ForceDirectHwndPopups != nil {
		return *x.ForceDirectHwndPopups
	}
	return false
}

type CMsgScalePageToValueResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrowserHandle *uint32  `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	Zoom          *float32 `protobuf:"fixed32,2,opt,name=zoom" json:"zoom,omitempty"`
}

func (x *CMsgScalePageToValueResponse) Reset() {
	*x = CMsgScalePageToValueResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_htmlmessages_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgScalePageToValueResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgScalePageToValueResponse) ProtoMessage() {}

func (x *CMsgScalePageToValueResponse) ProtoReflect() protoreflect.Message {
	mi := &file_steam_htmlmessages_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgScalePageToValueResponse.ProtoReflect.Descriptor instead.
func (*CMsgScalePageToValueResponse) Descriptor() ([]byte, []int) {
	return file_steam_htmlmessages_proto_rawDescGZIP(), []int{81}
}

func (x *CMsgScalePageToValueResponse) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgScalePageToValueResponse) GetZoom() float32 {
	if x != nil && x.Zoom != nil {
		return *x.Zoom
	}
	return 0
}

type CMsgSavePageToJPEG struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrowserHandle *uint32 `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	Url           *string `protobuf:"bytes,2,opt,name=url" json:"url,omitempty"`
	Filename      *string `protobuf:"bytes,3,opt,name=filename" json:"filename,omitempty"`
	Width         *uint32 `protobuf:"varint,4,opt,name=width" json:"width,omitempty"`
	Height        *uint32 `protobuf:"varint,5,opt,name=height" json:"height,omitempty"`
}

func (x *CMsgSavePageToJPEG) Reset() {
	*x = CMsgSavePageToJPEG{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_htmlmessages_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgSavePageToJPEG) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSavePageToJPEG) ProtoMessage() {}

func (x *CMsgSavePageToJPEG) ProtoReflect() protoreflect.Message {
	mi := &file_steam_htmlmessages_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSavePageToJPEG.ProtoReflect.Descriptor instead.
func (*CMsgSavePageToJPEG) Descriptor() ([]byte, []int) {
	return file_steam_htmlmessages_proto_rawDescGZIP(), []int{82}
}

func (x *CMsgSavePageToJPEG) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgSavePageToJPEG) GetUrl() string {
	if x != nil && x.Url != nil {
		return *x.Url
	}
	return ""
}

func (x *CMsgSavePageToJPEG) GetFilename() string {
	if x != nil && x.Filename != nil {
		return *x.Filename
	}
	return ""
}

func (x *CMsgSavePageToJPEG) GetWidth() uint32 {
	if x != nil && x.Width != nil {
		return *x.Width
	}
	return 0
}

func (x *CMsgSavePageToJPEG) GetHeight() uint32 {
	if x != nil && x.Height != nil {
		return *x.Height
	}
	return 0
}

type CMsgSavePageToJPEGResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrowserHandle *uint32 `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	Url           *string `protobuf:"bytes,2,opt,name=url" json:"url,omitempty"`
	Filename      *string `protobuf:"bytes,3,opt,name=filename" json:"filename,omitempty"`
}

func (x *CMsgSavePageToJPEGResponse) Reset() {
	*x = CMsgSavePageToJPEGResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_htmlmessages_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgSavePageToJPEGResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSavePageToJPEGResponse) ProtoMessage() {}

func (x *CMsgSavePageToJPEGResponse) ProtoReflect() protoreflect.Message {
	mi := &file_steam_htmlmessages_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSavePageToJPEGResponse.ProtoReflect.Descriptor instead.
func (*CMsgSavePageToJPEGResponse) Descriptor() ([]byte, []int) {
	return file_steam_htmlmessages_proto_rawDescGZIP(), []int{83}
}

func (x *CMsgSavePageToJPEGResponse) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgSavePageToJPEGResponse) GetUrl() string {
	if x != nil && x.Url != nil {
		return *x.Url
	}
	return ""
}

func (x *CMsgSavePageToJPEGResponse) GetFilename() string {
	if x != nil && x.Filename != nil {
		return *x.Filename
	}
	return ""
}

type CMsgJSAlert struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrowserHandle *uint32 `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	Message       *string `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
}

func (x *CMsgJSAlert) Reset() {
	*x = CMsgJSAlert{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_htmlmessages_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgJSAlert) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgJSAlert) ProtoMessage() {}

func (x *CMsgJSAlert) ProtoReflect() protoreflect.Message {
	mi := &file_steam_htmlmessages_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgJSAlert.ProtoReflect.Descriptor instead.
func (*CMsgJSAlert) Descriptor() ([]byte, []int) {
	return file_steam_htmlmessages_proto_rawDescGZIP(), []int{84}
}

func (x *CMsgJSAlert) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgJSAlert) GetMessage() string {
	if x != nil && x.Message != nil {
		return *x.Message
	}
	return ""
}

type CMsgJSConfirm struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrowserHandle *uint32 `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	Message       *string `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
}

func (x *CMsgJSConfirm) Reset() {
	*x = CMsgJSConfirm{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_htmlmessages_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgJSConfirm) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgJSConfirm) ProtoMessage() {}

func (x *CMsgJSConfirm) ProtoReflect() protoreflect.Message {
	mi := &file_steam_htmlmessages_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgJSConfirm.ProtoReflect.Descriptor instead.
func (*CMsgJSConfirm) Descriptor() ([]byte, []int) {
	return file_steam_htmlmessages_proto_rawDescGZIP(), []int{85}
}

func (x *CMsgJSConfirm) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgJSConfirm) GetMessage() string {
	if x != nil && x.Message != nil {
		return *x.Message
	}
	return ""
}

type CMsgJSDialogResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrowserHandle *uint32 `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	Result        *bool   `protobuf:"varint,2,opt,name=result" json:"result,omitempty"`
}

func (x *CMsgJSDialogResponse) Reset() {
	*x = CMsgJSDialogResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_htmlmessages_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgJSDialogResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgJSDialogResponse) ProtoMessage() {}

func (x *CMsgJSDialogResponse) ProtoReflect() protoreflect.Message {
	mi := &file_steam_htmlmessages_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgJSDialogResponse.ProtoReflect.Descriptor instead.
func (*CMsgJSDialogResponse) Descriptor() ([]byte, []int) {
	return file_steam_htmlmessages_proto_rawDescGZIP(), []int{86}
}

func (x *CMsgJSDialogResponse) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgJSDialogResponse) GetResult() bool {
	if x != nil && x.Result != nil {
		return *x.Result
	}
	return false
}

type CMsgCanGoBackAndForward struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrowserHandle *uint32 `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	Bgoback       *bool   `protobuf:"varint,2,opt,name=bgoback" json:"bgoback,omitempty"`
	Bgoforward    *bool   `protobuf:"varint,3,opt,name=bgoforward" json:"bgoforward,omitempty"`
}

func (x *CMsgCanGoBackAndForward) Reset() {
	*x = CMsgCanGoBackAndForward{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_htmlmessages_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgCanGoBackAndForward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgCanGoBackAndForward) ProtoMessage() {}

func (x *CMsgCanGoBackAndForward) ProtoReflect() protoreflect.Message {
	mi := &file_steam_htmlmessages_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgCanGoBackAndForward.ProtoReflect.Descriptor instead.
func (*CMsgCanGoBackAndForward) Descriptor() ([]byte, []int) {
	return file_steam_htmlmessages_proto_rawDescGZIP(), []int{87}
}

func (x *CMsgCanGoBackAndForward) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgCanGoBackAndForward) GetBgoback() bool {
	if x != nil && x.Bgoback != nil {
		return *x.Bgoback
	}
	return false
}

func (x *CMsgCanGoBackAndForward) GetBgoforward() bool {
	if x != nil && x.Bgoforward != nil {
		return *x.Bgoforward
	}
	return false
}

type CMsgOpenSteamURL struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrowserHandle *uint32 `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	Url           *string `protobuf:"bytes,2,opt,name=url" json:"url,omitempty"`
	Referrer      *string `protobuf:"bytes,3,opt,name=referrer" json:"referrer,omitempty"`
}

func (x *CMsgOpenSteamURL) Reset() {
	*x = CMsgOpenSteamURL{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_htmlmessages_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgOpenSteamURL) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgOpenSteamURL) ProtoMessage() {}

func (x *CMsgOpenSteamURL) ProtoReflect() protoreflect.Message {
	mi := &file_steam_htmlmessages_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgOpenSteamURL.ProtoReflect.Descriptor instead.
func (*CMsgOpenSteamURL) Descriptor() ([]byte, []int) {
	return file_steam_htmlmessages_proto_rawDescGZIP(), []int{88}
}

func (x *CMsgOpenSteamURL) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgOpenSteamURL) GetUrl() string {
	if x != nil && x.Url != nil {
		return *x.Url
	}
	return ""
}

func (x *CMsgOpenSteamURL) GetReferrer() string {
	if x != nil && x.Referrer != nil {
		return *x.Referrer
	}
	return ""
}

type CMsgSetCookie struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key      *string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Value    *string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
	Path     *string `protobuf:"bytes,3,opt,name=path" json:"path,omitempty"`
	Host     *string `protobuf:"bytes,4,opt,name=host" json:"host,omitempty"`
	Expires  *uint32 `protobuf:"varint,5,opt,name=expires" json:"expires,omitempty"`
	Secure   *bool   `protobuf:"varint,6,opt,name=secure" json:"secure,omitempty"`
	Httponly *bool   `protobuf:"varint,7,opt,name=httponly" json:"httponly,omitempty"`
}

func (x *CMsgSetCookie) Reset() {
	*x = CMsgSetCookie{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_htmlmessages_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgSetCookie) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSetCookie) ProtoMessage() {}

func (x *CMsgSetCookie) ProtoReflect() protoreflect.Message {
	mi := &file_steam_htmlmessages_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSetCookie.ProtoReflect.Descriptor instead.
func (*CMsgSetCookie) Descriptor() ([]byte, []int) {
	return file_steam_htmlmessages_proto_rawDescGZIP(), []int{89}
}

func (x *CMsgSetCookie) GetKey() string {
	if x != nil && x.Key != nil {
		return *x.Key
	}
	return ""
}

func (x *CMsgSetCookie) GetValue() string {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return ""
}

func (x *CMsgSetCookie) GetPath() string {
	if x != nil && x.Path != nil {
		return *x.Path
	}
	return ""
}

func (x *CMsgSetCookie) GetHost() string {
	if x != nil && x.Host != nil {
		return *x.Host
	}
	return ""
}

func (x *CMsgSetCookie) GetExpires() uint32 {
	if x != nil && x.Expires != nil {
		return *x.Expires
	}
	return 0
}

func (x *CMsgSetCookie) GetSecure() bool {
	if x != nil && x.Secure != nil {
		return *x.Secure
	}
	return false
}

func (x *CMsgSetCookie) GetHttponly() bool {
	if x != nil && x.Httponly != nil {
		return *x.Httponly
	}
	return false
}

type CMsgSetTargetFrameRate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrowserHandle    *uint32 `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	NTargetFrameRate *uint32 `protobuf:"varint,2,opt,name=nTargetFrameRate" json:"nTargetFrameRate,omitempty"`
}

func (x *CMsgSetTargetFrameRate) Reset() {
	*x = CMsgSetTargetFrameRate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_htmlmessages_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgSetTargetFrameRate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSetTargetFrameRate) ProtoMessage() {}

func (x *CMsgSetTargetFrameRate) ProtoReflect() protoreflect.Message {
	mi := &file_steam_htmlmessages_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSetTargetFrameRate.ProtoReflect.Descriptor instead.
func (*CMsgSetTargetFrameRate) Descriptor() ([]byte, []int) {
	return file_steam_htmlmessages_proto_rawDescGZIP(), []int{90}
}

func (x *CMsgSetTargetFrameRate) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgSetTargetFrameRate) GetNTargetFrameRate() uint32 {
	if x != nil && x.NTargetFrameRate != nil {
		return *x.NTargetFrameRate
	}
	return 0
}

type CMsgPauseRepaint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrowserHandle *uint32 `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
}

func (x *CMsgPauseRepaint) Reset() {
	*x = CMsgPauseRepaint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_htmlmessages_proto_msgTypes[91]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgPauseRepaint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgPauseRepaint) ProtoMessage() {}

func (x *CMsgPauseRepaint) ProtoReflect() protoreflect.Message {
	mi := &file_steam_htmlmessages_proto_msgTypes[91]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgPauseRepaint.ProtoReflect.Descriptor instead.
func (*CMsgPauseRepaint) Descriptor() ([]byte, []int) {
	return file_steam_htmlmessages_proto_rawDescGZIP(), []int{91}
}

func (x *CMsgPauseRepaint) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

type CMsgFullRepaint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrowserHandle *uint32 `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
}

func (x *CMsgFullRepaint) Reset() {
	*x = CMsgFullRepaint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_htmlmessages_proto_msgTypes[92]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgFullRepaint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgFullRepaint) ProtoMessage() {}

func (x *CMsgFullRepaint) ProtoReflect() protoreflect.Message {
	mi := &file_steam_htmlmessages_proto_msgTypes[92]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgFullRepaint.ProtoReflect.Descriptor instead.
func (*CMsgFullRepaint) Descriptor() ([]byte, []int) {
	return file_steam_htmlmessages_proto_rawDescGZIP(), []int{92}
}

func (x *CMsgFullRepaint) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

type CMsgRequestFullScreen struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrowserHandle *uint32 `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
}

func (x *CMsgRequestFullScreen) Reset() {
	*x = CMsgRequestFullScreen{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_htmlmessages_proto_msgTypes[93]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgRequestFullScreen) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgRequestFullScreen) ProtoMessage() {}

func (x *CMsgRequestFullScreen) ProtoReflect() protoreflect.Message {
	mi := &file_steam_htmlmessages_proto_msgTypes[93]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgRequestFullScreen.ProtoReflect.Descriptor instead.
func (*CMsgRequestFullScreen) Descriptor() ([]byte, []int) {
	return file_steam_htmlmessages_proto_rawDescGZIP(), []int{93}
}

func (x *CMsgRequestFullScreen) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

type CMsgExitFullScreen struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrowserHandle *uint32 `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
}

func (x *CMsgExitFullScreen) Reset() {
	*x = CMsgExitFullScreen{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_htmlmessages_proto_msgTypes[94]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgExitFullScreen) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgExitFullScreen) ProtoMessage() {}

func (x *CMsgExitFullScreen) ProtoReflect() protoreflect.Message {
	mi := &file_steam_htmlmessages_proto_msgTypes[94]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgExitFullScreen.ProtoReflect.Descriptor instead.
func (*CMsgExitFullScreen) Descriptor() ([]byte, []int) {
	return file_steam_htmlmessages_proto_rawDescGZIP(), []int{94}
}

func (x *CMsgExitFullScreen) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

type CMsgToggleFindInPageDialog struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrowserHandle *uint32 `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
}

func (x *CMsgToggleFindInPageDialog) Reset() {
	*x = CMsgToggleFindInPageDialog{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_htmlmessages_proto_msgTypes[95]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgToggleFindInPageDialog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgToggleFindInPageDialog) ProtoMessage() {}

func (x *CMsgToggleFindInPageDialog) ProtoReflect() protoreflect.Message {
	mi := &file_steam_htmlmessages_proto_msgTypes[95]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgToggleFindInPageDialog.ProtoReflect.Descriptor instead.
func (*CMsgToggleFindInPageDialog) Descriptor() ([]byte, []int) {
	return file_steam_htmlmessages_proto_rawDescGZIP(), []int{95}
}

func (x *CMsgToggleFindInPageDialog) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

type CMsgSetPIDShuttingDown struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrowserHandle *uint32 `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
}

func (x *CMsgSetPIDShuttingDown) Reset() {
	*x = CMsgSetPIDShuttingDown{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_htmlmessages_proto_msgTypes[96]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgSetPIDShuttingDown) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSetPIDShuttingDown) ProtoMessage() {}

func (x *CMsgSetPIDShuttingDown) ProtoReflect() protoreflect.Message {
	mi := &file_steam_htmlmessages_proto_msgTypes[96]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSetPIDShuttingDown.ProtoReflect.Descriptor instead.
func (*CMsgSetPIDShuttingDown) Descriptor() ([]byte, []int) {
	return file_steam_htmlmessages_proto_rawDescGZIP(), []int{96}
}

func (x *CMsgSetPIDShuttingDown) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

type CMsgDisableBackgroundThrottling struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrowserHandle *uint32 `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
}

func (x *CMsgDisableBackgroundThrottling) Reset() {
	*x = CMsgDisableBackgroundThrottling{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_htmlmessages_proto_msgTypes[97]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgDisableBackgroundThrottling) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgDisableBackgroundThrottling) ProtoMessage() {}

func (x *CMsgDisableBackgroundThrottling) ProtoReflect() protoreflect.Message {
	mi := &file_steam_htmlmessages_proto_msgTypes[97]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgDisableBackgroundThrottling.ProtoReflect.Descriptor instead.
func (*CMsgDisableBackgroundThrottling) Descriptor() ([]byte, []int) {
	return file_steam_htmlmessages_proto_rawDescGZIP(), []int{97}
}

func (x *CMsgDisableBackgroundThrottling) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

type CMsgAckPIDShuttingDown struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrowserHandle *uint32 `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
}

func (x *CMsgAckPIDShuttingDown) Reset() {
	*x = CMsgAckPIDShuttingDown{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_htmlmessages_proto_msgTypes[98]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgAckPIDShuttingDown) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgAckPIDShuttingDown) ProtoMessage() {}

func (x *CMsgAckPIDShuttingDown) ProtoReflect() protoreflect.Message {
	mi := &file_steam_htmlmessages_proto_msgTypes[98]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgAckPIDShuttingDown.ProtoReflect.Descriptor instead.
func (*CMsgAckPIDShuttingDown) Descriptor() ([]byte, []int) {
	return file_steam_htmlmessages_proto_rawDescGZIP(), []int{98}
}

func (x *CMsgAckPIDShuttingDown) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

type CMsgGetCookiesForURL struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrowserHandle *uint32 `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	Url           *string `protobuf:"bytes,2,opt,name=url" json:"url,omitempty"`
}

func (x *CMsgGetCookiesForURL) Reset() {
	*x = CMsgGetCookiesForURL{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_htmlmessages_proto_msgTypes[99]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGetCookiesForURL) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGetCookiesForURL) ProtoMessage() {}

func (x *CMsgGetCookiesForURL) ProtoReflect() protoreflect.Message {
	mi := &file_steam_htmlmessages_proto_msgTypes[99]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGetCookiesForURL.ProtoReflect.Descriptor instead.
func (*CMsgGetCookiesForURL) Descriptor() ([]byte, []int) {
	return file_steam_htmlmessages_proto_rawDescGZIP(), []int{99}
}

func (x *CMsgGetCookiesForURL) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgGetCookiesForURL) GetUrl() string {
	if x != nil && x.Url != nil {
		return *x.Url
	}
	return ""
}

type CCookie struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Value  *string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
	Domain *string `protobuf:"bytes,3,opt,name=domain" json:"domain,omitempty"`
	Path   *string `protobuf:"bytes,4,opt,name=path" json:"path,omitempty"`
}

func (x *CCookie) Reset() {
	*x = CCookie{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_htmlmessages_proto_msgTypes[100]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CCookie) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CCookie) ProtoMessage() {}

func (x *CCookie) ProtoReflect() protoreflect.Message {
	mi := &file_steam_htmlmessages_proto_msgTypes[100]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CCookie.ProtoReflect.Descriptor instead.
func (*CCookie) Descriptor() ([]byte, []int) {
	return file_steam_htmlmessages_proto_rawDescGZIP(), []int{100}
}

func (x *CCookie) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *CCookie) GetValue() string {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return ""
}

func (x *CCookie) GetDomain() string {
	if x != nil && x.Domain != nil {
		return *x.Domain
	}
	return ""
}

func (x *CCookie) GetPath() string {
	if x != nil && x.Path != nil {
		return *x.Path
	}
	return ""
}

type CMsgGetCookiesForURLResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrowserHandle *uint32    `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	Url           *string    `protobuf:"bytes,2,opt,name=url" json:"url,omitempty"`
	Cookies       []*CCookie `protobuf:"bytes,3,rep,name=cookies" json:"cookies,omitempty"`
}

func (x *CMsgGetCookiesForURLResponse) Reset() {
	*x = CMsgGetCookiesForURLResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_htmlmessages_proto_msgTypes[101]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGetCookiesForURLResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGetCookiesForURLResponse) ProtoMessage() {}

func (x *CMsgGetCookiesForURLResponse) ProtoReflect() protoreflect.Message {
	mi := &file_steam_htmlmessages_proto_msgTypes[101]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGetCookiesForURLResponse.ProtoReflect.Descriptor instead.
func (*CMsgGetCookiesForURLResponse) Descriptor() ([]byte, []int) {
	return file_steam_htmlmessages_proto_rawDescGZIP(), []int{101}
}

func (x *CMsgGetCookiesForURLResponse) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgGetCookiesForURLResponse) GetUrl() string {
	if x != nil && x.Url != nil {
		return *x.Url
	}
	return ""
}

func (x *CMsgGetCookiesForURLResponse) GetCookies() []*CCookie {
	if x != nil {
		return x.Cookies
	}
	return nil
}

type CMsgNodeHasFocus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrowserHandle      *uint32 `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	BInput             *bool   `protobuf:"varint,2,opt,name=bInput" json:"bInput,omitempty"`
	Name               *string `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	Elementtagname     *string `protobuf:"bytes,4,opt,name=elementtagname" json:"elementtagname,omitempty"`
	Searchbuttontext   *string `protobuf:"bytes,5,opt,name=searchbuttontext" json:"searchbuttontext,omitempty"`
	BHasMultipleInputs *bool   `protobuf:"varint,6,opt,name=bHasMultipleInputs" json:"bHasMultipleInputs,omitempty"`
	InputType          *string `protobuf:"bytes,7,opt,name=input_type,json=inputType" json:"input_type,omitempty"`
}

func (x *CMsgNodeHasFocus) Reset() {
	*x = CMsgNodeHasFocus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_htmlmessages_proto_msgTypes[102]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgNodeHasFocus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgNodeHasFocus) ProtoMessage() {}

func (x *CMsgNodeHasFocus) ProtoReflect() protoreflect.Message {
	mi := &file_steam_htmlmessages_proto_msgTypes[102]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgNodeHasFocus.ProtoReflect.Descriptor instead.
func (*CMsgNodeHasFocus) Descriptor() ([]byte, []int) {
	return file_steam_htmlmessages_proto_rawDescGZIP(), []int{102}
}

func (x *CMsgNodeHasFocus) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgNodeHasFocus) GetBInput() bool {
	if x != nil && x.BInput != nil {
		return *x.BInput
	}
	return false
}

func (x *CMsgNodeHasFocus) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *CMsgNodeHasFocus) GetElementtagname() string {
	if x != nil && x.Elementtagname != nil {
		return *x.Elementtagname
	}
	return ""
}

func (x *CMsgNodeHasFocus) GetSearchbuttontext() string {
	if x != nil && x.Searchbuttontext != nil {
		return *x.Searchbuttontext
	}
	return ""
}

func (x *CMsgNodeHasFocus) GetBHasMultipleInputs() bool {
	if x != nil && x.BHasMultipleInputs != nil {
		return *x.BHasMultipleInputs
	}
	return false
}

func (x *CMsgNodeHasFocus) GetInputType() string {
	if x != nil && x.InputType != nil {
		return *x.InputType
	}
	return ""
}

type CMsgZoomToFocusedElement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrowserHandle *uint32 `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
}

func (x *CMsgZoomToFocusedElement) Reset() {
	*x = CMsgZoomToFocusedElement{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_htmlmessages_proto_msgTypes[103]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgZoomToFocusedElement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgZoomToFocusedElement) ProtoMessage() {}

func (x *CMsgZoomToFocusedElement) ProtoReflect() protoreflect.Message {
	mi := &file_steam_htmlmessages_proto_msgTypes[103]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgZoomToFocusedElement.ProtoReflect.Descriptor instead.
func (*CMsgZoomToFocusedElement) Descriptor() ([]byte, []int) {
	return file_steam_htmlmessages_proto_rawDescGZIP(), []int{103}
}

func (x *CMsgZoomToFocusedElement) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

type CMsgCloseFullScreenFlashIfOpen struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrowserHandle *uint32 `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
}

func (x *CMsgCloseFullScreenFlashIfOpen) Reset() {
	*x = CMsgCloseFullScreenFlashIfOpen{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_htmlmessages_proto_msgTypes[104]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgCloseFullScreenFlashIfOpen) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgCloseFullScreenFlashIfOpen) ProtoMessage() {}

func (x *CMsgCloseFullScreenFlashIfOpen) ProtoReflect() protoreflect.Message {
	mi := &file_steam_htmlmessages_proto_msgTypes[104]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgCloseFullScreenFlashIfOpen.ProtoReflect.Descriptor instead.
func (*CMsgCloseFullScreenFlashIfOpen) Descriptor() ([]byte, []int) {
	return file_steam_htmlmessages_proto_rawDescGZIP(), []int{104}
}

func (x *CMsgCloseFullScreenFlashIfOpen) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

type CMsgPauseFullScreenFlashMovieIfOpen struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrowserHandle *uint32 `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
}

func (x *CMsgPauseFullScreenFlashMovieIfOpen) Reset() {
	*x = CMsgPauseFullScreenFlashMovieIfOpen{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_htmlmessages_proto_msgTypes[105]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgPauseFullScreenFlashMovieIfOpen) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgPauseFullScreenFlashMovieIfOpen) ProtoMessage() {}

func (x *CMsgPauseFullScreenFlashMovieIfOpen) ProtoReflect() protoreflect.Message {
	mi := &file_steam_htmlmessages_proto_msgTypes[105]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgPauseFullScreenFlashMovieIfOpen.ProtoReflect.Descriptor instead.
func (*CMsgPauseFullScreenFlashMovieIfOpen) Descriptor() ([]byte, []int) {
	return file_steam_htmlmessages_proto_rawDescGZIP(), []int{105}
}

func (x *CMsgPauseFullScreenFlashMovieIfOpen) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

type CMsgFocusedNodeText struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrowserHandle *uint32 `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
}

func (x *CMsgFocusedNodeText) Reset() {
	*x = CMsgFocusedNodeText{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_htmlmessages_proto_msgTypes[106]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgFocusedNodeText) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgFocusedNodeText) ProtoMessage() {}

func (x *CMsgFocusedNodeText) ProtoReflect() protoreflect.Message {
	mi := &file_steam_htmlmessages_proto_msgTypes[106]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgFocusedNodeText.ProtoReflect.Descriptor instead.
func (*CMsgFocusedNodeText) Descriptor() ([]byte, []int) {
	return file_steam_htmlmessages_proto_rawDescGZIP(), []int{106}
}

func (x *CMsgFocusedNodeText) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

type CMsgFocusedNodeTextResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrowserHandle *uint32 `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	Value         *string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (x *CMsgFocusedNodeTextResponse) Reset() {
	*x = CMsgFocusedNodeTextResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_htmlmessages_proto_msgTypes[107]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgFocusedNodeTextResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgFocusedNodeTextResponse) ProtoMessage() {}

func (x *CMsgFocusedNodeTextResponse) ProtoReflect() protoreflect.Message {
	mi := &file_steam_htmlmessages_proto_msgTypes[107]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgFocusedNodeTextResponse.ProtoReflect.Descriptor instead.
func (*CMsgFocusedNodeTextResponse) Descriptor() ([]byte, []int) {
	return file_steam_htmlmessages_proto_rawDescGZIP(), []int{107}
}

func (x *CMsgFocusedNodeTextResponse) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgFocusedNodeTextResponse) GetValue() string {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return ""
}

type CMsgBuildID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BuildId *uint64 `protobuf:"varint,1,opt,name=build_id,json=buildId" json:"build_id,omitempty"`
}

func (x *CMsgBuildID) Reset() {
	*x = CMsgBuildID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_htmlmessages_proto_msgTypes[108]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgBuildID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgBuildID) ProtoMessage() {}

func (x *CMsgBuildID) ProtoReflect() protoreflect.Message {
	mi := &file_steam_htmlmessages_proto_msgTypes[108]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgBuildID.ProtoReflect.Descriptor instead.
func (*CMsgBuildID) Descriptor() ([]byte, []int) {
	return file_steam_htmlmessages_proto_rawDescGZIP(), []int{108}
}

func (x *CMsgBuildID) GetBuildId() uint64 {
	if x != nil && x.BuildId != nil {
		return *x.BuildId
	}
	return 0
}

type CMsgOpenDevTools struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrowserHandle *uint32 `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
}

func (x *CMsgOpenDevTools) Reset() {
	*x = CMsgOpenDevTools{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_htmlmessages_proto_msgTypes[109]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgOpenDevTools) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgOpenDevTools) ProtoMessage() {}

func (x *CMsgOpenDevTools) ProtoReflect() protoreflect.Message {
	mi := &file_steam_htmlmessages_proto_msgTypes[109]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgOpenDevTools.ProtoReflect.Descriptor instead.
func (*CMsgOpenDevTools) Descriptor() ([]byte, []int) {
	return file_steam_htmlmessages_proto_rawDescGZIP(), []int{109}
}

func (x *CMsgOpenDevTools) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

type CMsgCloseDevTools struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrowserHandle *uint32 `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
}

func (x *CMsgCloseDevTools) Reset() {
	*x = CMsgCloseDevTools{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_htmlmessages_proto_msgTypes[110]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgCloseDevTools) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgCloseDevTools) ProtoMessage() {}

func (x *CMsgCloseDevTools) ProtoReflect() protoreflect.Message {
	mi := &file_steam_htmlmessages_proto_msgTypes[110]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgCloseDevTools.ProtoReflect.Descriptor instead.
func (*CMsgCloseDevTools) Descriptor() ([]byte, []int) {
	return file_steam_htmlmessages_proto_rawDescGZIP(), []int{110}
}

func (x *CMsgCloseDevTools) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

type CMsgUnlockH264 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrowserHandle *uint32 `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	UnlockCode    *string `protobuf:"bytes,2,opt,name=unlock_code,json=unlockCode" json:"unlock_code,omitempty"`
}

func (x *CMsgUnlockH264) Reset() {
	*x = CMsgUnlockH264{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_htmlmessages_proto_msgTypes[111]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgUnlockH264) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgUnlockH264) ProtoMessage() {}

func (x *CMsgUnlockH264) ProtoReflect() protoreflect.Message {
	mi := &file_steam_htmlmessages_proto_msgTypes[111]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgUnlockH264.ProtoReflect.Descriptor instead.
func (*CMsgUnlockH264) Descriptor() ([]byte, []int) {
	return file_steam_htmlmessages_proto_rawDescGZIP(), []int{111}
}

func (x *CMsgUnlockH264) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgUnlockH264) GetUnlockCode() string {
	if x != nil && x.UnlockCode != nil {
		return *x.UnlockCode
	}
	return ""
}

type CMsgScreenInformationChanged struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrowserHandle  *uint32 `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	OverrideWidth  *uint32 `protobuf:"varint,2,opt,name=override_width,json=overrideWidth" json:"override_width,omitempty"`
	OverrideHeight *uint32 `protobuf:"varint,3,opt,name=override_height,json=overrideHeight" json:"override_height,omitempty"`
	MonitorLeft    *uint32 `protobuf:"varint,4,opt,name=monitor_left,json=monitorLeft" json:"monitor_left,omitempty"`
	MonitorTop     *uint32 `protobuf:"varint,5,opt,name=monitor_top,json=monitorTop" json:"monitor_top,omitempty"`
	MonitorRight   *uint32 `protobuf:"varint,6,opt,name=monitor_right,json=monitorRight" json:"monitor_right,omitempty"`
	MonitorBottom  *uint32 `protobuf:"varint,7,opt,name=monitor_bottom,json=monitorBottom" json:"monitor_bottom,omitempty"`
	UsableLeft     *uint32 `protobuf:"varint,8,opt,name=usable_left,json=usableLeft" json:"usable_left,omitempty"`
	UsableTop      *uint32 `protobuf:"varint,9,opt,name=usable_top,json=usableTop" json:"usable_top,omitempty"`
	UsableRight    *uint32 `protobuf:"varint,10,opt,name=usable_right,json=usableRight" json:"usable_right,omitempty"`
	UsableBottom   *uint32 `protobuf:"varint,11,opt,name=usable_bottom,json=usableBottom" json:"usable_bottom,omitempty"`
}

func (x *CMsgScreenInformationChanged) Reset() {
	*x = CMsgScreenInformationChanged{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_htmlmessages_proto_msgTypes[112]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgScreenInformationChanged) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgScreenInformationChanged) ProtoMessage() {}

func (x *CMsgScreenInformationChanged) ProtoReflect() protoreflect.Message {
	mi := &file_steam_htmlmessages_proto_msgTypes[112]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgScreenInformationChanged.ProtoReflect.Descriptor instead.
func (*CMsgScreenInformationChanged) Descriptor() ([]byte, []int) {
	return file_steam_htmlmessages_proto_rawDescGZIP(), []int{112}
}

func (x *CMsgScreenInformationChanged) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgScreenInformationChanged) GetOverrideWidth() uint32 {
	if x != nil && x.OverrideWidth != nil {
		return *x.OverrideWidth
	}
	return 0
}

func (x *CMsgScreenInformationChanged) GetOverrideHeight() uint32 {
	if x != nil && x.OverrideHeight != nil {
		return *x.OverrideHeight
	}
	return 0
}

func (x *CMsgScreenInformationChanged) GetMonitorLeft() uint32 {
	if x != nil && x.MonitorLeft != nil {
		return *x.MonitorLeft
	}
	return 0
}

func (x *CMsgScreenInformationChanged) GetMonitorTop() uint32 {
	if x != nil && x.MonitorTop != nil {
		return *x.MonitorTop
	}
	return 0
}

func (x *CMsgScreenInformationChanged) GetMonitorRight() uint32 {
	if x != nil && x.MonitorRight != nil {
		return *x.MonitorRight
	}
	return 0
}

func (x *CMsgScreenInformationChanged) GetMonitorBottom() uint32 {
	if x != nil && x.MonitorBottom != nil {
		return *x.MonitorBottom
	}
	return 0
}

func (x *CMsgScreenInformationChanged) GetUsableLeft() uint32 {
	if x != nil && x.UsableLeft != nil {
		return *x.UsableLeft
	}
	return 0
}

func (x *CMsgScreenInformationChanged) GetUsableTop() uint32 {
	if x != nil && x.UsableTop != nil {
		return *x.UsableTop
	}
	return 0
}

func (x *CMsgScreenInformationChanged) GetUsableRight() uint32 {
	if x != nil && x.UsableRight != nil {
		return *x.UsableRight
	}
	return 0
}

func (x *CMsgScreenInformationChanged) GetUsableBottom() uint32 {
	if x != nil && x.UsableBottom != nil {
		return *x.UsableBottom
	}
	return 0
}

type CMsgClearAllCookies struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrowserHandle *uint32 `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
}

func (x *CMsgClearAllCookies) Reset() {
	*x = CMsgClearAllCookies{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_htmlmessages_proto_msgTypes[113]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClearAllCookies) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClearAllCookies) ProtoMessage() {}

func (x *CMsgClearAllCookies) ProtoReflect() protoreflect.Message {
	mi := &file_steam_htmlmessages_proto_msgTypes[113]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClearAllCookies.ProtoReflect.Descriptor instead.
func (*CMsgClearAllCookies) Descriptor() ([]byte, []int) {
	return file_steam_htmlmessages_proto_rawDescGZIP(), []int{113}
}

func (x *CMsgClearAllCookies) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

type CMsgScreenDPI struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrowserHandle *uint32  `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	DpiScaling    *float32 `protobuf:"fixed32,2,opt,name=dpi_scaling,json=dpiScaling" json:"dpi_scaling,omitempty"`
}

func (x *CMsgScreenDPI) Reset() {
	*x = CMsgScreenDPI{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_htmlmessages_proto_msgTypes[114]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgScreenDPI) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgScreenDPI) ProtoMessage() {}

func (x *CMsgScreenDPI) ProtoReflect() protoreflect.Message {
	mi := &file_steam_htmlmessages_proto_msgTypes[114]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgScreenDPI.ProtoReflect.Descriptor instead.
func (*CMsgScreenDPI) Descriptor() ([]byte, []int) {
	return file_steam_htmlmessages_proto_rawDescGZIP(), []int{114}
}

func (x *CMsgScreenDPI) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgScreenDPI) GetDpiScaling() float32 {
	if x != nil && x.DpiScaling != nil {
		return *x.DpiScaling
	}
	return 0
}

type CMsgAuthedSteamDomains struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Domains []string `protobuf:"bytes,1,rep,name=domains" json:"domains,omitempty"`
}

func (x *CMsgAuthedSteamDomains) Reset() {
	*x = CMsgAuthedSteamDomains{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_htmlmessages_proto_msgTypes[115]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgAuthedSteamDomains) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgAuthedSteamDomains) ProtoMessage() {}

func (x *CMsgAuthedSteamDomains) ProtoReflect() protoreflect.Message {
	mi := &file_steam_htmlmessages_proto_msgTypes[115]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgAuthedSteamDomains.ProtoReflect.Descriptor instead.
func (*CMsgAuthedSteamDomains) Descriptor() ([]byte, []int) {
	return file_steam_htmlmessages_proto_rawDescGZIP(), []int{115}
}

func (x *CMsgAuthedSteamDomains) GetDomains() []string {
	if x != nil {
		return x.Domains
	}
	return nil
}

type CMsgSteamAuthNeeded struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filler *bool `protobuf:"varint,1,opt,name=filler" json:"filler,omitempty"`
}

func (x *CMsgSteamAuthNeeded) Reset() {
	*x = CMsgSteamAuthNeeded{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_htmlmessages_proto_msgTypes[116]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgSteamAuthNeeded) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSteamAuthNeeded) ProtoMessage() {}

func (x *CMsgSteamAuthNeeded) ProtoReflect() protoreflect.Message {
	mi := &file_steam_htmlmessages_proto_msgTypes[116]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSteamAuthNeeded.ProtoReflect.Descriptor instead.
func (*CMsgSteamAuthNeeded) Descriptor() ([]byte, []int) {
	return file_steam_htmlmessages_proto_rawDescGZIP(), []int{116}
}

func (x *CMsgSteamAuthNeeded) GetFiller() bool {
	if x != nil && x.Filler != nil {
		return *x.Filler
	}
	return false
}

type CMsgSteamAuthCookiesSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success *bool `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
}

func (x *CMsgSteamAuthCookiesSet) Reset() {
	*x = CMsgSteamAuthCookiesSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_htmlmessages_proto_msgTypes[117]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgSteamAuthCookiesSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSteamAuthCookiesSet) ProtoMessage() {}

func (x *CMsgSteamAuthCookiesSet) ProtoReflect() protoreflect.Message {
	mi := &file_steam_htmlmessages_proto_msgTypes[117]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSteamAuthCookiesSet.ProtoReflect.Descriptor instead.
func (*CMsgSteamAuthCookiesSet) Descriptor() ([]byte, []int) {
	return file_steam_htmlmessages_proto_rawDescGZIP(), []int{117}
}

func (x *CMsgSteamAuthCookiesSet) GetSuccess() bool {
	if x != nil && x.Success != nil {
		return *x.Success
	}
	return false
}

type CMsgJSRegisterMethod struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrowserHandle *uint32                `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	Name          *string                `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	MethodType    *EJSRegisterMethodType `protobuf:"varint,3,opt,name=method_type,json=methodType,enum=steam.EJSRegisterMethodType,def=0" json:"method_type,omitempty"`
}

// Default values for CMsgJSRegisterMethod fields.
const (
	Default_CMsgJSRegisterMethod_MethodType = EJSRegisterMethodType_k_EJSRegisterMethodType_Invalid
)

func (x *CMsgJSRegisterMethod) Reset() {
	*x = CMsgJSRegisterMethod{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_htmlmessages_proto_msgTypes[118]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgJSRegisterMethod) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgJSRegisterMethod) ProtoMessage() {}

func (x *CMsgJSRegisterMethod) ProtoReflect() protoreflect.Message {
	mi := &file_steam_htmlmessages_proto_msgTypes[118]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgJSRegisterMethod.ProtoReflect.Descriptor instead.
func (*CMsgJSRegisterMethod) Descriptor() ([]byte, []int) {
	return file_steam_htmlmessages_proto_rawDescGZIP(), []int{118}
}

func (x *CMsgJSRegisterMethod) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgJSRegisterMethod) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *CMsgJSRegisterMethod) GetMethodType() EJSRegisterMethodType {
	if x != nil && x.MethodType != nil {
		return *x.MethodType
	}
	return Default_CMsgJSRegisterMethod_MethodType
}

type CJSMethodArgument struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JsonData       *string `protobuf:"bytes,1,opt,name=json_data,json=jsonData" json:"json_data,omitempty"`
	FunctionHandle *uint64 `protobuf:"varint,2,opt,name=function_handle,json=functionHandle" json:"function_handle,omitempty"`
}

func (x *CJSMethodArgument) Reset() {
	*x = CJSMethodArgument{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_htmlmessages_proto_msgTypes[119]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CJSMethodArgument) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CJSMethodArgument) ProtoMessage() {}

func (x *CJSMethodArgument) ProtoReflect() protoreflect.Message {
	mi := &file_steam_htmlmessages_proto_msgTypes[119]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CJSMethodArgument.ProtoReflect.Descriptor instead.
func (*CJSMethodArgument) Descriptor() ([]byte, []int) {
	return file_steam_htmlmessages_proto_rawDescGZIP(), []int{119}
}

func (x *CJSMethodArgument) GetJsonData() string {
	if x != nil && x.JsonData != nil {
		return *x.JsonData
	}
	return ""
}

func (x *CJSMethodArgument) GetFunctionHandle() uint64 {
	if x != nil && x.FunctionHandle != nil {
		return *x.FunctionHandle
	}
	return 0
}

type CMsgJSValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BoolValue        *bool                           `protobuf:"varint,1,opt,name=bool_value,json=boolValue" json:"bool_value,omitempty"`
	IntValue         *int32                          `protobuf:"varint,2,opt,name=int_value,json=intValue" json:"int_value,omitempty"`
	UintValue        *uint32                         `protobuf:"varint,3,opt,name=uint_value,json=uintValue" json:"uint_value,omitempty"`
	DoubleValue      *float64                        `protobuf:"fixed64,4,opt,name=double_value,json=doubleValue" json:"double_value,omitempty"`
	StringValue      *string                         `protobuf:"bytes,5,opt,name=string_value,json=stringValue" json:"string_value,omitempty"`
	FunctionHandle   *uint64                         `protobuf:"varint,6,opt,name=function_handle,json=functionHandle" json:"function_handle,omitempty"`
	IsArray          *bool                           `protobuf:"varint,8,opt,name=is_array,json=isArray" json:"is_array,omitempty"`
	ArrayValues      []*CMsgJSValue                  `protobuf:"bytes,9,rep,name=array_values,json=arrayValues" json:"array_values,omitempty"`
	IsObject         *bool                           `protobuf:"varint,10,opt,name=is_object,json=isObject" json:"is_object,omitempty"`
	ObjectProperties []*CMsgJSValue_JSObjectProperty `protobuf:"bytes,11,rep,name=object_properties,json=objectProperties" json:"object_properties,omitempty"`
}

func (x *CMsgJSValue) Reset() {
	*x = CMsgJSValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_htmlmessages_proto_msgTypes[120]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgJSValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgJSValue) ProtoMessage() {}

func (x *CMsgJSValue) ProtoReflect() protoreflect.Message {
	mi := &file_steam_htmlmessages_proto_msgTypes[120]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgJSValue.ProtoReflect.Descriptor instead.
func (*CMsgJSValue) Descriptor() ([]byte, []int) {
	return file_steam_htmlmessages_proto_rawDescGZIP(), []int{120}
}

func (x *CMsgJSValue) GetBoolValue() bool {
	if x != nil && x.BoolValue != nil {
		return *x.BoolValue
	}
	return false
}

func (x *CMsgJSValue) GetIntValue() int32 {
	if x != nil && x.IntValue != nil {
		return *x.IntValue
	}
	return 0
}

func (x *CMsgJSValue) GetUintValue() uint32 {
	if x != nil && x.UintValue != nil {
		return *x.UintValue
	}
	return 0
}

func (x *CMsgJSValue) GetDoubleValue() float64 {
	if x != nil && x.DoubleValue != nil {
		return *x.DoubleValue
	}
	return 0
}

func (x *CMsgJSValue) GetStringValue() string {
	if x != nil && x.StringValue != nil {
		return *x.StringValue
	}
	return ""
}

func (x *CMsgJSValue) GetFunctionHandle() uint64 {
	if x != nil && x.FunctionHandle != nil {
		return *x.FunctionHandle
	}
	return 0
}

func (x *CMsgJSValue) GetIsArray() bool {
	if x != nil && x.IsArray != nil {
		return *x.IsArray
	}
	return false
}

func (x *CMsgJSValue) GetArrayValues() []*CMsgJSValue {
	if x != nil {
		return x.ArrayValues
	}
	return nil
}

func (x *CMsgJSValue) GetIsObject() bool {
	if x != nil && x.IsObject != nil {
		return *x.IsObject
	}
	return false
}

func (x *CMsgJSValue) GetObjectProperties() []*CMsgJSValue_JSObjectProperty {
	if x != nil {
		return x.ObjectProperties
	}
	return nil
}

type CMsgJSMethodCall struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrowserHandle *uint32        `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	Name          *string        `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Arguments     []*CMsgJSValue `protobuf:"bytes,3,rep,name=arguments" json:"arguments,omitempty"`
}

func (x *CMsgJSMethodCall) Reset() {
	*x = CMsgJSMethodCall{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_htmlmessages_proto_msgTypes[121]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgJSMethodCall) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgJSMethodCall) ProtoMessage() {}

func (x *CMsgJSMethodCall) ProtoReflect() protoreflect.Message {
	mi := &file_steam_htmlmessages_proto_msgTypes[121]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgJSMethodCall.ProtoReflect.Descriptor instead.
func (*CMsgJSMethodCall) Descriptor() ([]byte, []int) {
	return file_steam_htmlmessages_proto_rawDescGZIP(), []int{121}
}

func (x *CMsgJSMethodCall) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgJSMethodCall) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *CMsgJSMethodCall) GetArguments() []*CMsgJSValue {
	if x != nil {
		return x.Arguments
	}
	return nil
}

type CMsgJSExecuteCallback struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrowserHandle  *uint32        `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	FunctionHandle *uint64        `protobuf:"varint,2,opt,name=function_handle,json=functionHandle" json:"function_handle,omitempty"`
	Arguments      []*CMsgJSValue `protobuf:"bytes,3,rep,name=arguments" json:"arguments,omitempty"`
}

func (x *CMsgJSExecuteCallback) Reset() {
	*x = CMsgJSExecuteCallback{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_htmlmessages_proto_msgTypes[122]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgJSExecuteCallback) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgJSExecuteCallback) ProtoMessage() {}

func (x *CMsgJSExecuteCallback) ProtoReflect() protoreflect.Message {
	mi := &file_steam_htmlmessages_proto_msgTypes[122]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgJSExecuteCallback.ProtoReflect.Descriptor instead.
func (*CMsgJSExecuteCallback) Descriptor() ([]byte, []int) {
	return file_steam_htmlmessages_proto_rawDescGZIP(), []int{122}
}

func (x *CMsgJSExecuteCallback) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgJSExecuteCallback) GetFunctionHandle() uint64 {
	if x != nil && x.FunctionHandle != nil {
		return *x.FunctionHandle
	}
	return 0
}

func (x *CMsgJSExecuteCallback) GetArguments() []*CMsgJSValue {
	if x != nil {
		return x.Arguments
	}
	return nil
}

type CMsgJSReleaseCallback struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrowserHandle  *uint32 `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	FunctionHandle *uint64 `protobuf:"varint,2,opt,name=function_handle,json=functionHandle" json:"function_handle,omitempty"`
}

func (x *CMsgJSReleaseCallback) Reset() {
	*x = CMsgJSReleaseCallback{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_htmlmessages_proto_msgTypes[123]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgJSReleaseCallback) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgJSReleaseCallback) ProtoMessage() {}

func (x *CMsgJSReleaseCallback) ProtoReflect() protoreflect.Message {
	mi := &file_steam_htmlmessages_proto_msgTypes[123]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgJSReleaseCallback.ProtoReflect.Descriptor instead.
func (*CMsgJSReleaseCallback) Descriptor() ([]byte, []int) {
	return file_steam_htmlmessages_proto_rawDescGZIP(), []int{123}
}

func (x *CMsgJSReleaseCallback) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgJSReleaseCallback) GetFunctionHandle() uint64 {
	if x != nil && x.FunctionHandle != nil {
		return *x.FunctionHandle
	}
	return 0
}

type CMsgJSRaiseException struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrowserHandle *uint32 `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	Exception     *string `protobuf:"bytes,2,opt,name=exception" json:"exception,omitempty"`
}

func (x *CMsgJSRaiseException) Reset() {
	*x = CMsgJSRaiseException{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_htmlmessages_proto_msgTypes[124]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgJSRaiseException) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgJSRaiseException) ProtoMessage() {}

func (x *CMsgJSRaiseException) ProtoReflect() protoreflect.Message {
	mi := &file_steam_htmlmessages_proto_msgTypes[124]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgJSRaiseException.ProtoReflect.Descriptor instead.
func (*CMsgJSRaiseException) Descriptor() ([]byte, []int) {
	return file_steam_htmlmessages_proto_rawDescGZIP(), []int{124}
}

func (x *CMsgJSRaiseException) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgJSRaiseException) GetException() string {
	if x != nil && x.Exception != nil {
		return *x.Exception
	}
	return ""
}

type CMsgLoadLocalization struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrowserHandle    *uint32 `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	LocalizationPath *string `protobuf:"bytes,2,opt,name=localization_path,json=localizationPath" json:"localization_path,omitempty"`
	Language         *string `protobuf:"bytes,3,opt,name=language" json:"language,omitempty"`
}

func (x *CMsgLoadLocalization) Reset() {
	*x = CMsgLoadLocalization{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_htmlmessages_proto_msgTypes[125]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgLoadLocalization) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgLoadLocalization) ProtoMessage() {}

func (x *CMsgLoadLocalization) ProtoReflect() protoreflect.Message {
	mi := &file_steam_htmlmessages_proto_msgTypes[125]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgLoadLocalization.ProtoReflect.Descriptor instead.
func (*CMsgLoadLocalization) Descriptor() ([]byte, []int) {
	return file_steam_htmlmessages_proto_rawDescGZIP(), []int{125}
}

func (x *CMsgLoadLocalization) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgLoadLocalization) GetLocalizationPath() string {
	if x != nil && x.LocalizationPath != nil {
		return *x.LocalizationPath
	}
	return ""
}

func (x *CMsgLoadLocalization) GetLanguage() string {
	if x != nil && x.Language != nil {
		return *x.Language
	}
	return ""
}

type CMsgJumpListLink struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DisplayName *string `protobuf:"bytes,1,opt,name=display_name,json=displayName" json:"display_name,omitempty"`
	UrlLink     *string `protobuf:"bytes,2,opt,name=url_link,json=urlLink" json:"url_link,omitempty"`
	IconPath    *string `protobuf:"bytes,3,opt,name=icon_path,json=iconPath" json:"icon_path,omitempty"`
}

func (x *CMsgJumpListLink) Reset() {
	*x = CMsgJumpListLink{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_htmlmessages_proto_msgTypes[126]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgJumpListLink) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgJumpListLink) ProtoMessage() {}

func (x *CMsgJumpListLink) ProtoReflect() protoreflect.Message {
	mi := &file_steam_htmlmessages_proto_msgTypes[126]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgJumpListLink.ProtoReflect.Descriptor instead.
func (*CMsgJumpListLink) Descriptor() ([]byte, []int) {
	return file_steam_htmlmessages_proto_rawDescGZIP(), []int{126}
}

func (x *CMsgJumpListLink) GetDisplayName() string {
	if x != nil && x.DisplayName != nil {
		return *x.DisplayName
	}
	return ""
}

func (x *CMsgJumpListLink) GetUrlLink() string {
	if x != nil && x.UrlLink != nil {
		return *x.UrlLink
	}
	return ""
}

func (x *CMsgJumpListLink) GetIconPath() string {
	if x != nil && x.IconPath != nil {
		return *x.IconPath
	}
	return ""
}

type CMSgJumpListMRUApp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Appid       *uint32 `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	DisplayName *string `protobuf:"bytes,2,opt,name=display_name,json=displayName" json:"display_name,omitempty"`
	UrlLink     *string `protobuf:"bytes,3,opt,name=url_link,json=urlLink" json:"url_link,omitempty"`
	IconPath    *string `protobuf:"bytes,4,opt,name=icon_path,json=iconPath" json:"icon_path,omitempty"`
}

func (x *CMSgJumpListMRUApp) Reset() {
	*x = CMSgJumpListMRUApp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_htmlmessages_proto_msgTypes[127]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMSgJumpListMRUApp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMSgJumpListMRUApp) ProtoMessage() {}

func (x *CMSgJumpListMRUApp) ProtoReflect() protoreflect.Message {
	mi := &file_steam_htmlmessages_proto_msgTypes[127]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMSgJumpListMRUApp.ProtoReflect.Descriptor instead.
func (*CMSgJumpListMRUApp) Descriptor() ([]byte, []int) {
	return file_steam_htmlmessages_proto_rawDescGZIP(), []int{127}
}

func (x *CMSgJumpListMRUApp) GetAppid() uint32 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

func (x *CMSgJumpListMRUApp) GetDisplayName() string {
	if x != nil && x.DisplayName != nil {
		return *x.DisplayName
	}
	return ""
}

func (x *CMSgJumpListMRUApp) GetUrlLink() string {
	if x != nil && x.UrlLink != nil {
		return *x.UrlLink
	}
	return ""
}

func (x *CMSgJumpListMRUApp) GetIconPath() string {
	if x != nil && x.IconPath != nil {
		return *x.IconPath
	}
	return ""
}

type CMsgSetJumpList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SteamPath *string               `protobuf:"bytes,1,opt,name=steam_path,json=steamPath" json:"steam_path,omitempty"`
	MruTitle  *string               `protobuf:"bytes,2,opt,name=mru_title,json=mruTitle" json:"mru_title,omitempty"`
	Apps      []*CMSgJumpListMRUApp `protobuf:"bytes,3,rep,name=apps" json:"apps,omitempty"`
	Links     []*CMsgJumpListLink   `protobuf:"bytes,4,rep,name=links" json:"links,omitempty"`
}

func (x *CMsgSetJumpList) Reset() {
	*x = CMsgSetJumpList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_htmlmessages_proto_msgTypes[128]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgSetJumpList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSetJumpList) ProtoMessage() {}

func (x *CMsgSetJumpList) ProtoReflect() protoreflect.Message {
	mi := &file_steam_htmlmessages_proto_msgTypes[128]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSetJumpList.ProtoReflect.Descriptor instead.
func (*CMsgSetJumpList) Descriptor() ([]byte, []int) {
	return file_steam_htmlmessages_proto_rawDescGZIP(), []int{128}
}

func (x *CMsgSetJumpList) GetSteamPath() string {
	if x != nil && x.SteamPath != nil {
		return *x.SteamPath
	}
	return ""
}

func (x *CMsgSetJumpList) GetMruTitle() string {
	if x != nil && x.MruTitle != nil {
		return *x.MruTitle
	}
	return ""
}

func (x *CMsgSetJumpList) GetApps() []*CMSgJumpListMRUApp {
	if x != nil {
		return x.Apps
	}
	return nil
}

func (x *CMsgSetJumpList) GetLinks() []*CMsgJumpListLink {
	if x != nil {
		return x.Links
	}
	return nil
}

type CMsgSetGameOverlayTargetPIDs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrowserHandle *uint32  `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	TargetPid     []uint32 `protobuf:"varint,2,rep,name=target_pid,json=targetPid" json:"target_pid,omitempty"`
}

func (x *CMsgSetGameOverlayTargetPIDs) Reset() {
	*x = CMsgSetGameOverlayTargetPIDs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_htmlmessages_proto_msgTypes[129]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgSetGameOverlayTargetPIDs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSetGameOverlayTargetPIDs) ProtoMessage() {}

func (x *CMsgSetGameOverlayTargetPIDs) ProtoReflect() protoreflect.Message {
	mi := &file_steam_htmlmessages_proto_msgTypes[129]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSetGameOverlayTargetPIDs.ProtoReflect.Descriptor instead.
func (*CMsgSetGameOverlayTargetPIDs) Descriptor() ([]byte, []int) {
	return file_steam_htmlmessages_proto_rawDescGZIP(), []int{129}
}

func (x *CMsgSetGameOverlayTargetPIDs) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgSetGameOverlayTargetPIDs) GetTargetPid() []uint32 {
	if x != nil {
		return x.TargetPid
	}
	return nil
}

type CMsgGameOverlayTargetTextureID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrowserHandle *uint32 `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	TargetPid     *uint32 `protobuf:"varint,2,opt,name=target_pid,json=targetPid" json:"target_pid,omitempty"`
	TextureHandle *uint32 `protobuf:"varint,3,opt,name=texture_handle,json=textureHandle" json:"texture_handle,omitempty"`
}

func (x *CMsgGameOverlayTargetTextureID) Reset() {
	*x = CMsgGameOverlayTargetTextureID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_htmlmessages_proto_msgTypes[130]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGameOverlayTargetTextureID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGameOverlayTargetTextureID) ProtoMessage() {}

func (x *CMsgGameOverlayTargetTextureID) ProtoReflect() protoreflect.Message {
	mi := &file_steam_htmlmessages_proto_msgTypes[130]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGameOverlayTargetTextureID.ProtoReflect.Descriptor instead.
func (*CMsgGameOverlayTargetTextureID) Descriptor() ([]byte, []int) {
	return file_steam_htmlmessages_proto_rawDescGZIP(), []int{130}
}

func (x *CMsgGameOverlayTargetTextureID) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgGameOverlayTargetTextureID) GetTargetPid() uint32 {
	if x != nil && x.TargetPid != nil {
		return *x.TargetPid
	}
	return 0
}

func (x *CMsgGameOverlayTargetTextureID) GetTextureHandle() uint32 {
	if x != nil && x.TextureHandle != nil {
		return *x.TextureHandle
	}
	return 0
}

type CMsgDraggableRegionsChanged struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrowserHandle *uint32                                       `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	Rects         []*CMsgDraggableRegionsChanged_DraggableRects `protobuf:"bytes,2,rep,name=rects" json:"rects,omitempty"`
}

func (x *CMsgDraggableRegionsChanged) Reset() {
	*x = CMsgDraggableRegionsChanged{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_htmlmessages_proto_msgTypes[131]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgDraggableRegionsChanged) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgDraggableRegionsChanged) ProtoMessage() {}

func (x *CMsgDraggableRegionsChanged) ProtoReflect() protoreflect.Message {
	mi := &file_steam_htmlmessages_proto_msgTypes[131]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgDraggableRegionsChanged.ProtoReflect.Descriptor instead.
func (*CMsgDraggableRegionsChanged) Descriptor() ([]byte, []int) {
	return file_steam_htmlmessages_proto_rawDescGZIP(), []int{131}
}

func (x *CMsgDraggableRegionsChanged) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgDraggableRegionsChanged) GetRects() []*CMsgDraggableRegionsChanged_DraggableRects {
	if x != nil {
		return x.Rects
	}
	return nil
}

type CMsgResizeGripChanged struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrowserHandle *uint32 `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	Width         *int32  `protobuf:"varint,2,opt,name=width" json:"width,omitempty"`
	Height        *int32  `protobuf:"varint,3,opt,name=height" json:"height,omitempty"`
}

func (x *CMsgResizeGripChanged) Reset() {
	*x = CMsgResizeGripChanged{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_htmlmessages_proto_msgTypes[132]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgResizeGripChanged) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgResizeGripChanged) ProtoMessage() {}

func (x *CMsgResizeGripChanged) ProtoReflect() protoreflect.Message {
	mi := &file_steam_htmlmessages_proto_msgTypes[132]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgResizeGripChanged.ProtoReflect.Descriptor instead.
func (*CMsgResizeGripChanged) Descriptor() ([]byte, []int) {
	return file_steam_htmlmessages_proto_rawDescGZIP(), []int{132}
}

func (x *CMsgResizeGripChanged) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgResizeGripChanged) GetWidth() int32 {
	if x != nil && x.Width != nil {
		return *x.Width
	}
	return 0
}

func (x *CMsgResizeGripChanged) GetHeight() int32 {
	if x != nil && x.Height != nil {
		return *x.Height
	}
	return 0
}

type CMsgSetWindowPosition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrowserHandle *uint32 `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	X             *int32  `protobuf:"varint,2,opt,name=x" json:"x,omitempty"`
	Y             *int32  `protobuf:"varint,3,opt,name=y" json:"y,omitempty"`
	Width         *int32  `protobuf:"varint,4,opt,name=width" json:"width,omitempty"`
	Height        *int32  `protobuf:"varint,5,opt,name=height" json:"height,omitempty"`
}

func (x *CMsgSetWindowPosition) Reset() {
	*x = CMsgSetWindowPosition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_htmlmessages_proto_msgTypes[133]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgSetWindowPosition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSetWindowPosition) ProtoMessage() {}

func (x *CMsgSetWindowPosition) ProtoReflect() protoreflect.Message {
	mi := &file_steam_htmlmessages_proto_msgTypes[133]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSetWindowPosition.ProtoReflect.Descriptor instead.
func (*CMsgSetWindowPosition) Descriptor() ([]byte, []int) {
	return file_steam_htmlmessages_proto_rawDescGZIP(), []int{133}
}

func (x *CMsgSetWindowPosition) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgSetWindowPosition) GetX() int32 {
	if x != nil && x.X != nil {
		return *x.X
	}
	return 0
}

func (x *CMsgSetWindowPosition) GetY() int32 {
	if x != nil && x.Y != nil {
		return *x.Y
	}
	return 0
}

func (x *CMsgSetWindowPosition) GetWidth() int32 {
	if x != nil && x.Width != nil {
		return *x.Width
	}
	return 0
}

func (x *CMsgSetWindowPosition) GetHeight() int32 {
	if x != nil && x.Height != nil {
		return *x.Height
	}
	return 0
}

type CMsgShowWindow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrowserHandle *uint32 `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
}

func (x *CMsgShowWindow) Reset() {
	*x = CMsgShowWindow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_htmlmessages_proto_msgTypes[134]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgShowWindow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgShowWindow) ProtoMessage() {}

func (x *CMsgShowWindow) ProtoReflect() protoreflect.Message {
	mi := &file_steam_htmlmessages_proto_msgTypes[134]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgShowWindow.ProtoReflect.Descriptor instead.
func (*CMsgShowWindow) Descriptor() ([]byte, []int) {
	return file_steam_htmlmessages_proto_rawDescGZIP(), []int{134}
}

func (x *CMsgShowWindow) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

type CMsgHideWindow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrowserHandle *uint32 `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
}

func (x *CMsgHideWindow) Reset() {
	*x = CMsgHideWindow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_htmlmessages_proto_msgTypes[135]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgHideWindow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgHideWindow) ProtoMessage() {}

func (x *CMsgHideWindow) ProtoReflect() protoreflect.Message {
	mi := &file_steam_htmlmessages_proto_msgTypes[135]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgHideWindow.ProtoReflect.Descriptor instead.
func (*CMsgHideWindow) Descriptor() ([]byte, []int) {
	return file_steam_htmlmessages_proto_rawDescGZIP(), []int{135}
}

func (x *CMsgHideWindow) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

type CMsgBringWindowToFront struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrowserHandle *uint32 `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
}

func (x *CMsgBringWindowToFront) Reset() {
	*x = CMsgBringWindowToFront{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_htmlmessages_proto_msgTypes[136]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgBringWindowToFront) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgBringWindowToFront) ProtoMessage() {}

func (x *CMsgBringWindowToFront) ProtoReflect() protoreflect.Message {
	mi := &file_steam_htmlmessages_proto_msgTypes[136]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgBringWindowToFront.ProtoReflect.Descriptor instead.
func (*CMsgBringWindowToFront) Descriptor() ([]byte, []int) {
	return file_steam_htmlmessages_proto_rawDescGZIP(), []int{136}
}

func (x *CMsgBringWindowToFront) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

type CMsgSetForegroundWindow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrowserHandle *uint32 `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
}

func (x *CMsgSetForegroundWindow) Reset() {
	*x = CMsgSetForegroundWindow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_htmlmessages_proto_msgTypes[137]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgSetForegroundWindow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSetForegroundWindow) ProtoMessage() {}

func (x *CMsgSetForegroundWindow) ProtoReflect() protoreflect.Message {
	mi := &file_steam_htmlmessages_proto_msgTypes[137]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSetForegroundWindow.ProtoReflect.Descriptor instead.
func (*CMsgSetForegroundWindow) Descriptor() ([]byte, []int) {
	return file_steam_htmlmessages_proto_rawDescGZIP(), []int{137}
}

func (x *CMsgSetForegroundWindow) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

type CMsgMaximizeRestoreWindow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrowserHandle *uint32 `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
}

func (x *CMsgMaximizeRestoreWindow) Reset() {
	*x = CMsgMaximizeRestoreWindow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_htmlmessages_proto_msgTypes[138]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgMaximizeRestoreWindow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgMaximizeRestoreWindow) ProtoMessage() {}

func (x *CMsgMaximizeRestoreWindow) ProtoReflect() protoreflect.Message {
	mi := &file_steam_htmlmessages_proto_msgTypes[138]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgMaximizeRestoreWindow.ProtoReflect.Descriptor instead.
func (*CMsgMaximizeRestoreWindow) Descriptor() ([]byte, []int) {
	return file_steam_htmlmessages_proto_rawDescGZIP(), []int{138}
}

func (x *CMsgMaximizeRestoreWindow) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

type CMsgMinimizeWindow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrowserHandle *uint32 `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
}

func (x *CMsgMinimizeWindow) Reset() {
	*x = CMsgMinimizeWindow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_htmlmessages_proto_msgTypes[139]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgMinimizeWindow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgMinimizeWindow) ProtoMessage() {}

func (x *CMsgMinimizeWindow) ProtoReflect() protoreflect.Message {
	mi := &file_steam_htmlmessages_proto_msgTypes[139]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgMinimizeWindow.ProtoReflect.Descriptor instead.
func (*CMsgMinimizeWindow) Descriptor() ([]byte, []int) {
	return file_steam_htmlmessages_proto_rawDescGZIP(), []int{139}
}

func (x *CMsgMinimizeWindow) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

type CMsgShowBrowserContextMenu struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrowserHandle *uint32 `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
}

func (x *CMsgShowBrowserContextMenu) Reset() {
	*x = CMsgShowBrowserContextMenu{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_htmlmessages_proto_msgTypes[140]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgShowBrowserContextMenu) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgShowBrowserContextMenu) ProtoMessage() {}

func (x *CMsgShowBrowserContextMenu) ProtoReflect() protoreflect.Message {
	mi := &file_steam_htmlmessages_proto_msgTypes[140]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgShowBrowserContextMenu.ProtoReflect.Descriptor instead.
func (*CMsgShowBrowserContextMenu) Descriptor() ([]byte, []int) {
	return file_steam_htmlmessages_proto_rawDescGZIP(), []int{140}
}

func (x *CMsgShowBrowserContextMenu) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

type CMsgImeSetComposition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrowserHandle *uint32 `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	Text          *string `protobuf:"bytes,2,opt,name=text" json:"text,omitempty"`
}

func (x *CMsgImeSetComposition) Reset() {
	*x = CMsgImeSetComposition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_htmlmessages_proto_msgTypes[141]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgImeSetComposition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgImeSetComposition) ProtoMessage() {}

func (x *CMsgImeSetComposition) ProtoReflect() protoreflect.Message {
	mi := &file_steam_htmlmessages_proto_msgTypes[141]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgImeSetComposition.ProtoReflect.Descriptor instead.
func (*CMsgImeSetComposition) Descriptor() ([]byte, []int) {
	return file_steam_htmlmessages_proto_rawDescGZIP(), []int{141}
}

func (x *CMsgImeSetComposition) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgImeSetComposition) GetText() string {
	if x != nil && x.Text != nil {
		return *x.Text
	}
	return ""
}

type CMsgImeCommitText struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrowserHandle *uint32 `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	Text          *string `protobuf:"bytes,2,opt,name=text" json:"text,omitempty"`
}

func (x *CMsgImeCommitText) Reset() {
	*x = CMsgImeCommitText{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_htmlmessages_proto_msgTypes[142]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgImeCommitText) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgImeCommitText) ProtoMessage() {}

func (x *CMsgImeCommitText) ProtoReflect() protoreflect.Message {
	mi := &file_steam_htmlmessages_proto_msgTypes[142]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgImeCommitText.ProtoReflect.Descriptor instead.
func (*CMsgImeCommitText) Descriptor() ([]byte, []int) {
	return file_steam_htmlmessages_proto_rawDescGZIP(), []int{142}
}

func (x *CMsgImeCommitText) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgImeCommitText) GetText() string {
	if x != nil && x.Text != nil {
		return *x.Text
	}
	return ""
}

type CMsgImeCancelComposition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrowserHandle *uint32 `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
}

func (x *CMsgImeCancelComposition) Reset() {
	*x = CMsgImeCancelComposition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_htmlmessages_proto_msgTypes[143]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgImeCancelComposition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgImeCancelComposition) ProtoMessage() {}

func (x *CMsgImeCancelComposition) ProtoReflect() protoreflect.Message {
	mi := &file_steam_htmlmessages_proto_msgTypes[143]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgImeCancelComposition.ProtoReflect.Descriptor instead.
func (*CMsgImeCancelComposition) Descriptor() ([]byte, []int) {
	return file_steam_htmlmessages_proto_rawDescGZIP(), []int{143}
}

func (x *CMsgImeCancelComposition) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

type CMsgImeCompositionRangeChanged struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrowserHandle *uint32 `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	X             *uint32 `protobuf:"varint,2,opt,name=x" json:"x,omitempty"`
	Y             *uint32 `protobuf:"varint,3,opt,name=y" json:"y,omitempty"`
}

func (x *CMsgImeCompositionRangeChanged) Reset() {
	*x = CMsgImeCompositionRangeChanged{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_htmlmessages_proto_msgTypes[144]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgImeCompositionRangeChanged) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgImeCompositionRangeChanged) ProtoMessage() {}

func (x *CMsgImeCompositionRangeChanged) ProtoReflect() protoreflect.Message {
	mi := &file_steam_htmlmessages_proto_msgTypes[144]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgImeCompositionRangeChanged.ProtoReflect.Descriptor instead.
func (*CMsgImeCompositionRangeChanged) Descriptor() ([]byte, []int) {
	return file_steam_htmlmessages_proto_rawDescGZIP(), []int{144}
}

func (x *CMsgImeCompositionRangeChanged) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgImeCompositionRangeChanged) GetX() uint32 {
	if x != nil && x.X != nil {
		return *x.X
	}
	return 0
}

func (x *CMsgImeCompositionRangeChanged) GetY() uint32 {
	if x != nil && x.Y != nil {
		return *x.Y
	}
	return 0
}

type CMsgInspectElement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrowserHandle *uint32 `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	X             *uint32 `protobuf:"varint,2,opt,name=x" json:"x,omitempty"`
	Y             *uint32 `protobuf:"varint,3,opt,name=y" json:"y,omitempty"`
}

func (x *CMsgInspectElement) Reset() {
	*x = CMsgInspectElement{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_htmlmessages_proto_msgTypes[145]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgInspectElement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgInspectElement) ProtoMessage() {}

func (x *CMsgInspectElement) ProtoReflect() protoreflect.Message {
	mi := &file_steam_htmlmessages_proto_msgTypes[145]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgInspectElement.ProtoReflect.Descriptor instead.
func (*CMsgInspectElement) Descriptor() ([]byte, []int) {
	return file_steam_htmlmessages_proto_rawDescGZIP(), []int{145}
}

func (x *CMsgInspectElement) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgInspectElement) GetX() uint32 {
	if x != nil && x.X != nil {
		return *x.X
	}
	return 0
}

func (x *CMsgInspectElement) GetY() uint32 {
	if x != nil && x.Y != nil {
		return *x.Y
	}
	return 0
}

type CMsgDisableF5 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrowserHandle *uint32 `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	Disable       *bool   `protobuf:"varint,2,opt,name=disable" json:"disable,omitempty"`
}

func (x *CMsgDisableF5) Reset() {
	*x = CMsgDisableF5{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_htmlmessages_proto_msgTypes[146]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgDisableF5) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgDisableF5) ProtoMessage() {}

func (x *CMsgDisableF5) ProtoReflect() protoreflect.Message {
	mi := &file_steam_htmlmessages_proto_msgTypes[146]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgDisableF5.ProtoReflect.Descriptor instead.
func (*CMsgDisableF5) Descriptor() ([]byte, []int) {
	return file_steam_htmlmessages_proto_rawDescGZIP(), []int{146}
}

func (x *CMsgDisableF5) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgDisableF5) GetDisable() bool {
	if x != nil && x.Disable != nil {
		return *x.Disable
	}
	return false
}

type CMsgStartDownload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrowserHandle *uint32 `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	Url           *string `protobuf:"bytes,2,opt,name=url" json:"url,omitempty"`
}

func (x *CMsgStartDownload) Reset() {
	*x = CMsgStartDownload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_htmlmessages_proto_msgTypes[147]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgStartDownload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgStartDownload) ProtoMessage() {}

func (x *CMsgStartDownload) ProtoReflect() protoreflect.Message {
	mi := &file_steam_htmlmessages_proto_msgTypes[147]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgStartDownload.ProtoReflect.Descriptor instead.
func (*CMsgStartDownload) Descriptor() ([]byte, []int) {
	return file_steam_htmlmessages_proto_rawDescGZIP(), []int{147}
}

func (x *CMsgStartDownload) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgStartDownload) GetUrl() string {
	if x != nil && x.Url != nil {
		return *x.Url
	}
	return ""
}

type CMsgSetLocalFileRequestMapping_AdditionalRoute struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RelativeUrl       *string `protobuf:"bytes,1,opt,name=relative_url,json=relativeUrl" json:"relative_url,omitempty"`
	LocalPath         *string `protobuf:"bytes,2,opt,name=local_path,json=localPath" json:"local_path,omitempty"`
	AllowedExtensions *string `protobuf:"bytes,3,opt,name=allowed_extensions,json=allowedExtensions" json:"allowed_extensions,omitempty"`
}

func (x *CMsgSetLocalFileRequestMapping_AdditionalRoute) Reset() {
	*x = CMsgSetLocalFileRequestMapping_AdditionalRoute{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_htmlmessages_proto_msgTypes[148]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgSetLocalFileRequestMapping_AdditionalRoute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSetLocalFileRequestMapping_AdditionalRoute) ProtoMessage() {}

func (x *CMsgSetLocalFileRequestMapping_AdditionalRoute) ProtoReflect() protoreflect.Message {
	mi := &file_steam_htmlmessages_proto_msgTypes[148]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSetLocalFileRequestMapping_AdditionalRoute.ProtoReflect.Descriptor instead.
func (*CMsgSetLocalFileRequestMapping_AdditionalRoute) Descriptor() ([]byte, []int) {
	return file_steam_htmlmessages_proto_rawDescGZIP(), []int{12, 0}
}

func (x *CMsgSetLocalFileRequestMapping_AdditionalRoute) GetRelativeUrl() string {
	if x != nil && x.RelativeUrl != nil {
		return *x.RelativeUrl
	}
	return ""
}

func (x *CMsgSetLocalFileRequestMapping_AdditionalRoute) GetLocalPath() string {
	if x != nil && x.LocalPath != nil {
		return *x.LocalPath
	}
	return ""
}

func (x *CMsgSetLocalFileRequestMapping_AdditionalRoute) GetAllowedExtensions() string {
	if x != nil && x.AllowedExtensions != nil {
		return *x.AllowedExtensions
	}
	return ""
}

type CMsgJSValue_JSObjectProperty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  *string      `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Value *CMsgJSValue `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (x *CMsgJSValue_JSObjectProperty) Reset() {
	*x = CMsgJSValue_JSObjectProperty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_htmlmessages_proto_msgTypes[149]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgJSValue_JSObjectProperty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgJSValue_JSObjectProperty) ProtoMessage() {}

func (x *CMsgJSValue_JSObjectProperty) ProtoReflect() protoreflect.Message {
	mi := &file_steam_htmlmessages_proto_msgTypes[149]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgJSValue_JSObjectProperty.ProtoReflect.Descriptor instead.
func (*CMsgJSValue_JSObjectProperty) Descriptor() ([]byte, []int) {
	return file_steam_htmlmessages_proto_rawDescGZIP(), []int{120, 0}
}

func (x *CMsgJSValue_JSObjectProperty) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *CMsgJSValue_JSObjectProperty) GetValue() *CMsgJSValue {
	if x != nil {
		return x.Value
	}
	return nil
}

type CMsgDraggableRegionsChanged_DraggableRects struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	X         *int32 `protobuf:"varint,1,opt,name=x" json:"x,omitempty"`
	Y         *int32 `protobuf:"varint,2,opt,name=y" json:"y,omitempty"`
	Width     *int32 `protobuf:"varint,3,opt,name=width" json:"width,omitempty"`
	Height    *int32 `protobuf:"varint,4,opt,name=height" json:"height,omitempty"`
	Draggable *bool  `protobuf:"varint,5,opt,name=draggable" json:"draggable,omitempty"`
}

func (x *CMsgDraggableRegionsChanged_DraggableRects) Reset() {
	*x = CMsgDraggableRegionsChanged_DraggableRects{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_htmlmessages_proto_msgTypes[150]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgDraggableRegionsChanged_DraggableRects) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgDraggableRegionsChanged_DraggableRects) ProtoMessage() {}

func (x *CMsgDraggableRegionsChanged_DraggableRects) ProtoReflect() protoreflect.Message {
	mi := &file_steam_htmlmessages_proto_msgTypes[150]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgDraggableRegionsChanged_DraggableRects.ProtoReflect.Descriptor instead.
func (*CMsgDraggableRegionsChanged_DraggableRects) Descriptor() ([]byte, []int) {
	return file_steam_htmlmessages_proto_rawDescGZIP(), []int{131, 0}
}

func (x *CMsgDraggableRegionsChanged_DraggableRects) GetX() int32 {
	if x != nil && x.X != nil {
		return *x.X
	}
	return 0
}

func (x *CMsgDraggableRegionsChanged_DraggableRects) GetY() int32 {
	if x != nil && x.Y != nil {
		return *x.Y
	}
	return 0
}

func (x *CMsgDraggableRegionsChanged_DraggableRects) GetWidth() int32 {
	if x != nil && x.Width != nil {
		return *x.Width
	}
	return 0
}

func (x *CMsgDraggableRegionsChanged_DraggableRects) GetHeight() int32 {
	if x != nil && x.Height != nil {
		return *x.Height
	}
	return 0
}

func (x *CMsgDraggableRegionsChanged_DraggableRects) GetDraggable() bool {
	if x != nil && x.Draggable != nil {
		return *x.Draggable
	}
	return false
}

var File_steam_htmlmessages_proto protoreflect.FileDescriptor

var file_steam_htmlmessages_proto_rawDesc = []byte{
	0x0a, 0x18, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x2f, 0x68, 0x74, 0x6d, 0x6c, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x73, 0x74, 0x65, 0x61,
	0x6d, 0x22, 0x90, 0x01, 0x0a, 0x09, 0x43, 0x4d, 0x73, 0x67, 0x4b, 0x65, 0x79, 0x55, 0x70, 0x12,
	0x25, 0x0a, 0x0e, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72,
	0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6b, 0x65, 0x79, 0x43, 0x6f, 0x64,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x09, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73, 0x12, 0x24,
	0x0a, 0x0d, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x4b, 0x65, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x4b, 0x65, 0x79,
	0x43, 0x6f, 0x64, 0x65, 0x22, 0xb6, 0x01, 0x0a, 0x0b, 0x43, 0x4d, 0x73, 0x67, 0x4b, 0x65, 0x79,
	0x44, 0x6f, 0x77, 0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x5f,
	0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x62, 0x72,
	0x6f, 0x77, 0x73, 0x65, 0x72, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6b,
	0x65, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x6b, 0x65,
	0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65,
	0x72, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69,
	0x65, 0x72, 0x73, 0x12, 0x22, 0x0a, 0x0d, 0x69, 0x73, 0x5f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x5f, 0x6b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x53, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x4b, 0x65, 0x79, 0x12, 0x24, 0x0a, 0x0d, 0x6e, 0x61, 0x74, 0x69, 0x76,
	0x65, 0x4b, 0x65, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d,
	0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x4b, 0x65, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x22, 0xac, 0x01,
	0x0a, 0x0b, 0x43, 0x4d, 0x73, 0x67, 0x4b, 0x65, 0x79, 0x43, 0x68, 0x61, 0x72, 0x12, 0x25, 0x0a,
	0x0e, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x48, 0x61,
	0x6e, 0x64, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x6e, 0x69, 0x63, 0x68, 0x61, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x75, 0x6e, 0x69, 0x63, 0x68, 0x61, 0x72, 0x12, 0x1c,
	0x0a, 0x09, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x09, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73, 0x12, 0x18, 0x0a, 0x07,
	0x6b, 0x65, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x6b,
	0x65, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65,
	0x4b, 0x65, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x6e,
	0x61, 0x74, 0x69, 0x76, 0x65, 0x4b, 0x65, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x77, 0x0a, 0x0d,
	0x43, 0x4d, 0x73, 0x67, 0x4d, 0x6f, 0x75, 0x73, 0x65, 0x44, 0x6f, 0x77, 0x6e, 0x12, 0x25, 0x0a,
	0x0e, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x48, 0x61,
	0x6e, 0x64, 0x6c, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x6f, 0x75, 0x73, 0x65, 0x5f, 0x62, 0x75,
	0x74, 0x74, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x6d, 0x6f, 0x75, 0x73,
	0x65, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x6f, 0x64, 0x69, 0x66,
	0x69, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x6d, 0x6f, 0x64, 0x69,
	0x66, 0x69, 0x65, 0x72, 0x73, 0x22, 0xb3, 0x01, 0x0a, 0x0b, 0x43, 0x4d, 0x73, 0x67, 0x4d, 0x6f,
	0x75, 0x73, 0x65, 0x55, 0x70, 0x12, 0x25, 0x0a, 0x0e, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72,
	0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x62,
	0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x21, 0x0a, 0x0c,
	0x6d, 0x6f, 0x75, 0x73, 0x65, 0x5f, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0b, 0x6d, 0x6f, 0x75, 0x73, 0x65, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x12,
	0x1c, 0x0a, 0x09, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x09, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73, 0x12, 0x20, 0x0a,
	0x0c, 0x69, 0x73, 0x5f, 0x6f, 0x66, 0x66, 0x5f, 0x70, 0x61, 0x6e, 0x65, 0x6c, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x4f, 0x66, 0x66, 0x50, 0x61, 0x6e, 0x65, 0x6c, 0x12,
	0x0c, 0x0a, 0x01, 0x78, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x01, 0x78, 0x12, 0x0c, 0x0a,
	0x01, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x01, 0x79, 0x22, 0x7b, 0x0a, 0x11, 0x43,
	0x4d, 0x73, 0x67, 0x4d, 0x6f, 0x75, 0x73, 0x65, 0x44, 0x62, 0x6c, 0x43, 0x6c, 0x69, 0x63, 0x6b,
	0x12, 0x25, 0x0a, 0x0e, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x5f, 0x68, 0x61, 0x6e, 0x64,
	0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65,
	0x72, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x6f, 0x75, 0x73, 0x65,
	0x5f, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x6d,
	0x6f, 0x75, 0x73, 0x65, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x6f,
	0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x6d,
	0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73, 0x22, 0x85, 0x01, 0x0a, 0x0e, 0x43, 0x4d, 0x73,
	0x67, 0x4d, 0x6f, 0x75, 0x73, 0x65, 0x57, 0x68, 0x65, 0x65, 0x6c, 0x12, 0x25, 0x0a, 0x0e, 0x62,
	0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0d, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x48, 0x61, 0x6e, 0x64,
	0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x78, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x78, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65,
	0x6c, 0x74, 0x61, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x64, 0x65, 0x6c, 0x74,
	0x61, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73,
	0x22, 0x70, 0x0a, 0x0d, 0x43, 0x4d, 0x73, 0x67, 0x4d, 0x6f, 0x75, 0x73, 0x65, 0x4d, 0x6f, 0x76,
	0x65, 0x12, 0x25, 0x0a, 0x0e, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x5f, 0x68, 0x61, 0x6e,
	0x64, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x62, 0x72, 0x6f, 0x77, 0x73,
	0x65, 0x72, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x01, 0x78, 0x12, 0x0c, 0x0a, 0x01, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x01, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65,
	0x72, 0x73, 0x22, 0x37, 0x0a, 0x0e, 0x43, 0x4d, 0x73, 0x67, 0x4d, 0x6f, 0x75, 0x73, 0x65, 0x4c,
	0x65, 0x61, 0x76, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x5f,
	0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x62, 0x72,
	0x6f, 0x77, 0x73, 0x65, 0x72, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x22, 0xa2, 0x05, 0x0a, 0x11,
	0x43, 0x4d, 0x73, 0x67, 0x42, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64,
	0x12, 0x1c, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x19,
	0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x63, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x75, 0x73, 0x65, 0x72, 0x43, 0x73, 0x73, 0x12, 0x29, 0x0a, 0x10, 0x6e, 0x61, 0x74,
	0x69, 0x76, 0x65, 0x5f, 0x64, 0x72, 0x6f, 0x70, 0x64, 0x6f, 0x77, 0x6e, 0x73, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0f, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x44, 0x72, 0x6f, 0x70, 0x64,
	0x6f, 0x77, 0x6e, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x70, 0x69, 0x5f, 0x73, 0x63, 0x61, 0x6c,
	0x69, 0x6e, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x64, 0x70, 0x69, 0x53, 0x63,
	0x61, 0x6c, 0x69, 0x6e, 0x67, 0x12, 0x22, 0x0a, 0x09, 0x6f, 0x66, 0x66, 0x73, 0x63, 0x72, 0x65,
	0x65, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x04, 0x74, 0x72, 0x75, 0x65, 0x52, 0x09,
	0x6f, 0x66, 0x66, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x12, 0x26, 0x0a, 0x0d, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x61, 0x6c, 0x5f, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d,
	0x3a, 0x01, 0x30, 0x52, 0x0c, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x57, 0x69, 0x64, 0x74,
	0x68, 0x12, 0x28, 0x0a, 0x0e, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x68, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x0d, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x61, 0x6c, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x77,
	0x69, 0x6e, 0x64, 0x6f, 0x77, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x49, 0x63, 0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x0a,
	0x62, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x6c, 0x65, 0x73, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08,
	0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x52, 0x0a, 0x62, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x6c,
	0x65, 0x73, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x76, 0x72, 0x6f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79,
	0x5f, 0x6b, 0x65, 0x79, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x76, 0x72, 0x6f, 0x76,
	0x65, 0x72, 0x6c, 0x61, 0x79, 0x4b, 0x65, 0x79, 0x12, 0x24, 0x0a, 0x0c, 0x62, 0x72, 0x6f, 0x77,
	0x73, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01,
	0x30, 0x52, 0x0b, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2c,
	0x0a, 0x0b, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x74, 0x6f, 0x70, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x05, 0x3a, 0x0b, 0x2d, 0x32, 0x31, 0x34, 0x37, 0x34, 0x38, 0x33, 0x36, 0x34, 0x38,
	0x52, 0x0a, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x54, 0x6f, 0x70, 0x12, 0x2e, 0x0a, 0x0c,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x6c, 0x65, 0x66, 0x74, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x05, 0x3a, 0x0b, 0x2d, 0x32, 0x31, 0x34, 0x37, 0x34, 0x38, 0x33, 0x36, 0x34, 0x38, 0x52,
	0x0b, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x4c, 0x65, 0x66, 0x74, 0x12, 0x40, 0x0a, 0x19,
	0x6f, 0x6e, 0x6c, 0x79, 0x5f, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x74, 0x72, 0x75, 0x73, 0x74,
	0x65, 0x64, 0x5f, 0x70, 0x6f, 0x70, 0x75, 0x70, 0x73, 0x18, 0x11, 0x20, 0x01, 0x28, 0x08, 0x3a,
	0x05, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x52, 0x16, 0x6f, 0x6e, 0x6c, 0x79, 0x41, 0x6c, 0x6c, 0x6f,
	0x77, 0x54, 0x72, 0x75, 0x73, 0x74, 0x65, 0x64, 0x50, 0x6f, 0x70, 0x75, 0x70, 0x73, 0x12, 0x1f,
	0x0a, 0x0b, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x12, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x55, 0x72, 0x6c, 0x12,
	0x1f, 0x0a, 0x0b, 0x68, 0x77, 0x6e, 0x64, 0x5f, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x13,
	0x20, 0x01, 0x28, 0x06, 0x52, 0x0a, 0x68, 0x77, 0x6e, 0x64, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x22, 0x61, 0x0a, 0x19, 0x43, 0x4d, 0x73, 0x67, 0x42, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a,
	0x0e, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x48, 0x61,
	0x6e, 0x64, 0x6c, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x49, 0x64, 0x22, 0x3a, 0x0a, 0x11, 0x43, 0x4d, 0x73, 0x67, 0x42, 0x72, 0x6f, 0x77, 0x73,
	0x65, 0x72, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x62, 0x72, 0x6f, 0x77,
	0x73, 0x65, 0x72, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0d, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x22,
	0xea, 0x02, 0x0a, 0x1e, 0x43, 0x4d, 0x73, 0x67, 0x53, 0x65, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x6c,
	0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x61, 0x70, 0x70, 0x69,
	0x6e, 0x67, 0x12, 0x25, 0x0a, 0x0e, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x5f, 0x68, 0x61,
	0x6e, 0x64, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x62, 0x72, 0x6f, 0x77,
	0x73, 0x65, 0x72, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x55, 0x72, 0x6c, 0x12, 0x2c, 0x0a, 0x12, 0x64, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x70, 0x61, 0x74, 0x68,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x4c,
	0x6f, 0x63, 0x61, 0x6c, 0x50, 0x61, 0x74, 0x68, 0x12, 0x4d, 0x0a, 0x06, 0x72, 0x6f, 0x75, 0x74,
	0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x73, 0x74, 0x65, 0x61, 0x6d,
	0x2e, 0x43, 0x4d, 0x73, 0x67, 0x53, 0x65, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x46, 0x69, 0x6c,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x2e,
	0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x52,
	0x06, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x1a, 0x82, 0x01, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x72,
	0x65, 0x6c, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x76, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x1d,
	0x0a, 0x0a, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x50, 0x61, 0x74, 0x68, 0x12, 0x2d, 0x0a,
	0x12, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x61, 0x6c, 0x6c, 0x6f, 0x77,
	0x65, 0x64, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x94, 0x02, 0x0a,
	0x17, 0x43, 0x4d, 0x73, 0x67, 0x42, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x62, 0x72, 0x6f, 0x77,
	0x73, 0x65, 0x72, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0d, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x1d, 0x0a,
	0x0a, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x6d, 0x69, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x63, 0x61, 0x63, 0x68, 0x65, 0x4d, 0x69, 0x73, 0x73, 0x12, 0x17, 0x0a, 0x07,
	0x62, 0x61, 0x64, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62,
	0x61, 0x64, 0x55, 0x72, 0x6c, 0x12, 0x2d, 0x0a, 0x12, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x11, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f,
	0x62, 0x6c, 0x65, 0x6d, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x5f, 0x70, 0x72,
	0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x6f,
	0x78, 0x79, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x6e, 0x6b,
	0x6e, 0x6f, 0x77, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x75, 0x6e, 0x6b, 0x6e,
	0x6f, 0x77, 0x6e, 0x22, 0x66, 0x0a, 0x0f, 0x43, 0x4d, 0x73, 0x67, 0x42, 0x72, 0x6f, 0x77, 0x73,
	0x65, 0x72, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65,
	0x72, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d,
	0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x77, 0x69,
	0x64, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0x6c, 0x0a, 0x15, 0x43,
	0x4d, 0x73, 0x67, 0x42, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x53, 0x65, 0x74, 0x4d, 0x69, 0x6e,
	0x53, 0x69, 0x7a, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x5f,
	0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x62, 0x72,
	0x6f, 0x77, 0x73, 0x65, 0x72, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x77,
	0x69, 0x64, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74,
	0x68, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0x8a, 0x01, 0x0a, 0x13, 0x43, 0x4d,
	0x73, 0x67, 0x42, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x5f, 0x68, 0x61, 0x6e,
	0x64, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x62, 0x72, 0x6f, 0x77, 0x73,
	0x65, 0x72, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x01, 0x78, 0x12, 0x0c, 0x0a, 0x01, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x01, 0x79, 0x12, 0x17, 0x0a, 0x07, 0x78, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x78, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x12, 0x17, 0x0a,
	0x07, 0x79, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x79, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x22, 0x85, 0x01, 0x0a, 0x12, 0x43, 0x4d, 0x73, 0x67, 0x42,
	0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x69, 0x7a, 0x65, 0x64, 0x12, 0x25, 0x0a,
	0x0e, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x48, 0x61,
	0x6e, 0x64, 0x6c, 0x65, 0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x01, 0x78, 0x12, 0x0c, 0x0a, 0x01, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x01, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0x7a,
	0x0a, 0x0b, 0x43, 0x4d, 0x73, 0x67, 0x50, 0x6f, 0x73, 0x74, 0x55, 0x52, 0x4c, 0x12, 0x25, 0x0a,
	0x0e, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x48, 0x61,
	0x6e, 0x64, 0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x73, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x61,
	0x67, 0x65, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a,
	0x70, 0x61, 0x67, 0x65, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x22, 0x5e, 0x0a, 0x0d, 0x43, 0x4d,
	0x73, 0x67, 0x41, 0x64, 0x64, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x25, 0x0a, 0x0e, 0x62,
	0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0d, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x48, 0x61, 0x6e, 0x64,
	0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x35, 0x0a, 0x0c, 0x43, 0x4d,
	0x73, 0x67, 0x53, 0x74, 0x6f, 0x70, 0x4c, 0x6f, 0x61, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x62, 0x72,
	0x6f, 0x77, 0x73, 0x65, 0x72, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0d, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x48, 0x61, 0x6e, 0x64, 0x6c,
	0x65, 0x22, 0x33, 0x0a, 0x0a, 0x43, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x6c, 0x6f, 0x61, 0x64, 0x12,
	0x25, 0x0a, 0x0e, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72,
	0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x22, 0x36, 0x0a, 0x0d, 0x43, 0x4d, 0x73, 0x67, 0x47, 0x6f,
	0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x62, 0x72, 0x6f, 0x77, 0x73,
	0x65, 0x72, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0d, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x22, 0x33,
	0x0a, 0x0a, 0x43, 0x4d, 0x73, 0x67, 0x47, 0x6f, 0x42, 0x61, 0x63, 0x6b, 0x12, 0x25, 0x0a, 0x0e,
	0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x48, 0x61, 0x6e,
	0x64, 0x6c, 0x65, 0x22, 0x4e, 0x0a, 0x0d, 0x43, 0x4d, 0x73, 0x67, 0x57, 0x61, 0x73, 0x48, 0x69,
	0x64, 0x64, 0x65, 0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x5f,
	0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x62, 0x72,
	0x6f, 0x77, 0x73, 0x65, 0x72, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x68,
	0x69, 0x64, 0x64, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x68, 0x69, 0x64,
	0x64, 0x65, 0x6e, 0x22, 0x39, 0x0a, 0x10, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x65, 0x61, 0x72,
	0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x25, 0x0a, 0x0e, 0x62, 0x72, 0x6f, 0x77, 0x73,
	0x65, 0x72, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0d, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x22, 0x41,
	0x0a, 0x18, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x41, 0x6c, 0x6c, 0x42, 0x72,
	0x6f, 0x77, 0x73, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74, 0x61, 0x12, 0x25, 0x0a, 0x0e, 0x62, 0x72,
	0x6f, 0x77, 0x73, 0x65, 0x72, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0d, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x48, 0x61, 0x6e, 0x64, 0x6c,
	0x65, 0x22, 0x31, 0x0a, 0x08, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6f, 0x70, 0x79, 0x12, 0x25, 0x0a,
	0x0e, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x48, 0x61,
	0x6e, 0x64, 0x6c, 0x65, 0x22, 0x32, 0x0a, 0x09, 0x43, 0x4d, 0x73, 0x67, 0x50, 0x61, 0x73, 0x74,
	0x65, 0x12, 0x25, 0x0a, 0x0e, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x5f, 0x68, 0x61, 0x6e,
	0x64, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x62, 0x72, 0x6f, 0x77, 0x73,
	0x65, 0x72, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x22, 0x56, 0x0a, 0x15, 0x43, 0x4d, 0x73, 0x67,
	0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x4a, 0x61, 0x76, 0x61, 0x53, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x12, 0x25, 0x0a, 0x0e, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x5f, 0x68, 0x61, 0x6e,
	0x64, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x62, 0x72, 0x6f, 0x77, 0x73,
	0x65, 0x72, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x22, 0x4b, 0x0a, 0x0c, 0x43, 0x4d, 0x73, 0x67, 0x53, 0x65, 0x74, 0x46, 0x6f, 0x63, 0x75, 0x73,
	0x12, 0x25, 0x0a, 0x0e, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x5f, 0x68, 0x61, 0x6e, 0x64,
	0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65,
	0x72, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6f, 0x63, 0x75, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x66, 0x6f, 0x63, 0x75, 0x73, 0x22, 0x44, 0x0a,
	0x1b, 0x43, 0x4d, 0x73, 0x67, 0x48, 0x6f, 0x72, 0x69, 0x7a, 0x6f, 0x6e, 0x74, 0x61, 0x6c, 0x53,
	0x63, 0x72, 0x6f, 0x6c, 0x6c, 0x42, 0x61, 0x72, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x25, 0x0a, 0x0e,
	0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x48, 0x61, 0x6e,
	0x64, 0x6c, 0x65, 0x22, 0xce, 0x01, 0x0a, 0x23, 0x43, 0x4d, 0x73, 0x67, 0x48, 0x6f, 0x72, 0x69,
	0x7a, 0x6f, 0x6e, 0x74, 0x61, 0x6c, 0x53, 0x63, 0x72, 0x6f, 0x6c, 0x6c, 0x42, 0x61, 0x72, 0x53,
	0x69, 0x7a, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x62,
	0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0d, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x48, 0x61, 0x6e, 0x64,
	0x6c, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x63, 0x72, 0x6f, 0x6c, 0x6c, 0x5f, 0x6d, 0x61, 0x78,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x73, 0x63, 0x72, 0x6f, 0x6c, 0x6c, 0x4d, 0x61,
	0x78, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x63, 0x72, 0x6f, 0x6c, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x06, 0x73, 0x63, 0x72, 0x6f, 0x6c, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x7a, 0x6f, 0x6f,
	0x6d, 0x18, 0x08, 0x20, 0x01, 0x28, 0x02, 0x52, 0x04, 0x7a, 0x6f, 0x6f, 0x6d, 0x12, 0x18, 0x0a,
	0x07, 0x76, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x76, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f,
	0x73, 0x69, 0x7a, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65,
	0x53, 0x69, 0x7a, 0x65, 0x22, 0x42, 0x0a, 0x19, 0x43, 0x4d, 0x73, 0x67, 0x56, 0x65, 0x72, 0x74,
	0x69, 0x63, 0x61, 0x6c, 0x53, 0x63, 0x72, 0x6f, 0x6c, 0x6c, 0x42, 0x61, 0x72, 0x53, 0x69, 0x7a,
	0x65, 0x12, 0x25, 0x0a, 0x0e, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x5f, 0x68, 0x61, 0x6e,
	0x64, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x62, 0x72, 0x6f, 0x77, 0x73,
	0x65, 0x72, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x22, 0xcc, 0x01, 0x0a, 0x21, 0x43, 0x4d, 0x73,
	0x67, 0x56, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x53, 0x63, 0x72, 0x6f, 0x6c, 0x6c, 0x42,
	0x61, 0x72, 0x53, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25,
	0x0a, 0x0e, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x48,
	0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x63, 0x72, 0x6f, 0x6c, 0x6c, 0x5f,
	0x6d, 0x61, 0x78, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x73, 0x63, 0x72, 0x6f, 0x6c,
	0x6c, 0x4d, 0x61, 0x78, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x63, 0x72, 0x6f, 0x6c, 0x6c, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x73, 0x63, 0x72, 0x6f, 0x6c, 0x6c, 0x12, 0x12, 0x0a, 0x04,
	0x7a, 0x6f, 0x6f, 0x6d, 0x18, 0x08, 0x20, 0x01, 0x28, 0x02, 0x52, 0x04, 0x7a, 0x6f, 0x6f, 0x6d,
	0x12, 0x18, 0x0a, 0x07, 0x76, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x76, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61,
	0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70,
	0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x7e, 0x0a, 0x08, 0x43, 0x4d, 0x73, 0x67, 0x46,
	0x69, 0x6e, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x5f, 0x68,
	0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x62, 0x72, 0x6f,
	0x77, 0x73, 0x65, 0x72, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x69,
	0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x69, 0x6e, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x69, 0x6e, 0x66, 0x69, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x69, 0x6e, 0x66, 0x69, 0x6e, 0x64, 0x12, 0x1f, 0x0a, 0x07, 0x72, 0x65, 0x76, 0x65, 0x72, 0x73,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x52, 0x07,
	0x72, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x22, 0x35, 0x0a, 0x0c, 0x43, 0x4d, 0x73, 0x67, 0x53,
	0x74, 0x6f, 0x70, 0x46, 0x69, 0x6e, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x62, 0x72, 0x6f, 0x77, 0x73,
	0x65, 0x72, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0d, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x22, 0x58,
	0x0a, 0x17, 0x43, 0x4d, 0x73, 0x67, 0x53, 0x65, 0x74, 0x48, 0x6f, 0x72, 0x69, 0x7a, 0x6f, 0x6e,
	0x74, 0x61, 0x6c, 0x53, 0x63, 0x72, 0x6f, 0x6c, 0x6c, 0x12, 0x25, 0x0a, 0x0e, 0x62, 0x72, 0x6f,
	0x77, 0x73, 0x65, 0x72, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0d, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x63, 0x72, 0x6f, 0x6c, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x06, 0x73, 0x63, 0x72, 0x6f, 0x6c, 0x6c, 0x22, 0x56, 0x0a, 0x15, 0x43, 0x4d, 0x73, 0x67,
	0x53, 0x65, 0x74, 0x56, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x53, 0x63, 0x72, 0x6f, 0x6c,
	0x6c, 0x12, 0x25, 0x0a, 0x0e, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x5f, 0x68, 0x61, 0x6e,
	0x64, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x62, 0x72, 0x6f, 0x77, 0x73,
	0x65, 0x72, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x63, 0x72, 0x6f,
	0x6c, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x73, 0x63, 0x72, 0x6f, 0x6c, 0x6c,
	0x22, 0x4d, 0x0a, 0x10, 0x43, 0x4d, 0x73, 0x67, 0x53, 0x65, 0x74, 0x5a, 0x6f, 0x6f, 0x6d, 0x4c,
	0x65, 0x76, 0x65, 0x6c, 0x12, 0x25, 0x0a, 0x0e, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x5f,
	0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x62, 0x72,
	0x6f, 0x77, 0x73, 0x65, 0x72, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x7a,
	0x6f, 0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x7a, 0x6f, 0x6f, 0x6d, 0x22,
	0x37, 0x0a, 0x0e, 0x43, 0x4d, 0x73, 0x67, 0x56, 0x69, 0x65, 0x77, 0x53, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x12, 0x25, 0x0a, 0x0e, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x5f, 0x68, 0x61, 0x6e,
	0x64, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x62, 0x72, 0x6f, 0x77, 0x73,
	0x65, 0x72, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x22, 0x82, 0x01, 0x0a, 0x10, 0x43, 0x4d, 0x73,
	0x67, 0x42, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x52, 0x65, 0x61, 0x64, 0x79, 0x12, 0x25, 0x0a,
	0x0e, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x48, 0x61,
	0x6e, 0x64, 0x6c, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x76, 0x72, 0x5f, 0x6f, 0x76, 0x65, 0x72, 0x6c,
	0x61, 0x79, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x76, 0x72,
	0x4f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x4b, 0x65, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x68, 0x77,
	0x6e, 0x64, 0x5f, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x06,
	0x52, 0x0b, 0x68, 0x77, 0x6e, 0x64, 0x42, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x22, 0xcd, 0x01,
	0x0a, 0x0e, 0x43, 0x4d, 0x73, 0x67, 0x55, 0x52, 0x4c, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64,
	0x12, 0x25, 0x0a, 0x0e, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x5f, 0x68, 0x61, 0x6e, 0x64,
	0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65,
	0x72, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6f, 0x73,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6f, 0x73,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x20, 0x0a, 0x0b, 0x62, 0x49, 0x73, 0x52, 0x65, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x62, 0x49, 0x73, 0x52,
	0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x62, 0x4e, 0x65, 0x77, 0x4e, 0x61, 0x76,
	0x69, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x62,
	0x4e, 0x65, 0x77, 0x4e, 0x61, 0x76, 0x69, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x35, 0x0a,
	0x0b, 0x43, 0x48, 0x54, 0x4d, 0x4c, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0x8e, 0x02, 0x0a, 0x15, 0x43, 0x48, 0x54, 0x4d, 0x4c, 0x50, 0x61,
	0x67, 0x65, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x23,
	0x0a, 0x09, 0x62, 0x49, 0x73, 0x53, 0x65, 0x63, 0x75, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x52, 0x09, 0x62, 0x49, 0x73, 0x53, 0x65, 0x63,
	0x75, 0x72, 0x65, 0x12, 0x2b, 0x0a, 0x0d, 0x62, 0x48, 0x61, 0x73, 0x43, 0x65, 0x72, 0x74, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73,
	0x65, 0x52, 0x0d, 0x62, 0x48, 0x61, 0x73, 0x43, 0x65, 0x72, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x63, 0x65, 0x72, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x63, 0x65, 0x72, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0a,
	0x63, 0x65, 0x72, 0x74, 0x45, 0x78, 0x70, 0x69, 0x72, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05,
	0x3a, 0x01, 0x30, 0x52, 0x0a, 0x63, 0x65, 0x72, 0x74, 0x45, 0x78, 0x70, 0x69, 0x72, 0x79, 0x12,
	0x1f, 0x0a, 0x09, 0x6e, 0x43, 0x65, 0x72, 0x74, 0x42, 0x69, 0x74, 0x73, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x05, 0x3a, 0x01, 0x30, 0x52, 0x09, 0x6e, 0x43, 0x65, 0x72, 0x74, 0x42, 0x69, 0x74, 0x73,
	0x12, 0x23, 0x0a, 0x09, 0x62, 0x49, 0x73, 0x45, 0x56, 0x43, 0x65, 0x72, 0x74, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x08, 0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x52, 0x09, 0x62, 0x49, 0x73, 0x45,
	0x56, 0x43, 0x65, 0x72, 0x74, 0x22, 0x6c, 0x0a, 0x13, 0x43, 0x4d, 0x73, 0x67, 0x46, 0x69, 0x6e,
	0x69, 0x73, 0x68, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0e,
	0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x48, 0x61, 0x6e,
	0x64, 0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x54, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x54, 0x69,
	0x74, 0x6c, 0x65, 0x22, 0x98, 0x01, 0x0a, 0x11, 0x43, 0x4d, 0x73, 0x67, 0x4c, 0x6f, 0x61, 0x64,
	0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x62, 0x72, 0x6f,
	0x77, 0x73, 0x65, 0x72, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0d, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75,
	0x72, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x54, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x2c, 0x0a, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x2e, 0x43, 0x48, 0x54, 0x4d, 0x4c, 0x48,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x22, 0x8e,
	0x01, 0x0a, 0x10, 0x43, 0x4d, 0x73, 0x67, 0x50, 0x61, 0x67, 0x65, 0x53, 0x65, 0x63, 0x75, 0x72,
	0x69, 0x74, 0x79, 0x12, 0x25, 0x0a, 0x0e, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x5f, 0x68,
	0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x62, 0x72, 0x6f,
	0x77, 0x73, 0x65, 0x72, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x41, 0x0a, 0x0d,
	0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x2e, 0x43, 0x48, 0x54, 0x4d,
	0x4c, 0x50, 0x61, 0x67, 0x65, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x0c, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x22,
	0xa1, 0x01, 0x0a, 0x10, 0x43, 0x4d, 0x73, 0x67, 0x53, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x5f,
	0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x62, 0x72,
	0x6f, 0x77, 0x73, 0x65, 0x72, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x16, 0x0a,
	0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x20, 0x0a, 0x0b, 0x62, 0x49, 0x73, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x62, 0x49, 0x73, 0x52, 0x65, 0x64, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x22, 0x59, 0x0a, 0x18, 0x43, 0x4d, 0x73, 0x67, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x25, 0x0a, 0x0e, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72,
	0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x41, 0x6c, 0x6c, 0x6f, 0x77,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x62, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x22, 0x36,
	0x0a, 0x0d, 0x43, 0x4d, 0x73, 0x67, 0x53, 0x68, 0x6f, 0x77, 0x50, 0x6f, 0x70, 0x75, 0x70, 0x12,
	0x25, 0x0a, 0x0e, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72,
	0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x22, 0x36, 0x0a, 0x0d, 0x43, 0x4d, 0x73, 0x67, 0x48, 0x69,
	0x64, 0x65, 0x50, 0x6f, 0x70, 0x75, 0x70, 0x12, 0x25, 0x0a, 0x0e, 0x62, 0x72, 0x6f, 0x77, 0x73,
	0x65, 0x72, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0d, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x22, 0x7a,
	0x0a, 0x0d, 0x43, 0x4d, 0x73, 0x67, 0x53, 0x69, 0x7a, 0x65, 0x50, 0x6f, 0x70, 0x75, 0x70, 0x12,
	0x25, 0x0a, 0x0e, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72,
	0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x01, 0x78, 0x12, 0x0c, 0x0a, 0x01, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x01, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x77, 0x69, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x04, 0x77, 0x69, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x6c, 0x6c, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x74, 0x61, 0x6c, 0x6c, 0x22, 0x6b, 0x0a, 0x0e, 0x43, 0x4d,
	0x73, 0x67, 0x4f, 0x70, 0x65, 0x6e, 0x4e, 0x65, 0x77, 0x54, 0x61, 0x62, 0x12, 0x25, 0x0a, 0x0e,
	0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x48, 0x61, 0x6e,
	0x64, 0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x62, 0x46, 0x6f, 0x72, 0x65, 0x67, 0x72,
	0x6f, 0x75, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x62, 0x46, 0x6f, 0x72,
	0x65, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x22, 0xf6, 0x01, 0x0a, 0x13, 0x43, 0x4d, 0x73, 0x67,
	0x50, 0x6f, 0x70, 0x75, 0x70, 0x48, 0x54, 0x4d, 0x4c, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x12,
	0x25, 0x0a, 0x0e, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72,
	0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x19, 0x0a, 0x01, 0x78, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x3a, 0x0b, 0x2d, 0x32, 0x31, 0x34, 0x37, 0x34, 0x38, 0x33, 0x36, 0x34, 0x38,
	0x52, 0x01, 0x78, 0x12, 0x19, 0x0a, 0x01, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x3a, 0x0b,
	0x2d, 0x32, 0x31, 0x34, 0x37, 0x34, 0x38, 0x33, 0x36, 0x34, 0x38, 0x52, 0x01, 0x79, 0x12, 0x12,
	0x0a, 0x04, 0x77, 0x69, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x77, 0x69,
	0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x6c, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x04, 0x74, 0x61, 0x6c, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x6f, 0x70, 0x75, 0x70, 0x5f,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x70, 0x6f, 0x70,
	0x75, 0x70, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x27, 0x0a, 0x0f, 0x74, 0x72, 0x75, 0x73, 0x74,
	0x65, 0x64, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0e, 0x74, 0x72, 0x75, 0x73, 0x74, 0x65, 0x64, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72,
	0x22, 0x5c, 0x0a, 0x1b, 0x43, 0x4d, 0x73, 0x67, 0x50, 0x6f, 0x70, 0x75, 0x70, 0x48, 0x54, 0x4d,
	0x4c, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x25, 0x0a, 0x0e, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72,
	0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x41, 0x6c, 0x6c, 0x6f, 0x77,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x62, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x22, 0x4f,
	0x0a, 0x10, 0x43, 0x4d, 0x73, 0x67, 0x53, 0x65, 0x74, 0x48, 0x54, 0x4d, 0x4c, 0x54, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x5f, 0x68, 0x61,
	0x6e, 0x64, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x62, 0x72, 0x6f, 0x77,
	0x73, 0x65, 0x72, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x22,
	0x4e, 0x0a, 0x13, 0x43, 0x4d, 0x73, 0x67, 0x4c, 0x6f, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65,
	0x72, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d,
	0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x22,
	0x4b, 0x0a, 0x0e, 0x43, 0x4d, 0x73, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x54, 0x65, 0x78,
	0x74, 0x12, 0x25, 0x0a, 0x0e, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x5f, 0x68, 0x61, 0x6e,
	0x64, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x62, 0x72, 0x6f, 0x77, 0x73,
	0x65, 0x72, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x22, 0xcf, 0x01, 0x0a,
	0x0d, 0x43, 0x4d, 0x73, 0x67, 0x53, 0x65, 0x74, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x12, 0x25,
	0x0a, 0x0e, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x48,
	0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x12, 0x1f, 0x0a,
	0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x12, 0x12,
	0x0a, 0x04, 0x77, 0x69, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x77, 0x69,
	0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x6c, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x04, 0x74, 0x61, 0x6c, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x78, 0x68, 0x6f, 0x74, 0x73, 0x70,
	0x6f, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x78, 0x68, 0x6f, 0x74, 0x73, 0x70,
	0x6f, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x79, 0x68, 0x6f, 0x74, 0x73, 0x70, 0x6f, 0x74, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x79, 0x68, 0x6f, 0x74, 0x73, 0x70, 0x6f, 0x74, 0x22, 0xaf,
	0x01, 0x0a, 0x12, 0x43, 0x4d, 0x73, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x4c, 0x6f, 0x61, 0x64, 0x44,
	0x69, 0x61, 0x6c, 0x6f, 0x67, 0x12, 0x25, 0x0a, 0x0e, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72,
	0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x62,
	0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x46, 0x69, 0x6c,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c,
	0x46, 0x69, 0x6c, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65,
	0x70, 0x74, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x73, 0x5f, 0x73, 0x61,
	0x76, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x53, 0x61, 0x76, 0x65,
	0x22, 0x59, 0x0a, 0x1a, 0x43, 0x4d, 0x73, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x4c, 0x6f, 0x61, 0x64,
	0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25,
	0x0a, 0x0e, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x48,
	0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x22, 0x4c, 0x0a, 0x0f, 0x43,
	0x4d, 0x73, 0x67, 0x53, 0x68, 0x6f, 0x77, 0x54, 0x6f, 0x6f, 0x6c, 0x54, 0x69, 0x70, 0x12, 0x25,
	0x0a, 0x0e, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x48,
	0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x22, 0x4e, 0x0a, 0x11, 0x43, 0x4d, 0x73,
	0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x6f, 0x6c, 0x54, 0x69, 0x70, 0x12, 0x25,
	0x0a, 0x0e, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x48,
	0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x22, 0x38, 0x0a, 0x0f, 0x43, 0x4d, 0x73,
	0x67, 0x48, 0x69, 0x64, 0x65, 0x54, 0x6f, 0x6f, 0x6c, 0x54, 0x69, 0x70, 0x12, 0x25, 0x0a, 0x0e,
	0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x48, 0x61, 0x6e,
	0x64, 0x6c, 0x65, 0x22, 0x76, 0x0a, 0x11, 0x43, 0x4d, 0x73, 0x67, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x62, 0x72, 0x6f, 0x77,
	0x73, 0x65, 0x72, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0d, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x4d, 0x61, 0x74, 0x63,
	0x68, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x22, 0x32, 0x0a, 0x09, 0x43,
	0x4d, 0x73, 0x67, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x62, 0x72, 0x6f, 0x77,
	0x73, 0x65, 0x72, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0d, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x22,
	0xc6, 0x01, 0x0a, 0x19, 0x43, 0x4d, 0x73, 0x67, 0x53, 0x65, 0x74, 0x53, 0x68, 0x61, 0x72, 0x65,
	0x64, 0x50, 0x61, 0x69, 0x6e, 0x74, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x73, 0x12, 0x25, 0x0a,
	0x0e, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x48, 0x61,
	0x6e, 0x64, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x77, 0x69, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x04, 0x77, 0x69, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x6c, 0x6c,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x74, 0x61, 0x6c, 0x6c, 0x12, 0x1d, 0x0a, 0x0a,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x70, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x09, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x69, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0c, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x06, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x22, 0x42, 0x0a, 0x19, 0x43, 0x4d, 0x73, 0x67,
	0x41, 0x63, 0x6b, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x50, 0x61, 0x69, 0x6e, 0x74, 0x42, 0x75,
	0x66, 0x66, 0x65, 0x72, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72,
	0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x62,
	0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x22, 0xa9, 0x01, 0x0a,
	0x0e, 0x43, 0x4d, 0x73, 0x67, 0x4e, 0x65, 0x65, 0x64, 0x73, 0x50, 0x61, 0x69, 0x6e, 0x74, 0x12,
	0x25, 0x0a, 0x0e, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72,
	0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x63, 0x72, 0x6f, 0x6c, 0x6c,
	0x78, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x73, 0x63, 0x72, 0x6f, 0x6c, 0x6c, 0x78,
	0x12, 0x18, 0x0a, 0x07, 0x73, 0x63, 0x72, 0x6f, 0x6c, 0x6c, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x07, 0x73, 0x63, 0x72, 0x6f, 0x6c, 0x6c, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61,
	0x67, 0x65, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x70,
	0x61, 0x67, 0x65, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65,
	0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x70, 0x61,
	0x67, 0x65, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x22, 0x86, 0x02, 0x0a, 0x13, 0x43, 0x4d, 0x73,
	0x67, 0x43, 0x6f, 0x6d, 0x62, 0x6f, 0x4e, 0x65, 0x65, 0x64, 0x73, 0x50, 0x61, 0x69, 0x6e, 0x74,
	0x12, 0x25, 0x0a, 0x0e, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x5f, 0x68, 0x61, 0x6e, 0x64,
	0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65,
	0x72, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x67, 0x62, 0x61, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x72, 0x67, 0x62, 0x61, 0x12, 0x26, 0x0a, 0x0d, 0x63,
	0x6f, 0x6d, 0x62, 0x6f, 0x62, 0x6f, 0x78, 0x5f, 0x77, 0x69, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x0c, 0x63, 0x6f, 0x6d, 0x62, 0x6f, 0x62, 0x6f, 0x78, 0x57,
	0x69, 0x64, 0x65, 0x12, 0x26, 0x0a, 0x0d, 0x63, 0x6f, 0x6d, 0x62, 0x6f, 0x62, 0x6f, 0x78, 0x5f,
	0x74, 0x61, 0x6c, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x0c, 0x63,
	0x6f, 0x6d, 0x62, 0x6f, 0x62, 0x6f, 0x78, 0x54, 0x61, 0x6c, 0x6c, 0x12, 0x33, 0x0a, 0x14, 0x73,
	0x68, 0x61, 0x72, 0x65, 0x64, 0x5f, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x5f, 0x68, 0x61, 0x6e,
	0x64, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x3a, 0x01, 0x30, 0x52, 0x12, 0x73, 0x68,
	0x61, 0x72, 0x65, 0x64, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65,
	0x12, 0x2f, 0x0a, 0x12, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x5f, 0x6d, 0x65, 0x6d, 0x6f, 0x72,
	0x79, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x3a, 0x01, 0x30, 0x52,
	0x10, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x53, 0x69, 0x7a,
	0x65, 0x22, 0x87, 0x02, 0x0a, 0x1b, 0x43, 0x4d, 0x73, 0x67, 0x4e, 0x65, 0x65, 0x64, 0x73, 0x53,
	0x68, 0x61, 0x72, 0x65, 0x64, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x50, 0x61, 0x69, 0x6e,
	0x74, 0x12, 0x25, 0x0a, 0x0e, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x5f, 0x68, 0x61, 0x6e,
	0x64, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x62, 0x72, 0x6f, 0x77, 0x73,
	0x65, 0x72, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x68, 0x61, 0x72,
	0x65, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b,
	0x73, 0x68, 0x61, 0x72, 0x65, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x77,
	0x69, 0x64, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74,
	0x68, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x63, 0x72,
	0x6f, 0x6c, 0x6c, 0x78, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x73, 0x63, 0x72, 0x6f,
	0x6c, 0x6c, 0x78, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x63, 0x72, 0x6f, 0x6c, 0x6c, 0x79, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x73, 0x63, 0x72, 0x6f, 0x6c, 0x6c, 0x79, 0x12, 0x1c, 0x0a,
	0x09, 0x70, 0x61, 0x67, 0x65, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x70,
	0x61, 0x67, 0x65, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0a, 0x70, 0x61, 0x67, 0x65, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x22, 0xe4, 0x01, 0x0a, 0x1b,
	0x43, 0x4d, 0x73, 0x67, 0x47, 0x61, 0x6d, 0x65, 0x4f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x54,
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x50, 0x61, 0x69, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x62,
	0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0d, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x48, 0x61, 0x6e, 0x64,
	0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x73, 0x63, 0x72, 0x6f, 0x6c, 0x6c, 0x78, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x07, 0x73, 0x63, 0x72, 0x6f, 0x6c, 0x6c, 0x78, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x63,
	0x72, 0x6f, 0x6c, 0x6c, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x73, 0x63, 0x72,
	0x6f, 0x6c, 0x6c, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x73, 0x63, 0x61, 0x6c,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x73, 0x63, 0x61,
	0x6c, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x73, 0x65, 0x72, 0x69,
	0x61, 0x6c, 0x22, 0x34, 0x0a, 0x0b, 0x43, 0x4d, 0x73, 0x67, 0x47, 0x65, 0x74, 0x5a, 0x6f, 0x6f,
	0x6d, 0x12, 0x25, 0x0a, 0x0e, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x5f, 0x68, 0x61, 0x6e,
	0x64, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x62, 0x72, 0x6f, 0x77, 0x73,
	0x65, 0x72, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x22, 0x50, 0x0a, 0x13, 0x43, 0x4d, 0x73, 0x67,
	0x47, 0x65, 0x74, 0x5a, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x25, 0x0a, 0x0e, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72,
	0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x7a, 0x6f, 0x6f, 0x6d, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x04, 0x7a, 0x6f, 0x6f, 0x6d, 0x22, 0x57, 0x0a, 0x12, 0x43, 0x4d,
	0x73, 0x67, 0x4c, 0x69, 0x6e, 0x6b, 0x41, 0x74, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x25, 0x0a, 0x0e, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x5f, 0x68, 0x61, 0x6e, 0x64,
	0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65,
	0x72, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x01, 0x78, 0x12, 0x0c, 0x0a, 0x01, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x01, 0x79, 0x22, 0xa7, 0x01, 0x0a, 0x1a, 0x43, 0x4d, 0x73, 0x67, 0x4c, 0x69, 0x6e, 0x6b,
	0x41, 0x74, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x5f, 0x68, 0x61,
	0x6e, 0x64, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x62, 0x72, 0x6f, 0x77,
	0x73, 0x65, 0x72, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x01, 0x78, 0x12, 0x0c, 0x0a, 0x01, 0x79, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x01, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x6c, 0x69, 0x76, 0x65,
	0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x62, 0x6c, 0x69, 0x76,
	0x65, 0x6c, 0x69, 0x6e, 0x6b, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x62, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x22, 0x60, 0x0a,
	0x1b, 0x43, 0x4d, 0x73, 0x67, 0x5a, 0x6f, 0x6f, 0x6d, 0x54, 0x6f, 0x45, 0x6c, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x41, 0x74, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x0e,
	0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x48, 0x61, 0x6e,
	0x64, 0x6c, 0x65, 0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x01,
	0x78, 0x12, 0x0c, 0x0a, 0x01, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x01, 0x79, 0x22,
	0x7e, 0x0a, 0x23, 0x43, 0x4d, 0x73, 0x67, 0x5a, 0x6f, 0x6f, 0x6d, 0x54, 0x6f, 0x45, 0x6c, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x41, 0x74, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65,
	0x72, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d,
	0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x73, 0x63,
	0x61, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x6f, 0x0a, 0x14, 0x43, 0x4d, 0x73, 0x67, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x50, 0x61, 0x67, 0x65,
	0x54, 0x6f, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x62, 0x72, 0x6f, 0x77, 0x73,
	0x65, 0x72, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0d, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x73,
	0x63, 0x61, 0x6c, 0x65, 0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x01, 0x78, 0x12, 0x0c, 0x0a, 0x01, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x01, 0x79,
	0x22, 0x7d, 0x0a, 0x1b, 0x43, 0x4d, 0x73, 0x67, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x50, 0x6f, 0x70,
	0x75, 0x70, 0x73, 0x54, 0x6f, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x48, 0x57, 0x4e, 0x44, 0x12,
	0x25, 0x0a, 0x0e, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72,
	0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x37, 0x0a, 0x18, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x5f,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x5f, 0x68, 0x77, 0x6e, 0x64, 0x5f, 0x70, 0x6f, 0x70, 0x75,
	0x70, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x44,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x48, 0x77, 0x6e, 0x64, 0x50, 0x6f, 0x70, 0x75, 0x70, 0x73, 0x22,
	0x59, 0x0a, 0x1c, 0x43, 0x4d, 0x73, 0x67, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x50, 0x61, 0x67, 0x65,
	0x54, 0x6f, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x25, 0x0a, 0x0e, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72,
	0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x7a, 0x6f, 0x6f, 0x6d, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x04, 0x7a, 0x6f, 0x6f, 0x6d, 0x22, 0x97, 0x01, 0x0a, 0x12, 0x43,
	0x4d, 0x73, 0x67, 0x53, 0x61, 0x76, 0x65, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x4a, 0x50, 0x45,
	0x47, 0x12, 0x25, 0x0a, 0x0e, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x5f, 0x68, 0x61, 0x6e,
	0x64, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x62, 0x72, 0x6f, 0x77, 0x73,
	0x65, 0x72, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69,
	0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69,
	0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06,
	0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x68, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x22, 0x71, 0x0a, 0x1a, 0x43, 0x4d, 0x73, 0x67, 0x53, 0x61, 0x76, 0x65,
	0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x4a, 0x50, 0x45, 0x47, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x5f, 0x68, 0x61,
	0x6e, 0x64, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x62, 0x72, 0x6f, 0x77,
	0x73, 0x65, 0x72, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x66,
	0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66,
	0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x4e, 0x0a, 0x0b, 0x43, 0x4d, 0x73, 0x67, 0x4a,
	0x53, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65,
	0x72, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d,
	0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x50, 0x0a, 0x0d, 0x43, 0x4d, 0x73, 0x67, 0x4a,
	0x53, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x12, 0x25, 0x0a, 0x0e, 0x62, 0x72, 0x6f, 0x77,
	0x73, 0x65, 0x72, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0d, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x55, 0x0a, 0x14, 0x43, 0x4d, 0x73,
	0x67, 0x4a, 0x53, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x25, 0x0a, 0x0e, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x5f, 0x68, 0x61, 0x6e,
	0x64, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x62, 0x72, 0x6f, 0x77, 0x73,
	0x65, 0x72, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x22, 0x7a, 0x0a, 0x17, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x61, 0x6e, 0x47, 0x6f, 0x42, 0x61, 0x63,
	0x6b, 0x41, 0x6e, 0x64, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x62,
	0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0d, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x48, 0x61, 0x6e, 0x64,
	0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x67, 0x6f, 0x62, 0x61, 0x63, 0x6b, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x62, 0x67, 0x6f, 0x62, 0x61, 0x63, 0x6b, 0x12, 0x1e, 0x0a, 0x0a,
	0x62, 0x67, 0x6f, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0a, 0x62, 0x67, 0x6f, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x22, 0x67, 0x0a, 0x10,
	0x43, 0x4d, 0x73, 0x67, 0x4f, 0x70, 0x65, 0x6e, 0x53, 0x74, 0x65, 0x61, 0x6d, 0x55, 0x52, 0x4c,
	0x12, 0x25, 0x0a, 0x0e, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x5f, 0x68, 0x61, 0x6e, 0x64,
	0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65,
	0x72, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x66,
	0x65, 0x72, 0x72, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x66,
	0x65, 0x72, 0x72, 0x65, 0x72, 0x22, 0xad, 0x01, 0x0a, 0x0d, 0x43, 0x4d, 0x73, 0x67, 0x53, 0x65,
	0x74, 0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70,
	0x61, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x78, 0x70, 0x69, 0x72,
	0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65,
	0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x63, 0x75, 0x72, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x06, 0x73, 0x65, 0x63, 0x75, 0x72, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x74, 0x74,
	0x70, 0x6f, 0x6e, 0x6c, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x68, 0x74, 0x74,
	0x70, 0x6f, 0x6e, 0x6c, 0x79, 0x22, 0x6b, 0x0a, 0x16, 0x43, 0x4d, 0x73, 0x67, 0x53, 0x65, 0x74,
	0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x52, 0x61, 0x74, 0x65, 0x12,
	0x25, 0x0a, 0x0e, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72,
	0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x6e, 0x54, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x52, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x10, 0x6e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x52, 0x61,
	0x74, 0x65, 0x22, 0x39, 0x0a, 0x10, 0x43, 0x4d, 0x73, 0x67, 0x50, 0x61, 0x75, 0x73, 0x65, 0x52,
	0x65, 0x70, 0x61, 0x69, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65,
	0x72, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d,
	0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x22, 0x38, 0x0a,
	0x0f, 0x43, 0x4d, 0x73, 0x67, 0x46, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x70, 0x61, 0x69, 0x6e, 0x74,
	0x12, 0x25, 0x0a, 0x0e, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x5f, 0x68, 0x61, 0x6e, 0x64,
	0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65,
	0x72, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x22, 0x3e, 0x0a, 0x15, 0x43, 0x4d, 0x73, 0x67, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x46, 0x75, 0x6c, 0x6c, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e,
	0x12, 0x25, 0x0a, 0x0e, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x5f, 0x68, 0x61, 0x6e, 0x64,
	0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65,
	0x72, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x22, 0x3b, 0x0a, 0x12, 0x43, 0x4d, 0x73, 0x67, 0x45,
	0x78, 0x69, 0x74, 0x46, 0x75, 0x6c, 0x6c, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x12, 0x25, 0x0a,
	0x0e, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x48, 0x61,
	0x6e, 0x64, 0x6c, 0x65, 0x22, 0x43, 0x0a, 0x1a, 0x43, 0x4d, 0x73, 0x67, 0x54, 0x6f, 0x67, 0x67,
	0x6c, 0x65, 0x46, 0x69, 0x6e, 0x64, 0x49, 0x6e, 0x50, 0x61, 0x67, 0x65, 0x44, 0x69, 0x61, 0x6c,
	0x6f, 0x67, 0x12, 0x25, 0x0a, 0x0e, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x5f, 0x68, 0x61,
	0x6e, 0x64, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x62, 0x72, 0x6f, 0x77,
	0x73, 0x65, 0x72, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x22, 0x3f, 0x0a, 0x16, 0x43, 0x4d, 0x73,
	0x67, 0x53, 0x65, 0x74, 0x50, 0x49, 0x44, 0x53, 0x68, 0x75, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x44,
	0x6f, 0x77, 0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x5f, 0x68,
	0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x62, 0x72, 0x6f,
	0x77, 0x73, 0x65, 0x72, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x22, 0x48, 0x0a, 0x1f, 0x43, 0x4d,
	0x73, 0x67, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x42, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f,
	0x75, 0x6e, 0x64, 0x54, 0x68, 0x72, 0x6f, 0x74, 0x74, 0x6c, 0x69, 0x6e, 0x67, 0x12, 0x25, 0x0a,
	0x0e, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x48, 0x61,
	0x6e, 0x64, 0x6c, 0x65, 0x22, 0x3f, 0x0a, 0x16, 0x43, 0x4d, 0x73, 0x67, 0x41, 0x63, 0x6b, 0x50,
	0x49, 0x44, 0x53, 0x68, 0x75, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x44, 0x6f, 0x77, 0x6e, 0x12, 0x25,
	0x0a, 0x0e, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x48,
	0x61, 0x6e, 0x64, 0x6c, 0x65, 0x22, 0x4f, 0x0a, 0x14, 0x43, 0x4d, 0x73, 0x67, 0x47, 0x65, 0x74,
	0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x73, 0x46, 0x6f, 0x72, 0x55, 0x52, 0x4c, 0x12, 0x25, 0x0a,
	0x0e, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x48, 0x61,
	0x6e, 0x64, 0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0x5f, 0x0a, 0x07, 0x43, 0x43, 0x6f, 0x6f, 0x6b, 0x69,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x64,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x22, 0x81, 0x01, 0x0a, 0x1c, 0x43, 0x4d, 0x73, 0x67,
	0x47, 0x65, 0x74, 0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x73, 0x46, 0x6f, 0x72, 0x55, 0x52, 0x4c,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x62, 0x72, 0x6f, 0x77,
	0x73, 0x65, 0x72, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0d, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72,
	0x6c, 0x12, 0x28, 0x0a, 0x07, 0x63, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x2e, 0x43, 0x43, 0x6f, 0x6f, 0x6b,
	0x69, 0x65, 0x52, 0x07, 0x63, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x73, 0x22, 0x88, 0x02, 0x0a, 0x10,
	0x43, 0x4d, 0x73, 0x67, 0x4e, 0x6f, 0x64, 0x65, 0x48, 0x61, 0x73, 0x46, 0x6f, 0x63, 0x75, 0x73,
	0x12, 0x25, 0x0a, 0x0e, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x5f, 0x68, 0x61, 0x6e, 0x64,
	0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65,
	0x72, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x49, 0x6e, 0x70, 0x75,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x62, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x74, 0x61,
	0x67, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x65, 0x6c, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x74, 0x61, 0x67, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x73,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x62, 0x75, 0x74,
	0x74, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x12, 0x2e, 0x0a, 0x12, 0x62, 0x48, 0x61, 0x73, 0x4d,
	0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x12, 0x62, 0x48, 0x61, 0x73, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c,
	0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x6e, 0x70, 0x75, 0x74,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6e, 0x70,
	0x75, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0x41, 0x0a, 0x18, 0x43, 0x4d, 0x73, 0x67, 0x5a, 0x6f,
	0x6f, 0x6d, 0x54, 0x6f, 0x46, 0x6f, 0x63, 0x75, 0x73, 0x65, 0x64, 0x45, 0x6c, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x5f, 0x68, 0x61,
	0x6e, 0x64, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x62, 0x72, 0x6f, 0x77,
	0x73, 0x65, 0x72, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x22, 0x47, 0x0a, 0x1e, 0x43, 0x4d, 0x73,
	0x67, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x46, 0x75, 0x6c, 0x6c, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e,
	0x46, 0x6c, 0x61, 0x73, 0x68, 0x49, 0x66, 0x4f, 0x70, 0x65, 0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x62,
	0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0d, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x48, 0x61, 0x6e, 0x64,
	0x6c, 0x65, 0x22, 0x4c, 0x0a, 0x23, 0x43, 0x4d, 0x73, 0x67, 0x50, 0x61, 0x75, 0x73, 0x65, 0x46,
	0x75, 0x6c, 0x6c, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x4d, 0x6f,
	0x76, 0x69, 0x65, 0x49, 0x66, 0x4f, 0x70, 0x65, 0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x62, 0x72, 0x6f,
	0x77, 0x73, 0x65, 0x72, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0d, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65,
	0x22, 0x3c, 0x0a, 0x13, 0x43, 0x4d, 0x73, 0x67, 0x46, 0x6f, 0x63, 0x75, 0x73, 0x65, 0x64, 0x4e,
	0x6f, 0x64, 0x65, 0x54, 0x65, 0x78, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x62, 0x72, 0x6f, 0x77, 0x73,
	0x65, 0x72, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0d, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x22, 0x5a,
	0x0a, 0x1b, 0x43, 0x4d, 0x73, 0x67, 0x46, 0x6f, 0x63, 0x75, 0x73, 0x65, 0x64, 0x4e, 0x6f, 0x64,
	0x65, 0x54, 0x65, 0x78, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a,
	0x0e, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x48, 0x61,
	0x6e, 0x64, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x28, 0x0a, 0x0b, 0x43, 0x4d,
	0x73, 0x67, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x44, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x75, 0x69,
	0x6c, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x62, 0x75, 0x69,
	0x6c, 0x64, 0x49, 0x64, 0x22, 0x39, 0x0a, 0x10, 0x43, 0x4d, 0x73, 0x67, 0x4f, 0x70, 0x65, 0x6e,
	0x44, 0x65, 0x76, 0x54, 0x6f, 0x6f, 0x6c, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x62, 0x72, 0x6f, 0x77,
	0x73, 0x65, 0x72, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0d, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x22,
	0x3a, 0x0a, 0x11, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x44, 0x65, 0x76, 0x54,
	0x6f, 0x6f, 0x6c, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x5f,
	0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x62, 0x72,
	0x6f, 0x77, 0x73, 0x65, 0x72, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x22, 0x58, 0x0a, 0x0e, 0x43,
	0x4d, 0x73, 0x67, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x32, 0x36, 0x34, 0x12, 0x25, 0x0a,
	0x0e, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x48, 0x61,
	0x6e, 0x64, 0x6c, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x6e, 0x6c, 0x6f, 0x63,
	0x6b, 0x43, 0x6f, 0x64, 0x65, 0x22, 0xad, 0x03, 0x0a, 0x1c, 0x43, 0x4d, 0x73, 0x67, 0x53, 0x63,
	0x72, 0x65, 0x65, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65,
	0x72, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d,
	0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x25, 0x0a,
	0x0e, 0x6f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x5f, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x6f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x57,
	0x69, 0x64, 0x74, 0x68, 0x12, 0x27, 0x0a, 0x0f, 0x6f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65,
	0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x6f,
	0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x21, 0x0a,
	0x0c, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x5f, 0x6c, 0x65, 0x66, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0b, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x4c, 0x65, 0x66, 0x74,
	0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x5f, 0x74, 0x6f, 0x70, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x54, 0x6f,
	0x70, 0x12, 0x23, 0x0a, 0x0d, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x5f, 0x72, 0x69, 0x67,
	0x68, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f,
	0x72, 0x52, 0x69, 0x67, 0x68, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f,
	0x72, 0x5f, 0x62, 0x6f, 0x74, 0x74, 0x6f, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d,
	0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x42, 0x6f, 0x74, 0x74, 0x6f, 0x6d, 0x12, 0x1f, 0x0a,
	0x0b, 0x75, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6c, 0x65, 0x66, 0x74, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0a, 0x75, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x65, 0x66, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x75, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x74, 0x6f, 0x70, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x09, 0x75, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x6f, 0x70, 0x12, 0x21, 0x0a,
	0x0c, 0x75, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x72, 0x69, 0x67, 0x68, 0x74, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0b, 0x75, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x69, 0x67, 0x68, 0x74,
	0x12, 0x23, 0x0a, 0x0d, 0x75, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x62, 0x6f, 0x74, 0x74, 0x6f,
	0x6d, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x75, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x42,
	0x6f, 0x74, 0x74, 0x6f, 0x6d, 0x22, 0x3c, 0x0a, 0x13, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x65,
	0x61, 0x72, 0x41, 0x6c, 0x6c, 0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x73, 0x12, 0x25, 0x0a, 0x0e,
	0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x48, 0x61, 0x6e,
	0x64, 0x6c, 0x65, 0x22, 0x57, 0x0a, 0x0d, 0x43, 0x4d, 0x73, 0x67, 0x53, 0x63, 0x72, 0x65, 0x65,
	0x6e, 0x44, 0x50, 0x49, 0x12, 0x25, 0x0a, 0x0e, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x5f,
	0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x62, 0x72,
	0x6f, 0x77, 0x73, 0x65, 0x72, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x64,
	0x70, 0x69, 0x5f, 0x73, 0x63, 0x61, 0x6c, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x0a, 0x64, 0x70, 0x69, 0x53, 0x63, 0x61, 0x6c, 0x69, 0x6e, 0x67, 0x22, 0x32, 0x0a, 0x16,
	0x43, 0x4d, 0x73, 0x67, 0x41, 0x75, 0x74, 0x68, 0x65, 0x64, 0x53, 0x74, 0x65, 0x61, 0x6d, 0x44,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73,
	0x22, 0x2d, 0x0a, 0x13, 0x43, 0x4d, 0x73, 0x67, 0x53, 0x74, 0x65, 0x61, 0x6d, 0x41, 0x75, 0x74,
	0x68, 0x4e, 0x65, 0x65, 0x64, 0x65, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x6c, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x6c, 0x65, 0x72, 0x22,
	0x33, 0x0a, 0x17, 0x43, 0x4d, 0x73, 0x67, 0x53, 0x74, 0x65, 0x61, 0x6d, 0x41, 0x75, 0x74, 0x68,
	0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x73, 0x53, 0x65, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x22, 0xb1, 0x01, 0x0a, 0x14, 0x43, 0x4d, 0x73, 0x67, 0x4a, 0x53, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x25, 0x0a,
	0x0e, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x48, 0x61,
	0x6e, 0x64, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x5e, 0x0a, 0x0b, 0x6d, 0x65, 0x74, 0x68,
	0x6f, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e,
	0x73, 0x74, 0x65, 0x61, 0x6d, 0x2e, 0x45, 0x4a, 0x53, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x54, 0x79, 0x70, 0x65, 0x3a, 0x1f, 0x6b, 0x5f, 0x45,
	0x4a, 0x53, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x54, 0x79, 0x70, 0x65, 0x5f, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x52, 0x0a, 0x6d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x54, 0x79, 0x70, 0x65, 0x22, 0x59, 0x0a, 0x11, 0x43, 0x4a, 0x53, 0x4d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x41, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1b, 0x0a,
	0x09, 0x6a, 0x73, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6a, 0x73, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x27, 0x0a, 0x0f, 0x66, 0x75,
	0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0e, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x61, 0x6e,
	0x64, 0x6c, 0x65, 0x22, 0xea, 0x03, 0x0a, 0x0b, 0x43, 0x4d, 0x73, 0x67, 0x4a, 0x53, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x6f, 0x6f, 0x6c, 0x5f, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x62, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6e, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x69, 0x6e, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x75, 0x69, 0x6e, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x09, 0x75, 0x69, 0x6e, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x21,
	0x0a, 0x0c, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x66,
	0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x19, 0x0a,
	0x08, 0x69, 0x73, 0x5f, 0x61, 0x72, 0x72, 0x61, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x69, 0x73, 0x41, 0x72, 0x72, 0x61, 0x79, 0x12, 0x35, 0x0a, 0x0c, 0x61, 0x72, 0x72, 0x61,
	0x79, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x4a, 0x53, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x52, 0x0b, 0x61, 0x72, 0x72, 0x61, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12,
	0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x50, 0x0a, 0x11,
	0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65,
	0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x2e,
	0x43, 0x4d, 0x73, 0x67, 0x4a, 0x53, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x2e, 0x4a, 0x53, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x52, 0x10, 0x6f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x1a, 0x50,
	0x0a, 0x10, 0x4a, 0x53, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72,
	0x74, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x2e, 0x43, 0x4d,
	0x73, 0x67, 0x4a, 0x53, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0x7f, 0x0a, 0x10, 0x43, 0x4d, 0x73, 0x67, 0x4a, 0x53, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x43, 0x61, 0x6c, 0x6c, 0x12, 0x25, 0x0a, 0x0e, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x5f,
	0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x62, 0x72,
	0x6f, 0x77, 0x73, 0x65, 0x72, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x30, 0x0a, 0x09, 0x61, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x4a,
	0x53, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x09, 0x61, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x22, 0x99, 0x01, 0x0a, 0x15, 0x43, 0x4d, 0x73, 0x67, 0x4a, 0x53, 0x45, 0x78, 0x65, 0x63,
	0x75, 0x74, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x12, 0x25, 0x0a, 0x0e, 0x62,
	0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0d, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x48, 0x61, 0x6e, 0x64,
	0x6c, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x68,
	0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x66, 0x75, 0x6e,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x30, 0x0a, 0x09, 0x61,
	0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x4a, 0x53, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x52, 0x09, 0x61, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x67, 0x0a,
	0x15, 0x43, 0x4d, 0x73, 0x67, 0x4a, 0x53, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x43, 0x61,
	0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x12, 0x25, 0x0a, 0x0e, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65,
	0x72, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d,
	0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x27, 0x0a,
	0x0f, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x22, 0x5b, 0x0a, 0x14, 0x43, 0x4d, 0x73, 0x67, 0x4a, 0x53,
	0x52, 0x61, 0x69, 0x73, 0x65, 0x45, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x25,
	0x0a, 0x0e, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x48,
	0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x78, 0x63, 0x65, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x86, 0x01, 0x0a, 0x14, 0x43, 0x4d, 0x73, 0x67, 0x4c, 0x6f, 0x61, 0x64,
	0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x0e,
	0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x48, 0x61, 0x6e,
	0x64, 0x6c, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10,
	0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x74, 0x68,
	0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x22, 0x6d, 0x0a, 0x10,
	0x43, 0x4d, 0x73, 0x67, 0x4a, 0x75, 0x6d, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x69, 0x6e, 0x6b,
	0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x75, 0x72, 0x6c, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x75, 0x72, 0x6c, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x1b,
	0x0a, 0x09, 0x69, 0x63, 0x6f, 0x6e, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x69, 0x63, 0x6f, 0x6e, 0x50, 0x61, 0x74, 0x68, 0x22, 0x85, 0x01, 0x0a, 0x12,
	0x43, 0x4d, 0x53, 0x67, 0x4a, 0x75, 0x6d, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x52, 0x55, 0x41,
	0x70, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x05, 0x61, 0x70, 0x70, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70,
	0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x75,
	0x72, 0x6c, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x75,
	0x72, 0x6c, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x63, 0x6f, 0x6e, 0x5f, 0x70,
	0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x63, 0x6f, 0x6e, 0x50,
	0x61, 0x74, 0x68, 0x22, 0xab, 0x01, 0x0a, 0x0f, 0x43, 0x4d, 0x73, 0x67, 0x53, 0x65, 0x74, 0x4a,
	0x75, 0x6d, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x65, 0x61, 0x6d,
	0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x65,
	0x61, 0x6d, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x72, 0x75, 0x5f, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x72, 0x75, 0x54, 0x69,
	0x74, 0x6c, 0x65, 0x12, 0x2d, 0x0a, 0x04, 0x61, 0x70, 0x70, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x2e, 0x43, 0x4d, 0x53, 0x67, 0x4a, 0x75,
	0x6d, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x52, 0x55, 0x41, 0x70, 0x70, 0x52, 0x04, 0x61, 0x70,
	0x70, 0x73, 0x12, 0x2d, 0x0a, 0x05, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x4a, 0x75,
	0x6d, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x05, 0x6c, 0x69, 0x6e, 0x6b,
	0x73, 0x22, 0x64, 0x0a, 0x1c, 0x43, 0x4d, 0x73, 0x67, 0x53, 0x65, 0x74, 0x47, 0x61, 0x6d, 0x65,
	0x4f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x50, 0x49, 0x44,
	0x73, 0x12, 0x25, 0x0a, 0x0e, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x5f, 0x68, 0x61, 0x6e,
	0x64, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x62, 0x72, 0x6f, 0x77, 0x73,
	0x65, 0x72, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x5f, 0x70, 0x69, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x09, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x50, 0x69, 0x64, 0x22, 0x8d, 0x01, 0x0a, 0x1e, 0x43, 0x4d, 0x73, 0x67,
	0x47, 0x61, 0x6d, 0x65, 0x4f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x54, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x49, 0x44, 0x12, 0x25, 0x0a, 0x0e, 0x62, 0x72,
	0x6f, 0x77, 0x73, 0x65, 0x72, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0d, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x48, 0x61, 0x6e, 0x64, 0x6c,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x70, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x50, 0x69, 0x64,
	0x12, 0x25, 0x0a, 0x0e, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x68, 0x61, 0x6e, 0x64,
	0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72,
	0x65, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x22, 0x87, 0x02, 0x0a, 0x1b, 0x43, 0x4d, 0x73, 0x67,
	0x44, 0x72, 0x61, 0x67, 0x67, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x73,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x62, 0x72, 0x6f, 0x77, 0x73,
	0x65, 0x72, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0d, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x47,
	0x0a, 0x05, 0x72, 0x65, 0x63, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e,
	0x73, 0x74, 0x65, 0x61, 0x6d, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x44, 0x72, 0x61, 0x67, 0x67, 0x61,
	0x62, 0x6c, 0x65, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x64, 0x2e, 0x44, 0x72, 0x61, 0x67, 0x67, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x63, 0x74, 0x73,
	0x52, 0x05, 0x72, 0x65, 0x63, 0x74, 0x73, 0x1a, 0x78, 0x0a, 0x0e, 0x44, 0x72, 0x61, 0x67, 0x67,
	0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x63, 0x74, 0x73, 0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x01, 0x78, 0x12, 0x0c, 0x0a, 0x01, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x01, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x68,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x68, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x72, 0x61, 0x67, 0x67, 0x61, 0x62, 0x6c, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x64, 0x72, 0x61, 0x67, 0x67, 0x61, 0x62, 0x6c,
	0x65, 0x22, 0x6c, 0x0a, 0x15, 0x43, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x73, 0x69, 0x7a, 0x65, 0x47,
	0x72, 0x69, 0x70, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x62, 0x72,
	0x6f, 0x77, 0x73, 0x65, 0x72, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0d, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x48, 0x61, 0x6e, 0x64, 0x6c,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22,
	0x88, 0x01, 0x0a, 0x15, 0x43, 0x4d, 0x73, 0x67, 0x53, 0x65, 0x74, 0x57, 0x69, 0x6e, 0x64, 0x6f,
	0x77, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x62, 0x72, 0x6f,
	0x77, 0x73, 0x65, 0x72, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0d, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65,
	0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x01, 0x78, 0x12, 0x0c,
	0x0a, 0x01, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x01, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x77, 0x69, 0x64,
	0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0x37, 0x0a, 0x0e, 0x43, 0x4d,
	0x73, 0x67, 0x53, 0x68, 0x6f, 0x77, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x12, 0x25, 0x0a, 0x0e,
	0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x48, 0x61, 0x6e,
	0x64, 0x6c, 0x65, 0x22, 0x37, 0x0a, 0x0e, 0x43, 0x4d, 0x73, 0x67, 0x48, 0x69, 0x64, 0x65, 0x57,
	0x69, 0x6e, 0x64, 0x6f, 0x77, 0x12, 0x25, 0x0a, 0x0e, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72,
	0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x62,
	0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x22, 0x3f, 0x0a, 0x16,
	0x43, 0x4d, 0x73, 0x67, 0x42, 0x72, 0x69, 0x6e, 0x67, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x54,
	0x6f, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65,
	0x72, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d,
	0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x22, 0x40, 0x0a,
	0x17, 0x43, 0x4d, 0x73, 0x67, 0x53, 0x65, 0x74, 0x46, 0x6f, 0x72, 0x65, 0x67, 0x72, 0x6f, 0x75,
	0x6e, 0x64, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x12, 0x25, 0x0a, 0x0e, 0x62, 0x72, 0x6f, 0x77,
	0x73, 0x65, 0x72, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0d, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x22,
	0x42, 0x0a, 0x19, 0x43, 0x4d, 0x73, 0x67, 0x4d, 0x61, 0x78, 0x69, 0x6d, 0x69, 0x7a, 0x65, 0x52,
	0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x12, 0x25, 0x0a, 0x0e,
	0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x48, 0x61, 0x6e,
	0x64, 0x6c, 0x65, 0x22, 0x3b, 0x0a, 0x12, 0x43, 0x4d, 0x73, 0x67, 0x4d, 0x69, 0x6e, 0x69, 0x6d,
	0x69, 0x7a, 0x65, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x12, 0x25, 0x0a, 0x0e, 0x62, 0x72, 0x6f,
	0x77, 0x73, 0x65, 0x72, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0d, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65,
	0x22, 0x43, 0x0a, 0x1a, 0x43, 0x4d, 0x73, 0x67, 0x53, 0x68, 0x6f, 0x77, 0x42, 0x72, 0x6f, 0x77,
	0x73, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x4d, 0x65, 0x6e, 0x75, 0x12, 0x25,
	0x0a, 0x0e, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x48,
	0x61, 0x6e, 0x64, 0x6c, 0x65, 0x22, 0x52, 0x0a, 0x15, 0x43, 0x4d, 0x73, 0x67, 0x49, 0x6d, 0x65,
	0x53, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x25,
	0x0a, 0x0e, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x48,
	0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x22, 0x4e, 0x0a, 0x11, 0x43, 0x4d, 0x73,
	0x67, 0x49, 0x6d, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x54, 0x65, 0x78, 0x74, 0x12, 0x25,
	0x0a, 0x0e, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x48,
	0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x22, 0x41, 0x0a, 0x18, 0x43, 0x4d, 0x73,
	0x67, 0x49, 0x6d, 0x65, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72,
	0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x62,
	0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x22, 0x63, 0x0a, 0x1e,
	0x43, 0x4d, 0x73, 0x67, 0x49, 0x6d, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x12, 0x25,
	0x0a, 0x0e, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x48,
	0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x01, 0x78, 0x12, 0x0c, 0x0a, 0x01, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x01,
	0x79, 0x22, 0x57, 0x0a, 0x12, 0x43, 0x4d, 0x73, 0x67, 0x49, 0x6e, 0x73, 0x70, 0x65, 0x63, 0x74,
	0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x62, 0x72, 0x6f, 0x77, 0x73,
	0x65, 0x72, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0d, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x0c,
	0x0a, 0x01, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x01, 0x78, 0x12, 0x0c, 0x0a, 0x01,
	0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x01, 0x79, 0x22, 0x50, 0x0a, 0x0d, 0x43, 0x4d,
	0x73, 0x67, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x46, 0x35, 0x12, 0x25, 0x0a, 0x0e, 0x62,
	0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0d, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x48, 0x61, 0x6e, 0x64,
	0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x22, 0x4c, 0x0a, 0x11,
	0x43, 0x4d, 0x73, 0x67, 0x53, 0x74, 0x61, 0x72, 0x74, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61,
	0x64, 0x12, 0x25, 0x0a, 0x0e, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x5f, 0x68, 0x61, 0x6e,
	0x64, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x62, 0x72, 0x6f, 0x77, 0x73,
	0x65, 0x72, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x2a, 0xad, 0x01, 0x0a, 0x15, 0x45,
	0x4a, 0x53, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x23, 0x0a, 0x1f, 0x6b, 0x5f, 0x45, 0x4a, 0x53, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x54, 0x79, 0x70, 0x65, 0x5f,
	0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x10, 0x00, 0x12, 0x24, 0x0a, 0x20, 0x6b, 0x5f, 0x45,
	0x4a, 0x53, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x54, 0x79, 0x70, 0x65, 0x5f, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x10, 0x01, 0x12,
	0x24, 0x0a, 0x20, 0x6b, 0x5f, 0x45, 0x4a, 0x53, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72,
	0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x43, 0x61, 0x6c, 0x6c, 0x62,
	0x61, 0x63, 0x6b, 0x10, 0x02, 0x12, 0x23, 0x0a, 0x1f, 0x6b, 0x5f, 0x45, 0x4a, 0x53, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x54, 0x79, 0x70, 0x65,
	0x5f, 0x50, 0x72, 0x6f, 0x6d, 0x69, 0x73, 0x65, 0x10, 0x03, 0x42, 0x37, 0x48, 0x01, 0x5a, 0x30,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x31, 0x33, 0x6b, 0x2f, 0x67,
	0x6f, 0x2d, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x2d, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x65, 0x61, 0x6d,
	0x80, 0x01, 0x00,
}

var (
	file_steam_htmlmessages_proto_rawDescOnce sync.Once
	file_steam_htmlmessages_proto_rawDescData = file_steam_htmlmessages_proto_rawDesc
)

func file_steam_htmlmessages_proto_rawDescGZIP() []byte {
	file_steam_htmlmessages_proto_rawDescOnce.Do(func() {
		file_steam_htmlmessages_proto_rawDescData = protoimpl.X.CompressGZIP(file_steam_htmlmessages_proto_rawDescData)
	})
	return file_steam_htmlmessages_proto_rawDescData
}

var file_steam_htmlmessages_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_steam_htmlmessages_proto_msgTypes = make([]protoimpl.MessageInfo, 151)
var file_steam_htmlmessages_proto_goTypes = []interface{}{
	(EJSRegisterMethodType)(0),                             // 0: steam.EJSRegisterMethodType
	(*CMsgKeyUp)(nil),                                      // 1: steam.CMsgKeyUp
	(*CMsgKeyDown)(nil),                                    // 2: steam.CMsgKeyDown
	(*CMsgKeyChar)(nil),                                    // 3: steam.CMsgKeyChar
	(*CMsgMouseDown)(nil),                                  // 4: steam.CMsgMouseDown
	(*CMsgMouseUp)(nil),                                    // 5: steam.CMsgMouseUp
	(*CMsgMouseDblClick)(nil),                              // 6: steam.CMsgMouseDblClick
	(*CMsgMouseWheel)(nil),                                 // 7: steam.CMsgMouseWheel
	(*CMsgMouseMove)(nil),                                  // 8: steam.CMsgMouseMove
	(*CMsgMouseLeave)(nil),                                 // 9: steam.CMsgMouseLeave
	(*CMsgBrowserCreate)(nil),                              // 10: steam.CMsgBrowserCreate
	(*CMsgBrowserCreateResponse)(nil),                      // 11: steam.CMsgBrowserCreateResponse
	(*CMsgBrowserRemove)(nil),                              // 12: steam.CMsgBrowserRemove
	(*CMsgSetLocalFileRequestMapping)(nil),                 // 13: steam.CMsgSetLocalFileRequestMapping
	(*CMsgBrowserErrorStrings)(nil),                        // 14: steam.CMsgBrowserErrorStrings
	(*CMsgBrowserSize)(nil),                                // 15: steam.CMsgBrowserSize
	(*CMsgBrowserSetMinSize)(nil),                          // 16: steam.CMsgBrowserSetMinSize
	(*CMsgBrowserPosition)(nil),                            // 17: steam.CMsgBrowserPosition
	(*CMsgBrowserResized)(nil),                             // 18: steam.CMsgBrowserResized
	(*CMsgPostURL)(nil),                                    // 19: steam.CMsgPostURL
	(*CMsgAddHeader)(nil),                                  // 20: steam.CMsgAddHeader
	(*CMsgStopLoad)(nil),                                   // 21: steam.CMsgStopLoad
	(*CMsgReload)(nil),                                     // 22: steam.CMsgReload
	(*CMsgGoForward)(nil),                                  // 23: steam.CMsgGoForward
	(*CMsgGoBack)(nil),                                     // 24: steam.CMsgGoBack
	(*CMsgWasHidden)(nil),                                  // 25: steam.CMsgWasHidden
	(*CMsgClearHistory)(nil),                               // 26: steam.CMsgClearHistory
	(*CMsgClearAllBrowsingData)(nil),                       // 27: steam.CMsgClearAllBrowsingData
	(*CMsgCopy)(nil),                                       // 28: steam.CMsgCopy
	(*CMsgPaste)(nil),                                      // 29: steam.CMsgPaste
	(*CMsgExecuteJavaScript)(nil),                          // 30: steam.CMsgExecuteJavaScript
	(*CMsgSetFocus)(nil),                                   // 31: steam.CMsgSetFocus
	(*CMsgHorizontalScrollBarSize)(nil),                    // 32: steam.CMsgHorizontalScrollBarSize
	(*CMsgHorizontalScrollBarSizeResponse)(nil),            // 33: steam.CMsgHorizontalScrollBarSizeResponse
	(*CMsgVerticalScrollBarSize)(nil),                      // 34: steam.CMsgVerticalScrollBarSize
	(*CMsgVerticalScrollBarSizeResponse)(nil),              // 35: steam.CMsgVerticalScrollBarSizeResponse
	(*CMsgFind)(nil),                                       // 36: steam.CMsgFind
	(*CMsgStopFind)(nil),                                   // 37: steam.CMsgStopFind
	(*CMsgSetHorizontalScroll)(nil),                        // 38: steam.CMsgSetHorizontalScroll
	(*CMsgSetVerticalScroll)(nil),                          // 39: steam.CMsgSetVerticalScroll
	(*CMsgSetZoomLevel)(nil),                               // 40: steam.CMsgSetZoomLevel
	(*CMsgViewSource)(nil),                                 // 41: steam.CMsgViewSource
	(*CMsgBrowserReady)(nil),                               // 42: steam.CMsgBrowserReady
	(*CMsgURLChanged)(nil),                                 // 43: steam.CMsgURLChanged
	(*CHTMLHeader)(nil),                                    // 44: steam.CHTMLHeader
	(*CHTMLPageSecurityInfo)(nil),                          // 45: steam.CHTMLPageSecurityInfo
	(*CMsgFinishedRequest)(nil),                            // 46: steam.CMsgFinishedRequest
	(*CMsgLoadedRequest)(nil),                              // 47: steam.CMsgLoadedRequest
	(*CMsgPageSecurity)(nil),                               // 48: steam.CMsgPageSecurity
	(*CMsgStartRequest)(nil),                               // 49: steam.CMsgStartRequest
	(*CMsgStartRequestResponse)(nil),                       // 50: steam.CMsgStartRequestResponse
	(*CMsgShowPopup)(nil),                                  // 51: steam.CMsgShowPopup
	(*CMsgHidePopup)(nil),                                  // 52: steam.CMsgHidePopup
	(*CMsgSizePopup)(nil),                                  // 53: steam.CMsgSizePopup
	(*CMsgOpenNewTab)(nil),                                 // 54: steam.CMsgOpenNewTab
	(*CMsgPopupHTMLWindow)(nil),                            // 55: steam.CMsgPopupHTMLWindow
	(*CMsgPopupHTMLWindowResponse)(nil),                    // 56: steam.CMsgPopupHTMLWindowResponse
	(*CMsgSetHTMLTitle)(nil),                               // 57: steam.CMsgSetHTMLTitle
	(*CMsgLoadingResource)(nil),                            // 58: steam.CMsgLoadingResource
	(*CMsgStatusText)(nil),                                 // 59: steam.CMsgStatusText
	(*CMsgSetCursor)(nil),                                  // 60: steam.CMsgSetCursor
	(*CMsgFileLoadDialog)(nil),                             // 61: steam.CMsgFileLoadDialog
	(*CMsgFileLoadDialogResponse)(nil),                     // 62: steam.CMsgFileLoadDialogResponse
	(*CMsgShowToolTip)(nil),                                // 63: steam.CMsgShowToolTip
	(*CMsgUpdateToolTip)(nil),                              // 64: steam.CMsgUpdateToolTip
	(*CMsgHideToolTip)(nil),                                // 65: steam.CMsgHideToolTip
	(*CMsgSearchResults)(nil),                              // 66: steam.CMsgSearchResults
	(*CMsgClose)(nil),                                      // 67: steam.CMsgClose
	(*CMsgSetSharedPaintBuffers)(nil),                      // 68: steam.CMsgSetSharedPaintBuffers
	(*CMsgAckSharedPaintBuffers)(nil),                      // 69: steam.CMsgAckSharedPaintBuffers
	(*CMsgNeedsPaint)(nil),                                 // 70: steam.CMsgNeedsPaint
	(*CMsgComboNeedsPaint)(nil),                            // 71: steam.CMsgComboNeedsPaint
	(*CMsgNeedsSharedTexturePaint)(nil),                    // 72: steam.CMsgNeedsSharedTexturePaint
	(*CMsgGameOverlayTexturePaint)(nil),                    // 73: steam.CMsgGameOverlayTexturePaint
	(*CMsgGetZoom)(nil),                                    // 74: steam.CMsgGetZoom
	(*CMsgGetZoomResponse)(nil),                            // 75: steam.CMsgGetZoomResponse
	(*CMsgLinkAtPosition)(nil),                             // 76: steam.CMsgLinkAtPosition
	(*CMsgLinkAtPositionResponse)(nil),                     // 77: steam.CMsgLinkAtPositionResponse
	(*CMsgZoomToElementAtPosition)(nil),                    // 78: steam.CMsgZoomToElementAtPosition
	(*CMsgZoomToElementAtPositionResponse)(nil),            // 79: steam.CMsgZoomToElementAtPositionResponse
	(*CMsgScalePageToValue)(nil),                           // 80: steam.CMsgScalePageToValue
	(*CMsgForcePopupsToDirectHWND)(nil),                    // 81: steam.CMsgForcePopupsToDirectHWND
	(*CMsgScalePageToValueResponse)(nil),                   // 82: steam.CMsgScalePageToValueResponse
	(*CMsgSavePageToJPEG)(nil),                             // 83: steam.CMsgSavePageToJPEG
	(*CMsgSavePageToJPEGResponse)(nil),                     // 84: steam.CMsgSavePageToJPEGResponse
	(*CMsgJSAlert)(nil),                                    // 85: steam.CMsgJSAlert
	(*CMsgJSConfirm)(nil),                                  // 86: steam.CMsgJSConfirm
	(*CMsgJSDialogResponse)(nil),                           // 87: steam.CMsgJSDialogResponse
	(*CMsgCanGoBackAndForward)(nil),                        // 88: steam.CMsgCanGoBackAndForward
	(*CMsgOpenSteamURL)(nil),                               // 89: steam.CMsgOpenSteamURL
	(*CMsgSetCookie)(nil),                                  // 90: steam.CMsgSetCookie
	(*CMsgSetTargetFrameRate)(nil),                         // 91: steam.CMsgSetTargetFrameRate
	(*CMsgPauseRepaint)(nil),                               // 92: steam.CMsgPauseRepaint
	(*CMsgFullRepaint)(nil),                                // 93: steam.CMsgFullRepaint
	(*CMsgRequestFullScreen)(nil),                          // 94: steam.CMsgRequestFullScreen
	(*CMsgExitFullScreen)(nil),                             // 95: steam.CMsgExitFullScreen
	(*CMsgToggleFindInPageDialog)(nil),                     // 96: steam.CMsgToggleFindInPageDialog
	(*CMsgSetPIDShuttingDown)(nil),                         // 97: steam.CMsgSetPIDShuttingDown
	(*CMsgDisableBackgroundThrottling)(nil),                // 98: steam.CMsgDisableBackgroundThrottling
	(*CMsgAckPIDShuttingDown)(nil),                         // 99: steam.CMsgAckPIDShuttingDown
	(*CMsgGetCookiesForURL)(nil),                           // 100: steam.CMsgGetCookiesForURL
	(*CCookie)(nil),                                        // 101: steam.CCookie
	(*CMsgGetCookiesForURLResponse)(nil),                   // 102: steam.CMsgGetCookiesForURLResponse
	(*CMsgNodeHasFocus)(nil),                               // 103: steam.CMsgNodeHasFocus
	(*CMsgZoomToFocusedElement)(nil),                       // 104: steam.CMsgZoomToFocusedElement
	(*CMsgCloseFullScreenFlashIfOpen)(nil),                 // 105: steam.CMsgCloseFullScreenFlashIfOpen
	(*CMsgPauseFullScreenFlashMovieIfOpen)(nil),            // 106: steam.CMsgPauseFullScreenFlashMovieIfOpen
	(*CMsgFocusedNodeText)(nil),                            // 107: steam.CMsgFocusedNodeText
	(*CMsgFocusedNodeTextResponse)(nil),                    // 108: steam.CMsgFocusedNodeTextResponse
	(*CMsgBuildID)(nil),                                    // 109: steam.CMsgBuildID
	(*CMsgOpenDevTools)(nil),                               // 110: steam.CMsgOpenDevTools
	(*CMsgCloseDevTools)(nil),                              // 111: steam.CMsgCloseDevTools
	(*CMsgUnlockH264)(nil),                                 // 112: steam.CMsgUnlockH264
	(*CMsgScreenInformationChanged)(nil),                   // 113: steam.CMsgScreenInformationChanged
	(*CMsgClearAllCookies)(nil),                            // 114: steam.CMsgClearAllCookies
	(*CMsgScreenDPI)(nil),                                  // 115: steam.CMsgScreenDPI
	(*CMsgAuthedSteamDomains)(nil),                         // 116: steam.CMsgAuthedSteamDomains
	(*CMsgSteamAuthNeeded)(nil),                            // 117: steam.CMsgSteamAuthNeeded
	(*CMsgSteamAuthCookiesSet)(nil),                        // 118: steam.CMsgSteamAuthCookiesSet
	(*CMsgJSRegisterMethod)(nil),                           // 119: steam.CMsgJSRegisterMethod
	(*CJSMethodArgument)(nil),                              // 120: steam.CJSMethodArgument
	(*CMsgJSValue)(nil),                                    // 121: steam.CMsgJSValue
	(*CMsgJSMethodCall)(nil),                               // 122: steam.CMsgJSMethodCall
	(*CMsgJSExecuteCallback)(nil),                          // 123: steam.CMsgJSExecuteCallback
	(*CMsgJSReleaseCallback)(nil),                          // 124: steam.CMsgJSReleaseCallback
	(*CMsgJSRaiseException)(nil),                           // 125: steam.CMsgJSRaiseException
	(*CMsgLoadLocalization)(nil),                           // 126: steam.CMsgLoadLocalization
	(*CMsgJumpListLink)(nil),                               // 127: steam.CMsgJumpListLink
	(*CMSgJumpListMRUApp)(nil),                             // 128: steam.CMSgJumpListMRUApp
	(*CMsgSetJumpList)(nil),                                // 129: steam.CMsgSetJumpList
	(*CMsgSetGameOverlayTargetPIDs)(nil),                   // 130: steam.CMsgSetGameOverlayTargetPIDs
	(*CMsgGameOverlayTargetTextureID)(nil),                 // 131: steam.CMsgGameOverlayTargetTextureID
	(*CMsgDraggableRegionsChanged)(nil),                    // 132: steam.CMsgDraggableRegionsChanged
	(*CMsgResizeGripChanged)(nil),                          // 133: steam.CMsgResizeGripChanged
	(*CMsgSetWindowPosition)(nil),                          // 134: steam.CMsgSetWindowPosition
	(*CMsgShowWindow)(nil),                                 // 135: steam.CMsgShowWindow
	(*CMsgHideWindow)(nil),                                 // 136: steam.CMsgHideWindow
	(*CMsgBringWindowToFront)(nil),                         // 137: steam.CMsgBringWindowToFront
	(*CMsgSetForegroundWindow)(nil),                        // 138: steam.CMsgSetForegroundWindow
	(*CMsgMaximizeRestoreWindow)(nil),                      // 139: steam.CMsgMaximizeRestoreWindow
	(*CMsgMinimizeWindow)(nil),                             // 140: steam.CMsgMinimizeWindow
	(*CMsgShowBrowserContextMenu)(nil),                     // 141: steam.CMsgShowBrowserContextMenu
	(*CMsgImeSetComposition)(nil),                          // 142: steam.CMsgImeSetComposition
	(*CMsgImeCommitText)(nil),                              // 143: steam.CMsgImeCommitText
	(*CMsgImeCancelComposition)(nil),                       // 144: steam.CMsgImeCancelComposition
	(*CMsgImeCompositionRangeChanged)(nil),                 // 145: steam.CMsgImeCompositionRangeChanged
	(*CMsgInspectElement)(nil),                             // 146: steam.CMsgInspectElement
	(*CMsgDisableF5)(nil),                                  // 147: steam.CMsgDisableF5
	(*CMsgStartDownload)(nil),                              // 148: steam.CMsgStartDownload
	(*CMsgSetLocalFileRequestMapping_AdditionalRoute)(nil), // 149: steam.CMsgSetLocalFileRequestMapping.AdditionalRoute
	(*CMsgJSValue_JSObjectProperty)(nil),                   // 150: steam.CMsgJSValue.JSObjectProperty
	(*CMsgDraggableRegionsChanged_DraggableRects)(nil),     // 151: steam.CMsgDraggableRegionsChanged.DraggableRects
}
var file_steam_htmlmessages_proto_depIdxs = []int32{
	149, // 0: steam.CMsgSetLocalFileRequestMapping.routes:type_name -> steam.CMsgSetLocalFileRequestMapping.AdditionalRoute
	44,  // 1: steam.CMsgLoadedRequest.headers:type_name -> steam.CHTMLHeader
	45,  // 2: steam.CMsgPageSecurity.security_info:type_name -> steam.CHTMLPageSecurityInfo
	101, // 3: steam.CMsgGetCookiesForURLResponse.cookies:type_name -> steam.CCookie
	0,   // 4: steam.CMsgJSRegisterMethod.method_type:type_name -> steam.EJSRegisterMethodType
	121, // 5: steam.CMsgJSValue.array_values:type_name -> steam.CMsgJSValue
	150, // 6: steam.CMsgJSValue.object_properties:type_name -> steam.CMsgJSValue.JSObjectProperty
	121, // 7: steam.CMsgJSMethodCall.arguments:type_name -> steam.CMsgJSValue
	121, // 8: steam.CMsgJSExecuteCallback.arguments:type_name -> steam.CMsgJSValue
	128, // 9: steam.CMsgSetJumpList.apps:type_name -> steam.CMSgJumpListMRUApp
	127, // 10: steam.CMsgSetJumpList.links:type_name -> steam.CMsgJumpListLink
	151, // 11: steam.CMsgDraggableRegionsChanged.rects:type_name -> steam.CMsgDraggableRegionsChanged.DraggableRects
	121, // 12: steam.CMsgJSValue.JSObjectProperty.value:type_name -> steam.CMsgJSValue
	13,  // [13:13] is the sub-list for method output_type
	13,  // [13:13] is the sub-list for method input_type
	13,  // [13:13] is the sub-list for extension type_name
	13,  // [13:13] is the sub-list for extension extendee
	0,   // [0:13] is the sub-list for field type_name
}

func init() { file_steam_htmlmessages_proto_init() }
func file_steam_htmlmessages_proto_init() {
	if File_steam_htmlmessages_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_steam_htmlmessages_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgKeyUp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_htmlmessages_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgKeyDown); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_htmlmessages_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgKeyChar); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_htmlmessages_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgMouseDown); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_htmlmessages_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgMouseUp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_htmlmessages_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgMouseDblClick); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_htmlmessages_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgMouseWheel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_htmlmessages_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgMouseMove); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_htmlmessages_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgMouseLeave); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_htmlmessages_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgBrowserCreate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_htmlmessages_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgBrowserCreateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_htmlmessages_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgBrowserRemove); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_htmlmessages_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgSetLocalFileRequestMapping); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_htmlmessages_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgBrowserErrorStrings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_htmlmessages_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgBrowserSize); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_htmlmessages_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgBrowserSetMinSize); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_htmlmessages_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgBrowserPosition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_htmlmessages_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgBrowserResized); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_htmlmessages_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgPostURL); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_htmlmessages_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgAddHeader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_htmlmessages_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgStopLoad); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_htmlmessages_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgReload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_htmlmessages_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgGoForward); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_htmlmessages_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgGoBack); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_htmlmessages_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgWasHidden); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_htmlmessages_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgClearHistory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_htmlmessages_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgClearAllBrowsingData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_htmlmessages_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgCopy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_htmlmessages_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgPaste); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_htmlmessages_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgExecuteJavaScript); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_htmlmessages_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgSetFocus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_htmlmessages_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgHorizontalScrollBarSize); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_htmlmessages_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgHorizontalScrollBarSizeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_htmlmessages_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgVerticalScrollBarSize); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_htmlmessages_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgVerticalScrollBarSizeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_htmlmessages_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgFind); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_htmlmessages_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgStopFind); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_htmlmessages_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgSetHorizontalScroll); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_htmlmessages_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgSetVerticalScroll); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_htmlmessages_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgSetZoomLevel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_htmlmessages_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgViewSource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_htmlmessages_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgBrowserReady); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_htmlmessages_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgURLChanged); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_htmlmessages_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CHTMLHeader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_htmlmessages_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CHTMLPageSecurityInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_htmlmessages_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgFinishedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_htmlmessages_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgLoadedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_htmlmessages_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgPageSecurity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_htmlmessages_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgStartRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_htmlmessages_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgStartRequestResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_htmlmessages_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgShowPopup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_htmlmessages_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgHidePopup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_htmlmessages_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgSizePopup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_htmlmessages_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgOpenNewTab); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_htmlmessages_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgPopupHTMLWindow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_htmlmessages_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgPopupHTMLWindowResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_htmlmessages_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgSetHTMLTitle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_htmlmessages_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgLoadingResource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_htmlmessages_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgStatusText); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_htmlmessages_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgSetCursor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_htmlmessages_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgFileLoadDialog); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_htmlmessages_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgFileLoadDialogResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_htmlmessages_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgShowToolTip); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_htmlmessages_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgUpdateToolTip); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_htmlmessages_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgHideToolTip); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_htmlmessages_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgSearchResults); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_htmlmessages_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgClose); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_htmlmessages_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgSetSharedPaintBuffers); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_htmlmessages_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgAckSharedPaintBuffers); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_htmlmessages_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgNeedsPaint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_htmlmessages_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgComboNeedsPaint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_htmlmessages_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgNeedsSharedTexturePaint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_htmlmessages_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgGameOverlayTexturePaint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_htmlmessages_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgGetZoom); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_htmlmessages_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgGetZoomResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_htmlmessages_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgLinkAtPosition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_htmlmessages_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgLinkAtPositionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_htmlmessages_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgZoomToElementAtPosition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_htmlmessages_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgZoomToElementAtPositionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_htmlmessages_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgScalePageToValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_htmlmessages_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgForcePopupsToDirectHWND); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_htmlmessages_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgScalePageToValueResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_htmlmessages_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgSavePageToJPEG); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_htmlmessages_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgSavePageToJPEGResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_htmlmessages_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgJSAlert); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_htmlmessages_proto_msgTypes[85].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgJSConfirm); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_htmlmessages_proto_msgTypes[86].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgJSDialogResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_htmlmessages_proto_msgTypes[87].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgCanGoBackAndForward); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_htmlmessages_proto_msgTypes[88].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgOpenSteamURL); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_htmlmessages_proto_msgTypes[89].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgSetCookie); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_htmlmessages_proto_msgTypes[90].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgSetTargetFrameRate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_htmlmessages_proto_msgTypes[91].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgPauseRepaint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_htmlmessages_proto_msgTypes[92].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgFullRepaint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_htmlmessages_proto_msgTypes[93].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgRequestFullScreen); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_htmlmessages_proto_msgTypes[94].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgExitFullScreen); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_htmlmessages_proto_msgTypes[95].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgToggleFindInPageDialog); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_htmlmessages_proto_msgTypes[96].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgSetPIDShuttingDown); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_htmlmessages_proto_msgTypes[97].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgDisableBackgroundThrottling); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_htmlmessages_proto_msgTypes[98].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgAckPIDShuttingDown); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_htmlmessages_proto_msgTypes[99].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgGetCookiesForURL); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_htmlmessages_proto_msgTypes[100].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CCookie); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_htmlmessages_proto_msgTypes[101].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgGetCookiesForURLResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_htmlmessages_proto_msgTypes[102].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgNodeHasFocus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_htmlmessages_proto_msgTypes[103].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgZoomToFocusedElement); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_htmlmessages_proto_msgTypes[104].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgCloseFullScreenFlashIfOpen); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_htmlmessages_proto_msgTypes[105].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgPauseFullScreenFlashMovieIfOpen); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_htmlmessages_proto_msgTypes[106].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgFocusedNodeText); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_htmlmessages_proto_msgTypes[107].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgFocusedNodeTextResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_htmlmessages_proto_msgTypes[108].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgBuildID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_htmlmessages_proto_msgTypes[109].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgOpenDevTools); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_htmlmessages_proto_msgTypes[110].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgCloseDevTools); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_htmlmessages_proto_msgTypes[111].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgUnlockH264); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_htmlmessages_proto_msgTypes[112].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgScreenInformationChanged); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_htmlmessages_proto_msgTypes[113].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgClearAllCookies); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_htmlmessages_proto_msgTypes[114].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgScreenDPI); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_htmlmessages_proto_msgTypes[115].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgAuthedSteamDomains); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_htmlmessages_proto_msgTypes[116].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgSteamAuthNeeded); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_htmlmessages_proto_msgTypes[117].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgSteamAuthCookiesSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_htmlmessages_proto_msgTypes[118].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgJSRegisterMethod); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_htmlmessages_proto_msgTypes[119].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CJSMethodArgument); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_htmlmessages_proto_msgTypes[120].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgJSValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_htmlmessages_proto_msgTypes[121].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgJSMethodCall); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_htmlmessages_proto_msgTypes[122].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgJSExecuteCallback); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_htmlmessages_proto_msgTypes[123].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgJSReleaseCallback); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_htmlmessages_proto_msgTypes[124].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgJSRaiseException); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_htmlmessages_proto_msgTypes[125].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgLoadLocalization); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_htmlmessages_proto_msgTypes[126].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgJumpListLink); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_htmlmessages_proto_msgTypes[127].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMSgJumpListMRUApp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_htmlmessages_proto_msgTypes[128].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgSetJumpList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_htmlmessages_proto_msgTypes[129].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgSetGameOverlayTargetPIDs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_htmlmessages_proto_msgTypes[130].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgGameOverlayTargetTextureID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_htmlmessages_proto_msgTypes[131].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgDraggableRegionsChanged); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_htmlmessages_proto_msgTypes[132].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgResizeGripChanged); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_htmlmessages_proto_msgTypes[133].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgSetWindowPosition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_htmlmessages_proto_msgTypes[134].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgShowWindow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_htmlmessages_proto_msgTypes[135].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgHideWindow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_htmlmessages_proto_msgTypes[136].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgBringWindowToFront); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_htmlmessages_proto_msgTypes[137].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgSetForegroundWindow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_htmlmessages_proto_msgTypes[138].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgMaximizeRestoreWindow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_htmlmessages_proto_msgTypes[139].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgMinimizeWindow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_htmlmessages_proto_msgTypes[140].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgShowBrowserContextMenu); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_htmlmessages_proto_msgTypes[141].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgImeSetComposition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_htmlmessages_proto_msgTypes[142].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgImeCommitText); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_htmlmessages_proto_msgTypes[143].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgImeCancelComposition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_htmlmessages_proto_msgTypes[144].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgImeCompositionRangeChanged); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_htmlmessages_proto_msgTypes[145].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgInspectElement); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_htmlmessages_proto_msgTypes[146].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgDisableF5); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_htmlmessages_proto_msgTypes[147].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgStartDownload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_htmlmessages_proto_msgTypes[148].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgSetLocalFileRequestMapping_AdditionalRoute); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_htmlmessages_proto_msgTypes[149].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgJSValue_JSObjectProperty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_htmlmessages_proto_msgTypes[150].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgDraggableRegionsChanged_DraggableRects); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_steam_htmlmessages_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   151,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_steam_htmlmessages_proto_goTypes,
		DependencyIndexes: file_steam_htmlmessages_proto_depIdxs,
		EnumInfos:         file_steam_htmlmessages_proto_enumTypes,
		MessageInfos:      file_steam_htmlmessages_proto_msgTypes,
	}.Build()
	File_steam_htmlmessages_proto = out.File
	file_steam_htmlmessages_proto_rawDesc = nil
	file_steam_htmlmessages_proto_goTypes = nil
	file_steam_htmlmessages_proto_depIdxs = nil
}
