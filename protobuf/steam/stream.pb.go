// Code generated by protoc-gen-go. DO NOT EDIT.
// source: stream.proto

package steam // import "github.com/13k/go-steam-resources/protobuf/steam"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type EStreamChannel int32

const (
	EStreamChannel_k_EStreamChannelInvalid          EStreamChannel = -1
	EStreamChannel_k_EStreamChannelDiscovery        EStreamChannel = 0
	EStreamChannel_k_EStreamChannelControl          EStreamChannel = 1
	EStreamChannel_k_EStreamChannelStats            EStreamChannel = 2
	EStreamChannel_k_EStreamChannelDataChannelStart EStreamChannel = 3
)

var EStreamChannel_name = map[int32]string{
	-1: "k_EStreamChannelInvalid",
	0:  "k_EStreamChannelDiscovery",
	1:  "k_EStreamChannelControl",
	2:  "k_EStreamChannelStats",
	3:  "k_EStreamChannelDataChannelStart",
}
var EStreamChannel_value = map[string]int32{
	"k_EStreamChannelInvalid":          -1,
	"k_EStreamChannelDiscovery":        0,
	"k_EStreamChannelControl":          1,
	"k_EStreamChannelStats":            2,
	"k_EStreamChannelDataChannelStart": 3,
}

func (x EStreamChannel) Enum() *EStreamChannel {
	p := new(EStreamChannel)
	*p = x
	return p
}
func (x EStreamChannel) String() string {
	return proto.EnumName(EStreamChannel_name, int32(x))
}
func (x *EStreamChannel) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EStreamChannel_value, data, "EStreamChannel")
	if err != nil {
		return err
	}
	*x = EStreamChannel(value)
	return nil
}
func (EStreamChannel) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_stream_d1a07900b36af23a, []int{0}
}

type EStreamDiscoveryMessage int32

const (
	EStreamDiscoveryMessage_k_EStreamDiscoveryPingRequest  EStreamDiscoveryMessage = 1
	EStreamDiscoveryMessage_k_EStreamDiscoveryPingResponse EStreamDiscoveryMessage = 2
)

var EStreamDiscoveryMessage_name = map[int32]string{
	1: "k_EStreamDiscoveryPingRequest",
	2: "k_EStreamDiscoveryPingResponse",
}
var EStreamDiscoveryMessage_value = map[string]int32{
	"k_EStreamDiscoveryPingRequest":  1,
	"k_EStreamDiscoveryPingResponse": 2,
}

func (x EStreamDiscoveryMessage) Enum() *EStreamDiscoveryMessage {
	p := new(EStreamDiscoveryMessage)
	*p = x
	return p
}
func (x EStreamDiscoveryMessage) String() string {
	return proto.EnumName(EStreamDiscoveryMessage_name, int32(x))
}
func (x *EStreamDiscoveryMessage) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EStreamDiscoveryMessage_value, data, "EStreamDiscoveryMessage")
	if err != nil {
		return err
	}
	*x = EStreamDiscoveryMessage(value)
	return nil
}
func (EStreamDiscoveryMessage) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_stream_d1a07900b36af23a, []int{1}
}

type EStreamControlMessage int32

const (
	EStreamControlMessage_k_EStreamControlAuthenticationRequest                    EStreamControlMessage = 1
	EStreamControlMessage_k_EStreamControlAuthenticationResponse                   EStreamControlMessage = 2
	EStreamControlMessage_k_EStreamControlNegotiationInit                          EStreamControlMessage = 3
	EStreamControlMessage_k_EStreamControlNegotiationSetConfig                     EStreamControlMessage = 4
	EStreamControlMessage_k_EStreamControlNegotiationComplete                      EStreamControlMessage = 5
	EStreamControlMessage_k_EStreamControlClientHandshake                          EStreamControlMessage = 6
	EStreamControlMessage_k_EStreamControlServerHandshake                          EStreamControlMessage = 7
	EStreamControlMessage_k_EStreamControlStartNetworkTest                         EStreamControlMessage = 8
	EStreamControlMessage_k_EStreamControlKeepAlive                                EStreamControlMessage = 9
	EStreamControlMessage_k_EStreamControl_LAST_SETUP_MESSAGE                      EStreamControlMessage = 15
	EStreamControlMessage_k_EStreamControlStartAudioData                           EStreamControlMessage = 50
	EStreamControlMessage_k_EStreamControlStopAudioData                            EStreamControlMessage = 51
	EStreamControlMessage_k_EStreamControlStartVideoData                           EStreamControlMessage = 52
	EStreamControlMessage_k_EStreamControlStopVideoData                            EStreamControlMessage = 53
	EStreamControlMessage_k_EStreamControlInputMouseMotion                         EStreamControlMessage = 54
	EStreamControlMessage_k_EStreamControlInputMouseWheel                          EStreamControlMessage = 55
	EStreamControlMessage_k_EStreamControlInputMouseDown                           EStreamControlMessage = 56
	EStreamControlMessage_k_EStreamControlInputMouseUp                             EStreamControlMessage = 57
	EStreamControlMessage_k_EStreamControlInputKeyDown                             EStreamControlMessage = 58
	EStreamControlMessage_k_EStreamControlInputKeyUp                               EStreamControlMessage = 59
	EStreamControlMessage_k_EStreamControlInputGamepadAttached_OBSOLETE            EStreamControlMessage = 60
	EStreamControlMessage_k_EStreamControlInputGamepadEvent_OBSOLETE               EStreamControlMessage = 61
	EStreamControlMessage_k_EStreamControlInputGamepadDetached_OBSOLETE            EStreamControlMessage = 62
	EStreamControlMessage_k_EStreamControlShowCursor                               EStreamControlMessage = 63
	EStreamControlMessage_k_EStreamControlHideCursor                               EStreamControlMessage = 64
	EStreamControlMessage_k_EStreamControlSetCursor                                EStreamControlMessage = 65
	EStreamControlMessage_k_EStreamControlGetCursorImage                           EStreamControlMessage = 66
	EStreamControlMessage_k_EStreamControlSetCursorImage                           EStreamControlMessage = 67
	EStreamControlMessage_k_EStreamControlDeleteCursor                             EStreamControlMessage = 68
	EStreamControlMessage_k_EStreamControlSetTargetFramerate                       EStreamControlMessage = 69
	EStreamControlMessage_k_EStreamControlInputLatencyTest                         EStreamControlMessage = 70
	EStreamControlMessage_k_EStreamControlGamepadRumble_OBSOLETE                   EStreamControlMessage = 71
	EStreamControlMessage_k_EStreamControlOverlayEnabled                           EStreamControlMessage = 74
	EStreamControlMessage_k_EStreamControlInputControllerAttached_OBSOLETE         EStreamControlMessage = 75
	EStreamControlMessage_k_EStreamControlInputControllerState_OBSOLETE            EStreamControlMessage = 76
	EStreamControlMessage_k_EStreamControlTriggerHapticPulse_OBSOLETE              EStreamControlMessage = 77
	EStreamControlMessage_k_EStreamControlInputControllerDetached_OBSOLETE         EStreamControlMessage = 78
	EStreamControlMessage_k_EStreamControlVideoDecoderInfo                         EStreamControlMessage = 80
	EStreamControlMessage_k_EStreamControlSetTitle                                 EStreamControlMessage = 81
	EStreamControlMessage_k_EStreamControlSetIcon                                  EStreamControlMessage = 82
	EStreamControlMessage_k_EStreamControlQuitRequest                              EStreamControlMessage = 83
	EStreamControlMessage_k_EStreamControlSetQoS                                   EStreamControlMessage = 87
	EStreamControlMessage_k_EStreamControlInputControllerWirelessPresence_OBSOLETE EStreamControlMessage = 88
	EStreamControlMessage_k_EStreamControlSetGammaRamp                             EStreamControlMessage = 89
	EStreamControlMessage_k_EStreamControlVideoEncoderInfo                         EStreamControlMessage = 90
	EStreamControlMessage_k_EStreamControlInputControllerStateHID_OBSOLETE         EStreamControlMessage = 93
	EStreamControlMessage_k_EStreamControlSetTargetBitrate                         EStreamControlMessage = 94
	EStreamControlMessage_k_EStreamControlSetControllerPairingEnabled_OBSOLETE     EStreamControlMessage = 95
	EStreamControlMessage_k_EStreamControlSetControllerPairingResult_OBSOLETE      EStreamControlMessage = 96
	EStreamControlMessage_k_EStreamControlTriggerControllerDisconnect_OBSOLETE     EStreamControlMessage = 97
	EStreamControlMessage_k_EStreamControlSetActivity                              EStreamControlMessage = 98
	EStreamControlMessage_k_EStreamControlSetStreamingClientConfig                 EStreamControlMessage = 99
	EStreamControlMessage_k_EStreamControlSystemSuspend                            EStreamControlMessage = 100
	EStreamControlMessage_k_EStreamControlSetControllerSettings_OBSOLETE           EStreamControlMessage = 101
	EStreamControlMessage_k_EStreamControlVirtualHereRequest                       EStreamControlMessage = 102
	EStreamControlMessage_k_EStreamControlVirtualHereReady                         EStreamControlMessage = 103
	EStreamControlMessage_k_EStreamControlVirtualHereShareDevice                   EStreamControlMessage = 104
	EStreamControlMessage_k_EStreamControlSetSpectatorMode                         EStreamControlMessage = 105
	EStreamControlMessage_k_EStreamControlRemoteHID                                EStreamControlMessage = 106
	EStreamControlMessage_k_EStreamControlStartMicrophoneData                      EStreamControlMessage = 107
	EStreamControlMessage_k_EStreamControlStopMicrophoneData                       EStreamControlMessage = 108
	EStreamControlMessage_k_EStreamControlInputText                                EStreamControlMessage = 109
)

var EStreamControlMessage_name = map[int32]string{
	1:   "k_EStreamControlAuthenticationRequest",
	2:   "k_EStreamControlAuthenticationResponse",
	3:   "k_EStreamControlNegotiationInit",
	4:   "k_EStreamControlNegotiationSetConfig",
	5:   "k_EStreamControlNegotiationComplete",
	6:   "k_EStreamControlClientHandshake",
	7:   "k_EStreamControlServerHandshake",
	8:   "k_EStreamControlStartNetworkTest",
	9:   "k_EStreamControlKeepAlive",
	15:  "k_EStreamControl_LAST_SETUP_MESSAGE",
	50:  "k_EStreamControlStartAudioData",
	51:  "k_EStreamControlStopAudioData",
	52:  "k_EStreamControlStartVideoData",
	53:  "k_EStreamControlStopVideoData",
	54:  "k_EStreamControlInputMouseMotion",
	55:  "k_EStreamControlInputMouseWheel",
	56:  "k_EStreamControlInputMouseDown",
	57:  "k_EStreamControlInputMouseUp",
	58:  "k_EStreamControlInputKeyDown",
	59:  "k_EStreamControlInputKeyUp",
	60:  "k_EStreamControlInputGamepadAttached_OBSOLETE",
	61:  "k_EStreamControlInputGamepadEvent_OBSOLETE",
	62:  "k_EStreamControlInputGamepadDetached_OBSOLETE",
	63:  "k_EStreamControlShowCursor",
	64:  "k_EStreamControlHideCursor",
	65:  "k_EStreamControlSetCursor",
	66:  "k_EStreamControlGetCursorImage",
	67:  "k_EStreamControlSetCursorImage",
	68:  "k_EStreamControlDeleteCursor",
	69:  "k_EStreamControlSetTargetFramerate",
	70:  "k_EStreamControlInputLatencyTest",
	71:  "k_EStreamControlGamepadRumble_OBSOLETE",
	74:  "k_EStreamControlOverlayEnabled",
	75:  "k_EStreamControlInputControllerAttached_OBSOLETE",
	76:  "k_EStreamControlInputControllerState_OBSOLETE",
	77:  "k_EStreamControlTriggerHapticPulse_OBSOLETE",
	78:  "k_EStreamControlInputControllerDetached_OBSOLETE",
	80:  "k_EStreamControlVideoDecoderInfo",
	81:  "k_EStreamControlSetTitle",
	82:  "k_EStreamControlSetIcon",
	83:  "k_EStreamControlQuitRequest",
	87:  "k_EStreamControlSetQoS",
	88:  "k_EStreamControlInputControllerWirelessPresence_OBSOLETE",
	89:  "k_EStreamControlSetGammaRamp",
	90:  "k_EStreamControlVideoEncoderInfo",
	93:  "k_EStreamControlInputControllerStateHID_OBSOLETE",
	94:  "k_EStreamControlSetTargetBitrate",
	95:  "k_EStreamControlSetControllerPairingEnabled_OBSOLETE",
	96:  "k_EStreamControlSetControllerPairingResult_OBSOLETE",
	97:  "k_EStreamControlTriggerControllerDisconnect_OBSOLETE",
	98:  "k_EStreamControlSetActivity",
	99:  "k_EStreamControlSetStreamingClientConfig",
	100: "k_EStreamControlSystemSuspend",
	101: "k_EStreamControlSetControllerSettings_OBSOLETE",
	102: "k_EStreamControlVirtualHereRequest",
	103: "k_EStreamControlVirtualHereReady",
	104: "k_EStreamControlVirtualHereShareDevice",
	105: "k_EStreamControlSetSpectatorMode",
	106: "k_EStreamControlRemoteHID",
	107: "k_EStreamControlStartMicrophoneData",
	108: "k_EStreamControlStopMicrophoneData",
	109: "k_EStreamControlInputText",
}
var EStreamControlMessage_value = map[string]int32{
	"k_EStreamControlAuthenticationRequest":                    1,
	"k_EStreamControlAuthenticationResponse":                   2,
	"k_EStreamControlNegotiationInit":                          3,
	"k_EStreamControlNegotiationSetConfig":                     4,
	"k_EStreamControlNegotiationComplete":                      5,
	"k_EStreamControlClientHandshake":                          6,
	"k_EStreamControlServerHandshake":                          7,
	"k_EStreamControlStartNetworkTest":                         8,
	"k_EStreamControlKeepAlive":                                9,
	"k_EStreamControl_LAST_SETUP_MESSAGE":                      15,
	"k_EStreamControlStartAudioData":                           50,
	"k_EStreamControlStopAudioData":                            51,
	"k_EStreamControlStartVideoData":                           52,
	"k_EStreamControlStopVideoData":                            53,
	"k_EStreamControlInputMouseMotion":                         54,
	"k_EStreamControlInputMouseWheel":                          55,
	"k_EStreamControlInputMouseDown":                           56,
	"k_EStreamControlInputMouseUp":                             57,
	"k_EStreamControlInputKeyDown":                             58,
	"k_EStreamControlInputKeyUp":                               59,
	"k_EStreamControlInputGamepadAttached_OBSOLETE":            60,
	"k_EStreamControlInputGamepadEvent_OBSOLETE":               61,
	"k_EStreamControlInputGamepadDetached_OBSOLETE":            62,
	"k_EStreamControlShowCursor":                               63,
	"k_EStreamControlHideCursor":                               64,
	"k_EStreamControlSetCursor":                                65,
	"k_EStreamControlGetCursorImage":                           66,
	"k_EStreamControlSetCursorImage":                           67,
	"k_EStreamControlDeleteCursor":                             68,
	"k_EStreamControlSetTargetFramerate":                       69,
	"k_EStreamControlInputLatencyTest":                         70,
	"k_EStreamControlGamepadRumble_OBSOLETE":                   71,
	"k_EStreamControlOverlayEnabled":                           74,
	"k_EStreamControlInputControllerAttached_OBSOLETE":         75,
	"k_EStreamControlInputControllerState_OBSOLETE":            76,
	"k_EStreamControlTriggerHapticPulse_OBSOLETE":              77,
	"k_EStreamControlInputControllerDetached_OBSOLETE":         78,
	"k_EStreamControlVideoDecoderInfo":                         80,
	"k_EStreamControlSetTitle":                                 81,
	"k_EStreamControlSetIcon":                                  82,
	"k_EStreamControlQuitRequest":                              83,
	"k_EStreamControlSetQoS":                                   87,
	"k_EStreamControlInputControllerWirelessPresence_OBSOLETE": 88,
	"k_EStreamControlSetGammaRamp":                             89,
	"k_EStreamControlVideoEncoderInfo":                         90,
	"k_EStreamControlInputControllerStateHID_OBSOLETE":         93,
	"k_EStreamControlSetTargetBitrate":                         94,
	"k_EStreamControlSetControllerPairingEnabled_OBSOLETE":     95,
	"k_EStreamControlSetControllerPairingResult_OBSOLETE":      96,
	"k_EStreamControlTriggerControllerDisconnect_OBSOLETE":     97,
	"k_EStreamControlSetActivity":                              98,
	"k_EStreamControlSetStreamingClientConfig":                 99,
	"k_EStreamControlSystemSuspend":                            100,
	"k_EStreamControlSetControllerSettings_OBSOLETE":           101,
	"k_EStreamControlVirtualHereRequest":                       102,
	"k_EStreamControlVirtualHereReady":                         103,
	"k_EStreamControlVirtualHereShareDevice":                   104,
	"k_EStreamControlSetSpectatorMode":                         105,
	"k_EStreamControlRemoteHID":                                106,
	"k_EStreamControlStartMicrophoneData":                      107,
	"k_EStreamControlStopMicrophoneData":                       108,
	"k_EStreamControlInputText":                                109,
}

func (x EStreamControlMessage) Enum() *EStreamControlMessage {
	p := new(EStreamControlMessage)
	*p = x
	return p
}
func (x EStreamControlMessage) String() string {
	return proto.EnumName(EStreamControlMessage_name, int32(x))
}
func (x *EStreamControlMessage) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EStreamControlMessage_value, data, "EStreamControlMessage")
	if err != nil {
		return err
	}
	*x = EStreamControlMessage(value)
	return nil
}
func (EStreamControlMessage) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_stream_d1a07900b36af23a, []int{2}
}

type EStreamVersion int32

const (
	EStreamVersion_k_EStreamVersionNone    EStreamVersion = 0
	EStreamVersion_k_EStreamVersionCurrent EStreamVersion = 1
)

var EStreamVersion_name = map[int32]string{
	0: "k_EStreamVersionNone",
	1: "k_EStreamVersionCurrent",
}
var EStreamVersion_value = map[string]int32{
	"k_EStreamVersionNone":    0,
	"k_EStreamVersionCurrent": 1,
}

func (x EStreamVersion) Enum() *EStreamVersion {
	p := new(EStreamVersion)
	*p = x
	return p
}
func (x EStreamVersion) String() string {
	return proto.EnumName(EStreamVersion_name, int32(x))
}
func (x *EStreamVersion) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EStreamVersion_value, data, "EStreamVersion")
	if err != nil {
		return err
	}
	*x = EStreamVersion(value)
	return nil
}
func (EStreamVersion) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_stream_d1a07900b36af23a, []int{3}
}

type EStreamAudioCodec int32

const (
	EStreamAudioCodec_k_EStreamAudioCodecNone   EStreamAudioCodec = 0
	EStreamAudioCodec_k_EStreamAudioCodecRaw    EStreamAudioCodec = 1
	EStreamAudioCodec_k_EStreamAudioCodecVorbis EStreamAudioCodec = 2
	EStreamAudioCodec_k_EStreamAudioCodecOpus   EStreamAudioCodec = 3
	EStreamAudioCodec_k_EStreamAudioCodecMP3    EStreamAudioCodec = 4
	EStreamAudioCodec_k_EStreamAudioCodecAAC    EStreamAudioCodec = 5
)

var EStreamAudioCodec_name = map[int32]string{
	0: "k_EStreamAudioCodecNone",
	1: "k_EStreamAudioCodecRaw",
	2: "k_EStreamAudioCodecVorbis",
	3: "k_EStreamAudioCodecOpus",
	4: "k_EStreamAudioCodecMP3",
	5: "k_EStreamAudioCodecAAC",
}
var EStreamAudioCodec_value = map[string]int32{
	"k_EStreamAudioCodecNone":   0,
	"k_EStreamAudioCodecRaw":    1,
	"k_EStreamAudioCodecVorbis": 2,
	"k_EStreamAudioCodecOpus":   3,
	"k_EStreamAudioCodecMP3":    4,
	"k_EStreamAudioCodecAAC":    5,
}

func (x EStreamAudioCodec) Enum() *EStreamAudioCodec {
	p := new(EStreamAudioCodec)
	*p = x
	return p
}
func (x EStreamAudioCodec) String() string {
	return proto.EnumName(EStreamAudioCodec_name, int32(x))
}
func (x *EStreamAudioCodec) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EStreamAudioCodec_value, data, "EStreamAudioCodec")
	if err != nil {
		return err
	}
	*x = EStreamAudioCodec(value)
	return nil
}
func (EStreamAudioCodec) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_stream_d1a07900b36af23a, []int{4}
}

type EStreamVideoCodec int32

const (
	EStreamVideoCodec_k_EStreamVideoCodecNone  EStreamVideoCodec = 0
	EStreamVideoCodec_k_EStreamVideoCodecRaw   EStreamVideoCodec = 1
	EStreamVideoCodec_k_EStreamVideoCodecVP8   EStreamVideoCodec = 2
	EStreamVideoCodec_k_EStreamVideoCodecVP9   EStreamVideoCodec = 3
	EStreamVideoCodec_k_EStreamVideoCodecH264  EStreamVideoCodec = 4
	EStreamVideoCodec_k_EStreamVideoCodecHEVC  EStreamVideoCodec = 5
	EStreamVideoCodec_k_EStreamVideoCodecORBX1 EStreamVideoCodec = 6
	EStreamVideoCodec_k_EStreamVideoCodecORBX2 EStreamVideoCodec = 7
)

var EStreamVideoCodec_name = map[int32]string{
	0: "k_EStreamVideoCodecNone",
	1: "k_EStreamVideoCodecRaw",
	2: "k_EStreamVideoCodecVP8",
	3: "k_EStreamVideoCodecVP9",
	4: "k_EStreamVideoCodecH264",
	5: "k_EStreamVideoCodecHEVC",
	6: "k_EStreamVideoCodecORBX1",
	7: "k_EStreamVideoCodecORBX2",
}
var EStreamVideoCodec_value = map[string]int32{
	"k_EStreamVideoCodecNone":  0,
	"k_EStreamVideoCodecRaw":   1,
	"k_EStreamVideoCodecVP8":   2,
	"k_EStreamVideoCodecVP9":   3,
	"k_EStreamVideoCodecH264":  4,
	"k_EStreamVideoCodecHEVC":  5,
	"k_EStreamVideoCodecORBX1": 6,
	"k_EStreamVideoCodecORBX2": 7,
}

func (x EStreamVideoCodec) Enum() *EStreamVideoCodec {
	p := new(EStreamVideoCodec)
	*p = x
	return p
}
func (x EStreamVideoCodec) String() string {
	return proto.EnumName(EStreamVideoCodec_name, int32(x))
}
func (x *EStreamVideoCodec) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EStreamVideoCodec_value, data, "EStreamVideoCodec")
	if err != nil {
		return err
	}
	*x = EStreamVideoCodec(value)
	return nil
}
func (EStreamVideoCodec) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_stream_d1a07900b36af23a, []int{5}
}

type EStreamQualityPreference int32

const (
	EStreamQualityPreference_k_EStreamQualityFast      EStreamQualityPreference = 1
	EStreamQualityPreference_k_EStreamQualityBalanced  EStreamQualityPreference = 2
	EStreamQualityPreference_k_EStreamQualityBeautiful EStreamQualityPreference = 3
)

var EStreamQualityPreference_name = map[int32]string{
	1: "k_EStreamQualityFast",
	2: "k_EStreamQualityBalanced",
	3: "k_EStreamQualityBeautiful",
}
var EStreamQualityPreference_value = map[string]int32{
	"k_EStreamQualityFast":      1,
	"k_EStreamQualityBalanced":  2,
	"k_EStreamQualityBeautiful": 3,
}

func (x EStreamQualityPreference) Enum() *EStreamQualityPreference {
	p := new(EStreamQualityPreference)
	*p = x
	return p
}
func (x EStreamQualityPreference) String() string {
	return proto.EnumName(EStreamQualityPreference_name, int32(x))
}
func (x *EStreamQualityPreference) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EStreamQualityPreference_value, data, "EStreamQualityPreference")
	if err != nil {
		return err
	}
	*x = EStreamQualityPreference(value)
	return nil
}
func (EStreamQualityPreference) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_stream_d1a07900b36af23a, []int{6}
}

type EStreamBitrate int32

const (
	EStreamBitrate_k_EStreamBitrateAutodetect EStreamBitrate = -1
	EStreamBitrate_k_EStreamBitrateUnlimited  EStreamBitrate = 0
)

var EStreamBitrate_name = map[int32]string{
	-1: "k_EStreamBitrateAutodetect",
	0:  "k_EStreamBitrateUnlimited",
}
var EStreamBitrate_value = map[string]int32{
	"k_EStreamBitrateAutodetect": -1,
	"k_EStreamBitrateUnlimited":  0,
}

func (x EStreamBitrate) Enum() *EStreamBitrate {
	p := new(EStreamBitrate)
	*p = x
	return p
}
func (x EStreamBitrate) String() string {
	return proto.EnumName(EStreamBitrate_name, int32(x))
}
func (x *EStreamBitrate) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EStreamBitrate_value, data, "EStreamBitrate")
	if err != nil {
		return err
	}
	*x = EStreamBitrate(value)
	return nil
}
func (EStreamBitrate) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_stream_d1a07900b36af23a, []int{7}
}

type EStreamingDataType int32

const (
	EStreamingDataType_k_EStreamingAudioData      EStreamingDataType = 0
	EStreamingDataType_k_EStreamingVideoData      EStreamingDataType = 1
	EStreamingDataType_k_EStreamingMicrophoneData EStreamingDataType = 2
)

var EStreamingDataType_name = map[int32]string{
	0: "k_EStreamingAudioData",
	1: "k_EStreamingVideoData",
	2: "k_EStreamingMicrophoneData",
}
var EStreamingDataType_value = map[string]int32{
	"k_EStreamingAudioData":      0,
	"k_EStreamingVideoData":      1,
	"k_EStreamingMicrophoneData": 2,
}

func (x EStreamingDataType) Enum() *EStreamingDataType {
	p := new(EStreamingDataType)
	*p = x
	return p
}
func (x EStreamingDataType) String() string {
	return proto.EnumName(EStreamingDataType_name, int32(x))
}
func (x *EStreamingDataType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EStreamingDataType_value, data, "EStreamingDataType")
	if err != nil {
		return err
	}
	*x = EStreamingDataType(value)
	return nil
}
func (EStreamingDataType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_stream_d1a07900b36af23a, []int{8}
}

type EStreamMouseButton int32

const (
	EStreamMouseButton_k_EStreamMouseButtonLeft    EStreamMouseButton = 1
	EStreamMouseButton_k_EStreamMouseButtonRight   EStreamMouseButton = 2
	EStreamMouseButton_k_EStreamMouseButtonMiddle  EStreamMouseButton = 16
	EStreamMouseButton_k_EStreamMouseButtonX1      EStreamMouseButton = 32
	EStreamMouseButton_k_EStreamMouseButtonX2      EStreamMouseButton = 64
	EStreamMouseButton_k_EStreamMouseButtonUnknown EStreamMouseButton = 4096
)

var EStreamMouseButton_name = map[int32]string{
	1:    "k_EStreamMouseButtonLeft",
	2:    "k_EStreamMouseButtonRight",
	16:   "k_EStreamMouseButtonMiddle",
	32:   "k_EStreamMouseButtonX1",
	64:   "k_EStreamMouseButtonX2",
	4096: "k_EStreamMouseButtonUnknown",
}
var EStreamMouseButton_value = map[string]int32{
	"k_EStreamMouseButtonLeft":    1,
	"k_EStreamMouseButtonRight":   2,
	"k_EStreamMouseButtonMiddle":  16,
	"k_EStreamMouseButtonX1":      32,
	"k_EStreamMouseButtonX2":      64,
	"k_EStreamMouseButtonUnknown": 4096,
}

func (x EStreamMouseButton) Enum() *EStreamMouseButton {
	p := new(EStreamMouseButton)
	*p = x
	return p
}
func (x EStreamMouseButton) String() string {
	return proto.EnumName(EStreamMouseButton_name, int32(x))
}
func (x *EStreamMouseButton) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EStreamMouseButton_value, data, "EStreamMouseButton")
	if err != nil {
		return err
	}
	*x = EStreamMouseButton(value)
	return nil
}
func (EStreamMouseButton) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_stream_d1a07900b36af23a, []int{9}
}

type EStreamMouseWheelDirection int32

const (
	EStreamMouseWheelDirection_k_EStreamMouseWheelUp    EStreamMouseWheelDirection = 120
	EStreamMouseWheelDirection_k_EStreamMouseWheelDown  EStreamMouseWheelDirection = -120
	EStreamMouseWheelDirection_k_EStreamMouseWheelLeft  EStreamMouseWheelDirection = 3
	EStreamMouseWheelDirection_k_EStreamMouseWheelRight EStreamMouseWheelDirection = 4
)

var EStreamMouseWheelDirection_name = map[int32]string{
	120:  "k_EStreamMouseWheelUp",
	-120: "k_EStreamMouseWheelDown",
	3:    "k_EStreamMouseWheelLeft",
	4:    "k_EStreamMouseWheelRight",
}
var EStreamMouseWheelDirection_value = map[string]int32{
	"k_EStreamMouseWheelUp":    120,
	"k_EStreamMouseWheelDown":  -120,
	"k_EStreamMouseWheelLeft":  3,
	"k_EStreamMouseWheelRight": 4,
}

func (x EStreamMouseWheelDirection) Enum() *EStreamMouseWheelDirection {
	p := new(EStreamMouseWheelDirection)
	*p = x
	return p
}
func (x EStreamMouseWheelDirection) String() string {
	return proto.EnumName(EStreamMouseWheelDirection_name, int32(x))
}
func (x *EStreamMouseWheelDirection) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EStreamMouseWheelDirection_value, data, "EStreamMouseWheelDirection")
	if err != nil {
		return err
	}
	*x = EStreamMouseWheelDirection(value)
	return nil
}
func (EStreamMouseWheelDirection) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_stream_d1a07900b36af23a, []int{10}
}

type EStreamGamepadInputType int32

const (
	EStreamGamepadInputType_k_EStreamGamepadInputInvalid       EStreamGamepadInputType = 0
	EStreamGamepadInputType_k_EStreamGamepadInputDPadUp        EStreamGamepadInputType = 1
	EStreamGamepadInputType_k_EStreamGamepadInputDPadDown      EStreamGamepadInputType = 2
	EStreamGamepadInputType_k_EStreamGamepadInputDPadLeft      EStreamGamepadInputType = 4
	EStreamGamepadInputType_k_EStreamGamepadInputDPadRight     EStreamGamepadInputType = 8
	EStreamGamepadInputType_k_EStreamGamepadInputStart         EStreamGamepadInputType = 16
	EStreamGamepadInputType_k_EStreamGamepadInputBack          EStreamGamepadInputType = 32
	EStreamGamepadInputType_k_EStreamGamepadInputLeftThumb     EStreamGamepadInputType = 64
	EStreamGamepadInputType_k_EStreamGamepadInputRightThumb    EStreamGamepadInputType = 128
	EStreamGamepadInputType_k_EStreamGamepadInputLeftShoulder  EStreamGamepadInputType = 256
	EStreamGamepadInputType_k_EStreamGamepadInputRightShoulder EStreamGamepadInputType = 512
	EStreamGamepadInputType_k_EStreamGamepadInputGuide         EStreamGamepadInputType = 1024
	EStreamGamepadInputType_k_EStreamGamepadInputA             EStreamGamepadInputType = 4096
	EStreamGamepadInputType_k_EStreamGamepadInputB             EStreamGamepadInputType = 8192
	EStreamGamepadInputType_k_EStreamGamepadInputX             EStreamGamepadInputType = 16384
	EStreamGamepadInputType_k_EStreamGamepadInputY             EStreamGamepadInputType = 32768
	EStreamGamepadInputType_k_EStreamGamepadInputLeftThumbX    EStreamGamepadInputType = 65536
	EStreamGamepadInputType_k_EStreamGamepadInputLeftThumbY    EStreamGamepadInputType = 131072
	EStreamGamepadInputType_k_EStreamGamepadInputRightThumbX   EStreamGamepadInputType = 262144
	EStreamGamepadInputType_k_EStreamGamepadInputRightThumbY   EStreamGamepadInputType = 524288
	EStreamGamepadInputType_k_EStreamGamepadInputLeftTrigger   EStreamGamepadInputType = 1048576
	EStreamGamepadInputType_k_EStreamGamepadInputRightTrigger  EStreamGamepadInputType = 2097152
)

var EStreamGamepadInputType_name = map[int32]string{
	0:       "k_EStreamGamepadInputInvalid",
	1:       "k_EStreamGamepadInputDPadUp",
	2:       "k_EStreamGamepadInputDPadDown",
	4:       "k_EStreamGamepadInputDPadLeft",
	8:       "k_EStreamGamepadInputDPadRight",
	16:      "k_EStreamGamepadInputStart",
	32:      "k_EStreamGamepadInputBack",
	64:      "k_EStreamGamepadInputLeftThumb",
	128:     "k_EStreamGamepadInputRightThumb",
	256:     "k_EStreamGamepadInputLeftShoulder",
	512:     "k_EStreamGamepadInputRightShoulder",
	1024:    "k_EStreamGamepadInputGuide",
	4096:    "k_EStreamGamepadInputA",
	8192:    "k_EStreamGamepadInputB",
	16384:   "k_EStreamGamepadInputX",
	32768:   "k_EStreamGamepadInputY",
	65536:   "k_EStreamGamepadInputLeftThumbX",
	131072:  "k_EStreamGamepadInputLeftThumbY",
	262144:  "k_EStreamGamepadInputRightThumbX",
	524288:  "k_EStreamGamepadInputRightThumbY",
	1048576: "k_EStreamGamepadInputLeftTrigger",
	2097152: "k_EStreamGamepadInputRightTrigger",
}
var EStreamGamepadInputType_value = map[string]int32{
	"k_EStreamGamepadInputInvalid":       0,
	"k_EStreamGamepadInputDPadUp":        1,
	"k_EStreamGamepadInputDPadDown":      2,
	"k_EStreamGamepadInputDPadLeft":      4,
	"k_EStreamGamepadInputDPadRight":     8,
	"k_EStreamGamepadInputStart":         16,
	"k_EStreamGamepadInputBack":          32,
	"k_EStreamGamepadInputLeftThumb":     64,
	"k_EStreamGamepadInputRightThumb":    128,
	"k_EStreamGamepadInputLeftShoulder":  256,
	"k_EStreamGamepadInputRightShoulder": 512,
	"k_EStreamGamepadInputGuide":         1024,
	"k_EStreamGamepadInputA":             4096,
	"k_EStreamGamepadInputB":             8192,
	"k_EStreamGamepadInputX":             16384,
	"k_EStreamGamepadInputY":             32768,
	"k_EStreamGamepadInputLeftThumbX":    65536,
	"k_EStreamGamepadInputLeftThumbY":    131072,
	"k_EStreamGamepadInputRightThumbX":   262144,
	"k_EStreamGamepadInputRightThumbY":   524288,
	"k_EStreamGamepadInputLeftTrigger":   1048576,
	"k_EStreamGamepadInputRightTrigger":  2097152,
}

func (x EStreamGamepadInputType) Enum() *EStreamGamepadInputType {
	p := new(EStreamGamepadInputType)
	*p = x
	return p
}
func (x EStreamGamepadInputType) String() string {
	return proto.EnumName(EStreamGamepadInputType_name, int32(x))
}
func (x *EStreamGamepadInputType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EStreamGamepadInputType_value, data, "EStreamGamepadInputType")
	if err != nil {
		return err
	}
	*x = EStreamGamepadInputType(value)
	return nil
}
func (EStreamGamepadInputType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_stream_d1a07900b36af23a, []int{11}
}

type EStreamFramerateLimiter int32

const (
	EStreamFramerateLimiter_k_EStreamFramerateSlowCapture EStreamFramerateLimiter = 1
	EStreamFramerateLimiter_k_EStreamFramerateSlowConvert EStreamFramerateLimiter = 2
	EStreamFramerateLimiter_k_EStreamFramerateSlowEncode  EStreamFramerateLimiter = 4
	EStreamFramerateLimiter_k_EStreamFramerateSlowNetwork EStreamFramerateLimiter = 8
	EStreamFramerateLimiter_k_EStreamFramerateSlowDecode  EStreamFramerateLimiter = 16
	EStreamFramerateLimiter_k_EStreamFramerateSlowGame    EStreamFramerateLimiter = 32
	EStreamFramerateLimiter_k_EStreamFramerateSlowDisplay EStreamFramerateLimiter = 64
)

var EStreamFramerateLimiter_name = map[int32]string{
	1:  "k_EStreamFramerateSlowCapture",
	2:  "k_EStreamFramerateSlowConvert",
	4:  "k_EStreamFramerateSlowEncode",
	8:  "k_EStreamFramerateSlowNetwork",
	16: "k_EStreamFramerateSlowDecode",
	32: "k_EStreamFramerateSlowGame",
	64: "k_EStreamFramerateSlowDisplay",
}
var EStreamFramerateLimiter_value = map[string]int32{
	"k_EStreamFramerateSlowCapture": 1,
	"k_EStreamFramerateSlowConvert": 2,
	"k_EStreamFramerateSlowEncode":  4,
	"k_EStreamFramerateSlowNetwork": 8,
	"k_EStreamFramerateSlowDecode":  16,
	"k_EStreamFramerateSlowGame":    32,
	"k_EStreamFramerateSlowDisplay": 64,
}

func (x EStreamFramerateLimiter) Enum() *EStreamFramerateLimiter {
	p := new(EStreamFramerateLimiter)
	*p = x
	return p
}
func (x EStreamFramerateLimiter) String() string {
	return proto.EnumName(EStreamFramerateLimiter_name, int32(x))
}
func (x *EStreamFramerateLimiter) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EStreamFramerateLimiter_value, data, "EStreamFramerateLimiter")
	if err != nil {
		return err
	}
	*x = EStreamFramerateLimiter(value)
	return nil
}
func (EStreamFramerateLimiter) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_stream_d1a07900b36af23a, []int{12}
}

type EStreamActivity int32

const (
	EStreamActivity_k_EStreamActivityIdle    EStreamActivity = 1
	EStreamActivity_k_EStreamActivityGame    EStreamActivity = 2
	EStreamActivity_k_EStreamActivityDesktop EStreamActivity = 3
)

var EStreamActivity_name = map[int32]string{
	1: "k_EStreamActivityIdle",
	2: "k_EStreamActivityGame",
	3: "k_EStreamActivityDesktop",
}
var EStreamActivity_value = map[string]int32{
	"k_EStreamActivityIdle":    1,
	"k_EStreamActivityGame":    2,
	"k_EStreamActivityDesktop": 3,
}

func (x EStreamActivity) Enum() *EStreamActivity {
	p := new(EStreamActivity)
	*p = x
	return p
}
func (x EStreamActivity) String() string {
	return proto.EnumName(EStreamActivity_name, int32(x))
}
func (x *EStreamActivity) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EStreamActivity_value, data, "EStreamActivity")
	if err != nil {
		return err
	}
	*x = EStreamActivity(value)
	return nil
}
func (EStreamActivity) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_stream_d1a07900b36af23a, []int{13}
}

type EStreamDataMessage int32

const (
	EStreamDataMessage_k_EStreamDataPacket EStreamDataMessage = 1
	EStreamDataMessage_k_EStreamDataLost   EStreamDataMessage = 2
)

var EStreamDataMessage_name = map[int32]string{
	1: "k_EStreamDataPacket",
	2: "k_EStreamDataLost",
}
var EStreamDataMessage_value = map[string]int32{
	"k_EStreamDataPacket": 1,
	"k_EStreamDataLost":   2,
}

func (x EStreamDataMessage) Enum() *EStreamDataMessage {
	p := new(EStreamDataMessage)
	*p = x
	return p
}
func (x EStreamDataMessage) String() string {
	return proto.EnumName(EStreamDataMessage_name, int32(x))
}
func (x *EStreamDataMessage) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EStreamDataMessage_value, data, "EStreamDataMessage")
	if err != nil {
		return err
	}
	*x = EStreamDataMessage(value)
	return nil
}
func (EStreamDataMessage) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_stream_d1a07900b36af23a, []int{14}
}

type EAudioFormat int32

const (
	EAudioFormat_k_EAudioFormatNone              EAudioFormat = 0
	EAudioFormat_k_EAudioFormat16BitLittleEndian EAudioFormat = 1
	EAudioFormat_k_EAudioFormatFloat             EAudioFormat = 2
)

var EAudioFormat_name = map[int32]string{
	0: "k_EAudioFormatNone",
	1: "k_EAudioFormat16BitLittleEndian",
	2: "k_EAudioFormatFloat",
}
var EAudioFormat_value = map[string]int32{
	"k_EAudioFormatNone":              0,
	"k_EAudioFormat16BitLittleEndian": 1,
	"k_EAudioFormatFloat":             2,
}

func (x EAudioFormat) Enum() *EAudioFormat {
	p := new(EAudioFormat)
	*p = x
	return p
}
func (x EAudioFormat) String() string {
	return proto.EnumName(EAudioFormat_name, int32(x))
}
func (x *EAudioFormat) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EAudioFormat_value, data, "EAudioFormat")
	if err != nil {
		return err
	}
	*x = EAudioFormat(value)
	return nil
}
func (EAudioFormat) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_stream_d1a07900b36af23a, []int{15}
}

type EVideoFormat int32

const (
	EVideoFormat_k_EVideoFormatNone  EVideoFormat = 0
	EVideoFormat_k_EVideoFormatYV12  EVideoFormat = 1
	EVideoFormat_k_EVideoFormatAccel EVideoFormat = 2
)

var EVideoFormat_name = map[int32]string{
	0: "k_EVideoFormatNone",
	1: "k_EVideoFormatYV12",
	2: "k_EVideoFormatAccel",
}
var EVideoFormat_value = map[string]int32{
	"k_EVideoFormatNone":  0,
	"k_EVideoFormatYV12":  1,
	"k_EVideoFormatAccel": 2,
}

func (x EVideoFormat) Enum() *EVideoFormat {
	p := new(EVideoFormat)
	*p = x
	return p
}
func (x EVideoFormat) String() string {
	return proto.EnumName(EVideoFormat_name, int32(x))
}
func (x *EVideoFormat) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EVideoFormat_value, data, "EVideoFormat")
	if err != nil {
		return err
	}
	*x = EVideoFormat(value)
	return nil
}
func (EVideoFormat) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_stream_d1a07900b36af23a, []int{16}
}

type EStreamStatsMessage int32

const (
	EStreamStatsMessage_k_EStreamStatsFrameEvents       EStreamStatsMessage = 1
	EStreamStatsMessage_k_EStreamStatsDebugDump         EStreamStatsMessage = 2
	EStreamStatsMessage_k_EStreamStatsLogMessage        EStreamStatsMessage = 3
	EStreamStatsMessage_k_EStreamStatsLogUploadBegin    EStreamStatsMessage = 4
	EStreamStatsMessage_k_EStreamStatsLogUploadData     EStreamStatsMessage = 5
	EStreamStatsMessage_k_EStreamStatsLogUploadComplete EStreamStatsMessage = 6
)

var EStreamStatsMessage_name = map[int32]string{
	1: "k_EStreamStatsFrameEvents",
	2: "k_EStreamStatsDebugDump",
	3: "k_EStreamStatsLogMessage",
	4: "k_EStreamStatsLogUploadBegin",
	5: "k_EStreamStatsLogUploadData",
	6: "k_EStreamStatsLogUploadComplete",
}
var EStreamStatsMessage_value = map[string]int32{
	"k_EStreamStatsFrameEvents":       1,
	"k_EStreamStatsDebugDump":         2,
	"k_EStreamStatsLogMessage":        3,
	"k_EStreamStatsLogUploadBegin":    4,
	"k_EStreamStatsLogUploadData":     5,
	"k_EStreamStatsLogUploadComplete": 6,
}

func (x EStreamStatsMessage) Enum() *EStreamStatsMessage {
	p := new(EStreamStatsMessage)
	*p = x
	return p
}
func (x EStreamStatsMessage) String() string {
	return proto.EnumName(EStreamStatsMessage_name, int32(x))
}
func (x *EStreamStatsMessage) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EStreamStatsMessage_value, data, "EStreamStatsMessage")
	if err != nil {
		return err
	}
	*x = EStreamStatsMessage(value)
	return nil
}
func (EStreamStatsMessage) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_stream_d1a07900b36af23a, []int{17}
}

type EStreamFrameEvent int32

const (
	EStreamFrameEvent_k_EStreamInputEventStart        EStreamFrameEvent = 0
	EStreamFrameEvent_k_EStreamInputEventSend         EStreamFrameEvent = 1
	EStreamFrameEvent_k_EStreamInputEventRecv         EStreamFrameEvent = 2
	EStreamFrameEvent_k_EStreamInputEventQueued       EStreamFrameEvent = 3
	EStreamFrameEvent_k_EStreamInputEventHandled      EStreamFrameEvent = 4
	EStreamFrameEvent_k_EStreamFrameEventStart        EStreamFrameEvent = 5
	EStreamFrameEvent_k_EStreamFrameEventCaptureBegin EStreamFrameEvent = 6
	EStreamFrameEvent_k_EStreamFrameEventCaptureEnd   EStreamFrameEvent = 7
	EStreamFrameEvent_k_EStreamFrameEventConvertBegin EStreamFrameEvent = 8
	EStreamFrameEvent_k_EStreamFrameEventConvertEnd   EStreamFrameEvent = 9
	EStreamFrameEvent_k_EStreamFrameEventEncodeBegin  EStreamFrameEvent = 10
	EStreamFrameEvent_k_EStreamFrameEventEncodeEnd    EStreamFrameEvent = 11
	EStreamFrameEvent_k_EStreamFrameEventSend         EStreamFrameEvent = 12
	EStreamFrameEvent_k_EStreamFrameEventRecv         EStreamFrameEvent = 13
	EStreamFrameEvent_k_EStreamFrameEventDecodeBegin  EStreamFrameEvent = 14
	EStreamFrameEvent_k_EStreamFrameEventDecodeEnd    EStreamFrameEvent = 15
	EStreamFrameEvent_k_EStreamFrameEventUploadBegin  EStreamFrameEvent = 16
	EStreamFrameEvent_k_EStreamFrameEventUploadEnd    EStreamFrameEvent = 17
	EStreamFrameEvent_k_EStreamFrameEventComplete     EStreamFrameEvent = 18
)

var EStreamFrameEvent_name = map[int32]string{
	0:  "k_EStreamInputEventStart",
	1:  "k_EStreamInputEventSend",
	2:  "k_EStreamInputEventRecv",
	3:  "k_EStreamInputEventQueued",
	4:  "k_EStreamInputEventHandled",
	5:  "k_EStreamFrameEventStart",
	6:  "k_EStreamFrameEventCaptureBegin",
	7:  "k_EStreamFrameEventCaptureEnd",
	8:  "k_EStreamFrameEventConvertBegin",
	9:  "k_EStreamFrameEventConvertEnd",
	10: "k_EStreamFrameEventEncodeBegin",
	11: "k_EStreamFrameEventEncodeEnd",
	12: "k_EStreamFrameEventSend",
	13: "k_EStreamFrameEventRecv",
	14: "k_EStreamFrameEventDecodeBegin",
	15: "k_EStreamFrameEventDecodeEnd",
	16: "k_EStreamFrameEventUploadBegin",
	17: "k_EStreamFrameEventUploadEnd",
	18: "k_EStreamFrameEventComplete",
}
var EStreamFrameEvent_value = map[string]int32{
	"k_EStreamInputEventStart":        0,
	"k_EStreamInputEventSend":         1,
	"k_EStreamInputEventRecv":         2,
	"k_EStreamInputEventQueued":       3,
	"k_EStreamInputEventHandled":      4,
	"k_EStreamFrameEventStart":        5,
	"k_EStreamFrameEventCaptureBegin": 6,
	"k_EStreamFrameEventCaptureEnd":   7,
	"k_EStreamFrameEventConvertBegin": 8,
	"k_EStreamFrameEventConvertEnd":   9,
	"k_EStreamFrameEventEncodeBegin":  10,
	"k_EStreamFrameEventEncodeEnd":    11,
	"k_EStreamFrameEventSend":         12,
	"k_EStreamFrameEventRecv":         13,
	"k_EStreamFrameEventDecodeBegin":  14,
	"k_EStreamFrameEventDecodeEnd":    15,
	"k_EStreamFrameEventUploadBegin":  16,
	"k_EStreamFrameEventUploadEnd":    17,
	"k_EStreamFrameEventComplete":     18,
}

func (x EStreamFrameEvent) Enum() *EStreamFrameEvent {
	p := new(EStreamFrameEvent)
	*p = x
	return p
}
func (x EStreamFrameEvent) String() string {
	return proto.EnumName(EStreamFrameEvent_name, int32(x))
}
func (x *EStreamFrameEvent) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EStreamFrameEvent_value, data, "EStreamFrameEvent")
	if err != nil {
		return err
	}
	*x = EStreamFrameEvent(value)
	return nil
}
func (EStreamFrameEvent) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_stream_d1a07900b36af23a, []int{18}
}

type EStreamFrameResult int32

const (
	EStreamFrameResult_k_EStreamFrameResultPending              EStreamFrameResult = 0
	EStreamFrameResult_k_EStreamFrameResultDisplayed            EStreamFrameResult = 1
	EStreamFrameResult_k_EStreamFrameResultDroppedNetworkSlow   EStreamFrameResult = 2
	EStreamFrameResult_k_EStreamFrameResultDroppedNetworkLost   EStreamFrameResult = 3
	EStreamFrameResult_k_EStreamFrameResultDroppedDecodeSlow    EStreamFrameResult = 4
	EStreamFrameResult_k_EStreamFrameResultDroppedDecodeCorrupt EStreamFrameResult = 5
	EStreamFrameResult_k_EStreamFrameResultDroppedLate          EStreamFrameResult = 6
	EStreamFrameResult_k_EStreamFrameResultDroppedReset         EStreamFrameResult = 7
)

var EStreamFrameResult_name = map[int32]string{
	0: "k_EStreamFrameResultPending",
	1: "k_EStreamFrameResultDisplayed",
	2: "k_EStreamFrameResultDroppedNetworkSlow",
	3: "k_EStreamFrameResultDroppedNetworkLost",
	4: "k_EStreamFrameResultDroppedDecodeSlow",
	5: "k_EStreamFrameResultDroppedDecodeCorrupt",
	6: "k_EStreamFrameResultDroppedLate",
	7: "k_EStreamFrameResultDroppedReset",
}
var EStreamFrameResult_value = map[string]int32{
	"k_EStreamFrameResultPending":              0,
	"k_EStreamFrameResultDisplayed":            1,
	"k_EStreamFrameResultDroppedNetworkSlow":   2,
	"k_EStreamFrameResultDroppedNetworkLost":   3,
	"k_EStreamFrameResultDroppedDecodeSlow":    4,
	"k_EStreamFrameResultDroppedDecodeCorrupt": 5,
	"k_EStreamFrameResultDroppedLate":          6,
	"k_EStreamFrameResultDroppedReset":         7,
}

func (x EStreamFrameResult) Enum() *EStreamFrameResult {
	p := new(EStreamFrameResult)
	*p = x
	return p
}
func (x EStreamFrameResult) String() string {
	return proto.EnumName(EStreamFrameResult_name, int32(x))
}
func (x *EStreamFrameResult) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EStreamFrameResult_value, data, "EStreamFrameResult")
	if err != nil {
		return err
	}
	*x = EStreamFrameResult(value)
	return nil
}
func (EStreamFrameResult) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_stream_d1a07900b36af23a, []int{19}
}

type EFrameAccumulatedStat int32

const (
	EFrameAccumulatedStat_k_EFrameStatFPS                     EFrameAccumulatedStat = 0
	EFrameAccumulatedStat_k_EFrameStatCaptureDurationMS       EFrameAccumulatedStat = 1
	EFrameAccumulatedStat_k_EFrameStatConvertDurationMS       EFrameAccumulatedStat = 2
	EFrameAccumulatedStat_k_EFrameStatEncodeDurationMS        EFrameAccumulatedStat = 3
	EFrameAccumulatedStat_k_EFrameStatSteamDurationMS         EFrameAccumulatedStat = 4
	EFrameAccumulatedStat_k_EFrameStatServerDurationMS        EFrameAccumulatedStat = 5
	EFrameAccumulatedStat_k_EFrameStatNetworkDurationMS       EFrameAccumulatedStat = 6
	EFrameAccumulatedStat_k_EFrameStatDecodeDurationMS        EFrameAccumulatedStat = 7
	EFrameAccumulatedStat_k_EFrameStatDisplayDurationMS       EFrameAccumulatedStat = 8
	EFrameAccumulatedStat_k_EFrameStatClientDurationMS        EFrameAccumulatedStat = 9
	EFrameAccumulatedStat_k_EFrameStatFrameDurationMS         EFrameAccumulatedStat = 10
	EFrameAccumulatedStat_k_EFrameStatInputLatencyMS          EFrameAccumulatedStat = 11
	EFrameAccumulatedStat_k_EFrameStatGameLatencyMS           EFrameAccumulatedStat = 12
	EFrameAccumulatedStat_k_EFrameStatRoundTripLatencyMS      EFrameAccumulatedStat = 13
	EFrameAccumulatedStat_k_EFrameStatPingTimeMS              EFrameAccumulatedStat = 14
	EFrameAccumulatedStat_k_EFrameStatServerBitrateKbitPerSec EFrameAccumulatedStat = 15
	EFrameAccumulatedStat_k_EFrameStatClientBitrateKbitPerSec EFrameAccumulatedStat = 16
	EFrameAccumulatedStat_k_EFrameStatLinkBandwidthKbitPerSec EFrameAccumulatedStat = 17
	EFrameAccumulatedStat_k_EFrameStatPacketLossPercentage    EFrameAccumulatedStat = 18
)

var EFrameAccumulatedStat_name = map[int32]string{
	0:  "k_EFrameStatFPS",
	1:  "k_EFrameStatCaptureDurationMS",
	2:  "k_EFrameStatConvertDurationMS",
	3:  "k_EFrameStatEncodeDurationMS",
	4:  "k_EFrameStatSteamDurationMS",
	5:  "k_EFrameStatServerDurationMS",
	6:  "k_EFrameStatNetworkDurationMS",
	7:  "k_EFrameStatDecodeDurationMS",
	8:  "k_EFrameStatDisplayDurationMS",
	9:  "k_EFrameStatClientDurationMS",
	10: "k_EFrameStatFrameDurationMS",
	11: "k_EFrameStatInputLatencyMS",
	12: "k_EFrameStatGameLatencyMS",
	13: "k_EFrameStatRoundTripLatencyMS",
	14: "k_EFrameStatPingTimeMS",
	15: "k_EFrameStatServerBitrateKbitPerSec",
	16: "k_EFrameStatClientBitrateKbitPerSec",
	17: "k_EFrameStatLinkBandwidthKbitPerSec",
	18: "k_EFrameStatPacketLossPercentage",
}
var EFrameAccumulatedStat_value = map[string]int32{
	"k_EFrameStatFPS":                     0,
	"k_EFrameStatCaptureDurationMS":       1,
	"k_EFrameStatConvertDurationMS":       2,
	"k_EFrameStatEncodeDurationMS":        3,
	"k_EFrameStatSteamDurationMS":         4,
	"k_EFrameStatServerDurationMS":        5,
	"k_EFrameStatNetworkDurationMS":       6,
	"k_EFrameStatDecodeDurationMS":        7,
	"k_EFrameStatDisplayDurationMS":       8,
	"k_EFrameStatClientDurationMS":        9,
	"k_EFrameStatFrameDurationMS":         10,
	"k_EFrameStatInputLatencyMS":          11,
	"k_EFrameStatGameLatencyMS":           12,
	"k_EFrameStatRoundTripLatencyMS":      13,
	"k_EFrameStatPingTimeMS":              14,
	"k_EFrameStatServerBitrateKbitPerSec": 15,
	"k_EFrameStatClientBitrateKbitPerSec": 16,
	"k_EFrameStatLinkBandwidthKbitPerSec": 17,
	"k_EFrameStatPacketLossPercentage":    18,
}

func (x EFrameAccumulatedStat) Enum() *EFrameAccumulatedStat {
	p := new(EFrameAccumulatedStat)
	*p = x
	return p
}
func (x EFrameAccumulatedStat) String() string {
	return proto.EnumName(EFrameAccumulatedStat_name, int32(x))
}
func (x *EFrameAccumulatedStat) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EFrameAccumulatedStat_value, data, "EFrameAccumulatedStat")
	if err != nil {
		return err
	}
	*x = EFrameAccumulatedStat(value)
	return nil
}
func (EFrameAccumulatedStat) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_stream_d1a07900b36af23a, []int{20}
}

type ELogFileType int32

const (
	ELogFileType_k_ELogFileSystemBoot  ELogFileType = 0
	ELogFileType_k_ELogFileSystemReset ELogFileType = 1
	ELogFileType_k_ELogFileSystemDebug ELogFileType = 2
)

var ELogFileType_name = map[int32]string{
	0: "k_ELogFileSystemBoot",
	1: "k_ELogFileSystemReset",
	2: "k_ELogFileSystemDebug",
}
var ELogFileType_value = map[string]int32{
	"k_ELogFileSystemBoot":  0,
	"k_ELogFileSystemReset": 1,
	"k_ELogFileSystemDebug": 2,
}

func (x ELogFileType) Enum() *ELogFileType {
	p := new(ELogFileType)
	*p = x
	return p
}
func (x ELogFileType) String() string {
	return proto.EnumName(ELogFileType_name, int32(x))
}
func (x *ELogFileType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ELogFileType_value, data, "ELogFileType")
	if err != nil {
		return err
	}
	*x = ELogFileType(value)
	return nil
}
func (ELogFileType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_stream_d1a07900b36af23a, []int{21}
}

type CAuthenticationResponseMsg_AuthenticationResult int32

const (
	CAuthenticationResponseMsg_SUCCEEDED CAuthenticationResponseMsg_AuthenticationResult = 0
	CAuthenticationResponseMsg_FAILED    CAuthenticationResponseMsg_AuthenticationResult = 1
)

var CAuthenticationResponseMsg_AuthenticationResult_name = map[int32]string{
	0: "SUCCEEDED",
	1: "FAILED",
}
var CAuthenticationResponseMsg_AuthenticationResult_value = map[string]int32{
	"SUCCEEDED": 0,
	"FAILED":    1,
}

func (x CAuthenticationResponseMsg_AuthenticationResult) Enum() *CAuthenticationResponseMsg_AuthenticationResult {
	p := new(CAuthenticationResponseMsg_AuthenticationResult)
	*p = x
	return p
}
func (x CAuthenticationResponseMsg_AuthenticationResult) String() string {
	return proto.EnumName(CAuthenticationResponseMsg_AuthenticationResult_name, int32(x))
}
func (x *CAuthenticationResponseMsg_AuthenticationResult) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CAuthenticationResponseMsg_AuthenticationResult_value, data, "CAuthenticationResponseMsg_AuthenticationResult")
	if err != nil {
		return err
	}
	*x = CAuthenticationResponseMsg_AuthenticationResult(value)
	return nil
}
func (CAuthenticationResponseMsg_AuthenticationResult) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_stream_d1a07900b36af23a, []int{7, 0}
}

type CDiscoveryPingRequest struct {
	Sequence             *uint32  `protobuf:"varint,1,opt,name=sequence" json:"sequence,omitempty"`
	PacketSizeRequested  *uint32  `protobuf:"varint,2,opt,name=packet_size_requested,json=packetSizeRequested" json:"packet_size_requested,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CDiscoveryPingRequest) Reset()         { *m = CDiscoveryPingRequest{} }
func (m *CDiscoveryPingRequest) String() string { return proto.CompactTextString(m) }
func (*CDiscoveryPingRequest) ProtoMessage()    {}
func (*CDiscoveryPingRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_stream_d1a07900b36af23a, []int{0}
}
func (m *CDiscoveryPingRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CDiscoveryPingRequest.Unmarshal(m, b)
}
func (m *CDiscoveryPingRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CDiscoveryPingRequest.Marshal(b, m, deterministic)
}
func (dst *CDiscoveryPingRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CDiscoveryPingRequest.Merge(dst, src)
}
func (m *CDiscoveryPingRequest) XXX_Size() int {
	return xxx_messageInfo_CDiscoveryPingRequest.Size(m)
}
func (m *CDiscoveryPingRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CDiscoveryPingRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CDiscoveryPingRequest proto.InternalMessageInfo

func (m *CDiscoveryPingRequest) GetSequence() uint32 {
	if m != nil && m.Sequence != nil {
		return *m.Sequence
	}
	return 0
}

func (m *CDiscoveryPingRequest) GetPacketSizeRequested() uint32 {
	if m != nil && m.PacketSizeRequested != nil {
		return *m.PacketSizeRequested
	}
	return 0
}

type CDiscoveryPingResponse struct {
	Sequence             *uint32  `protobuf:"varint,1,opt,name=sequence" json:"sequence,omitempty"`
	PacketSizeReceived   *uint32  `protobuf:"varint,2,opt,name=packet_size_received,json=packetSizeReceived" json:"packet_size_received,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CDiscoveryPingResponse) Reset()         { *m = CDiscoveryPingResponse{} }
func (m *CDiscoveryPingResponse) String() string { return proto.CompactTextString(m) }
func (*CDiscoveryPingResponse) ProtoMessage()    {}
func (*CDiscoveryPingResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_stream_d1a07900b36af23a, []int{1}
}
func (m *CDiscoveryPingResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CDiscoveryPingResponse.Unmarshal(m, b)
}
func (m *CDiscoveryPingResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CDiscoveryPingResponse.Marshal(b, m, deterministic)
}
func (dst *CDiscoveryPingResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CDiscoveryPingResponse.Merge(dst, src)
}
func (m *CDiscoveryPingResponse) XXX_Size() int {
	return xxx_messageInfo_CDiscoveryPingResponse.Size(m)
}
func (m *CDiscoveryPingResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CDiscoveryPingResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CDiscoveryPingResponse proto.InternalMessageInfo

func (m *CDiscoveryPingResponse) GetSequence() uint32 {
	if m != nil && m.Sequence != nil {
		return *m.Sequence
	}
	return 0
}

func (m *CDiscoveryPingResponse) GetPacketSizeReceived() uint32 {
	if m != nil && m.PacketSizeReceived != nil {
		return *m.PacketSizeReceived
	}
	return 0
}

type CStreamingClientHandshakeInfo struct {
	NetworkTest          *int32   `protobuf:"varint,2,opt,name=network_test,json=networkTest" json:"network_test,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CStreamingClientHandshakeInfo) Reset()         { *m = CStreamingClientHandshakeInfo{} }
func (m *CStreamingClientHandshakeInfo) String() string { return proto.CompactTextString(m) }
func (*CStreamingClientHandshakeInfo) ProtoMessage()    {}
func (*CStreamingClientHandshakeInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_stream_d1a07900b36af23a, []int{2}
}
func (m *CStreamingClientHandshakeInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CStreamingClientHandshakeInfo.Unmarshal(m, b)
}
func (m *CStreamingClientHandshakeInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CStreamingClientHandshakeInfo.Marshal(b, m, deterministic)
}
func (dst *CStreamingClientHandshakeInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CStreamingClientHandshakeInfo.Merge(dst, src)
}
func (m *CStreamingClientHandshakeInfo) XXX_Size() int {
	return xxx_messageInfo_CStreamingClientHandshakeInfo.Size(m)
}
func (m *CStreamingClientHandshakeInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_CStreamingClientHandshakeInfo.DiscardUnknown(m)
}

var xxx_messageInfo_CStreamingClientHandshakeInfo proto.InternalMessageInfo

func (m *CStreamingClientHandshakeInfo) GetNetworkTest() int32 {
	if m != nil && m.NetworkTest != nil {
		return *m.NetworkTest
	}
	return 0
}

type CClientHandshakeMsg struct {
	Info                 *CStreamingClientHandshakeInfo `protobuf:"bytes,1,req,name=info" json:"info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *CClientHandshakeMsg) Reset()         { *m = CClientHandshakeMsg{} }
func (m *CClientHandshakeMsg) String() string { return proto.CompactTextString(m) }
func (*CClientHandshakeMsg) ProtoMessage()    {}
func (*CClientHandshakeMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_stream_d1a07900b36af23a, []int{3}
}
func (m *CClientHandshakeMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CClientHandshakeMsg.Unmarshal(m, b)
}
func (m *CClientHandshakeMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CClientHandshakeMsg.Marshal(b, m, deterministic)
}
func (dst *CClientHandshakeMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CClientHandshakeMsg.Merge(dst, src)
}
func (m *CClientHandshakeMsg) XXX_Size() int {
	return xxx_messageInfo_CClientHandshakeMsg.Size(m)
}
func (m *CClientHandshakeMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_CClientHandshakeMsg.DiscardUnknown(m)
}

var xxx_messageInfo_CClientHandshakeMsg proto.InternalMessageInfo

func (m *CClientHandshakeMsg) GetInfo() *CStreamingClientHandshakeInfo {
	if m != nil {
		return m.Info
	}
	return nil
}

type CStreamingServerHandshakeInfo struct {
	Mtu                  *int32   `protobuf:"varint,1,opt,name=mtu" json:"mtu,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CStreamingServerHandshakeInfo) Reset()         { *m = CStreamingServerHandshakeInfo{} }
func (m *CStreamingServerHandshakeInfo) String() string { return proto.CompactTextString(m) }
func (*CStreamingServerHandshakeInfo) ProtoMessage()    {}
func (*CStreamingServerHandshakeInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_stream_d1a07900b36af23a, []int{4}
}
func (m *CStreamingServerHandshakeInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CStreamingServerHandshakeInfo.Unmarshal(m, b)
}
func (m *CStreamingServerHandshakeInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CStreamingServerHandshakeInfo.Marshal(b, m, deterministic)
}
func (dst *CStreamingServerHandshakeInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CStreamingServerHandshakeInfo.Merge(dst, src)
}
func (m *CStreamingServerHandshakeInfo) XXX_Size() int {
	return xxx_messageInfo_CStreamingServerHandshakeInfo.Size(m)
}
func (m *CStreamingServerHandshakeInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_CStreamingServerHandshakeInfo.DiscardUnknown(m)
}

var xxx_messageInfo_CStreamingServerHandshakeInfo proto.InternalMessageInfo

func (m *CStreamingServerHandshakeInfo) GetMtu() int32 {
	if m != nil && m.Mtu != nil {
		return *m.Mtu
	}
	return 0
}

type CServerHandshakeMsg struct {
	Info                 *CStreamingServerHandshakeInfo `protobuf:"bytes,1,req,name=info" json:"info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *CServerHandshakeMsg) Reset()         { *m = CServerHandshakeMsg{} }
func (m *CServerHandshakeMsg) String() string { return proto.CompactTextString(m) }
func (*CServerHandshakeMsg) ProtoMessage()    {}
func (*CServerHandshakeMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_stream_d1a07900b36af23a, []int{5}
}
func (m *CServerHandshakeMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CServerHandshakeMsg.Unmarshal(m, b)
}
func (m *CServerHandshakeMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CServerHandshakeMsg.Marshal(b, m, deterministic)
}
func (dst *CServerHandshakeMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CServerHandshakeMsg.Merge(dst, src)
}
func (m *CServerHandshakeMsg) XXX_Size() int {
	return xxx_messageInfo_CServerHandshakeMsg.Size(m)
}
func (m *CServerHandshakeMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_CServerHandshakeMsg.DiscardUnknown(m)
}

var xxx_messageInfo_CServerHandshakeMsg proto.InternalMessageInfo

func (m *CServerHandshakeMsg) GetInfo() *CStreamingServerHandshakeInfo {
	if m != nil {
		return m.Info
	}
	return nil
}

type CAuthenticationRequestMsg struct {
	Token                []byte          `protobuf:"bytes,1,opt,name=token" json:"token,omitempty"`
	Version              *EStreamVersion `protobuf:"varint,2,opt,name=version,enum=EStreamVersion,def=0" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *CAuthenticationRequestMsg) Reset()         { *m = CAuthenticationRequestMsg{} }
func (m *CAuthenticationRequestMsg) String() string { return proto.CompactTextString(m) }
func (*CAuthenticationRequestMsg) ProtoMessage()    {}
func (*CAuthenticationRequestMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_stream_d1a07900b36af23a, []int{6}
}
func (m *CAuthenticationRequestMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CAuthenticationRequestMsg.Unmarshal(m, b)
}
func (m *CAuthenticationRequestMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CAuthenticationRequestMsg.Marshal(b, m, deterministic)
}
func (dst *CAuthenticationRequestMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CAuthenticationRequestMsg.Merge(dst, src)
}
func (m *CAuthenticationRequestMsg) XXX_Size() int {
	return xxx_messageInfo_CAuthenticationRequestMsg.Size(m)
}
func (m *CAuthenticationRequestMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_CAuthenticationRequestMsg.DiscardUnknown(m)
}

var xxx_messageInfo_CAuthenticationRequestMsg proto.InternalMessageInfo

const Default_CAuthenticationRequestMsg_Version EStreamVersion = EStreamVersion_k_EStreamVersionNone

func (m *CAuthenticationRequestMsg) GetToken() []byte {
	if m != nil {
		return m.Token
	}
	return nil
}

func (m *CAuthenticationRequestMsg) GetVersion() EStreamVersion {
	if m != nil && m.Version != nil {
		return *m.Version
	}
	return Default_CAuthenticationRequestMsg_Version
}

type CAuthenticationResponseMsg struct {
	Result               *CAuthenticationResponseMsg_AuthenticationResult `protobuf:"varint,1,opt,name=result,enum=CAuthenticationResponseMsg_AuthenticationResult,def=0" json:"result,omitempty"`
	Version              *EStreamVersion                                  `protobuf:"varint,2,opt,name=version,enum=EStreamVersion,def=0" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                         `json:"-"`
	XXX_unrecognized     []byte                                           `json:"-"`
	XXX_sizecache        int32                                            `json:"-"`
}

func (m *CAuthenticationResponseMsg) Reset()         { *m = CAuthenticationResponseMsg{} }
func (m *CAuthenticationResponseMsg) String() string { return proto.CompactTextString(m) }
func (*CAuthenticationResponseMsg) ProtoMessage()    {}
func (*CAuthenticationResponseMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_stream_d1a07900b36af23a, []int{7}
}
func (m *CAuthenticationResponseMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CAuthenticationResponseMsg.Unmarshal(m, b)
}
func (m *CAuthenticationResponseMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CAuthenticationResponseMsg.Marshal(b, m, deterministic)
}
func (dst *CAuthenticationResponseMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CAuthenticationResponseMsg.Merge(dst, src)
}
func (m *CAuthenticationResponseMsg) XXX_Size() int {
	return xxx_messageInfo_CAuthenticationResponseMsg.Size(m)
}
func (m *CAuthenticationResponseMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_CAuthenticationResponseMsg.DiscardUnknown(m)
}

var xxx_messageInfo_CAuthenticationResponseMsg proto.InternalMessageInfo

const Default_CAuthenticationResponseMsg_Result CAuthenticationResponseMsg_AuthenticationResult = CAuthenticationResponseMsg_SUCCEEDED
const Default_CAuthenticationResponseMsg_Version EStreamVersion = EStreamVersion_k_EStreamVersionNone

func (m *CAuthenticationResponseMsg) GetResult() CAuthenticationResponseMsg_AuthenticationResult {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return Default_CAuthenticationResponseMsg_Result
}

func (m *CAuthenticationResponseMsg) GetVersion() EStreamVersion {
	if m != nil && m.Version != nil {
		return *m.Version
	}
	return Default_CAuthenticationResponseMsg_Version
}

type CKeepAliveMsg struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CKeepAliveMsg) Reset()         { *m = CKeepAliveMsg{} }
func (m *CKeepAliveMsg) String() string { return proto.CompactTextString(m) }
func (*CKeepAliveMsg) ProtoMessage()    {}
func (*CKeepAliveMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_stream_d1a07900b36af23a, []int{8}
}
func (m *CKeepAliveMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CKeepAliveMsg.Unmarshal(m, b)
}
func (m *CKeepAliveMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CKeepAliveMsg.Marshal(b, m, deterministic)
}
func (dst *CKeepAliveMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CKeepAliveMsg.Merge(dst, src)
}
func (m *CKeepAliveMsg) XXX_Size() int {
	return xxx_messageInfo_CKeepAliveMsg.Size(m)
}
func (m *CKeepAliveMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_CKeepAliveMsg.DiscardUnknown(m)
}

var xxx_messageInfo_CKeepAliveMsg proto.InternalMessageInfo

type CStartNetworkTestMsg struct {
	Frames               *uint32  `protobuf:"varint,1,opt,name=frames" json:"frames,omitempty"`
	Framerate            *uint32  `protobuf:"varint,2,opt,name=framerate" json:"framerate,omitempty"`
	BitrateKbps          *uint32  `protobuf:"varint,3,opt,name=bitrate_kbps,json=bitrateKbps" json:"bitrate_kbps,omitempty"`
	BurstBitrateKbps     *uint32  `protobuf:"varint,4,opt,name=burst_bitrate_kbps,json=burstBitrateKbps" json:"burst_bitrate_kbps,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CStartNetworkTestMsg) Reset()         { *m = CStartNetworkTestMsg{} }
func (m *CStartNetworkTestMsg) String() string { return proto.CompactTextString(m) }
func (*CStartNetworkTestMsg) ProtoMessage()    {}
func (*CStartNetworkTestMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_stream_d1a07900b36af23a, []int{9}
}
func (m *CStartNetworkTestMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CStartNetworkTestMsg.Unmarshal(m, b)
}
func (m *CStartNetworkTestMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CStartNetworkTestMsg.Marshal(b, m, deterministic)
}
func (dst *CStartNetworkTestMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CStartNetworkTestMsg.Merge(dst, src)
}
func (m *CStartNetworkTestMsg) XXX_Size() int {
	return xxx_messageInfo_CStartNetworkTestMsg.Size(m)
}
func (m *CStartNetworkTestMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_CStartNetworkTestMsg.DiscardUnknown(m)
}

var xxx_messageInfo_CStartNetworkTestMsg proto.InternalMessageInfo

func (m *CStartNetworkTestMsg) GetFrames() uint32 {
	if m != nil && m.Frames != nil {
		return *m.Frames
	}
	return 0
}

func (m *CStartNetworkTestMsg) GetFramerate() uint32 {
	if m != nil && m.Framerate != nil {
		return *m.Framerate
	}
	return 0
}

func (m *CStartNetworkTestMsg) GetBitrateKbps() uint32 {
	if m != nil && m.BitrateKbps != nil {
		return *m.BitrateKbps
	}
	return 0
}

func (m *CStartNetworkTestMsg) GetBurstBitrateKbps() uint32 {
	if m != nil && m.BurstBitrateKbps != nil {
		return *m.BurstBitrateKbps
	}
	return 0
}

type CStreamVideoMode struct {
	Width                  *uint32  `protobuf:"varint,1,req,name=width" json:"width,omitempty"`
	Height                 *uint32  `protobuf:"varint,2,req,name=height" json:"height,omitempty"`
	RefreshRate            *uint32  `protobuf:"varint,3,opt,name=refresh_rate,json=refreshRate" json:"refresh_rate,omitempty"`
	RefreshRateNumerator   *uint32  `protobuf:"varint,4,opt,name=refresh_rate_numerator,json=refreshRateNumerator" json:"refresh_rate_numerator,omitempty"`
	RefreshRateDenominator *uint32  `protobuf:"varint,5,opt,name=refresh_rate_denominator,json=refreshRateDenominator" json:"refresh_rate_denominator,omitempty"`
	XXX_NoUnkeyedLiteral   struct{} `json:"-"`
	XXX_unrecognized       []byte   `json:"-"`
	XXX_sizecache          int32    `json:"-"`
}

func (m *CStreamVideoMode) Reset()         { *m = CStreamVideoMode{} }
func (m *CStreamVideoMode) String() string { return proto.CompactTextString(m) }
func (*CStreamVideoMode) ProtoMessage()    {}
func (*CStreamVideoMode) Descriptor() ([]byte, []int) {
	return fileDescriptor_stream_d1a07900b36af23a, []int{10}
}
func (m *CStreamVideoMode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CStreamVideoMode.Unmarshal(m, b)
}
func (m *CStreamVideoMode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CStreamVideoMode.Marshal(b, m, deterministic)
}
func (dst *CStreamVideoMode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CStreamVideoMode.Merge(dst, src)
}
func (m *CStreamVideoMode) XXX_Size() int {
	return xxx_messageInfo_CStreamVideoMode.Size(m)
}
func (m *CStreamVideoMode) XXX_DiscardUnknown() {
	xxx_messageInfo_CStreamVideoMode.DiscardUnknown(m)
}

var xxx_messageInfo_CStreamVideoMode proto.InternalMessageInfo

func (m *CStreamVideoMode) GetWidth() uint32 {
	if m != nil && m.Width != nil {
		return *m.Width
	}
	return 0
}

func (m *CStreamVideoMode) GetHeight() uint32 {
	if m != nil && m.Height != nil {
		return *m.Height
	}
	return 0
}

func (m *CStreamVideoMode) GetRefreshRate() uint32 {
	if m != nil && m.RefreshRate != nil {
		return *m.RefreshRate
	}
	return 0
}

func (m *CStreamVideoMode) GetRefreshRateNumerator() uint32 {
	if m != nil && m.RefreshRateNumerator != nil {
		return *m.RefreshRateNumerator
	}
	return 0
}

func (m *CStreamVideoMode) GetRefreshRateDenominator() uint32 {
	if m != nil && m.RefreshRateDenominator != nil {
		return *m.RefreshRateDenominator
	}
	return 0
}

type CStreamingClientCaps struct {
	SystemInfo                    *string  `protobuf:"bytes,1,opt,name=system_info,json=systemInfo" json:"system_info,omitempty"`
	SystemCanSuspend              *bool    `protobuf:"varint,2,opt,name=system_can_suspend,json=systemCanSuspend" json:"system_can_suspend,omitempty"`
	MaximumDecodeBitrateKbps      *int32   `protobuf:"varint,3,opt,name=maximum_decode_bitrate_kbps,json=maximumDecodeBitrateKbps" json:"maximum_decode_bitrate_kbps,omitempty"`
	MaximumBurstBitrateKbps       *int32   `protobuf:"varint,4,opt,name=maximum_burst_bitrate_kbps,json=maximumBurstBitrateKbps" json:"maximum_burst_bitrate_kbps,omitempty"`
	SupportsVideoHevc             *bool    `protobuf:"varint,5,opt,name=supports_video_hevc,json=supportsVideoHevc" json:"supports_video_hevc,omitempty"`
	DisableSteamStore             *bool    `protobuf:"varint,6,opt,name=disable_steam_store,json=disableSteamStore" json:"disable_steam_store,omitempty"`
	DisableClientCursor           *bool    `protobuf:"varint,7,opt,name=disable_client_cursor,json=disableClientCursor" json:"disable_client_cursor,omitempty"`
	DisableIntelHardwareEncoding  *bool    `protobuf:"varint,8,opt,name=disable_intel_hardware_encoding,json=disableIntelHardwareEncoding" json:"disable_intel_hardware_encoding,omitempty"`
	DisableAmdHardwareEncoding    *bool    `protobuf:"varint,9,opt,name=disable_amd_hardware_encoding,json=disableAmdHardwareEncoding" json:"disable_amd_hardware_encoding,omitempty"`
	DisableNvidiaHardwareEncoding *bool    `protobuf:"varint,10,opt,name=disable_nvidia_hardware_encoding,json=disableNvidiaHardwareEncoding" json:"disable_nvidia_hardware_encoding,omitempty"`
	XXX_NoUnkeyedLiteral          struct{} `json:"-"`
	XXX_unrecognized              []byte   `json:"-"`
	XXX_sizecache                 int32    `json:"-"`
}

func (m *CStreamingClientCaps) Reset()         { *m = CStreamingClientCaps{} }
func (m *CStreamingClientCaps) String() string { return proto.CompactTextString(m) }
func (*CStreamingClientCaps) ProtoMessage()    {}
func (*CStreamingClientCaps) Descriptor() ([]byte, []int) {
	return fileDescriptor_stream_d1a07900b36af23a, []int{11}
}
func (m *CStreamingClientCaps) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CStreamingClientCaps.Unmarshal(m, b)
}
func (m *CStreamingClientCaps) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CStreamingClientCaps.Marshal(b, m, deterministic)
}
func (dst *CStreamingClientCaps) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CStreamingClientCaps.Merge(dst, src)
}
func (m *CStreamingClientCaps) XXX_Size() int {
	return xxx_messageInfo_CStreamingClientCaps.Size(m)
}
func (m *CStreamingClientCaps) XXX_DiscardUnknown() {
	xxx_messageInfo_CStreamingClientCaps.DiscardUnknown(m)
}

var xxx_messageInfo_CStreamingClientCaps proto.InternalMessageInfo

func (m *CStreamingClientCaps) GetSystemInfo() string {
	if m != nil && m.SystemInfo != nil {
		return *m.SystemInfo
	}
	return ""
}

func (m *CStreamingClientCaps) GetSystemCanSuspend() bool {
	if m != nil && m.SystemCanSuspend != nil {
		return *m.SystemCanSuspend
	}
	return false
}

func (m *CStreamingClientCaps) GetMaximumDecodeBitrateKbps() int32 {
	if m != nil && m.MaximumDecodeBitrateKbps != nil {
		return *m.MaximumDecodeBitrateKbps
	}
	return 0
}

func (m *CStreamingClientCaps) GetMaximumBurstBitrateKbps() int32 {
	if m != nil && m.MaximumBurstBitrateKbps != nil {
		return *m.MaximumBurstBitrateKbps
	}
	return 0
}

func (m *CStreamingClientCaps) GetSupportsVideoHevc() bool {
	if m != nil && m.SupportsVideoHevc != nil {
		return *m.SupportsVideoHevc
	}
	return false
}

func (m *CStreamingClientCaps) GetDisableSteamStore() bool {
	if m != nil && m.DisableSteamStore != nil {
		return *m.DisableSteamStore
	}
	return false
}

func (m *CStreamingClientCaps) GetDisableClientCursor() bool {
	if m != nil && m.DisableClientCursor != nil {
		return *m.DisableClientCursor
	}
	return false
}

func (m *CStreamingClientCaps) GetDisableIntelHardwareEncoding() bool {
	if m != nil && m.DisableIntelHardwareEncoding != nil {
		return *m.DisableIntelHardwareEncoding
	}
	return false
}

func (m *CStreamingClientCaps) GetDisableAmdHardwareEncoding() bool {
	if m != nil && m.DisableAmdHardwareEncoding != nil {
		return *m.DisableAmdHardwareEncoding
	}
	return false
}

func (m *CStreamingClientCaps) GetDisableNvidiaHardwareEncoding() bool {
	if m != nil && m.DisableNvidiaHardwareEncoding != nil {
		return *m.DisableNvidiaHardwareEncoding
	}
	return false
}

type CStreamingClientConfig struct {
	Quality                     *EStreamQualityPreference `protobuf:"varint,1,opt,name=quality,enum=EStreamQualityPreference,def=2" json:"quality,omitempty"`
	MaximumResolutionX          *uint32                   `protobuf:"varint,2,opt,name=maximum_resolution_x,json=maximumResolutionX" json:"maximum_resolution_x,omitempty"`
	MaximumResolutionY          *uint32                   `protobuf:"varint,3,opt,name=maximum_resolution_y,json=maximumResolutionY" json:"maximum_resolution_y,omitempty"`
	MaximumFramerateNumerator   *uint32                   `protobuf:"varint,4,opt,name=maximum_framerate_numerator,json=maximumFramerateNumerator" json:"maximum_framerate_numerator,omitempty"`
	MaximumFramerateDenominator *uint32                   `protobuf:"varint,5,opt,name=maximum_framerate_denominator,json=maximumFramerateDenominator" json:"maximum_framerate_denominator,omitempty"`
	MaximumBitrateKbps          *int32                    `protobuf:"varint,6,opt,name=maximum_bitrate_kbps,json=maximumBitrateKbps,def=-1" json:"maximum_bitrate_kbps,omitempty"`
	EnableHardwareDecoding      *bool                     `protobuf:"varint,7,opt,name=enable_hardware_decoding,json=enableHardwareDecoding,def=1" json:"enable_hardware_decoding,omitempty"`
	EnablePerformanceOverlay    *bool                     `protobuf:"varint,8,opt,name=enable_performance_overlay,json=enablePerformanceOverlay,def=0" json:"enable_performance_overlay,omitempty"`
	EnableVideoStreaming        *bool                     `protobuf:"varint,9,opt,name=enable_video_streaming,json=enableVideoStreaming,def=1" json:"enable_video_streaming,omitempty"`
	EnableAudioStreaming        *bool                     `protobuf:"varint,10,opt,name=enable_audio_streaming,json=enableAudioStreaming,def=1" json:"enable_audio_streaming,omitempty"`
	EnableInputStreaming        *bool                     `protobuf:"varint,11,opt,name=enable_input_streaming,json=enableInputStreaming,def=1" json:"enable_input_streaming,omitempty"`
	AudioChannels               *int32                    `protobuf:"varint,12,opt,name=audio_channels,json=audioChannels,def=2" json:"audio_channels,omitempty"`
	EnableVideoHevc             *bool                     `protobuf:"varint,13,opt,name=enable_video_hevc,json=enableVideoHevc,def=0" json:"enable_video_hevc,omitempty"`
	XXX_NoUnkeyedLiteral        struct{}                  `json:"-"`
	XXX_unrecognized            []byte                    `json:"-"`
	XXX_sizecache               int32                     `json:"-"`
}

func (m *CStreamingClientConfig) Reset()         { *m = CStreamingClientConfig{} }
func (m *CStreamingClientConfig) String() string { return proto.CompactTextString(m) }
func (*CStreamingClientConfig) ProtoMessage()    {}
func (*CStreamingClientConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_stream_d1a07900b36af23a, []int{12}
}
func (m *CStreamingClientConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CStreamingClientConfig.Unmarshal(m, b)
}
func (m *CStreamingClientConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CStreamingClientConfig.Marshal(b, m, deterministic)
}
func (dst *CStreamingClientConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CStreamingClientConfig.Merge(dst, src)
}
func (m *CStreamingClientConfig) XXX_Size() int {
	return xxx_messageInfo_CStreamingClientConfig.Size(m)
}
func (m *CStreamingClientConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_CStreamingClientConfig.DiscardUnknown(m)
}

var xxx_messageInfo_CStreamingClientConfig proto.InternalMessageInfo

const Default_CStreamingClientConfig_Quality EStreamQualityPreference = EStreamQualityPreference_k_EStreamQualityBalanced
const Default_CStreamingClientConfig_MaximumBitrateKbps int32 = -1
const Default_CStreamingClientConfig_EnableHardwareDecoding bool = true
const Default_CStreamingClientConfig_EnablePerformanceOverlay bool = false
const Default_CStreamingClientConfig_EnableVideoStreaming bool = true
const Default_CStreamingClientConfig_EnableAudioStreaming bool = true
const Default_CStreamingClientConfig_EnableInputStreaming bool = true
const Default_CStreamingClientConfig_AudioChannels int32 = 2
const Default_CStreamingClientConfig_EnableVideoHevc bool = false

func (m *CStreamingClientConfig) GetQuality() EStreamQualityPreference {
	if m != nil && m.Quality != nil {
		return *m.Quality
	}
	return Default_CStreamingClientConfig_Quality
}

func (m *CStreamingClientConfig) GetMaximumResolutionX() uint32 {
	if m != nil && m.MaximumResolutionX != nil {
		return *m.MaximumResolutionX
	}
	return 0
}

func (m *CStreamingClientConfig) GetMaximumResolutionY() uint32 {
	if m != nil && m.MaximumResolutionY != nil {
		return *m.MaximumResolutionY
	}
	return 0
}

func (m *CStreamingClientConfig) GetMaximumFramerateNumerator() uint32 {
	if m != nil && m.MaximumFramerateNumerator != nil {
		return *m.MaximumFramerateNumerator
	}
	return 0
}

func (m *CStreamingClientConfig) GetMaximumFramerateDenominator() uint32 {
	if m != nil && m.MaximumFramerateDenominator != nil {
		return *m.MaximumFramerateDenominator
	}
	return 0
}

func (m *CStreamingClientConfig) GetMaximumBitrateKbps() int32 {
	if m != nil && m.MaximumBitrateKbps != nil {
		return *m.MaximumBitrateKbps
	}
	return Default_CStreamingClientConfig_MaximumBitrateKbps
}

func (m *CStreamingClientConfig) GetEnableHardwareDecoding() bool {
	if m != nil && m.EnableHardwareDecoding != nil {
		return *m.EnableHardwareDecoding
	}
	return Default_CStreamingClientConfig_EnableHardwareDecoding
}

func (m *CStreamingClientConfig) GetEnablePerformanceOverlay() bool {
	if m != nil && m.EnablePerformanceOverlay != nil {
		return *m.EnablePerformanceOverlay
	}
	return Default_CStreamingClientConfig_EnablePerformanceOverlay
}

func (m *CStreamingClientConfig) GetEnableVideoStreaming() bool {
	if m != nil && m.EnableVideoStreaming != nil {
		return *m.EnableVideoStreaming
	}
	return Default_CStreamingClientConfig_EnableVideoStreaming
}

func (m *CStreamingClientConfig) GetEnableAudioStreaming() bool {
	if m != nil && m.EnableAudioStreaming != nil {
		return *m.EnableAudioStreaming
	}
	return Default_CStreamingClientConfig_EnableAudioStreaming
}

func (m *CStreamingClientConfig) GetEnableInputStreaming() bool {
	if m != nil && m.EnableInputStreaming != nil {
		return *m.EnableInputStreaming
	}
	return Default_CStreamingClientConfig_EnableInputStreaming
}

func (m *CStreamingClientConfig) GetAudioChannels() int32 {
	if m != nil && m.AudioChannels != nil {
		return *m.AudioChannels
	}
	return Default_CStreamingClientConfig_AudioChannels
}

func (m *CStreamingClientConfig) GetEnableVideoHevc() bool {
	if m != nil && m.EnableVideoHevc != nil {
		return *m.EnableVideoHevc
	}
	return Default_CStreamingClientConfig_EnableVideoHevc
}

type CStreamingServerConfig struct {
	ChangeDesktopResolution      *bool    `protobuf:"varint,1,opt,name=change_desktop_resolution,json=changeDesktopResolution" json:"change_desktop_resolution,omitempty"`
	DynamicallyAdjustResolution  *bool    `protobuf:"varint,2,opt,name=dynamically_adjust_resolution,json=dynamicallyAdjustResolution" json:"dynamically_adjust_resolution,omitempty"`
	EnableCaptureNvfbc           *bool    `protobuf:"varint,3,opt,name=enable_capture_nvfbc,json=enableCaptureNvfbc" json:"enable_capture_nvfbc,omitempty"`
	EnableHardwareEncodingNvidia *bool    `protobuf:"varint,4,opt,name=enable_hardware_encoding_nvidia,json=enableHardwareEncodingNvidia" json:"enable_hardware_encoding_nvidia,omitempty"`
	EnableHardwareEncodingAmd    *bool    `protobuf:"varint,5,opt,name=enable_hardware_encoding_amd,json=enableHardwareEncodingAmd" json:"enable_hardware_encoding_amd,omitempty"`
	EnableHardwareEncodingIntel  *bool    `protobuf:"varint,6,opt,name=enable_hardware_encoding_intel,json=enableHardwareEncodingIntel" json:"enable_hardware_encoding_intel,omitempty"`
	SoftwareEncodingThreads      *int32   `protobuf:"varint,7,opt,name=software_encoding_threads,json=softwareEncodingThreads" json:"software_encoding_threads,omitempty"`
	EnableTrafficPriority        *bool    `protobuf:"varint,8,opt,name=enable_traffic_priority,json=enableTrafficPriority" json:"enable_traffic_priority,omitempty"`
	XXX_NoUnkeyedLiteral         struct{} `json:"-"`
	XXX_unrecognized             []byte   `json:"-"`
	XXX_sizecache                int32    `json:"-"`
}

func (m *CStreamingServerConfig) Reset()         { *m = CStreamingServerConfig{} }
func (m *CStreamingServerConfig) String() string { return proto.CompactTextString(m) }
func (*CStreamingServerConfig) ProtoMessage()    {}
func (*CStreamingServerConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_stream_d1a07900b36af23a, []int{13}
}
func (m *CStreamingServerConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CStreamingServerConfig.Unmarshal(m, b)
}
func (m *CStreamingServerConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CStreamingServerConfig.Marshal(b, m, deterministic)
}
func (dst *CStreamingServerConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CStreamingServerConfig.Merge(dst, src)
}
func (m *CStreamingServerConfig) XXX_Size() int {
	return xxx_messageInfo_CStreamingServerConfig.Size(m)
}
func (m *CStreamingServerConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_CStreamingServerConfig.DiscardUnknown(m)
}

var xxx_messageInfo_CStreamingServerConfig proto.InternalMessageInfo

func (m *CStreamingServerConfig) GetChangeDesktopResolution() bool {
	if m != nil && m.ChangeDesktopResolution != nil {
		return *m.ChangeDesktopResolution
	}
	return false
}

func (m *CStreamingServerConfig) GetDynamicallyAdjustResolution() bool {
	if m != nil && m.DynamicallyAdjustResolution != nil {
		return *m.DynamicallyAdjustResolution
	}
	return false
}

func (m *CStreamingServerConfig) GetEnableCaptureNvfbc() bool {
	if m != nil && m.EnableCaptureNvfbc != nil {
		return *m.EnableCaptureNvfbc
	}
	return false
}

func (m *CStreamingServerConfig) GetEnableHardwareEncodingNvidia() bool {
	if m != nil && m.EnableHardwareEncodingNvidia != nil {
		return *m.EnableHardwareEncodingNvidia
	}
	return false
}

func (m *CStreamingServerConfig) GetEnableHardwareEncodingAmd() bool {
	if m != nil && m.EnableHardwareEncodingAmd != nil {
		return *m.EnableHardwareEncodingAmd
	}
	return false
}

func (m *CStreamingServerConfig) GetEnableHardwareEncodingIntel() bool {
	if m != nil && m.EnableHardwareEncodingIntel != nil {
		return *m.EnableHardwareEncodingIntel
	}
	return false
}

func (m *CStreamingServerConfig) GetSoftwareEncodingThreads() int32 {
	if m != nil && m.SoftwareEncodingThreads != nil {
		return *m.SoftwareEncodingThreads
	}
	return 0
}

func (m *CStreamingServerConfig) GetEnableTrafficPriority() bool {
	if m != nil && m.EnableTrafficPriority != nil {
		return *m.EnableTrafficPriority
	}
	return false
}

type CNegotiatedConfig struct {
	ReliableData         *bool               `protobuf:"varint,1,opt,name=reliable_data,json=reliableData" json:"reliable_data,omitempty"`
	SelectedAudioCodec   *EStreamAudioCodec  `protobuf:"varint,2,opt,name=selected_audio_codec,json=selectedAudioCodec,enum=EStreamAudioCodec,def=0" json:"selected_audio_codec,omitempty"`
	SelectedVideoCodec   *EStreamVideoCodec  `protobuf:"varint,3,opt,name=selected_video_codec,json=selectedVideoCodec,enum=EStreamVideoCodec,def=0" json:"selected_video_codec,omitempty"`
	AvailableVideoModes  []*CStreamVideoMode `protobuf:"bytes,4,rep,name=available_video_modes,json=availableVideoModes" json:"available_video_modes,omitempty"`
	EnableRemoteHid      *bool               `protobuf:"varint,5,opt,name=enable_remote_hid,json=enableRemoteHid" json:"enable_remote_hid,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *CNegotiatedConfig) Reset()         { *m = CNegotiatedConfig{} }
func (m *CNegotiatedConfig) String() string { return proto.CompactTextString(m) }
func (*CNegotiatedConfig) ProtoMessage()    {}
func (*CNegotiatedConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_stream_d1a07900b36af23a, []int{14}
}
func (m *CNegotiatedConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CNegotiatedConfig.Unmarshal(m, b)
}
func (m *CNegotiatedConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CNegotiatedConfig.Marshal(b, m, deterministic)
}
func (dst *CNegotiatedConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CNegotiatedConfig.Merge(dst, src)
}
func (m *CNegotiatedConfig) XXX_Size() int {
	return xxx_messageInfo_CNegotiatedConfig.Size(m)
}
func (m *CNegotiatedConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_CNegotiatedConfig.DiscardUnknown(m)
}

var xxx_messageInfo_CNegotiatedConfig proto.InternalMessageInfo

const Default_CNegotiatedConfig_SelectedAudioCodec EStreamAudioCodec = EStreamAudioCodec_k_EStreamAudioCodecNone
const Default_CNegotiatedConfig_SelectedVideoCodec EStreamVideoCodec = EStreamVideoCodec_k_EStreamVideoCodecNone

func (m *CNegotiatedConfig) GetReliableData() bool {
	if m != nil && m.ReliableData != nil {
		return *m.ReliableData
	}
	return false
}

func (m *CNegotiatedConfig) GetSelectedAudioCodec() EStreamAudioCodec {
	if m != nil && m.SelectedAudioCodec != nil {
		return *m.SelectedAudioCodec
	}
	return Default_CNegotiatedConfig_SelectedAudioCodec
}

func (m *CNegotiatedConfig) GetSelectedVideoCodec() EStreamVideoCodec {
	if m != nil && m.SelectedVideoCodec != nil {
		return *m.SelectedVideoCodec
	}
	return Default_CNegotiatedConfig_SelectedVideoCodec
}

func (m *CNegotiatedConfig) GetAvailableVideoModes() []*CStreamVideoMode {
	if m != nil {
		return m.AvailableVideoModes
	}
	return nil
}

func (m *CNegotiatedConfig) GetEnableRemoteHid() bool {
	if m != nil && m.EnableRemoteHid != nil {
		return *m.EnableRemoteHid
	}
	return false
}

type CNegotiationInitMsg struct {
	ReliableData         *bool               `protobuf:"varint,1,opt,name=reliable_data,json=reliableData" json:"reliable_data,omitempty"`
	SupportedAudioCodecs []EStreamAudioCodec `protobuf:"varint,2,rep,name=supported_audio_codecs,json=supportedAudioCodecs,enum=EStreamAudioCodec" json:"supported_audio_codecs,omitempty"`
	SupportedVideoCodecs []EStreamVideoCodec `protobuf:"varint,3,rep,name=supported_video_codecs,json=supportedVideoCodecs,enum=EStreamVideoCodec" json:"supported_video_codecs,omitempty"`
	SupportsRemoteHid    *bool               `protobuf:"varint,4,opt,name=supports_remote_hid,json=supportsRemoteHid" json:"supports_remote_hid,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *CNegotiationInitMsg) Reset()         { *m = CNegotiationInitMsg{} }
func (m *CNegotiationInitMsg) String() string { return proto.CompactTextString(m) }
func (*CNegotiationInitMsg) ProtoMessage()    {}
func (*CNegotiationInitMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_stream_d1a07900b36af23a, []int{15}
}
func (m *CNegotiationInitMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CNegotiationInitMsg.Unmarshal(m, b)
}
func (m *CNegotiationInitMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CNegotiationInitMsg.Marshal(b, m, deterministic)
}
func (dst *CNegotiationInitMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CNegotiationInitMsg.Merge(dst, src)
}
func (m *CNegotiationInitMsg) XXX_Size() int {
	return xxx_messageInfo_CNegotiationInitMsg.Size(m)
}
func (m *CNegotiationInitMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_CNegotiationInitMsg.DiscardUnknown(m)
}

var xxx_messageInfo_CNegotiationInitMsg proto.InternalMessageInfo

func (m *CNegotiationInitMsg) GetReliableData() bool {
	if m != nil && m.ReliableData != nil {
		return *m.ReliableData
	}
	return false
}

func (m *CNegotiationInitMsg) GetSupportedAudioCodecs() []EStreamAudioCodec {
	if m != nil {
		return m.SupportedAudioCodecs
	}
	return nil
}

func (m *CNegotiationInitMsg) GetSupportedVideoCodecs() []EStreamVideoCodec {
	if m != nil {
		return m.SupportedVideoCodecs
	}
	return nil
}

func (m *CNegotiationInitMsg) GetSupportsRemoteHid() bool {
	if m != nil && m.SupportsRemoteHid != nil {
		return *m.SupportsRemoteHid
	}
	return false
}

type CNegotiationSetConfigMsg struct {
	Config                *CNegotiatedConfig      `protobuf:"bytes,1,req,name=config" json:"config,omitempty"`
	StreamingClientConfig *CStreamingClientConfig `protobuf:"bytes,2,opt,name=streaming_client_config,json=streamingClientConfig" json:"streaming_client_config,omitempty"`
	StreamingClientCaps   *CStreamingClientCaps   `protobuf:"bytes,3,opt,name=streaming_client_caps,json=streamingClientCaps" json:"streaming_client_caps,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}                `json:"-"`
	XXX_unrecognized      []byte                  `json:"-"`
	XXX_sizecache         int32                   `json:"-"`
}

func (m *CNegotiationSetConfigMsg) Reset()         { *m = CNegotiationSetConfigMsg{} }
func (m *CNegotiationSetConfigMsg) String() string { return proto.CompactTextString(m) }
func (*CNegotiationSetConfigMsg) ProtoMessage()    {}
func (*CNegotiationSetConfigMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_stream_d1a07900b36af23a, []int{16}
}
func (m *CNegotiationSetConfigMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CNegotiationSetConfigMsg.Unmarshal(m, b)
}
func (m *CNegotiationSetConfigMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CNegotiationSetConfigMsg.Marshal(b, m, deterministic)
}
func (dst *CNegotiationSetConfigMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CNegotiationSetConfigMsg.Merge(dst, src)
}
func (m *CNegotiationSetConfigMsg) XXX_Size() int {
	return xxx_messageInfo_CNegotiationSetConfigMsg.Size(m)
}
func (m *CNegotiationSetConfigMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_CNegotiationSetConfigMsg.DiscardUnknown(m)
}

var xxx_messageInfo_CNegotiationSetConfigMsg proto.InternalMessageInfo

func (m *CNegotiationSetConfigMsg) GetConfig() *CNegotiatedConfig {
	if m != nil {
		return m.Config
	}
	return nil
}

func (m *CNegotiationSetConfigMsg) GetStreamingClientConfig() *CStreamingClientConfig {
	if m != nil {
		return m.StreamingClientConfig
	}
	return nil
}

func (m *CNegotiationSetConfigMsg) GetStreamingClientCaps() *CStreamingClientCaps {
	if m != nil {
		return m.StreamingClientCaps
	}
	return nil
}

type CNegotiationCompleteMsg struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CNegotiationCompleteMsg) Reset()         { *m = CNegotiationCompleteMsg{} }
func (m *CNegotiationCompleteMsg) String() string { return proto.CompactTextString(m) }
func (*CNegotiationCompleteMsg) ProtoMessage()    {}
func (*CNegotiationCompleteMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_stream_d1a07900b36af23a, []int{17}
}
func (m *CNegotiationCompleteMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CNegotiationCompleteMsg.Unmarshal(m, b)
}
func (m *CNegotiationCompleteMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CNegotiationCompleteMsg.Marshal(b, m, deterministic)
}
func (dst *CNegotiationCompleteMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CNegotiationCompleteMsg.Merge(dst, src)
}
func (m *CNegotiationCompleteMsg) XXX_Size() int {
	return xxx_messageInfo_CNegotiationCompleteMsg.Size(m)
}
func (m *CNegotiationCompleteMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_CNegotiationCompleteMsg.DiscardUnknown(m)
}

var xxx_messageInfo_CNegotiationCompleteMsg proto.InternalMessageInfo

type CStartAudioDataMsg struct {
	Channel              *uint32            `protobuf:"varint,2,req,name=channel" json:"channel,omitempty"`
	Codec                *EStreamAudioCodec `protobuf:"varint,3,opt,name=codec,enum=EStreamAudioCodec,def=0" json:"codec,omitempty"`
	CodecData            []byte             `protobuf:"bytes,4,opt,name=codec_data,json=codecData" json:"codec_data,omitempty"`
	Frequency            *uint32            `protobuf:"varint,5,opt,name=frequency" json:"frequency,omitempty"`
	Channels             *uint32            `protobuf:"varint,6,opt,name=channels" json:"channels,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *CStartAudioDataMsg) Reset()         { *m = CStartAudioDataMsg{} }
func (m *CStartAudioDataMsg) String() string { return proto.CompactTextString(m) }
func (*CStartAudioDataMsg) ProtoMessage()    {}
func (*CStartAudioDataMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_stream_d1a07900b36af23a, []int{18}
}
func (m *CStartAudioDataMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CStartAudioDataMsg.Unmarshal(m, b)
}
func (m *CStartAudioDataMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CStartAudioDataMsg.Marshal(b, m, deterministic)
}
func (dst *CStartAudioDataMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CStartAudioDataMsg.Merge(dst, src)
}
func (m *CStartAudioDataMsg) XXX_Size() int {
	return xxx_messageInfo_CStartAudioDataMsg.Size(m)
}
func (m *CStartAudioDataMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_CStartAudioDataMsg.DiscardUnknown(m)
}

var xxx_messageInfo_CStartAudioDataMsg proto.InternalMessageInfo

const Default_CStartAudioDataMsg_Codec EStreamAudioCodec = EStreamAudioCodec_k_EStreamAudioCodecNone

func (m *CStartAudioDataMsg) GetChannel() uint32 {
	if m != nil && m.Channel != nil {
		return *m.Channel
	}
	return 0
}

func (m *CStartAudioDataMsg) GetCodec() EStreamAudioCodec {
	if m != nil && m.Codec != nil {
		return *m.Codec
	}
	return Default_CStartAudioDataMsg_Codec
}

func (m *CStartAudioDataMsg) GetCodecData() []byte {
	if m != nil {
		return m.CodecData
	}
	return nil
}

func (m *CStartAudioDataMsg) GetFrequency() uint32 {
	if m != nil && m.Frequency != nil {
		return *m.Frequency
	}
	return 0
}

func (m *CStartAudioDataMsg) GetChannels() uint32 {
	if m != nil && m.Channels != nil {
		return *m.Channels
	}
	return 0
}

type CStopAudioDataMsg struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CStopAudioDataMsg) Reset()         { *m = CStopAudioDataMsg{} }
func (m *CStopAudioDataMsg) String() string { return proto.CompactTextString(m) }
func (*CStopAudioDataMsg) ProtoMessage()    {}
func (*CStopAudioDataMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_stream_d1a07900b36af23a, []int{19}
}
func (m *CStopAudioDataMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CStopAudioDataMsg.Unmarshal(m, b)
}
func (m *CStopAudioDataMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CStopAudioDataMsg.Marshal(b, m, deterministic)
}
func (dst *CStopAudioDataMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CStopAudioDataMsg.Merge(dst, src)
}
func (m *CStopAudioDataMsg) XXX_Size() int {
	return xxx_messageInfo_CStopAudioDataMsg.Size(m)
}
func (m *CStopAudioDataMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_CStopAudioDataMsg.DiscardUnknown(m)
}

var xxx_messageInfo_CStopAudioDataMsg proto.InternalMessageInfo

type CStartVideoDataMsg struct {
	Channel              *uint32            `protobuf:"varint,1,req,name=channel" json:"channel,omitempty"`
	Codec                *EStreamVideoCodec `protobuf:"varint,2,opt,name=codec,enum=EStreamVideoCodec,def=0" json:"codec,omitempty"`
	CodecData            []byte             `protobuf:"bytes,3,opt,name=codec_data,json=codecData" json:"codec_data,omitempty"`
	Width                *uint32            `protobuf:"varint,4,opt,name=width" json:"width,omitempty"`
	Height               *uint32            `protobuf:"varint,5,opt,name=height" json:"height,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *CStartVideoDataMsg) Reset()         { *m = CStartVideoDataMsg{} }
func (m *CStartVideoDataMsg) String() string { return proto.CompactTextString(m) }
func (*CStartVideoDataMsg) ProtoMessage()    {}
func (*CStartVideoDataMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_stream_d1a07900b36af23a, []int{20}
}
func (m *CStartVideoDataMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CStartVideoDataMsg.Unmarshal(m, b)
}
func (m *CStartVideoDataMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CStartVideoDataMsg.Marshal(b, m, deterministic)
}
func (dst *CStartVideoDataMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CStartVideoDataMsg.Merge(dst, src)
}
func (m *CStartVideoDataMsg) XXX_Size() int {
	return xxx_messageInfo_CStartVideoDataMsg.Size(m)
}
func (m *CStartVideoDataMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_CStartVideoDataMsg.DiscardUnknown(m)
}

var xxx_messageInfo_CStartVideoDataMsg proto.InternalMessageInfo

const Default_CStartVideoDataMsg_Codec EStreamVideoCodec = EStreamVideoCodec_k_EStreamVideoCodecNone

func (m *CStartVideoDataMsg) GetChannel() uint32 {
	if m != nil && m.Channel != nil {
		return *m.Channel
	}
	return 0
}

func (m *CStartVideoDataMsg) GetCodec() EStreamVideoCodec {
	if m != nil && m.Codec != nil {
		return *m.Codec
	}
	return Default_CStartVideoDataMsg_Codec
}

func (m *CStartVideoDataMsg) GetCodecData() []byte {
	if m != nil {
		return m.CodecData
	}
	return nil
}

func (m *CStartVideoDataMsg) GetWidth() uint32 {
	if m != nil && m.Width != nil {
		return *m.Width
	}
	return 0
}

func (m *CStartVideoDataMsg) GetHeight() uint32 {
	if m != nil && m.Height != nil {
		return *m.Height
	}
	return 0
}

type CStopVideoDataMsg struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CStopVideoDataMsg) Reset()         { *m = CStopVideoDataMsg{} }
func (m *CStopVideoDataMsg) String() string { return proto.CompactTextString(m) }
func (*CStopVideoDataMsg) ProtoMessage()    {}
func (*CStopVideoDataMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_stream_d1a07900b36af23a, []int{21}
}
func (m *CStopVideoDataMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CStopVideoDataMsg.Unmarshal(m, b)
}
func (m *CStopVideoDataMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CStopVideoDataMsg.Marshal(b, m, deterministic)
}
func (dst *CStopVideoDataMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CStopVideoDataMsg.Merge(dst, src)
}
func (m *CStopVideoDataMsg) XXX_Size() int {
	return xxx_messageInfo_CStopVideoDataMsg.Size(m)
}
func (m *CStopVideoDataMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_CStopVideoDataMsg.DiscardUnknown(m)
}

var xxx_messageInfo_CStopVideoDataMsg proto.InternalMessageInfo

type CInputLatencyTestMsg struct {
	InputMark            *uint32  `protobuf:"varint,1,req,name=input_mark,json=inputMark" json:"input_mark,omitempty"`
	Color                *uint32  `protobuf:"varint,2,opt,name=color" json:"color,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CInputLatencyTestMsg) Reset()         { *m = CInputLatencyTestMsg{} }
func (m *CInputLatencyTestMsg) String() string { return proto.CompactTextString(m) }
func (*CInputLatencyTestMsg) ProtoMessage()    {}
func (*CInputLatencyTestMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_stream_d1a07900b36af23a, []int{22}
}
func (m *CInputLatencyTestMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CInputLatencyTestMsg.Unmarshal(m, b)
}
func (m *CInputLatencyTestMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CInputLatencyTestMsg.Marshal(b, m, deterministic)
}
func (dst *CInputLatencyTestMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CInputLatencyTestMsg.Merge(dst, src)
}
func (m *CInputLatencyTestMsg) XXX_Size() int {
	return xxx_messageInfo_CInputLatencyTestMsg.Size(m)
}
func (m *CInputLatencyTestMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_CInputLatencyTestMsg.DiscardUnknown(m)
}

var xxx_messageInfo_CInputLatencyTestMsg proto.InternalMessageInfo

func (m *CInputLatencyTestMsg) GetInputMark() uint32 {
	if m != nil && m.InputMark != nil {
		return *m.InputMark
	}
	return 0
}

func (m *CInputLatencyTestMsg) GetColor() uint32 {
	if m != nil && m.Color != nil {
		return *m.Color
	}
	return 0
}

type CInputMouseMotionMsg struct {
	InputMark            *uint32  `protobuf:"varint,1,opt,name=input_mark,json=inputMark" json:"input_mark,omitempty"`
	XNormalized          *float32 `protobuf:"fixed32,2,opt,name=x_normalized,json=xNormalized" json:"x_normalized,omitempty"`
	YNormalized          *float32 `protobuf:"fixed32,3,opt,name=y_normalized,json=yNormalized" json:"y_normalized,omitempty"`
	Dx                   *int32   `protobuf:"varint,4,opt,name=dx" json:"dx,omitempty"`
	Dy                   *int32   `protobuf:"varint,5,opt,name=dy" json:"dy,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CInputMouseMotionMsg) Reset()         { *m = CInputMouseMotionMsg{} }
func (m *CInputMouseMotionMsg) String() string { return proto.CompactTextString(m) }
func (*CInputMouseMotionMsg) ProtoMessage()    {}
func (*CInputMouseMotionMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_stream_d1a07900b36af23a, []int{23}
}
func (m *CInputMouseMotionMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CInputMouseMotionMsg.Unmarshal(m, b)
}
func (m *CInputMouseMotionMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CInputMouseMotionMsg.Marshal(b, m, deterministic)
}
func (dst *CInputMouseMotionMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CInputMouseMotionMsg.Merge(dst, src)
}
func (m *CInputMouseMotionMsg) XXX_Size() int {
	return xxx_messageInfo_CInputMouseMotionMsg.Size(m)
}
func (m *CInputMouseMotionMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_CInputMouseMotionMsg.DiscardUnknown(m)
}

var xxx_messageInfo_CInputMouseMotionMsg proto.InternalMessageInfo

func (m *CInputMouseMotionMsg) GetInputMark() uint32 {
	if m != nil && m.InputMark != nil {
		return *m.InputMark
	}
	return 0
}

func (m *CInputMouseMotionMsg) GetXNormalized() float32 {
	if m != nil && m.XNormalized != nil {
		return *m.XNormalized
	}
	return 0
}

func (m *CInputMouseMotionMsg) GetYNormalized() float32 {
	if m != nil && m.YNormalized != nil {
		return *m.YNormalized
	}
	return 0
}

func (m *CInputMouseMotionMsg) GetDx() int32 {
	if m != nil && m.Dx != nil {
		return *m.Dx
	}
	return 0
}

func (m *CInputMouseMotionMsg) GetDy() int32 {
	if m != nil && m.Dy != nil {
		return *m.Dy
	}
	return 0
}

type CInputMouseWheelMsg struct {
	InputMark            *uint32                     `protobuf:"varint,1,opt,name=input_mark,json=inputMark" json:"input_mark,omitempty"`
	Direction            *EStreamMouseWheelDirection `protobuf:"varint,2,req,name=direction,enum=EStreamMouseWheelDirection,def=120" json:"direction,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *CInputMouseWheelMsg) Reset()         { *m = CInputMouseWheelMsg{} }
func (m *CInputMouseWheelMsg) String() string { return proto.CompactTextString(m) }
func (*CInputMouseWheelMsg) ProtoMessage()    {}
func (*CInputMouseWheelMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_stream_d1a07900b36af23a, []int{24}
}
func (m *CInputMouseWheelMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CInputMouseWheelMsg.Unmarshal(m, b)
}
func (m *CInputMouseWheelMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CInputMouseWheelMsg.Marshal(b, m, deterministic)
}
func (dst *CInputMouseWheelMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CInputMouseWheelMsg.Merge(dst, src)
}
func (m *CInputMouseWheelMsg) XXX_Size() int {
	return xxx_messageInfo_CInputMouseWheelMsg.Size(m)
}
func (m *CInputMouseWheelMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_CInputMouseWheelMsg.DiscardUnknown(m)
}

var xxx_messageInfo_CInputMouseWheelMsg proto.InternalMessageInfo

const Default_CInputMouseWheelMsg_Direction EStreamMouseWheelDirection = EStreamMouseWheelDirection_k_EStreamMouseWheelUp

func (m *CInputMouseWheelMsg) GetInputMark() uint32 {
	if m != nil && m.InputMark != nil {
		return *m.InputMark
	}
	return 0
}

func (m *CInputMouseWheelMsg) GetDirection() EStreamMouseWheelDirection {
	if m != nil && m.Direction != nil {
		return *m.Direction
	}
	return Default_CInputMouseWheelMsg_Direction
}

type CInputMouseDownMsg struct {
	InputMark            *uint32             `protobuf:"varint,1,opt,name=input_mark,json=inputMark" json:"input_mark,omitempty"`
	Button               *EStreamMouseButton `protobuf:"varint,2,req,name=button,enum=EStreamMouseButton,def=1" json:"button,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *CInputMouseDownMsg) Reset()         { *m = CInputMouseDownMsg{} }
func (m *CInputMouseDownMsg) String() string { return proto.CompactTextString(m) }
func (*CInputMouseDownMsg) ProtoMessage()    {}
func (*CInputMouseDownMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_stream_d1a07900b36af23a, []int{25}
}
func (m *CInputMouseDownMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CInputMouseDownMsg.Unmarshal(m, b)
}
func (m *CInputMouseDownMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CInputMouseDownMsg.Marshal(b, m, deterministic)
}
func (dst *CInputMouseDownMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CInputMouseDownMsg.Merge(dst, src)
}
func (m *CInputMouseDownMsg) XXX_Size() int {
	return xxx_messageInfo_CInputMouseDownMsg.Size(m)
}
func (m *CInputMouseDownMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_CInputMouseDownMsg.DiscardUnknown(m)
}

var xxx_messageInfo_CInputMouseDownMsg proto.InternalMessageInfo

const Default_CInputMouseDownMsg_Button EStreamMouseButton = EStreamMouseButton_k_EStreamMouseButtonLeft

func (m *CInputMouseDownMsg) GetInputMark() uint32 {
	if m != nil && m.InputMark != nil {
		return *m.InputMark
	}
	return 0
}

func (m *CInputMouseDownMsg) GetButton() EStreamMouseButton {
	if m != nil && m.Button != nil {
		return *m.Button
	}
	return Default_CInputMouseDownMsg_Button
}

type CInputMouseUpMsg struct {
	InputMark            *uint32             `protobuf:"varint,1,opt,name=input_mark,json=inputMark" json:"input_mark,omitempty"`
	Button               *EStreamMouseButton `protobuf:"varint,2,req,name=button,enum=EStreamMouseButton,def=1" json:"button,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *CInputMouseUpMsg) Reset()         { *m = CInputMouseUpMsg{} }
func (m *CInputMouseUpMsg) String() string { return proto.CompactTextString(m) }
func (*CInputMouseUpMsg) ProtoMessage()    {}
func (*CInputMouseUpMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_stream_d1a07900b36af23a, []int{26}
}
func (m *CInputMouseUpMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CInputMouseUpMsg.Unmarshal(m, b)
}
func (m *CInputMouseUpMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CInputMouseUpMsg.Marshal(b, m, deterministic)
}
func (dst *CInputMouseUpMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CInputMouseUpMsg.Merge(dst, src)
}
func (m *CInputMouseUpMsg) XXX_Size() int {
	return xxx_messageInfo_CInputMouseUpMsg.Size(m)
}
func (m *CInputMouseUpMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_CInputMouseUpMsg.DiscardUnknown(m)
}

var xxx_messageInfo_CInputMouseUpMsg proto.InternalMessageInfo

const Default_CInputMouseUpMsg_Button EStreamMouseButton = EStreamMouseButton_k_EStreamMouseButtonLeft

func (m *CInputMouseUpMsg) GetInputMark() uint32 {
	if m != nil && m.InputMark != nil {
		return *m.InputMark
	}
	return 0
}

func (m *CInputMouseUpMsg) GetButton() EStreamMouseButton {
	if m != nil && m.Button != nil {
		return *m.Button
	}
	return Default_CInputMouseUpMsg_Button
}

type CInputKeyDownMsg struct {
	InputMark            *uint32  `protobuf:"varint,1,opt,name=input_mark,json=inputMark" json:"input_mark,omitempty"`
	Scancode             *uint32  `protobuf:"varint,2,req,name=scancode" json:"scancode,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CInputKeyDownMsg) Reset()         { *m = CInputKeyDownMsg{} }
func (m *CInputKeyDownMsg) String() string { return proto.CompactTextString(m) }
func (*CInputKeyDownMsg) ProtoMessage()    {}
func (*CInputKeyDownMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_stream_d1a07900b36af23a, []int{27}
}
func (m *CInputKeyDownMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CInputKeyDownMsg.Unmarshal(m, b)
}
func (m *CInputKeyDownMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CInputKeyDownMsg.Marshal(b, m, deterministic)
}
func (dst *CInputKeyDownMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CInputKeyDownMsg.Merge(dst, src)
}
func (m *CInputKeyDownMsg) XXX_Size() int {
	return xxx_messageInfo_CInputKeyDownMsg.Size(m)
}
func (m *CInputKeyDownMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_CInputKeyDownMsg.DiscardUnknown(m)
}

var xxx_messageInfo_CInputKeyDownMsg proto.InternalMessageInfo

func (m *CInputKeyDownMsg) GetInputMark() uint32 {
	if m != nil && m.InputMark != nil {
		return *m.InputMark
	}
	return 0
}

func (m *CInputKeyDownMsg) GetScancode() uint32 {
	if m != nil && m.Scancode != nil {
		return *m.Scancode
	}
	return 0
}

type CInputKeyUpMsg struct {
	InputMark            *uint32  `protobuf:"varint,1,opt,name=input_mark,json=inputMark" json:"input_mark,omitempty"`
	Scancode             *uint32  `protobuf:"varint,2,req,name=scancode" json:"scancode,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CInputKeyUpMsg) Reset()         { *m = CInputKeyUpMsg{} }
func (m *CInputKeyUpMsg) String() string { return proto.CompactTextString(m) }
func (*CInputKeyUpMsg) ProtoMessage()    {}
func (*CInputKeyUpMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_stream_d1a07900b36af23a, []int{28}
}
func (m *CInputKeyUpMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CInputKeyUpMsg.Unmarshal(m, b)
}
func (m *CInputKeyUpMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CInputKeyUpMsg.Marshal(b, m, deterministic)
}
func (dst *CInputKeyUpMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CInputKeyUpMsg.Merge(dst, src)
}
func (m *CInputKeyUpMsg) XXX_Size() int {
	return xxx_messageInfo_CInputKeyUpMsg.Size(m)
}
func (m *CInputKeyUpMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_CInputKeyUpMsg.DiscardUnknown(m)
}

var xxx_messageInfo_CInputKeyUpMsg proto.InternalMessageInfo

func (m *CInputKeyUpMsg) GetInputMark() uint32 {
	if m != nil && m.InputMark != nil {
		return *m.InputMark
	}
	return 0
}

func (m *CInputKeyUpMsg) GetScancode() uint32 {
	if m != nil && m.Scancode != nil {
		return *m.Scancode
	}
	return 0
}

type CInputTextMsg struct {
	InputMark            *uint32  `protobuf:"varint,1,opt,name=input_mark,json=inputMark" json:"input_mark,omitempty"`
	TextUtf8             *string  `protobuf:"bytes,2,req,name=text_utf8,json=textUtf8" json:"text_utf8,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CInputTextMsg) Reset()         { *m = CInputTextMsg{} }
func (m *CInputTextMsg) String() string { return proto.CompactTextString(m) }
func (*CInputTextMsg) ProtoMessage()    {}
func (*CInputTextMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_stream_d1a07900b36af23a, []int{29}
}
func (m *CInputTextMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CInputTextMsg.Unmarshal(m, b)
}
func (m *CInputTextMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CInputTextMsg.Marshal(b, m, deterministic)
}
func (dst *CInputTextMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CInputTextMsg.Merge(dst, src)
}
func (m *CInputTextMsg) XXX_Size() int {
	return xxx_messageInfo_CInputTextMsg.Size(m)
}
func (m *CInputTextMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_CInputTextMsg.DiscardUnknown(m)
}

var xxx_messageInfo_CInputTextMsg proto.InternalMessageInfo

func (m *CInputTextMsg) GetInputMark() uint32 {
	if m != nil && m.InputMark != nil {
		return *m.InputMark
	}
	return 0
}

func (m *CInputTextMsg) GetTextUtf8() string {
	if m != nil && m.TextUtf8 != nil {
		return *m.TextUtf8
	}
	return ""
}

type CSetTitleMsg struct {
	Text                 *string  `protobuf:"bytes,1,opt,name=text" json:"text,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CSetTitleMsg) Reset()         { *m = CSetTitleMsg{} }
func (m *CSetTitleMsg) String() string { return proto.CompactTextString(m) }
func (*CSetTitleMsg) ProtoMessage()    {}
func (*CSetTitleMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_stream_d1a07900b36af23a, []int{30}
}
func (m *CSetTitleMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CSetTitleMsg.Unmarshal(m, b)
}
func (m *CSetTitleMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CSetTitleMsg.Marshal(b, m, deterministic)
}
func (dst *CSetTitleMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CSetTitleMsg.Merge(dst, src)
}
func (m *CSetTitleMsg) XXX_Size() int {
	return xxx_messageInfo_CSetTitleMsg.Size(m)
}
func (m *CSetTitleMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_CSetTitleMsg.DiscardUnknown(m)
}

var xxx_messageInfo_CSetTitleMsg proto.InternalMessageInfo

func (m *CSetTitleMsg) GetText() string {
	if m != nil && m.Text != nil {
		return *m.Text
	}
	return ""
}

type CSetIconMsg struct {
	Width                *int32   `protobuf:"varint,1,opt,name=width" json:"width,omitempty"`
	Height               *int32   `protobuf:"varint,2,opt,name=height" json:"height,omitempty"`
	Image                []byte   `protobuf:"bytes,3,opt,name=image" json:"image,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CSetIconMsg) Reset()         { *m = CSetIconMsg{} }
func (m *CSetIconMsg) String() string { return proto.CompactTextString(m) }
func (*CSetIconMsg) ProtoMessage()    {}
func (*CSetIconMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_stream_d1a07900b36af23a, []int{31}
}
func (m *CSetIconMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CSetIconMsg.Unmarshal(m, b)
}
func (m *CSetIconMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CSetIconMsg.Marshal(b, m, deterministic)
}
func (dst *CSetIconMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CSetIconMsg.Merge(dst, src)
}
func (m *CSetIconMsg) XXX_Size() int {
	return xxx_messageInfo_CSetIconMsg.Size(m)
}
func (m *CSetIconMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_CSetIconMsg.DiscardUnknown(m)
}

var xxx_messageInfo_CSetIconMsg proto.InternalMessageInfo

func (m *CSetIconMsg) GetWidth() int32 {
	if m != nil && m.Width != nil {
		return *m.Width
	}
	return 0
}

func (m *CSetIconMsg) GetHeight() int32 {
	if m != nil && m.Height != nil {
		return *m.Height
	}
	return 0
}

func (m *CSetIconMsg) GetImage() []byte {
	if m != nil {
		return m.Image
	}
	return nil
}

type CShowCursorMsg struct {
	XNormalized          *float32 `protobuf:"fixed32,1,opt,name=x_normalized,json=xNormalized" json:"x_normalized,omitempty"`
	YNormalized          *float32 `protobuf:"fixed32,2,opt,name=y_normalized,json=yNormalized" json:"y_normalized,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CShowCursorMsg) Reset()         { *m = CShowCursorMsg{} }
func (m *CShowCursorMsg) String() string { return proto.CompactTextString(m) }
func (*CShowCursorMsg) ProtoMessage()    {}
func (*CShowCursorMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_stream_d1a07900b36af23a, []int{32}
}
func (m *CShowCursorMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CShowCursorMsg.Unmarshal(m, b)
}
func (m *CShowCursorMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CShowCursorMsg.Marshal(b, m, deterministic)
}
func (dst *CShowCursorMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CShowCursorMsg.Merge(dst, src)
}
func (m *CShowCursorMsg) XXX_Size() int {
	return xxx_messageInfo_CShowCursorMsg.Size(m)
}
func (m *CShowCursorMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_CShowCursorMsg.DiscardUnknown(m)
}

var xxx_messageInfo_CShowCursorMsg proto.InternalMessageInfo

func (m *CShowCursorMsg) GetXNormalized() float32 {
	if m != nil && m.XNormalized != nil {
		return *m.XNormalized
	}
	return 0
}

func (m *CShowCursorMsg) GetYNormalized() float32 {
	if m != nil && m.YNormalized != nil {
		return *m.YNormalized
	}
	return 0
}

type CHideCursorMsg struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CHideCursorMsg) Reset()         { *m = CHideCursorMsg{} }
func (m *CHideCursorMsg) String() string { return proto.CompactTextString(m) }
func (*CHideCursorMsg) ProtoMessage()    {}
func (*CHideCursorMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_stream_d1a07900b36af23a, []int{33}
}
func (m *CHideCursorMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CHideCursorMsg.Unmarshal(m, b)
}
func (m *CHideCursorMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CHideCursorMsg.Marshal(b, m, deterministic)
}
func (dst *CHideCursorMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CHideCursorMsg.Merge(dst, src)
}
func (m *CHideCursorMsg) XXX_Size() int {
	return xxx_messageInfo_CHideCursorMsg.Size(m)
}
func (m *CHideCursorMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_CHideCursorMsg.DiscardUnknown(m)
}

var xxx_messageInfo_CHideCursorMsg proto.InternalMessageInfo

type CSetCursorMsg struct {
	CursorId             *uint64  `protobuf:"varint,1,req,name=cursor_id,json=cursorId" json:"cursor_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CSetCursorMsg) Reset()         { *m = CSetCursorMsg{} }
func (m *CSetCursorMsg) String() string { return proto.CompactTextString(m) }
func (*CSetCursorMsg) ProtoMessage()    {}
func (*CSetCursorMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_stream_d1a07900b36af23a, []int{34}
}
func (m *CSetCursorMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CSetCursorMsg.Unmarshal(m, b)
}
func (m *CSetCursorMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CSetCursorMsg.Marshal(b, m, deterministic)
}
func (dst *CSetCursorMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CSetCursorMsg.Merge(dst, src)
}
func (m *CSetCursorMsg) XXX_Size() int {
	return xxx_messageInfo_CSetCursorMsg.Size(m)
}
func (m *CSetCursorMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_CSetCursorMsg.DiscardUnknown(m)
}

var xxx_messageInfo_CSetCursorMsg proto.InternalMessageInfo

func (m *CSetCursorMsg) GetCursorId() uint64 {
	if m != nil && m.CursorId != nil {
		return *m.CursorId
	}
	return 0
}

type CGetCursorImageMsg struct {
	CursorId             *uint64  `protobuf:"varint,1,req,name=cursor_id,json=cursorId" json:"cursor_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CGetCursorImageMsg) Reset()         { *m = CGetCursorImageMsg{} }
func (m *CGetCursorImageMsg) String() string { return proto.CompactTextString(m) }
func (*CGetCursorImageMsg) ProtoMessage()    {}
func (*CGetCursorImageMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_stream_d1a07900b36af23a, []int{35}
}
func (m *CGetCursorImageMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CGetCursorImageMsg.Unmarshal(m, b)
}
func (m *CGetCursorImageMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CGetCursorImageMsg.Marshal(b, m, deterministic)
}
func (dst *CGetCursorImageMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CGetCursorImageMsg.Merge(dst, src)
}
func (m *CGetCursorImageMsg) XXX_Size() int {
	return xxx_messageInfo_CGetCursorImageMsg.Size(m)
}
func (m *CGetCursorImageMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_CGetCursorImageMsg.DiscardUnknown(m)
}

var xxx_messageInfo_CGetCursorImageMsg proto.InternalMessageInfo

func (m *CGetCursorImageMsg) GetCursorId() uint64 {
	if m != nil && m.CursorId != nil {
		return *m.CursorId
	}
	return 0
}

type CSetCursorImageMsg struct {
	CursorId             *uint64  `protobuf:"varint,1,req,name=cursor_id,json=cursorId" json:"cursor_id,omitempty"`
	Width                *int32   `protobuf:"varint,2,opt,name=width" json:"width,omitempty"`
	Height               *int32   `protobuf:"varint,3,opt,name=height" json:"height,omitempty"`
	HotX                 *int32   `protobuf:"varint,4,opt,name=hot_x,json=hotX" json:"hot_x,omitempty"`
	HotY                 *int32   `protobuf:"varint,5,opt,name=hot_y,json=hotY" json:"hot_y,omitempty"`
	Image                []byte   `protobuf:"bytes,6,opt,name=image" json:"image,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CSetCursorImageMsg) Reset()         { *m = CSetCursorImageMsg{} }
func (m *CSetCursorImageMsg) String() string { return proto.CompactTextString(m) }
func (*CSetCursorImageMsg) ProtoMessage()    {}
func (*CSetCursorImageMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_stream_d1a07900b36af23a, []int{36}
}
func (m *CSetCursorImageMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CSetCursorImageMsg.Unmarshal(m, b)
}
func (m *CSetCursorImageMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CSetCursorImageMsg.Marshal(b, m, deterministic)
}
func (dst *CSetCursorImageMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CSetCursorImageMsg.Merge(dst, src)
}
func (m *CSetCursorImageMsg) XXX_Size() int {
	return xxx_messageInfo_CSetCursorImageMsg.Size(m)
}
func (m *CSetCursorImageMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_CSetCursorImageMsg.DiscardUnknown(m)
}

var xxx_messageInfo_CSetCursorImageMsg proto.InternalMessageInfo

func (m *CSetCursorImageMsg) GetCursorId() uint64 {
	if m != nil && m.CursorId != nil {
		return *m.CursorId
	}
	return 0
}

func (m *CSetCursorImageMsg) GetWidth() int32 {
	if m != nil && m.Width != nil {
		return *m.Width
	}
	return 0
}

func (m *CSetCursorImageMsg) GetHeight() int32 {
	if m != nil && m.Height != nil {
		return *m.Height
	}
	return 0
}

func (m *CSetCursorImageMsg) GetHotX() int32 {
	if m != nil && m.HotX != nil {
		return *m.HotX
	}
	return 0
}

func (m *CSetCursorImageMsg) GetHotY() int32 {
	if m != nil && m.HotY != nil {
		return *m.HotY
	}
	return 0
}

func (m *CSetCursorImageMsg) GetImage() []byte {
	if m != nil {
		return m.Image
	}
	return nil
}

type CVideoDecoderInfoMsg struct {
	Info                 *string  `protobuf:"bytes,1,opt,name=info" json:"info,omitempty"`
	Threads              *int32   `protobuf:"varint,2,opt,name=threads" json:"threads,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CVideoDecoderInfoMsg) Reset()         { *m = CVideoDecoderInfoMsg{} }
func (m *CVideoDecoderInfoMsg) String() string { return proto.CompactTextString(m) }
func (*CVideoDecoderInfoMsg) ProtoMessage()    {}
func (*CVideoDecoderInfoMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_stream_d1a07900b36af23a, []int{37}
}
func (m *CVideoDecoderInfoMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CVideoDecoderInfoMsg.Unmarshal(m, b)
}
func (m *CVideoDecoderInfoMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CVideoDecoderInfoMsg.Marshal(b, m, deterministic)
}
func (dst *CVideoDecoderInfoMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CVideoDecoderInfoMsg.Merge(dst, src)
}
func (m *CVideoDecoderInfoMsg) XXX_Size() int {
	return xxx_messageInfo_CVideoDecoderInfoMsg.Size(m)
}
func (m *CVideoDecoderInfoMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_CVideoDecoderInfoMsg.DiscardUnknown(m)
}

var xxx_messageInfo_CVideoDecoderInfoMsg proto.InternalMessageInfo

func (m *CVideoDecoderInfoMsg) GetInfo() string {
	if m != nil && m.Info != nil {
		return *m.Info
	}
	return ""
}

func (m *CVideoDecoderInfoMsg) GetThreads() int32 {
	if m != nil && m.Threads != nil {
		return *m.Threads
	}
	return 0
}

type CVideoEncoderInfoMsg struct {
	Info                 *string  `protobuf:"bytes,1,opt,name=info" json:"info,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CVideoEncoderInfoMsg) Reset()         { *m = CVideoEncoderInfoMsg{} }
func (m *CVideoEncoderInfoMsg) String() string { return proto.CompactTextString(m) }
func (*CVideoEncoderInfoMsg) ProtoMessage()    {}
func (*CVideoEncoderInfoMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_stream_d1a07900b36af23a, []int{38}
}
func (m *CVideoEncoderInfoMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CVideoEncoderInfoMsg.Unmarshal(m, b)
}
func (m *CVideoEncoderInfoMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CVideoEncoderInfoMsg.Marshal(b, m, deterministic)
}
func (dst *CVideoEncoderInfoMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CVideoEncoderInfoMsg.Merge(dst, src)
}
func (m *CVideoEncoderInfoMsg) XXX_Size() int {
	return xxx_messageInfo_CVideoEncoderInfoMsg.Size(m)
}
func (m *CVideoEncoderInfoMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_CVideoEncoderInfoMsg.DiscardUnknown(m)
}

var xxx_messageInfo_CVideoEncoderInfoMsg proto.InternalMessageInfo

func (m *CVideoEncoderInfoMsg) GetInfo() string {
	if m != nil && m.Info != nil {
		return *m.Info
	}
	return ""
}

type CQuitRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CQuitRequest) Reset()         { *m = CQuitRequest{} }
func (m *CQuitRequest) String() string { return proto.CompactTextString(m) }
func (*CQuitRequest) ProtoMessage()    {}
func (*CQuitRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_stream_d1a07900b36af23a, []int{39}
}
func (m *CQuitRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CQuitRequest.Unmarshal(m, b)
}
func (m *CQuitRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CQuitRequest.Marshal(b, m, deterministic)
}
func (dst *CQuitRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CQuitRequest.Merge(dst, src)
}
func (m *CQuitRequest) XXX_Size() int {
	return xxx_messageInfo_CQuitRequest.Size(m)
}
func (m *CQuitRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CQuitRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CQuitRequest proto.InternalMessageInfo

type CDeleteCursorMsg struct {
	CursorId             *uint64  `protobuf:"varint,1,req,name=cursor_id,json=cursorId" json:"cursor_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CDeleteCursorMsg) Reset()         { *m = CDeleteCursorMsg{} }
func (m *CDeleteCursorMsg) String() string { return proto.CompactTextString(m) }
func (*CDeleteCursorMsg) ProtoMessage()    {}
func (*CDeleteCursorMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_stream_d1a07900b36af23a, []int{40}
}
func (m *CDeleteCursorMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CDeleteCursorMsg.Unmarshal(m, b)
}
func (m *CDeleteCursorMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CDeleteCursorMsg.Marshal(b, m, deterministic)
}
func (dst *CDeleteCursorMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CDeleteCursorMsg.Merge(dst, src)
}
func (m *CDeleteCursorMsg) XXX_Size() int {
	return xxx_messageInfo_CDeleteCursorMsg.Size(m)
}
func (m *CDeleteCursorMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_CDeleteCursorMsg.DiscardUnknown(m)
}

var xxx_messageInfo_CDeleteCursorMsg proto.InternalMessageInfo

func (m *CDeleteCursorMsg) GetCursorId() uint64 {
	if m != nil && m.CursorId != nil {
		return *m.CursorId
	}
	return 0
}

type CSetStreamingClientConfig struct {
	Config               *CStreamingClientConfig `protobuf:"bytes,1,req,name=config" json:"config,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *CSetStreamingClientConfig) Reset()         { *m = CSetStreamingClientConfig{} }
func (m *CSetStreamingClientConfig) String() string { return proto.CompactTextString(m) }
func (*CSetStreamingClientConfig) ProtoMessage()    {}
func (*CSetStreamingClientConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_stream_d1a07900b36af23a, []int{41}
}
func (m *CSetStreamingClientConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CSetStreamingClientConfig.Unmarshal(m, b)
}
func (m *CSetStreamingClientConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CSetStreamingClientConfig.Marshal(b, m, deterministic)
}
func (dst *CSetStreamingClientConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CSetStreamingClientConfig.Merge(dst, src)
}
func (m *CSetStreamingClientConfig) XXX_Size() int {
	return xxx_messageInfo_CSetStreamingClientConfig.Size(m)
}
func (m *CSetStreamingClientConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_CSetStreamingClientConfig.DiscardUnknown(m)
}

var xxx_messageInfo_CSetStreamingClientConfig proto.InternalMessageInfo

func (m *CSetStreamingClientConfig) GetConfig() *CStreamingClientConfig {
	if m != nil {
		return m.Config
	}
	return nil
}

type CSetQoSMsg struct {
	UseQos               *bool    `protobuf:"varint,1,req,name=use_qos,json=useQos" json:"use_qos,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CSetQoSMsg) Reset()         { *m = CSetQoSMsg{} }
func (m *CSetQoSMsg) String() string { return proto.CompactTextString(m) }
func (*CSetQoSMsg) ProtoMessage()    {}
func (*CSetQoSMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_stream_d1a07900b36af23a, []int{42}
}
func (m *CSetQoSMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CSetQoSMsg.Unmarshal(m, b)
}
func (m *CSetQoSMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CSetQoSMsg.Marshal(b, m, deterministic)
}
func (dst *CSetQoSMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CSetQoSMsg.Merge(dst, src)
}
func (m *CSetQoSMsg) XXX_Size() int {
	return xxx_messageInfo_CSetQoSMsg.Size(m)
}
func (m *CSetQoSMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_CSetQoSMsg.DiscardUnknown(m)
}

var xxx_messageInfo_CSetQoSMsg proto.InternalMessageInfo

func (m *CSetQoSMsg) GetUseQos() bool {
	if m != nil && m.UseQos != nil {
		return *m.UseQos
	}
	return false
}

type CSetTargetFramerateMsg struct {
	Framerate            *uint32  `protobuf:"varint,1,req,name=framerate" json:"framerate,omitempty"`
	Reasons              *uint32  `protobuf:"varint,2,opt,name=reasons" json:"reasons,omitempty"`
	FramerateNumerator   *uint32  `protobuf:"varint,3,opt,name=framerate_numerator,json=framerateNumerator" json:"framerate_numerator,omitempty"`
	FramerateDenominator *uint32  `protobuf:"varint,4,opt,name=framerate_denominator,json=framerateDenominator" json:"framerate_denominator,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CSetTargetFramerateMsg) Reset()         { *m = CSetTargetFramerateMsg{} }
func (m *CSetTargetFramerateMsg) String() string { return proto.CompactTextString(m) }
func (*CSetTargetFramerateMsg) ProtoMessage()    {}
func (*CSetTargetFramerateMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_stream_d1a07900b36af23a, []int{43}
}
func (m *CSetTargetFramerateMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CSetTargetFramerateMsg.Unmarshal(m, b)
}
func (m *CSetTargetFramerateMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CSetTargetFramerateMsg.Marshal(b, m, deterministic)
}
func (dst *CSetTargetFramerateMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CSetTargetFramerateMsg.Merge(dst, src)
}
func (m *CSetTargetFramerateMsg) XXX_Size() int {
	return xxx_messageInfo_CSetTargetFramerateMsg.Size(m)
}
func (m *CSetTargetFramerateMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_CSetTargetFramerateMsg.DiscardUnknown(m)
}

var xxx_messageInfo_CSetTargetFramerateMsg proto.InternalMessageInfo

func (m *CSetTargetFramerateMsg) GetFramerate() uint32 {
	if m != nil && m.Framerate != nil {
		return *m.Framerate
	}
	return 0
}

func (m *CSetTargetFramerateMsg) GetReasons() uint32 {
	if m != nil && m.Reasons != nil {
		return *m.Reasons
	}
	return 0
}

func (m *CSetTargetFramerateMsg) GetFramerateNumerator() uint32 {
	if m != nil && m.FramerateNumerator != nil {
		return *m.FramerateNumerator
	}
	return 0
}

func (m *CSetTargetFramerateMsg) GetFramerateDenominator() uint32 {
	if m != nil && m.FramerateDenominator != nil {
		return *m.FramerateDenominator
	}
	return 0
}

type CSetTargetBitrateMsg struct {
	Bitrate              *int32   `protobuf:"varint,1,req,name=bitrate" json:"bitrate,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CSetTargetBitrateMsg) Reset()         { *m = CSetTargetBitrateMsg{} }
func (m *CSetTargetBitrateMsg) String() string { return proto.CompactTextString(m) }
func (*CSetTargetBitrateMsg) ProtoMessage()    {}
func (*CSetTargetBitrateMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_stream_d1a07900b36af23a, []int{44}
}
func (m *CSetTargetBitrateMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CSetTargetBitrateMsg.Unmarshal(m, b)
}
func (m *CSetTargetBitrateMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CSetTargetBitrateMsg.Marshal(b, m, deterministic)
}
func (dst *CSetTargetBitrateMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CSetTargetBitrateMsg.Merge(dst, src)
}
func (m *CSetTargetBitrateMsg) XXX_Size() int {
	return xxx_messageInfo_CSetTargetBitrateMsg.Size(m)
}
func (m *CSetTargetBitrateMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_CSetTargetBitrateMsg.DiscardUnknown(m)
}

var xxx_messageInfo_CSetTargetBitrateMsg proto.InternalMessageInfo

func (m *CSetTargetBitrateMsg) GetBitrate() int32 {
	if m != nil && m.Bitrate != nil {
		return *m.Bitrate
	}
	return 0
}

type COverlayEnabledMsg struct {
	Enabled              *bool    `protobuf:"varint,1,req,name=enabled" json:"enabled,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *COverlayEnabledMsg) Reset()         { *m = COverlayEnabledMsg{} }
func (m *COverlayEnabledMsg) String() string { return proto.CompactTextString(m) }
func (*COverlayEnabledMsg) ProtoMessage()    {}
func (*COverlayEnabledMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_stream_d1a07900b36af23a, []int{45}
}
func (m *COverlayEnabledMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_COverlayEnabledMsg.Unmarshal(m, b)
}
func (m *COverlayEnabledMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_COverlayEnabledMsg.Marshal(b, m, deterministic)
}
func (dst *COverlayEnabledMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_COverlayEnabledMsg.Merge(dst, src)
}
func (m *COverlayEnabledMsg) XXX_Size() int {
	return xxx_messageInfo_COverlayEnabledMsg.Size(m)
}
func (m *COverlayEnabledMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_COverlayEnabledMsg.DiscardUnknown(m)
}

var xxx_messageInfo_COverlayEnabledMsg proto.InternalMessageInfo

func (m *COverlayEnabledMsg) GetEnabled() bool {
	if m != nil && m.Enabled != nil {
		return *m.Enabled
	}
	return false
}

type CSetGammaRampMsg struct {
	GammaRamp            []byte   `protobuf:"bytes,1,opt,name=gamma_ramp,json=gammaRamp" json:"gamma_ramp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CSetGammaRampMsg) Reset()         { *m = CSetGammaRampMsg{} }
func (m *CSetGammaRampMsg) String() string { return proto.CompactTextString(m) }
func (*CSetGammaRampMsg) ProtoMessage()    {}
func (*CSetGammaRampMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_stream_d1a07900b36af23a, []int{46}
}
func (m *CSetGammaRampMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CSetGammaRampMsg.Unmarshal(m, b)
}
func (m *CSetGammaRampMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CSetGammaRampMsg.Marshal(b, m, deterministic)
}
func (dst *CSetGammaRampMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CSetGammaRampMsg.Merge(dst, src)
}
func (m *CSetGammaRampMsg) XXX_Size() int {
	return xxx_messageInfo_CSetGammaRampMsg.Size(m)
}
func (m *CSetGammaRampMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_CSetGammaRampMsg.DiscardUnknown(m)
}

var xxx_messageInfo_CSetGammaRampMsg proto.InternalMessageInfo

func (m *CSetGammaRampMsg) GetGammaRamp() []byte {
	if m != nil {
		return m.GammaRamp
	}
	return nil
}

type CSetActivityMsg struct {
	Activity             *EStreamActivity `protobuf:"varint,1,opt,name=activity,enum=EStreamActivity,def=1" json:"activity,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *CSetActivityMsg) Reset()         { *m = CSetActivityMsg{} }
func (m *CSetActivityMsg) String() string { return proto.CompactTextString(m) }
func (*CSetActivityMsg) ProtoMessage()    {}
func (*CSetActivityMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_stream_d1a07900b36af23a, []int{47}
}
func (m *CSetActivityMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CSetActivityMsg.Unmarshal(m, b)
}
func (m *CSetActivityMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CSetActivityMsg.Marshal(b, m, deterministic)
}
func (dst *CSetActivityMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CSetActivityMsg.Merge(dst, src)
}
func (m *CSetActivityMsg) XXX_Size() int {
	return xxx_messageInfo_CSetActivityMsg.Size(m)
}
func (m *CSetActivityMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_CSetActivityMsg.DiscardUnknown(m)
}

var xxx_messageInfo_CSetActivityMsg proto.InternalMessageInfo

const Default_CSetActivityMsg_Activity EStreamActivity = EStreamActivity_k_EStreamActivityIdle

func (m *CSetActivityMsg) GetActivity() EStreamActivity {
	if m != nil && m.Activity != nil {
		return *m.Activity
	}
	return Default_CSetActivityMsg_Activity
}

type CSystemSuspendMsg struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CSystemSuspendMsg) Reset()         { *m = CSystemSuspendMsg{} }
func (m *CSystemSuspendMsg) String() string { return proto.CompactTextString(m) }
func (*CSystemSuspendMsg) ProtoMessage()    {}
func (*CSystemSuspendMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_stream_d1a07900b36af23a, []int{48}
}
func (m *CSystemSuspendMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CSystemSuspendMsg.Unmarshal(m, b)
}
func (m *CSystemSuspendMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CSystemSuspendMsg.Marshal(b, m, deterministic)
}
func (dst *CSystemSuspendMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CSystemSuspendMsg.Merge(dst, src)
}
func (m *CSystemSuspendMsg) XXX_Size() int {
	return xxx_messageInfo_CSystemSuspendMsg.Size(m)
}
func (m *CSystemSuspendMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_CSystemSuspendMsg.DiscardUnknown(m)
}

var xxx_messageInfo_CSystemSuspendMsg proto.InternalMessageInfo

type CVirtualHereRequestMsg struct {
	Hostname             *string  `protobuf:"bytes,1,opt,name=hostname" json:"hostname,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CVirtualHereRequestMsg) Reset()         { *m = CVirtualHereRequestMsg{} }
func (m *CVirtualHereRequestMsg) String() string { return proto.CompactTextString(m) }
func (*CVirtualHereRequestMsg) ProtoMessage()    {}
func (*CVirtualHereRequestMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_stream_d1a07900b36af23a, []int{49}
}
func (m *CVirtualHereRequestMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CVirtualHereRequestMsg.Unmarshal(m, b)
}
func (m *CVirtualHereRequestMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CVirtualHereRequestMsg.Marshal(b, m, deterministic)
}
func (dst *CVirtualHereRequestMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CVirtualHereRequestMsg.Merge(dst, src)
}
func (m *CVirtualHereRequestMsg) XXX_Size() int {
	return xxx_messageInfo_CVirtualHereRequestMsg.Size(m)
}
func (m *CVirtualHereRequestMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_CVirtualHereRequestMsg.DiscardUnknown(m)
}

var xxx_messageInfo_CVirtualHereRequestMsg proto.InternalMessageInfo

func (m *CVirtualHereRequestMsg) GetHostname() string {
	if m != nil && m.Hostname != nil {
		return *m.Hostname
	}
	return ""
}

type CVirtualHereReadyMsg struct {
	LicensedDeviceCount  *uint32  `protobuf:"varint,1,opt,name=licensed_device_count,json=licensedDeviceCount" json:"licensed_device_count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CVirtualHereReadyMsg) Reset()         { *m = CVirtualHereReadyMsg{} }
func (m *CVirtualHereReadyMsg) String() string { return proto.CompactTextString(m) }
func (*CVirtualHereReadyMsg) ProtoMessage()    {}
func (*CVirtualHereReadyMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_stream_d1a07900b36af23a, []int{50}
}
func (m *CVirtualHereReadyMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CVirtualHereReadyMsg.Unmarshal(m, b)
}
func (m *CVirtualHereReadyMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CVirtualHereReadyMsg.Marshal(b, m, deterministic)
}
func (dst *CVirtualHereReadyMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CVirtualHereReadyMsg.Merge(dst, src)
}
func (m *CVirtualHereReadyMsg) XXX_Size() int {
	return xxx_messageInfo_CVirtualHereReadyMsg.Size(m)
}
func (m *CVirtualHereReadyMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_CVirtualHereReadyMsg.DiscardUnknown(m)
}

var xxx_messageInfo_CVirtualHereReadyMsg proto.InternalMessageInfo

func (m *CVirtualHereReadyMsg) GetLicensedDeviceCount() uint32 {
	if m != nil && m.LicensedDeviceCount != nil {
		return *m.LicensedDeviceCount
	}
	return 0
}

type CVirtualHereShareDeviceMsg struct {
	DeviceAddress        *string  `protobuf:"bytes,1,opt,name=device_address,json=deviceAddress" json:"device_address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CVirtualHereShareDeviceMsg) Reset()         { *m = CVirtualHereShareDeviceMsg{} }
func (m *CVirtualHereShareDeviceMsg) String() string { return proto.CompactTextString(m) }
func (*CVirtualHereShareDeviceMsg) ProtoMessage()    {}
func (*CVirtualHereShareDeviceMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_stream_d1a07900b36af23a, []int{51}
}
func (m *CVirtualHereShareDeviceMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CVirtualHereShareDeviceMsg.Unmarshal(m, b)
}
func (m *CVirtualHereShareDeviceMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CVirtualHereShareDeviceMsg.Marshal(b, m, deterministic)
}
func (dst *CVirtualHereShareDeviceMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CVirtualHereShareDeviceMsg.Merge(dst, src)
}
func (m *CVirtualHereShareDeviceMsg) XXX_Size() int {
	return xxx_messageInfo_CVirtualHereShareDeviceMsg.Size(m)
}
func (m *CVirtualHereShareDeviceMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_CVirtualHereShareDeviceMsg.DiscardUnknown(m)
}

var xxx_messageInfo_CVirtualHereShareDeviceMsg proto.InternalMessageInfo

func (m *CVirtualHereShareDeviceMsg) GetDeviceAddress() string {
	if m != nil && m.DeviceAddress != nil {
		return *m.DeviceAddress
	}
	return ""
}

type CSetSpectatorModeMsg struct {
	Enabled              *bool    `protobuf:"varint,1,opt,name=enabled" json:"enabled,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CSetSpectatorModeMsg) Reset()         { *m = CSetSpectatorModeMsg{} }
func (m *CSetSpectatorModeMsg) String() string { return proto.CompactTextString(m) }
func (*CSetSpectatorModeMsg) ProtoMessage()    {}
func (*CSetSpectatorModeMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_stream_d1a07900b36af23a, []int{52}
}
func (m *CSetSpectatorModeMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CSetSpectatorModeMsg.Unmarshal(m, b)
}
func (m *CSetSpectatorModeMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CSetSpectatorModeMsg.Marshal(b, m, deterministic)
}
func (dst *CSetSpectatorModeMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CSetSpectatorModeMsg.Merge(dst, src)
}
func (m *CSetSpectatorModeMsg) XXX_Size() int {
	return xxx_messageInfo_CSetSpectatorModeMsg.Size(m)
}
func (m *CSetSpectatorModeMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_CSetSpectatorModeMsg.DiscardUnknown(m)
}

var xxx_messageInfo_CSetSpectatorModeMsg proto.InternalMessageInfo

func (m *CSetSpectatorModeMsg) GetEnabled() bool {
	if m != nil && m.Enabled != nil {
		return *m.Enabled
	}
	return false
}

type CRemoteHIDMsg struct {
	Data                 []byte   `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CRemoteHIDMsg) Reset()         { *m = CRemoteHIDMsg{} }
func (m *CRemoteHIDMsg) String() string { return proto.CompactTextString(m) }
func (*CRemoteHIDMsg) ProtoMessage()    {}
func (*CRemoteHIDMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_stream_d1a07900b36af23a, []int{53}
}
func (m *CRemoteHIDMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CRemoteHIDMsg.Unmarshal(m, b)
}
func (m *CRemoteHIDMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CRemoteHIDMsg.Marshal(b, m, deterministic)
}
func (dst *CRemoteHIDMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CRemoteHIDMsg.Merge(dst, src)
}
func (m *CRemoteHIDMsg) XXX_Size() int {
	return xxx_messageInfo_CRemoteHIDMsg.Size(m)
}
func (m *CRemoteHIDMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_CRemoteHIDMsg.DiscardUnknown(m)
}

var xxx_messageInfo_CRemoteHIDMsg proto.InternalMessageInfo

func (m *CRemoteHIDMsg) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type CStreamDataLostMsg struct {
	Packets              []uint32 `protobuf:"varint,1,rep,name=packets" json:"packets,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CStreamDataLostMsg) Reset()         { *m = CStreamDataLostMsg{} }
func (m *CStreamDataLostMsg) String() string { return proto.CompactTextString(m) }
func (*CStreamDataLostMsg) ProtoMessage()    {}
func (*CStreamDataLostMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_stream_d1a07900b36af23a, []int{54}
}
func (m *CStreamDataLostMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CStreamDataLostMsg.Unmarshal(m, b)
}
func (m *CStreamDataLostMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CStreamDataLostMsg.Marshal(b, m, deterministic)
}
func (dst *CStreamDataLostMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CStreamDataLostMsg.Merge(dst, src)
}
func (m *CStreamDataLostMsg) XXX_Size() int {
	return xxx_messageInfo_CStreamDataLostMsg.Size(m)
}
func (m *CStreamDataLostMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_CStreamDataLostMsg.DiscardUnknown(m)
}

var xxx_messageInfo_CStreamDataLostMsg proto.InternalMessageInfo

func (m *CStreamDataLostMsg) GetPackets() []uint32 {
	if m != nil {
		return m.Packets
	}
	return nil
}

type CAudioFormat struct {
	Format               *EAudioFormat `protobuf:"varint,1,req,name=format,enum=EAudioFormat,def=0" json:"format,omitempty"`
	Frequency            *uint32       `protobuf:"varint,2,opt,name=frequency" json:"frequency,omitempty"`
	Channels             *uint32       `protobuf:"varint,3,opt,name=channels" json:"channels,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *CAudioFormat) Reset()         { *m = CAudioFormat{} }
func (m *CAudioFormat) String() string { return proto.CompactTextString(m) }
func (*CAudioFormat) ProtoMessage()    {}
func (*CAudioFormat) Descriptor() ([]byte, []int) {
	return fileDescriptor_stream_d1a07900b36af23a, []int{55}
}
func (m *CAudioFormat) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CAudioFormat.Unmarshal(m, b)
}
func (m *CAudioFormat) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CAudioFormat.Marshal(b, m, deterministic)
}
func (dst *CAudioFormat) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CAudioFormat.Merge(dst, src)
}
func (m *CAudioFormat) XXX_Size() int {
	return xxx_messageInfo_CAudioFormat.Size(m)
}
func (m *CAudioFormat) XXX_DiscardUnknown() {
	xxx_messageInfo_CAudioFormat.DiscardUnknown(m)
}

var xxx_messageInfo_CAudioFormat proto.InternalMessageInfo

const Default_CAudioFormat_Format EAudioFormat = EAudioFormat_k_EAudioFormatNone

func (m *CAudioFormat) GetFormat() EAudioFormat {
	if m != nil && m.Format != nil {
		return *m.Format
	}
	return Default_CAudioFormat_Format
}

func (m *CAudioFormat) GetFrequency() uint32 {
	if m != nil && m.Frequency != nil {
		return *m.Frequency
	}
	return 0
}

func (m *CAudioFormat) GetChannels() uint32 {
	if m != nil && m.Channels != nil {
		return *m.Channels
	}
	return 0
}

type CVideoFormat struct {
	Format               *EVideoFormat `protobuf:"varint,1,req,name=format,enum=EVideoFormat,def=0" json:"format,omitempty"`
	Width                *uint32       `protobuf:"varint,2,opt,name=width" json:"width,omitempty"`
	Height               *uint32       `protobuf:"varint,3,opt,name=height" json:"height,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *CVideoFormat) Reset()         { *m = CVideoFormat{} }
func (m *CVideoFormat) String() string { return proto.CompactTextString(m) }
func (*CVideoFormat) ProtoMessage()    {}
func (*CVideoFormat) Descriptor() ([]byte, []int) {
	return fileDescriptor_stream_d1a07900b36af23a, []int{56}
}
func (m *CVideoFormat) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CVideoFormat.Unmarshal(m, b)
}
func (m *CVideoFormat) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CVideoFormat.Marshal(b, m, deterministic)
}
func (dst *CVideoFormat) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CVideoFormat.Merge(dst, src)
}
func (m *CVideoFormat) XXX_Size() int {
	return xxx_messageInfo_CVideoFormat.Size(m)
}
func (m *CVideoFormat) XXX_DiscardUnknown() {
	xxx_messageInfo_CVideoFormat.DiscardUnknown(m)
}

var xxx_messageInfo_CVideoFormat proto.InternalMessageInfo

const Default_CVideoFormat_Format EVideoFormat = EVideoFormat_k_EVideoFormatNone

func (m *CVideoFormat) GetFormat() EVideoFormat {
	if m != nil && m.Format != nil {
		return *m.Format
	}
	return Default_CVideoFormat_Format
}

func (m *CVideoFormat) GetWidth() uint32 {
	if m != nil && m.Width != nil {
		return *m.Width
	}
	return 0
}

func (m *CVideoFormat) GetHeight() uint32 {
	if m != nil && m.Height != nil {
		return *m.Height
	}
	return 0
}

type CFrameEvent struct {
	EventId              *EStreamFrameEvent `protobuf:"varint,1,req,name=event_id,json=eventId,enum=EStreamFrameEvent,def=0" json:"event_id,omitempty"`
	Timestamp            *uint32            `protobuf:"varint,2,req,name=timestamp" json:"timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *CFrameEvent) Reset()         { *m = CFrameEvent{} }
func (m *CFrameEvent) String() string { return proto.CompactTextString(m) }
func (*CFrameEvent) ProtoMessage()    {}
func (*CFrameEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_stream_d1a07900b36af23a, []int{57}
}
func (m *CFrameEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CFrameEvent.Unmarshal(m, b)
}
func (m *CFrameEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CFrameEvent.Marshal(b, m, deterministic)
}
func (dst *CFrameEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CFrameEvent.Merge(dst, src)
}
func (m *CFrameEvent) XXX_Size() int {
	return xxx_messageInfo_CFrameEvent.Size(m)
}
func (m *CFrameEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_CFrameEvent.DiscardUnknown(m)
}

var xxx_messageInfo_CFrameEvent proto.InternalMessageInfo

const Default_CFrameEvent_EventId EStreamFrameEvent = EStreamFrameEvent_k_EStreamInputEventStart

func (m *CFrameEvent) GetEventId() EStreamFrameEvent {
	if m != nil && m.EventId != nil {
		return *m.EventId
	}
	return Default_CFrameEvent_EventId
}

func (m *CFrameEvent) GetTimestamp() uint32 {
	if m != nil && m.Timestamp != nil {
		return *m.Timestamp
	}
	return 0
}

type CFrameStats struct {
	FrameId              *uint32             `protobuf:"varint,1,req,name=frame_id,json=frameId" json:"frame_id,omitempty"`
	InputMark            *uint32             `protobuf:"varint,2,opt,name=input_mark,json=inputMark" json:"input_mark,omitempty"`
	Events               []*CFrameEvent      `protobuf:"bytes,3,rep,name=events" json:"events,omitempty"`
	Result               *EStreamFrameResult `protobuf:"varint,4,req,name=result,enum=EStreamFrameResult,def=0" json:"result,omitempty"`
	FrameStartDelta      *float32            `protobuf:"fixed32,5,opt,name=frame_start_delta,json=frameStartDelta" json:"frame_start_delta,omitempty"`
	FrameDisplayDelta    *float32            `protobuf:"fixed32,6,opt,name=frame_display_delta,json=frameDisplayDelta" json:"frame_display_delta,omitempty"`
	PingTime             *float32            `protobuf:"fixed32,7,opt,name=ping_time,json=pingTime" json:"ping_time,omitempty"`
	ServerBitrate        *float32            `protobuf:"fixed32,8,opt,name=server_bitrate,json=serverBitrate" json:"server_bitrate,omitempty"`
	ClientBitrate        *float32            `protobuf:"fixed32,9,opt,name=client_bitrate,json=clientBitrate" json:"client_bitrate,omitempty"`
	LinkBandwidth        *float32            `protobuf:"fixed32,10,opt,name=link_bandwidth,json=linkBandwidth" json:"link_bandwidth,omitempty"`
	PacketLoss           *float32            `protobuf:"fixed32,11,opt,name=packet_loss,json=packetLoss" json:"packet_loss,omitempty"`
	FrameSize            *uint32             `protobuf:"varint,12,opt,name=frame_size,json=frameSize" json:"frame_size,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *CFrameStats) Reset()         { *m = CFrameStats{} }
func (m *CFrameStats) String() string { return proto.CompactTextString(m) }
func (*CFrameStats) ProtoMessage()    {}
func (*CFrameStats) Descriptor() ([]byte, []int) {
	return fileDescriptor_stream_d1a07900b36af23a, []int{58}
}
func (m *CFrameStats) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CFrameStats.Unmarshal(m, b)
}
func (m *CFrameStats) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CFrameStats.Marshal(b, m, deterministic)
}
func (dst *CFrameStats) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CFrameStats.Merge(dst, src)
}
func (m *CFrameStats) XXX_Size() int {
	return xxx_messageInfo_CFrameStats.Size(m)
}
func (m *CFrameStats) XXX_DiscardUnknown() {
	xxx_messageInfo_CFrameStats.DiscardUnknown(m)
}

var xxx_messageInfo_CFrameStats proto.InternalMessageInfo

const Default_CFrameStats_Result EStreamFrameResult = EStreamFrameResult_k_EStreamFrameResultPending

func (m *CFrameStats) GetFrameId() uint32 {
	if m != nil && m.FrameId != nil {
		return *m.FrameId
	}
	return 0
}

func (m *CFrameStats) GetInputMark() uint32 {
	if m != nil && m.InputMark != nil {
		return *m.InputMark
	}
	return 0
}

func (m *CFrameStats) GetEvents() []*CFrameEvent {
	if m != nil {
		return m.Events
	}
	return nil
}

func (m *CFrameStats) GetResult() EStreamFrameResult {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return Default_CFrameStats_Result
}

func (m *CFrameStats) GetFrameStartDelta() float32 {
	if m != nil && m.FrameStartDelta != nil {
		return *m.FrameStartDelta
	}
	return 0
}

func (m *CFrameStats) GetFrameDisplayDelta() float32 {
	if m != nil && m.FrameDisplayDelta != nil {
		return *m.FrameDisplayDelta
	}
	return 0
}

func (m *CFrameStats) GetPingTime() float32 {
	if m != nil && m.PingTime != nil {
		return *m.PingTime
	}
	return 0
}

func (m *CFrameStats) GetServerBitrate() float32 {
	if m != nil && m.ServerBitrate != nil {
		return *m.ServerBitrate
	}
	return 0
}

func (m *CFrameStats) GetClientBitrate() float32 {
	if m != nil && m.ClientBitrate != nil {
		return *m.ClientBitrate
	}
	return 0
}

func (m *CFrameStats) GetLinkBandwidth() float32 {
	if m != nil && m.LinkBandwidth != nil {
		return *m.LinkBandwidth
	}
	return 0
}

func (m *CFrameStats) GetPacketLoss() float32 {
	if m != nil && m.PacketLoss != nil {
		return *m.PacketLoss
	}
	return 0
}

func (m *CFrameStats) GetFrameSize() uint32 {
	if m != nil && m.FrameSize != nil {
		return *m.FrameSize
	}
	return 0
}

type CFrameStatAccumulatedValue struct {
	StatType             *EFrameAccumulatedStat `protobuf:"varint,1,req,name=stat_type,json=statType,enum=EFrameAccumulatedStat,def=0" json:"stat_type,omitempty"`
	Count                *int32                 `protobuf:"varint,2,req,name=count" json:"count,omitempty"`
	Average              *float32               `protobuf:"fixed32,3,req,name=average" json:"average,omitempty"`
	Stddev               *float32               `protobuf:"fixed32,4,opt,name=stddev" json:"stddev,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *CFrameStatAccumulatedValue) Reset()         { *m = CFrameStatAccumulatedValue{} }
func (m *CFrameStatAccumulatedValue) String() string { return proto.CompactTextString(m) }
func (*CFrameStatAccumulatedValue) ProtoMessage()    {}
func (*CFrameStatAccumulatedValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_stream_d1a07900b36af23a, []int{59}
}
func (m *CFrameStatAccumulatedValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CFrameStatAccumulatedValue.Unmarshal(m, b)
}
func (m *CFrameStatAccumulatedValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CFrameStatAccumulatedValue.Marshal(b, m, deterministic)
}
func (dst *CFrameStatAccumulatedValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CFrameStatAccumulatedValue.Merge(dst, src)
}
func (m *CFrameStatAccumulatedValue) XXX_Size() int {
	return xxx_messageInfo_CFrameStatAccumulatedValue.Size(m)
}
func (m *CFrameStatAccumulatedValue) XXX_DiscardUnknown() {
	xxx_messageInfo_CFrameStatAccumulatedValue.DiscardUnknown(m)
}

var xxx_messageInfo_CFrameStatAccumulatedValue proto.InternalMessageInfo

const Default_CFrameStatAccumulatedValue_StatType EFrameAccumulatedStat = EFrameAccumulatedStat_k_EFrameStatFPS

func (m *CFrameStatAccumulatedValue) GetStatType() EFrameAccumulatedStat {
	if m != nil && m.StatType != nil {
		return *m.StatType
	}
	return Default_CFrameStatAccumulatedValue_StatType
}

func (m *CFrameStatAccumulatedValue) GetCount() int32 {
	if m != nil && m.Count != nil {
		return *m.Count
	}
	return 0
}

func (m *CFrameStatAccumulatedValue) GetAverage() float32 {
	if m != nil && m.Average != nil {
		return *m.Average
	}
	return 0
}

func (m *CFrameStatAccumulatedValue) GetStddev() float32 {
	if m != nil && m.Stddev != nil {
		return *m.Stddev
	}
	return 0
}

type CFrameStatsListMsg struct {
	DataType             *EStreamingDataType           `protobuf:"varint,1,req,name=data_type,json=dataType,enum=EStreamingDataType,def=0" json:"data_type,omitempty"`
	Stats                []*CFrameStats                `protobuf:"bytes,2,rep,name=stats" json:"stats,omitempty"`
	AccumulatedStats     []*CFrameStatAccumulatedValue `protobuf:"bytes,3,rep,name=accumulated_stats,json=accumulatedStats" json:"accumulated_stats,omitempty"`
	LatestFrameId        *int32                        `protobuf:"varint,4,req,name=latest_frame_id,json=latestFrameId" json:"latest_frame_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *CFrameStatsListMsg) Reset()         { *m = CFrameStatsListMsg{} }
func (m *CFrameStatsListMsg) String() string { return proto.CompactTextString(m) }
func (*CFrameStatsListMsg) ProtoMessage()    {}
func (*CFrameStatsListMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_stream_d1a07900b36af23a, []int{60}
}
func (m *CFrameStatsListMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CFrameStatsListMsg.Unmarshal(m, b)
}
func (m *CFrameStatsListMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CFrameStatsListMsg.Marshal(b, m, deterministic)
}
func (dst *CFrameStatsListMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CFrameStatsListMsg.Merge(dst, src)
}
func (m *CFrameStatsListMsg) XXX_Size() int {
	return xxx_messageInfo_CFrameStatsListMsg.Size(m)
}
func (m *CFrameStatsListMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_CFrameStatsListMsg.DiscardUnknown(m)
}

var xxx_messageInfo_CFrameStatsListMsg proto.InternalMessageInfo

const Default_CFrameStatsListMsg_DataType EStreamingDataType = EStreamingDataType_k_EStreamingAudioData

func (m *CFrameStatsListMsg) GetDataType() EStreamingDataType {
	if m != nil && m.DataType != nil {
		return *m.DataType
	}
	return Default_CFrameStatsListMsg_DataType
}

func (m *CFrameStatsListMsg) GetStats() []*CFrameStats {
	if m != nil {
		return m.Stats
	}
	return nil
}

func (m *CFrameStatsListMsg) GetAccumulatedStats() []*CFrameStatAccumulatedValue {
	if m != nil {
		return m.AccumulatedStats
	}
	return nil
}

func (m *CFrameStatsListMsg) GetLatestFrameId() int32 {
	if m != nil && m.LatestFrameId != nil {
		return *m.LatestFrameId
	}
	return 0
}

type CStreamingSessionStats struct {
	FrameLossPercentage  *float32 `protobuf:"fixed32,1,opt,name=frame_loss_percentage,json=frameLossPercentage" json:"frame_loss_percentage,omitempty"`
	AverageNetworkTimeMs *float32 `protobuf:"fixed32,2,opt,name=average_network_time_ms,json=averageNetworkTimeMs" json:"average_network_time_ms,omitempty"`
	StddevNetworkTimeMs  *float32 `protobuf:"fixed32,3,opt,name=stddev_network_time_ms,json=stddevNetworkTimeMs" json:"stddev_network_time_ms,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CStreamingSessionStats) Reset()         { *m = CStreamingSessionStats{} }
func (m *CStreamingSessionStats) String() string { return proto.CompactTextString(m) }
func (*CStreamingSessionStats) ProtoMessage()    {}
func (*CStreamingSessionStats) Descriptor() ([]byte, []int) {
	return fileDescriptor_stream_d1a07900b36af23a, []int{61}
}
func (m *CStreamingSessionStats) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CStreamingSessionStats.Unmarshal(m, b)
}
func (m *CStreamingSessionStats) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CStreamingSessionStats.Marshal(b, m, deterministic)
}
func (dst *CStreamingSessionStats) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CStreamingSessionStats.Merge(dst, src)
}
func (m *CStreamingSessionStats) XXX_Size() int {
	return xxx_messageInfo_CStreamingSessionStats.Size(m)
}
func (m *CStreamingSessionStats) XXX_DiscardUnknown() {
	xxx_messageInfo_CStreamingSessionStats.DiscardUnknown(m)
}

var xxx_messageInfo_CStreamingSessionStats proto.InternalMessageInfo

func (m *CStreamingSessionStats) GetFrameLossPercentage() float32 {
	if m != nil && m.FrameLossPercentage != nil {
		return *m.FrameLossPercentage
	}
	return 0
}

func (m *CStreamingSessionStats) GetAverageNetworkTimeMs() float32 {
	if m != nil && m.AverageNetworkTimeMs != nil {
		return *m.AverageNetworkTimeMs
	}
	return 0
}

func (m *CStreamingSessionStats) GetStddevNetworkTimeMs() float32 {
	if m != nil && m.StddevNetworkTimeMs != nil {
		return *m.StddevNetworkTimeMs
	}
	return 0
}

type CDebugDumpMsg struct {
	Screenshot           []byte   `protobuf:"bytes,1,opt,name=screenshot" json:"screenshot,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CDebugDumpMsg) Reset()         { *m = CDebugDumpMsg{} }
func (m *CDebugDumpMsg) String() string { return proto.CompactTextString(m) }
func (*CDebugDumpMsg) ProtoMessage()    {}
func (*CDebugDumpMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_stream_d1a07900b36af23a, []int{62}
}
func (m *CDebugDumpMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CDebugDumpMsg.Unmarshal(m, b)
}
func (m *CDebugDumpMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CDebugDumpMsg.Marshal(b, m, deterministic)
}
func (dst *CDebugDumpMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CDebugDumpMsg.Merge(dst, src)
}
func (m *CDebugDumpMsg) XXX_Size() int {
	return xxx_messageInfo_CDebugDumpMsg.Size(m)
}
func (m *CDebugDumpMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_CDebugDumpMsg.DiscardUnknown(m)
}

var xxx_messageInfo_CDebugDumpMsg proto.InternalMessageInfo

func (m *CDebugDumpMsg) GetScreenshot() []byte {
	if m != nil {
		return m.Screenshot
	}
	return nil
}

type CLogMsg struct {
	Type                 *int32   `protobuf:"varint,1,opt,name=type" json:"type,omitempty"`
	Message              *string  `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CLogMsg) Reset()         { *m = CLogMsg{} }
func (m *CLogMsg) String() string { return proto.CompactTextString(m) }
func (*CLogMsg) ProtoMessage()    {}
func (*CLogMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_stream_d1a07900b36af23a, []int{63}
}
func (m *CLogMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CLogMsg.Unmarshal(m, b)
}
func (m *CLogMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CLogMsg.Marshal(b, m, deterministic)
}
func (dst *CLogMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CLogMsg.Merge(dst, src)
}
func (m *CLogMsg) XXX_Size() int {
	return xxx_messageInfo_CLogMsg.Size(m)
}
func (m *CLogMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_CLogMsg.DiscardUnknown(m)
}

var xxx_messageInfo_CLogMsg proto.InternalMessageInfo

func (m *CLogMsg) GetType() int32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

func (m *CLogMsg) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

type CLogUploadMsg struct {
	Type                 *ELogFileType `protobuf:"varint,1,opt,name=type,enum=ELogFileType,def=0" json:"type,omitempty"`
	Data                 []byte        `protobuf:"bytes,3,opt,name=data" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *CLogUploadMsg) Reset()         { *m = CLogUploadMsg{} }
func (m *CLogUploadMsg) String() string { return proto.CompactTextString(m) }
func (*CLogUploadMsg) ProtoMessage()    {}
func (*CLogUploadMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_stream_d1a07900b36af23a, []int{64}
}
func (m *CLogUploadMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CLogUploadMsg.Unmarshal(m, b)
}
func (m *CLogUploadMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CLogUploadMsg.Marshal(b, m, deterministic)
}
func (dst *CLogUploadMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CLogUploadMsg.Merge(dst, src)
}
func (m *CLogUploadMsg) XXX_Size() int {
	return xxx_messageInfo_CLogUploadMsg.Size(m)
}
func (m *CLogUploadMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_CLogUploadMsg.DiscardUnknown(m)
}

var xxx_messageInfo_CLogUploadMsg proto.InternalMessageInfo

const Default_CLogUploadMsg_Type ELogFileType = ELogFileType_k_ELogFileSystemBoot

func (m *CLogUploadMsg) GetType() ELogFileType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return Default_CLogUploadMsg_Type
}

func (m *CLogUploadMsg) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*CDiscoveryPingRequest)(nil), "CDiscoveryPingRequest")
	proto.RegisterType((*CDiscoveryPingResponse)(nil), "CDiscoveryPingResponse")
	proto.RegisterType((*CStreamingClientHandshakeInfo)(nil), "CStreamingClientHandshakeInfo")
	proto.RegisterType((*CClientHandshakeMsg)(nil), "CClientHandshakeMsg")
	proto.RegisterType((*CStreamingServerHandshakeInfo)(nil), "CStreamingServerHandshakeInfo")
	proto.RegisterType((*CServerHandshakeMsg)(nil), "CServerHandshakeMsg")
	proto.RegisterType((*CAuthenticationRequestMsg)(nil), "CAuthenticationRequestMsg")
	proto.RegisterType((*CAuthenticationResponseMsg)(nil), "CAuthenticationResponseMsg")
	proto.RegisterType((*CKeepAliveMsg)(nil), "CKeepAliveMsg")
	proto.RegisterType((*CStartNetworkTestMsg)(nil), "CStartNetworkTestMsg")
	proto.RegisterType((*CStreamVideoMode)(nil), "CStreamVideoMode")
	proto.RegisterType((*CStreamingClientCaps)(nil), "CStreamingClientCaps")
	proto.RegisterType((*CStreamingClientConfig)(nil), "CStreamingClientConfig")
	proto.RegisterType((*CStreamingServerConfig)(nil), "CStreamingServerConfig")
	proto.RegisterType((*CNegotiatedConfig)(nil), "CNegotiatedConfig")
	proto.RegisterType((*CNegotiationInitMsg)(nil), "CNegotiationInitMsg")
	proto.RegisterType((*CNegotiationSetConfigMsg)(nil), "CNegotiationSetConfigMsg")
	proto.RegisterType((*CNegotiationCompleteMsg)(nil), "CNegotiationCompleteMsg")
	proto.RegisterType((*CStartAudioDataMsg)(nil), "CStartAudioDataMsg")
	proto.RegisterType((*CStopAudioDataMsg)(nil), "CStopAudioDataMsg")
	proto.RegisterType((*CStartVideoDataMsg)(nil), "CStartVideoDataMsg")
	proto.RegisterType((*CStopVideoDataMsg)(nil), "CStopVideoDataMsg")
	proto.RegisterType((*CInputLatencyTestMsg)(nil), "CInputLatencyTestMsg")
	proto.RegisterType((*CInputMouseMotionMsg)(nil), "CInputMouseMotionMsg")
	proto.RegisterType((*CInputMouseWheelMsg)(nil), "CInputMouseWheelMsg")
	proto.RegisterType((*CInputMouseDownMsg)(nil), "CInputMouseDownMsg")
	proto.RegisterType((*CInputMouseUpMsg)(nil), "CInputMouseUpMsg")
	proto.RegisterType((*CInputKeyDownMsg)(nil), "CInputKeyDownMsg")
	proto.RegisterType((*CInputKeyUpMsg)(nil), "CInputKeyUpMsg")
	proto.RegisterType((*CInputTextMsg)(nil), "CInputTextMsg")
	proto.RegisterType((*CSetTitleMsg)(nil), "CSetTitleMsg")
	proto.RegisterType((*CSetIconMsg)(nil), "CSetIconMsg")
	proto.RegisterType((*CShowCursorMsg)(nil), "CShowCursorMsg")
	proto.RegisterType((*CHideCursorMsg)(nil), "CHideCursorMsg")
	proto.RegisterType((*CSetCursorMsg)(nil), "CSetCursorMsg")
	proto.RegisterType((*CGetCursorImageMsg)(nil), "CGetCursorImageMsg")
	proto.RegisterType((*CSetCursorImageMsg)(nil), "CSetCursorImageMsg")
	proto.RegisterType((*CVideoDecoderInfoMsg)(nil), "CVideoDecoderInfoMsg")
	proto.RegisterType((*CVideoEncoderInfoMsg)(nil), "CVideoEncoderInfoMsg")
	proto.RegisterType((*CQuitRequest)(nil), "CQuitRequest")
	proto.RegisterType((*CDeleteCursorMsg)(nil), "CDeleteCursorMsg")
	proto.RegisterType((*CSetStreamingClientConfig)(nil), "CSetStreamingClientConfig")
	proto.RegisterType((*CSetQoSMsg)(nil), "CSetQoSMsg")
	proto.RegisterType((*CSetTargetFramerateMsg)(nil), "CSetTargetFramerateMsg")
	proto.RegisterType((*CSetTargetBitrateMsg)(nil), "CSetTargetBitrateMsg")
	proto.RegisterType((*COverlayEnabledMsg)(nil), "COverlayEnabledMsg")
	proto.RegisterType((*CSetGammaRampMsg)(nil), "CSetGammaRampMsg")
	proto.RegisterType((*CSetActivityMsg)(nil), "CSetActivityMsg")
	proto.RegisterType((*CSystemSuspendMsg)(nil), "CSystemSuspendMsg")
	proto.RegisterType((*CVirtualHereRequestMsg)(nil), "CVirtualHereRequestMsg")
	proto.RegisterType((*CVirtualHereReadyMsg)(nil), "CVirtualHereReadyMsg")
	proto.RegisterType((*CVirtualHereShareDeviceMsg)(nil), "CVirtualHereShareDeviceMsg")
	proto.RegisterType((*CSetSpectatorModeMsg)(nil), "CSetSpectatorModeMsg")
	proto.RegisterType((*CRemoteHIDMsg)(nil), "CRemoteHIDMsg")
	proto.RegisterType((*CStreamDataLostMsg)(nil), "CStreamDataLostMsg")
	proto.RegisterType((*CAudioFormat)(nil), "CAudioFormat")
	proto.RegisterType((*CVideoFormat)(nil), "CVideoFormat")
	proto.RegisterType((*CFrameEvent)(nil), "CFrameEvent")
	proto.RegisterType((*CFrameStats)(nil), "CFrameStats")
	proto.RegisterType((*CFrameStatAccumulatedValue)(nil), "CFrameStatAccumulatedValue")
	proto.RegisterType((*CFrameStatsListMsg)(nil), "CFrameStatsListMsg")
	proto.RegisterType((*CStreamingSessionStats)(nil), "CStreamingSessionStats")
	proto.RegisterType((*CDebugDumpMsg)(nil), "CDebugDumpMsg")
	proto.RegisterType((*CLogMsg)(nil), "CLogMsg")
	proto.RegisterType((*CLogUploadMsg)(nil), "CLogUploadMsg")
	proto.RegisterEnum("EStreamChannel", EStreamChannel_name, EStreamChannel_value)
	proto.RegisterEnum("EStreamDiscoveryMessage", EStreamDiscoveryMessage_name, EStreamDiscoveryMessage_value)
	proto.RegisterEnum("EStreamControlMessage", EStreamControlMessage_name, EStreamControlMessage_value)
	proto.RegisterEnum("EStreamVersion", EStreamVersion_name, EStreamVersion_value)
	proto.RegisterEnum("EStreamAudioCodec", EStreamAudioCodec_name, EStreamAudioCodec_value)
	proto.RegisterEnum("EStreamVideoCodec", EStreamVideoCodec_name, EStreamVideoCodec_value)
	proto.RegisterEnum("EStreamQualityPreference", EStreamQualityPreference_name, EStreamQualityPreference_value)
	proto.RegisterEnum("EStreamBitrate", EStreamBitrate_name, EStreamBitrate_value)
	proto.RegisterEnum("EStreamingDataType", EStreamingDataType_name, EStreamingDataType_value)
	proto.RegisterEnum("EStreamMouseButton", EStreamMouseButton_name, EStreamMouseButton_value)
	proto.RegisterEnum("EStreamMouseWheelDirection", EStreamMouseWheelDirection_name, EStreamMouseWheelDirection_value)
	proto.RegisterEnum("EStreamGamepadInputType", EStreamGamepadInputType_name, EStreamGamepadInputType_value)
	proto.RegisterEnum("EStreamFramerateLimiter", EStreamFramerateLimiter_name, EStreamFramerateLimiter_value)
	proto.RegisterEnum("EStreamActivity", EStreamActivity_name, EStreamActivity_value)
	proto.RegisterEnum("EStreamDataMessage", EStreamDataMessage_name, EStreamDataMessage_value)
	proto.RegisterEnum("EAudioFormat", EAudioFormat_name, EAudioFormat_value)
	proto.RegisterEnum("EVideoFormat", EVideoFormat_name, EVideoFormat_value)
	proto.RegisterEnum("EStreamStatsMessage", EStreamStatsMessage_name, EStreamStatsMessage_value)
	proto.RegisterEnum("EStreamFrameEvent", EStreamFrameEvent_name, EStreamFrameEvent_value)
	proto.RegisterEnum("EStreamFrameResult", EStreamFrameResult_name, EStreamFrameResult_value)
	proto.RegisterEnum("EFrameAccumulatedStat", EFrameAccumulatedStat_name, EFrameAccumulatedStat_value)
	proto.RegisterEnum("ELogFileType", ELogFileType_name, ELogFileType_value)
	proto.RegisterEnum("CAuthenticationResponseMsg_AuthenticationResult", CAuthenticationResponseMsg_AuthenticationResult_name, CAuthenticationResponseMsg_AuthenticationResult_value)
}

func init() { proto.RegisterFile("stream.proto", fileDescriptor_stream_d1a07900b36af23a) }

var fileDescriptor_stream_d1a07900b36af23a = []byte{
	// 5191 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x5b, 0xcd, 0x6f, 0xdc, 0x48,
	0x76, 0x77, 0x7f, 0x48, 0x6a, 0x3d, 0x7d, 0xb8, 0x5c, 0xfa, 0xb4, 0x64, 0xcf, 0x68, 0x38, 0x1f,
	0xeb, 0x74, 0x66, 0x64, 0x4b, 0xf6, 0xce, 0x78, 0xb5, 0x5f, 0x96, 0xba, 0x65, 0x4b, 0x6b, 0xc9,
	0x96, 0xd9, 0xb2, 0xc7, 0xb3, 0xc8, 0x2e, 0x97, 0x22, 0xab, 0xbb, 0x39, 0x62, 0x93, 0x3d, 0x64,
	0x51, 0xb6, 0x7c, 0x12, 0x10, 0x24, 0x48, 0x90, 0x7f, 0x20, 0xc0, 0x22, 0x08, 0x90, 0x4b, 0x80,
	0x5c, 0x03, 0x04, 0x39, 0x05, 0x39, 0x06, 0x09, 0x90, 0x4b, 0x02, 0xe4, 0x1e, 0x60, 0x0f, 0x39,
	0xe7, 0x96, 0x43, 0x12, 0xd4, 0x07, 0xc9, 0x22, 0x9b, 0x94, 0xb5, 0x08, 0x10, 0x9d, 0xba, 0xea,
	0xfd, 0xde, 0x7b, 0x55, 0xaf, 0x5e, 0xbd, 0x7a, 0xf5, 0x8a, 0x82, 0xe9, 0x90, 0x06, 0xc4, 0x1c,
	0xac, 0x0f, 0x03, 0x9f, 0xfa, 0x5a, 0x0f, 0x16, 0x5a, 0x6d, 0x27, 0xb4, 0xfc, 0x33, 0x12, 0x9c,
	0x1f, 0x39, 0x5e, 0x4f, 0x27, 0xdf, 0x45, 0x24, 0xa4, 0x78, 0x05, 0x1a, 0x21, 0xfb, 0xe9, 0x59,
	0x64, 0xb9, 0xb2, 0x56, 0xb9, 0x33, 0xa3, 0x27, 0x6d, 0xbc, 0x09, 0x0b, 0x43, 0xd3, 0x3a, 0x25,
	0xd4, 0x08, 0x9d, 0x77, 0xc4, 0x08, 0x04, 0x0b, 0xb1, 0x97, 0xab, 0x1c, 0x38, 0x27, 0x88, 0x1d,
	0xe7, 0x1d, 0xd1, 0x63, 0x92, 0xd6, 0x85, 0xc5, 0xbc, 0xa2, 0x70, 0xe8, 0x7b, 0x21, 0xb9, 0x54,
	0xd3, 0x3d, 0x98, 0xcf, 0x6a, 0xb2, 0x88, 0x73, 0x96, 0x28, 0xc2, 0xaa, 0x22, 0x41, 0xd1, 0x76,
	0xe0, 0x76, 0xab, 0xc3, 0x67, 0xe8, 0x78, 0xbd, 0x96, 0xeb, 0x10, 0x8f, 0xee, 0x99, 0x9e, 0x1d,
	0xf6, 0xcd, 0x53, 0xb2, 0xef, 0x75, 0x7d, 0xfc, 0x11, 0x4c, 0x7b, 0x84, 0xbe, 0xf1, 0x83, 0x53,
	0x83, 0x92, 0x90, 0x72, 0x51, 0x63, 0xfa, 0x94, 0xec, 0x3b, 0x26, 0x21, 0xd5, 0xf6, 0x61, 0xae,
	0x95, 0x63, 0x3d, 0x0c, 0x7b, 0x78, 0x13, 0xea, 0x8e, 0xd7, 0xf5, 0x97, 0x2b, 0x6b, 0xd5, 0x3b,
	0x53, 0x9b, 0x1f, 0xac, 0x5f, 0xaa, 0x47, 0xe7, 0x58, 0x6d, 0x43, 0x1d, 0x4e, 0x87, 0x04, 0x67,
	0x24, 0xc8, 0x0e, 0x07, 0x41, 0x6d, 0x40, 0x23, 0x3e, 0xf1, 0x31, 0x9d, 0xfd, 0xe4, 0xda, 0x73,
	0xc8, 0xcb, 0xb5, 0x17, 0x88, 0x95, 0xda, 0x03, 0xb8, 0xd9, 0xda, 0x8e, 0x68, 0x9f, 0x78, 0xd4,
	0xb1, 0x4c, 0xea, 0xf8, 0x9e, 0x5c, 0x10, 0x26, 0x70, 0x1e, 0xc6, 0xa8, 0x7f, 0x4a, 0x3c, 0xae,
	0x7b, 0x5a, 0x17, 0x0d, 0xfc, 0x53, 0x98, 0x38, 0x23, 0x41, 0xe8, 0xf8, 0x1e, 0xb7, 0xcc, 0xec,
	0xe6, 0xf5, 0xf5, 0x5d, 0xa1, 0xe9, 0x95, 0xe8, 0xde, 0x9a, 0x3f, 0x35, 0xb2, 0x3d, 0xcf, 0x7c,
	0x8f, 0xe8, 0x31, 0x97, 0xf6, 0x9b, 0x0a, 0xac, 0x8c, 0x28, 0x15, 0x4b, 0xcd, 0xb4, 0x76, 0x60,
	0x3c, 0x20, 0x61, 0xe4, 0x52, 0xae, 0x76, 0x76, 0xf3, 0xde, 0x7a, 0x39, 0x78, 0x7d, 0x84, 0x12,
	0xb9, 0x74, 0x6b, 0xb2, 0xf3, 0xb2, 0xd5, 0xda, 0xdd, 0x6d, 0xef, 0xb6, 0x75, 0x29, 0xea, 0xff,
	0x3e, 0xe8, 0x0d, 0x98, 0x2f, 0xd2, 0x85, 0x67, 0x20, 0xd5, 0x86, 0xae, 0x61, 0x80, 0xf1, 0xc7,
	0xdb, 0xfb, 0x07, 0xbb, 0x6d, 0x54, 0xd1, 0xae, 0xc3, 0x4c, 0xeb, 0x29, 0x21, 0xc3, 0x6d, 0xd7,
	0x39, 0x63, 0x83, 0xd5, 0xfe, 0xac, 0x02, 0xf3, 0xad, 0x0e, 0x35, 0x03, 0xfa, 0x2c, 0xf5, 0x25,
	0x36, 0xe5, 0x45, 0x18, 0xef, 0x06, 0xe6, 0x80, 0x84, 0xd2, 0xbd, 0x65, 0x0b, 0xdf, 0x82, 0x49,
	0xfe, 0x2b, 0x30, 0x29, 0x91, 0x1e, 0x9d, 0x76, 0x30, 0x3f, 0x3d, 0x71, 0x28, 0xfb, 0x69, 0x9c,
	0x9e, 0x0c, 0xc3, 0xe5, 0x1a, 0x07, 0x4c, 0xc9, 0xbe, 0xa7, 0x27, 0xc3, 0x10, 0x7f, 0x0e, 0xf8,
	0x24, 0x0a, 0x42, 0x6a, 0x64, 0x80, 0x75, 0x0e, 0x44, 0x9c, 0xb2, 0x93, 0xa2, 0xb5, 0x7f, 0xa9,
	0x00, 0x92, 0x4e, 0xf3, 0xca, 0xb1, 0x89, 0x7f, 0xe8, 0xdb, 0x84, 0x39, 0xc1, 0x1b, 0xc7, 0xa6,
	0x7d, 0xee, 0x56, 0x33, 0xba, 0x68, 0xb0, 0x11, 0xf7, 0x89, 0xd3, 0xeb, 0xb3, 0xdd, 0xc1, 0xba,
	0x65, 0x8b, 0x8d, 0x29, 0x20, 0xdd, 0x80, 0x84, 0x7d, 0x83, 0x0f, 0x5a, 0x8e, 0x49, 0xf6, 0xe9,
	0x6c, 0xd8, 0x0f, 0x60, 0x51, 0x85, 0x18, 0x5e, 0xc4, 0xe7, 0xe3, 0x07, 0x72, 0x5c, 0xf3, 0x0a,
	0xf8, 0x59, 0x4c, 0xc3, 0x0f, 0x61, 0x39, 0xc3, 0x65, 0x13, 0xcf, 0x1f, 0x38, 0x1e, 0xe7, 0x1b,
	0xe3, 0x7c, 0x8b, 0x0a, 0x5f, 0x3b, 0xa5, 0x6a, 0xff, 0x50, 0xe7, 0x56, 0xcf, 0x6c, 0xc4, 0x96,
	0x39, 0x0c, 0xf1, 0x87, 0x30, 0x15, 0x9e, 0x87, 0x94, 0x0c, 0x0c, 0xb9, 0x6d, 0x2a, 0x77, 0x26,
	0x75, 0x10, 0x5d, 0x7c, 0xe7, 0x7d, 0x0e, 0x58, 0x02, 0x2c, 0xd3, 0x33, 0xc2, 0x28, 0x1c, 0x12,
	0x4f, 0x44, 0x96, 0x86, 0x8e, 0x04, 0xa5, 0x65, 0x7a, 0x1d, 0xd1, 0x8f, 0x7f, 0x0c, 0xab, 0x03,
	0xf3, 0xad, 0x33, 0x88, 0x06, 0x86, 0x4d, 0x2c, 0xdf, 0x26, 0xc6, 0xc8, 0xea, 0x8c, 0xe9, 0xcb,
	0x12, 0xd2, 0xe6, 0x08, 0xc5, 0xf8, 0xf8, 0x87, 0xb0, 0x12, 0xb3, 0x97, 0x2c, 0xd9, 0x98, 0xbe,
	0x24, 0x11, 0x3b, 0xb9, 0x95, 0xc3, 0xeb, 0x30, 0x17, 0x46, 0xc3, 0xa1, 0x1f, 0xd0, 0xd0, 0x38,
	0x63, 0x4b, 0x67, 0xf4, 0xc9, 0x99, 0xc5, 0x0d, 0xd3, 0xd0, 0x6f, 0xc4, 0x24, 0xbe, 0xa8, 0x7b,
	0xe4, 0xcc, 0x62, 0x78, 0xdb, 0x09, 0xcd, 0x13, 0x97, 0x18, 0x21, 0x25, 0xe6, 0xc0, 0x08, 0xa9,
	0x1f, 0x90, 0xe5, 0x71, 0x81, 0x97, 0xa4, 0x0e, 0xa3, 0x74, 0x18, 0x81, 0xc5, 0xf3, 0x18, 0x6f,
	0x71, 0x03, 0x1a, 0x56, 0x14, 0x84, 0x7e, 0xb0, 0x3c, 0xc1, 0x39, 0x62, 0x61, 0xd2, 0xb8, 0x9c,
	0x84, 0x77, 0xe1, 0xc3, 0x98, 0xc7, 0xf1, 0x28, 0x71, 0x8d, 0xbe, 0x19, 0xd8, 0x6f, 0xcc, 0x80,
	0x18, 0xc4, 0xb3, 0x7c, 0xdb, 0xf1, 0x7a, 0xcb, 0x0d, 0xce, 0x7d, 0x4b, 0xc2, 0xf6, 0x19, 0x6a,
	0x4f, 0x82, 0x76, 0x25, 0x06, 0x6f, 0xc3, 0xed, 0x58, 0x8c, 0x39, 0xb0, 0x0b, 0x84, 0x4c, 0x72,
	0x21, 0x2b, 0x12, 0xb4, 0x3d, 0xb0, 0x47, 0x44, 0x3c, 0x81, 0xb5, 0x58, 0x84, 0x77, 0xe6, 0xd8,
	0x8e, 0x59, 0x20, 0x05, 0xb8, 0x94, 0x58, 0xd5, 0x33, 0x0e, 0xcb, 0x0b, 0xd2, 0x7e, 0x3d, 0x0e,
	0x8b, 0x23, 0xae, 0xe4, 0x7b, 0x5d, 0xa7, 0x87, 0x0f, 0x61, 0xe2, 0xbb, 0xc8, 0x74, 0x1d, 0x7a,
	0x2e, 0xc3, 0xd6, 0xcd, 0x38, 0xc0, 0xbc, 0x10, 0xdd, 0x47, 0x01, 0xe9, 0x92, 0x80, 0x9d, 0x59,
	0x5b, 0xcb, 0x49, 0xa8, 0x91, 0xb4, 0x1d, 0xd3, 0x35, 0x3d, 0x8b, 0xd8, 0x7a, 0x2c, 0x83, 0x1d,
	0x6b, 0xb1, 0x37, 0x04, 0x24, 0xf4, 0xdd, 0x88, 0x85, 0x1c, 0xe3, 0x6d, 0x7c, 0xac, 0x49, 0x9a,
	0x9e, 0x90, 0x5e, 0x97, 0x70, 0x9c, 0xcb, 0x1d, 0x38, 0xca, 0xf1, 0x0d, 0xfe, 0x49, 0xea, 0xb0,
	0x49, 0x50, 0x19, 0xd9, 0x8d, 0x37, 0x25, 0xe4, 0x71, 0x8c, 0x48, 0xb7, 0xe4, 0x0e, 0xdc, 0x1e,
	0xe5, 0x1f, 0xdd, 0x97, 0xab, 0x79, 0x09, 0xca, 0xe6, 0xc4, 0x0f, 0xd2, 0x51, 0x67, 0xfc, 0x9d,
	0x79, 0xe2, 0xd8, 0x56, 0xf5, 0x8b, 0x8d, 0x64, 0xe4, 0xaa, 0xbb, 0xff, 0x04, 0x96, 0x89, 0xc7,
	0xd7, 0x33, 0x59, 0x48, 0xbe, 0xe5, 0xd8, 0x42, 0x72, 0x8f, 0xdc, 0xaa, 0xd3, 0x20, 0x22, 0xfa,
	0xa2, 0x40, 0xc5, 0xeb, 0xd8, 0x96, 0x18, 0xdc, 0x82, 0x15, 0xc9, 0x3f, 0x24, 0x41, 0xd7, 0x0f,
	0x06, 0xcc, 0xfa, 0x06, 0x4b, 0x3c, 0x5c, 0xf3, 0x5c, 0x78, 0xe5, 0xd6, 0x58, 0xd7, 0x74, 0x43,
	0xa2, 0x4b, 0x45, 0x47, 0x29, 0xee, 0xb9, 0x80, 0xe1, 0x2d, 0x90, 0xe2, 0xe5, 0x8e, 0x0b, 0x63,
	0xbf, 0x10, 0x1e, 0x29, 0x87, 0x30, 0x2f, 0x30, 0x7c, 0xeb, 0x25, 0x9e, 0xa3, 0xf0, 0x9a, 0x91,
	0xed, 0xa8, 0xbc, 0x30, 0xca, 0xbb, 0xcd, 0x20, 0x45, 0xbc, 0x8e, 0x37, 0x8c, 0xa8, 0xc2, 0x3b,
	0x35, 0xca, 0xbb, 0xcf, 0x20, 0x29, 0xef, 0x1d, 0x98, 0x15, 0x0a, 0xad, 0xbe, 0xe9, 0x79, 0xc4,
	0x0d, 0x97, 0xa7, 0xb9, 0xa1, 0x2b, 0x9b, 0xfa, 0x0c, 0x27, 0xb4, 0x64, 0x3f, 0xde, 0x80, 0x1b,
	0x99, 0xd9, 0xf1, 0x78, 0x32, 0xa3, 0x5a, 0xe6, 0xba, 0x32, 0x33, 0x16, 0x54, 0xb4, 0x3f, 0xa9,
	0xab, 0xbb, 0x43, 0xe4, 0x1c, 0x72, 0x77, 0x6c, 0xc1, 0x4d, 0xa6, 0xb1, 0xc7, 0xd6, 0x29, 0x3c,
	0xa5, 0xfe, 0x50, 0xf1, 0x51, 0xbe, 0x5f, 0x1a, 0xfa, 0x92, 0x00, 0xb4, 0x05, 0x3d, 0xf5, 0x53,
	0xe6, 0x66, 0xf6, 0xb9, 0x67, 0x0e, 0x1c, 0xcb, 0x74, 0xdd, 0x73, 0xc3, 0xb4, 0xbf, 0x8d, 0x42,
	0xaa, 0xf2, 0x8b, 0x80, 0xbc, 0xaa, 0x80, 0xb6, 0x39, 0x46, 0x91, 0x71, 0x0f, 0xa4, 0x3d, 0x0c,
	0xcb, 0x1c, 0xd2, 0x28, 0x60, 0x81, 0xa0, 0x7b, 0x62, 0xf1, 0xcd, 0xd1, 0xd0, 0xb1, 0xa0, 0xb5,
	0x04, 0xe9, 0x19, 0xa3, 0xb0, 0xe8, 0x95, 0x77, 0xb1, 0x38, 0x56, 0xc8, 0x20, 0xc2, 0x37, 0x48,
	0x43, 0xbf, 0x95, 0xf5, 0xb1, 0x38, 0x56, 0x88, 0x08, 0x82, 0x7f, 0x0a, 0xb7, 0x4a, 0xc5, 0x98,
	0x03, 0x5b, 0x46, 0xe8, 0x9b, 0xc5, 0x32, 0xb6, 0x07, 0x36, 0x6e, 0xc1, 0x07, 0xa5, 0x02, 0x78,
	0x58, 0x95, 0x41, 0x7b, 0xb5, 0x58, 0x04, 0x8f, 0xa9, 0xcc, 0xfc, 0xa1, 0xdf, 0xa5, 0x59, 0x6e,
	0xda, 0x0f, 0x88, 0x69, 0x87, 0x7c, 0xc3, 0x8c, 0xe9, 0x4b, 0x31, 0x20, 0xe6, 0x3c, 0x16, 0x64,
	0xfc, 0x25, 0x2c, 0xc9, 0x01, 0xd0, 0xc0, 0xec, 0x76, 0x1d, 0xcb, 0x18, 0x06, 0x8e, 0x1f, 0xb0,
	0x40, 0x27, 0xc2, 0xf7, 0x82, 0x20, 0x1f, 0x0b, 0xea, 0x91, 0x24, 0x6a, 0xff, 0x51, 0x85, 0x1b,
	0xad, 0x67, 0xa4, 0xe7, 0x53, 0xc7, 0xa4, 0xc4, 0x96, 0x8e, 0xf0, 0x31, 0xcc, 0x04, 0xc4, 0x75,
	0xb8, 0x3c, 0xdb, 0xa4, 0xa6, 0x5c, 0xfc, 0xe9, 0xb8, 0xb3, 0x6d, 0x52, 0x13, 0xff, 0x02, 0xe6,
	0x43, 0xe2, 0x12, 0x8b, 0x12, 0x5b, 0xee, 0x0f, 0x76, 0x58, 0x5a, 0x32, 0x73, 0xc3, 0x71, 0x60,
	0xe5, 0xfb, 0xa2, 0xc5, 0x28, 0x5b, 0x4b, 0x49, 0x44, 0x4d, 0x3b, 0x79, 0xfe, 0x86, 0x63, 0x41,
	0x69, 0x7f, 0x46, 0xbc, 0x70, 0x6e, 0x21, 0xbe, 0x96, 0x15, 0xcf, 0x1d, 0x3b, 0x2f, 0x3e, 0xed,
	0xcc, 0x8a, 0x4f, 0xfb, 0xf1, 0x2e, 0x2c, 0x98, 0x67, 0xa6, 0xe3, 0x2a, 0x9b, 0x67, 0xe0, 0xdb,
	0x84, 0x9d, 0xe1, 0xb5, 0x3b, 0x53, 0x9b, 0x37, 0xd6, 0xf3, 0x29, 0x96, 0x3e, 0x97, 0xe0, 0x93,
	0xbe, 0x10, 0x37, 0x93, 0x0d, 0x18, 0x90, 0x81, 0x4f, 0x89, 0xd1, 0x77, 0x62, 0x77, 0x91, 0x3b,
	0x4f, 0xe7, 0xfd, 0x7b, 0x8e, 0xad, 0xfd, 0x77, 0x05, 0xe6, 0x12, 0x5b, 0x3b, 0xbe, 0xb7, 0xef,
	0x39, 0x3c, 0xaf, 0xbc, 0x92, 0xb5, 0xf7, 0x60, 0x51, 0x26, 0x08, 0x59, 0x73, 0x87, 0xcb, 0xd5,
	0xb5, 0x5a, 0xb1, 0xbd, 0xf5, 0xf9, 0x84, 0x23, 0xed, 0x0c, 0xb3, 0x92, 0x14, 0xcb, 0xb2, 0xe4,
	0xa7, 0x56, 0x6c, 0x5a, 0x45, 0x52, 0xda, 0x99, 0xcd, 0x67, 0x94, 0xe9, 0xd7, 0xb3, 0xf9, 0x4c,
	0x6a, 0x80, 0x7f, 0xaf, 0xc0, 0xb2, 0x6a, 0x80, 0x0e, 0x91, 0xe7, 0x32, 0xb3, 0x42, 0x13, 0xc6,
	0x2d, 0xde, 0x90, 0x37, 0x23, 0xbc, 0x3e, 0xe2, 0x97, 0xba, 0x44, 0xe0, 0xe7, 0xb0, 0x94, 0xc4,
	0xd3, 0x24, 0xd5, 0x11, 0xcc, 0xcc, 0xfb, 0xa6, 0x36, 0x97, 0xd6, 0x8b, 0x13, 0x00, 0x7d, 0x21,
	0x2c, 0xcc, 0x0b, 0xf6, 0x61, 0x61, 0x54, 0xa0, 0x29, 0xf3, 0xc1, 0xa9, 0xcd, 0x85, 0xf5, 0xa2,
	0xd4, 0x54, 0x9f, 0x0b, 0x47, 0x3b, 0xb5, 0x9b, 0xb0, 0xa4, 0xce, 0xb1, 0xe5, 0x0f, 0x86, 0x2e,
	0xa1, 0xfc, 0x66, 0xf1, 0x8f, 0x15, 0xc0, 0xe2, 0x66, 0xc1, 0xd7, 0x83, 0xad, 0x2b, 0x9b, 0xf9,
	0x32, 0x4c, 0xc8, 0x40, 0x2f, 0xd3, 0xf4, 0xb8, 0x89, 0xb7, 0x61, 0xac, 0xd0, 0xe9, 0xaf, 0xb2,
	0xa7, 0x04, 0x27, 0xbe, 0x0d, 0xc0, 0x7f, 0x08, 0xcf, 0xaa, 0xf3, 0x2b, 0xe2, 0x24, 0xef, 0xe1,
	0x6e, 0xc5, 0xef, 0x2e, 0xe2, 0x96, 0x7e, 0x2e, 0x33, 0x81, 0xb4, 0x83, 0x5d, 0xe9, 0x93, 0x23,
	0x68, 0x5c, 0x5c, 0xe9, 0xe3, 0xb6, 0x36, 0x07, 0x37, 0x5a, 0x1d, 0xea, 0x0f, 0xd5, 0xa9, 0x68,
	0x7f, 0x97, 0xcc, 0x90, 0xfb, 0x49, 0xc1, 0x0c, 0x2b, 0x25, 0x33, 0xac, 0xfe, 0xf6, 0xdb, 0xba,
	0x70, 0x86, 0xb5, 0xfc, 0x0c, 0x93, 0x9b, 0x91, 0xc8, 0x94, 0x46, 0x6e, 0x46, 0x62, 0xd2, 0xb2,
	0x95, 0xcc, 0x4a, 0x1d, 0xbe, 0xf6, 0x14, 0xe6, 0x5b, 0xfc, 0x88, 0x3e, 0x30, 0x29, 0xb3, 0x4b,
	0x7c, 0x21, 0xbc, 0x0d, 0x20, 0x0e, 0xf7, 0x81, 0x19, 0x9c, 0xca, 0x99, 0x4d, 0xf2, 0x9e, 0x43,
	0x33, 0x38, 0x65, 0x9a, 0x2d, 0xdf, 0xf5, 0x03, 0x99, 0x0e, 0x8a, 0x86, 0xf6, 0xeb, 0x4a, 0x2c,
	0xed, 0xd0, 0x8f, 0x42, 0x72, 0xe8, 0x33, 0x2f, 0x29, 0x92, 0x56, 0xc9, 0x4a, 0xfb, 0x08, 0xa6,
	0xdf, 0x1a, 0x1e, 0xcb, 0x6e, 0x5c, 0xe7, 0x9d, 0x2c, 0x9d, 0x54, 0xf5, 0xa9, 0xb7, 0xcf, 0x92,
	0x2e, 0x06, 0x39, 0x57, 0x21, 0x35, 0x01, 0x39, 0x57, 0x20, 0xb3, 0x50, 0xb5, 0xdf, 0xca, 0x7b,
	0x4a, 0xd5, 0x7e, 0xcb, 0xdb, 0x62, 0xe1, 0x59, 0xfb, 0x5c, 0xfb, 0x43, 0x16, 0xa3, 0xd2, 0xd1,
	0x7d, 0xdd, 0x27, 0xc4, 0xbd, 0xc2, 0xe0, 0x8e, 0x60, 0xd2, 0x76, 0x02, 0x62, 0xc9, 0x93, 0xbe,
	0x7a, 0x67, 0x76, 0x73, 0x35, 0x5e, 0xca, 0x54, 0x50, 0x3b, 0x86, 0x6c, 0x2d, 0x24, 0x6b, 0x9a,
	0x52, 0x5f, 0x0e, 0xf5, 0x54, 0x88, 0xf6, 0x0e, 0xb0, 0x32, 0x8e, 0xb6, 0xff, 0xe6, 0x2a, 0x36,
	0xda, 0x85, 0xf1, 0x93, 0x88, 0xd2, 0x64, 0x0c, 0x73, 0x99, 0x31, 0xec, 0x70, 0x92, 0x92, 0xd7,
	0x2b, 0xbd, 0x07, 0xa4, 0x4b, 0x75, 0xc9, 0xac, 0xbd, 0x05, 0xa4, 0xe8, 0x7e, 0x39, 0xfc, 0xff,
	0xd3, 0x7c, 0x18, 0x6b, 0x7e, 0x4a, 0xce, 0xaf, 0x38, 0xe7, 0x15, 0x68, 0x84, 0x96, 0xc9, 0xd2,
	0x01, 0x22, 0xc3, 0x47, 0xd2, 0xd6, 0x9e, 0xc2, 0x6c, 0x22, 0xee, 0x4a, 0xd3, 0xb8, 0x5c, 0xd8,
	0x8c, 0x10, 0x76, 0x4c, 0xde, 0xd2, 0x2b, 0xc8, 0x5a, 0x85, 0x49, 0x4a, 0xde, 0x52, 0x23, 0xa2,
	0xdd, 0x87, 0x5c, 0xd8, 0xa4, 0xde, 0x60, 0x1d, 0x2f, 0x69, 0xf7, 0xa1, 0xa6, 0xc1, 0x74, 0xab,
	0x43, 0xe8, 0xb1, 0x43, 0x5d, 0x5e, 0x4e, 0xc2, 0x50, 0x67, 0x34, 0x79, 0xbd, 0xe7, 0xbf, 0xb5,
	0x17, 0x30, 0xc5, 0x30, 0xfb, 0x96, 0xd8, 0x1f, 0x4a, 0x89, 0x83, 0x79, 0x6b, 0x41, 0x89, 0x83,
	0x75, 0xc7, 0x25, 0x8e, 0x79, 0x18, 0x73, 0x06, 0x66, 0x8f, 0xc8, 0x80, 0x20, 0x1a, 0xda, 0x2b,
	0x98, 0x6d, 0x75, 0xfa, 0xfe, 0x1b, 0x71, 0xf9, 0x65, 0x52, 0xf3, 0xdb, 0xaa, 0xf2, 0xfe, 0x6d,
	0x55, 0x1d, 0xd9, 0x56, 0x1a, 0x82, 0xd9, 0xd6, 0x9e, 0x63, 0x93, 0x44, 0xae, 0xf6, 0x39, 0xcc,
	0xb0, 0xc1, 0xa7, 0x8a, 0x56, 0x61, 0x52, 0xdc, 0xc6, 0x0d, 0xc7, 0xe6, 0xb1, 0xa2, 0xae, 0x37,
	0x44, 0xc7, 0xbe, 0xad, 0x6d, 0x00, 0x6e, 0x3d, 0x89, 0xd1, 0xfb, 0x6c, 0xa8, 0xef, 0x65, 0xf9,
	0x73, 0x1e, 0x6a, 0x7f, 0x2b, 0x9e, 0xd4, 0x84, 0xd5, 0x62, 0x13, 0xd6, 0x32, 0x26, 0x9c, 0x83,
	0xb1, 0xbe, 0x4f, 0x8d, 0x38, 0x5c, 0xd4, 0xfb, 0x3e, 0x7d, 0x1d, 0x77, 0xc6, 0x31, 0x83, 0x75,
	0x7e, 0x93, 0x1a, 0x7b, 0x5c, 0x35, 0x76, 0x1b, 0xe6, 0x5b, 0x22, 0x8e, 0xf2, 0x32, 0x4a, 0xb0,
	0xef, 0x75, 0x7d, 0xb9, 0xd6, 0x4a, 0x29, 0x87, 0xff, 0x66, 0x27, 0x44, 0x9c, 0xe9, 0x8a, 0xb1,
	0xc5, 0x4d, 0xad, 0x19, 0x4b, 0xe1, 0x29, 0xef, 0xa5, 0x52, 0xb4, 0x59, 0x98, 0x6e, 0xbd, 0x88,
	0x1c, 0x2a, 0xab, 0xa3, 0xda, 0x5d, 0x40, 0xad, 0x36, 0x61, 0xc7, 0xef, 0x15, 0xd7, 0xe1, 0x00,
	0x6e, 0x32, 0x9b, 0x16, 0x17, 0x0f, 0xee, 0xe6, 0x32, 0x94, 0xd2, 0x24, 0x43, 0xc2, 0xb4, 0x4f,
	0x01, 0x98, 0xb4, 0x17, 0x7e, 0x87, 0x29, 0x5e, 0x82, 0x89, 0x28, 0x24, 0xc6, 0x77, 0x7e, 0xc8,
	0xf9, 0x1b, 0xfa, 0x78, 0x14, 0x92, 0x17, 0x7e, 0xa8, 0xfd, 0x4d, 0x85, 0xdd, 0xc8, 0x08, 0x3d,
	0x36, 0x83, 0x1e, 0xa1, 0xc9, 0x05, 0x9c, 0xf1, 0x64, 0x4a, 0x8b, 0xf2, 0x80, 0x49, 0x4b, 0x8b,
	0xcb, 0x30, 0x11, 0x10, 0x33, 0xf4, 0xbd, 0x50, 0x1e, 0x31, 0x71, 0x13, 0xdf, 0x85, 0xb9, 0xa2,
	0x62, 0x81, 0xac, 0x32, 0x74, 0x47, 0xab, 0x04, 0xf7, 0x61, 0xa1, 0xb8, 0x3a, 0x20, 0xab, 0x7d,
	0xdd, 0x82, 0xb2, 0x80, 0x76, 0x0f, 0xe6, 0xd3, 0x71, 0xcb, 0x9b, 0xbf, 0x3c, 0xee, 0x65, 0x99,
	0x80, 0x8f, 0x79, 0x4c, 0x8f, 0x9b, 0xda, 0x3a, 0xe0, 0x96, 0xbc, 0x99, 0xef, 0xf2, 0xec, 0xd8,
	0x96, 0x78, 0x91, 0x2b, 0xdb, 0xd2, 0x32, 0x71, 0x53, 0xdb, 0x00, 0xc4, 0x34, 0x3c, 0x31, 0x07,
	0x03, 0x53, 0x37, 0x07, 0x71, 0x08, 0xeb, 0xb1, 0xb6, 0x11, 0x98, 0x83, 0xa1, 0x2c, 0x7a, 0x4f,
	0xf6, 0x62, 0x84, 0xf6, 0x0a, 0xae, 0x33, 0x96, 0x6d, 0x8b, 0x3a, 0x67, 0x0e, 0x3d, 0x67, 0x1c,
	0x2d, 0x68, 0x98, 0xb2, 0x29, 0xcb, 0x3e, 0x28, 0xc9, 0xa4, 0x64, 0xbf, 0x72, 0x22, 0xc5, 0x5d,
	0xfb, 0xb6, 0x4b, 0xf4, 0x84, 0x51, 0x64, 0x06, 0xbc, 0x9a, 0x28, 0x4b, 0x89, 0x6c, 0x97, 0x3f,
	0x80, 0xc5, 0xd6, 0x2b, 0x27, 0xa0, 0x91, 0xe9, 0xee, 0x91, 0x80, 0x28, 0x55, 0xf9, 0x15, 0x68,
	0xf4, 0xfd, 0x90, 0x7a, 0xe6, 0x80, 0x48, 0x17, 0x4d, 0xda, 0xda, 0xcf, 0xb8, 0x4b, 0x2b, 0x5c,
	0xa6, 0x7d, 0x2e, 0x9e, 0x06, 0x16, 0x5c, 0xc7, 0x22, 0x5e, 0x48, 0x6c, 0xc3, 0x26, 0x67, 0x8e,
	0x45, 0x0c, 0xcb, 0x8f, 0x3c, 0x2a, 0x63, 0xeb, 0x5c, 0x4c, 0x6c, 0x73, 0x5a, 0x8b, 0x91, 0xb4,
	0x16, 0xac, 0xa8, 0xb2, 0x3a, 0x7d, 0x5e, 0x41, 0x61, 0x74, 0x26, 0xf1, 0x53, 0x98, 0x95, 0x82,
	0x4c, 0xdb, 0x0e, 0x48, 0x18, 0xca, 0xb1, 0xcc, 0x88, 0xde, 0x6d, 0xd1, 0x19, 0x2f, 0x64, 0x67,
	0x48, 0x2c, 0xca, 0x56, 0x96, 0xdd, 0x6d, 0x46, 0x16, 0xa6, 0xa2, 0x2e, 0xcc, 0xc7, 0x30, 0xd3,
	0x92, 0x89, 0xfd, 0x7e, 0x5b, 0x6e, 0xc7, 0xe4, 0xee, 0x32, 0xad, 0xf3, 0xdf, 0x7c, 0xb5, 0x85,
	0x4d, 0x59, 0x26, 0x75, 0xe0, 0x0b, 0xcb, 0x2c, 0xc3, 0x84, 0x78, 0xef, 0x61, 0x83, 0xa9, 0x31,
	0xaf, 0x95, 0x4d, 0xed, 0xf7, 0x2b, 0x30, 0xdd, 0xe2, 0xf9, 0xe4, 0x63, 0x16, 0x5a, 0x29, 0xfe,
	0x01, 0x8c, 0xf3, 0x7a, 0x0e, 0xe5, 0x7e, 0x31, 0xbb, 0x39, 0xb3, 0xbe, 0xab, 0x90, 0xb7, 0xf0,
	0xa9, 0xa1, 0xb6, 0x79, 0x52, 0x28, 0x19, 0xb2, 0x89, 0x6d, 0xf5, 0xb2, 0xc4, 0xb6, 0x96, 0x4b,
	0x6c, 0xdf, 0xc0, 0xb4, 0x08, 0x38, 0xe5, 0x83, 0x50, 0xc8, 0x7c, 0x10, 0x4a, 0x3b, 0x33, 0x88,
	0x4c, 0xbc, 0x9d, 0x29, 0x8e, 0xb7, 0x69, 0xee, 0x49, 0x61, 0xaa, 0xc5, 0x77, 0xff, 0xee, 0x19,
	0xf1, 0x28, 0x7e, 0x02, 0x0d, 0xc2, 0x7e, 0xc4, 0x71, 0x4a, 0xc9, 0x8e, 0x53, 0x94, 0x92, 0x53,
	0xf0, 0xb3, 0x99, 0x77, 0xf2, 0x04, 0x5c, 0x9f, 0xe0, 0xdc, 0xfb, 0x36, 0x33, 0x05, 0x75, 0x06,
	0x24, 0xa4, 0x6c, 0xbf, 0x88, 0x53, 0x3d, 0xed, 0xd0, 0x7e, 0x53, 0x8b, 0xd5, 0x76, 0xa8, 0x49,
	0x43, 0x7c, 0x13, 0x1a, 0x7c, 0xb3, 0xc7, 0x6a, 0x67, 0xf4, 0x09, 0xde, 0xde, 0xb7, 0x73, 0x07,
	0x7e, 0x35, 0x7f, 0xe0, 0x7f, 0x02, 0xe3, 0x5c, 0xa5, 0xb8, 0x48, 0x4e, 0x6d, 0x4e, 0xaf, 0x2b,
	0xd3, 0xd1, 0x25, 0x0d, 0xef, 0x25, 0x0f, 0x47, 0xf5, 0x6c, 0xa6, 0xc4, 0xb1, 0xf2, 0x6d, 0x68,
	0x35, 0x99, 0x95, 0xd2, 0x7b, 0x44, 0x3c, 0xdb, 0xf1, 0x7a, 0xc9, 0x6b, 0x51, 0x13, 0x6e, 0x88,
	0x91, 0x86, 0x6c, 0xbe, 0x86, 0x4d, 0x5c, 0x6a, 0xf2, 0x63, 0xa9, 0xaa, 0x5f, 0xef, 0xca, 0x09,
	0x05, 0xb4, 0xcd, 0xba, 0xd9, 0x55, 0x55, 0x60, 0x6d, 0x27, 0x1c, 0xba, 0xe6, 0xb9, 0x44, 0x8f,
	0x73, 0xb4, 0x10, 0xd3, 0x16, 0x14, 0x81, 0x5f, 0x85, 0xc9, 0x21, 0x2f, 0xbf, 0x38, 0x03, 0xc2,
	0x6b, 0x2f, 0x55, 0xbd, 0xc1, 0x3a, 0x8e, 0x9d, 0x01, 0x61, 0xbb, 0x2a, 0xe4, 0x75, 0xb3, 0xb8,
	0x1a, 0xca, 0x6b, 0x2c, 0x55, 0x7d, 0x46, 0xf4, 0xca, 0x48, 0xc8, 0x60, 0xf2, 0x2a, 0x19, 0xc3,
	0x26, 0x05, 0x4c, 0xf4, 0x2a, 0x30, 0xd7, 0xf1, 0x4e, 0x8d, 0x13, 0xd3, 0xb3, 0x85, 0xb7, 0x80,
	0x80, 0xb1, 0xde, 0x9d, 0xb8, 0x13, 0x7f, 0x08, 0x53, 0xf2, 0x09, 0xd5, 0xf5, 0xc3, 0x90, 0x57,
	0x11, 0xab, 0x3a, 0x88, 0xae, 0x03, 0x3f, 0x0c, 0xd9, 0xea, 0x48, 0x73, 0x38, 0xef, 0x08, 0xaf,
	0x18, 0xc6, 0x87, 0x45, 0xc7, 0x79, 0x47, 0xb4, 0xbf, 0xaa, 0xc0, 0x4a, 0xba, 0xce, 0xdb, 0x96,
	0x15, 0x0d, 0x22, 0x97, 0xdd, 0xad, 0x5f, 0x99, 0x6e, 0x44, 0x70, 0x1b, 0x26, 0x43, 0x6a, 0x52,
	0x83, 0x9e, 0x0f, 0x89, 0x74, 0xb7, 0xc5, 0xf5, 0x5d, 0x8e, 0x57, 0xb0, 0x8c, 0x75, 0xeb, 0xfa,
	0xa9, 0xb1, 0x9b, 0x08, 0x7a, 0x7c, 0xd4, 0xd1, 0x1b, 0x8c, 0xf3, 0xf8, 0x7c, 0x48, 0xc4, 0x95,
	0x87, 0x45, 0xac, 0x2a, 0x8f, 0xfb, 0xa2, 0xc1, 0x76, 0xbc, 0x79, 0x46, 0x02, 0x91, 0x8d, 0x55,
	0xef, 0x54, 0xf5, 0xb8, 0xc9, 0xb6, 0x42, 0x48, 0x6d, 0x9b, 0x9c, 0xf1, 0x73, 0xa6, 0xaa, 0xcb,
	0x96, 0xf6, 0x9f, 0x2c, 0xb9, 0x49, 0x9d, 0xf2, 0xc0, 0x11, 0xa1, 0xe3, 0x09, 0x4c, 0xb2, 0xc0,
	0xa2, 0x0e, 0x32, 0x71, 0x1f, 0xc7, 0xeb, 0xb1, 0x28, 0xc3, 0x86, 0xa1, 0x04, 0x73, 0xc7, 0xeb,
	0x25, 0x17, 0x54, 0xbd, 0x61, 0x4b, 0x00, 0xd6, 0x60, 0x8c, 0x8d, 0x59, 0x14, 0x4f, 0x52, 0x4f,
	0xe5, 0xca, 0x74, 0x41, 0xc2, 0x7b, 0x70, 0xc3, 0x4c, 0x67, 0x6e, 0x08, 0xbc, 0xf0, 0xec, 0xd5,
	0xf5, 0x72, 0x4b, 0xea, 0xc8, 0xcc, 0xda, 0x2b, 0xc4, 0x9f, 0xc1, 0x75, 0xd6, 0x0a, 0xa9, 0x91,
	0xec, 0xac, 0x3a, 0xb7, 0xcf, 0x8c, 0xe8, 0x7e, 0x2c, 0xf6, 0x97, 0xf6, 0xb7, 0x95, 0x6c, 0x69,
	0x36, 0x0c, 0x1d, 0xdf, 0x13, 0x22, 0x36, 0xe5, 0xf9, 0xcc, 0x17, 0xdf, 0x18, 0x92, 0xc0, 0x22,
	0x1e, 0x65, 0x06, 0x15, 0xf9, 0xaa, 0x70, 0x6e, 0xe6, 0x06, 0x47, 0x09, 0x09, 0x7f, 0x1f, 0x96,
	0xa4, 0x9d, 0x8d, 0xe4, 0xa5, 0xdc, 0x19, 0x10, 0x63, 0x10, 0xca, 0x14, 0x76, 0x5e, 0x92, 0xe3,
	0x77, 0x4e, 0x67, 0x40, 0x0e, 0x43, 0x7c, 0x1f, 0x16, 0xc5, 0x2a, 0x8c, 0x70, 0x89, 0xfb, 0xe4,
	0x9c, 0xa0, 0x66, 0x98, 0xb4, 0xbb, 0x30, 0xd3, 0x6a, 0x93, 0x93, 0xa8, 0xd7, 0x8e, 0xc4, 0x29,
	0xfd, 0x01, 0x40, 0x68, 0x05, 0x84, 0x78, 0x61, 0xdf, 0xa7, 0xf2, 0x54, 0x50, 0x7a, 0xb4, 0xaf,
	0x60, 0xa2, 0x75, 0xe0, 0xf7, 0xe2, 0xdc, 0x5f, 0x2c, 0x28, 0xcf, 0x28, 0xd9, 0x6f, 0xe6, 0x32,
	0x03, 0x12, 0x86, 0x6c, 0x86, 0x55, 0x7e, 0x62, 0xc5, 0x4d, 0xed, 0xf7, 0x60, 0x86, 0x31, 0xbe,
	0x1c, 0xba, 0xbe, 0xc9, 0xb3, 0x87, 0xaf, 0x14, 0x76, 0x1e, 0x9d, 0x0f, 0xfc, 0xde, 0x63, 0xc7,
	0x25, 0xdc, 0x13, 0xe6, 0x4f, 0x8d, 0xb8, 0x2d, 0x0e, 0xef, 0x1d, 0xdf, 0xa7, 0x52, 0x47, 0x7c,
	0x64, 0xd5, 0xd2, 0x23, 0xab, 0xf9, 0xd7, 0x15, 0x98, 0x95, 0xae, 0x23, 0x8b, 0xec, 0xf8, 0x13,
	0x48, 0x2b, 0x10, 0xb2, 0x6f, 0xdf, 0x3b, 0x33, 0x5d, 0xc7, 0x46, 0xff, 0x13, 0xff, 0x55, 0xf0,
	0x6d, 0xb8, 0x99, 0x47, 0x25, 0x9f, 0x49, 0xa0, 0x6b, 0x78, 0x75, 0x54, 0x48, 0xcb, 0xf7, 0x68,
	0xe0, 0xbb, 0xa8, 0x82, 0x6f, 0xc2, 0x42, 0x9e, 0xc8, 0x57, 0x1d, 0x55, 0xf1, 0x27, 0xb0, 0x36,
	0x22, 0xd6, 0xa4, 0x66, 0x8a, 0x0a, 0x28, 0xaa, 0x35, 0x7f, 0x05, 0x4b, 0x12, 0x93, 0xe8, 0x3c,
	0x14, 0xe6, 0xc2, 0x1f, 0xc1, 0xed, 0x44, 0x40, 0xd1, 0x07, 0x22, 0xa8, 0x82, 0x35, 0xf8, 0xa0,
	0x0c, 0x22, 0x9e, 0xf0, 0x51, 0xb5, 0xf9, 0xcf, 0x73, 0xb0, 0x10, 0x0f, 0x43, 0x8c, 0x3b, 0x56,
	0xf0, 0x3b, 0xf0, 0x69, 0x3a, 0x42, 0x41, 0x2a, 0xfc, 0x54, 0x01, 0x55, 0x70, 0x13, 0x3e, 0x7b,
	0x1f, 0x34, 0x56, 0x88, 0x3f, 0x86, 0x0f, 0xf3, 0xd8, 0x5c, 0xe9, 0x14, 0xd5, 0xf0, 0x1d, 0xf8,
	0xe4, 0x12, 0x50, 0x52, 0x5e, 0x44, 0x75, 0xfc, 0x3d, 0xf8, 0xf8, 0x12, 0x64, 0x5c, 0xa4, 0x43,
	0x63, 0x45, 0x7a, 0x73, 0x5f, 0x85, 0xa0, 0xf1, 0x22, 0x50, 0xee, 0xe3, 0x0d, 0x34, 0x91, 0x5d,
	0x3a, 0x09, 0xca, 0x7d, 0x55, 0x80, 0x1a, 0x59, 0xbf, 0x11, 0xa8, 0xe4, 0x6b, 0x04, 0x34, 0x59,
	0x34, 0x6e, 0xe3, 0x60, 0xbb, 0x73, 0x6c, 0x74, 0x76, 0x8f, 0x5f, 0x1e, 0x19, 0x87, 0xbb, 0x9d,
	0xce, 0xf6, 0x93, 0x5d, 0x74, 0x3d, 0xb3, 0x88, 0xaa, 0xb6, 0x24, 0xfa, 0xa1, 0xcd, 0x8c, 0x2f,
	0x24, 0x18, 0xa5, 0x82, 0x87, 0xee, 0x97, 0x8a, 0x49, 0xea, 0x61, 0xe8, 0x41, 0x99, 0x98, 0x14,
	0xf2, 0xfd, 0xa2, 0xb9, 0xe7, 0x4b, 0x5e, 0xe8, 0xcb, 0x22, 0x33, 0xe6, 0x4a, 0x4f, 0xe8, 0xab,
	0xa2, 0x11, 0x65, 0xeb, 0x42, 0xe8, 0x21, 0x5e, 0x83, 0x5b, 0xe5, 0x98, 0x97, 0x43, 0xf4, 0x83,
	0x52, 0x84, 0xac, 0xb3, 0xa0, 0x2d, 0xfc, 0x01, 0xac, 0x94, 0x21, 0x5e, 0x0e, 0xd1, 0x0f, 0xf1,
	0x06, 0x7c, 0x51, 0x48, 0x7f, 0x62, 0x0e, 0xc8, 0xd0, 0xb4, 0xb7, 0x29, 0x35, 0xad, 0x3e, 0xb1,
	0x8d, 0xe7, 0x3b, 0x9d, 0xe7, 0x07, 0xbb, 0xc7, 0xbb, 0xe8, 0x47, 0x78, 0x1d, 0x9a, 0x97, 0xb1,
	0xf0, 0xbc, 0x28, 0xc5, 0xff, 0xf8, 0x7d, 0x2a, 0xda, 0x24, 0xaf, 0xe2, 0x27, 0x45, 0xa3, 0x4e,
	0xeb, 0x1b, 0xe8, 0xa7, 0x45, 0xf4, 0xb4, 0x4e, 0x81, 0x1e, 0x15, 0xb9, 0x5f, 0x52, 0x53, 0x40,
	0xdb, 0x45, 0xc6, 0xcf, 0x96, 0x29, 0xd0, 0x4e, 0xa1, 0xcb, 0x64, 0x31, 0xad, 0x22, 0xf3, 0xab,
	0xf7, 0x72, 0xd4, 0xc6, 0x9f, 0x81, 0x56, 0x20, 0x25, 0x77, 0x25, 0x46, 0xbb, 0xa5, 0x9e, 0xa5,
	0x94, 0x66, 0xd1, 0xe3, 0xa2, 0x48, 0x23, 0x8d, 0xa8, 0x47, 0x83, 0x13, 0x97, 0xa4, 0x26, 0x7c,
	0x52, 0x34, 0xfe, 0xec, 0x15, 0x15, 0xfd, 0x0c, 0x3f, 0x80, 0x7b, 0x85, 0x5a, 0xe5, 0x6f, 0x97,
	0x04, 0xa3, 0xeb, 0xff, 0xb4, 0x74, 0x3d, 0x53, 0x2e, 0x16, 0xe6, 0x95, 0xc1, 0x1c, 0xe0, 0xbb,
	0xf0, 0xbb, 0x79, 0x96, 0xe3, 0xc0, 0xe9, 0xf5, 0x58, 0x68, 0x19, 0x52, 0xc7, 0x3a, 0x8a, 0xdc,
	0x50, 0x61, 0x38, 0xbc, 0xc2, 0xc8, 0x46, 0xdd, 0xe6, 0x59, 0x91, 0x15, 0xf3, 0x95, 0x1a, 0x74,
	0x84, 0x6f, 0xc1, 0x72, 0xd1, 0x9a, 0x38, 0xd4, 0x25, 0xe8, 0x45, 0xf6, 0x48, 0x4b, 0xa8, 0xfb,
	0x96, 0xef, 0x21, 0x1d, 0x7f, 0x08, 0xab, 0x79, 0xa2, 0x52, 0x98, 0x41, 0x1d, 0xbc, 0x02, 0x8b,
	0x05, 0xdc, 0x2f, 0xfc, 0x0e, 0xfa, 0x1a, 0xff, 0x08, 0x1e, 0xbe, 0x67, 0x4e, 0x5f, 0x3b, 0x01,
	0x71, 0x49, 0x18, 0x1e, 0x05, 0x24, 0x24, 0x9e, 0xa5, 0x58, 0xe4, 0x75, 0x91, 0xaf, 0xa9, 0x25,
	0x04, 0xf4, 0x4d, 0xe9, 0xec, 0x95, 0x0a, 0x13, 0xfa, 0xf9, 0x15, 0x2c, 0xcb, 0x57, 0x6f, 0x6f,
	0xbf, 0x9d, 0x6a, 0xff, 0x45, 0x61, 0xd4, 0xcf, 0x95, 0x48, 0xd0, 0x2f, 0xf1, 0x43, 0x78, 0x50,
	0xb4, 0x67, 0x12, 0xc9, 0x47, 0xa6, 0x13, 0x38, 0x5e, 0x4f, 0x3a, 0x60, 0x2a, 0xdf, 0xc0, 0x5f,
	0xc1, 0xfd, 0xab, 0x70, 0x8a, 0x1b, 0x53, 0xca, 0xf8, 0xab, 0x22, 0x95, 0xd2, 0xb3, 0x14, 0x57,
	0x61, 0xa7, 0xbf, 0xe7, 0x11, 0x4b, 0xe1, 0x34, 0x8b, 0xd6, 0x52, 0x29, 0xb0, 0xa0, 0x13, 0xfc,
	0x39, 0xdc, 0x29, 0x00, 0x14, 0xd6, 0xc6, 0x90, 0x55, 0x78, 0x7c, 0xa8, 0x75, 0x15, 0x64, 0xe3,
	0x4d, 0x58, 0xbf, 0x74, 0x92, 0x1d, 0x42, 0xa9, 0xe3, 0xf5, 0xc2, 0x74, 0x94, 0xa4, 0x28, 0x80,
	0x8c, 0x56, 0x66, 0x50, 0xb7, 0x78, 0xf1, 0xb3, 0xb5, 0x18, 0xd4, 0x2b, 0x0a, 0x20, 0xc5, 0x55,
	0x16, 0xd4, 0x2f, 0x59, 0xf2, 0x4c, 0x31, 0x05, 0x39, 0x45, 0x91, 0x36, 0x29, 0xa0, 0xa0, 0x6f,
	0x8b, 0x0e, 0x7a, 0x7e, 0xf0, 0x1e, 0x3a, 0x56, 0xe0, 0x0f, 0xfb, 0xbe, 0xc7, 0x9f, 0x81, 0xd1,
	0x69, 0x61, 0xa0, 0xa4, 0xfe, 0x30, 0x87, 0x73, 0x8b, 0xf4, 0x25, 0xd5, 0x7b, 0x34, 0x68, 0x3e,
	0x49, 0xf2, 0x5c, 0xf9, 0x21, 0x25, 0x5e, 0x86, 0xc2, 0x8f, 0x2b, 0x73, 0xc9, 0xab, 0xa4, 0xb4,
	0xa2, 0x20, 0x20, 0x1e, 0x45, 0x95, 0xe6, 0xdf, 0x57, 0xe0, 0xc6, 0xc8, 0x0b, 0x64, 0x86, 0x25,
	0xfb, 0x30, 0x89, 0xae, 0x65, 0xf6, 0xbe, 0xf2, 0x5c, 0x6d, 0xbe, 0x41, 0xd9, 0x3c, 0x3a, 0xa5,
	0xbd, 0xf2, 0x83, 0x13, 0x87, 0xe5, 0xc3, 0xc5, 0x72, 0x9f, 0x0f, 0xa3, 0x10, 0xd5, 0x4a, 0xe4,
	0x1e, 0x1e, 0xdd, 0x47, 0xf5, 0x12, 0xda, 0xf6, 0x76, 0x0b, 0x8d, 0x35, 0xff, 0x2b, 0x9d, 0x82,
	0xf2, 0x85, 0x40, 0x66, 0xd6, 0x99, 0x97, 0xc7, 0xdc, 0x14, 0x94, 0x77, 0x72, 0x3e, 0x85, 0x62,
	0xda, 0xab, 0xa3, 0x87, 0xa8, 0x5a, 0x4a, 0xfb, 0x01, 0xaa, 0x95, 0x28, 0xdc, 0xdb, 0xfc, 0xf2,
	0x01, 0xaa, 0x97, 0x11, 0x77, 0x5f, 0xb5, 0xd0, 0x58, 0x26, 0x50, 0xa7, 0xc4, 0xe7, 0xfa, 0xce,
	0xeb, 0x0d, 0x34, 0x7e, 0x09, 0x75, 0x13, 0x4d, 0x34, 0xbf, 0x83, 0xe5, 0xb2, 0x4f, 0xe0, 0x32,
	0x2e, 0x21, 0xa9, 0x8f, 0x4d, 0x9e, 0xca, 0xab, 0x32, 0x73, 0x9f, 0xc7, 0xa1, 0x6a, 0x66, 0x11,
	0x63, 0x2a, 0x31, 0x23, 0xea, 0x74, 0x23, 0x17, 0xd5, 0x9a, 0xaf, 0x13, 0xdf, 0x8b, 0x6b, 0x20,
	0xdf, 0x53, 0xd2, 0x14, 0xd9, 0xb7, 0x1d, 0x51, 0xdf, 0x26, 0x94, 0x58, 0xb4, 0xec, 0x9a, 0x25,
	0x81, 0x2f, 0x3d, 0xd7, 0x19, 0x38, 0x94, 0xd8, 0xe8, 0x5a, 0xf3, 0x5b, 0xc0, 0xa3, 0xe5, 0x80,
	0xcc, 0xfd, 0x4a, 0x2d, 0x08, 0xa0, 0x6b, 0x79, 0x52, 0x9a, 0xc3, 0x56, 0x32, 0xa9, 0x93, 0xe3,
	0xf5, 0x72, 0x1b, 0xac, 0xda, 0xfc, 0xa7, 0x4a, 0xa2, 0x4c, 0x79, 0xce, 0xcb, 0x58, 0x26, 0xf7,
	0xcc, 0x97, 0x73, 0x6f, 0x85, 0xaa, 0x3b, 0xbd, 0x3e, 0x45, 0xd5, 0x8c, 0x4e, 0x85, 0x7c, 0xe8,
	0xd8, 0xb6, 0x4b, 0x10, 0xca, 0xb8, 0x8f, 0x42, 0x7f, 0xbd, 0x81, 0xd6, 0x4a, 0x69, 0x9b, 0xe8,
	0x11, 0x5e, 0x53, 0x42, 0xb8, 0x42, 0x7b, 0xe9, 0x9d, 0x7a, 0x2c, 0xfb, 0xbd, 0x58, 0x6b, 0xfe,
	0x69, 0x05, 0x56, 0xca, 0x1f, 0x6c, 0x33, 0x76, 0x52, 0x9f, 0x6c, 0xd1, 0xdb, 0xcc, 0xfd, 0x58,
	0x61, 0x65, 0x72, 0xff, 0x28, 0x5d, 0xb8, 0xd5, 0x42, 0x14, 0xb7, 0x4a, 0x6d, 0xd4, 0x66, 0x9c,
	0x28, 0x8c, 0x52, 0x6f, 0xfe, 0xe5, 0x78, 0x72, 0xbd, 0x95, 0x49, 0x9c, 0x08, 0x64, 0x6c, 0x69,
	0xd5, 0xc3, 0x5e, 0x25, 0xc6, 0x37, 0xf4, 0x6b, 0x99, 0xd3, 0x4b, 0x45, 0xb4, 0x8f, 0x4c, 0xfb,
	0xe5, 0x10, 0x55, 0x32, 0xe7, 0x51, 0x1e, 0xc0, 0x67, 0x51, 0xbd, 0x14, 0xc2, 0xa7, 0x50, 0xcf,
	0x64, 0x91, 0x79, 0x88, 0x98, 0x48, 0x23, 0xb3, 0xba, 0x2a, 0x46, 0x5c, 0xe3, 0x51, 0xc6, 0x39,
	0x54, 0xfa, 0x8e, 0x69, 0x9d, 0xa2, 0xb5, 0x52, 0x15, 0x6c, 0x04, 0xc7, 0xfd, 0x68, 0x70, 0x82,
	0x1e, 0xe1, 0x4f, 0x94, 0x2b, 0x95, 0x8a, 0xe1, 0x43, 0x10, 0xa0, 0x8b, 0x0a, 0xfe, 0x0c, 0x3e,
	0x2a, 0x95, 0xd4, 0xe9, 0xfb, 0x91, 0x6b, 0x93, 0x00, 0x5d, 0x54, 0xf1, 0xf7, 0x94, 0xb3, 0x66,
	0x44, 0x5a, 0x0a, 0xac, 0xe3, 0x0f, 0x4b, 0x66, 0xf6, 0x24, 0x72, 0x6c, 0x82, 0x2e, 0x1a, 0x78,
	0x55, 0x71, 0x4e, 0x15, 0xb0, 0x8d, 0x2e, 0xd6, 0x4a, 0x89, 0x3b, 0xe8, 0xe2, 0x11, 0xbe, 0x55,
	0x42, 0x7c, 0x8d, 0x2e, 0x2e, 0x2a, 0xa5, 0xd4, 0x6f, 0xd0, 0xc5, 0x45, 0x15, 0x7f, 0x5a, 0x62,
	0x8d, 0xc4, 0x62, 0x4c, 0x48, 0xfd, 0xfd, 0x30, 0x26, 0xad, 0x81, 0x3f, 0x53, 0xce, 0xf9, 0x62,
	0xdb, 0x32, 0x71, 0xe8, 0x0a, 0x38, 0x26, 0x6f, 0xad, 0x14, 0xc7, 0xd5, 0x8a, 0xd4, 0x0c, 0x5d,
	0x5c, 0x3c, 0xc2, 0x77, 0x4a, 0x56, 0x4b, 0xc8, 0x4b, 0x80, 0x17, 0x95, 0xe6, 0x1f, 0x57, 0x93,
	0x9d, 0x92, 0xdc, 0x99, 0x0e, 0x78, 0x70, 0x0c, 0x32, 0x3e, 0x9c, 0x10, 0x3b, 0xae, 0xff, 0x46,
	0x7e, 0x50, 0x99, 0xdb, 0x09, 0x59, 0x88, 0xef, 0x9d, 0x91, 0x80, 0x05, 0x28, 0x75, 0xbf, 0x65,
	0x20, 0x22, 0x77, 0x46, 0xf5, 0x72, 0x21, 0xb2, 0xee, 0x81, 0x1a, 0xe5, 0x42, 0xc4, 0xf5, 0x03,
	0xa1, 0xcc, 0x4e, 0xc9, 0x20, 0xd8, 0xfc, 0xd1, 0x5a, 0xb9, 0x12, 0x59, 0xc4, 0x47, 0x8f, 0x9a,
	0x04, 0xae, 0xe7, 0x1e, 0xf4, 0x32, 0x41, 0x4c, 0x7d, 0xe5, 0xcb, 0x95, 0xe0, 0x62, 0x12, 0xd7,
	0x55, 0xcd, 0x04, 0xa7, 0x98, 0x24, 0xbf, 0x7f, 0x45, 0xb5, 0x66, 0x3b, 0x39, 0x04, 0xf8, 0xd7,
	0x42, 0xb2, 0x28, 0xb6, 0x04, 0x73, 0x69, 0x49, 0xcd, 0xa4, 0xe6, 0x11, 0x2f, 0xd3, 0xa3, 0x0a,
	0x5e, 0x80, 0x1b, 0x19, 0xc2, 0x81, 0x1f, 0x52, 0x54, 0x6d, 0xda, 0x30, 0xad, 0xbe, 0x64, 0xe1,
	0x45, 0x28, 0x78, 0xdb, 0x42, 0xd7, 0x64, 0xc5, 0x44, 0xe9, 0xdf, 0xf8, 0x72, 0xc7, 0xa1, 0x07,
	0x0e, 0xa5, 0x2e, 0xd9, 0xf5, 0x6c, 0xc7, 0xf4, 0x50, 0x45, 0x2a, 0x57, 0x40, 0x8f, 0x5d, 0xdf,
	0x64, 0x5a, 0xbe, 0x86, 0x69, 0xf5, 0xa9, 0x4a, 0x6a, 0xc9, 0x3d, 0x5e, 0xa1, 0x6b, 0xa3, 0xfd,
	0xdf, 0xbc, 0xda, 0xd8, 0x4c, 0x04, 0x2b, 0xfd, 0xdb, 0x96, 0x45, 0x5c, 0x54, 0x6d, 0xfe, 0x5b,
	0x05, 0xe6, 0xe4, 0xa4, 0x78, 0xe1, 0x32, 0x36, 0x83, 0x1a, 0xd0, 0x38, 0x21, 0x7d, 0x0f, 0x0a,
	0x51, 0xf6, 0x4c, 0xe0, 0xe4, 0xa4, 0x82, 0x9c, 0x33, 0xbb, 0x78, 0x04, 0xf0, 0x7b, 0x52, 0x2e,
	0xaa, 0x65, 0x5c, 0x28, 0xa6, 0x8a, 0x92, 0xf0, 0x0e, 0xe9, 0x39, 0x1e, 0xaa, 0x67, 0xe2, 0x7e,
	0x16, 0xc1, 0xcf, 0xef, 0x6c, 0xa5, 0x2f, 0x0b, 0x48, 0xca, 0x81, 0xe3, 0xcd, 0x3f, 0x18, 0x4b,
	0x52, 0x43, 0xe5, 0x69, 0x4e, 0x1d, 0x5b, 0xee, 0xd9, 0x2d, 0x97, 0x2e, 0x2b, 0x54, 0x76, 0xb5,
	0xa9, 0x94, 0x10, 0x75, 0x62, 0x9d, 0xe5, 0xf2, 0xa6, 0x94, 0xf8, 0x22, 0x22, 0x11, 0xb1, 0x51,
	0x2d, 0xb3, 0x2b, 0x52, 0xf2, 0x9e, 0xe9, 0xd9, 0x2e, 0xb1, 0x51, 0x3d, 0x33, 0xac, 0x74, 0xb4,
	0x62, 0x58, 0xd9, 0xf9, 0xa6, 0x54, 0xb9, 0xfb, 0x85, 0xd5, 0xc6, 0x47, 0x37, 0x96, 0x0a, 0xda,
	0xf5, 0x6c, 0x34, 0x51, 0x26, 0x47, 0x84, 0x08, 0x21, 0xa7, 0x51, 0x26, 0x47, 0x80, 0x98, 0x9c,
	0xc9, 0xcc, 0x71, 0x96, 0x42, 0x44, 0x1c, 0x11, 0x62, 0x60, 0x34, 0x52, 0x28, 0x18, 0x26, 0x65,
	0x2a, 0x63, 0x4f, 0x65, 0xce, 0xcc, 0xd8, 0xd3, 0x25, 0x44, 0x6e, 0xec, 0x99, 0x12, 0xfd, 0xf2,
	0x5f, 0x7e, 0xb8, 0xfe, 0xd9, 0x12, 0xfd, 0x02, 0xc3, 0xf4, 0x5f, 0x2f, 0x91, 0xa2, 0xba, 0x22,
	0x2a, 0x91, 0x22, 0x30, 0x4c, 0xca, 0x8d, 0x8c, 0xb3, 0xaa, 0xe6, 0x92, 0x7e, 0x88, 0x9b, 0xff,
	0x5a, 0x4d, 0xe2, 0x8c, 0xf2, 0x22, 0x3a, 0xca, 0x97, 0x79, 0x29, 0x45, 0xd7, 0x46, 0xd7, 0x41,
	0x00, 0x64, 0x98, 0x24, 0x76, 0xae, 0x2a, 0xaf, 0x42, 0x02, 0x7f, 0x38, 0x24, 0xb6, 0x8c, 0xda,
	0x2c, 0xb6, 0xa2, 0xea, 0xd5, 0xb0, 0x3c, 0xa6, 0xd5, 0x32, 0x0f, 0x03, 0xa3, 0x58, 0x61, 0x43,
	0x2e, 0xb6, 0x9e, 0x29, 0x20, 0x94, 0x41, 0x5b, 0x7e, 0x10, 0x44, 0xc3, 0x42, 0x47, 0xce, 0xa0,
	0x0f, 0x4c, 0xb6, 0x71, 0x33, 0x97, 0xf2, 0x51, 0x90, 0x4e, 0x42, 0x42, 0xd1, 0x44, 0xf3, 0x2f,
	0xc6, 0x60, 0xa1, 0xf0, 0x91, 0x13, 0xcf, 0x41, 0xfe, 0x99, 0x33, 0xb1, 0x66, 0xd2, 0x29, 0xb7,
	0x45, 0x3b, 0x0a, 0xf8, 0x2b, 0xc2, 0x61, 0x27, 0x39, 0x43, 0x53, 0x88, 0xf0, 0x78, 0x05, 0x12,
	0x9f, 0xa1, 0x09, 0x44, 0x78, 0xb3, 0x82, 0xa8, 0xc9, 0x65, 0x4d, 0x10, 0xfc, 0x5f, 0xbc, 0x14,
	0x40, 0x3d, 0x2f, 0x42, 0x3c, 0x3e, 0x28, 0x88, 0xb1, 0xfc, 0x38, 0xe4, 0xd2, 0x28, 0x90, 0xf1,
	0xbc, 0x10, 0x61, 0x66, 0x05, 0x31, 0x91, 0x17, 0x12, 0xbf, 0x90, 0xa7, 0x90, 0x46, 0x5e, 0x88,
	0xa8, 0xf5, 0x28, 0x88, 0xc9, 0xfc, 0x64, 0xf8, 0x0f, 0x05, 0x00, 0x32, 0xac, 0x25, 0x00, 0xb5,
	0x9c, 0x7b, 0xd8, 0x41, 0x53, 0x32, 0x2a, 0x26, 0x74, 0x76, 0x2c, 0xa7, 0xe4, 0x69, 0xb9, 0x03,
	0x13, 0xb2, 0xee, 0x47, 0x9e, 0x7d, 0x1c, 0x38, 0xc3, 0x14, 0x33, 0x23, 0xef, 0x46, 0x09, 0xe6,
	0x48, 0xbe, 0xe4, 0x1f, 0x76, 0xd0, 0xac, 0xac, 0xbc, 0xe4, 0x6c, 0x99, 0xfc, 0x1f, 0x93, 0x43,
	0x8f, 0x48, 0xd0, 0x21, 0x16, 0xba, 0x9e, 0x07, 0xb6, 0xd4, 0x57, 0x7c, 0x05, 0x88, 0xf2, 0xc0,
	0x03, 0xf5, 0x1d, 0x5f, 0x01, 0xde, 0x90, 0x4e, 0x9a, 0x0e, 0x2b, 0x79, 0xcc, 0x4f, 0x5f, 0x71,
	0x11, 0x6e, 0xfe, 0x12, 0xa6, 0xd5, 0x37, 0x4d, 0x79, 0x2b, 0x1f, 0x79, 0xd5, 0x4c, 0x6e, 0xb3,
	0x19, 0x8a, 0xf0, 0xf4, 0x4a, 0x11, 0x89, 0x9f, 0xb6, 0xa8, 0xba, 0xf3, 0xd5, 0x5e, 0xe5, 0xe7,
	0xf7, 0x7a, 0x0e, 0xed, 0x47, 0x27, 0xeb, 0x96, 0x3f, 0xb8, 0xbb, 0x71, 0xff, 0xf4, 0x6e, 0xcf,
	0xff, 0x82, 0xff, 0xcb, 0xe1, 0x17, 0x01, 0x09, 0xfd, 0x28, 0xb0, 0x48, 0x78, 0x97, 0xff, 0xa3,
	0xf9, 0x49, 0xd4, 0xbd, 0xcb, 0x09, 0x17, 0x95, 0x6b, 0xff, 0x1b, 0x00, 0x00, 0xff, 0xff, 0x04,
	0xb7, 0xa3, 0x0b, 0x83, 0x3e, 0x00, 0x00,
}
