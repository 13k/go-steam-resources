// Code generated by protoc-gen-go. DO NOT EDIT.
// source: steamnetworkingsockets_messages_certs.proto

package steam // import "github.com/13k/go-steam-resources/protobuf/steam"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type CMsgSteamDatagramCertificate_EKeyType int32

const (
	CMsgSteamDatagramCertificate_INVALID CMsgSteamDatagramCertificate_EKeyType = 0
	CMsgSteamDatagramCertificate_ED25519 CMsgSteamDatagramCertificate_EKeyType = 1
)

var CMsgSteamDatagramCertificate_EKeyType_name = map[int32]string{
	0: "INVALID",
	1: "ED25519",
}
var CMsgSteamDatagramCertificate_EKeyType_value = map[string]int32{
	"INVALID": 0,
	"ED25519": 1,
}

func (x CMsgSteamDatagramCertificate_EKeyType) Enum() *CMsgSteamDatagramCertificate_EKeyType {
	p := new(CMsgSteamDatagramCertificate_EKeyType)
	*p = x
	return p
}
func (x CMsgSteamDatagramCertificate_EKeyType) String() string {
	return proto.EnumName(CMsgSteamDatagramCertificate_EKeyType_name, int32(x))
}
func (x *CMsgSteamDatagramCertificate_EKeyType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgSteamDatagramCertificate_EKeyType_value, data, "CMsgSteamDatagramCertificate_EKeyType")
	if err != nil {
		return err
	}
	*x = CMsgSteamDatagramCertificate_EKeyType(value)
	return nil
}
func (CMsgSteamDatagramCertificate_EKeyType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_steamnetworkingsockets_messages_certs_f2ad3864bc283d01, []int{0, 0}
}

type CMsgSteamDatagramCertificate struct {
	KeyType                 *CMsgSteamDatagramCertificate_EKeyType `protobuf:"varint,1,opt,name=key_type,json=keyType,enum=CMsgSteamDatagramCertificate_EKeyType,def=0" json:"key_type,omitempty"`
	KeyData                 []byte                                 `protobuf:"bytes,2,opt,name=key_data,json=keyData" json:"key_data,omitempty"`
	SteamId                 *uint64                                `protobuf:"fixed64,4,opt,name=steam_id,json=steamId" json:"steam_id,omitempty"`
	GameserverDatacenterIds []uint32                               `protobuf:"fixed32,5,rep,name=gameserver_datacenter_ids,json=gameserverDatacenterIds" json:"gameserver_datacenter_ids,omitempty"`
	TimeCreated             *uint32                                `protobuf:"fixed32,8,opt,name=time_created,json=timeCreated" json:"time_created,omitempty"`
	TimeExpiry              *uint32                                `protobuf:"fixed32,9,opt,name=time_expiry,json=timeExpiry" json:"time_expiry,omitempty"`
	AppId                   *uint32                                `protobuf:"varint,10,opt,name=app_id,json=appId" json:"app_id,omitempty"`
	XXX_NoUnkeyedLiteral    struct{}                               `json:"-"`
	XXX_unrecognized        []byte                                 `json:"-"`
	XXX_sizecache           int32                                  `json:"-"`
}

func (m *CMsgSteamDatagramCertificate) Reset()         { *m = CMsgSteamDatagramCertificate{} }
func (m *CMsgSteamDatagramCertificate) String() string { return proto.CompactTextString(m) }
func (*CMsgSteamDatagramCertificate) ProtoMessage()    {}
func (*CMsgSteamDatagramCertificate) Descriptor() ([]byte, []int) {
	return fileDescriptor_steamnetworkingsockets_messages_certs_f2ad3864bc283d01, []int{0}
}
func (m *CMsgSteamDatagramCertificate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgSteamDatagramCertificate.Unmarshal(m, b)
}
func (m *CMsgSteamDatagramCertificate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgSteamDatagramCertificate.Marshal(b, m, deterministic)
}
func (dst *CMsgSteamDatagramCertificate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgSteamDatagramCertificate.Merge(dst, src)
}
func (m *CMsgSteamDatagramCertificate) XXX_Size() int {
	return xxx_messageInfo_CMsgSteamDatagramCertificate.Size(m)
}
func (m *CMsgSteamDatagramCertificate) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgSteamDatagramCertificate.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgSteamDatagramCertificate proto.InternalMessageInfo

const Default_CMsgSteamDatagramCertificate_KeyType CMsgSteamDatagramCertificate_EKeyType = CMsgSteamDatagramCertificate_INVALID

func (m *CMsgSteamDatagramCertificate) GetKeyType() CMsgSteamDatagramCertificate_EKeyType {
	if m != nil && m.KeyType != nil {
		return *m.KeyType
	}
	return Default_CMsgSteamDatagramCertificate_KeyType
}

func (m *CMsgSteamDatagramCertificate) GetKeyData() []byte {
	if m != nil {
		return m.KeyData
	}
	return nil
}

func (m *CMsgSteamDatagramCertificate) GetSteamId() uint64 {
	if m != nil && m.SteamId != nil {
		return *m.SteamId
	}
	return 0
}

func (m *CMsgSteamDatagramCertificate) GetGameserverDatacenterIds() []uint32 {
	if m != nil {
		return m.GameserverDatacenterIds
	}
	return nil
}

func (m *CMsgSteamDatagramCertificate) GetTimeCreated() uint32 {
	if m != nil && m.TimeCreated != nil {
		return *m.TimeCreated
	}
	return 0
}

func (m *CMsgSteamDatagramCertificate) GetTimeExpiry() uint32 {
	if m != nil && m.TimeExpiry != nil {
		return *m.TimeExpiry
	}
	return 0
}

func (m *CMsgSteamDatagramCertificate) GetAppId() uint32 {
	if m != nil && m.AppId != nil {
		return *m.AppId
	}
	return 0
}

type CMsgSteamDatagramCertificateSigned struct {
	Cert                 []byte   `protobuf:"bytes,4,opt,name=cert" json:"cert,omitempty"`
	CaKeyId              *uint64  `protobuf:"fixed64,5,opt,name=ca_key_id,json=caKeyId" json:"ca_key_id,omitempty"`
	CaSignature          []byte   `protobuf:"bytes,6,opt,name=ca_signature,json=caSignature" json:"ca_signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgSteamDatagramCertificateSigned) Reset()         { *m = CMsgSteamDatagramCertificateSigned{} }
func (m *CMsgSteamDatagramCertificateSigned) String() string { return proto.CompactTextString(m) }
func (*CMsgSteamDatagramCertificateSigned) ProtoMessage()    {}
func (*CMsgSteamDatagramCertificateSigned) Descriptor() ([]byte, []int) {
	return fileDescriptor_steamnetworkingsockets_messages_certs_f2ad3864bc283d01, []int{1}
}
func (m *CMsgSteamDatagramCertificateSigned) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgSteamDatagramCertificateSigned.Unmarshal(m, b)
}
func (m *CMsgSteamDatagramCertificateSigned) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgSteamDatagramCertificateSigned.Marshal(b, m, deterministic)
}
func (dst *CMsgSteamDatagramCertificateSigned) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgSteamDatagramCertificateSigned.Merge(dst, src)
}
func (m *CMsgSteamDatagramCertificateSigned) XXX_Size() int {
	return xxx_messageInfo_CMsgSteamDatagramCertificateSigned.Size(m)
}
func (m *CMsgSteamDatagramCertificateSigned) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgSteamDatagramCertificateSigned.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgSteamDatagramCertificateSigned proto.InternalMessageInfo

func (m *CMsgSteamDatagramCertificateSigned) GetCert() []byte {
	if m != nil {
		return m.Cert
	}
	return nil
}

func (m *CMsgSteamDatagramCertificateSigned) GetCaKeyId() uint64 {
	if m != nil && m.CaKeyId != nil {
		return *m.CaKeyId
	}
	return 0
}

func (m *CMsgSteamDatagramCertificateSigned) GetCaSignature() []byte {
	if m != nil {
		return m.CaSignature
	}
	return nil
}

func init() {
	proto.RegisterType((*CMsgSteamDatagramCertificate)(nil), "CMsgSteamDatagramCertificate")
	proto.RegisterType((*CMsgSteamDatagramCertificateSigned)(nil), "CMsgSteamDatagramCertificateSigned")
	proto.RegisterEnum("CMsgSteamDatagramCertificate_EKeyType", CMsgSteamDatagramCertificate_EKeyType_name, CMsgSteamDatagramCertificate_EKeyType_value)
}

func init() {
	proto.RegisterFile("steamnetworkingsockets_messages_certs.proto", fileDescriptor_steamnetworkingsockets_messages_certs_f2ad3864bc283d01)
}

var fileDescriptor_steamnetworkingsockets_messages_certs_f2ad3864bc283d01 = []byte{
	// 401 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x52, 0xc1, 0x6e, 0x13, 0x31,
	0x14, 0xac, 0x4b, 0x93, 0x4d, 0x9d, 0x80, 0x2a, 0x4b, 0x08, 0x17, 0x21, 0xb1, 0x44, 0x08, 0xad,
	0x84, 0x9a, 0xd0, 0xa2, 0x1c, 0xe8, 0x0d, 0x92, 0x1c, 0x96, 0x02, 0x87, 0x0d, 0xe2, 0xc0, 0xc5,
	0x7a, 0xb5, 0x5f, 0x8d, 0xb5, 0xda, 0x5d, 0xcb, 0x76, 0x28, 0x7b, 0xe3, 0x47, 0xf9, 0x17, 0x64,
	0x47, 0x81, 0x5b, 0x6e, 0x3b, 0x33, 0x6f, 0x9e, 0xde, 0xcc, 0x9a, 0xbe, 0xf6, 0x01, 0xa1, 0x69,
	0x31, 0xdc, 0x77, 0xae, 0x36, 0xad, 0xf6, 0x9d, 0xac, 0x31, 0x78, 0xd1, 0xa0, 0xf7, 0xa0, 0xd1,
	0x0b, 0x89, 0x2e, 0xf8, 0x99, 0x75, 0x5d, 0xe8, 0xa6, 0x7f, 0x8e, 0xe9, 0xb3, 0xe5, 0x67, 0xaf,
	0x37, 0xd1, 0xb3, 0x82, 0x00, 0xda, 0x41, 0xb3, 0x44, 0x17, 0xcc, 0x9d, 0x91, 0x10, 0x90, 0x7d,
	0xa4, 0xa3, 0x1a, 0x7b, 0x11, 0x7a, 0x8b, 0x9c, 0xe4, 0xa4, 0x78, 0x74, 0xf5, 0x6a, 0x76, 0xc8,
	0x30, 0x5b, 0xdf, 0x60, 0xff, 0xb5, 0xb7, 0x78, 0x9d, 0x95, 0x5f, 0xbe, 0xbd, 0xff, 0x54, 0xae,
	0xaa, 0xac, 0xde, 0x31, 0xec, 0x7c, 0xb7, 0x4b, 0x41, 0x00, 0x7e, 0x9c, 0x93, 0x62, 0x92, 0xa4,
	0xb8, 0x24, 0x4a, 0xe9, 0x6c, 0x61, 0x14, 0x3f, 0xc9, 0x49, 0x31, 0xac, 0xb2, 0x84, 0x4b, 0xc5,
	0xae, 0xe9, 0xb9, 0x86, 0x06, 0x3d, 0xba, 0x9f, 0xe8, 0x92, 0x59, 0x62, 0x1b, 0xd0, 0x09, 0xa3,
	0x3c, 0x1f, 0xe4, 0x0f, 0x8a, 0xac, 0x7a, 0xf2, 0x7f, 0x60, 0xf5, 0x4f, 0x2f, 0x95, 0x67, 0x2f,
	0xe8, 0x24, 0x98, 0x06, 0x85, 0x74, 0x08, 0x01, 0x15, 0x1f, 0xe5, 0xa4, 0xc8, 0xaa, 0x71, 0xe4,
	0x96, 0x3b, 0x8a, 0x3d, 0xa7, 0x09, 0x0a, 0xfc, 0x65, 0x8d, 0xeb, 0xf9, 0x69, 0x9a, 0xa0, 0x91,
	0x5a, 0x27, 0x86, 0x3d, 0xa6, 0x43, 0xb0, 0x36, 0x1e, 0x46, 0x73, 0x52, 0x3c, 0xac, 0x06, 0x60,
	0x6d, 0xa9, 0xa6, 0x2f, 0xe9, 0x68, 0x1f, 0x95, 0x8d, 0xe9, 0x3e, 0xec, 0xd9, 0x51, 0x04, 0xeb,
	0xd5, 0xd5, 0x62, 0x71, 0xf9, 0xee, 0x8c, 0x4c, 0xef, 0xe9, 0xf4, 0x50, 0x5b, 0x1b, 0xa3, 0x5b,
	0x54, 0x8c, 0xd1, 0x93, 0xf8, 0x53, 0x52, 0xf2, 0x49, 0x95, 0xbe, 0xd9, 0x53, 0x7a, 0x2a, 0x41,
	0xc4, 0xbe, 0x8c, 0xe2, 0x83, 0x5d, 0x25, 0x12, 0x6e, 0xb0, 0x2f, 0x55, 0x8c, 0x25, 0x41, 0x78,
	0xa3, 0x5b, 0x08, 0x5b, 0x87, 0x7c, 0x98, 0x7c, 0x63, 0x09, 0x9b, 0x3d, 0xf5, 0x61, 0xf1, 0xfd,
	0x8d, 0x36, 0xe1, 0xc7, 0xf6, 0x76, 0x26, 0xbb, 0x66, 0x7e, 0xf9, 0xb6, 0x9e, 0xeb, 0xee, 0x22,
	0x55, 0x7a, 0xe1, 0xd0, 0x77, 0x5b, 0x27, 0xd1, 0xcf, 0xd3, 0x1b, 0xb8, 0xdd, 0xde, 0xcd, 0x93,
	0xf0, 0x9b, 0x1c, 0xfd, 0x0d, 0x00, 0x00, 0xff, 0xff, 0x0d, 0x9f, 0x7c, 0x93, 0x3d, 0x02, 0x00,
	0x00,
}
