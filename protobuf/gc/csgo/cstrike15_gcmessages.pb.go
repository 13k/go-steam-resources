// Code generated by protoc-gen-go.
// source: cstrike15_gcmessages.proto
// DO NOT EDIT!

/*
Package csgo is a generated protocol buffer package.

It is generated from these files:
	cstrike15_gcmessages.proto

It has these top-level messages:
	GameServerPing
	DetailedSearchStatistic
	TournamentPlayer
	TournamentTeam
	TournamentEvent
	GlobalStatistics
	OperationalStatisticDescription
	OperationalStatisticElement
	OperationalStatisticsPacket
	PlayerRankingInfo
	PlayerCommendationInfo
	PlayerMedalsInfo
	AccountActivity
	TournamentMatchSetup
	ServerHltvInfo
	IpAddressMask
	XpProgressData
	MatchEndItemUpdates
	PlayerQuestData
	CMsgGC_ServerQuestUpdateData
	CMsgGCCStrike15V2_MatchmakingGCOperationalStats
	CMsgGCCStrike15V2_MatchmakingGC2ServerConfirm
	CMsgGCCStrike15V2_GC2ServerReservationUpdate
	CMsgGCCStrike15V2_MatchmakingStart
	CMsgGCCStrike15V2_MatchmakingStop
	CMsgGCCStrike15V2_MatchmakingClient2ServerPing
	CMsgGCCStrike15V2_MatchmakingGC2ClientUpdate
	CDataGCCStrike15V2_TournamentMatchDraft
	CPreMatchInfoData
	CMsgGCCStrike15V2_MatchmakingGC2ServerReserve
	CMsgGCCStrike15V2_MatchmakingServerReservationResponse
	CMsgGCCStrike15V2_MatchmakingGC2ClientReserve
	CMsgGCCStrike15V2_MatchmakingServerRoundStats
	CMsgGCCStrike15V2_MatchmakingServerMatchEnd
	CMsgGCCStrike15V2_MatchmakingClient2GCHello
	CMsgGCCStrike15V2_MatchmakingGC2ClientHello
	CMsgGCCStrike15V2_AccountPrivacySettings
	CMsgGCCStrike15V2_MatchmakingGC2ClientAbandon
	CMsgGCCStrike15V2_MatchmakingServer2GCKick
	CDataGCCStrike15V2_MatchmakingLockedInMatch
	CMsgGCCStrike15V2_MatchmakingGC2ServerRankUpdate
	CMsgGCCStrike15V2_MatchmakingOperator2GCBlogUpdate
	CMsgGCCStrike15V2_ServerNotificationForUserPenalty
	CMsgGCCStrike15V2_ClientReportPlayer
	CMsgGCCStrike15V2_ClientCommendPlayer
	CMsgGCCStrike15V2_ClientReportServer
	CMsgGCCStrike15V2_ClientReportResponse
	CMsgGCCStrike15V2_ClientRequestWatchInfoFriends
	WatchableMatchInfo
	CMsgGCCStrike15V2_ClientRequestJoinFriendData
	CMsgGCCStrike15V2_ClientRequestJoinServerData
	CMsgGCCstrike15V2_ClientRequestNewMission
	CMsgGCCstrike15V2_GC2ServerNotifyXPRewarded
	CMsgGCCStrike15V2_WatchInfoUsers
	CMsgGCCStrike15V2_ClientRequestPlayersProfile
	CMsgGCCStrike15V2_PlayersProfile
	CMsgGCCStrike15V2_PlayerOverwatchCaseUpdate
	CMsgGCCStrike15V2_PlayerOverwatchCaseAssignment
	CMsgGCCStrike15V2_PlayerOverwatchCaseStatus
	CClientHeaderOverwatchEvidence
	CMsgGCCStrike15V2_GC2ClientTextMsg
	CMsgGCCStrike15V2_Client2GCTextMsg
	CMsgGCCStrike15V2_MatchEndRunRewardDrops
	CEconItemPreviewDataBlock
	CMsgGCCStrike15V2_MatchEndRewardDropsNotification
	CMsgItemAcknowledged
	CMsgGCCStrike15V2_Client2GCEconPreviewDataBlockRequest
	CMsgGCCStrike15V2_Client2GCEconPreviewDataBlockResponse
	CMsgGCCStrike15V2_TournamentMatchRewardDropsNotification
	CMsgGCCStrike15V2_MatchListRequestCurrentLiveGames
	CMsgGCCStrike15V2_MatchListRequestLiveGameForUser
	CMsgGCCStrike15V2_MatchListRequestRecentUserGames
	CMsgGCCStrike15V2_MatchListRequestTournamentGames
	CMsgGCCStrike15V2_MatchListRequestFullGameInfo
	CDataGCCStrike15V2_MatchInfo
	CDataGCCStrike15V2_TournamentGroupTeam
	CDataGCCStrike15V2_TournamentGroup
	CDataGCCStrike15V2_TournamentSection
	CDataGCCStrike15V2_TournamentInfo
	CMsgGCCStrike15V2_MatchList
	CMsgGCCStrike15V2_Predictions
	CMsgGCCStrike15V2_Fantasy
	CAttribute_String
	CMsgGCToGCReloadVersions
	CMsgCStrike15Welcome
	CMsgGCCStrike15V2_ClientVarValueNotificationInfo
	CMsgGCCStrike15V2_ServerVarValueNotificationInfo
	CMsgGCCStrike15V2_GiftsLeaderboardRequest
	CMsgGCCStrike15V2_GiftsLeaderboardResponse
	CMsgGCCStrike15V2_ClientSubmitSurveyVote
	CMsgGCCStrike15V2_Server2GCClientValidate
	CMsgGCCStrike15V2_Server2GCPureServerValidationFailure
	CMsgGCCStrike15V2_GC2ClientTournamentInfo
	CSOEconCoupon
	CSOQuestProgress
	CSOPersonaDataPublic
	CMsgGC_GlobalGame_Subscribe
	CMsgGC_GlobalGame_Unsubscribe
	CMsgGC_GlobalGame_Play
	CMsgGCCStrike15V2_AcknowledgePenalty
	CMsgGCCStrike15V2_Client2GCRequestPrestigeCoin
	CMsgGCCStrike15V2_Client2GCStreamUnlock
*/
package csgo

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "."

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
const _ = proto.ProtoPackageIsVersion1

type ECsgoGCMsg int32

const (
	ECsgoGCMsg_k_EMsgGCCStrike15_v2_Base                                   ECsgoGCMsg = 9100
	ECsgoGCMsg_k_EMsgGCCStrike15_v2_MatchmakingStart                       ECsgoGCMsg = 9101
	ECsgoGCMsg_k_EMsgGCCStrike15_v2_MatchmakingStop                        ECsgoGCMsg = 9102
	ECsgoGCMsg_k_EMsgGCCStrike15_v2_MatchmakingClient2ServerPing           ECsgoGCMsg = 9103
	ECsgoGCMsg_k_EMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate             ECsgoGCMsg = 9104
	ECsgoGCMsg_k_EMsgGCCStrike15_v2_MatchmakingGC2ServerReserve            ECsgoGCMsg = 9105
	ECsgoGCMsg_k_EMsgGCCStrike15_v2_MatchmakingServerReservationResponse   ECsgoGCMsg = 9106
	ECsgoGCMsg_k_EMsgGCCStrike15_v2_MatchmakingGC2ClientReserve            ECsgoGCMsg = 9107
	ECsgoGCMsg_k_EMsgGCCStrike15_v2_MatchmakingServerRoundStats            ECsgoGCMsg = 9108
	ECsgoGCMsg_k_EMsgGCCStrike15_v2_MatchmakingClient2GCHello              ECsgoGCMsg = 9109
	ECsgoGCMsg_k_EMsgGCCStrike15_v2_MatchmakingGC2ClientHello              ECsgoGCMsg = 9110
	ECsgoGCMsg_k_EMsgGCCStrike15_v2_MatchmakingServerMatchEnd              ECsgoGCMsg = 9111
	ECsgoGCMsg_k_EMsgGCCStrike15_v2_MatchmakingGC2ClientAbandon            ECsgoGCMsg = 9112
	ECsgoGCMsg_k_EMsgGCCStrike15_v2_MatchmakingServer2GCKick               ECsgoGCMsg = 9113
	ECsgoGCMsg_k_EMsgGCCStrike15_v2_MatchmakingGC2ServerConfirm            ECsgoGCMsg = 9114
	ECsgoGCMsg_k_EMsgGCCStrike15_v2_MatchmakingGCOperationalStats          ECsgoGCMsg = 9115
	ECsgoGCMsg_k_EMsgGCCStrike15_v2_MatchmakingGC2ServerRankUpdate         ECsgoGCMsg = 9116
	ECsgoGCMsg_k_EMsgGCCStrike15_v2_MatchmakingOperator2GCBlogUpdate       ECsgoGCMsg = 9117
	ECsgoGCMsg_k_EMsgGCCStrike15_v2_ServerNotificationForUserPenalty       ECsgoGCMsg = 9118
	ECsgoGCMsg_k_EMsgGCCStrike15_v2_ClientReportPlayer                     ECsgoGCMsg = 9119
	ECsgoGCMsg_k_EMsgGCCStrike15_v2_ClientReportServer                     ECsgoGCMsg = 9120
	ECsgoGCMsg_k_EMsgGCCStrike15_v2_ClientCommendPlayer                    ECsgoGCMsg = 9121
	ECsgoGCMsg_k_EMsgGCCStrike15_v2_ClientReportResponse                   ECsgoGCMsg = 9122
	ECsgoGCMsg_k_EMsgGCCStrike15_v2_ClientCommendPlayerQuery               ECsgoGCMsg = 9123
	ECsgoGCMsg_k_EMsgGCCStrike15_v2_ClientCommendPlayerQueryResponse       ECsgoGCMsg = 9124
	ECsgoGCMsg_k_EMsgGCCStrike15_v2_WatchInfoUsers                         ECsgoGCMsg = 9126
	ECsgoGCMsg_k_EMsgGCCStrike15_v2_ClientRequestPlayersProfile            ECsgoGCMsg = 9127
	ECsgoGCMsg_k_EMsgGCCStrike15_v2_PlayersProfile                         ECsgoGCMsg = 9128
	ECsgoGCMsg_k_EMsgGCCStrike15_v2_SetMyMedalsInfo                        ECsgoGCMsg = 9129
	ECsgoGCMsg_k_EMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate              ECsgoGCMsg = 9131
	ECsgoGCMsg_k_EMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment          ECsgoGCMsg = 9132
	ECsgoGCMsg_k_EMsgGCCStrike15_v2_PlayerOverwatchCaseStatus              ECsgoGCMsg = 9133
	ECsgoGCMsg_k_EMsgGCCStrike15_v2_GC2ClientTextMsg                       ECsgoGCMsg = 9134
	ECsgoGCMsg_k_EMsgGCCStrike15_v2_Client2GCTextMsg                       ECsgoGCMsg = 9135
	ECsgoGCMsg_k_EMsgGCCStrike15_v2_MatchEndRunRewardDrops                 ECsgoGCMsg = 9136
	ECsgoGCMsg_k_EMsgGCCStrike15_v2_MatchEndRewardDropsNotification        ECsgoGCMsg = 9137
	ECsgoGCMsg_k_EMsgGCCStrike15_v2_ClientRequestWatchInfoFriends2         ECsgoGCMsg = 9138
	ECsgoGCMsg_k_EMsgGCCStrike15_v2_MatchList                              ECsgoGCMsg = 9139
	ECsgoGCMsg_k_EMsgGCCStrike15_v2_MatchListRequestCurrentLiveGames       ECsgoGCMsg = 9140
	ECsgoGCMsg_k_EMsgGCCStrike15_v2_MatchListRequestRecentUserGames        ECsgoGCMsg = 9141
	ECsgoGCMsg_k_EMsgGCCStrike15_v2_GC2ServerReservationUpdate             ECsgoGCMsg = 9142
	ECsgoGCMsg_k_EMsgGCCStrike15_v2_ClientVarValueNotificationInfo         ECsgoGCMsg = 9144
	ECsgoGCMsg_k_EMsgGCCStrike15_v2_TournamentMatchRewardDropsNotification ECsgoGCMsg = 9145
	ECsgoGCMsg_k_EMsgGCCStrike15_v2_MatchListRequestTournamentGames        ECsgoGCMsg = 9146
	ECsgoGCMsg_k_EMsgGCCStrike15_v2_MatchListRequestFullGameInfo           ECsgoGCMsg = 9147
	ECsgoGCMsg_k_EMsgGCCStrike15_v2_GiftsLeaderboardRequest                ECsgoGCMsg = 9148
	ECsgoGCMsg_k_EMsgGCCStrike15_v2_GiftsLeaderboardResponse               ECsgoGCMsg = 9149
	ECsgoGCMsg_k_EMsgGCCStrike15_v2_ServerVarValueNotificationInfo         ECsgoGCMsg = 9150
	ECsgoGCMsg_k_EMsgGCToGCReloadVersions                                  ECsgoGCMsg = 9151
	ECsgoGCMsg_k_EMsgGCCStrike15_v2_ClientSubmitSurveyVote                 ECsgoGCMsg = 9152
	ECsgoGCMsg_k_EMsgGCCStrike15_v2_Server2GCClientValidate                ECsgoGCMsg = 9153
	ECsgoGCMsg_k_EMsgGCCStrike15_v2_MatchListRequestLiveGameForUser        ECsgoGCMsg = 9154
	ECsgoGCMsg_k_EMsgGCCStrike15_v2_Server2GCPureServerValidationFailure   ECsgoGCMsg = 9155
	ECsgoGCMsg_k_EMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockRequest   ECsgoGCMsg = 9156
	ECsgoGCMsg_k_EMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockResponse  ECsgoGCMsg = 9157
	ECsgoGCMsg_k_EMsgGCCStrike15_v2_AccountPrivacySettings                 ECsgoGCMsg = 9158
	ECsgoGCMsg_k_EMsgGCCStrike15_v2_SetMyActivityInfo                      ECsgoGCMsg = 9159
	ECsgoGCMsg_k_EMsgGCCStrike15_v2_MatchListRequestTournamentPredictions  ECsgoGCMsg = 9160
	ECsgoGCMsg_k_EMsgGCCStrike15_v2_MatchListUploadTournamentPredictions   ECsgoGCMsg = 9161
	ECsgoGCMsg_k_EMsgGCCStrike15_v2_DraftSummary                           ECsgoGCMsg = 9162
	ECsgoGCMsg_k_EMsgGCCStrike15_v2_ClientRequestJoinFriendData            ECsgoGCMsg = 9163
	ECsgoGCMsg_k_EMsgGCCStrike15_v2_ClientRequestJoinServerData            ECsgoGCMsg = 9164
	ECsgoGCMsg_k_EMsgGCCStrike15_v2_ClientRequestNewMission                ECsgoGCMsg = 9165
	ECsgoGCMsg_k_EMsgGCCStrike15_v2_GC2ServerNotifyXPRewarded              ECsgoGCMsg = 9166
	ECsgoGCMsg_k_EMsgGCCStrike15_v2_GC2ClientTournamentInfo                ECsgoGCMsg = 9167
	ECsgoGCMsg_k_EMsgGC_GlobalGame_Subscribe                               ECsgoGCMsg = 9168
	ECsgoGCMsg_k_EMsgGC_GlobalGame_Unsubscribe                             ECsgoGCMsg = 9169
	ECsgoGCMsg_k_EMsgGC_GlobalGame_Play                                    ECsgoGCMsg = 9170
	ECsgoGCMsg_k_EMsgGCCStrike15_v2_AcknowledgePenalty                     ECsgoGCMsg = 9171
	ECsgoGCMsg_k_EMsgGCCStrike15_v2_Client2GCRequestPrestigeCoin           ECsgoGCMsg = 9172
	ECsgoGCMsg_k_EMsgGCCStrike15_v2_GC2ClientGlobalStats                   ECsgoGCMsg = 9173
	ECsgoGCMsg_k_EMsgGCCStrike15_v2_Client2GCStreamUnlock                  ECsgoGCMsg = 9174
	ECsgoGCMsg_k_EMsgGCCStrike15_v2_FantasyRequestClientData               ECsgoGCMsg = 9175
	ECsgoGCMsg_k_EMsgGCCStrike15_v2_FantasyUpdateClientData                ECsgoGCMsg = 9176
)

var ECsgoGCMsg_name = map[int32]string{
	9100: "k_EMsgGCCStrike15_v2_Base",
	9101: "k_EMsgGCCStrike15_v2_MatchmakingStart",
	9102: "k_EMsgGCCStrike15_v2_MatchmakingStop",
	9103: "k_EMsgGCCStrike15_v2_MatchmakingClient2ServerPing",
	9104: "k_EMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate",
	9105: "k_EMsgGCCStrike15_v2_MatchmakingGC2ServerReserve",
	9106: "k_EMsgGCCStrike15_v2_MatchmakingServerReservationResponse",
	9107: "k_EMsgGCCStrike15_v2_MatchmakingGC2ClientReserve",
	9108: "k_EMsgGCCStrike15_v2_MatchmakingServerRoundStats",
	9109: "k_EMsgGCCStrike15_v2_MatchmakingClient2GCHello",
	9110: "k_EMsgGCCStrike15_v2_MatchmakingGC2ClientHello",
	9111: "k_EMsgGCCStrike15_v2_MatchmakingServerMatchEnd",
	9112: "k_EMsgGCCStrike15_v2_MatchmakingGC2ClientAbandon",
	9113: "k_EMsgGCCStrike15_v2_MatchmakingServer2GCKick",
	9114: "k_EMsgGCCStrike15_v2_MatchmakingGC2ServerConfirm",
	9115: "k_EMsgGCCStrike15_v2_MatchmakingGCOperationalStats",
	9116: "k_EMsgGCCStrike15_v2_MatchmakingGC2ServerRankUpdate",
	9117: "k_EMsgGCCStrike15_v2_MatchmakingOperator2GCBlogUpdate",
	9118: "k_EMsgGCCStrike15_v2_ServerNotificationForUserPenalty",
	9119: "k_EMsgGCCStrike15_v2_ClientReportPlayer",
	9120: "k_EMsgGCCStrike15_v2_ClientReportServer",
	9121: "k_EMsgGCCStrike15_v2_ClientCommendPlayer",
	9122: "k_EMsgGCCStrike15_v2_ClientReportResponse",
	9123: "k_EMsgGCCStrike15_v2_ClientCommendPlayerQuery",
	9124: "k_EMsgGCCStrike15_v2_ClientCommendPlayerQueryResponse",
	9126: "k_EMsgGCCStrike15_v2_WatchInfoUsers",
	9127: "k_EMsgGCCStrike15_v2_ClientRequestPlayersProfile",
	9128: "k_EMsgGCCStrike15_v2_PlayersProfile",
	9129: "k_EMsgGCCStrike15_v2_SetMyMedalsInfo",
	9131: "k_EMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate",
	9132: "k_EMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment",
	9133: "k_EMsgGCCStrike15_v2_PlayerOverwatchCaseStatus",
	9134: "k_EMsgGCCStrike15_v2_GC2ClientTextMsg",
	9135: "k_EMsgGCCStrike15_v2_Client2GCTextMsg",
	9136: "k_EMsgGCCStrike15_v2_MatchEndRunRewardDrops",
	9137: "k_EMsgGCCStrike15_v2_MatchEndRewardDropsNotification",
	9138: "k_EMsgGCCStrike15_v2_ClientRequestWatchInfoFriends2",
	9139: "k_EMsgGCCStrike15_v2_MatchList",
	9140: "k_EMsgGCCStrike15_v2_MatchListRequestCurrentLiveGames",
	9141: "k_EMsgGCCStrike15_v2_MatchListRequestRecentUserGames",
	9142: "k_EMsgGCCStrike15_v2_GC2ServerReservationUpdate",
	9144: "k_EMsgGCCStrike15_v2_ClientVarValueNotificationInfo",
	9145: "k_EMsgGCCStrike15_v2_TournamentMatchRewardDropsNotification",
	9146: "k_EMsgGCCStrike15_v2_MatchListRequestTournamentGames",
	9147: "k_EMsgGCCStrike15_v2_MatchListRequestFullGameInfo",
	9148: "k_EMsgGCCStrike15_v2_GiftsLeaderboardRequest",
	9149: "k_EMsgGCCStrike15_v2_GiftsLeaderboardResponse",
	9150: "k_EMsgGCCStrike15_v2_ServerVarValueNotificationInfo",
	9151: "k_EMsgGCToGCReloadVersions",
	9152: "k_EMsgGCCStrike15_v2_ClientSubmitSurveyVote",
	9153: "k_EMsgGCCStrike15_v2_Server2GCClientValidate",
	9154: "k_EMsgGCCStrike15_v2_MatchListRequestLiveGameForUser",
	9155: "k_EMsgGCCStrike15_v2_Server2GCPureServerValidationFailure",
	9156: "k_EMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockRequest",
	9157: "k_EMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockResponse",
	9158: "k_EMsgGCCStrike15_v2_AccountPrivacySettings",
	9159: "k_EMsgGCCStrike15_v2_SetMyActivityInfo",
	9160: "k_EMsgGCCStrike15_v2_MatchListRequestTournamentPredictions",
	9161: "k_EMsgGCCStrike15_v2_MatchListUploadTournamentPredictions",
	9162: "k_EMsgGCCStrike15_v2_DraftSummary",
	9163: "k_EMsgGCCStrike15_v2_ClientRequestJoinFriendData",
	9164: "k_EMsgGCCStrike15_v2_ClientRequestJoinServerData",
	9165: "k_EMsgGCCStrike15_v2_ClientRequestNewMission",
	9166: "k_EMsgGCCStrike15_v2_GC2ServerNotifyXPRewarded",
	9167: "k_EMsgGCCStrike15_v2_GC2ClientTournamentInfo",
	9168: "k_EMsgGC_GlobalGame_Subscribe",
	9169: "k_EMsgGC_GlobalGame_Unsubscribe",
	9170: "k_EMsgGC_GlobalGame_Play",
	9171: "k_EMsgGCCStrike15_v2_AcknowledgePenalty",
	9172: "k_EMsgGCCStrike15_v2_Client2GCRequestPrestigeCoin",
	9173: "k_EMsgGCCStrike15_v2_GC2ClientGlobalStats",
	9174: "k_EMsgGCCStrike15_v2_Client2GCStreamUnlock",
	9175: "k_EMsgGCCStrike15_v2_FantasyRequestClientData",
	9176: "k_EMsgGCCStrike15_v2_FantasyUpdateClientData",
}
var ECsgoGCMsg_value = map[string]int32{
	"k_EMsgGCCStrike15_v2_Base":                                   9100,
	"k_EMsgGCCStrike15_v2_MatchmakingStart":                       9101,
	"k_EMsgGCCStrike15_v2_MatchmakingStop":                        9102,
	"k_EMsgGCCStrike15_v2_MatchmakingClient2ServerPing":           9103,
	"k_EMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate":             9104,
	"k_EMsgGCCStrike15_v2_MatchmakingGC2ServerReserve":            9105,
	"k_EMsgGCCStrike15_v2_MatchmakingServerReservationResponse":   9106,
	"k_EMsgGCCStrike15_v2_MatchmakingGC2ClientReserve":            9107,
	"k_EMsgGCCStrike15_v2_MatchmakingServerRoundStats":            9108,
	"k_EMsgGCCStrike15_v2_MatchmakingClient2GCHello":              9109,
	"k_EMsgGCCStrike15_v2_MatchmakingGC2ClientHello":              9110,
	"k_EMsgGCCStrike15_v2_MatchmakingServerMatchEnd":              9111,
	"k_EMsgGCCStrike15_v2_MatchmakingGC2ClientAbandon":            9112,
	"k_EMsgGCCStrike15_v2_MatchmakingServer2GCKick":               9113,
	"k_EMsgGCCStrike15_v2_MatchmakingGC2ServerConfirm":            9114,
	"k_EMsgGCCStrike15_v2_MatchmakingGCOperationalStats":          9115,
	"k_EMsgGCCStrike15_v2_MatchmakingGC2ServerRankUpdate":         9116,
	"k_EMsgGCCStrike15_v2_MatchmakingOperator2GCBlogUpdate":       9117,
	"k_EMsgGCCStrike15_v2_ServerNotificationForUserPenalty":       9118,
	"k_EMsgGCCStrike15_v2_ClientReportPlayer":                     9119,
	"k_EMsgGCCStrike15_v2_ClientReportServer":                     9120,
	"k_EMsgGCCStrike15_v2_ClientCommendPlayer":                    9121,
	"k_EMsgGCCStrike15_v2_ClientReportResponse":                   9122,
	"k_EMsgGCCStrike15_v2_ClientCommendPlayerQuery":               9123,
	"k_EMsgGCCStrike15_v2_ClientCommendPlayerQueryResponse":       9124,
	"k_EMsgGCCStrike15_v2_WatchInfoUsers":                         9126,
	"k_EMsgGCCStrike15_v2_ClientRequestPlayersProfile":            9127,
	"k_EMsgGCCStrike15_v2_PlayersProfile":                         9128,
	"k_EMsgGCCStrike15_v2_SetMyMedalsInfo":                        9129,
	"k_EMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate":              9131,
	"k_EMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment":          9132,
	"k_EMsgGCCStrike15_v2_PlayerOverwatchCaseStatus":              9133,
	"k_EMsgGCCStrike15_v2_GC2ClientTextMsg":                       9134,
	"k_EMsgGCCStrike15_v2_Client2GCTextMsg":                       9135,
	"k_EMsgGCCStrike15_v2_MatchEndRunRewardDrops":                 9136,
	"k_EMsgGCCStrike15_v2_MatchEndRewardDropsNotification":        9137,
	"k_EMsgGCCStrike15_v2_ClientRequestWatchInfoFriends2":         9138,
	"k_EMsgGCCStrike15_v2_MatchList":                              9139,
	"k_EMsgGCCStrike15_v2_MatchListRequestCurrentLiveGames":       9140,
	"k_EMsgGCCStrike15_v2_MatchListRequestRecentUserGames":        9141,
	"k_EMsgGCCStrike15_v2_GC2ServerReservationUpdate":             9142,
	"k_EMsgGCCStrike15_v2_ClientVarValueNotificationInfo":         9144,
	"k_EMsgGCCStrike15_v2_TournamentMatchRewardDropsNotification": 9145,
	"k_EMsgGCCStrike15_v2_MatchListRequestTournamentGames":        9146,
	"k_EMsgGCCStrike15_v2_MatchListRequestFullGameInfo":           9147,
	"k_EMsgGCCStrike15_v2_GiftsLeaderboardRequest":                9148,
	"k_EMsgGCCStrike15_v2_GiftsLeaderboardResponse":               9149,
	"k_EMsgGCCStrike15_v2_ServerVarValueNotificationInfo":         9150,
	"k_EMsgGCToGCReloadVersions":                                  9151,
	"k_EMsgGCCStrike15_v2_ClientSubmitSurveyVote":                 9152,
	"k_EMsgGCCStrike15_v2_Server2GCClientValidate":                9153,
	"k_EMsgGCCStrike15_v2_MatchListRequestLiveGameForUser":        9154,
	"k_EMsgGCCStrike15_v2_Server2GCPureServerValidationFailure":   9155,
	"k_EMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockRequest":   9156,
	"k_EMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockResponse":  9157,
	"k_EMsgGCCStrike15_v2_AccountPrivacySettings":                 9158,
	"k_EMsgGCCStrike15_v2_SetMyActivityInfo":                      9159,
	"k_EMsgGCCStrike15_v2_MatchListRequestTournamentPredictions":  9160,
	"k_EMsgGCCStrike15_v2_MatchListUploadTournamentPredictions":   9161,
	"k_EMsgGCCStrike15_v2_DraftSummary":                           9162,
	"k_EMsgGCCStrike15_v2_ClientRequestJoinFriendData":            9163,
	"k_EMsgGCCStrike15_v2_ClientRequestJoinServerData":            9164,
	"k_EMsgGCCStrike15_v2_ClientRequestNewMission":                9165,
	"k_EMsgGCCStrike15_v2_GC2ServerNotifyXPRewarded":              9166,
	"k_EMsgGCCStrike15_v2_GC2ClientTournamentInfo":                9167,
	"k_EMsgGC_GlobalGame_Subscribe":                               9168,
	"k_EMsgGC_GlobalGame_Unsubscribe":                             9169,
	"k_EMsgGC_GlobalGame_Play":                                    9170,
	"k_EMsgGCCStrike15_v2_AcknowledgePenalty":                     9171,
	"k_EMsgGCCStrike15_v2_Client2GCRequestPrestigeCoin":           9172,
	"k_EMsgGCCStrike15_v2_GC2ClientGlobalStats":                   9173,
	"k_EMsgGCCStrike15_v2_Client2GCStreamUnlock":                  9174,
	"k_EMsgGCCStrike15_v2_FantasyRequestClientData":               9175,
	"k_EMsgGCCStrike15_v2_FantasyUpdateClientData":                9176,
}

func (x ECsgoGCMsg) Enum() *ECsgoGCMsg {
	p := new(ECsgoGCMsg)
	*p = x
	return p
}
func (x ECsgoGCMsg) String() string {
	return proto.EnumName(ECsgoGCMsg_name, int32(x))
}
func (x *ECsgoGCMsg) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ECsgoGCMsg_value, data, "ECsgoGCMsg")
	if err != nil {
		return err
	}
	*x = ECsgoGCMsg(value)
	return nil
}
func (ECsgoGCMsg) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type GameServerPing struct {
	GameserverId     *uint64 `protobuf:"varint,1,opt,name=gameserver_id" json:"gameserver_id,omitempty"`
	Ping             *int32  `protobuf:"varint,2,opt,name=ping" json:"ping,omitempty"`
	Ip               *uint32 `protobuf:"varint,3,opt,name=ip" json:"ip,omitempty"`
	Port             *uint32 `protobuf:"varint,4,opt,name=port" json:"port,omitempty"`
	Instances        *uint32 `protobuf:"varint,5,opt,name=instances" json:"instances,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *GameServerPing) Reset()                    { *m = GameServerPing{} }
func (m *GameServerPing) String() string            { return proto.CompactTextString(m) }
func (*GameServerPing) ProtoMessage()               {}
func (*GameServerPing) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *GameServerPing) GetGameserverId() uint64 {
	if m != nil && m.GameserverId != nil {
		return *m.GameserverId
	}
	return 0
}

func (m *GameServerPing) GetPing() int32 {
	if m != nil && m.Ping != nil {
		return *m.Ping
	}
	return 0
}

func (m *GameServerPing) GetIp() uint32 {
	if m != nil && m.Ip != nil {
		return *m.Ip
	}
	return 0
}

func (m *GameServerPing) GetPort() uint32 {
	if m != nil && m.Port != nil {
		return *m.Port
	}
	return 0
}

func (m *GameServerPing) GetInstances() uint32 {
	if m != nil && m.Instances != nil {
		return *m.Instances
	}
	return 0
}

type DetailedSearchStatistic struct {
	GameType         *uint32 `protobuf:"varint,1,opt,name=game_type" json:"game_type,omitempty"`
	SearchTimeAvg    *uint32 `protobuf:"varint,2,opt,name=search_time_avg" json:"search_time_avg,omitempty"`
	PlayersSearching *uint32 `protobuf:"varint,4,opt,name=players_searching" json:"players_searching,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *DetailedSearchStatistic) Reset()                    { *m = DetailedSearchStatistic{} }
func (m *DetailedSearchStatistic) String() string            { return proto.CompactTextString(m) }
func (*DetailedSearchStatistic) ProtoMessage()               {}
func (*DetailedSearchStatistic) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *DetailedSearchStatistic) GetGameType() uint32 {
	if m != nil && m.GameType != nil {
		return *m.GameType
	}
	return 0
}

func (m *DetailedSearchStatistic) GetSearchTimeAvg() uint32 {
	if m != nil && m.SearchTimeAvg != nil {
		return *m.SearchTimeAvg
	}
	return 0
}

func (m *DetailedSearchStatistic) GetPlayersSearching() uint32 {
	if m != nil && m.PlayersSearching != nil {
		return *m.PlayersSearching
	}
	return 0
}

type TournamentPlayer struct {
	AccountId        *uint32 `protobuf:"varint,1,opt,name=account_id" json:"account_id,omitempty"`
	PlayerNick       *string `protobuf:"bytes,2,opt,name=player_nick" json:"player_nick,omitempty"`
	PlayerName       *string `protobuf:"bytes,3,opt,name=player_name" json:"player_name,omitempty"`
	PlayerDob        *uint32 `protobuf:"varint,4,opt,name=player_dob" json:"player_dob,omitempty"`
	PlayerFlag       *string `protobuf:"bytes,5,opt,name=player_flag" json:"player_flag,omitempty"`
	PlayerLocation   *string `protobuf:"bytes,6,opt,name=player_location" json:"player_location,omitempty"`
	PlayerDesc       *string `protobuf:"bytes,7,opt,name=player_desc" json:"player_desc,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *TournamentPlayer) Reset()                    { *m = TournamentPlayer{} }
func (m *TournamentPlayer) String() string            { return proto.CompactTextString(m) }
func (*TournamentPlayer) ProtoMessage()               {}
func (*TournamentPlayer) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *TournamentPlayer) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *TournamentPlayer) GetPlayerNick() string {
	if m != nil && m.PlayerNick != nil {
		return *m.PlayerNick
	}
	return ""
}

func (m *TournamentPlayer) GetPlayerName() string {
	if m != nil && m.PlayerName != nil {
		return *m.PlayerName
	}
	return ""
}

func (m *TournamentPlayer) GetPlayerDob() uint32 {
	if m != nil && m.PlayerDob != nil {
		return *m.PlayerDob
	}
	return 0
}

func (m *TournamentPlayer) GetPlayerFlag() string {
	if m != nil && m.PlayerFlag != nil {
		return *m.PlayerFlag
	}
	return ""
}

func (m *TournamentPlayer) GetPlayerLocation() string {
	if m != nil && m.PlayerLocation != nil {
		return *m.PlayerLocation
	}
	return ""
}

func (m *TournamentPlayer) GetPlayerDesc() string {
	if m != nil && m.PlayerDesc != nil {
		return *m.PlayerDesc
	}
	return ""
}

type TournamentTeam struct {
	TeamId           *int32              `protobuf:"varint,1,opt,name=team_id" json:"team_id,omitempty"`
	TeamTag          *string             `protobuf:"bytes,2,opt,name=team_tag" json:"team_tag,omitempty"`
	TeamFlag         *string             `protobuf:"bytes,3,opt,name=team_flag" json:"team_flag,omitempty"`
	TeamName         *string             `protobuf:"bytes,4,opt,name=team_name" json:"team_name,omitempty"`
	Players          []*TournamentPlayer `protobuf:"bytes,5,rep,name=players" json:"players,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *TournamentTeam) Reset()                    { *m = TournamentTeam{} }
func (m *TournamentTeam) String() string            { return proto.CompactTextString(m) }
func (*TournamentTeam) ProtoMessage()               {}
func (*TournamentTeam) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *TournamentTeam) GetTeamId() int32 {
	if m != nil && m.TeamId != nil {
		return *m.TeamId
	}
	return 0
}

func (m *TournamentTeam) GetTeamTag() string {
	if m != nil && m.TeamTag != nil {
		return *m.TeamTag
	}
	return ""
}

func (m *TournamentTeam) GetTeamFlag() string {
	if m != nil && m.TeamFlag != nil {
		return *m.TeamFlag
	}
	return ""
}

func (m *TournamentTeam) GetTeamName() string {
	if m != nil && m.TeamName != nil {
		return *m.TeamName
	}
	return ""
}

func (m *TournamentTeam) GetPlayers() []*TournamentPlayer {
	if m != nil {
		return m.Players
	}
	return nil
}

type TournamentEvent struct {
	EventId          *int32  `protobuf:"varint,1,opt,name=event_id" json:"event_id,omitempty"`
	EventTag         *string `protobuf:"bytes,2,opt,name=event_tag" json:"event_tag,omitempty"`
	EventName        *string `protobuf:"bytes,3,opt,name=event_name" json:"event_name,omitempty"`
	EventTimeStart   *uint32 `protobuf:"varint,4,opt,name=event_time_start" json:"event_time_start,omitempty"`
	EventTimeEnd     *uint32 `protobuf:"varint,5,opt,name=event_time_end" json:"event_time_end,omitempty"`
	EventPublic      *int32  `protobuf:"varint,6,opt,name=event_public" json:"event_public,omitempty"`
	EventStageId     *int32  `protobuf:"varint,7,opt,name=event_stage_id" json:"event_stage_id,omitempty"`
	EventStageName   *string `protobuf:"bytes,8,opt,name=event_stage_name" json:"event_stage_name,omitempty"`
	ActiveSectionId  *uint32 `protobuf:"varint,9,opt,name=active_section_id" json:"active_section_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *TournamentEvent) Reset()                    { *m = TournamentEvent{} }
func (m *TournamentEvent) String() string            { return proto.CompactTextString(m) }
func (*TournamentEvent) ProtoMessage()               {}
func (*TournamentEvent) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *TournamentEvent) GetEventId() int32 {
	if m != nil && m.EventId != nil {
		return *m.EventId
	}
	return 0
}

func (m *TournamentEvent) GetEventTag() string {
	if m != nil && m.EventTag != nil {
		return *m.EventTag
	}
	return ""
}

func (m *TournamentEvent) GetEventName() string {
	if m != nil && m.EventName != nil {
		return *m.EventName
	}
	return ""
}

func (m *TournamentEvent) GetEventTimeStart() uint32 {
	if m != nil && m.EventTimeStart != nil {
		return *m.EventTimeStart
	}
	return 0
}

func (m *TournamentEvent) GetEventTimeEnd() uint32 {
	if m != nil && m.EventTimeEnd != nil {
		return *m.EventTimeEnd
	}
	return 0
}

func (m *TournamentEvent) GetEventPublic() int32 {
	if m != nil && m.EventPublic != nil {
		return *m.EventPublic
	}
	return 0
}

func (m *TournamentEvent) GetEventStageId() int32 {
	if m != nil && m.EventStageId != nil {
		return *m.EventStageId
	}
	return 0
}

func (m *TournamentEvent) GetEventStageName() string {
	if m != nil && m.EventStageName != nil {
		return *m.EventStageName
	}
	return ""
}

func (m *TournamentEvent) GetActiveSectionId() uint32 {
	if m != nil && m.ActiveSectionId != nil {
		return *m.ActiveSectionId
	}
	return 0
}

type GlobalStatistics struct {
	PlayersOnline           *uint32                    `protobuf:"varint,1,opt,name=players_online" json:"players_online,omitempty"`
	ServersOnline           *uint32                    `protobuf:"varint,2,opt,name=servers_online" json:"servers_online,omitempty"`
	PlayersSearching        *uint32                    `protobuf:"varint,3,opt,name=players_searching" json:"players_searching,omitempty"`
	ServersAvailable        *uint32                    `protobuf:"varint,4,opt,name=servers_available" json:"servers_available,omitempty"`
	OngoingMatches          *uint32                    `protobuf:"varint,5,opt,name=ongoing_matches" json:"ongoing_matches,omitempty"`
	SearchTimeAvg           *uint32                    `protobuf:"varint,6,opt,name=search_time_avg" json:"search_time_avg,omitempty"`
	SearchStatistics        []*DetailedSearchStatistic `protobuf:"bytes,7,rep,name=search_statistics" json:"search_statistics,omitempty"`
	MainPostUrl             *string                    `protobuf:"bytes,8,opt,name=main_post_url" json:"main_post_url,omitempty"`
	RequiredAppidVersion    *uint32                    `protobuf:"varint,9,opt,name=required_appid_version" json:"required_appid_version,omitempty"`
	PricesheetVersion       *uint32                    `protobuf:"varint,10,opt,name=pricesheet_version" json:"pricesheet_version,omitempty"`
	TwitchStreamsVersion    *uint32                    `protobuf:"varint,11,opt,name=twitch_streams_version" json:"twitch_streams_version,omitempty"`
	ActiveTournamentEventid *uint32                    `protobuf:"varint,12,opt,name=active_tournament_eventid" json:"active_tournament_eventid,omitempty"`
	ActiveSurveyId          *uint32                    `protobuf:"varint,13,opt,name=active_survey_id" json:"active_survey_id,omitempty"`
	XXX_unrecognized        []byte                     `json:"-"`
}

func (m *GlobalStatistics) Reset()                    { *m = GlobalStatistics{} }
func (m *GlobalStatistics) String() string            { return proto.CompactTextString(m) }
func (*GlobalStatistics) ProtoMessage()               {}
func (*GlobalStatistics) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *GlobalStatistics) GetPlayersOnline() uint32 {
	if m != nil && m.PlayersOnline != nil {
		return *m.PlayersOnline
	}
	return 0
}

func (m *GlobalStatistics) GetServersOnline() uint32 {
	if m != nil && m.ServersOnline != nil {
		return *m.ServersOnline
	}
	return 0
}

func (m *GlobalStatistics) GetPlayersSearching() uint32 {
	if m != nil && m.PlayersSearching != nil {
		return *m.PlayersSearching
	}
	return 0
}

func (m *GlobalStatistics) GetServersAvailable() uint32 {
	if m != nil && m.ServersAvailable != nil {
		return *m.ServersAvailable
	}
	return 0
}

func (m *GlobalStatistics) GetOngoingMatches() uint32 {
	if m != nil && m.OngoingMatches != nil {
		return *m.OngoingMatches
	}
	return 0
}

func (m *GlobalStatistics) GetSearchTimeAvg() uint32 {
	if m != nil && m.SearchTimeAvg != nil {
		return *m.SearchTimeAvg
	}
	return 0
}

func (m *GlobalStatistics) GetSearchStatistics() []*DetailedSearchStatistic {
	if m != nil {
		return m.SearchStatistics
	}
	return nil
}

func (m *GlobalStatistics) GetMainPostUrl() string {
	if m != nil && m.MainPostUrl != nil {
		return *m.MainPostUrl
	}
	return ""
}

func (m *GlobalStatistics) GetRequiredAppidVersion() uint32 {
	if m != nil && m.RequiredAppidVersion != nil {
		return *m.RequiredAppidVersion
	}
	return 0
}

func (m *GlobalStatistics) GetPricesheetVersion() uint32 {
	if m != nil && m.PricesheetVersion != nil {
		return *m.PricesheetVersion
	}
	return 0
}

func (m *GlobalStatistics) GetTwitchStreamsVersion() uint32 {
	if m != nil && m.TwitchStreamsVersion != nil {
		return *m.TwitchStreamsVersion
	}
	return 0
}

func (m *GlobalStatistics) GetActiveTournamentEventid() uint32 {
	if m != nil && m.ActiveTournamentEventid != nil {
		return *m.ActiveTournamentEventid
	}
	return 0
}

func (m *GlobalStatistics) GetActiveSurveyId() uint32 {
	if m != nil && m.ActiveSurveyId != nil {
		return *m.ActiveSurveyId
	}
	return 0
}

type OperationalStatisticDescription struct {
	Name             *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Idkey            *uint32 `protobuf:"varint,2,opt,name=idkey" json:"idkey,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *OperationalStatisticDescription) Reset()                    { *m = OperationalStatisticDescription{} }
func (m *OperationalStatisticDescription) String() string            { return proto.CompactTextString(m) }
func (*OperationalStatisticDescription) ProtoMessage()               {}
func (*OperationalStatisticDescription) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *OperationalStatisticDescription) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *OperationalStatisticDescription) GetIdkey() uint32 {
	if m != nil && m.Idkey != nil {
		return *m.Idkey
	}
	return 0
}

type OperationalStatisticElement struct {
	Idkey            *uint32 `protobuf:"varint,1,opt,name=idkey" json:"idkey,omitempty"`
	Values           []int32 `protobuf:"varint,2,rep,name=values" json:"values,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *OperationalStatisticElement) Reset()                    { *m = OperationalStatisticElement{} }
func (m *OperationalStatisticElement) String() string            { return proto.CompactTextString(m) }
func (*OperationalStatisticElement) ProtoMessage()               {}
func (*OperationalStatisticElement) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *OperationalStatisticElement) GetIdkey() uint32 {
	if m != nil && m.Idkey != nil {
		return *m.Idkey
	}
	return 0
}

func (m *OperationalStatisticElement) GetValues() []int32 {
	if m != nil {
		return m.Values
	}
	return nil
}

type OperationalStatisticsPacket struct {
	Packetid         *int32                         `protobuf:"varint,1,opt,name=packetid" json:"packetid,omitempty"`
	Mstimestamp      *int32                         `protobuf:"varint,2,opt,name=mstimestamp" json:"mstimestamp,omitempty"`
	Values           []*OperationalStatisticElement `protobuf:"bytes,3,rep,name=values" json:"values,omitempty"`
	XXX_unrecognized []byte                         `json:"-"`
}

func (m *OperationalStatisticsPacket) Reset()                    { *m = OperationalStatisticsPacket{} }
func (m *OperationalStatisticsPacket) String() string            { return proto.CompactTextString(m) }
func (*OperationalStatisticsPacket) ProtoMessage()               {}
func (*OperationalStatisticsPacket) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *OperationalStatisticsPacket) GetPacketid() int32 {
	if m != nil && m.Packetid != nil {
		return *m.Packetid
	}
	return 0
}

func (m *OperationalStatisticsPacket) GetMstimestamp() int32 {
	if m != nil && m.Mstimestamp != nil {
		return *m.Mstimestamp
	}
	return 0
}

func (m *OperationalStatisticsPacket) GetValues() []*OperationalStatisticElement {
	if m != nil {
		return m.Values
	}
	return nil
}

type PlayerRankingInfo struct {
	AccountId        *uint32  `protobuf:"varint,1,opt,name=account_id" json:"account_id,omitempty"`
	RankId           *uint32  `protobuf:"varint,2,opt,name=rank_id" json:"rank_id,omitempty"`
	Wins             *uint32  `protobuf:"varint,3,opt,name=wins" json:"wins,omitempty"`
	RankChange       *float32 `protobuf:"fixed32,4,opt,name=rank_change" json:"rank_change,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *PlayerRankingInfo) Reset()                    { *m = PlayerRankingInfo{} }
func (m *PlayerRankingInfo) String() string            { return proto.CompactTextString(m) }
func (*PlayerRankingInfo) ProtoMessage()               {}
func (*PlayerRankingInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *PlayerRankingInfo) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *PlayerRankingInfo) GetRankId() uint32 {
	if m != nil && m.RankId != nil {
		return *m.RankId
	}
	return 0
}

func (m *PlayerRankingInfo) GetWins() uint32 {
	if m != nil && m.Wins != nil {
		return *m.Wins
	}
	return 0
}

func (m *PlayerRankingInfo) GetRankChange() float32 {
	if m != nil && m.RankChange != nil {
		return *m.RankChange
	}
	return 0
}

type PlayerCommendationInfo struct {
	CmdFriendly      *uint32 `protobuf:"varint,1,opt,name=cmd_friendly" json:"cmd_friendly,omitempty"`
	CmdTeaching      *uint32 `protobuf:"varint,2,opt,name=cmd_teaching" json:"cmd_teaching,omitempty"`
	CmdLeader        *uint32 `protobuf:"varint,4,opt,name=cmd_leader" json:"cmd_leader,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *PlayerCommendationInfo) Reset()                    { *m = PlayerCommendationInfo{} }
func (m *PlayerCommendationInfo) String() string            { return proto.CompactTextString(m) }
func (*PlayerCommendationInfo) ProtoMessage()               {}
func (*PlayerCommendationInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *PlayerCommendationInfo) GetCmdFriendly() uint32 {
	if m != nil && m.CmdFriendly != nil {
		return *m.CmdFriendly
	}
	return 0
}

func (m *PlayerCommendationInfo) GetCmdTeaching() uint32 {
	if m != nil && m.CmdTeaching != nil {
		return *m.CmdTeaching
	}
	return 0
}

func (m *PlayerCommendationInfo) GetCmdLeader() uint32 {
	if m != nil && m.CmdLeader != nil {
		return *m.CmdLeader
	}
	return 0
}

type PlayerMedalsInfo struct {
	MedalTeam                 *uint32  `protobuf:"varint,1,opt,name=medal_team" json:"medal_team,omitempty"`
	MedalCombat               *uint32  `protobuf:"varint,2,opt,name=medal_combat" json:"medal_combat,omitempty"`
	MedalWeapon               *uint32  `protobuf:"varint,3,opt,name=medal_weapon" json:"medal_weapon,omitempty"`
	MedalGlobal               *uint32  `protobuf:"varint,4,opt,name=medal_global" json:"medal_global,omitempty"`
	MedalArms                 *uint32  `protobuf:"varint,5,opt,name=medal_arms" json:"medal_arms,omitempty"`
	DisplayItemsDefidx        []uint32 `protobuf:"varint,7,rep,name=display_items_defidx" json:"display_items_defidx,omitempty"`
	FeaturedDisplayItemDefidx *uint32  `protobuf:"varint,8,opt,name=featured_display_item_defidx" json:"featured_display_item_defidx,omitempty"`
	XXX_unrecognized          []byte   `json:"-"`
}

func (m *PlayerMedalsInfo) Reset()                    { *m = PlayerMedalsInfo{} }
func (m *PlayerMedalsInfo) String() string            { return proto.CompactTextString(m) }
func (*PlayerMedalsInfo) ProtoMessage()               {}
func (*PlayerMedalsInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *PlayerMedalsInfo) GetMedalTeam() uint32 {
	if m != nil && m.MedalTeam != nil {
		return *m.MedalTeam
	}
	return 0
}

func (m *PlayerMedalsInfo) GetMedalCombat() uint32 {
	if m != nil && m.MedalCombat != nil {
		return *m.MedalCombat
	}
	return 0
}

func (m *PlayerMedalsInfo) GetMedalWeapon() uint32 {
	if m != nil && m.MedalWeapon != nil {
		return *m.MedalWeapon
	}
	return 0
}

func (m *PlayerMedalsInfo) GetMedalGlobal() uint32 {
	if m != nil && m.MedalGlobal != nil {
		return *m.MedalGlobal
	}
	return 0
}

func (m *PlayerMedalsInfo) GetMedalArms() uint32 {
	if m != nil && m.MedalArms != nil {
		return *m.MedalArms
	}
	return 0
}

func (m *PlayerMedalsInfo) GetDisplayItemsDefidx() []uint32 {
	if m != nil {
		return m.DisplayItemsDefidx
	}
	return nil
}

func (m *PlayerMedalsInfo) GetFeaturedDisplayItemDefidx() uint32 {
	if m != nil && m.FeaturedDisplayItemDefidx != nil {
		return *m.FeaturedDisplayItemDefidx
	}
	return 0
}

type AccountActivity struct {
	Activity         *uint32 `protobuf:"varint,1,opt,name=activity" json:"activity,omitempty"`
	Mode             *uint32 `protobuf:"varint,2,opt,name=mode" json:"mode,omitempty"`
	Map              *uint32 `protobuf:"varint,3,opt,name=map" json:"map,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *AccountActivity) Reset()                    { *m = AccountActivity{} }
func (m *AccountActivity) String() string            { return proto.CompactTextString(m) }
func (*AccountActivity) ProtoMessage()               {}
func (*AccountActivity) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *AccountActivity) GetActivity() uint32 {
	if m != nil && m.Activity != nil {
		return *m.Activity
	}
	return 0
}

func (m *AccountActivity) GetMode() uint32 {
	if m != nil && m.Mode != nil {
		return *m.Mode
	}
	return 0
}

func (m *AccountActivity) GetMap() uint32 {
	if m != nil && m.Map != nil {
		return *m.Map
	}
	return 0
}

type TournamentMatchSetup struct {
	EventId          *int32 `protobuf:"varint,1,opt,name=event_id" json:"event_id,omitempty"`
	TeamIdCt         *int32 `protobuf:"varint,2,opt,name=team_id_ct" json:"team_id_ct,omitempty"`
	TeamIdT          *int32 `protobuf:"varint,3,opt,name=team_id_t" json:"team_id_t,omitempty"`
	EventStageId     *int32 `protobuf:"varint,4,opt,name=event_stage_id" json:"event_stage_id,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *TournamentMatchSetup) Reset()                    { *m = TournamentMatchSetup{} }
func (m *TournamentMatchSetup) String() string            { return proto.CompactTextString(m) }
func (*TournamentMatchSetup) ProtoMessage()               {}
func (*TournamentMatchSetup) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *TournamentMatchSetup) GetEventId() int32 {
	if m != nil && m.EventId != nil {
		return *m.EventId
	}
	return 0
}

func (m *TournamentMatchSetup) GetTeamIdCt() int32 {
	if m != nil && m.TeamIdCt != nil {
		return *m.TeamIdCt
	}
	return 0
}

func (m *TournamentMatchSetup) GetTeamIdT() int32 {
	if m != nil && m.TeamIdT != nil {
		return *m.TeamIdT
	}
	return 0
}

func (m *TournamentMatchSetup) GetEventStageId() int32 {
	if m != nil && m.EventStageId != nil {
		return *m.EventStageId
	}
	return 0
}

type ServerHltvInfo struct {
	TvUdpPort        *uint32 `protobuf:"varint,1,opt,name=tv_udp_port" json:"tv_udp_port,omitempty"`
	TvWatchKey       *uint64 `protobuf:"varint,2,opt,name=tv_watch_key" json:"tv_watch_key,omitempty"`
	TvSlots          *uint32 `protobuf:"varint,3,opt,name=tv_slots" json:"tv_slots,omitempty"`
	TvClients        *uint32 `protobuf:"varint,4,opt,name=tv_clients" json:"tv_clients,omitempty"`
	TvProxies        *uint32 `protobuf:"varint,5,opt,name=tv_proxies" json:"tv_proxies,omitempty"`
	TvTime           *uint32 `protobuf:"varint,6,opt,name=tv_time" json:"tv_time,omitempty"`
	GameType         *uint32 `protobuf:"varint,8,opt,name=game_type" json:"game_type,omitempty"`
	GameMapgroup     *string `protobuf:"bytes,9,opt,name=game_mapgroup" json:"game_mapgroup,omitempty"`
	GameMap          *string `protobuf:"bytes,10,opt,name=game_map" json:"game_map,omitempty"`
	TvMasterSteamid  *uint64 `protobuf:"varint,11,opt,name=tv_master_steamid" json:"tv_master_steamid,omitempty"`
	TvLocalSlots     *uint32 `protobuf:"varint,12,opt,name=tv_local_slots" json:"tv_local_slots,omitempty"`
	TvLocalClients   *uint32 `protobuf:"varint,13,opt,name=tv_local_clients" json:"tv_local_clients,omitempty"`
	TvLocalProxies   *uint32 `protobuf:"varint,14,opt,name=tv_local_proxies" json:"tv_local_proxies,omitempty"`
	TvRelaySlots     *uint32 `protobuf:"varint,15,opt,name=tv_relay_slots" json:"tv_relay_slots,omitempty"`
	TvRelayClients   *uint32 `protobuf:"varint,16,opt,name=tv_relay_clients" json:"tv_relay_clients,omitempty"`
	TvRelayProxies   *uint32 `protobuf:"varint,17,opt,name=tv_relay_proxies" json:"tv_relay_proxies,omitempty"`
	TvRelayAddress   *uint32 `protobuf:"varint,18,opt,name=tv_relay_address" json:"tv_relay_address,omitempty"`
	TvRelayPort      *uint32 `protobuf:"varint,19,opt,name=tv_relay_port" json:"tv_relay_port,omitempty"`
	TvRelaySteamid   *uint64 `protobuf:"varint,20,opt,name=tv_relay_steamid" json:"tv_relay_steamid,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ServerHltvInfo) Reset()                    { *m = ServerHltvInfo{} }
func (m *ServerHltvInfo) String() string            { return proto.CompactTextString(m) }
func (*ServerHltvInfo) ProtoMessage()               {}
func (*ServerHltvInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *ServerHltvInfo) GetTvUdpPort() uint32 {
	if m != nil && m.TvUdpPort != nil {
		return *m.TvUdpPort
	}
	return 0
}

func (m *ServerHltvInfo) GetTvWatchKey() uint64 {
	if m != nil && m.TvWatchKey != nil {
		return *m.TvWatchKey
	}
	return 0
}

func (m *ServerHltvInfo) GetTvSlots() uint32 {
	if m != nil && m.TvSlots != nil {
		return *m.TvSlots
	}
	return 0
}

func (m *ServerHltvInfo) GetTvClients() uint32 {
	if m != nil && m.TvClients != nil {
		return *m.TvClients
	}
	return 0
}

func (m *ServerHltvInfo) GetTvProxies() uint32 {
	if m != nil && m.TvProxies != nil {
		return *m.TvProxies
	}
	return 0
}

func (m *ServerHltvInfo) GetTvTime() uint32 {
	if m != nil && m.TvTime != nil {
		return *m.TvTime
	}
	return 0
}

func (m *ServerHltvInfo) GetGameType() uint32 {
	if m != nil && m.GameType != nil {
		return *m.GameType
	}
	return 0
}

func (m *ServerHltvInfo) GetGameMapgroup() string {
	if m != nil && m.GameMapgroup != nil {
		return *m.GameMapgroup
	}
	return ""
}

func (m *ServerHltvInfo) GetGameMap() string {
	if m != nil && m.GameMap != nil {
		return *m.GameMap
	}
	return ""
}

func (m *ServerHltvInfo) GetTvMasterSteamid() uint64 {
	if m != nil && m.TvMasterSteamid != nil {
		return *m.TvMasterSteamid
	}
	return 0
}

func (m *ServerHltvInfo) GetTvLocalSlots() uint32 {
	if m != nil && m.TvLocalSlots != nil {
		return *m.TvLocalSlots
	}
	return 0
}

func (m *ServerHltvInfo) GetTvLocalClients() uint32 {
	if m != nil && m.TvLocalClients != nil {
		return *m.TvLocalClients
	}
	return 0
}

func (m *ServerHltvInfo) GetTvLocalProxies() uint32 {
	if m != nil && m.TvLocalProxies != nil {
		return *m.TvLocalProxies
	}
	return 0
}

func (m *ServerHltvInfo) GetTvRelaySlots() uint32 {
	if m != nil && m.TvRelaySlots != nil {
		return *m.TvRelaySlots
	}
	return 0
}

func (m *ServerHltvInfo) GetTvRelayClients() uint32 {
	if m != nil && m.TvRelayClients != nil {
		return *m.TvRelayClients
	}
	return 0
}

func (m *ServerHltvInfo) GetTvRelayProxies() uint32 {
	if m != nil && m.TvRelayProxies != nil {
		return *m.TvRelayProxies
	}
	return 0
}

func (m *ServerHltvInfo) GetTvRelayAddress() uint32 {
	if m != nil && m.TvRelayAddress != nil {
		return *m.TvRelayAddress
	}
	return 0
}

func (m *ServerHltvInfo) GetTvRelayPort() uint32 {
	if m != nil && m.TvRelayPort != nil {
		return *m.TvRelayPort
	}
	return 0
}

func (m *ServerHltvInfo) GetTvRelaySteamid() uint64 {
	if m != nil && m.TvRelaySteamid != nil {
		return *m.TvRelaySteamid
	}
	return 0
}

type IpAddressMask struct {
	A                *uint32 `protobuf:"varint,1,opt,name=a" json:"a,omitempty"`
	B                *uint32 `protobuf:"varint,2,opt,name=b" json:"b,omitempty"`
	C                *uint32 `protobuf:"varint,3,opt,name=c" json:"c,omitempty"`
	D                *uint32 `protobuf:"varint,4,opt,name=d" json:"d,omitempty"`
	Bits             *uint32 `protobuf:"varint,5,opt,name=bits" json:"bits,omitempty"`
	Token            *uint32 `protobuf:"varint,6,opt,name=token" json:"token,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *IpAddressMask) Reset()                    { *m = IpAddressMask{} }
func (m *IpAddressMask) String() string            { return proto.CompactTextString(m) }
func (*IpAddressMask) ProtoMessage()               {}
func (*IpAddressMask) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *IpAddressMask) GetA() uint32 {
	if m != nil && m.A != nil {
		return *m.A
	}
	return 0
}

func (m *IpAddressMask) GetB() uint32 {
	if m != nil && m.B != nil {
		return *m.B
	}
	return 0
}

func (m *IpAddressMask) GetC() uint32 {
	if m != nil && m.C != nil {
		return *m.C
	}
	return 0
}

func (m *IpAddressMask) GetD() uint32 {
	if m != nil && m.D != nil {
		return *m.D
	}
	return 0
}

func (m *IpAddressMask) GetBits() uint32 {
	if m != nil && m.Bits != nil {
		return *m.Bits
	}
	return 0
}

func (m *IpAddressMask) GetToken() uint32 {
	if m != nil && m.Token != nil {
		return *m.Token
	}
	return 0
}

type XpProgressData struct {
	XpPoints         *uint32 `protobuf:"varint,1,opt,name=xp_points" json:"xp_points,omitempty"`
	XpCategory       *int32  `protobuf:"varint,2,opt,name=xp_category" json:"xp_category,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *XpProgressData) Reset()                    { *m = XpProgressData{} }
func (m *XpProgressData) String() string            { return proto.CompactTextString(m) }
func (*XpProgressData) ProtoMessage()               {}
func (*XpProgressData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func (m *XpProgressData) GetXpPoints() uint32 {
	if m != nil && m.XpPoints != nil {
		return *m.XpPoints
	}
	return 0
}

func (m *XpProgressData) GetXpCategory() int32 {
	if m != nil && m.XpCategory != nil {
		return *m.XpCategory
	}
	return 0
}

type MatchEndItemUpdates struct {
	ItemId             *uint64 `protobuf:"varint,1,opt,name=item_id" json:"item_id,omitempty"`
	ItemAttrDefidx     *uint32 `protobuf:"varint,2,opt,name=item_attr_defidx" json:"item_attr_defidx,omitempty"`
	ItemAttrDeltaValue *uint32 `protobuf:"varint,3,opt,name=item_attr_delta_value" json:"item_attr_delta_value,omitempty"`
	XXX_unrecognized   []byte  `json:"-"`
}

func (m *MatchEndItemUpdates) Reset()                    { *m = MatchEndItemUpdates{} }
func (m *MatchEndItemUpdates) String() string            { return proto.CompactTextString(m) }
func (*MatchEndItemUpdates) ProtoMessage()               {}
func (*MatchEndItemUpdates) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

func (m *MatchEndItemUpdates) GetItemId() uint64 {
	if m != nil && m.ItemId != nil {
		return *m.ItemId
	}
	return 0
}

func (m *MatchEndItemUpdates) GetItemAttrDefidx() uint32 {
	if m != nil && m.ItemAttrDefidx != nil {
		return *m.ItemAttrDefidx
	}
	return 0
}

func (m *MatchEndItemUpdates) GetItemAttrDeltaValue() uint32 {
	if m != nil && m.ItemAttrDeltaValue != nil {
		return *m.ItemAttrDeltaValue
	}
	return 0
}

type PlayerQuestData struct {
	QuesterAccountId *uint32                          `protobuf:"varint,1,opt,name=quester_account_id" json:"quester_account_id,omitempty"`
	QuestItemData    []*PlayerQuestData_QuestItemData `protobuf:"bytes,2,rep,name=quest_item_data" json:"quest_item_data,omitempty"`
	XpProgressData   []*XpProgressData                `protobuf:"bytes,3,rep,name=xp_progress_data" json:"xp_progress_data,omitempty"`
	TimePlayed       *uint32                          `protobuf:"varint,4,opt,name=time_played" json:"time_played,omitempty"`
	MmGameMode       *uint32                          `protobuf:"varint,5,opt,name=mm_game_mode" json:"mm_game_mode,omitempty"`
	ItemUpdates      []*MatchEndItemUpdates           `protobuf:"bytes,6,rep,name=item_updates" json:"item_updates,omitempty"`
	XXX_unrecognized []byte                           `json:"-"`
}

func (m *PlayerQuestData) Reset()                    { *m = PlayerQuestData{} }
func (m *PlayerQuestData) String() string            { return proto.CompactTextString(m) }
func (*PlayerQuestData) ProtoMessage()               {}
func (*PlayerQuestData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

func (m *PlayerQuestData) GetQuesterAccountId() uint32 {
	if m != nil && m.QuesterAccountId != nil {
		return *m.QuesterAccountId
	}
	return 0
}

func (m *PlayerQuestData) GetQuestItemData() []*PlayerQuestData_QuestItemData {
	if m != nil {
		return m.QuestItemData
	}
	return nil
}

func (m *PlayerQuestData) GetXpProgressData() []*XpProgressData {
	if m != nil {
		return m.XpProgressData
	}
	return nil
}

func (m *PlayerQuestData) GetTimePlayed() uint32 {
	if m != nil && m.TimePlayed != nil {
		return *m.TimePlayed
	}
	return 0
}

func (m *PlayerQuestData) GetMmGameMode() uint32 {
	if m != nil && m.MmGameMode != nil {
		return *m.MmGameMode
	}
	return 0
}

func (m *PlayerQuestData) GetItemUpdates() []*MatchEndItemUpdates {
	if m != nil {
		return m.ItemUpdates
	}
	return nil
}

type PlayerQuestData_QuestItemData struct {
	QuestId                 *uint64 `protobuf:"varint,1,opt,name=quest_id" json:"quest_id,omitempty"`
	QuestNormalPointsEarned *int32  `protobuf:"varint,2,opt,name=quest_normal_points_earned" json:"quest_normal_points_earned,omitempty"`
	QuestBonusPointsEarned  *int32  `protobuf:"varint,3,opt,name=quest_bonus_points_earned" json:"quest_bonus_points_earned,omitempty"`
	XXX_unrecognized        []byte  `json:"-"`
}

func (m *PlayerQuestData_QuestItemData) Reset()         { *m = PlayerQuestData_QuestItemData{} }
func (m *PlayerQuestData_QuestItemData) String() string { return proto.CompactTextString(m) }
func (*PlayerQuestData_QuestItemData) ProtoMessage()    {}
func (*PlayerQuestData_QuestItemData) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{18, 0}
}

func (m *PlayerQuestData_QuestItemData) GetQuestId() uint64 {
	if m != nil && m.QuestId != nil {
		return *m.QuestId
	}
	return 0
}

func (m *PlayerQuestData_QuestItemData) GetQuestNormalPointsEarned() int32 {
	if m != nil && m.QuestNormalPointsEarned != nil {
		return *m.QuestNormalPointsEarned
	}
	return 0
}

func (m *PlayerQuestData_QuestItemData) GetQuestBonusPointsEarned() int32 {
	if m != nil && m.QuestBonusPointsEarned != nil {
		return *m.QuestBonusPointsEarned
	}
	return 0
}

type CMsgGC_ServerQuestUpdateData struct {
	PlayerQuestData  []*PlayerQuestData `protobuf:"bytes,1,rep,name=player_quest_data" json:"player_quest_data,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *CMsgGC_ServerQuestUpdateData) Reset()                    { *m = CMsgGC_ServerQuestUpdateData{} }
func (m *CMsgGC_ServerQuestUpdateData) String() string            { return proto.CompactTextString(m) }
func (*CMsgGC_ServerQuestUpdateData) ProtoMessage()               {}
func (*CMsgGC_ServerQuestUpdateData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{19} }

func (m *CMsgGC_ServerQuestUpdateData) GetPlayerQuestData() []*PlayerQuestData {
	if m != nil {
		return m.PlayerQuestData
	}
	return nil
}

type CMsgGCCStrike15V2_MatchmakingGCOperationalStats struct {
	Packetid         *int32                             `protobuf:"varint,1,opt,name=packetid" json:"packetid,omitempty"`
	Namekeys         []*OperationalStatisticDescription `protobuf:"bytes,2,rep,name=namekeys" json:"namekeys,omitempty"`
	Packets          []*OperationalStatisticsPacket     `protobuf:"bytes,3,rep,name=packets" json:"packets,omitempty"`
	XXX_unrecognized []byte                             `json:"-"`
}

func (m *CMsgGCCStrike15V2_MatchmakingGCOperationalStats) Reset() {
	*m = CMsgGCCStrike15V2_MatchmakingGCOperationalStats{}
}
func (m *CMsgGCCStrike15V2_MatchmakingGCOperationalStats) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgGCCStrike15V2_MatchmakingGCOperationalStats) ProtoMessage() {}
func (*CMsgGCCStrike15V2_MatchmakingGCOperationalStats) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{20}
}

func (m *CMsgGCCStrike15V2_MatchmakingGCOperationalStats) GetPacketid() int32 {
	if m != nil && m.Packetid != nil {
		return *m.Packetid
	}
	return 0
}

func (m *CMsgGCCStrike15V2_MatchmakingGCOperationalStats) GetNamekeys() []*OperationalStatisticDescription {
	if m != nil {
		return m.Namekeys
	}
	return nil
}

func (m *CMsgGCCStrike15V2_MatchmakingGCOperationalStats) GetPackets() []*OperationalStatisticsPacket {
	if m != nil {
		return m.Packets
	}
	return nil
}

type CMsgGCCStrike15V2_MatchmakingGC2ServerConfirm struct {
	Token            *uint32 `protobuf:"varint,1,opt,name=token" json:"token,omitempty"`
	Stamp            *uint32 `protobuf:"varint,2,opt,name=stamp" json:"stamp,omitempty"`
	Exchange         *uint64 `protobuf:"varint,3,opt,name=exchange" json:"exchange,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgGCCStrike15V2_MatchmakingGC2ServerConfirm) Reset() {
	*m = CMsgGCCStrike15V2_MatchmakingGC2ServerConfirm{}
}
func (m *CMsgGCCStrike15V2_MatchmakingGC2ServerConfirm) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgGCCStrike15V2_MatchmakingGC2ServerConfirm) ProtoMessage() {}
func (*CMsgGCCStrike15V2_MatchmakingGC2ServerConfirm) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{21}
}

func (m *CMsgGCCStrike15V2_MatchmakingGC2ServerConfirm) GetToken() uint32 {
	if m != nil && m.Token != nil {
		return *m.Token
	}
	return 0
}

func (m *CMsgGCCStrike15V2_MatchmakingGC2ServerConfirm) GetStamp() uint32 {
	if m != nil && m.Stamp != nil {
		return *m.Stamp
	}
	return 0
}

func (m *CMsgGCCStrike15V2_MatchmakingGC2ServerConfirm) GetExchange() uint64 {
	if m != nil && m.Exchange != nil {
		return *m.Exchange
	}
	return 0
}

type CMsgGCCStrike15V2_GC2ServerReservationUpdate struct {
	ViewersExternalTotal *uint32 `protobuf:"varint,1,opt,name=viewers_external_total" json:"viewers_external_total,omitempty"`
	ViewersExternalSteam *uint32 `protobuf:"varint,2,opt,name=viewers_external_steam" json:"viewers_external_steam,omitempty"`
	XXX_unrecognized     []byte  `json:"-"`
}

func (m *CMsgGCCStrike15V2_GC2ServerReservationUpdate) Reset() {
	*m = CMsgGCCStrike15V2_GC2ServerReservationUpdate{}
}
func (m *CMsgGCCStrike15V2_GC2ServerReservationUpdate) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgGCCStrike15V2_GC2ServerReservationUpdate) ProtoMessage() {}
func (*CMsgGCCStrike15V2_GC2ServerReservationUpdate) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{22}
}

func (m *CMsgGCCStrike15V2_GC2ServerReservationUpdate) GetViewersExternalTotal() uint32 {
	if m != nil && m.ViewersExternalTotal != nil {
		return *m.ViewersExternalTotal
	}
	return 0
}

func (m *CMsgGCCStrike15V2_GC2ServerReservationUpdate) GetViewersExternalSteam() uint32 {
	if m != nil && m.ViewersExternalSteam != nil {
		return *m.ViewersExternalSteam
	}
	return 0
}

type CMsgGCCStrike15V2_MatchmakingStart struct {
	AccountIds       []uint32              `protobuf:"varint,1,rep,name=account_ids" json:"account_ids,omitempty"`
	GameType         *uint32               `protobuf:"varint,2,opt,name=game_type" json:"game_type,omitempty"`
	TicketData       *string               `protobuf:"bytes,3,opt,name=ticket_data" json:"ticket_data,omitempty"`
	ClientVersion    *uint32               `protobuf:"varint,4,opt,name=client_version" json:"client_version,omitempty"`
	TournamentMatch  *TournamentMatchSetup `protobuf:"bytes,5,opt,name=tournament_match" json:"tournament_match,omitempty"`
	XXX_unrecognized []byte                `json:"-"`
}

func (m *CMsgGCCStrike15V2_MatchmakingStart) Reset()         { *m = CMsgGCCStrike15V2_MatchmakingStart{} }
func (m *CMsgGCCStrike15V2_MatchmakingStart) String() string { return proto.CompactTextString(m) }
func (*CMsgGCCStrike15V2_MatchmakingStart) ProtoMessage()    {}
func (*CMsgGCCStrike15V2_MatchmakingStart) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{23}
}

func (m *CMsgGCCStrike15V2_MatchmakingStart) GetAccountIds() []uint32 {
	if m != nil {
		return m.AccountIds
	}
	return nil
}

func (m *CMsgGCCStrike15V2_MatchmakingStart) GetGameType() uint32 {
	if m != nil && m.GameType != nil {
		return *m.GameType
	}
	return 0
}

func (m *CMsgGCCStrike15V2_MatchmakingStart) GetTicketData() string {
	if m != nil && m.TicketData != nil {
		return *m.TicketData
	}
	return ""
}

func (m *CMsgGCCStrike15V2_MatchmakingStart) GetClientVersion() uint32 {
	if m != nil && m.ClientVersion != nil {
		return *m.ClientVersion
	}
	return 0
}

func (m *CMsgGCCStrike15V2_MatchmakingStart) GetTournamentMatch() *TournamentMatchSetup {
	if m != nil {
		return m.TournamentMatch
	}
	return nil
}

type CMsgGCCStrike15V2_MatchmakingStop struct {
	Abandon          *int32 `protobuf:"varint,1,opt,name=abandon" json:"abandon,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMsgGCCStrike15V2_MatchmakingStop) Reset()         { *m = CMsgGCCStrike15V2_MatchmakingStop{} }
func (m *CMsgGCCStrike15V2_MatchmakingStop) String() string { return proto.CompactTextString(m) }
func (*CMsgGCCStrike15V2_MatchmakingStop) ProtoMessage()    {}
func (*CMsgGCCStrike15V2_MatchmakingStop) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{24}
}

func (m *CMsgGCCStrike15V2_MatchmakingStop) GetAbandon() int32 {
	if m != nil && m.Abandon != nil {
		return *m.Abandon
	}
	return 0
}

type CMsgGCCStrike15V2_MatchmakingClient2ServerPing struct {
	Gameserverpings  []*GameServerPing `protobuf:"bytes,1,rep,name=gameserverpings" json:"gameserverpings,omitempty"`
	OffsetIndex      *int32            `protobuf:"varint,2,opt,name=offset_index" json:"offset_index,omitempty"`
	FinalBatch       *int32            `protobuf:"varint,3,opt,name=final_batch" json:"final_batch,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *CMsgGCCStrike15V2_MatchmakingClient2ServerPing) Reset() {
	*m = CMsgGCCStrike15V2_MatchmakingClient2ServerPing{}
}
func (m *CMsgGCCStrike15V2_MatchmakingClient2ServerPing) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgGCCStrike15V2_MatchmakingClient2ServerPing) ProtoMessage() {}
func (*CMsgGCCStrike15V2_MatchmakingClient2ServerPing) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{25}
}

func (m *CMsgGCCStrike15V2_MatchmakingClient2ServerPing) GetGameserverpings() []*GameServerPing {
	if m != nil {
		return m.Gameserverpings
	}
	return nil
}

func (m *CMsgGCCStrike15V2_MatchmakingClient2ServerPing) GetOffsetIndex() int32 {
	if m != nil && m.OffsetIndex != nil {
		return *m.OffsetIndex
	}
	return 0
}

func (m *CMsgGCCStrike15V2_MatchmakingClient2ServerPing) GetFinalBatch() int32 {
	if m != nil && m.FinalBatch != nil {
		return *m.FinalBatch
	}
	return 0
}

type CMsgGCCStrike15V2_MatchmakingGC2ClientUpdate struct {
	Matchmaking                   *int32                                               `protobuf:"varint,1,opt,name=matchmaking" json:"matchmaking,omitempty"`
	WaitingAccountIdSessions      []uint32                                             `protobuf:"varint,2,rep,name=waiting_account_id_sessions" json:"waiting_account_id_sessions,omitempty"`
	Error                         *string                                              `protobuf:"bytes,3,opt,name=error" json:"error,omitempty"`
	OngoingmatchAccountIdSessions []uint32                                             `protobuf:"varint,6,rep,name=ongoingmatch_account_id_sessions" json:"ongoingmatch_account_id_sessions,omitempty"`
	GlobalStats                   *GlobalStatistics                                    `protobuf:"bytes,7,opt,name=global_stats" json:"global_stats,omitempty"`
	FailpingAccountIdSessions     []uint32                                             `protobuf:"varint,8,rep,name=failping_account_id_sessions" json:"failping_account_id_sessions,omitempty"`
	PenaltyAccountIdSessions      []uint32                                             `protobuf:"varint,9,rep,name=penalty_account_id_sessions" json:"penalty_account_id_sessions,omitempty"`
	FailreadyAccountIdSessions    []uint32                                             `protobuf:"varint,10,rep,name=failready_account_id_sessions" json:"failready_account_id_sessions,omitempty"`
	VacbannedAccountIdSessions    []uint32                                             `protobuf:"varint,11,rep,name=vacbanned_account_id_sessions" json:"vacbanned_account_id_sessions,omitempty"`
	ServerIpaddressMask           *IpAddressMask                                       `protobuf:"bytes,12,opt,name=server_ipaddress_mask" json:"server_ipaddress_mask,omitempty"`
	Notes                         []*CMsgGCCStrike15V2_MatchmakingGC2ClientUpdate_Note `protobuf:"bytes,13,rep,name=notes" json:"notes,omitempty"`
	PenaltyAccountIdSessionsGreen []uint32                                             `protobuf:"varint,14,rep,name=penalty_account_id_sessions_green" json:"penalty_account_id_sessions_green,omitempty"`
	InsufficientlevelSessions     []uint32                                             `protobuf:"varint,15,rep,name=insufficientlevel_sessions" json:"insufficientlevel_sessions,omitempty"`
	XXX_unrecognized              []byte                                               `json:"-"`
}

func (m *CMsgGCCStrike15V2_MatchmakingGC2ClientUpdate) Reset() {
	*m = CMsgGCCStrike15V2_MatchmakingGC2ClientUpdate{}
}
func (m *CMsgGCCStrike15V2_MatchmakingGC2ClientUpdate) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgGCCStrike15V2_MatchmakingGC2ClientUpdate) ProtoMessage() {}
func (*CMsgGCCStrike15V2_MatchmakingGC2ClientUpdate) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{26}
}

func (m *CMsgGCCStrike15V2_MatchmakingGC2ClientUpdate) GetMatchmaking() int32 {
	if m != nil && m.Matchmaking != nil {
		return *m.Matchmaking
	}
	return 0
}

func (m *CMsgGCCStrike15V2_MatchmakingGC2ClientUpdate) GetWaitingAccountIdSessions() []uint32 {
	if m != nil {
		return m.WaitingAccountIdSessions
	}
	return nil
}

func (m *CMsgGCCStrike15V2_MatchmakingGC2ClientUpdate) GetError() string {
	if m != nil && m.Error != nil {
		return *m.Error
	}
	return ""
}

func (m *CMsgGCCStrike15V2_MatchmakingGC2ClientUpdate) GetOngoingmatchAccountIdSessions() []uint32 {
	if m != nil {
		return m.OngoingmatchAccountIdSessions
	}
	return nil
}

func (m *CMsgGCCStrike15V2_MatchmakingGC2ClientUpdate) GetGlobalStats() *GlobalStatistics {
	if m != nil {
		return m.GlobalStats
	}
	return nil
}

func (m *CMsgGCCStrike15V2_MatchmakingGC2ClientUpdate) GetFailpingAccountIdSessions() []uint32 {
	if m != nil {
		return m.FailpingAccountIdSessions
	}
	return nil
}

func (m *CMsgGCCStrike15V2_MatchmakingGC2ClientUpdate) GetPenaltyAccountIdSessions() []uint32 {
	if m != nil {
		return m.PenaltyAccountIdSessions
	}
	return nil
}

func (m *CMsgGCCStrike15V2_MatchmakingGC2ClientUpdate) GetFailreadyAccountIdSessions() []uint32 {
	if m != nil {
		return m.FailreadyAccountIdSessions
	}
	return nil
}

func (m *CMsgGCCStrike15V2_MatchmakingGC2ClientUpdate) GetVacbannedAccountIdSessions() []uint32 {
	if m != nil {
		return m.VacbannedAccountIdSessions
	}
	return nil
}

func (m *CMsgGCCStrike15V2_MatchmakingGC2ClientUpdate) GetServerIpaddressMask() *IpAddressMask {
	if m != nil {
		return m.ServerIpaddressMask
	}
	return nil
}

func (m *CMsgGCCStrike15V2_MatchmakingGC2ClientUpdate) GetNotes() []*CMsgGCCStrike15V2_MatchmakingGC2ClientUpdate_Note {
	if m != nil {
		return m.Notes
	}
	return nil
}

func (m *CMsgGCCStrike15V2_MatchmakingGC2ClientUpdate) GetPenaltyAccountIdSessionsGreen() []uint32 {
	if m != nil {
		return m.PenaltyAccountIdSessionsGreen
	}
	return nil
}

func (m *CMsgGCCStrike15V2_MatchmakingGC2ClientUpdate) GetInsufficientlevelSessions() []uint32 {
	if m != nil {
		return m.InsufficientlevelSessions
	}
	return nil
}

type CMsgGCCStrike15V2_MatchmakingGC2ClientUpdate_Note struct {
	Type             *int32   `protobuf:"varint,1,opt,name=type" json:"type,omitempty"`
	RegionId         *int32   `protobuf:"varint,2,opt,name=region_id" json:"region_id,omitempty"`
	RegionR          *float32 `protobuf:"fixed32,3,opt,name=region_r" json:"region_r,omitempty"`
	Distance         *float32 `protobuf:"fixed32,4,opt,name=distance" json:"distance,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CMsgGCCStrike15V2_MatchmakingGC2ClientUpdate_Note) Reset() {
	*m = CMsgGCCStrike15V2_MatchmakingGC2ClientUpdate_Note{}
}
func (m *CMsgGCCStrike15V2_MatchmakingGC2ClientUpdate_Note) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgGCCStrike15V2_MatchmakingGC2ClientUpdate_Note) ProtoMessage() {}
func (*CMsgGCCStrike15V2_MatchmakingGC2ClientUpdate_Note) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{26, 0}
}

func (m *CMsgGCCStrike15V2_MatchmakingGC2ClientUpdate_Note) GetType() int32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

func (m *CMsgGCCStrike15V2_MatchmakingGC2ClientUpdate_Note) GetRegionId() int32 {
	if m != nil && m.RegionId != nil {
		return *m.RegionId
	}
	return 0
}

func (m *CMsgGCCStrike15V2_MatchmakingGC2ClientUpdate_Note) GetRegionR() float32 {
	if m != nil && m.RegionR != nil {
		return *m.RegionR
	}
	return 0
}

func (m *CMsgGCCStrike15V2_MatchmakingGC2ClientUpdate_Note) GetDistance() float32 {
	if m != nil && m.Distance != nil {
		return *m.Distance
	}
	return 0
}

type CDataGCCStrike15V2_TournamentMatchDraft struct {
	EventId          *int32                                           `protobuf:"varint,1,opt,name=event_id" json:"event_id,omitempty"`
	EventStageId     *int32                                           `protobuf:"varint,2,opt,name=event_stage_id" json:"event_stage_id,omitempty"`
	TeamId_0         *int32                                           `protobuf:"varint,3,opt,name=team_id_0" json:"team_id_0,omitempty"`
	TeamId_1         *int32                                           `protobuf:"varint,4,opt,name=team_id_1" json:"team_id_1,omitempty"`
	MapsCount        *int32                                           `protobuf:"varint,5,opt,name=maps_count" json:"maps_count,omitempty"`
	MapsCurrent      *int32                                           `protobuf:"varint,6,opt,name=maps_current" json:"maps_current,omitempty"`
	TeamIdStart      *int32                                           `protobuf:"varint,7,opt,name=team_id_start" json:"team_id_start,omitempty"`
	TeamIdVeto1      *int32                                           `protobuf:"varint,8,opt,name=team_id_veto1" json:"team_id_veto1,omitempty"`
	TeamIdPickn      *int32                                           `protobuf:"varint,9,opt,name=team_id_pickn" json:"team_id_pickn,omitempty"`
	Drafts           []*CDataGCCStrike15V2_TournamentMatchDraft_Entry `protobuf:"bytes,10,rep,name=drafts" json:"drafts,omitempty"`
	XXX_unrecognized []byte                                           `json:"-"`
}

func (m *CDataGCCStrike15V2_TournamentMatchDraft) Reset() {
	*m = CDataGCCStrike15V2_TournamentMatchDraft{}
}
func (m *CDataGCCStrike15V2_TournamentMatchDraft) String() string { return proto.CompactTextString(m) }
func (*CDataGCCStrike15V2_TournamentMatchDraft) ProtoMessage()    {}
func (*CDataGCCStrike15V2_TournamentMatchDraft) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{27}
}

func (m *CDataGCCStrike15V2_TournamentMatchDraft) GetEventId() int32 {
	if m != nil && m.EventId != nil {
		return *m.EventId
	}
	return 0
}

func (m *CDataGCCStrike15V2_TournamentMatchDraft) GetEventStageId() int32 {
	if m != nil && m.EventStageId != nil {
		return *m.EventStageId
	}
	return 0
}

func (m *CDataGCCStrike15V2_TournamentMatchDraft) GetTeamId_0() int32 {
	if m != nil && m.TeamId_0 != nil {
		return *m.TeamId_0
	}
	return 0
}

func (m *CDataGCCStrike15V2_TournamentMatchDraft) GetTeamId_1() int32 {
	if m != nil && m.TeamId_1 != nil {
		return *m.TeamId_1
	}
	return 0
}

func (m *CDataGCCStrike15V2_TournamentMatchDraft) GetMapsCount() int32 {
	if m != nil && m.MapsCount != nil {
		return *m.MapsCount
	}
	return 0
}

func (m *CDataGCCStrike15V2_TournamentMatchDraft) GetMapsCurrent() int32 {
	if m != nil && m.MapsCurrent != nil {
		return *m.MapsCurrent
	}
	return 0
}

func (m *CDataGCCStrike15V2_TournamentMatchDraft) GetTeamIdStart() int32 {
	if m != nil && m.TeamIdStart != nil {
		return *m.TeamIdStart
	}
	return 0
}

func (m *CDataGCCStrike15V2_TournamentMatchDraft) GetTeamIdVeto1() int32 {
	if m != nil && m.TeamIdVeto1 != nil {
		return *m.TeamIdVeto1
	}
	return 0
}

func (m *CDataGCCStrike15V2_TournamentMatchDraft) GetTeamIdPickn() int32 {
	if m != nil && m.TeamIdPickn != nil {
		return *m.TeamIdPickn
	}
	return 0
}

func (m *CDataGCCStrike15V2_TournamentMatchDraft) GetDrafts() []*CDataGCCStrike15V2_TournamentMatchDraft_Entry {
	if m != nil {
		return m.Drafts
	}
	return nil
}

type CDataGCCStrike15V2_TournamentMatchDraft_Entry struct {
	Mapid            *int32 `protobuf:"varint,1,opt,name=mapid" json:"mapid,omitempty"`
	TeamIdCt         *int32 `protobuf:"varint,2,opt,name=team_id_ct" json:"team_id_ct,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CDataGCCStrike15V2_TournamentMatchDraft_Entry) Reset() {
	*m = CDataGCCStrike15V2_TournamentMatchDraft_Entry{}
}
func (m *CDataGCCStrike15V2_TournamentMatchDraft_Entry) String() string {
	return proto.CompactTextString(m)
}
func (*CDataGCCStrike15V2_TournamentMatchDraft_Entry) ProtoMessage() {}
func (*CDataGCCStrike15V2_TournamentMatchDraft_Entry) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{27, 0}
}

func (m *CDataGCCStrike15V2_TournamentMatchDraft_Entry) GetMapid() int32 {
	if m != nil && m.Mapid != nil {
		return *m.Mapid
	}
	return 0
}

func (m *CDataGCCStrike15V2_TournamentMatchDraft_Entry) GetTeamIdCt() int32 {
	if m != nil && m.TeamIdCt != nil {
		return *m.TeamIdCt
	}
	return 0
}

type CPreMatchInfoData struct {
	PredictionsPct   *int32                                   `protobuf:"varint,1,opt,name=predictions_pct" json:"predictions_pct,omitempty"`
	Draft            *CDataGCCStrike15V2_TournamentMatchDraft `protobuf:"bytes,4,opt,name=draft" json:"draft,omitempty"`
	Stats            []*CPreMatchInfoData_TeamStats           `protobuf:"bytes,5,rep,name=stats" json:"stats,omitempty"`
	XXX_unrecognized []byte                                   `json:"-"`
}

func (m *CPreMatchInfoData) Reset()                    { *m = CPreMatchInfoData{} }
func (m *CPreMatchInfoData) String() string            { return proto.CompactTextString(m) }
func (*CPreMatchInfoData) ProtoMessage()               {}
func (*CPreMatchInfoData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{28} }

func (m *CPreMatchInfoData) GetPredictionsPct() int32 {
	if m != nil && m.PredictionsPct != nil {
		return *m.PredictionsPct
	}
	return 0
}

func (m *CPreMatchInfoData) GetDraft() *CDataGCCStrike15V2_TournamentMatchDraft {
	if m != nil {
		return m.Draft
	}
	return nil
}

func (m *CPreMatchInfoData) GetStats() []*CPreMatchInfoData_TeamStats {
	if m != nil {
		return m.Stats
	}
	return nil
}

type CPreMatchInfoData_TeamStats struct {
	MatchInfoIdxtxt  *int32   `protobuf:"varint,1,opt,name=match_info_idxtxt" json:"match_info_idxtxt,omitempty"`
	MatchInfoTxt     *string  `protobuf:"bytes,2,opt,name=match_info_txt" json:"match_info_txt,omitempty"`
	MatchInfoTeams   []string `protobuf:"bytes,3,rep,name=match_info_teams" json:"match_info_teams,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CPreMatchInfoData_TeamStats) Reset()                    { *m = CPreMatchInfoData_TeamStats{} }
func (m *CPreMatchInfoData_TeamStats) String() string            { return proto.CompactTextString(m) }
func (*CPreMatchInfoData_TeamStats) ProtoMessage()               {}
func (*CPreMatchInfoData_TeamStats) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{28, 0} }

func (m *CPreMatchInfoData_TeamStats) GetMatchInfoIdxtxt() int32 {
	if m != nil && m.MatchInfoIdxtxt != nil {
		return *m.MatchInfoIdxtxt
	}
	return 0
}

func (m *CPreMatchInfoData_TeamStats) GetMatchInfoTxt() string {
	if m != nil && m.MatchInfoTxt != nil {
		return *m.MatchInfoTxt
	}
	return ""
}

func (m *CPreMatchInfoData_TeamStats) GetMatchInfoTeams() []string {
	if m != nil {
		return m.MatchInfoTeams
	}
	return nil
}

type CMsgGCCStrike15V2_MatchmakingGC2ServerReserve struct {
	AccountIds                  []uint32             `protobuf:"varint,1,rep,name=account_ids" json:"account_ids,omitempty"`
	GameType                    *uint32              `protobuf:"varint,2,opt,name=game_type" json:"game_type,omitempty"`
	MatchId                     *uint64              `protobuf:"varint,3,opt,name=match_id" json:"match_id,omitempty"`
	ServerVersion               *uint32              `protobuf:"varint,4,opt,name=server_version" json:"server_version,omitempty"`
	Rankings                    []*PlayerRankingInfo `protobuf:"bytes,5,rep,name=rankings" json:"rankings,omitempty"`
	EncryptionKey               *uint64              `protobuf:"varint,6,opt,name=encryption_key" json:"encryption_key,omitempty"`
	EncryptionKeyPub            *uint64              `protobuf:"varint,7,opt,name=encryption_key_pub" json:"encryption_key_pub,omitempty"`
	PartyIds                    []uint32             `protobuf:"varint,8,rep,name=party_ids" json:"party_ids,omitempty"`
	Whitelist                   []*IpAddressMask     `protobuf:"bytes,9,rep,name=whitelist" json:"whitelist,omitempty"`
	TvMasterSteamid             *uint64              `protobuf:"varint,10,opt,name=tv_master_steamid" json:"tv_master_steamid,omitempty"`
	TournamentEvent             *TournamentEvent     `protobuf:"bytes,11,opt,name=tournament_event" json:"tournament_event,omitempty"`
	TournamentTeams             []*TournamentTeam    `protobuf:"bytes,12,rep,name=tournament_teams" json:"tournament_teams,omitempty"`
	TournamentCastersAccountIds []uint32             `protobuf:"varint,13,rep,name=tournament_casters_account_ids" json:"tournament_casters_account_ids,omitempty"`
	TvRelaySteamid              *uint64              `protobuf:"varint,14,opt,name=tv_relay_steamid" json:"tv_relay_steamid,omitempty"`
	PreMatchData                *CPreMatchInfoData   `protobuf:"bytes,15,opt,name=pre_match_data" json:"pre_match_data,omitempty"`
	XXX_unrecognized            []byte               `json:"-"`
}

func (m *CMsgGCCStrike15V2_MatchmakingGC2ServerReserve) Reset() {
	*m = CMsgGCCStrike15V2_MatchmakingGC2ServerReserve{}
}
func (m *CMsgGCCStrike15V2_MatchmakingGC2ServerReserve) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgGCCStrike15V2_MatchmakingGC2ServerReserve) ProtoMessage() {}
func (*CMsgGCCStrike15V2_MatchmakingGC2ServerReserve) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{29}
}

func (m *CMsgGCCStrike15V2_MatchmakingGC2ServerReserve) GetAccountIds() []uint32 {
	if m != nil {
		return m.AccountIds
	}
	return nil
}

func (m *CMsgGCCStrike15V2_MatchmakingGC2ServerReserve) GetGameType() uint32 {
	if m != nil && m.GameType != nil {
		return *m.GameType
	}
	return 0
}

func (m *CMsgGCCStrike15V2_MatchmakingGC2ServerReserve) GetMatchId() uint64 {
	if m != nil && m.MatchId != nil {
		return *m.MatchId
	}
	return 0
}

func (m *CMsgGCCStrike15V2_MatchmakingGC2ServerReserve) GetServerVersion() uint32 {
	if m != nil && m.ServerVersion != nil {
		return *m.ServerVersion
	}
	return 0
}

func (m *CMsgGCCStrike15V2_MatchmakingGC2ServerReserve) GetRankings() []*PlayerRankingInfo {
	if m != nil {
		return m.Rankings
	}
	return nil
}

func (m *CMsgGCCStrike15V2_MatchmakingGC2ServerReserve) GetEncryptionKey() uint64 {
	if m != nil && m.EncryptionKey != nil {
		return *m.EncryptionKey
	}
	return 0
}

func (m *CMsgGCCStrike15V2_MatchmakingGC2ServerReserve) GetEncryptionKeyPub() uint64 {
	if m != nil && m.EncryptionKeyPub != nil {
		return *m.EncryptionKeyPub
	}
	return 0
}

func (m *CMsgGCCStrike15V2_MatchmakingGC2ServerReserve) GetPartyIds() []uint32 {
	if m != nil {
		return m.PartyIds
	}
	return nil
}

func (m *CMsgGCCStrike15V2_MatchmakingGC2ServerReserve) GetWhitelist() []*IpAddressMask {
	if m != nil {
		return m.Whitelist
	}
	return nil
}

func (m *CMsgGCCStrike15V2_MatchmakingGC2ServerReserve) GetTvMasterSteamid() uint64 {
	if m != nil && m.TvMasterSteamid != nil {
		return *m.TvMasterSteamid
	}
	return 0
}

func (m *CMsgGCCStrike15V2_MatchmakingGC2ServerReserve) GetTournamentEvent() *TournamentEvent {
	if m != nil {
		return m.TournamentEvent
	}
	return nil
}

func (m *CMsgGCCStrike15V2_MatchmakingGC2ServerReserve) GetTournamentTeams() []*TournamentTeam {
	if m != nil {
		return m.TournamentTeams
	}
	return nil
}

func (m *CMsgGCCStrike15V2_MatchmakingGC2ServerReserve) GetTournamentCastersAccountIds() []uint32 {
	if m != nil {
		return m.TournamentCastersAccountIds
	}
	return nil
}

func (m *CMsgGCCStrike15V2_MatchmakingGC2ServerReserve) GetTvRelaySteamid() uint64 {
	if m != nil && m.TvRelaySteamid != nil {
		return *m.TvRelaySteamid
	}
	return 0
}

func (m *CMsgGCCStrike15V2_MatchmakingGC2ServerReserve) GetPreMatchData() *CPreMatchInfoData {
	if m != nil {
		return m.PreMatchData
	}
	return nil
}

type CMsgGCCStrike15V2_MatchmakingServerReservationResponse struct {
	Reservationid           *uint64                                        `protobuf:"varint,1,opt,name=reservationid" json:"reservationid,omitempty"`
	Reservation             *CMsgGCCStrike15V2_MatchmakingGC2ServerReserve `protobuf:"bytes,2,opt,name=reservation" json:"reservation,omitempty"`
	Map                     *string                                        `protobuf:"bytes,3,opt,name=map" json:"map,omitempty"`
	GcReservationSent       *uint64                                        `protobuf:"varint,4,opt,name=gc_reservation_sent" json:"gc_reservation_sent,omitempty"`
	ServerVersion           *uint32                                        `protobuf:"varint,5,opt,name=server_version" json:"server_version,omitempty"`
	TvInfo                  *ServerHltvInfo                                `protobuf:"bytes,6,opt,name=tv_info" json:"tv_info,omitempty"`
	RewardPlayerAccounts    []uint32                                       `protobuf:"varint,7,rep,name=reward_player_accounts" json:"reward_player_accounts,omitempty"`
	IdlePlayerAccounts      []uint32                                       `protobuf:"varint,8,rep,name=idle_player_accounts" json:"idle_player_accounts,omitempty"`
	RewardItemAttrDefIdx    *uint32                                        `protobuf:"varint,9,opt,name=reward_item_attr_def_idx" json:"reward_item_attr_def_idx,omitempty"`
	RewardItemAttrValue     *uint32                                        `protobuf:"varint,10,opt,name=reward_item_attr_value" json:"reward_item_attr_value,omitempty"`
	RewardItemAttrRewardIdx *uint32                                        `protobuf:"varint,11,opt,name=reward_item_attr_reward_idx" json:"reward_item_attr_reward_idx,omitempty"`
	RewardDropList          *uint32                                        `protobuf:"varint,12,opt,name=reward_drop_list" json:"reward_drop_list,omitempty"`
	TournamentTag           *string                                        `protobuf:"bytes,13,opt,name=tournament_tag" json:"tournament_tag,omitempty"`
	XXX_unrecognized        []byte                                         `json:"-"`
}

func (m *CMsgGCCStrike15V2_MatchmakingServerReservationResponse) Reset() {
	*m = CMsgGCCStrike15V2_MatchmakingServerReservationResponse{}
}
func (m *CMsgGCCStrike15V2_MatchmakingServerReservationResponse) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgGCCStrike15V2_MatchmakingServerReservationResponse) ProtoMessage() {}
func (*CMsgGCCStrike15V2_MatchmakingServerReservationResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{30}
}

func (m *CMsgGCCStrike15V2_MatchmakingServerReservationResponse) GetReservationid() uint64 {
	if m != nil && m.Reservationid != nil {
		return *m.Reservationid
	}
	return 0
}

func (m *CMsgGCCStrike15V2_MatchmakingServerReservationResponse) GetReservation() *CMsgGCCStrike15V2_MatchmakingGC2ServerReserve {
	if m != nil {
		return m.Reservation
	}
	return nil
}

func (m *CMsgGCCStrike15V2_MatchmakingServerReservationResponse) GetMap() string {
	if m != nil && m.Map != nil {
		return *m.Map
	}
	return ""
}

func (m *CMsgGCCStrike15V2_MatchmakingServerReservationResponse) GetGcReservationSent() uint64 {
	if m != nil && m.GcReservationSent != nil {
		return *m.GcReservationSent
	}
	return 0
}

func (m *CMsgGCCStrike15V2_MatchmakingServerReservationResponse) GetServerVersion() uint32 {
	if m != nil && m.ServerVersion != nil {
		return *m.ServerVersion
	}
	return 0
}

func (m *CMsgGCCStrike15V2_MatchmakingServerReservationResponse) GetTvInfo() *ServerHltvInfo {
	if m != nil {
		return m.TvInfo
	}
	return nil
}

func (m *CMsgGCCStrike15V2_MatchmakingServerReservationResponse) GetRewardPlayerAccounts() []uint32 {
	if m != nil {
		return m.RewardPlayerAccounts
	}
	return nil
}

func (m *CMsgGCCStrike15V2_MatchmakingServerReservationResponse) GetIdlePlayerAccounts() []uint32 {
	if m != nil {
		return m.IdlePlayerAccounts
	}
	return nil
}

func (m *CMsgGCCStrike15V2_MatchmakingServerReservationResponse) GetRewardItemAttrDefIdx() uint32 {
	if m != nil && m.RewardItemAttrDefIdx != nil {
		return *m.RewardItemAttrDefIdx
	}
	return 0
}

func (m *CMsgGCCStrike15V2_MatchmakingServerReservationResponse) GetRewardItemAttrValue() uint32 {
	if m != nil && m.RewardItemAttrValue != nil {
		return *m.RewardItemAttrValue
	}
	return 0
}

func (m *CMsgGCCStrike15V2_MatchmakingServerReservationResponse) GetRewardItemAttrRewardIdx() uint32 {
	if m != nil && m.RewardItemAttrRewardIdx != nil {
		return *m.RewardItemAttrRewardIdx
	}
	return 0
}

func (m *CMsgGCCStrike15V2_MatchmakingServerReservationResponse) GetRewardDropList() uint32 {
	if m != nil && m.RewardDropList != nil {
		return *m.RewardDropList
	}
	return 0
}

func (m *CMsgGCCStrike15V2_MatchmakingServerReservationResponse) GetTournamentTag() string {
	if m != nil && m.TournamentTag != nil {
		return *m.TournamentTag
	}
	return ""
}

type CMsgGCCStrike15V2_MatchmakingGC2ClientReserve struct {
	Serverid         *uint64                                        `protobuf:"varint,1,opt,name=serverid" json:"serverid,omitempty"`
	Serverip         *uint32                                        `protobuf:"varint,2,opt,name=serverip" json:"serverip,omitempty"`
	Serverport       *uint32                                        `protobuf:"varint,3,opt,name=serverport" json:"serverport,omitempty"`
	Reservationid    *uint64                                        `protobuf:"varint,4,opt,name=reservationid" json:"reservationid,omitempty"`
	Reservation      *CMsgGCCStrike15V2_MatchmakingGC2ServerReserve `protobuf:"bytes,5,opt,name=reservation" json:"reservation,omitempty"`
	Map              *string                                        `protobuf:"bytes,6,opt,name=map" json:"map,omitempty"`
	XXX_unrecognized []byte                                         `json:"-"`
}

func (m *CMsgGCCStrike15V2_MatchmakingGC2ClientReserve) Reset() {
	*m = CMsgGCCStrike15V2_MatchmakingGC2ClientReserve{}
}
func (m *CMsgGCCStrike15V2_MatchmakingGC2ClientReserve) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgGCCStrike15V2_MatchmakingGC2ClientReserve) ProtoMessage() {}
func (*CMsgGCCStrike15V2_MatchmakingGC2ClientReserve) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{31}
}

func (m *CMsgGCCStrike15V2_MatchmakingGC2ClientReserve) GetServerid() uint64 {
	if m != nil && m.Serverid != nil {
		return *m.Serverid
	}
	return 0
}

func (m *CMsgGCCStrike15V2_MatchmakingGC2ClientReserve) GetServerip() uint32 {
	if m != nil && m.Serverip != nil {
		return *m.Serverip
	}
	return 0
}

func (m *CMsgGCCStrike15V2_MatchmakingGC2ClientReserve) GetServerport() uint32 {
	if m != nil && m.Serverport != nil {
		return *m.Serverport
	}
	return 0
}

func (m *CMsgGCCStrike15V2_MatchmakingGC2ClientReserve) GetReservationid() uint64 {
	if m != nil && m.Reservationid != nil {
		return *m.Reservationid
	}
	return 0
}

func (m *CMsgGCCStrike15V2_MatchmakingGC2ClientReserve) GetReservation() *CMsgGCCStrike15V2_MatchmakingGC2ServerReserve {
	if m != nil {
		return m.Reservation
	}
	return nil
}

func (m *CMsgGCCStrike15V2_MatchmakingGC2ClientReserve) GetMap() string {
	if m != nil && m.Map != nil {
		return *m.Map
	}
	return ""
}

type CMsgGCCStrike15V2_MatchmakingServerRoundStats struct {
	Reservationid      *uint64                                                 `protobuf:"varint,1,opt,name=reservationid" json:"reservationid,omitempty"`
	Reservation        *CMsgGCCStrike15V2_MatchmakingGC2ServerReserve          `protobuf:"bytes,2,opt,name=reservation" json:"reservation,omitempty"`
	Map                *string                                                 `protobuf:"bytes,3,opt,name=map" json:"map,omitempty"`
	Round              *int32                                                  `protobuf:"varint,4,opt,name=round" json:"round,omitempty"`
	Kills              []int32                                                 `protobuf:"varint,5,rep,name=kills" json:"kills,omitempty"`
	Assists            []int32                                                 `protobuf:"varint,6,rep,name=assists" json:"assists,omitempty"`
	Deaths             []int32                                                 `protobuf:"varint,7,rep,name=deaths" json:"deaths,omitempty"`
	Scores             []int32                                                 `protobuf:"varint,8,rep,name=scores" json:"scores,omitempty"`
	Pings              []int32                                                 `protobuf:"varint,9,rep,name=pings" json:"pings,omitempty"`
	RoundResult        *int32                                                  `protobuf:"varint,10,opt,name=round_result" json:"round_result,omitempty"`
	MatchResult        *int32                                                  `protobuf:"varint,11,opt,name=match_result" json:"match_result,omitempty"`
	TeamScores         []int32                                                 `protobuf:"varint,12,rep,name=team_scores" json:"team_scores,omitempty"`
	Confirm            *CMsgGCCStrike15V2_MatchmakingGC2ServerConfirm          `protobuf:"bytes,13,opt,name=confirm" json:"confirm,omitempty"`
	ReservationStage   *int32                                                  `protobuf:"varint,14,opt,name=reservation_stage" json:"reservation_stage,omitempty"`
	MatchDuration      *int32                                                  `protobuf:"varint,15,opt,name=match_duration" json:"match_duration,omitempty"`
	EnemyKills         []int32                                                 `protobuf:"varint,16,rep,name=enemy_kills" json:"enemy_kills,omitempty"`
	EnemyHeadshots     []int32                                                 `protobuf:"varint,17,rep,name=enemy_headshots" json:"enemy_headshots,omitempty"`
	Enemy_3Ks          []int32                                                 `protobuf:"varint,18,rep,name=enemy_3ks" json:"enemy_3ks,omitempty"`
	Enemy_4Ks          []int32                                                 `protobuf:"varint,19,rep,name=enemy_4ks" json:"enemy_4ks,omitempty"`
	Enemy_5Ks          []int32                                                 `protobuf:"varint,20,rep,name=enemy_5ks" json:"enemy_5ks,omitempty"`
	Mvps               []int32                                                 `protobuf:"varint,21,rep,name=mvps" json:"mvps,omitempty"`
	SpectatorsCount    *uint32                                                 `protobuf:"varint,22,opt,name=spectators_count" json:"spectators_count,omitempty"`
	SpectatorsCountTv  *uint32                                                 `protobuf:"varint,23,opt,name=spectators_count_tv" json:"spectators_count_tv,omitempty"`
	SpectatorsCountLnk *uint32                                                 `protobuf:"varint,24,opt,name=spectators_count_lnk" json:"spectators_count_lnk,omitempty"`
	EnemyKillsAgg      []int32                                                 `protobuf:"varint,25,rep,name=enemy_kills_agg" json:"enemy_kills_agg,omitempty"`
	DropInfo           *CMsgGCCStrike15V2_MatchmakingServerRoundStats_DropInfo `protobuf:"bytes,26,opt,name=drop_info" json:"drop_info,omitempty"`
	XXX_unrecognized   []byte                                                  `json:"-"`
}

func (m *CMsgGCCStrike15V2_MatchmakingServerRoundStats) Reset() {
	*m = CMsgGCCStrike15V2_MatchmakingServerRoundStats{}
}
func (m *CMsgGCCStrike15V2_MatchmakingServerRoundStats) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgGCCStrike15V2_MatchmakingServerRoundStats) ProtoMessage() {}
func (*CMsgGCCStrike15V2_MatchmakingServerRoundStats) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{32}
}

func (m *CMsgGCCStrike15V2_MatchmakingServerRoundStats) GetReservationid() uint64 {
	if m != nil && m.Reservationid != nil {
		return *m.Reservationid
	}
	return 0
}

func (m *CMsgGCCStrike15V2_MatchmakingServerRoundStats) GetReservation() *CMsgGCCStrike15V2_MatchmakingGC2ServerReserve {
	if m != nil {
		return m.Reservation
	}
	return nil
}

func (m *CMsgGCCStrike15V2_MatchmakingServerRoundStats) GetMap() string {
	if m != nil && m.Map != nil {
		return *m.Map
	}
	return ""
}

func (m *CMsgGCCStrike15V2_MatchmakingServerRoundStats) GetRound() int32 {
	if m != nil && m.Round != nil {
		return *m.Round
	}
	return 0
}

func (m *CMsgGCCStrike15V2_MatchmakingServerRoundStats) GetKills() []int32 {
	if m != nil {
		return m.Kills
	}
	return nil
}

func (m *CMsgGCCStrike15V2_MatchmakingServerRoundStats) GetAssists() []int32 {
	if m != nil {
		return m.Assists
	}
	return nil
}

func (m *CMsgGCCStrike15V2_MatchmakingServerRoundStats) GetDeaths() []int32 {
	if m != nil {
		return m.Deaths
	}
	return nil
}

func (m *CMsgGCCStrike15V2_MatchmakingServerRoundStats) GetScores() []int32 {
	if m != nil {
		return m.Scores
	}
	return nil
}

func (m *CMsgGCCStrike15V2_MatchmakingServerRoundStats) GetPings() []int32 {
	if m != nil {
		return m.Pings
	}
	return nil
}

func (m *CMsgGCCStrike15V2_MatchmakingServerRoundStats) GetRoundResult() int32 {
	if m != nil && m.RoundResult != nil {
		return *m.RoundResult
	}
	return 0
}

func (m *CMsgGCCStrike15V2_MatchmakingServerRoundStats) GetMatchResult() int32 {
	if m != nil && m.MatchResult != nil {
		return *m.MatchResult
	}
	return 0
}

func (m *CMsgGCCStrike15V2_MatchmakingServerRoundStats) GetTeamScores() []int32 {
	if m != nil {
		return m.TeamScores
	}
	return nil
}

func (m *CMsgGCCStrike15V2_MatchmakingServerRoundStats) GetConfirm() *CMsgGCCStrike15V2_MatchmakingGC2ServerConfirm {
	if m != nil {
		return m.Confirm
	}
	return nil
}

func (m *CMsgGCCStrike15V2_MatchmakingServerRoundStats) GetReservationStage() int32 {
	if m != nil && m.ReservationStage != nil {
		return *m.ReservationStage
	}
	return 0
}

func (m *CMsgGCCStrike15V2_MatchmakingServerRoundStats) GetMatchDuration() int32 {
	if m != nil && m.MatchDuration != nil {
		return *m.MatchDuration
	}
	return 0
}

func (m *CMsgGCCStrike15V2_MatchmakingServerRoundStats) GetEnemyKills() []int32 {
	if m != nil {
		return m.EnemyKills
	}
	return nil
}

func (m *CMsgGCCStrike15V2_MatchmakingServerRoundStats) GetEnemyHeadshots() []int32 {
	if m != nil {
		return m.EnemyHeadshots
	}
	return nil
}

func (m *CMsgGCCStrike15V2_MatchmakingServerRoundStats) GetEnemy_3Ks() []int32 {
	if m != nil {
		return m.Enemy_3Ks
	}
	return nil
}

func (m *CMsgGCCStrike15V2_MatchmakingServerRoundStats) GetEnemy_4Ks() []int32 {
	if m != nil {
		return m.Enemy_4Ks
	}
	return nil
}

func (m *CMsgGCCStrike15V2_MatchmakingServerRoundStats) GetEnemy_5Ks() []int32 {
	if m != nil {
		return m.Enemy_5Ks
	}
	return nil
}

func (m *CMsgGCCStrike15V2_MatchmakingServerRoundStats) GetMvps() []int32 {
	if m != nil {
		return m.Mvps
	}
	return nil
}

func (m *CMsgGCCStrike15V2_MatchmakingServerRoundStats) GetSpectatorsCount() uint32 {
	if m != nil && m.SpectatorsCount != nil {
		return *m.SpectatorsCount
	}
	return 0
}

func (m *CMsgGCCStrike15V2_MatchmakingServerRoundStats) GetSpectatorsCountTv() uint32 {
	if m != nil && m.SpectatorsCountTv != nil {
		return *m.SpectatorsCountTv
	}
	return 0
}

func (m *CMsgGCCStrike15V2_MatchmakingServerRoundStats) GetSpectatorsCountLnk() uint32 {
	if m != nil && m.SpectatorsCountLnk != nil {
		return *m.SpectatorsCountLnk
	}
	return 0
}

func (m *CMsgGCCStrike15V2_MatchmakingServerRoundStats) GetEnemyKillsAgg() []int32 {
	if m != nil {
		return m.EnemyKillsAgg
	}
	return nil
}

func (m *CMsgGCCStrike15V2_MatchmakingServerRoundStats) GetDropInfo() *CMsgGCCStrike15V2_MatchmakingServerRoundStats_DropInfo {
	if m != nil {
		return m.DropInfo
	}
	return nil
}

type CMsgGCCStrike15V2_MatchmakingServerRoundStats_DropInfo struct {
	AccountMvp       *uint32 `protobuf:"varint,1,opt,name=account_mvp" json:"account_mvp,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgGCCStrike15V2_MatchmakingServerRoundStats_DropInfo) Reset() {
	*m = CMsgGCCStrike15V2_MatchmakingServerRoundStats_DropInfo{}
}
func (m *CMsgGCCStrike15V2_MatchmakingServerRoundStats_DropInfo) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgGCCStrike15V2_MatchmakingServerRoundStats_DropInfo) ProtoMessage() {}
func (*CMsgGCCStrike15V2_MatchmakingServerRoundStats_DropInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{32, 0}
}

func (m *CMsgGCCStrike15V2_MatchmakingServerRoundStats_DropInfo) GetAccountMvp() uint32 {
	if m != nil && m.AccountMvp != nil {
		return *m.AccountMvp
	}
	return 0
}

type CMsgGCCStrike15V2_MatchmakingServerMatchEnd struct {
	Stats             *CMsgGCCStrike15V2_MatchmakingServerRoundStats `protobuf:"bytes,1,opt,name=stats" json:"stats,omitempty"`
	Confirm           *CMsgGCCStrike15V2_MatchmakingGC2ServerConfirm `protobuf:"bytes,3,opt,name=confirm" json:"confirm,omitempty"`
	Rematch           *uint64                                        `protobuf:"varint,4,opt,name=rematch" json:"rematch,omitempty"`
	ReplayToken       *uint32                                        `protobuf:"varint,5,opt,name=replay_token" json:"replay_token,omitempty"`
	ReplayClusterId   *uint32                                        `protobuf:"varint,6,opt,name=replay_cluster_id" json:"replay_cluster_id,omitempty"`
	AbortedMatch      *bool                                          `protobuf:"varint,7,opt,name=aborted_match" json:"aborted_match,omitempty"`
	MatchEndQuestData *CMsgGC_ServerQuestUpdateData                  `protobuf:"bytes,8,opt,name=match_end_quest_data" json:"match_end_quest_data,omitempty"`
	XXX_unrecognized  []byte                                         `json:"-"`
}

func (m *CMsgGCCStrike15V2_MatchmakingServerMatchEnd) Reset() {
	*m = CMsgGCCStrike15V2_MatchmakingServerMatchEnd{}
}
func (m *CMsgGCCStrike15V2_MatchmakingServerMatchEnd) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgGCCStrike15V2_MatchmakingServerMatchEnd) ProtoMessage() {}
func (*CMsgGCCStrike15V2_MatchmakingServerMatchEnd) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{33}
}

func (m *CMsgGCCStrike15V2_MatchmakingServerMatchEnd) GetStats() *CMsgGCCStrike15V2_MatchmakingServerRoundStats {
	if m != nil {
		return m.Stats
	}
	return nil
}

func (m *CMsgGCCStrike15V2_MatchmakingServerMatchEnd) GetConfirm() *CMsgGCCStrike15V2_MatchmakingGC2ServerConfirm {
	if m != nil {
		return m.Confirm
	}
	return nil
}

func (m *CMsgGCCStrike15V2_MatchmakingServerMatchEnd) GetRematch() uint64 {
	if m != nil && m.Rematch != nil {
		return *m.Rematch
	}
	return 0
}

func (m *CMsgGCCStrike15V2_MatchmakingServerMatchEnd) GetReplayToken() uint32 {
	if m != nil && m.ReplayToken != nil {
		return *m.ReplayToken
	}
	return 0
}

func (m *CMsgGCCStrike15V2_MatchmakingServerMatchEnd) GetReplayClusterId() uint32 {
	if m != nil && m.ReplayClusterId != nil {
		return *m.ReplayClusterId
	}
	return 0
}

func (m *CMsgGCCStrike15V2_MatchmakingServerMatchEnd) GetAbortedMatch() bool {
	if m != nil && m.AbortedMatch != nil {
		return *m.AbortedMatch
	}
	return false
}

func (m *CMsgGCCStrike15V2_MatchmakingServerMatchEnd) GetMatchEndQuestData() *CMsgGC_ServerQuestUpdateData {
	if m != nil {
		return m.MatchEndQuestData
	}
	return nil
}

type CMsgGCCStrike15V2_MatchmakingClient2GCHello struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMsgGCCStrike15V2_MatchmakingClient2GCHello) Reset() {
	*m = CMsgGCCStrike15V2_MatchmakingClient2GCHello{}
}
func (m *CMsgGCCStrike15V2_MatchmakingClient2GCHello) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgGCCStrike15V2_MatchmakingClient2GCHello) ProtoMessage() {}
func (*CMsgGCCStrike15V2_MatchmakingClient2GCHello) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{34}
}

type CMsgGCCStrike15V2_MatchmakingGC2ClientHello struct {
	AccountId            *uint32                                        `protobuf:"varint,1,opt,name=account_id" json:"account_id,omitempty"`
	Ongoingmatch         *CMsgGCCStrike15V2_MatchmakingGC2ClientReserve `protobuf:"bytes,2,opt,name=ongoingmatch" json:"ongoingmatch,omitempty"`
	GlobalStats          *GlobalStatistics                              `protobuf:"bytes,3,opt,name=global_stats" json:"global_stats,omitempty"`
	PenaltySeconds       *uint32                                        `protobuf:"varint,4,opt,name=penalty_seconds" json:"penalty_seconds,omitempty"`
	PenaltyReason        *uint32                                        `protobuf:"varint,5,opt,name=penalty_reason" json:"penalty_reason,omitempty"`
	VacBanned            *int32                                         `protobuf:"varint,6,opt,name=vac_banned" json:"vac_banned,omitempty"`
	Ranking              *PlayerRankingInfo                             `protobuf:"bytes,7,opt,name=ranking" json:"ranking,omitempty"`
	Commendation         *PlayerCommendationInfo                        `protobuf:"bytes,8,opt,name=commendation" json:"commendation,omitempty"`
	Medals               *PlayerMedalsInfo                              `protobuf:"bytes,9,opt,name=medals" json:"medals,omitempty"`
	MyCurrentEvent       *TournamentEvent                               `protobuf:"bytes,10,opt,name=my_current_event" json:"my_current_event,omitempty"`
	MyCurrentEventTeams  []*TournamentTeam                              `protobuf:"bytes,11,rep,name=my_current_event_teams" json:"my_current_event_teams,omitempty"`
	MyCurrentTeam        *TournamentTeam                                `protobuf:"bytes,12,opt,name=my_current_team" json:"my_current_team,omitempty"`
	MyCurrentEventStages []*TournamentEvent                             `protobuf:"bytes,13,rep,name=my_current_event_stages" json:"my_current_event_stages,omitempty"`
	SurveyVote           *uint32                                        `protobuf:"varint,14,opt,name=survey_vote" json:"survey_vote,omitempty"`
	Activity             *AccountActivity                               `protobuf:"bytes,15,opt,name=activity" json:"activity,omitempty"`
	PlayerLevel          *int32                                         `protobuf:"varint,17,opt,name=player_level" json:"player_level,omitempty"`
	PlayerCurXp          *int32                                         `protobuf:"varint,18,opt,name=player_cur_xp" json:"player_cur_xp,omitempty"`
	PlayerXpBonusFlags   *int32                                         `protobuf:"varint,19,opt,name=player_xp_bonus_flags" json:"player_xp_bonus_flags,omitempty"`
	XXX_unrecognized     []byte                                         `json:"-"`
}

func (m *CMsgGCCStrike15V2_MatchmakingGC2ClientHello) Reset() {
	*m = CMsgGCCStrike15V2_MatchmakingGC2ClientHello{}
}
func (m *CMsgGCCStrike15V2_MatchmakingGC2ClientHello) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgGCCStrike15V2_MatchmakingGC2ClientHello) ProtoMessage() {}
func (*CMsgGCCStrike15V2_MatchmakingGC2ClientHello) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{35}
}

func (m *CMsgGCCStrike15V2_MatchmakingGC2ClientHello) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *CMsgGCCStrike15V2_MatchmakingGC2ClientHello) GetOngoingmatch() *CMsgGCCStrike15V2_MatchmakingGC2ClientReserve {
	if m != nil {
		return m.Ongoingmatch
	}
	return nil
}

func (m *CMsgGCCStrike15V2_MatchmakingGC2ClientHello) GetGlobalStats() *GlobalStatistics {
	if m != nil {
		return m.GlobalStats
	}
	return nil
}

func (m *CMsgGCCStrike15V2_MatchmakingGC2ClientHello) GetPenaltySeconds() uint32 {
	if m != nil && m.PenaltySeconds != nil {
		return *m.PenaltySeconds
	}
	return 0
}

func (m *CMsgGCCStrike15V2_MatchmakingGC2ClientHello) GetPenaltyReason() uint32 {
	if m != nil && m.PenaltyReason != nil {
		return *m.PenaltyReason
	}
	return 0
}

func (m *CMsgGCCStrike15V2_MatchmakingGC2ClientHello) GetVacBanned() int32 {
	if m != nil && m.VacBanned != nil {
		return *m.VacBanned
	}
	return 0
}

func (m *CMsgGCCStrike15V2_MatchmakingGC2ClientHello) GetRanking() *PlayerRankingInfo {
	if m != nil {
		return m.Ranking
	}
	return nil
}

func (m *CMsgGCCStrike15V2_MatchmakingGC2ClientHello) GetCommendation() *PlayerCommendationInfo {
	if m != nil {
		return m.Commendation
	}
	return nil
}

func (m *CMsgGCCStrike15V2_MatchmakingGC2ClientHello) GetMedals() *PlayerMedalsInfo {
	if m != nil {
		return m.Medals
	}
	return nil
}

func (m *CMsgGCCStrike15V2_MatchmakingGC2ClientHello) GetMyCurrentEvent() *TournamentEvent {
	if m != nil {
		return m.MyCurrentEvent
	}
	return nil
}

func (m *CMsgGCCStrike15V2_MatchmakingGC2ClientHello) GetMyCurrentEventTeams() []*TournamentTeam {
	if m != nil {
		return m.MyCurrentEventTeams
	}
	return nil
}

func (m *CMsgGCCStrike15V2_MatchmakingGC2ClientHello) GetMyCurrentTeam() *TournamentTeam {
	if m != nil {
		return m.MyCurrentTeam
	}
	return nil
}

func (m *CMsgGCCStrike15V2_MatchmakingGC2ClientHello) GetMyCurrentEventStages() []*TournamentEvent {
	if m != nil {
		return m.MyCurrentEventStages
	}
	return nil
}

func (m *CMsgGCCStrike15V2_MatchmakingGC2ClientHello) GetSurveyVote() uint32 {
	if m != nil && m.SurveyVote != nil {
		return *m.SurveyVote
	}
	return 0
}

func (m *CMsgGCCStrike15V2_MatchmakingGC2ClientHello) GetActivity() *AccountActivity {
	if m != nil {
		return m.Activity
	}
	return nil
}

func (m *CMsgGCCStrike15V2_MatchmakingGC2ClientHello) GetPlayerLevel() int32 {
	if m != nil && m.PlayerLevel != nil {
		return *m.PlayerLevel
	}
	return 0
}

func (m *CMsgGCCStrike15V2_MatchmakingGC2ClientHello) GetPlayerCurXp() int32 {
	if m != nil && m.PlayerCurXp != nil {
		return *m.PlayerCurXp
	}
	return 0
}

func (m *CMsgGCCStrike15V2_MatchmakingGC2ClientHello) GetPlayerXpBonusFlags() int32 {
	if m != nil && m.PlayerXpBonusFlags != nil {
		return *m.PlayerXpBonusFlags
	}
	return 0
}

type CMsgGCCStrike15V2_AccountPrivacySettings struct {
	Settings         []*CMsgGCCStrike15V2_AccountPrivacySettings_Setting `protobuf:"bytes,1,rep,name=settings" json:"settings,omitempty"`
	XXX_unrecognized []byte                                              `json:"-"`
}

func (m *CMsgGCCStrike15V2_AccountPrivacySettings) Reset() {
	*m = CMsgGCCStrike15V2_AccountPrivacySettings{}
}
func (m *CMsgGCCStrike15V2_AccountPrivacySettings) String() string { return proto.CompactTextString(m) }
func (*CMsgGCCStrike15V2_AccountPrivacySettings) ProtoMessage()    {}
func (*CMsgGCCStrike15V2_AccountPrivacySettings) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{36}
}

func (m *CMsgGCCStrike15V2_AccountPrivacySettings) GetSettings() []*CMsgGCCStrike15V2_AccountPrivacySettings_Setting {
	if m != nil {
		return m.Settings
	}
	return nil
}

type CMsgGCCStrike15V2_AccountPrivacySettings_Setting struct {
	SettingType      *uint32 `protobuf:"varint,1,opt,name=setting_type" json:"setting_type,omitempty"`
	SettingValue     *uint32 `protobuf:"varint,2,opt,name=setting_value" json:"setting_value,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgGCCStrike15V2_AccountPrivacySettings_Setting) Reset() {
	*m = CMsgGCCStrike15V2_AccountPrivacySettings_Setting{}
}
func (m *CMsgGCCStrike15V2_AccountPrivacySettings_Setting) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgGCCStrike15V2_AccountPrivacySettings_Setting) ProtoMessage() {}
func (*CMsgGCCStrike15V2_AccountPrivacySettings_Setting) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{36, 0}
}

func (m *CMsgGCCStrike15V2_AccountPrivacySettings_Setting) GetSettingType() uint32 {
	if m != nil && m.SettingType != nil {
		return *m.SettingType
	}
	return 0
}

func (m *CMsgGCCStrike15V2_AccountPrivacySettings_Setting) GetSettingValue() uint32 {
	if m != nil && m.SettingValue != nil {
		return *m.SettingValue
	}
	return 0
}

type CMsgGCCStrike15V2_MatchmakingGC2ClientAbandon struct {
	AccountId        *uint32                                        `protobuf:"varint,1,opt,name=account_id" json:"account_id,omitempty"`
	AbandonedMatch   *CMsgGCCStrike15V2_MatchmakingGC2ClientReserve `protobuf:"bytes,2,opt,name=abandoned_match" json:"abandoned_match,omitempty"`
	PenaltySeconds   *uint32                                        `protobuf:"varint,3,opt,name=penalty_seconds" json:"penalty_seconds,omitempty"`
	PenaltyReason    *uint32                                        `protobuf:"varint,4,opt,name=penalty_reason" json:"penalty_reason,omitempty"`
	XXX_unrecognized []byte                                         `json:"-"`
}

func (m *CMsgGCCStrike15V2_MatchmakingGC2ClientAbandon) Reset() {
	*m = CMsgGCCStrike15V2_MatchmakingGC2ClientAbandon{}
}
func (m *CMsgGCCStrike15V2_MatchmakingGC2ClientAbandon) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgGCCStrike15V2_MatchmakingGC2ClientAbandon) ProtoMessage() {}
func (*CMsgGCCStrike15V2_MatchmakingGC2ClientAbandon) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{37}
}

func (m *CMsgGCCStrike15V2_MatchmakingGC2ClientAbandon) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *CMsgGCCStrike15V2_MatchmakingGC2ClientAbandon) GetAbandonedMatch() *CMsgGCCStrike15V2_MatchmakingGC2ClientReserve {
	if m != nil {
		return m.AbandonedMatch
	}
	return nil
}

func (m *CMsgGCCStrike15V2_MatchmakingGC2ClientAbandon) GetPenaltySeconds() uint32 {
	if m != nil && m.PenaltySeconds != nil {
		return *m.PenaltySeconds
	}
	return 0
}

func (m *CMsgGCCStrike15V2_MatchmakingGC2ClientAbandon) GetPenaltyReason() uint32 {
	if m != nil && m.PenaltyReason != nil {
		return *m.PenaltyReason
	}
	return 0
}

type CMsgGCCStrike15V2_MatchmakingServer2GCKick struct {
	AccountId        *uint32                                        `protobuf:"varint,1,opt,name=account_id" json:"account_id,omitempty"`
	Reservation      *CMsgGCCStrike15V2_MatchmakingGC2ServerReserve `protobuf:"bytes,2,opt,name=reservation" json:"reservation,omitempty"`
	Reason           *uint32                                        `protobuf:"varint,3,opt,name=reason" json:"reason,omitempty"`
	XXX_unrecognized []byte                                         `json:"-"`
}

func (m *CMsgGCCStrike15V2_MatchmakingServer2GCKick) Reset() {
	*m = CMsgGCCStrike15V2_MatchmakingServer2GCKick{}
}
func (m *CMsgGCCStrike15V2_MatchmakingServer2GCKick) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgGCCStrike15V2_MatchmakingServer2GCKick) ProtoMessage() {}
func (*CMsgGCCStrike15V2_MatchmakingServer2GCKick) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{38}
}

func (m *CMsgGCCStrike15V2_MatchmakingServer2GCKick) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *CMsgGCCStrike15V2_MatchmakingServer2GCKick) GetReservation() *CMsgGCCStrike15V2_MatchmakingGC2ServerReserve {
	if m != nil {
		return m.Reservation
	}
	return nil
}

func (m *CMsgGCCStrike15V2_MatchmakingServer2GCKick) GetReason() uint32 {
	if m != nil && m.Reason != nil {
		return *m.Reason
	}
	return 0
}

type CDataGCCStrike15V2_MatchmakingLockedInMatch struct {
	ClientReservation  *CMsgGCCStrike15V2_MatchmakingGC2ClientReserve `protobuf:"bytes,1,opt,name=client_reservation" json:"client_reservation,omitempty"`
	ServerStats        *CMsgGCCStrike15V2_MatchmakingServerRoundStats `protobuf:"bytes,2,opt,name=server_stats" json:"server_stats,omitempty"`
	Rtime32ServerInfo  *uint32                                        `protobuf:"varint,3,opt,name=rtime32_server_info" json:"rtime32_server_info,omitempty"`
	LastRoundStatsTemp *CMsgGCCStrike15V2_MatchmakingServerRoundStats `protobuf:"bytes,4,opt,name=last_round_stats_temp" json:"last_round_stats_temp,omitempty"`
	XXX_unrecognized   []byte                                         `json:"-"`
}

func (m *CDataGCCStrike15V2_MatchmakingLockedInMatch) Reset() {
	*m = CDataGCCStrike15V2_MatchmakingLockedInMatch{}
}
func (m *CDataGCCStrike15V2_MatchmakingLockedInMatch) String() string {
	return proto.CompactTextString(m)
}
func (*CDataGCCStrike15V2_MatchmakingLockedInMatch) ProtoMessage() {}
func (*CDataGCCStrike15V2_MatchmakingLockedInMatch) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{39}
}

func (m *CDataGCCStrike15V2_MatchmakingLockedInMatch) GetClientReservation() *CMsgGCCStrike15V2_MatchmakingGC2ClientReserve {
	if m != nil {
		return m.ClientReservation
	}
	return nil
}

func (m *CDataGCCStrike15V2_MatchmakingLockedInMatch) GetServerStats() *CMsgGCCStrike15V2_MatchmakingServerRoundStats {
	if m != nil {
		return m.ServerStats
	}
	return nil
}

func (m *CDataGCCStrike15V2_MatchmakingLockedInMatch) GetRtime32ServerInfo() uint32 {
	if m != nil && m.Rtime32ServerInfo != nil {
		return *m.Rtime32ServerInfo
	}
	return 0
}

func (m *CDataGCCStrike15V2_MatchmakingLockedInMatch) GetLastRoundStatsTemp() *CMsgGCCStrike15V2_MatchmakingServerRoundStats {
	if m != nil {
		return m.LastRoundStatsTemp
	}
	return nil
}

type CMsgGCCStrike15V2_MatchmakingGC2ServerRankUpdate struct {
	Rankings         []*PlayerRankingInfo `protobuf:"bytes,1,rep,name=rankings" json:"rankings,omitempty"`
	MatchId          *uint64              `protobuf:"varint,2,opt,name=match_id" json:"match_id,omitempty"`
	XXX_unrecognized []byte               `json:"-"`
}

func (m *CMsgGCCStrike15V2_MatchmakingGC2ServerRankUpdate) Reset() {
	*m = CMsgGCCStrike15V2_MatchmakingGC2ServerRankUpdate{}
}
func (m *CMsgGCCStrike15V2_MatchmakingGC2ServerRankUpdate) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgGCCStrike15V2_MatchmakingGC2ServerRankUpdate) ProtoMessage() {}
func (*CMsgGCCStrike15V2_MatchmakingGC2ServerRankUpdate) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{40}
}

func (m *CMsgGCCStrike15V2_MatchmakingGC2ServerRankUpdate) GetRankings() []*PlayerRankingInfo {
	if m != nil {
		return m.Rankings
	}
	return nil
}

func (m *CMsgGCCStrike15V2_MatchmakingGC2ServerRankUpdate) GetMatchId() uint64 {
	if m != nil && m.MatchId != nil {
		return *m.MatchId
	}
	return 0
}

type CMsgGCCStrike15V2_MatchmakingOperator2GCBlogUpdate struct {
	MainPostUrl      *string `protobuf:"bytes,1,opt,name=main_post_url" json:"main_post_url,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgGCCStrike15V2_MatchmakingOperator2GCBlogUpdate) Reset() {
	*m = CMsgGCCStrike15V2_MatchmakingOperator2GCBlogUpdate{}
}
func (m *CMsgGCCStrike15V2_MatchmakingOperator2GCBlogUpdate) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgGCCStrike15V2_MatchmakingOperator2GCBlogUpdate) ProtoMessage() {}
func (*CMsgGCCStrike15V2_MatchmakingOperator2GCBlogUpdate) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{41}
}

func (m *CMsgGCCStrike15V2_MatchmakingOperator2GCBlogUpdate) GetMainPostUrl() string {
	if m != nil && m.MainPostUrl != nil {
		return *m.MainPostUrl
	}
	return ""
}

type CMsgGCCStrike15V2_ServerNotificationForUserPenalty struct {
	AccountId        *uint32 `protobuf:"varint,1,opt,name=account_id" json:"account_id,omitempty"`
	Reason           *uint32 `protobuf:"varint,2,opt,name=reason" json:"reason,omitempty"`
	Seconds          *uint32 `protobuf:"varint,3,opt,name=seconds" json:"seconds,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgGCCStrike15V2_ServerNotificationForUserPenalty) Reset() {
	*m = CMsgGCCStrike15V2_ServerNotificationForUserPenalty{}
}
func (m *CMsgGCCStrike15V2_ServerNotificationForUserPenalty) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgGCCStrike15V2_ServerNotificationForUserPenalty) ProtoMessage() {}
func (*CMsgGCCStrike15V2_ServerNotificationForUserPenalty) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{42}
}

func (m *CMsgGCCStrike15V2_ServerNotificationForUserPenalty) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *CMsgGCCStrike15V2_ServerNotificationForUserPenalty) GetReason() uint32 {
	if m != nil && m.Reason != nil {
		return *m.Reason
	}
	return 0
}

func (m *CMsgGCCStrike15V2_ServerNotificationForUserPenalty) GetSeconds() uint32 {
	if m != nil && m.Seconds != nil {
		return *m.Seconds
	}
	return 0
}

type CMsgGCCStrike15V2_ClientReportPlayer struct {
	AccountId        *uint32 `protobuf:"varint,1,opt,name=account_id" json:"account_id,omitempty"`
	RptAimbot        *uint32 `protobuf:"varint,2,opt,name=rpt_aimbot" json:"rpt_aimbot,omitempty"`
	RptWallhack      *uint32 `protobuf:"varint,3,opt,name=rpt_wallhack" json:"rpt_wallhack,omitempty"`
	RptSpeedhack     *uint32 `protobuf:"varint,4,opt,name=rpt_speedhack" json:"rpt_speedhack,omitempty"`
	RptTeamharm      *uint32 `protobuf:"varint,5,opt,name=rpt_teamharm" json:"rpt_teamharm,omitempty"`
	RptTextabuse     *uint32 `protobuf:"varint,6,opt,name=rpt_textabuse" json:"rpt_textabuse,omitempty"`
	RptVoiceabuse    *uint32 `protobuf:"varint,7,opt,name=rpt_voiceabuse" json:"rpt_voiceabuse,omitempty"`
	MatchId          *uint64 `protobuf:"varint,8,opt,name=match_id" json:"match_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgGCCStrike15V2_ClientReportPlayer) Reset()         { *m = CMsgGCCStrike15V2_ClientReportPlayer{} }
func (m *CMsgGCCStrike15V2_ClientReportPlayer) String() string { return proto.CompactTextString(m) }
func (*CMsgGCCStrike15V2_ClientReportPlayer) ProtoMessage()    {}
func (*CMsgGCCStrike15V2_ClientReportPlayer) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{43}
}

func (m *CMsgGCCStrike15V2_ClientReportPlayer) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *CMsgGCCStrike15V2_ClientReportPlayer) GetRptAimbot() uint32 {
	if m != nil && m.RptAimbot != nil {
		return *m.RptAimbot
	}
	return 0
}

func (m *CMsgGCCStrike15V2_ClientReportPlayer) GetRptWallhack() uint32 {
	if m != nil && m.RptWallhack != nil {
		return *m.RptWallhack
	}
	return 0
}

func (m *CMsgGCCStrike15V2_ClientReportPlayer) GetRptSpeedhack() uint32 {
	if m != nil && m.RptSpeedhack != nil {
		return *m.RptSpeedhack
	}
	return 0
}

func (m *CMsgGCCStrike15V2_ClientReportPlayer) GetRptTeamharm() uint32 {
	if m != nil && m.RptTeamharm != nil {
		return *m.RptTeamharm
	}
	return 0
}

func (m *CMsgGCCStrike15V2_ClientReportPlayer) GetRptTextabuse() uint32 {
	if m != nil && m.RptTextabuse != nil {
		return *m.RptTextabuse
	}
	return 0
}

func (m *CMsgGCCStrike15V2_ClientReportPlayer) GetRptVoiceabuse() uint32 {
	if m != nil && m.RptVoiceabuse != nil {
		return *m.RptVoiceabuse
	}
	return 0
}

func (m *CMsgGCCStrike15V2_ClientReportPlayer) GetMatchId() uint64 {
	if m != nil && m.MatchId != nil {
		return *m.MatchId
	}
	return 0
}

type CMsgGCCStrike15V2_ClientCommendPlayer struct {
	AccountId        *uint32                 `protobuf:"varint,1,opt,name=account_id" json:"account_id,omitempty"`
	MatchId          *uint64                 `protobuf:"varint,8,opt,name=match_id" json:"match_id,omitempty"`
	Commendation     *PlayerCommendationInfo `protobuf:"bytes,9,opt,name=commendation" json:"commendation,omitempty"`
	Tokens           *uint32                 `protobuf:"varint,10,opt,name=tokens" json:"tokens,omitempty"`
	XXX_unrecognized []byte                  `json:"-"`
}

func (m *CMsgGCCStrike15V2_ClientCommendPlayer) Reset()         { *m = CMsgGCCStrike15V2_ClientCommendPlayer{} }
func (m *CMsgGCCStrike15V2_ClientCommendPlayer) String() string { return proto.CompactTextString(m) }
func (*CMsgGCCStrike15V2_ClientCommendPlayer) ProtoMessage()    {}
func (*CMsgGCCStrike15V2_ClientCommendPlayer) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{44}
}

func (m *CMsgGCCStrike15V2_ClientCommendPlayer) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *CMsgGCCStrike15V2_ClientCommendPlayer) GetMatchId() uint64 {
	if m != nil && m.MatchId != nil {
		return *m.MatchId
	}
	return 0
}

func (m *CMsgGCCStrike15V2_ClientCommendPlayer) GetCommendation() *PlayerCommendationInfo {
	if m != nil {
		return m.Commendation
	}
	return nil
}

func (m *CMsgGCCStrike15V2_ClientCommendPlayer) GetTokens() uint32 {
	if m != nil && m.Tokens != nil {
		return *m.Tokens
	}
	return 0
}

type CMsgGCCStrike15V2_ClientReportServer struct {
	RptPoorperf      *uint32 `protobuf:"varint,1,opt,name=rpt_poorperf" json:"rpt_poorperf,omitempty"`
	RptAbusivemodels *uint32 `protobuf:"varint,2,opt,name=rpt_abusivemodels" json:"rpt_abusivemodels,omitempty"`
	RptBadmotd       *uint32 `protobuf:"varint,3,opt,name=rpt_badmotd" json:"rpt_badmotd,omitempty"`
	RptListingabuse  *uint32 `protobuf:"varint,4,opt,name=rpt_listingabuse" json:"rpt_listingabuse,omitempty"`
	MatchId          *uint64 `protobuf:"varint,8,opt,name=match_id" json:"match_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgGCCStrike15V2_ClientReportServer) Reset()         { *m = CMsgGCCStrike15V2_ClientReportServer{} }
func (m *CMsgGCCStrike15V2_ClientReportServer) String() string { return proto.CompactTextString(m) }
func (*CMsgGCCStrike15V2_ClientReportServer) ProtoMessage()    {}
func (*CMsgGCCStrike15V2_ClientReportServer) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{45}
}

func (m *CMsgGCCStrike15V2_ClientReportServer) GetRptPoorperf() uint32 {
	if m != nil && m.RptPoorperf != nil {
		return *m.RptPoorperf
	}
	return 0
}

func (m *CMsgGCCStrike15V2_ClientReportServer) GetRptAbusivemodels() uint32 {
	if m != nil && m.RptAbusivemodels != nil {
		return *m.RptAbusivemodels
	}
	return 0
}

func (m *CMsgGCCStrike15V2_ClientReportServer) GetRptBadmotd() uint32 {
	if m != nil && m.RptBadmotd != nil {
		return *m.RptBadmotd
	}
	return 0
}

func (m *CMsgGCCStrike15V2_ClientReportServer) GetRptListingabuse() uint32 {
	if m != nil && m.RptListingabuse != nil {
		return *m.RptListingabuse
	}
	return 0
}

func (m *CMsgGCCStrike15V2_ClientReportServer) GetMatchId() uint64 {
	if m != nil && m.MatchId != nil {
		return *m.MatchId
	}
	return 0
}

type CMsgGCCStrike15V2_ClientReportResponse struct {
	ConfirmationId   *uint64 `protobuf:"varint,1,opt,name=confirmation_id" json:"confirmation_id,omitempty"`
	AccountId        *uint32 `protobuf:"varint,2,opt,name=account_id" json:"account_id,omitempty"`
	ServerIp         *uint32 `protobuf:"varint,3,opt,name=server_ip" json:"server_ip,omitempty"`
	ResponseType     *uint32 `protobuf:"varint,4,opt,name=response_type" json:"response_type,omitempty"`
	ResponseResult   *uint32 `protobuf:"varint,5,opt,name=response_result" json:"response_result,omitempty"`
	Tokens           *uint32 `protobuf:"varint,6,opt,name=tokens" json:"tokens,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgGCCStrike15V2_ClientReportResponse) Reset() {
	*m = CMsgGCCStrike15V2_ClientReportResponse{}
}
func (m *CMsgGCCStrike15V2_ClientReportResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgGCCStrike15V2_ClientReportResponse) ProtoMessage()    {}
func (*CMsgGCCStrike15V2_ClientReportResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{46}
}

func (m *CMsgGCCStrike15V2_ClientReportResponse) GetConfirmationId() uint64 {
	if m != nil && m.ConfirmationId != nil {
		return *m.ConfirmationId
	}
	return 0
}

func (m *CMsgGCCStrike15V2_ClientReportResponse) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *CMsgGCCStrike15V2_ClientReportResponse) GetServerIp() uint32 {
	if m != nil && m.ServerIp != nil {
		return *m.ServerIp
	}
	return 0
}

func (m *CMsgGCCStrike15V2_ClientReportResponse) GetResponseType() uint32 {
	if m != nil && m.ResponseType != nil {
		return *m.ResponseType
	}
	return 0
}

func (m *CMsgGCCStrike15V2_ClientReportResponse) GetResponseResult() uint32 {
	if m != nil && m.ResponseResult != nil {
		return *m.ResponseResult
	}
	return 0
}

func (m *CMsgGCCStrike15V2_ClientReportResponse) GetTokens() uint32 {
	if m != nil && m.Tokens != nil {
		return *m.Tokens
	}
	return 0
}

type CMsgGCCStrike15V2_ClientRequestWatchInfoFriends struct {
	RequestId        *uint32  `protobuf:"varint,1,opt,name=request_id" json:"request_id,omitempty"`
	AccountIds       []uint32 `protobuf:"varint,2,rep,name=account_ids" json:"account_ids,omitempty"`
	Serverid         *uint64  `protobuf:"varint,3,opt,name=serverid" json:"serverid,omitempty"`
	Matchid          *uint64  `protobuf:"varint,4,opt,name=matchid" json:"matchid,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CMsgGCCStrike15V2_ClientRequestWatchInfoFriends) Reset() {
	*m = CMsgGCCStrike15V2_ClientRequestWatchInfoFriends{}
}
func (m *CMsgGCCStrike15V2_ClientRequestWatchInfoFriends) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgGCCStrike15V2_ClientRequestWatchInfoFriends) ProtoMessage() {}
func (*CMsgGCCStrike15V2_ClientRequestWatchInfoFriends) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{47}
}

func (m *CMsgGCCStrike15V2_ClientRequestWatchInfoFriends) GetRequestId() uint32 {
	if m != nil && m.RequestId != nil {
		return *m.RequestId
	}
	return 0
}

func (m *CMsgGCCStrike15V2_ClientRequestWatchInfoFriends) GetAccountIds() []uint32 {
	if m != nil {
		return m.AccountIds
	}
	return nil
}

func (m *CMsgGCCStrike15V2_ClientRequestWatchInfoFriends) GetServerid() uint64 {
	if m != nil && m.Serverid != nil {
		return *m.Serverid
	}
	return 0
}

func (m *CMsgGCCStrike15V2_ClientRequestWatchInfoFriends) GetMatchid() uint64 {
	if m != nil && m.Matchid != nil {
		return *m.Matchid
	}
	return 0
}

type WatchableMatchInfo struct {
	ServerIp            *uint32 `protobuf:"varint,1,opt,name=server_ip" json:"server_ip,omitempty"`
	TvPort              *uint32 `protobuf:"varint,2,opt,name=tv_port" json:"tv_port,omitempty"`
	TvSpectators        *uint32 `protobuf:"varint,3,opt,name=tv_spectators" json:"tv_spectators,omitempty"`
	TvTime              *uint32 `protobuf:"varint,4,opt,name=tv_time" json:"tv_time,omitempty"`
	TvWatchPassword     []byte  `protobuf:"bytes,5,opt,name=tv_watch_password" json:"tv_watch_password,omitempty"`
	ClDecryptdataKey    *uint64 `protobuf:"varint,6,opt,name=cl_decryptdata_key" json:"cl_decryptdata_key,omitempty"`
	ClDecryptdataKeyPub *uint64 `protobuf:"varint,7,opt,name=cl_decryptdata_key_pub" json:"cl_decryptdata_key_pub,omitempty"`
	GameType            *uint32 `protobuf:"varint,8,opt,name=game_type" json:"game_type,omitempty"`
	GameMapgroup        *string `protobuf:"bytes,9,opt,name=game_mapgroup" json:"game_mapgroup,omitempty"`
	GameMap             *string `protobuf:"bytes,10,opt,name=game_map" json:"game_map,omitempty"`
	ServerId            *uint64 `protobuf:"varint,11,opt,name=server_id" json:"server_id,omitempty"`
	MatchId             *uint64 `protobuf:"varint,12,opt,name=match_id" json:"match_id,omitempty"`
	ReservationId       *uint64 `protobuf:"varint,13,opt,name=reservation_id" json:"reservation_id,omitempty"`
	XXX_unrecognized    []byte  `json:"-"`
}

func (m *WatchableMatchInfo) Reset()                    { *m = WatchableMatchInfo{} }
func (m *WatchableMatchInfo) String() string            { return proto.CompactTextString(m) }
func (*WatchableMatchInfo) ProtoMessage()               {}
func (*WatchableMatchInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{48} }

func (m *WatchableMatchInfo) GetServerIp() uint32 {
	if m != nil && m.ServerIp != nil {
		return *m.ServerIp
	}
	return 0
}

func (m *WatchableMatchInfo) GetTvPort() uint32 {
	if m != nil && m.TvPort != nil {
		return *m.TvPort
	}
	return 0
}

func (m *WatchableMatchInfo) GetTvSpectators() uint32 {
	if m != nil && m.TvSpectators != nil {
		return *m.TvSpectators
	}
	return 0
}

func (m *WatchableMatchInfo) GetTvTime() uint32 {
	if m != nil && m.TvTime != nil {
		return *m.TvTime
	}
	return 0
}

func (m *WatchableMatchInfo) GetTvWatchPassword() []byte {
	if m != nil {
		return m.TvWatchPassword
	}
	return nil
}

func (m *WatchableMatchInfo) GetClDecryptdataKey() uint64 {
	if m != nil && m.ClDecryptdataKey != nil {
		return *m.ClDecryptdataKey
	}
	return 0
}

func (m *WatchableMatchInfo) GetClDecryptdataKeyPub() uint64 {
	if m != nil && m.ClDecryptdataKeyPub != nil {
		return *m.ClDecryptdataKeyPub
	}
	return 0
}

func (m *WatchableMatchInfo) GetGameType() uint32 {
	if m != nil && m.GameType != nil {
		return *m.GameType
	}
	return 0
}

func (m *WatchableMatchInfo) GetGameMapgroup() string {
	if m != nil && m.GameMapgroup != nil {
		return *m.GameMapgroup
	}
	return ""
}

func (m *WatchableMatchInfo) GetGameMap() string {
	if m != nil && m.GameMap != nil {
		return *m.GameMap
	}
	return ""
}

func (m *WatchableMatchInfo) GetServerId() uint64 {
	if m != nil && m.ServerId != nil {
		return *m.ServerId
	}
	return 0
}

func (m *WatchableMatchInfo) GetMatchId() uint64 {
	if m != nil && m.MatchId != nil {
		return *m.MatchId
	}
	return 0
}

func (m *WatchableMatchInfo) GetReservationId() uint64 {
	if m != nil && m.ReservationId != nil {
		return *m.ReservationId
	}
	return 0
}

type CMsgGCCStrike15V2_ClientRequestJoinFriendData struct {
	Version          *uint32                                        `protobuf:"varint,1,opt,name=version" json:"version,omitempty"`
	AccountId        *uint32                                        `protobuf:"varint,2,opt,name=account_id" json:"account_id,omitempty"`
	JoinToken        *uint32                                        `protobuf:"varint,3,opt,name=join_token" json:"join_token,omitempty"`
	JoinIpp          *uint32                                        `protobuf:"varint,4,opt,name=join_ipp" json:"join_ipp,omitempty"`
	Res              *CMsgGCCStrike15V2_MatchmakingGC2ClientReserve `protobuf:"bytes,5,opt,name=res" json:"res,omitempty"`
	Errormsg         *string                                        `protobuf:"bytes,6,opt,name=errormsg" json:"errormsg,omitempty"`
	XXX_unrecognized []byte                                         `json:"-"`
}

func (m *CMsgGCCStrike15V2_ClientRequestJoinFriendData) Reset() {
	*m = CMsgGCCStrike15V2_ClientRequestJoinFriendData{}
}
func (m *CMsgGCCStrike15V2_ClientRequestJoinFriendData) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgGCCStrike15V2_ClientRequestJoinFriendData) ProtoMessage() {}
func (*CMsgGCCStrike15V2_ClientRequestJoinFriendData) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{49}
}

func (m *CMsgGCCStrike15V2_ClientRequestJoinFriendData) GetVersion() uint32 {
	if m != nil && m.Version != nil {
		return *m.Version
	}
	return 0
}

func (m *CMsgGCCStrike15V2_ClientRequestJoinFriendData) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *CMsgGCCStrike15V2_ClientRequestJoinFriendData) GetJoinToken() uint32 {
	if m != nil && m.JoinToken != nil {
		return *m.JoinToken
	}
	return 0
}

func (m *CMsgGCCStrike15V2_ClientRequestJoinFriendData) GetJoinIpp() uint32 {
	if m != nil && m.JoinIpp != nil {
		return *m.JoinIpp
	}
	return 0
}

func (m *CMsgGCCStrike15V2_ClientRequestJoinFriendData) GetRes() *CMsgGCCStrike15V2_MatchmakingGC2ClientReserve {
	if m != nil {
		return m.Res
	}
	return nil
}

func (m *CMsgGCCStrike15V2_ClientRequestJoinFriendData) GetErrormsg() string {
	if m != nil && m.Errormsg != nil {
		return *m.Errormsg
	}
	return ""
}

type CMsgGCCStrike15V2_ClientRequestJoinServerData struct {
	Version          *uint32                                        `protobuf:"varint,1,opt,name=version" json:"version,omitempty"`
	AccountId        *uint32                                        `protobuf:"varint,2,opt,name=account_id" json:"account_id,omitempty"`
	Serverid         *uint64                                        `protobuf:"varint,3,opt,name=serverid" json:"serverid,omitempty"`
	ServerIp         *uint32                                        `protobuf:"varint,4,opt,name=server_ip" json:"server_ip,omitempty"`
	ServerPort       *uint32                                        `protobuf:"varint,5,opt,name=server_port" json:"server_port,omitempty"`
	Res              *CMsgGCCStrike15V2_MatchmakingGC2ClientReserve `protobuf:"bytes,6,opt,name=res" json:"res,omitempty"`
	XXX_unrecognized []byte                                         `json:"-"`
}

func (m *CMsgGCCStrike15V2_ClientRequestJoinServerData) Reset() {
	*m = CMsgGCCStrike15V2_ClientRequestJoinServerData{}
}
func (m *CMsgGCCStrike15V2_ClientRequestJoinServerData) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgGCCStrike15V2_ClientRequestJoinServerData) ProtoMessage() {}
func (*CMsgGCCStrike15V2_ClientRequestJoinServerData) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{50}
}

func (m *CMsgGCCStrike15V2_ClientRequestJoinServerData) GetVersion() uint32 {
	if m != nil && m.Version != nil {
		return *m.Version
	}
	return 0
}

func (m *CMsgGCCStrike15V2_ClientRequestJoinServerData) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *CMsgGCCStrike15V2_ClientRequestJoinServerData) GetServerid() uint64 {
	if m != nil && m.Serverid != nil {
		return *m.Serverid
	}
	return 0
}

func (m *CMsgGCCStrike15V2_ClientRequestJoinServerData) GetServerIp() uint32 {
	if m != nil && m.ServerIp != nil {
		return *m.ServerIp
	}
	return 0
}

func (m *CMsgGCCStrike15V2_ClientRequestJoinServerData) GetServerPort() uint32 {
	if m != nil && m.ServerPort != nil {
		return *m.ServerPort
	}
	return 0
}

func (m *CMsgGCCStrike15V2_ClientRequestJoinServerData) GetRes() *CMsgGCCStrike15V2_MatchmakingGC2ClientReserve {
	if m != nil {
		return m.Res
	}
	return nil
}

type CMsgGCCstrike15V2_ClientRequestNewMission struct {
	MissionId        *uint32 `protobuf:"varint,2,opt,name=mission_id" json:"mission_id,omitempty"`
	CampaignId       *uint32 `protobuf:"varint,3,opt,name=campaign_id" json:"campaign_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgGCCstrike15V2_ClientRequestNewMission) Reset() {
	*m = CMsgGCCstrike15V2_ClientRequestNewMission{}
}
func (m *CMsgGCCstrike15V2_ClientRequestNewMission) String() string { return proto.CompactTextString(m) }
func (*CMsgGCCstrike15V2_ClientRequestNewMission) ProtoMessage()    {}
func (*CMsgGCCstrike15V2_ClientRequestNewMission) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{51}
}

func (m *CMsgGCCstrike15V2_ClientRequestNewMission) GetMissionId() uint32 {
	if m != nil && m.MissionId != nil {
		return *m.MissionId
	}
	return 0
}

func (m *CMsgGCCstrike15V2_ClientRequestNewMission) GetCampaignId() uint32 {
	if m != nil && m.CampaignId != nil {
		return *m.CampaignId
	}
	return 0
}

type CMsgGCCstrike15V2_GC2ServerNotifyXPRewarded struct {
	XpProgressData   []*XpProgressData `protobuf:"bytes,1,rep,name=xp_progress_data" json:"xp_progress_data,omitempty"`
	AccountId        *uint32           `protobuf:"varint,2,opt,name=account_id" json:"account_id,omitempty"`
	CurrentXp        *uint32           `protobuf:"varint,3,opt,name=current_xp" json:"current_xp,omitempty"`
	CurrentLevel     *uint32           `protobuf:"varint,4,opt,name=current_level" json:"current_level,omitempty"`
	UpgradedDefidx   *uint32           `protobuf:"varint,5,opt,name=upgraded_defidx" json:"upgraded_defidx,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *CMsgGCCstrike15V2_GC2ServerNotifyXPRewarded) Reset() {
	*m = CMsgGCCstrike15V2_GC2ServerNotifyXPRewarded{}
}
func (m *CMsgGCCstrike15V2_GC2ServerNotifyXPRewarded) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgGCCstrike15V2_GC2ServerNotifyXPRewarded) ProtoMessage() {}
func (*CMsgGCCstrike15V2_GC2ServerNotifyXPRewarded) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{52}
}

func (m *CMsgGCCstrike15V2_GC2ServerNotifyXPRewarded) GetXpProgressData() []*XpProgressData {
	if m != nil {
		return m.XpProgressData
	}
	return nil
}

func (m *CMsgGCCstrike15V2_GC2ServerNotifyXPRewarded) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *CMsgGCCstrike15V2_GC2ServerNotifyXPRewarded) GetCurrentXp() uint32 {
	if m != nil && m.CurrentXp != nil {
		return *m.CurrentXp
	}
	return 0
}

func (m *CMsgGCCstrike15V2_GC2ServerNotifyXPRewarded) GetCurrentLevel() uint32 {
	if m != nil && m.CurrentLevel != nil {
		return *m.CurrentLevel
	}
	return 0
}

func (m *CMsgGCCstrike15V2_GC2ServerNotifyXPRewarded) GetUpgradedDefidx() uint32 {
	if m != nil && m.UpgradedDefidx != nil {
		return *m.UpgradedDefidx
	}
	return 0
}

type CMsgGCCStrike15V2_WatchInfoUsers struct {
	RequestId           *uint32               `protobuf:"varint,1,opt,name=request_id" json:"request_id,omitempty"`
	AccountIds          []uint32              `protobuf:"varint,2,rep,name=account_ids" json:"account_ids,omitempty"`
	WatchableMatchInfos []*WatchableMatchInfo `protobuf:"bytes,3,rep,name=watchable_match_infos" json:"watchable_match_infos,omitempty"`
	ExtendedTimeout     *uint32               `protobuf:"varint,5,opt,name=extended_timeout" json:"extended_timeout,omitempty"`
	XXX_unrecognized    []byte                `json:"-"`
}

func (m *CMsgGCCStrike15V2_WatchInfoUsers) Reset()         { *m = CMsgGCCStrike15V2_WatchInfoUsers{} }
func (m *CMsgGCCStrike15V2_WatchInfoUsers) String() string { return proto.CompactTextString(m) }
func (*CMsgGCCStrike15V2_WatchInfoUsers) ProtoMessage()    {}
func (*CMsgGCCStrike15V2_WatchInfoUsers) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{53}
}

func (m *CMsgGCCStrike15V2_WatchInfoUsers) GetRequestId() uint32 {
	if m != nil && m.RequestId != nil {
		return *m.RequestId
	}
	return 0
}

func (m *CMsgGCCStrike15V2_WatchInfoUsers) GetAccountIds() []uint32 {
	if m != nil {
		return m.AccountIds
	}
	return nil
}

func (m *CMsgGCCStrike15V2_WatchInfoUsers) GetWatchableMatchInfos() []*WatchableMatchInfo {
	if m != nil {
		return m.WatchableMatchInfos
	}
	return nil
}

func (m *CMsgGCCStrike15V2_WatchInfoUsers) GetExtendedTimeout() uint32 {
	if m != nil && m.ExtendedTimeout != nil {
		return *m.ExtendedTimeout
	}
	return 0
}

type CMsgGCCStrike15V2_ClientRequestPlayersProfile struct {
	RequestId_Deprecated  *uint32  `protobuf:"varint,1,opt,name=request_id__deprecated" json:"request_id__deprecated,omitempty"`
	AccountIds_Deprecated []uint32 `protobuf:"varint,2,rep,name=account_ids__deprecated" json:"account_ids__deprecated,omitempty"`
	AccountId             *uint32  `protobuf:"varint,3,opt,name=account_id" json:"account_id,omitempty"`
	RequestLevel          *uint32  `protobuf:"varint,4,opt,name=request_level" json:"request_level,omitempty"`
	XXX_unrecognized      []byte   `json:"-"`
}

func (m *CMsgGCCStrike15V2_ClientRequestPlayersProfile) Reset() {
	*m = CMsgGCCStrike15V2_ClientRequestPlayersProfile{}
}
func (m *CMsgGCCStrike15V2_ClientRequestPlayersProfile) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgGCCStrike15V2_ClientRequestPlayersProfile) ProtoMessage() {}
func (*CMsgGCCStrike15V2_ClientRequestPlayersProfile) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{54}
}

func (m *CMsgGCCStrike15V2_ClientRequestPlayersProfile) GetRequestId_Deprecated() uint32 {
	if m != nil && m.RequestId_Deprecated != nil {
		return *m.RequestId_Deprecated
	}
	return 0
}

func (m *CMsgGCCStrike15V2_ClientRequestPlayersProfile) GetAccountIds_Deprecated() []uint32 {
	if m != nil {
		return m.AccountIds_Deprecated
	}
	return nil
}

func (m *CMsgGCCStrike15V2_ClientRequestPlayersProfile) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *CMsgGCCStrike15V2_ClientRequestPlayersProfile) GetRequestLevel() uint32 {
	if m != nil && m.RequestLevel != nil {
		return *m.RequestLevel
	}
	return 0
}

type CMsgGCCStrike15V2_PlayersProfile struct {
	RequestId        *uint32                                        `protobuf:"varint,1,opt,name=request_id" json:"request_id,omitempty"`
	AccountProfiles  []*CMsgGCCStrike15V2_MatchmakingGC2ClientHello `protobuf:"bytes,2,rep,name=account_profiles" json:"account_profiles,omitempty"`
	XXX_unrecognized []byte                                         `json:"-"`
}

func (m *CMsgGCCStrike15V2_PlayersProfile) Reset()         { *m = CMsgGCCStrike15V2_PlayersProfile{} }
func (m *CMsgGCCStrike15V2_PlayersProfile) String() string { return proto.CompactTextString(m) }
func (*CMsgGCCStrike15V2_PlayersProfile) ProtoMessage()    {}
func (*CMsgGCCStrike15V2_PlayersProfile) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{55}
}

func (m *CMsgGCCStrike15V2_PlayersProfile) GetRequestId() uint32 {
	if m != nil && m.RequestId != nil {
		return *m.RequestId
	}
	return 0
}

func (m *CMsgGCCStrike15V2_PlayersProfile) GetAccountProfiles() []*CMsgGCCStrike15V2_MatchmakingGC2ClientHello {
	if m != nil {
		return m.AccountProfiles
	}
	return nil
}

type CMsgGCCStrike15V2_PlayerOverwatchCaseUpdate struct {
	Caseid           *uint64 `protobuf:"varint,1,opt,name=caseid" json:"caseid,omitempty"`
	Suspectid        *uint32 `protobuf:"varint,3,opt,name=suspectid" json:"suspectid,omitempty"`
	Fractionid       *uint32 `protobuf:"varint,4,opt,name=fractionid" json:"fractionid,omitempty"`
	RptAimbot        *uint32 `protobuf:"varint,5,opt,name=rpt_aimbot" json:"rpt_aimbot,omitempty"`
	RptWallhack      *uint32 `protobuf:"varint,6,opt,name=rpt_wallhack" json:"rpt_wallhack,omitempty"`
	RptSpeedhack     *uint32 `protobuf:"varint,7,opt,name=rpt_speedhack" json:"rpt_speedhack,omitempty"`
	RptTeamharm      *uint32 `protobuf:"varint,8,opt,name=rpt_teamharm" json:"rpt_teamharm,omitempty"`
	Reason           *uint32 `protobuf:"varint,9,opt,name=reason" json:"reason,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgGCCStrike15V2_PlayerOverwatchCaseUpdate) Reset() {
	*m = CMsgGCCStrike15V2_PlayerOverwatchCaseUpdate{}
}
func (m *CMsgGCCStrike15V2_PlayerOverwatchCaseUpdate) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgGCCStrike15V2_PlayerOverwatchCaseUpdate) ProtoMessage() {}
func (*CMsgGCCStrike15V2_PlayerOverwatchCaseUpdate) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{56}
}

func (m *CMsgGCCStrike15V2_PlayerOverwatchCaseUpdate) GetCaseid() uint64 {
	if m != nil && m.Caseid != nil {
		return *m.Caseid
	}
	return 0
}

func (m *CMsgGCCStrike15V2_PlayerOverwatchCaseUpdate) GetSuspectid() uint32 {
	if m != nil && m.Suspectid != nil {
		return *m.Suspectid
	}
	return 0
}

func (m *CMsgGCCStrike15V2_PlayerOverwatchCaseUpdate) GetFractionid() uint32 {
	if m != nil && m.Fractionid != nil {
		return *m.Fractionid
	}
	return 0
}

func (m *CMsgGCCStrike15V2_PlayerOverwatchCaseUpdate) GetRptAimbot() uint32 {
	if m != nil && m.RptAimbot != nil {
		return *m.RptAimbot
	}
	return 0
}

func (m *CMsgGCCStrike15V2_PlayerOverwatchCaseUpdate) GetRptWallhack() uint32 {
	if m != nil && m.RptWallhack != nil {
		return *m.RptWallhack
	}
	return 0
}

func (m *CMsgGCCStrike15V2_PlayerOverwatchCaseUpdate) GetRptSpeedhack() uint32 {
	if m != nil && m.RptSpeedhack != nil {
		return *m.RptSpeedhack
	}
	return 0
}

func (m *CMsgGCCStrike15V2_PlayerOverwatchCaseUpdate) GetRptTeamharm() uint32 {
	if m != nil && m.RptTeamharm != nil {
		return *m.RptTeamharm
	}
	return 0
}

func (m *CMsgGCCStrike15V2_PlayerOverwatchCaseUpdate) GetReason() uint32 {
	if m != nil && m.Reason != nil {
		return *m.Reason
	}
	return 0
}

type CMsgGCCStrike15V2_PlayerOverwatchCaseAssignment struct {
	Caseid            *uint64 `protobuf:"varint,1,opt,name=caseid" json:"caseid,omitempty"`
	Caseurl           *string `protobuf:"bytes,2,opt,name=caseurl" json:"caseurl,omitempty"`
	Verdict           *uint32 `protobuf:"varint,3,opt,name=verdict" json:"verdict,omitempty"`
	Timestamp         *uint32 `protobuf:"varint,4,opt,name=timestamp" json:"timestamp,omitempty"`
	Throttleseconds   *uint32 `protobuf:"varint,5,opt,name=throttleseconds" json:"throttleseconds,omitempty"`
	Suspectid         *uint32 `protobuf:"varint,6,opt,name=suspectid" json:"suspectid,omitempty"`
	Fractionid        *uint32 `protobuf:"varint,7,opt,name=fractionid" json:"fractionid,omitempty"`
	Numrounds         *uint32 `protobuf:"varint,8,opt,name=numrounds" json:"numrounds,omitempty"`
	Fractionrounds    *uint32 `protobuf:"varint,9,opt,name=fractionrounds" json:"fractionrounds,omitempty"`
	Streakconvictions *int32  `protobuf:"varint,10,opt,name=streakconvictions" json:"streakconvictions,omitempty"`
	Reason            *uint32 `protobuf:"varint,11,opt,name=reason" json:"reason,omitempty"`
	XXX_unrecognized  []byte  `json:"-"`
}

func (m *CMsgGCCStrike15V2_PlayerOverwatchCaseAssignment) Reset() {
	*m = CMsgGCCStrike15V2_PlayerOverwatchCaseAssignment{}
}
func (m *CMsgGCCStrike15V2_PlayerOverwatchCaseAssignment) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgGCCStrike15V2_PlayerOverwatchCaseAssignment) ProtoMessage() {}
func (*CMsgGCCStrike15V2_PlayerOverwatchCaseAssignment) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{57}
}

func (m *CMsgGCCStrike15V2_PlayerOverwatchCaseAssignment) GetCaseid() uint64 {
	if m != nil && m.Caseid != nil {
		return *m.Caseid
	}
	return 0
}

func (m *CMsgGCCStrike15V2_PlayerOverwatchCaseAssignment) GetCaseurl() string {
	if m != nil && m.Caseurl != nil {
		return *m.Caseurl
	}
	return ""
}

func (m *CMsgGCCStrike15V2_PlayerOverwatchCaseAssignment) GetVerdict() uint32 {
	if m != nil && m.Verdict != nil {
		return *m.Verdict
	}
	return 0
}

func (m *CMsgGCCStrike15V2_PlayerOverwatchCaseAssignment) GetTimestamp() uint32 {
	if m != nil && m.Timestamp != nil {
		return *m.Timestamp
	}
	return 0
}

func (m *CMsgGCCStrike15V2_PlayerOverwatchCaseAssignment) GetThrottleseconds() uint32 {
	if m != nil && m.Throttleseconds != nil {
		return *m.Throttleseconds
	}
	return 0
}

func (m *CMsgGCCStrike15V2_PlayerOverwatchCaseAssignment) GetSuspectid() uint32 {
	if m != nil && m.Suspectid != nil {
		return *m.Suspectid
	}
	return 0
}

func (m *CMsgGCCStrike15V2_PlayerOverwatchCaseAssignment) GetFractionid() uint32 {
	if m != nil && m.Fractionid != nil {
		return *m.Fractionid
	}
	return 0
}

func (m *CMsgGCCStrike15V2_PlayerOverwatchCaseAssignment) GetNumrounds() uint32 {
	if m != nil && m.Numrounds != nil {
		return *m.Numrounds
	}
	return 0
}

func (m *CMsgGCCStrike15V2_PlayerOverwatchCaseAssignment) GetFractionrounds() uint32 {
	if m != nil && m.Fractionrounds != nil {
		return *m.Fractionrounds
	}
	return 0
}

func (m *CMsgGCCStrike15V2_PlayerOverwatchCaseAssignment) GetStreakconvictions() int32 {
	if m != nil && m.Streakconvictions != nil {
		return *m.Streakconvictions
	}
	return 0
}

func (m *CMsgGCCStrike15V2_PlayerOverwatchCaseAssignment) GetReason() uint32 {
	if m != nil && m.Reason != nil {
		return *m.Reason
	}
	return 0
}

type CMsgGCCStrike15V2_PlayerOverwatchCaseStatus struct {
	Caseid           *uint64 `protobuf:"varint,1,opt,name=caseid" json:"caseid,omitempty"`
	Statusid         *uint32 `protobuf:"varint,2,opt,name=statusid" json:"statusid,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgGCCStrike15V2_PlayerOverwatchCaseStatus) Reset() {
	*m = CMsgGCCStrike15V2_PlayerOverwatchCaseStatus{}
}
func (m *CMsgGCCStrike15V2_PlayerOverwatchCaseStatus) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgGCCStrike15V2_PlayerOverwatchCaseStatus) ProtoMessage() {}
func (*CMsgGCCStrike15V2_PlayerOverwatchCaseStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{58}
}

func (m *CMsgGCCStrike15V2_PlayerOverwatchCaseStatus) GetCaseid() uint64 {
	if m != nil && m.Caseid != nil {
		return *m.Caseid
	}
	return 0
}

func (m *CMsgGCCStrike15V2_PlayerOverwatchCaseStatus) GetStatusid() uint32 {
	if m != nil && m.Statusid != nil {
		return *m.Statusid
	}
	return 0
}

type CClientHeaderOverwatchEvidence struct {
	Accountid        *uint32 `protobuf:"varint,1,opt,name=accountid" json:"accountid,omitempty"`
	Caseid           *uint64 `protobuf:"varint,2,opt,name=caseid" json:"caseid,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CClientHeaderOverwatchEvidence) Reset()                    { *m = CClientHeaderOverwatchEvidence{} }
func (m *CClientHeaderOverwatchEvidence) String() string            { return proto.CompactTextString(m) }
func (*CClientHeaderOverwatchEvidence) ProtoMessage()               {}
func (*CClientHeaderOverwatchEvidence) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{59} }

func (m *CClientHeaderOverwatchEvidence) GetAccountid() uint32 {
	if m != nil && m.Accountid != nil {
		return *m.Accountid
	}
	return 0
}

func (m *CClientHeaderOverwatchEvidence) GetCaseid() uint64 {
	if m != nil && m.Caseid != nil {
		return *m.Caseid
	}
	return 0
}

type CMsgGCCStrike15V2_GC2ClientTextMsg struct {
	Id               *uint32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Type             *uint32 `protobuf:"varint,2,opt,name=type" json:"type,omitempty"`
	Payload          []byte  `protobuf:"bytes,3,opt,name=payload" json:"payload,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgGCCStrike15V2_GC2ClientTextMsg) Reset()         { *m = CMsgGCCStrike15V2_GC2ClientTextMsg{} }
func (m *CMsgGCCStrike15V2_GC2ClientTextMsg) String() string { return proto.CompactTextString(m) }
func (*CMsgGCCStrike15V2_GC2ClientTextMsg) ProtoMessage()    {}
func (*CMsgGCCStrike15V2_GC2ClientTextMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{60}
}

func (m *CMsgGCCStrike15V2_GC2ClientTextMsg) GetId() uint32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *CMsgGCCStrike15V2_GC2ClientTextMsg) GetType() uint32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

func (m *CMsgGCCStrike15V2_GC2ClientTextMsg) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

type CMsgGCCStrike15V2_Client2GCTextMsg struct {
	Id               *uint32  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Args             [][]byte `protobuf:"bytes,2,rep,name=args" json:"args,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CMsgGCCStrike15V2_Client2GCTextMsg) Reset()         { *m = CMsgGCCStrike15V2_Client2GCTextMsg{} }
func (m *CMsgGCCStrike15V2_Client2GCTextMsg) String() string { return proto.CompactTextString(m) }
func (*CMsgGCCStrike15V2_Client2GCTextMsg) ProtoMessage()    {}
func (*CMsgGCCStrike15V2_Client2GCTextMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{61}
}

func (m *CMsgGCCStrike15V2_Client2GCTextMsg) GetId() uint32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *CMsgGCCStrike15V2_Client2GCTextMsg) GetArgs() [][]byte {
	if m != nil {
		return m.Args
	}
	return nil
}

type CMsgGCCStrike15V2_MatchEndRunRewardDrops struct {
	Serverinfo        *CMsgGCCStrike15V2_MatchmakingServerReservationResponse `protobuf:"bytes,3,opt,name=serverinfo" json:"serverinfo,omitempty"`
	MatchEndQuestData *CMsgGC_ServerQuestUpdateData                           `protobuf:"bytes,4,opt,name=match_end_quest_data" json:"match_end_quest_data,omitempty"`
	XXX_unrecognized  []byte                                                  `json:"-"`
}

func (m *CMsgGCCStrike15V2_MatchEndRunRewardDrops) Reset() {
	*m = CMsgGCCStrike15V2_MatchEndRunRewardDrops{}
}
func (m *CMsgGCCStrike15V2_MatchEndRunRewardDrops) String() string { return proto.CompactTextString(m) }
func (*CMsgGCCStrike15V2_MatchEndRunRewardDrops) ProtoMessage()    {}
func (*CMsgGCCStrike15V2_MatchEndRunRewardDrops) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{62}
}

func (m *CMsgGCCStrike15V2_MatchEndRunRewardDrops) GetServerinfo() *CMsgGCCStrike15V2_MatchmakingServerReservationResponse {
	if m != nil {
		return m.Serverinfo
	}
	return nil
}

func (m *CMsgGCCStrike15V2_MatchEndRunRewardDrops) GetMatchEndQuestData() *CMsgGC_ServerQuestUpdateData {
	if m != nil {
		return m.MatchEndQuestData
	}
	return nil
}

type CEconItemPreviewDataBlock struct {
	Accountid          *uint32                              `protobuf:"varint,1,opt,name=accountid" json:"accountid,omitempty"`
	Itemid             *uint64                              `protobuf:"varint,2,opt,name=itemid" json:"itemid,omitempty"`
	Defindex           *uint32                              `protobuf:"varint,3,opt,name=defindex" json:"defindex,omitempty"`
	Paintindex         *uint32                              `protobuf:"varint,4,opt,name=paintindex" json:"paintindex,omitempty"`
	Rarity             *uint32                              `protobuf:"varint,5,opt,name=rarity" json:"rarity,omitempty"`
	Quality            *uint32                              `protobuf:"varint,6,opt,name=quality" json:"quality,omitempty"`
	Paintwear          *uint32                              `protobuf:"varint,7,opt,name=paintwear" json:"paintwear,omitempty"`
	Paintseed          *uint32                              `protobuf:"varint,8,opt,name=paintseed" json:"paintseed,omitempty"`
	Killeaterscoretype *uint32                              `protobuf:"varint,9,opt,name=killeaterscoretype" json:"killeaterscoretype,omitempty"`
	Killeatervalue     *uint32                              `protobuf:"varint,10,opt,name=killeatervalue" json:"killeatervalue,omitempty"`
	Customname         *string                              `protobuf:"bytes,11,opt,name=customname" json:"customname,omitempty"`
	Stickers           []*CEconItemPreviewDataBlock_Sticker `protobuf:"bytes,12,rep,name=stickers" json:"stickers,omitempty"`
	Inventory          *uint32                              `protobuf:"varint,13,opt,name=inventory" json:"inventory,omitempty"`
	Origin             *uint32                              `protobuf:"varint,14,opt,name=origin" json:"origin,omitempty"`
	Questid            *uint32                              `protobuf:"varint,15,opt,name=questid" json:"questid,omitempty"`
	Dropreason         *uint32                              `protobuf:"varint,16,opt,name=dropreason" json:"dropreason,omitempty"`
	XXX_unrecognized   []byte                               `json:"-"`
}

func (m *CEconItemPreviewDataBlock) Reset()                    { *m = CEconItemPreviewDataBlock{} }
func (m *CEconItemPreviewDataBlock) String() string            { return proto.CompactTextString(m) }
func (*CEconItemPreviewDataBlock) ProtoMessage()               {}
func (*CEconItemPreviewDataBlock) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{63} }

func (m *CEconItemPreviewDataBlock) GetAccountid() uint32 {
	if m != nil && m.Accountid != nil {
		return *m.Accountid
	}
	return 0
}

func (m *CEconItemPreviewDataBlock) GetItemid() uint64 {
	if m != nil && m.Itemid != nil {
		return *m.Itemid
	}
	return 0
}

func (m *CEconItemPreviewDataBlock) GetDefindex() uint32 {
	if m != nil && m.Defindex != nil {
		return *m.Defindex
	}
	return 0
}

func (m *CEconItemPreviewDataBlock) GetPaintindex() uint32 {
	if m != nil && m.Paintindex != nil {
		return *m.Paintindex
	}
	return 0
}

func (m *CEconItemPreviewDataBlock) GetRarity() uint32 {
	if m != nil && m.Rarity != nil {
		return *m.Rarity
	}
	return 0
}

func (m *CEconItemPreviewDataBlock) GetQuality() uint32 {
	if m != nil && m.Quality != nil {
		return *m.Quality
	}
	return 0
}

func (m *CEconItemPreviewDataBlock) GetPaintwear() uint32 {
	if m != nil && m.Paintwear != nil {
		return *m.Paintwear
	}
	return 0
}

func (m *CEconItemPreviewDataBlock) GetPaintseed() uint32 {
	if m != nil && m.Paintseed != nil {
		return *m.Paintseed
	}
	return 0
}

func (m *CEconItemPreviewDataBlock) GetKilleaterscoretype() uint32 {
	if m != nil && m.Killeaterscoretype != nil {
		return *m.Killeaterscoretype
	}
	return 0
}

func (m *CEconItemPreviewDataBlock) GetKilleatervalue() uint32 {
	if m != nil && m.Killeatervalue != nil {
		return *m.Killeatervalue
	}
	return 0
}

func (m *CEconItemPreviewDataBlock) GetCustomname() string {
	if m != nil && m.Customname != nil {
		return *m.Customname
	}
	return ""
}

func (m *CEconItemPreviewDataBlock) GetStickers() []*CEconItemPreviewDataBlock_Sticker {
	if m != nil {
		return m.Stickers
	}
	return nil
}

func (m *CEconItemPreviewDataBlock) GetInventory() uint32 {
	if m != nil && m.Inventory != nil {
		return *m.Inventory
	}
	return 0
}

func (m *CEconItemPreviewDataBlock) GetOrigin() uint32 {
	if m != nil && m.Origin != nil {
		return *m.Origin
	}
	return 0
}

func (m *CEconItemPreviewDataBlock) GetQuestid() uint32 {
	if m != nil && m.Questid != nil {
		return *m.Questid
	}
	return 0
}

func (m *CEconItemPreviewDataBlock) GetDropreason() uint32 {
	if m != nil && m.Dropreason != nil {
		return *m.Dropreason
	}
	return 0
}

type CEconItemPreviewDataBlock_Sticker struct {
	Slot             *uint32  `protobuf:"varint,1,opt,name=slot" json:"slot,omitempty"`
	StickerId        *uint32  `protobuf:"varint,2,opt,name=sticker_id" json:"sticker_id,omitempty"`
	Wear             *float32 `protobuf:"fixed32,3,opt,name=wear" json:"wear,omitempty"`
	Scale            *float32 `protobuf:"fixed32,4,opt,name=scale" json:"scale,omitempty"`
	Rotation         *float32 `protobuf:"fixed32,5,opt,name=rotation" json:"rotation,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CEconItemPreviewDataBlock_Sticker) Reset()         { *m = CEconItemPreviewDataBlock_Sticker{} }
func (m *CEconItemPreviewDataBlock_Sticker) String() string { return proto.CompactTextString(m) }
func (*CEconItemPreviewDataBlock_Sticker) ProtoMessage()    {}
func (*CEconItemPreviewDataBlock_Sticker) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{63, 0}
}

func (m *CEconItemPreviewDataBlock_Sticker) GetSlot() uint32 {
	if m != nil && m.Slot != nil {
		return *m.Slot
	}
	return 0
}

func (m *CEconItemPreviewDataBlock_Sticker) GetStickerId() uint32 {
	if m != nil && m.StickerId != nil {
		return *m.StickerId
	}
	return 0
}

func (m *CEconItemPreviewDataBlock_Sticker) GetWear() float32 {
	if m != nil && m.Wear != nil {
		return *m.Wear
	}
	return 0
}

func (m *CEconItemPreviewDataBlock_Sticker) GetScale() float32 {
	if m != nil && m.Scale != nil {
		return *m.Scale
	}
	return 0
}

func (m *CEconItemPreviewDataBlock_Sticker) GetRotation() float32 {
	if m != nil && m.Rotation != nil {
		return *m.Rotation
	}
	return 0
}

type CMsgGCCStrike15V2_MatchEndRewardDropsNotification struct {
	Iteminfo         *CEconItemPreviewDataBlock `protobuf:"bytes,6,opt,name=iteminfo" json:"iteminfo,omitempty"`
	XXX_unrecognized []byte                     `json:"-"`
}

func (m *CMsgGCCStrike15V2_MatchEndRewardDropsNotification) Reset() {
	*m = CMsgGCCStrike15V2_MatchEndRewardDropsNotification{}
}
func (m *CMsgGCCStrike15V2_MatchEndRewardDropsNotification) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgGCCStrike15V2_MatchEndRewardDropsNotification) ProtoMessage() {}
func (*CMsgGCCStrike15V2_MatchEndRewardDropsNotification) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{64}
}

func (m *CMsgGCCStrike15V2_MatchEndRewardDropsNotification) GetIteminfo() *CEconItemPreviewDataBlock {
	if m != nil {
		return m.Iteminfo
	}
	return nil
}

type CMsgItemAcknowledged struct {
	Iteminfo         *CEconItemPreviewDataBlock `protobuf:"bytes,1,opt,name=iteminfo" json:"iteminfo,omitempty"`
	XXX_unrecognized []byte                     `json:"-"`
}

func (m *CMsgItemAcknowledged) Reset()                    { *m = CMsgItemAcknowledged{} }
func (m *CMsgItemAcknowledged) String() string            { return proto.CompactTextString(m) }
func (*CMsgItemAcknowledged) ProtoMessage()               {}
func (*CMsgItemAcknowledged) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{65} }

func (m *CMsgItemAcknowledged) GetIteminfo() *CEconItemPreviewDataBlock {
	if m != nil {
		return m.Iteminfo
	}
	return nil
}

type CMsgGCCStrike15V2_Client2GCEconPreviewDataBlockRequest struct {
	ParamS           *uint64 `protobuf:"varint,1,opt,name=param_s" json:"param_s,omitempty"`
	ParamA           *uint64 `protobuf:"varint,2,opt,name=param_a" json:"param_a,omitempty"`
	ParamD           *uint64 `protobuf:"varint,3,opt,name=param_d" json:"param_d,omitempty"`
	ParamM           *uint64 `protobuf:"varint,4,opt,name=param_m" json:"param_m,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgGCCStrike15V2_Client2GCEconPreviewDataBlockRequest) Reset() {
	*m = CMsgGCCStrike15V2_Client2GCEconPreviewDataBlockRequest{}
}
func (m *CMsgGCCStrike15V2_Client2GCEconPreviewDataBlockRequest) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgGCCStrike15V2_Client2GCEconPreviewDataBlockRequest) ProtoMessage() {}
func (*CMsgGCCStrike15V2_Client2GCEconPreviewDataBlockRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{66}
}

func (m *CMsgGCCStrike15V2_Client2GCEconPreviewDataBlockRequest) GetParamS() uint64 {
	if m != nil && m.ParamS != nil {
		return *m.ParamS
	}
	return 0
}

func (m *CMsgGCCStrike15V2_Client2GCEconPreviewDataBlockRequest) GetParamA() uint64 {
	if m != nil && m.ParamA != nil {
		return *m.ParamA
	}
	return 0
}

func (m *CMsgGCCStrike15V2_Client2GCEconPreviewDataBlockRequest) GetParamD() uint64 {
	if m != nil && m.ParamD != nil {
		return *m.ParamD
	}
	return 0
}

func (m *CMsgGCCStrike15V2_Client2GCEconPreviewDataBlockRequest) GetParamM() uint64 {
	if m != nil && m.ParamM != nil {
		return *m.ParamM
	}
	return 0
}

type CMsgGCCStrike15V2_Client2GCEconPreviewDataBlockResponse struct {
	Iteminfo         *CEconItemPreviewDataBlock `protobuf:"bytes,1,opt,name=iteminfo" json:"iteminfo,omitempty"`
	XXX_unrecognized []byte                     `json:"-"`
}

func (m *CMsgGCCStrike15V2_Client2GCEconPreviewDataBlockResponse) Reset() {
	*m = CMsgGCCStrike15V2_Client2GCEconPreviewDataBlockResponse{}
}
func (m *CMsgGCCStrike15V2_Client2GCEconPreviewDataBlockResponse) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgGCCStrike15V2_Client2GCEconPreviewDataBlockResponse) ProtoMessage() {}
func (*CMsgGCCStrike15V2_Client2GCEconPreviewDataBlockResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{67}
}

func (m *CMsgGCCStrike15V2_Client2GCEconPreviewDataBlockResponse) GetIteminfo() *CEconItemPreviewDataBlock {
	if m != nil {
		return m.Iteminfo
	}
	return nil
}

type CMsgGCCStrike15V2_TournamentMatchRewardDropsNotification struct {
	MatchId          *uint64  `protobuf:"varint,1,opt,name=match_id" json:"match_id,omitempty"`
	Defindex         *uint32  `protobuf:"varint,2,opt,name=defindex" json:"defindex,omitempty"`
	Accountids       []uint32 `protobuf:"varint,3,rep,name=accountids" json:"accountids,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CMsgGCCStrike15V2_TournamentMatchRewardDropsNotification) Reset() {
	*m = CMsgGCCStrike15V2_TournamentMatchRewardDropsNotification{}
}
func (m *CMsgGCCStrike15V2_TournamentMatchRewardDropsNotification) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgGCCStrike15V2_TournamentMatchRewardDropsNotification) ProtoMessage() {}
func (*CMsgGCCStrike15V2_TournamentMatchRewardDropsNotification) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{68}
}

func (m *CMsgGCCStrike15V2_TournamentMatchRewardDropsNotification) GetMatchId() uint64 {
	if m != nil && m.MatchId != nil {
		return *m.MatchId
	}
	return 0
}

func (m *CMsgGCCStrike15V2_TournamentMatchRewardDropsNotification) GetDefindex() uint32 {
	if m != nil && m.Defindex != nil {
		return *m.Defindex
	}
	return 0
}

func (m *CMsgGCCStrike15V2_TournamentMatchRewardDropsNotification) GetAccountids() []uint32 {
	if m != nil {
		return m.Accountids
	}
	return nil
}

type CMsgGCCStrike15V2_MatchListRequestCurrentLiveGames struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMsgGCCStrike15V2_MatchListRequestCurrentLiveGames) Reset() {
	*m = CMsgGCCStrike15V2_MatchListRequestCurrentLiveGames{}
}
func (m *CMsgGCCStrike15V2_MatchListRequestCurrentLiveGames) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgGCCStrike15V2_MatchListRequestCurrentLiveGames) ProtoMessage() {}
func (*CMsgGCCStrike15V2_MatchListRequestCurrentLiveGames) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{69}
}

type CMsgGCCStrike15V2_MatchListRequestLiveGameForUser struct {
	Accountid        *uint32 `protobuf:"varint,1,opt,name=accountid" json:"accountid,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgGCCStrike15V2_MatchListRequestLiveGameForUser) Reset() {
	*m = CMsgGCCStrike15V2_MatchListRequestLiveGameForUser{}
}
func (m *CMsgGCCStrike15V2_MatchListRequestLiveGameForUser) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgGCCStrike15V2_MatchListRequestLiveGameForUser) ProtoMessage() {}
func (*CMsgGCCStrike15V2_MatchListRequestLiveGameForUser) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{70}
}

func (m *CMsgGCCStrike15V2_MatchListRequestLiveGameForUser) GetAccountid() uint32 {
	if m != nil && m.Accountid != nil {
		return *m.Accountid
	}
	return 0
}

type CMsgGCCStrike15V2_MatchListRequestRecentUserGames struct {
	Accountid        *uint32 `protobuf:"varint,1,opt,name=accountid" json:"accountid,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgGCCStrike15V2_MatchListRequestRecentUserGames) Reset() {
	*m = CMsgGCCStrike15V2_MatchListRequestRecentUserGames{}
}
func (m *CMsgGCCStrike15V2_MatchListRequestRecentUserGames) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgGCCStrike15V2_MatchListRequestRecentUserGames) ProtoMessage() {}
func (*CMsgGCCStrike15V2_MatchListRequestRecentUserGames) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{71}
}

func (m *CMsgGCCStrike15V2_MatchListRequestRecentUserGames) GetAccountid() uint32 {
	if m != nil && m.Accountid != nil {
		return *m.Accountid
	}
	return 0
}

type CMsgGCCStrike15V2_MatchListRequestTournamentGames struct {
	Eventid          *int32 `protobuf:"varint,1,opt,name=eventid" json:"eventid,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMsgGCCStrike15V2_MatchListRequestTournamentGames) Reset() {
	*m = CMsgGCCStrike15V2_MatchListRequestTournamentGames{}
}
func (m *CMsgGCCStrike15V2_MatchListRequestTournamentGames) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgGCCStrike15V2_MatchListRequestTournamentGames) ProtoMessage() {}
func (*CMsgGCCStrike15V2_MatchListRequestTournamentGames) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{72}
}

func (m *CMsgGCCStrike15V2_MatchListRequestTournamentGames) GetEventid() int32 {
	if m != nil && m.Eventid != nil {
		return *m.Eventid
	}
	return 0
}

type CMsgGCCStrike15V2_MatchListRequestFullGameInfo struct {
	Matchid          *uint64 `protobuf:"varint,1,opt,name=matchid" json:"matchid,omitempty"`
	Outcomeid        *uint64 `protobuf:"varint,2,opt,name=outcomeid" json:"outcomeid,omitempty"`
	Token            *uint32 `protobuf:"varint,3,opt,name=token" json:"token,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgGCCStrike15V2_MatchListRequestFullGameInfo) Reset() {
	*m = CMsgGCCStrike15V2_MatchListRequestFullGameInfo{}
}
func (m *CMsgGCCStrike15V2_MatchListRequestFullGameInfo) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgGCCStrike15V2_MatchListRequestFullGameInfo) ProtoMessage() {}
func (*CMsgGCCStrike15V2_MatchListRequestFullGameInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{73}
}

func (m *CMsgGCCStrike15V2_MatchListRequestFullGameInfo) GetMatchid() uint64 {
	if m != nil && m.Matchid != nil {
		return *m.Matchid
	}
	return 0
}

func (m *CMsgGCCStrike15V2_MatchListRequestFullGameInfo) GetOutcomeid() uint64 {
	if m != nil && m.Outcomeid != nil {
		return *m.Outcomeid
	}
	return 0
}

func (m *CMsgGCCStrike15V2_MatchListRequestFullGameInfo) GetToken() uint32 {
	if m != nil && m.Token != nil {
		return *m.Token
	}
	return 0
}

type CDataGCCStrike15V2_MatchInfo struct {
	Matchid            *uint64                                          `protobuf:"varint,1,opt,name=matchid" json:"matchid,omitempty"`
	Matchtime          *uint32                                          `protobuf:"varint,2,opt,name=matchtime" json:"matchtime,omitempty"`
	Watchablematchinfo *WatchableMatchInfo                              `protobuf:"bytes,3,opt,name=watchablematchinfo" json:"watchablematchinfo,omitempty"`
	RoundstatsLegacy   *CMsgGCCStrike15V2_MatchmakingServerRoundStats   `protobuf:"bytes,4,opt,name=roundstats_legacy" json:"roundstats_legacy,omitempty"`
	Roundstatsall      []*CMsgGCCStrike15V2_MatchmakingServerRoundStats `protobuf:"bytes,5,rep,name=roundstatsall" json:"roundstatsall,omitempty"`
	XXX_unrecognized   []byte                                           `json:"-"`
}

func (m *CDataGCCStrike15V2_MatchInfo) Reset()                    { *m = CDataGCCStrike15V2_MatchInfo{} }
func (m *CDataGCCStrike15V2_MatchInfo) String() string            { return proto.CompactTextString(m) }
func (*CDataGCCStrike15V2_MatchInfo) ProtoMessage()               {}
func (*CDataGCCStrike15V2_MatchInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{74} }

func (m *CDataGCCStrike15V2_MatchInfo) GetMatchid() uint64 {
	if m != nil && m.Matchid != nil {
		return *m.Matchid
	}
	return 0
}

func (m *CDataGCCStrike15V2_MatchInfo) GetMatchtime() uint32 {
	if m != nil && m.Matchtime != nil {
		return *m.Matchtime
	}
	return 0
}

func (m *CDataGCCStrike15V2_MatchInfo) GetWatchablematchinfo() *WatchableMatchInfo {
	if m != nil {
		return m.Watchablematchinfo
	}
	return nil
}

func (m *CDataGCCStrike15V2_MatchInfo) GetRoundstatsLegacy() *CMsgGCCStrike15V2_MatchmakingServerRoundStats {
	if m != nil {
		return m.RoundstatsLegacy
	}
	return nil
}

func (m *CDataGCCStrike15V2_MatchInfo) GetRoundstatsall() []*CMsgGCCStrike15V2_MatchmakingServerRoundStats {
	if m != nil {
		return m.Roundstatsall
	}
	return nil
}

type CDataGCCStrike15V2_TournamentGroupTeam struct {
	TeamId           *int32 `protobuf:"varint,1,opt,name=team_id" json:"team_id,omitempty"`
	Score            *int32 `protobuf:"varint,2,opt,name=score" json:"score,omitempty"`
	Correctpick      *bool  `protobuf:"varint,3,opt,name=correctpick" json:"correctpick,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CDataGCCStrike15V2_TournamentGroupTeam) Reset() {
	*m = CDataGCCStrike15V2_TournamentGroupTeam{}
}
func (m *CDataGCCStrike15V2_TournamentGroupTeam) String() string { return proto.CompactTextString(m) }
func (*CDataGCCStrike15V2_TournamentGroupTeam) ProtoMessage()    {}
func (*CDataGCCStrike15V2_TournamentGroupTeam) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{75}
}

func (m *CDataGCCStrike15V2_TournamentGroupTeam) GetTeamId() int32 {
	if m != nil && m.TeamId != nil {
		return *m.TeamId
	}
	return 0
}

func (m *CDataGCCStrike15V2_TournamentGroupTeam) GetScore() int32 {
	if m != nil && m.Score != nil {
		return *m.Score
	}
	return 0
}

func (m *CDataGCCStrike15V2_TournamentGroupTeam) GetCorrectpick() bool {
	if m != nil && m.Correctpick != nil {
		return *m.Correctpick
	}
	return false
}

type CDataGCCStrike15V2_TournamentGroup struct {
	Groupid           *uint32                                     `protobuf:"varint,1,opt,name=groupid" json:"groupid,omitempty"`
	Name              *string                                     `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Desc              *string                                     `protobuf:"bytes,3,opt,name=desc" json:"desc,omitempty"`
	Picks_Deprecated  *uint32                                     `protobuf:"varint,4,opt,name=picks__deprecated" json:"picks__deprecated,omitempty"`
	Teams             []*CDataGCCStrike15V2_TournamentGroupTeam   `protobuf:"bytes,5,rep,name=teams" json:"teams,omitempty"`
	StageIds          []int32                                     `protobuf:"varint,6,rep,name=stage_ids" json:"stage_ids,omitempty"`
	Picklockuntiltime *uint32                                     `protobuf:"varint,7,opt,name=picklockuntiltime" json:"picklockuntiltime,omitempty"`
	Pickableteams     *uint32                                     `protobuf:"varint,8,opt,name=pickableteams" json:"pickableteams,omitempty"`
	PointsPerPick     *uint32                                     `protobuf:"varint,9,opt,name=points_per_pick" json:"points_per_pick,omitempty"`
	Picks             []*CDataGCCStrike15V2_TournamentGroup_Picks `protobuf:"bytes,10,rep,name=picks" json:"picks,omitempty"`
	XXX_unrecognized  []byte                                      `json:"-"`
}

func (m *CDataGCCStrike15V2_TournamentGroup) Reset()         { *m = CDataGCCStrike15V2_TournamentGroup{} }
func (m *CDataGCCStrike15V2_TournamentGroup) String() string { return proto.CompactTextString(m) }
func (*CDataGCCStrike15V2_TournamentGroup) ProtoMessage()    {}
func (*CDataGCCStrike15V2_TournamentGroup) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{76}
}

func (m *CDataGCCStrike15V2_TournamentGroup) GetGroupid() uint32 {
	if m != nil && m.Groupid != nil {
		return *m.Groupid
	}
	return 0
}

func (m *CDataGCCStrike15V2_TournamentGroup) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *CDataGCCStrike15V2_TournamentGroup) GetDesc() string {
	if m != nil && m.Desc != nil {
		return *m.Desc
	}
	return ""
}

func (m *CDataGCCStrike15V2_TournamentGroup) GetPicks_Deprecated() uint32 {
	if m != nil && m.Picks_Deprecated != nil {
		return *m.Picks_Deprecated
	}
	return 0
}

func (m *CDataGCCStrike15V2_TournamentGroup) GetTeams() []*CDataGCCStrike15V2_TournamentGroupTeam {
	if m != nil {
		return m.Teams
	}
	return nil
}

func (m *CDataGCCStrike15V2_TournamentGroup) GetStageIds() []int32 {
	if m != nil {
		return m.StageIds
	}
	return nil
}

func (m *CDataGCCStrike15V2_TournamentGroup) GetPicklockuntiltime() uint32 {
	if m != nil && m.Picklockuntiltime != nil {
		return *m.Picklockuntiltime
	}
	return 0
}

func (m *CDataGCCStrike15V2_TournamentGroup) GetPickableteams() uint32 {
	if m != nil && m.Pickableteams != nil {
		return *m.Pickableteams
	}
	return 0
}

func (m *CDataGCCStrike15V2_TournamentGroup) GetPointsPerPick() uint32 {
	if m != nil && m.PointsPerPick != nil {
		return *m.PointsPerPick
	}
	return 0
}

func (m *CDataGCCStrike15V2_TournamentGroup) GetPicks() []*CDataGCCStrike15V2_TournamentGroup_Picks {
	if m != nil {
		return m.Picks
	}
	return nil
}

type CDataGCCStrike15V2_TournamentGroup_Picks struct {
	Pickids          []int32 `protobuf:"varint,1,rep,name=pickids" json:"pickids,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CDataGCCStrike15V2_TournamentGroup_Picks) Reset() {
	*m = CDataGCCStrike15V2_TournamentGroup_Picks{}
}
func (m *CDataGCCStrike15V2_TournamentGroup_Picks) String() string { return proto.CompactTextString(m) }
func (*CDataGCCStrike15V2_TournamentGroup_Picks) ProtoMessage()    {}
func (*CDataGCCStrike15V2_TournamentGroup_Picks) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{76, 0}
}

func (m *CDataGCCStrike15V2_TournamentGroup_Picks) GetPickids() []int32 {
	if m != nil {
		return m.Pickids
	}
	return nil
}

type CDataGCCStrike15V2_TournamentSection struct {
	Sectionid        *uint32                               `protobuf:"varint,1,opt,name=sectionid" json:"sectionid,omitempty"`
	Name             *string                               `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Desc             *string                               `protobuf:"bytes,3,opt,name=desc" json:"desc,omitempty"`
	Groups           []*CDataGCCStrike15V2_TournamentGroup `protobuf:"bytes,4,rep,name=groups" json:"groups,omitempty"`
	XXX_unrecognized []byte                                `json:"-"`
}

func (m *CDataGCCStrike15V2_TournamentSection) Reset()         { *m = CDataGCCStrike15V2_TournamentSection{} }
func (m *CDataGCCStrike15V2_TournamentSection) String() string { return proto.CompactTextString(m) }
func (*CDataGCCStrike15V2_TournamentSection) ProtoMessage()    {}
func (*CDataGCCStrike15V2_TournamentSection) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{77}
}

func (m *CDataGCCStrike15V2_TournamentSection) GetSectionid() uint32 {
	if m != nil && m.Sectionid != nil {
		return *m.Sectionid
	}
	return 0
}

func (m *CDataGCCStrike15V2_TournamentSection) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *CDataGCCStrike15V2_TournamentSection) GetDesc() string {
	if m != nil && m.Desc != nil {
		return *m.Desc
	}
	return ""
}

func (m *CDataGCCStrike15V2_TournamentSection) GetGroups() []*CDataGCCStrike15V2_TournamentGroup {
	if m != nil {
		return m.Groups
	}
	return nil
}

type CDataGCCStrike15V2_TournamentInfo struct {
	Sections         []*CDataGCCStrike15V2_TournamentSection `protobuf:"bytes,1,rep,name=sections" json:"sections,omitempty"`
	TournamentEvent  *TournamentEvent                        `protobuf:"bytes,2,opt,name=tournament_event" json:"tournament_event,omitempty"`
	TournamentTeams  []*TournamentTeam                       `protobuf:"bytes,3,rep,name=tournament_teams" json:"tournament_teams,omitempty"`
	XXX_unrecognized []byte                                  `json:"-"`
}

func (m *CDataGCCStrike15V2_TournamentInfo) Reset()         { *m = CDataGCCStrike15V2_TournamentInfo{} }
func (m *CDataGCCStrike15V2_TournamentInfo) String() string { return proto.CompactTextString(m) }
func (*CDataGCCStrike15V2_TournamentInfo) ProtoMessage()    {}
func (*CDataGCCStrike15V2_TournamentInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{78}
}

func (m *CDataGCCStrike15V2_TournamentInfo) GetSections() []*CDataGCCStrike15V2_TournamentSection {
	if m != nil {
		return m.Sections
	}
	return nil
}

func (m *CDataGCCStrike15V2_TournamentInfo) GetTournamentEvent() *TournamentEvent {
	if m != nil {
		return m.TournamentEvent
	}
	return nil
}

func (m *CDataGCCStrike15V2_TournamentInfo) GetTournamentTeams() []*TournamentTeam {
	if m != nil {
		return m.TournamentTeams
	}
	return nil
}

type CMsgGCCStrike15V2_MatchList struct {
	Msgrequestid     *uint32                            `protobuf:"varint,1,opt,name=msgrequestid" json:"msgrequestid,omitempty"`
	Accountid        *uint32                            `protobuf:"varint,2,opt,name=accountid" json:"accountid,omitempty"`
	Servertime       *uint32                            `protobuf:"varint,3,opt,name=servertime" json:"servertime,omitempty"`
	Matches          []*CDataGCCStrike15V2_MatchInfo    `protobuf:"bytes,4,rep,name=matches" json:"matches,omitempty"`
	Streams          []*TournamentTeam                  `protobuf:"bytes,5,rep,name=streams" json:"streams,omitempty"`
	Tournamentinfo   *CDataGCCStrike15V2_TournamentInfo `protobuf:"bytes,6,opt,name=tournamentinfo" json:"tournamentinfo,omitempty"`
	XXX_unrecognized []byte                             `json:"-"`
}

func (m *CMsgGCCStrike15V2_MatchList) Reset()                    { *m = CMsgGCCStrike15V2_MatchList{} }
func (m *CMsgGCCStrike15V2_MatchList) String() string            { return proto.CompactTextString(m) }
func (*CMsgGCCStrike15V2_MatchList) ProtoMessage()               {}
func (*CMsgGCCStrike15V2_MatchList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{79} }

func (m *CMsgGCCStrike15V2_MatchList) GetMsgrequestid() uint32 {
	if m != nil && m.Msgrequestid != nil {
		return *m.Msgrequestid
	}
	return 0
}

func (m *CMsgGCCStrike15V2_MatchList) GetAccountid() uint32 {
	if m != nil && m.Accountid != nil {
		return *m.Accountid
	}
	return 0
}

func (m *CMsgGCCStrike15V2_MatchList) GetServertime() uint32 {
	if m != nil && m.Servertime != nil {
		return *m.Servertime
	}
	return 0
}

func (m *CMsgGCCStrike15V2_MatchList) GetMatches() []*CDataGCCStrike15V2_MatchInfo {
	if m != nil {
		return m.Matches
	}
	return nil
}

func (m *CMsgGCCStrike15V2_MatchList) GetStreams() []*TournamentTeam {
	if m != nil {
		return m.Streams
	}
	return nil
}

func (m *CMsgGCCStrike15V2_MatchList) GetTournamentinfo() *CDataGCCStrike15V2_TournamentInfo {
	if m != nil {
		return m.Tournamentinfo
	}
	return nil
}

type CMsgGCCStrike15V2_Predictions struct {
	EventId             *uint32                                             `protobuf:"varint,1,opt,name=event_id" json:"event_id,omitempty"`
	GroupMatchTeamPicks []*CMsgGCCStrike15V2_Predictions_GroupMatchTeamPick `protobuf:"bytes,2,rep,name=group_match_team_picks" json:"group_match_team_picks,omitempty"`
	XXX_unrecognized    []byte                                              `json:"-"`
}

func (m *CMsgGCCStrike15V2_Predictions) Reset()                    { *m = CMsgGCCStrike15V2_Predictions{} }
func (m *CMsgGCCStrike15V2_Predictions) String() string            { return proto.CompactTextString(m) }
func (*CMsgGCCStrike15V2_Predictions) ProtoMessage()               {}
func (*CMsgGCCStrike15V2_Predictions) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{80} }

func (m *CMsgGCCStrike15V2_Predictions) GetEventId() uint32 {
	if m != nil && m.EventId != nil {
		return *m.EventId
	}
	return 0
}

func (m *CMsgGCCStrike15V2_Predictions) GetGroupMatchTeamPicks() []*CMsgGCCStrike15V2_Predictions_GroupMatchTeamPick {
	if m != nil {
		return m.GroupMatchTeamPicks
	}
	return nil
}

type CMsgGCCStrike15V2_Predictions_GroupMatchTeamPick struct {
	Sectionid        *int32  `protobuf:"varint,1,opt,name=sectionid" json:"sectionid,omitempty"`
	Groupid          *int32  `protobuf:"varint,2,opt,name=groupid" json:"groupid,omitempty"`
	Index            *int32  `protobuf:"varint,3,opt,name=index" json:"index,omitempty"`
	Teamid           *int32  `protobuf:"varint,4,opt,name=teamid" json:"teamid,omitempty"`
	Itemid           *uint64 `protobuf:"varint,5,opt,name=itemid" json:"itemid,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgGCCStrike15V2_Predictions_GroupMatchTeamPick) Reset() {
	*m = CMsgGCCStrike15V2_Predictions_GroupMatchTeamPick{}
}
func (m *CMsgGCCStrike15V2_Predictions_GroupMatchTeamPick) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgGCCStrike15V2_Predictions_GroupMatchTeamPick) ProtoMessage() {}
func (*CMsgGCCStrike15V2_Predictions_GroupMatchTeamPick) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{80, 0}
}

func (m *CMsgGCCStrike15V2_Predictions_GroupMatchTeamPick) GetSectionid() int32 {
	if m != nil && m.Sectionid != nil {
		return *m.Sectionid
	}
	return 0
}

func (m *CMsgGCCStrike15V2_Predictions_GroupMatchTeamPick) GetGroupid() int32 {
	if m != nil && m.Groupid != nil {
		return *m.Groupid
	}
	return 0
}

func (m *CMsgGCCStrike15V2_Predictions_GroupMatchTeamPick) GetIndex() int32 {
	if m != nil && m.Index != nil {
		return *m.Index
	}
	return 0
}

func (m *CMsgGCCStrike15V2_Predictions_GroupMatchTeamPick) GetTeamid() int32 {
	if m != nil && m.Teamid != nil {
		return *m.Teamid
	}
	return 0
}

func (m *CMsgGCCStrike15V2_Predictions_GroupMatchTeamPick) GetItemid() uint64 {
	if m != nil && m.Itemid != nil {
		return *m.Itemid
	}
	return 0
}

type CMsgGCCStrike15V2_Fantasy struct {
	EventId          *uint32                                  `protobuf:"varint,1,opt,name=event_id" json:"event_id,omitempty"`
	Teams            []*CMsgGCCStrike15V2_Fantasy_FantasyTeam `protobuf:"bytes,2,rep,name=teams" json:"teams,omitempty"`
	XXX_unrecognized []byte                                   `json:"-"`
}

func (m *CMsgGCCStrike15V2_Fantasy) Reset()                    { *m = CMsgGCCStrike15V2_Fantasy{} }
func (m *CMsgGCCStrike15V2_Fantasy) String() string            { return proto.CompactTextString(m) }
func (*CMsgGCCStrike15V2_Fantasy) ProtoMessage()               {}
func (*CMsgGCCStrike15V2_Fantasy) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{81} }

func (m *CMsgGCCStrike15V2_Fantasy) GetEventId() uint32 {
	if m != nil && m.EventId != nil {
		return *m.EventId
	}
	return 0
}

func (m *CMsgGCCStrike15V2_Fantasy) GetTeams() []*CMsgGCCStrike15V2_Fantasy_FantasyTeam {
	if m != nil {
		return m.Teams
	}
	return nil
}

type CMsgGCCStrike15V2_Fantasy_FantasySlot struct {
	Type             *int32  `protobuf:"varint,1,opt,name=type" json:"type,omitempty"`
	Pick             *int32  `protobuf:"varint,2,opt,name=pick" json:"pick,omitempty"`
	Itemid           *uint64 `protobuf:"varint,3,opt,name=itemid" json:"itemid,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgGCCStrike15V2_Fantasy_FantasySlot) Reset()         { *m = CMsgGCCStrike15V2_Fantasy_FantasySlot{} }
func (m *CMsgGCCStrike15V2_Fantasy_FantasySlot) String() string { return proto.CompactTextString(m) }
func (*CMsgGCCStrike15V2_Fantasy_FantasySlot) ProtoMessage()    {}
func (*CMsgGCCStrike15V2_Fantasy_FantasySlot) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{81, 0}
}

func (m *CMsgGCCStrike15V2_Fantasy_FantasySlot) GetType() int32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

func (m *CMsgGCCStrike15V2_Fantasy_FantasySlot) GetPick() int32 {
	if m != nil && m.Pick != nil {
		return *m.Pick
	}
	return 0
}

func (m *CMsgGCCStrike15V2_Fantasy_FantasySlot) GetItemid() uint64 {
	if m != nil && m.Itemid != nil {
		return *m.Itemid
	}
	return 0
}

type CMsgGCCStrike15V2_Fantasy_FantasyTeam struct {
	Sectionid        *int32                                   `protobuf:"varint,1,opt,name=sectionid" json:"sectionid,omitempty"`
	Slots            []*CMsgGCCStrike15V2_Fantasy_FantasySlot `protobuf:"bytes,2,rep,name=slots" json:"slots,omitempty"`
	XXX_unrecognized []byte                                   `json:"-"`
}

func (m *CMsgGCCStrike15V2_Fantasy_FantasyTeam) Reset()         { *m = CMsgGCCStrike15V2_Fantasy_FantasyTeam{} }
func (m *CMsgGCCStrike15V2_Fantasy_FantasyTeam) String() string { return proto.CompactTextString(m) }
func (*CMsgGCCStrike15V2_Fantasy_FantasyTeam) ProtoMessage()    {}
func (*CMsgGCCStrike15V2_Fantasy_FantasyTeam) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{81, 1}
}

func (m *CMsgGCCStrike15V2_Fantasy_FantasyTeam) GetSectionid() int32 {
	if m != nil && m.Sectionid != nil {
		return *m.Sectionid
	}
	return 0
}

func (m *CMsgGCCStrike15V2_Fantasy_FantasyTeam) GetSlots() []*CMsgGCCStrike15V2_Fantasy_FantasySlot {
	if m != nil {
		return m.Slots
	}
	return nil
}

type CAttribute_String struct {
	Value            *string `protobuf:"bytes,1,opt,name=value" json:"value,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CAttribute_String) Reset()                    { *m = CAttribute_String{} }
func (m *CAttribute_String) String() string            { return proto.CompactTextString(m) }
func (*CAttribute_String) ProtoMessage()               {}
func (*CAttribute_String) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{82} }

func (m *CAttribute_String) GetValue() string {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return ""
}

type CMsgGCToGCReloadVersions struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMsgGCToGCReloadVersions) Reset()                    { *m = CMsgGCToGCReloadVersions{} }
func (m *CMsgGCToGCReloadVersions) String() string            { return proto.CompactTextString(m) }
func (*CMsgGCToGCReloadVersions) ProtoMessage()               {}
func (*CMsgGCToGCReloadVersions) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{83} }

type CMsgCStrike15Welcome struct {
	StoreItemHash           *uint32 `protobuf:"varint,5,opt,name=store_item_hash" json:"store_item_hash,omitempty"`
	Timeplayedconsecutively *uint32 `protobuf:"varint,6,opt,name=timeplayedconsecutively" json:"timeplayedconsecutively,omitempty"`
	TimeFirstPlayed         *uint32 `protobuf:"varint,10,opt,name=time_first_played" json:"time_first_played,omitempty"`
	LastTimePlayed          *uint32 `protobuf:"varint,12,opt,name=last_time_played" json:"last_time_played,omitempty"`
	LastIpAddress           *uint32 `protobuf:"varint,13,opt,name=last_ip_address" json:"last_ip_address,omitempty"`
	Gscookieid              *uint64 `protobuf:"varint,18,opt,name=gscookieid" json:"gscookieid,omitempty"`
	Uniqueid                *uint64 `protobuf:"varint,19,opt,name=uniqueid" json:"uniqueid,omitempty"`
	XXX_unrecognized        []byte  `json:"-"`
}

func (m *CMsgCStrike15Welcome) Reset()                    { *m = CMsgCStrike15Welcome{} }
func (m *CMsgCStrike15Welcome) String() string            { return proto.CompactTextString(m) }
func (*CMsgCStrike15Welcome) ProtoMessage()               {}
func (*CMsgCStrike15Welcome) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{84} }

func (m *CMsgCStrike15Welcome) GetStoreItemHash() uint32 {
	if m != nil && m.StoreItemHash != nil {
		return *m.StoreItemHash
	}
	return 0
}

func (m *CMsgCStrike15Welcome) GetTimeplayedconsecutively() uint32 {
	if m != nil && m.Timeplayedconsecutively != nil {
		return *m.Timeplayedconsecutively
	}
	return 0
}

func (m *CMsgCStrike15Welcome) GetTimeFirstPlayed() uint32 {
	if m != nil && m.TimeFirstPlayed != nil {
		return *m.TimeFirstPlayed
	}
	return 0
}

func (m *CMsgCStrike15Welcome) GetLastTimePlayed() uint32 {
	if m != nil && m.LastTimePlayed != nil {
		return *m.LastTimePlayed
	}
	return 0
}

func (m *CMsgCStrike15Welcome) GetLastIpAddress() uint32 {
	if m != nil && m.LastIpAddress != nil {
		return *m.LastIpAddress
	}
	return 0
}

func (m *CMsgCStrike15Welcome) GetGscookieid() uint64 {
	if m != nil && m.Gscookieid != nil {
		return *m.Gscookieid
	}
	return 0
}

func (m *CMsgCStrike15Welcome) GetUniqueid() uint64 {
	if m != nil && m.Uniqueid != nil {
		return *m.Uniqueid
	}
	return 0
}

type CMsgGCCStrike15V2_ClientVarValueNotificationInfo struct {
	ValueName        *string  `protobuf:"bytes,1,opt,name=value_name" json:"value_name,omitempty"`
	ValueInt         *int32   `protobuf:"varint,2,opt,name=value_int" json:"value_int,omitempty"`
	ServerAddr       *uint32  `protobuf:"varint,3,opt,name=server_addr" json:"server_addr,omitempty"`
	ServerPort       *uint32  `protobuf:"varint,4,opt,name=server_port" json:"server_port,omitempty"`
	ChokedBlocks     []string `protobuf:"bytes,5,rep,name=choked_blocks" json:"choked_blocks,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CMsgGCCStrike15V2_ClientVarValueNotificationInfo) Reset() {
	*m = CMsgGCCStrike15V2_ClientVarValueNotificationInfo{}
}
func (m *CMsgGCCStrike15V2_ClientVarValueNotificationInfo) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgGCCStrike15V2_ClientVarValueNotificationInfo) ProtoMessage() {}
func (*CMsgGCCStrike15V2_ClientVarValueNotificationInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{85}
}

func (m *CMsgGCCStrike15V2_ClientVarValueNotificationInfo) GetValueName() string {
	if m != nil && m.ValueName != nil {
		return *m.ValueName
	}
	return ""
}

func (m *CMsgGCCStrike15V2_ClientVarValueNotificationInfo) GetValueInt() int32 {
	if m != nil && m.ValueInt != nil {
		return *m.ValueInt
	}
	return 0
}

func (m *CMsgGCCStrike15V2_ClientVarValueNotificationInfo) GetServerAddr() uint32 {
	if m != nil && m.ServerAddr != nil {
		return *m.ServerAddr
	}
	return 0
}

func (m *CMsgGCCStrike15V2_ClientVarValueNotificationInfo) GetServerPort() uint32 {
	if m != nil && m.ServerPort != nil {
		return *m.ServerPort
	}
	return 0
}

func (m *CMsgGCCStrike15V2_ClientVarValueNotificationInfo) GetChokedBlocks() []string {
	if m != nil {
		return m.ChokedBlocks
	}
	return nil
}

type CMsgGCCStrike15V2_ServerVarValueNotificationInfo struct {
	Accountid        *uint32  `protobuf:"varint,1,opt,name=accountid" json:"accountid,omitempty"`
	Viewangles       []uint32 `protobuf:"varint,2,rep,name=viewangles" json:"viewangles,omitempty"`
	Type             *uint32  `protobuf:"varint,3,opt,name=type" json:"type,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CMsgGCCStrike15V2_ServerVarValueNotificationInfo) Reset() {
	*m = CMsgGCCStrike15V2_ServerVarValueNotificationInfo{}
}
func (m *CMsgGCCStrike15V2_ServerVarValueNotificationInfo) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgGCCStrike15V2_ServerVarValueNotificationInfo) ProtoMessage() {}
func (*CMsgGCCStrike15V2_ServerVarValueNotificationInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{86}
}

func (m *CMsgGCCStrike15V2_ServerVarValueNotificationInfo) GetAccountid() uint32 {
	if m != nil && m.Accountid != nil {
		return *m.Accountid
	}
	return 0
}

func (m *CMsgGCCStrike15V2_ServerVarValueNotificationInfo) GetViewangles() []uint32 {
	if m != nil {
		return m.Viewangles
	}
	return nil
}

func (m *CMsgGCCStrike15V2_ServerVarValueNotificationInfo) GetType() uint32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

type CMsgGCCStrike15V2_GiftsLeaderboardRequest struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMsgGCCStrike15V2_GiftsLeaderboardRequest) Reset() {
	*m = CMsgGCCStrike15V2_GiftsLeaderboardRequest{}
}
func (m *CMsgGCCStrike15V2_GiftsLeaderboardRequest) String() string { return proto.CompactTextString(m) }
func (*CMsgGCCStrike15V2_GiftsLeaderboardRequest) ProtoMessage()    {}
func (*CMsgGCCStrike15V2_GiftsLeaderboardRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{87}
}

type CMsgGCCStrike15V2_GiftsLeaderboardResponse struct {
	Servertime        *uint32                                                            `protobuf:"varint,1,opt,name=servertime" json:"servertime,omitempty"`
	TimePeriodSeconds *uint32                                                            `protobuf:"varint,2,opt,name=time_period_seconds" json:"time_period_seconds,omitempty"`
	TotalGiftsGiven   *uint32                                                            `protobuf:"varint,3,opt,name=total_gifts_given" json:"total_gifts_given,omitempty"`
	TotalGivers       *uint32                                                            `protobuf:"varint,4,opt,name=total_givers" json:"total_givers,omitempty"`
	Entries           []*CMsgGCCStrike15V2_GiftsLeaderboardResponse_GiftLeaderboardEntry `protobuf:"bytes,5,rep,name=entries" json:"entries,omitempty"`
	XXX_unrecognized  []byte                                                             `json:"-"`
}

func (m *CMsgGCCStrike15V2_GiftsLeaderboardResponse) Reset() {
	*m = CMsgGCCStrike15V2_GiftsLeaderboardResponse{}
}
func (m *CMsgGCCStrike15V2_GiftsLeaderboardResponse) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgGCCStrike15V2_GiftsLeaderboardResponse) ProtoMessage() {}
func (*CMsgGCCStrike15V2_GiftsLeaderboardResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{88}
}

func (m *CMsgGCCStrike15V2_GiftsLeaderboardResponse) GetServertime() uint32 {
	if m != nil && m.Servertime != nil {
		return *m.Servertime
	}
	return 0
}

func (m *CMsgGCCStrike15V2_GiftsLeaderboardResponse) GetTimePeriodSeconds() uint32 {
	if m != nil && m.TimePeriodSeconds != nil {
		return *m.TimePeriodSeconds
	}
	return 0
}

func (m *CMsgGCCStrike15V2_GiftsLeaderboardResponse) GetTotalGiftsGiven() uint32 {
	if m != nil && m.TotalGiftsGiven != nil {
		return *m.TotalGiftsGiven
	}
	return 0
}

func (m *CMsgGCCStrike15V2_GiftsLeaderboardResponse) GetTotalGivers() uint32 {
	if m != nil && m.TotalGivers != nil {
		return *m.TotalGivers
	}
	return 0
}

func (m *CMsgGCCStrike15V2_GiftsLeaderboardResponse) GetEntries() []*CMsgGCCStrike15V2_GiftsLeaderboardResponse_GiftLeaderboardEntry {
	if m != nil {
		return m.Entries
	}
	return nil
}

type CMsgGCCStrike15V2_GiftsLeaderboardResponse_GiftLeaderboardEntry struct {
	Accountid        *uint32 `protobuf:"varint,1,opt,name=accountid" json:"accountid,omitempty"`
	Gifts            *uint32 `protobuf:"varint,2,opt,name=gifts" json:"gifts,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgGCCStrike15V2_GiftsLeaderboardResponse_GiftLeaderboardEntry) Reset() {
	*m = CMsgGCCStrike15V2_GiftsLeaderboardResponse_GiftLeaderboardEntry{}
}
func (m *CMsgGCCStrike15V2_GiftsLeaderboardResponse_GiftLeaderboardEntry) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgGCCStrike15V2_GiftsLeaderboardResponse_GiftLeaderboardEntry) ProtoMessage() {}
func (*CMsgGCCStrike15V2_GiftsLeaderboardResponse_GiftLeaderboardEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{88, 0}
}

func (m *CMsgGCCStrike15V2_GiftsLeaderboardResponse_GiftLeaderboardEntry) GetAccountid() uint32 {
	if m != nil && m.Accountid != nil {
		return *m.Accountid
	}
	return 0
}

func (m *CMsgGCCStrike15V2_GiftsLeaderboardResponse_GiftLeaderboardEntry) GetGifts() uint32 {
	if m != nil && m.Gifts != nil {
		return *m.Gifts
	}
	return 0
}

type CMsgGCCStrike15V2_ClientSubmitSurveyVote struct {
	SurveyId         *uint32 `protobuf:"varint,1,opt,name=survey_id" json:"survey_id,omitempty"`
	Vote             *uint32 `protobuf:"varint,2,opt,name=vote" json:"vote,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgGCCStrike15V2_ClientSubmitSurveyVote) Reset() {
	*m = CMsgGCCStrike15V2_ClientSubmitSurveyVote{}
}
func (m *CMsgGCCStrike15V2_ClientSubmitSurveyVote) String() string { return proto.CompactTextString(m) }
func (*CMsgGCCStrike15V2_ClientSubmitSurveyVote) ProtoMessage()    {}
func (*CMsgGCCStrike15V2_ClientSubmitSurveyVote) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{89}
}

func (m *CMsgGCCStrike15V2_ClientSubmitSurveyVote) GetSurveyId() uint32 {
	if m != nil && m.SurveyId != nil {
		return *m.SurveyId
	}
	return 0
}

func (m *CMsgGCCStrike15V2_ClientSubmitSurveyVote) GetVote() uint32 {
	if m != nil && m.Vote != nil {
		return *m.Vote
	}
	return 0
}

type CMsgGCCStrike15V2_Server2GCClientValidate struct {
	Accountid        *uint32 `protobuf:"varint,1,opt,name=accountid" json:"accountid,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgGCCStrike15V2_Server2GCClientValidate) Reset() {
	*m = CMsgGCCStrike15V2_Server2GCClientValidate{}
}
func (m *CMsgGCCStrike15V2_Server2GCClientValidate) String() string { return proto.CompactTextString(m) }
func (*CMsgGCCStrike15V2_Server2GCClientValidate) ProtoMessage()    {}
func (*CMsgGCCStrike15V2_Server2GCClientValidate) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{90}
}

func (m *CMsgGCCStrike15V2_Server2GCClientValidate) GetAccountid() uint32 {
	if m != nil && m.Accountid != nil {
		return *m.Accountid
	}
	return 0
}

type CMsgGCCStrike15V2_Server2GCPureServerValidationFailure struct {
	Accountid        *uint32 `protobuf:"varint,1,opt,name=accountid" json:"accountid,omitempty"`
	Path             *string `protobuf:"bytes,2,opt,name=path" json:"path,omitempty"`
	File             *string `protobuf:"bytes,3,opt,name=file" json:"file,omitempty"`
	Crc              *uint32 `protobuf:"varint,4,opt,name=crc" json:"crc,omitempty"`
	Hash             *int32  `protobuf:"varint,5,opt,name=hash" json:"hash,omitempty"`
	Len              *int32  `protobuf:"varint,6,opt,name=len" json:"len,omitempty"`
	PackNumber       *int32  `protobuf:"varint,7,opt,name=pack_number" json:"pack_number,omitempty"`
	PackFileId       *int32  `protobuf:"varint,8,opt,name=pack_file_id" json:"pack_file_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgGCCStrike15V2_Server2GCPureServerValidationFailure) Reset() {
	*m = CMsgGCCStrike15V2_Server2GCPureServerValidationFailure{}
}
func (m *CMsgGCCStrike15V2_Server2GCPureServerValidationFailure) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgGCCStrike15V2_Server2GCPureServerValidationFailure) ProtoMessage() {}
func (*CMsgGCCStrike15V2_Server2GCPureServerValidationFailure) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{91}
}

func (m *CMsgGCCStrike15V2_Server2GCPureServerValidationFailure) GetAccountid() uint32 {
	if m != nil && m.Accountid != nil {
		return *m.Accountid
	}
	return 0
}

func (m *CMsgGCCStrike15V2_Server2GCPureServerValidationFailure) GetPath() string {
	if m != nil && m.Path != nil {
		return *m.Path
	}
	return ""
}

func (m *CMsgGCCStrike15V2_Server2GCPureServerValidationFailure) GetFile() string {
	if m != nil && m.File != nil {
		return *m.File
	}
	return ""
}

func (m *CMsgGCCStrike15V2_Server2GCPureServerValidationFailure) GetCrc() uint32 {
	if m != nil && m.Crc != nil {
		return *m.Crc
	}
	return 0
}

func (m *CMsgGCCStrike15V2_Server2GCPureServerValidationFailure) GetHash() int32 {
	if m != nil && m.Hash != nil {
		return *m.Hash
	}
	return 0
}

func (m *CMsgGCCStrike15V2_Server2GCPureServerValidationFailure) GetLen() int32 {
	if m != nil && m.Len != nil {
		return *m.Len
	}
	return 0
}

func (m *CMsgGCCStrike15V2_Server2GCPureServerValidationFailure) GetPackNumber() int32 {
	if m != nil && m.PackNumber != nil {
		return *m.PackNumber
	}
	return 0
}

func (m *CMsgGCCStrike15V2_Server2GCPureServerValidationFailure) GetPackFileId() int32 {
	if m != nil && m.PackFileId != nil {
		return *m.PackFileId
	}
	return 0
}

type CMsgGCCStrike15V2_GC2ClientTournamentInfo struct {
	Eventid          *uint32  `protobuf:"varint,1,opt,name=eventid" json:"eventid,omitempty"`
	Stageid          *uint32  `protobuf:"varint,2,opt,name=stageid" json:"stageid,omitempty"`
	GameType         *uint32  `protobuf:"varint,3,opt,name=game_type" json:"game_type,omitempty"`
	Teamids          []uint32 `protobuf:"varint,4,rep,name=teamids" json:"teamids,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CMsgGCCStrike15V2_GC2ClientTournamentInfo) Reset() {
	*m = CMsgGCCStrike15V2_GC2ClientTournamentInfo{}
}
func (m *CMsgGCCStrike15V2_GC2ClientTournamentInfo) String() string { return proto.CompactTextString(m) }
func (*CMsgGCCStrike15V2_GC2ClientTournamentInfo) ProtoMessage()    {}
func (*CMsgGCCStrike15V2_GC2ClientTournamentInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{92}
}

func (m *CMsgGCCStrike15V2_GC2ClientTournamentInfo) GetEventid() uint32 {
	if m != nil && m.Eventid != nil {
		return *m.Eventid
	}
	return 0
}

func (m *CMsgGCCStrike15V2_GC2ClientTournamentInfo) GetStageid() uint32 {
	if m != nil && m.Stageid != nil {
		return *m.Stageid
	}
	return 0
}

func (m *CMsgGCCStrike15V2_GC2ClientTournamentInfo) GetGameType() uint32 {
	if m != nil && m.GameType != nil {
		return *m.GameType
	}
	return 0
}

func (m *CMsgGCCStrike15V2_GC2ClientTournamentInfo) GetTeamids() []uint32 {
	if m != nil {
		return m.Teamids
	}
	return nil
}

type CSOEconCoupon struct {
	Entryid          *uint32 `protobuf:"varint,1,opt,name=entryid" json:"entryid,omitempty"`
	Defidx           *uint32 `protobuf:"varint,2,opt,name=defidx" json:"defidx,omitempty"`
	ExpirationDate   *uint32 `protobuf:"fixed32,3,opt,name=expiration_date" json:"expiration_date,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CSOEconCoupon) Reset()                    { *m = CSOEconCoupon{} }
func (m *CSOEconCoupon) String() string            { return proto.CompactTextString(m) }
func (*CSOEconCoupon) ProtoMessage()               {}
func (*CSOEconCoupon) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{93} }

func (m *CSOEconCoupon) GetEntryid() uint32 {
	if m != nil && m.Entryid != nil {
		return *m.Entryid
	}
	return 0
}

func (m *CSOEconCoupon) GetDefidx() uint32 {
	if m != nil && m.Defidx != nil {
		return *m.Defidx
	}
	return 0
}

func (m *CSOEconCoupon) GetExpirationDate() uint32 {
	if m != nil && m.ExpirationDate != nil {
		return *m.ExpirationDate
	}
	return 0
}

type CSOQuestProgress struct {
	Questid          *uint32 `protobuf:"varint,1,opt,name=questid" json:"questid,omitempty"`
	PointsRemaining  *uint32 `protobuf:"varint,2,opt,name=points_remaining" json:"points_remaining,omitempty"`
	BonusPoints      *uint32 `protobuf:"varint,3,opt,name=bonus_points" json:"bonus_points,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CSOQuestProgress) Reset()                    { *m = CSOQuestProgress{} }
func (m *CSOQuestProgress) String() string            { return proto.CompactTextString(m) }
func (*CSOQuestProgress) ProtoMessage()               {}
func (*CSOQuestProgress) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{94} }

func (m *CSOQuestProgress) GetQuestid() uint32 {
	if m != nil && m.Questid != nil {
		return *m.Questid
	}
	return 0
}

func (m *CSOQuestProgress) GetPointsRemaining() uint32 {
	if m != nil && m.PointsRemaining != nil {
		return *m.PointsRemaining
	}
	return 0
}

func (m *CSOQuestProgress) GetBonusPoints() uint32 {
	if m != nil && m.BonusPoints != nil {
		return *m.BonusPoints
	}
	return 0
}

type CSOPersonaDataPublic struct {
	PlayerLevel      *int32                  `protobuf:"varint,1,opt,name=player_level" json:"player_level,omitempty"`
	Commendation     *PlayerCommendationInfo `protobuf:"bytes,2,opt,name=commendation" json:"commendation,omitempty"`
	XXX_unrecognized []byte                  `json:"-"`
}

func (m *CSOPersonaDataPublic) Reset()                    { *m = CSOPersonaDataPublic{} }
func (m *CSOPersonaDataPublic) String() string            { return proto.CompactTextString(m) }
func (*CSOPersonaDataPublic) ProtoMessage()               {}
func (*CSOPersonaDataPublic) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{95} }

func (m *CSOPersonaDataPublic) GetPlayerLevel() int32 {
	if m != nil && m.PlayerLevel != nil {
		return *m.PlayerLevel
	}
	return 0
}

func (m *CSOPersonaDataPublic) GetCommendation() *PlayerCommendationInfo {
	if m != nil {
		return m.Commendation
	}
	return nil
}

type CMsgGC_GlobalGame_Subscribe struct {
	Ticket           *uint64 `protobuf:"varint,1,opt,name=ticket" json:"ticket,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgGC_GlobalGame_Subscribe) Reset()                    { *m = CMsgGC_GlobalGame_Subscribe{} }
func (m *CMsgGC_GlobalGame_Subscribe) String() string            { return proto.CompactTextString(m) }
func (*CMsgGC_GlobalGame_Subscribe) ProtoMessage()               {}
func (*CMsgGC_GlobalGame_Subscribe) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{96} }

func (m *CMsgGC_GlobalGame_Subscribe) GetTicket() uint64 {
	if m != nil && m.Ticket != nil {
		return *m.Ticket
	}
	return 0
}

type CMsgGC_GlobalGame_Unsubscribe struct {
	Timeleft         *int32 `protobuf:"varint,1,opt,name=timeleft" json:"timeleft,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMsgGC_GlobalGame_Unsubscribe) Reset()                    { *m = CMsgGC_GlobalGame_Unsubscribe{} }
func (m *CMsgGC_GlobalGame_Unsubscribe) String() string            { return proto.CompactTextString(m) }
func (*CMsgGC_GlobalGame_Unsubscribe) ProtoMessage()               {}
func (*CMsgGC_GlobalGame_Unsubscribe) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{97} }

func (m *CMsgGC_GlobalGame_Unsubscribe) GetTimeleft() int32 {
	if m != nil && m.Timeleft != nil {
		return *m.Timeleft
	}
	return 0
}

type CMsgGC_GlobalGame_Play struct {
	Ticket           *uint64 `protobuf:"varint,1,opt,name=ticket" json:"ticket,omitempty"`
	Gametimems       *uint32 `protobuf:"varint,2,opt,name=gametimems" json:"gametimems,omitempty"`
	Msperpoint       *uint32 `protobuf:"varint,3,opt,name=msperpoint" json:"msperpoint,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgGC_GlobalGame_Play) Reset()                    { *m = CMsgGC_GlobalGame_Play{} }
func (m *CMsgGC_GlobalGame_Play) String() string            { return proto.CompactTextString(m) }
func (*CMsgGC_GlobalGame_Play) ProtoMessage()               {}
func (*CMsgGC_GlobalGame_Play) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{98} }

func (m *CMsgGC_GlobalGame_Play) GetTicket() uint64 {
	if m != nil && m.Ticket != nil {
		return *m.Ticket
	}
	return 0
}

func (m *CMsgGC_GlobalGame_Play) GetGametimems() uint32 {
	if m != nil && m.Gametimems != nil {
		return *m.Gametimems
	}
	return 0
}

func (m *CMsgGC_GlobalGame_Play) GetMsperpoint() uint32 {
	if m != nil && m.Msperpoint != nil {
		return *m.Msperpoint
	}
	return 0
}

type CMsgGCCStrike15V2_AcknowledgePenalty struct {
	Acknowledged     *int32 `protobuf:"varint,1,opt,name=acknowledged" json:"acknowledged,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMsgGCCStrike15V2_AcknowledgePenalty) Reset()         { *m = CMsgGCCStrike15V2_AcknowledgePenalty{} }
func (m *CMsgGCCStrike15V2_AcknowledgePenalty) String() string { return proto.CompactTextString(m) }
func (*CMsgGCCStrike15V2_AcknowledgePenalty) ProtoMessage()    {}
func (*CMsgGCCStrike15V2_AcknowledgePenalty) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{99}
}

func (m *CMsgGCCStrike15V2_AcknowledgePenalty) GetAcknowledged() int32 {
	if m != nil && m.Acknowledged != nil {
		return *m.Acknowledged
	}
	return 0
}

type CMsgGCCStrike15V2_Client2GCRequestPrestigeCoin struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMsgGCCStrike15V2_Client2GCRequestPrestigeCoin) Reset() {
	*m = CMsgGCCStrike15V2_Client2GCRequestPrestigeCoin{}
}
func (m *CMsgGCCStrike15V2_Client2GCRequestPrestigeCoin) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgGCCStrike15V2_Client2GCRequestPrestigeCoin) ProtoMessage() {}
func (*CMsgGCCStrike15V2_Client2GCRequestPrestigeCoin) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{100}
}

type CMsgGCCStrike15V2_Client2GCStreamUnlock struct {
	Ticket           *uint64 `protobuf:"varint,1,opt,name=ticket" json:"ticket,omitempty"`
	Os               *int32  `protobuf:"varint,2,opt,name=os" json:"os,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgGCCStrike15V2_Client2GCStreamUnlock) Reset() {
	*m = CMsgGCCStrike15V2_Client2GCStreamUnlock{}
}
func (m *CMsgGCCStrike15V2_Client2GCStreamUnlock) String() string { return proto.CompactTextString(m) }
func (*CMsgGCCStrike15V2_Client2GCStreamUnlock) ProtoMessage()    {}
func (*CMsgGCCStrike15V2_Client2GCStreamUnlock) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{101}
}

func (m *CMsgGCCStrike15V2_Client2GCStreamUnlock) GetTicket() uint64 {
	if m != nil && m.Ticket != nil {
		return *m.Ticket
	}
	return 0
}

func (m *CMsgGCCStrike15V2_Client2GCStreamUnlock) GetOs() int32 {
	if m != nil && m.Os != nil {
		return *m.Os
	}
	return 0
}

func init() {
	proto.RegisterType((*GameServerPing)(nil), "GameServerPing")
	proto.RegisterType((*DetailedSearchStatistic)(nil), "DetailedSearchStatistic")
	proto.RegisterType((*TournamentPlayer)(nil), "TournamentPlayer")
	proto.RegisterType((*TournamentTeam)(nil), "TournamentTeam")
	proto.RegisterType((*TournamentEvent)(nil), "TournamentEvent")
	proto.RegisterType((*GlobalStatistics)(nil), "GlobalStatistics")
	proto.RegisterType((*OperationalStatisticDescription)(nil), "OperationalStatisticDescription")
	proto.RegisterType((*OperationalStatisticElement)(nil), "OperationalStatisticElement")
	proto.RegisterType((*OperationalStatisticsPacket)(nil), "OperationalStatisticsPacket")
	proto.RegisterType((*PlayerRankingInfo)(nil), "PlayerRankingInfo")
	proto.RegisterType((*PlayerCommendationInfo)(nil), "PlayerCommendationInfo")
	proto.RegisterType((*PlayerMedalsInfo)(nil), "PlayerMedalsInfo")
	proto.RegisterType((*AccountActivity)(nil), "AccountActivity")
	proto.RegisterType((*TournamentMatchSetup)(nil), "TournamentMatchSetup")
	proto.RegisterType((*ServerHltvInfo)(nil), "ServerHltvInfo")
	proto.RegisterType((*IpAddressMask)(nil), "IpAddressMask")
	proto.RegisterType((*XpProgressData)(nil), "XpProgressData")
	proto.RegisterType((*MatchEndItemUpdates)(nil), "MatchEndItemUpdates")
	proto.RegisterType((*PlayerQuestData)(nil), "PlayerQuestData")
	proto.RegisterType((*PlayerQuestData_QuestItemData)(nil), "PlayerQuestData.QuestItemData")
	proto.RegisterType((*CMsgGC_ServerQuestUpdateData)(nil), "CMsgGC_ServerQuestUpdateData")
	proto.RegisterType((*CMsgGCCStrike15V2_MatchmakingGCOperationalStats)(nil), "CMsgGCCStrike15_v2_MatchmakingGCOperationalStats")
	proto.RegisterType((*CMsgGCCStrike15V2_MatchmakingGC2ServerConfirm)(nil), "CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirm")
	proto.RegisterType((*CMsgGCCStrike15V2_GC2ServerReservationUpdate)(nil), "CMsgGCCStrike15_v2_GC2ServerReservationUpdate")
	proto.RegisterType((*CMsgGCCStrike15V2_MatchmakingStart)(nil), "CMsgGCCStrike15_v2_MatchmakingStart")
	proto.RegisterType((*CMsgGCCStrike15V2_MatchmakingStop)(nil), "CMsgGCCStrike15_v2_MatchmakingStop")
	proto.RegisterType((*CMsgGCCStrike15V2_MatchmakingClient2ServerPing)(nil), "CMsgGCCStrike15_v2_MatchmakingClient2ServerPing")
	proto.RegisterType((*CMsgGCCStrike15V2_MatchmakingGC2ClientUpdate)(nil), "CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate")
	proto.RegisterType((*CMsgGCCStrike15V2_MatchmakingGC2ClientUpdate_Note)(nil), "CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate.Note")
	proto.RegisterType((*CDataGCCStrike15V2_TournamentMatchDraft)(nil), "CDataGCCStrike15_v2_TournamentMatchDraft")
	proto.RegisterType((*CDataGCCStrike15V2_TournamentMatchDraft_Entry)(nil), "CDataGCCStrike15_v2_TournamentMatchDraft.Entry")
	proto.RegisterType((*CPreMatchInfoData)(nil), "CPreMatchInfoData")
	proto.RegisterType((*CPreMatchInfoData_TeamStats)(nil), "CPreMatchInfoData.TeamStats")
	proto.RegisterType((*CMsgGCCStrike15V2_MatchmakingGC2ServerReserve)(nil), "CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve")
	proto.RegisterType((*CMsgGCCStrike15V2_MatchmakingServerReservationResponse)(nil), "CMsgGCCStrike15_v2_MatchmakingServerReservationResponse")
	proto.RegisterType((*CMsgGCCStrike15V2_MatchmakingGC2ClientReserve)(nil), "CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve")
	proto.RegisterType((*CMsgGCCStrike15V2_MatchmakingServerRoundStats)(nil), "CMsgGCCStrike15_v2_MatchmakingServerRoundStats")
	proto.RegisterType((*CMsgGCCStrike15V2_MatchmakingServerRoundStats_DropInfo)(nil), "CMsgGCCStrike15_v2_MatchmakingServerRoundStats.DropInfo")
	proto.RegisterType((*CMsgGCCStrike15V2_MatchmakingServerMatchEnd)(nil), "CMsgGCCStrike15_v2_MatchmakingServerMatchEnd")
	proto.RegisterType((*CMsgGCCStrike15V2_MatchmakingClient2GCHello)(nil), "CMsgGCCStrike15_v2_MatchmakingClient2GCHello")
	proto.RegisterType((*CMsgGCCStrike15V2_MatchmakingGC2ClientHello)(nil), "CMsgGCCStrike15_v2_MatchmakingGC2ClientHello")
	proto.RegisterType((*CMsgGCCStrike15V2_AccountPrivacySettings)(nil), "CMsgGCCStrike15_v2_AccountPrivacySettings")
	proto.RegisterType((*CMsgGCCStrike15V2_AccountPrivacySettings_Setting)(nil), "CMsgGCCStrike15_v2_AccountPrivacySettings.Setting")
	proto.RegisterType((*CMsgGCCStrike15V2_MatchmakingGC2ClientAbandon)(nil), "CMsgGCCStrike15_v2_MatchmakingGC2ClientAbandon")
	proto.RegisterType((*CMsgGCCStrike15V2_MatchmakingServer2GCKick)(nil), "CMsgGCCStrike15_v2_MatchmakingServer2GCKick")
	proto.RegisterType((*CDataGCCStrike15V2_MatchmakingLockedInMatch)(nil), "CDataGCCStrike15_v2_MatchmakingLockedInMatch")
	proto.RegisterType((*CMsgGCCStrike15V2_MatchmakingGC2ServerRankUpdate)(nil), "CMsgGCCStrike15_v2_MatchmakingGC2ServerRankUpdate")
	proto.RegisterType((*CMsgGCCStrike15V2_MatchmakingOperator2GCBlogUpdate)(nil), "CMsgGCCStrike15_v2_MatchmakingOperator2GCBlogUpdate")
	proto.RegisterType((*CMsgGCCStrike15V2_ServerNotificationForUserPenalty)(nil), "CMsgGCCStrike15_v2_ServerNotificationForUserPenalty")
	proto.RegisterType((*CMsgGCCStrike15V2_ClientReportPlayer)(nil), "CMsgGCCStrike15_v2_ClientReportPlayer")
	proto.RegisterType((*CMsgGCCStrike15V2_ClientCommendPlayer)(nil), "CMsgGCCStrike15_v2_ClientCommendPlayer")
	proto.RegisterType((*CMsgGCCStrike15V2_ClientReportServer)(nil), "CMsgGCCStrike15_v2_ClientReportServer")
	proto.RegisterType((*CMsgGCCStrike15V2_ClientReportResponse)(nil), "CMsgGCCStrike15_v2_ClientReportResponse")
	proto.RegisterType((*CMsgGCCStrike15V2_ClientRequestWatchInfoFriends)(nil), "CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends")
	proto.RegisterType((*WatchableMatchInfo)(nil), "WatchableMatchInfo")
	proto.RegisterType((*CMsgGCCStrike15V2_ClientRequestJoinFriendData)(nil), "CMsgGCCStrike15_v2_ClientRequestJoinFriendData")
	proto.RegisterType((*CMsgGCCStrike15V2_ClientRequestJoinServerData)(nil), "CMsgGCCStrike15_v2_ClientRequestJoinServerData")
	proto.RegisterType((*CMsgGCCstrike15V2_ClientRequestNewMission)(nil), "CMsgGCCstrike15_v2_ClientRequestNewMission")
	proto.RegisterType((*CMsgGCCstrike15V2_GC2ServerNotifyXPRewarded)(nil), "CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded")
	proto.RegisterType((*CMsgGCCStrike15V2_WatchInfoUsers)(nil), "CMsgGCCStrike15_v2_WatchInfoUsers")
	proto.RegisterType((*CMsgGCCStrike15V2_ClientRequestPlayersProfile)(nil), "CMsgGCCStrike15_v2_ClientRequestPlayersProfile")
	proto.RegisterType((*CMsgGCCStrike15V2_PlayersProfile)(nil), "CMsgGCCStrike15_v2_PlayersProfile")
	proto.RegisterType((*CMsgGCCStrike15V2_PlayerOverwatchCaseUpdate)(nil), "CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate")
	proto.RegisterType((*CMsgGCCStrike15V2_PlayerOverwatchCaseAssignment)(nil), "CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment")
	proto.RegisterType((*CMsgGCCStrike15V2_PlayerOverwatchCaseStatus)(nil), "CMsgGCCStrike15_v2_PlayerOverwatchCaseStatus")
	proto.RegisterType((*CClientHeaderOverwatchEvidence)(nil), "CClientHeaderOverwatchEvidence")
	proto.RegisterType((*CMsgGCCStrike15V2_GC2ClientTextMsg)(nil), "CMsgGCCStrike15_v2_GC2ClientTextMsg")
	proto.RegisterType((*CMsgGCCStrike15V2_Client2GCTextMsg)(nil), "CMsgGCCStrike15_v2_Client2GCTextMsg")
	proto.RegisterType((*CMsgGCCStrike15V2_MatchEndRunRewardDrops)(nil), "CMsgGCCStrike15_v2_MatchEndRunRewardDrops")
	proto.RegisterType((*CEconItemPreviewDataBlock)(nil), "CEconItemPreviewDataBlock")
	proto.RegisterType((*CEconItemPreviewDataBlock_Sticker)(nil), "CEconItemPreviewDataBlock.Sticker")
	proto.RegisterType((*CMsgGCCStrike15V2_MatchEndRewardDropsNotification)(nil), "CMsgGCCStrike15_v2_MatchEndRewardDropsNotification")
	proto.RegisterType((*CMsgItemAcknowledged)(nil), "CMsgItemAcknowledged")
	proto.RegisterType((*CMsgGCCStrike15V2_Client2GCEconPreviewDataBlockRequest)(nil), "CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockRequest")
	proto.RegisterType((*CMsgGCCStrike15V2_Client2GCEconPreviewDataBlockResponse)(nil), "CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockResponse")
	proto.RegisterType((*CMsgGCCStrike15V2_TournamentMatchRewardDropsNotification)(nil), "CMsgGCCStrike15_v2_TournamentMatchRewardDropsNotification")
	proto.RegisterType((*CMsgGCCStrike15V2_MatchListRequestCurrentLiveGames)(nil), "CMsgGCCStrike15_v2_MatchListRequestCurrentLiveGames")
	proto.RegisterType((*CMsgGCCStrike15V2_MatchListRequestLiveGameForUser)(nil), "CMsgGCCStrike15_v2_MatchListRequestLiveGameForUser")
	proto.RegisterType((*CMsgGCCStrike15V2_MatchListRequestRecentUserGames)(nil), "CMsgGCCStrike15_v2_MatchListRequestRecentUserGames")
	proto.RegisterType((*CMsgGCCStrike15V2_MatchListRequestTournamentGames)(nil), "CMsgGCCStrike15_v2_MatchListRequestTournamentGames")
	proto.RegisterType((*CMsgGCCStrike15V2_MatchListRequestFullGameInfo)(nil), "CMsgGCCStrike15_v2_MatchListRequestFullGameInfo")
	proto.RegisterType((*CDataGCCStrike15V2_MatchInfo)(nil), "CDataGCCStrike15_v2_MatchInfo")
	proto.RegisterType((*CDataGCCStrike15V2_TournamentGroupTeam)(nil), "CDataGCCStrike15_v2_TournamentGroupTeam")
	proto.RegisterType((*CDataGCCStrike15V2_TournamentGroup)(nil), "CDataGCCStrike15_v2_TournamentGroup")
	proto.RegisterType((*CDataGCCStrike15V2_TournamentGroup_Picks)(nil), "CDataGCCStrike15_v2_TournamentGroup.Picks")
	proto.RegisterType((*CDataGCCStrike15V2_TournamentSection)(nil), "CDataGCCStrike15_v2_TournamentSection")
	proto.RegisterType((*CDataGCCStrike15V2_TournamentInfo)(nil), "CDataGCCStrike15_v2_TournamentInfo")
	proto.RegisterType((*CMsgGCCStrike15V2_MatchList)(nil), "CMsgGCCStrike15_v2_MatchList")
	proto.RegisterType((*CMsgGCCStrike15V2_Predictions)(nil), "CMsgGCCStrike15_v2_Predictions")
	proto.RegisterType((*CMsgGCCStrike15V2_Predictions_GroupMatchTeamPick)(nil), "CMsgGCCStrike15_v2_Predictions.GroupMatchTeamPick")
	proto.RegisterType((*CMsgGCCStrike15V2_Fantasy)(nil), "CMsgGCCStrike15_v2_Fantasy")
	proto.RegisterType((*CMsgGCCStrike15V2_Fantasy_FantasySlot)(nil), "CMsgGCCStrike15_v2_Fantasy.FantasySlot")
	proto.RegisterType((*CMsgGCCStrike15V2_Fantasy_FantasyTeam)(nil), "CMsgGCCStrike15_v2_Fantasy.FantasyTeam")
	proto.RegisterType((*CAttribute_String)(nil), "CAttribute_String")
	proto.RegisterType((*CMsgGCToGCReloadVersions)(nil), "CMsgGCToGCReloadVersions")
	proto.RegisterType((*CMsgCStrike15Welcome)(nil), "CMsgCStrike15Welcome")
	proto.RegisterType((*CMsgGCCStrike15V2_ClientVarValueNotificationInfo)(nil), "CMsgGCCStrike15_v2_ClientVarValueNotificationInfo")
	proto.RegisterType((*CMsgGCCStrike15V2_ServerVarValueNotificationInfo)(nil), "CMsgGCCStrike15_v2_ServerVarValueNotificationInfo")
	proto.RegisterType((*CMsgGCCStrike15V2_GiftsLeaderboardRequest)(nil), "CMsgGCCStrike15_v2_GiftsLeaderboardRequest")
	proto.RegisterType((*CMsgGCCStrike15V2_GiftsLeaderboardResponse)(nil), "CMsgGCCStrike15_v2_GiftsLeaderboardResponse")
	proto.RegisterType((*CMsgGCCStrike15V2_GiftsLeaderboardResponse_GiftLeaderboardEntry)(nil), "CMsgGCCStrike15_v2_GiftsLeaderboardResponse.GiftLeaderboardEntry")
	proto.RegisterType((*CMsgGCCStrike15V2_ClientSubmitSurveyVote)(nil), "CMsgGCCStrike15_v2_ClientSubmitSurveyVote")
	proto.RegisterType((*CMsgGCCStrike15V2_Server2GCClientValidate)(nil), "CMsgGCCStrike15_v2_Server2GCClientValidate")
	proto.RegisterType((*CMsgGCCStrike15V2_Server2GCPureServerValidationFailure)(nil), "CMsgGCCStrike15_v2_Server2GCPureServerValidationFailure")
	proto.RegisterType((*CMsgGCCStrike15V2_GC2ClientTournamentInfo)(nil), "CMsgGCCStrike15_v2_GC2ClientTournamentInfo")
	proto.RegisterType((*CSOEconCoupon)(nil), "CSOEconCoupon")
	proto.RegisterType((*CSOQuestProgress)(nil), "CSOQuestProgress")
	proto.RegisterType((*CSOPersonaDataPublic)(nil), "CSOPersonaDataPublic")
	proto.RegisterType((*CMsgGC_GlobalGame_Subscribe)(nil), "CMsgGC_GlobalGame_Subscribe")
	proto.RegisterType((*CMsgGC_GlobalGame_Unsubscribe)(nil), "CMsgGC_GlobalGame_Unsubscribe")
	proto.RegisterType((*CMsgGC_GlobalGame_Play)(nil), "CMsgGC_GlobalGame_Play")
	proto.RegisterType((*CMsgGCCStrike15V2_AcknowledgePenalty)(nil), "CMsgGCCStrike15_v2_AcknowledgePenalty")
	proto.RegisterType((*CMsgGCCStrike15V2_Client2GCRequestPrestigeCoin)(nil), "CMsgGCCStrike15_v2_Client2GCRequestPrestigeCoin")
	proto.RegisterType((*CMsgGCCStrike15V2_Client2GCStreamUnlock)(nil), "CMsgGCCStrike15_v2_Client2GCStreamUnlock")
	proto.RegisterEnum("ECsgoGCMsg", ECsgoGCMsg_name, ECsgoGCMsg_value)
}

var fileDescriptor0 = []byte{
	// 6483 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xbc, 0x7b, 0xeb, 0x93, 0x1c, 0xd7,
	0x55, 0xf8, 0x6f, 0x66, 0x77, 0xf6, 0x71, 0x77, 0x57, 0xdb, 0x6a, 0xbd, 0xd6, 0x6b, 0xeb, 0xd5,
	0x72, 0x6c, 0x59, 0x96, 0x46, 0xd6, 0xca, 0x4a, 0xe4, 0x24, 0xbf, 0x38, 0xf2, 0x4a, 0x1a, 0x3b,
	0x96, 0xec, 0x45, 0x6b, 0x39, 0x86, 0x54, 0xd1, 0xf4, 0x76, 0xdf, 0x9d, 0xed, 0x6c, 0x4f, 0x77,
	0xa7, 0xbb, 0x67, 0x1f, 0x1f, 0x42, 0xe5, 0x13, 0xc5, 0x87, 0x84, 0x10, 0x5e, 0x21, 0x2f, 0xde,
	0x95, 0x90, 0x0a, 0x21, 0x09, 0x90, 0x14, 0x10, 0x20, 0x06, 0x42, 0x78, 0x24, 0x06, 0xe2, 0x40,
	0x80, 0x4f, 0xfc, 0x01, 0x14, 0x45, 0x15, 0x7c, 0xe4, 0x03, 0x9c, 0x73, 0xee, 0xbd, 0xdd, 0x3d,
	0x33, 0xb7, 0x67, 0x66, 0x05, 0xc5, 0x17, 0x69, 0xf6, 0xf4, 0x7d, 0x9c, 0x7b, 0xee, 0x79, 0x9f,
	0x73, 0xd9, 0xb2, 0x9b, 0x66, 0x89, 0xbf, 0xcd, 0xaf, 0x5c, 0xb3, 0xdb, 0x6e, 0x87, 0xa7, 0xa9,
	0xd3, 0xe6, 0x69, 0x33, 0x4e, 0xa2, 0x2c, 0x5a, 0x3e, 0x92, 0x66, 0xdc, 0xe9, 0xf4, 0x02, 0xad,
	0x0d, 0x76, 0xa8, 0xe5, 0x74, 0xf8, 0x3a, 0x4f, 0x76, 0x78, 0xb2, 0xe6, 0x87, 0x6d, 0xf3, 0x18,
	0x5b, 0x68, 0x03, 0x24, 0x25, 0x88, 0xed, 0x7b, 0x4b, 0xb5, 0x33, 0xb5, 0xf3, 0x93, 0xe6, 0x3c,
	0x9b, 0x8c, 0xe1, 0xf3, 0x52, 0x1d, 0xfe, 0x6a, 0x98, 0x8c, 0xd5, 0xfd, 0x78, 0x69, 0x02, 0x7e,
	0x2f, 0xd0, 0x97, 0x28, 0xc9, 0x96, 0x26, 0xe9, 0xaf, 0xc3, 0x6c, 0xd6, 0x0f, 0xd3, 0xcc, 0x09,
	0x5d, 0x9e, 0x2e, 0x35, 0x10, 0x64, 0xfd, 0x08, 0x3b, 0x71, 0x93, 0x67, 0x8e, 0x1f, 0x70, 0x6f,
	0x9d, 0x3b, 0x89, 0xbb, 0xb5, 0x9e, 0x39, 0x99, 0x9f, 0x66, 0xbe, 0x8b, 0xa3, 0x71, 0x33, 0x3b,
	0xdb, 0x8f, 0x39, 0x6d, 0xb4, 0x60, 0x9e, 0x60, 0x8b, 0x29, 0x8d, 0xb2, 0x33, 0x1f, 0xbe, 0x38,
	0x3b, 0x62, 0xcf, 0x05, 0xf3, 0x21, 0x76, 0x38, 0x0e, 0x9c, 0x7d, 0x9e, 0xa4, 0xb6, 0x18, 0x80,
	0xe8, 0xd0, 0xa6, 0xd6, 0xe7, 0x6a, 0xcc, 0x78, 0x25, 0xea, 0x26, 0x21, 0xac, 0x15, 0x66, 0x6b,
	0x34, 0xca, 0x04, 0x24, 0x1d, 0xd7, 0x8d, 0xba, 0x61, 0xa6, 0x4e, 0xb1, 0x60, 0x1e, 0x61, 0x73,
	0x62, 0x0d, 0x3b, 0xf4, 0xdd, 0x6d, 0x5a, 0x78, 0xb6, 0x0c, 0x84, 0xf9, 0x74, 0xaa, 0x59, 0x9c,
	0x2d, 0x81, 0x5e, 0xb4, 0x21, 0xcf, 0x56, 0x0c, 0xdc, 0x0c, 0x9c, 0x36, 0x9d, 0x6e, 0x16, 0xf1,
	0x95, 0xc0, 0x20, 0x72, 0xe1, 0x5c, 0x51, 0xb8, 0x34, 0xd5, 0xb7, 0xac, 0xc7, 0x53, 0x77, 0x69,
	0x1a, 0x81, 0xd6, 0x07, 0xd9, 0xa1, 0x02, 0xd1, 0x57, 0xe0, 0x3e, 0xcc, 0x45, 0x36, 0x8d, 0xf7,
	0xa2, 0x70, 0x6c, 0x98, 0x06, 0x9b, 0x21, 0x40, 0xe6, 0xb4, 0x25, 0x82, 0x40, 0x25, 0x82, 0xd0,
	0xae, 0x13, 0x3d, 0x20, 0xc2, 0x78, 0x92, 0x40, 0x16, 0x9b, 0x96, 0xf4, 0x01, 0xcc, 0x26, 0xce,
	0xcf, 0xad, 0x1c, 0x6e, 0xf6, 0xd3, 0xc4, 0xfa, 0xe7, 0x1a, 0x5b, 0x2c, 0x80, 0xb7, 0x76, 0xe0,
	0x1f, 0xdc, 0x8f, 0xe3, 0x8f, 0x02, 0x03, 0x58, 0x5c, 0x40, 0x0a, 0x14, 0x80, 0x1c, 0x02, 0x54,
	0x22, 0xd1, 0x12, 0x33, 0xe4, 0x30, 0xbc, 0x28, 0xb8, 0xf3, 0x9c, 0x09, 0x8e, 0xb3, 0x43, 0xa5,
	0x2f, 0x3c, 0xf4, 0x04, 0x27, 0x98, 0x47, 0xd9, 0xbc, 0x80, 0xc7, 0xdd, 0x8d, 0xc0, 0x77, 0x89,
	0x50, 0x8d, 0x62, 0x34, 0x2c, 0xd1, 0xe6, 0x88, 0xc6, 0x34, 0xc1, 0xf3, 0xf5, 0x05, 0x9c, 0x76,
	0x9e, 0xa1, 0x9d, 0x81, 0x15, 0x1c, 0x37, 0xf3, 0x77, 0x60, 0x57, 0xee, 0x22, 0xc9, 0x71, 0xd2,
	0x2c, 0xb1, 0xc2, 0x47, 0x27, 0x98, 0xd1, 0x0a, 0xa2, 0x0d, 0x27, 0xc8, 0xb9, 0x2c, 0xc5, 0x1d,
	0x14, 0xeb, 0x44, 0x61, 0xe0, 0x87, 0x8a, 0xd7, 0x00, 0x2e, 0xf8, 0x3c, 0x87, 0x0f, 0x61, 0xb5,
	0x09, 0xf5, 0x49, 0x4d, 0x71, 0x76, 0x80, 0xa7, 0x9d, 0x8d, 0x80, 0xcb, 0x53, 0x03, 0x27, 0x44,
	0x61, 0x3b, 0x82, 0xb1, 0x76, 0xc7, 0xc9, 0xdc, 0x2d, 0x25, 0x00, 0x3a, 0x96, 0x9e, 0xa2, 0x0f,
	0x57, 0x71, 0x31, 0xfa, 0x90, 0xe6, 0xc8, 0xc2, 0xe1, 0xf1, 0xf2, 0x96, 0x9a, 0x55, 0x32, 0x03,
	0x02, 0xda, 0x71, 0xfc, 0xd0, 0x8e, 0xa3, 0x34, 0xb3, 0xbb, 0x49, 0x20, 0x69, 0x72, 0x8a, 0x1d,
	0x4f, 0xf8, 0x07, 0xba, 0x7e, 0xc2, 0x3d, 0xdb, 0x89, 0x63, 0xdf, 0xb3, 0x11, 0x49, 0x64, 0x47,
	0x22, 0x8c, 0xb9, 0xcc, 0xcc, 0x38, 0xf1, 0x41, 0x2a, 0xb7, 0x38, 0xcf, 0xf2, 0x6f, 0x8c, 0xbe,
	0xc1, 0xdc, 0x6c, 0xd7, 0xcf, 0x08, 0x8f, 0x04, 0xd8, 0x2a, 0xcd, 0xbf, 0xcf, 0xd1, 0xf7, 0xb3,
	0xec, 0x21, 0x49, 0xef, 0x2c, 0x67, 0x1e, 0x9b, 0xee, 0x06, 0xe8, 0x3e, 0x4f, 0x43, 0xe0, 0xb2,
	0xd4, 0x95, 0x74, 0x81, 0x3c, 0xfb, 0x78, 0x23, 0x0b, 0x74, 0x23, 0xef, 0x62, 0xa7, 0x5f, 0x8e,
	0x79, 0x42, 0xa2, 0x51, 0xba, 0x95, 0x9b, 0x20, 0x14, 0x89, 0x1f, 0x23, 0x14, 0x55, 0x08, 0xdd,
	0x6e, 0x8d, 0x4e, 0xb2, 0xc0, 0x1a, 0xbe, 0xb7, 0xcd, 0xf7, 0xc5, 0x65, 0x58, 0xef, 0x64, 0x0f,
	0xeb, 0xe6, 0xdf, 0x0a, 0x38, 0xa2, 0x51, 0x8c, 0x16, 0x57, 0x7a, 0x88, 0x4d, 0xed, 0x38, 0x41,
	0x17, 0x68, 0x5f, 0x07, 0x3a, 0x36, 0xac, 0x44, 0x3f, 0x3b, 0x5d, 0x73, 0xdc, 0x6d, 0x4e, 0xcc,
	0x1f, 0xd3, 0xaf, 0x9c, 0xf9, 0x41, 0x6c, 0x3b, 0x29, 0xde, 0x13, 0x5c, 0x49, 0x27, 0x96, 0xfa,
	0xee, 0x62, 0xbe, 0xea, 0x04, 0xdd, 0xce, 0x23, 0xcd, 0x21, 0x28, 0x59, 0xef, 0x63, 0x87, 0x85,
	0xbc, 0xdd, 0x73, 0xc2, 0x6d, 0x60, 0x87, 0x17, 0xc2, 0xcd, 0x48, 0xab, 0x8e, 0x40, 0xf6, 0x13,
	0x18, 0x82, 0x80, 0xba, 0xd2, 0xa5, 0xbb, 0xa0, 0x3e, 0x25, 0xaf, 0x01, 0x2a, 0xf4, 0xd9, 0xdd,
	0x72, 0xc2, 0xb6, 0xe0, 0xb2, 0xba, 0xf5, 0x1a, 0x3b, 0x2e, 0x16, 0x5f, 0x8d, 0x40, 0x99, 0x87,
	0x1e, 0x21, 0x41, 0x3b, 0x80, 0x74, 0xb9, 0x1d, 0xcf, 0xde, 0x4c, 0x7c, 0x00, 0x07, 0x8a, 0x20,
	0x12, 0x0a, 0xda, 0x42, 0xb0, 0xb1, 0xd8, 0x08, 0xb0, 0x41, 0x68, 0xc0, 0x1d, 0x8f, 0x27, 0x52,
	0x8b, 0xbe, 0x0e, 0x5a, 0x54, 0x2c, 0x7d, 0x97, 0x7b, 0x4e, 0x90, 0x2a, 0xb4, 0x3b, 0xf8, 0x17,
	0x2e, 0xd0, 0x29, 0x96, 0x14, 0x30, 0x37, 0xea, 0x6c, 0x38, 0x99, 0x5c, 0x32, 0x87, 0xee, 0x72,
	0x27, 0x06, 0xd6, 0x99, 0xe8, 0x85, 0xb6, 0x49, 0x28, 0xa5, 0xa8, 0xe4, 0xab, 0x3a, 0x49, 0x47,
	0x49, 0xc9, 0x23, 0xec, 0xa8, 0xe7, 0xa7, 0x28, 0x77, 0xb6, 0x9f, 0x71, 0xe0, 0x41, 0x8f, 0x6f,
	0xfa, 0xde, 0x1e, 0xc9, 0xc3, 0x82, 0xf9, 0x28, 0x7b, 0x64, 0x93, 0x3b, 0x59, 0x17, 0xd9, 0xbb,
	0x3c, 0x4c, 0x8d, 0x9a, 0x91, 0xbc, 0xb6, 0x78, 0x43, 0x10, 0xf9, 0x06, 0x32, 0xa3, 0x9f, 0xed,
	0xe3, 0x0d, 0x3b, 0xf2, 0xb7, 0x44, 0x1f, 0x88, 0xdc, 0x89, 0x3c, 0x25, 0xeb, 0x73, 0x6c, 0xa2,
	0xe3, 0x48, 0x5b, 0x66, 0xb5, 0xd9, 0xd1, 0x42, 0x3d, 0xde, 0x45, 0x21, 0x5e, 0xe7, 0x59, 0x37,
	0xd6, 0xe8, 0x48, 0x38, 0x81, 0x54, 0xdb, 0xb6, 0x9b, 0x49, 0x2e, 0x51, 0x4a, 0x19, 0x60, 0x19,
	0x2d, 0xa8, 0xd3, 0x6d, 0x48, 0x80, 0x86, 0xf5, 0xfa, 0x04, 0x3b, 0x24, 0x8c, 0xee, 0xf3, 0x41,
	0xb6, 0x43, 0x94, 0x86, 0xdb, 0xce, 0x76, 0xec, 0xae, 0x17, 0xdb, 0x64, 0x4e, 0x73, 0x52, 0x03,
	0x70, 0x17, 0x31, 0xb1, 0x95, 0x48, 0x4c, 0x92, 0x89, 0xd8, 0xb1, 0xd3, 0x20, 0xca, 0x14, 0xab,
	0x20, 0x3a, 0x3b, 0xb6, 0x1b, 0xc0, 0xd5, 0x03, 0x6c, 0xb2, 0x04, 0x03, 0x3b, 0xbf, 0xe7, 0xe7,
	0xaa, 0x08, 0xad, 0xcd, 0x0e, 0xa9, 0x21, 0xa9, 0x82, 0x7a, 0x2c, 0x30, 0x11, 0x51, 0x79, 0x00,
	0xa0, 0xc4, 0xe2, 0x76, 0x12, 0x75, 0x63, 0x52, 0x20, 0xb3, 0xb8, 0xa9, 0x02, 0x93, 0xda, 0x20,
	0x35, 0x0c, 0x8b, 0x75, 0x1c, 0x70, 0x2c, 0x12, 0x9b, 0xbc, 0x0b, 0x38, 0xdf, 0x1c, 0x61, 0x08,
	0xe7, 0x86, 0x4f, 0x68, 0x11, 0x03, 0x89, 0x67, 0xae, 0x26, 0x72, 0xb8, 0xc2, 0x76, 0x61, 0xe0,
	0x8b, 0xc2, 0xf9, 0x90, 0xd2, 0xd2, 0xf0, 0x25, 0xe1, 0x78, 0xe5, 0x62, 0xad, 0xc5, 0xd2, 0x0c,
	0x01, 0x57, 0x6b, 0x19, 0x03, 0x5f, 0xd4, 0x5a, 0x87, 0x07, 0xbe, 0x38, 0x9e, 0x97, 0x80, 0x37,
	0xb4, 0x64, 0xaa, 0x53, 0x17, 0x73, 0xf0, 0x02, 0x8e, 0x0c, 0x4c, 0x50, 0x47, 0x3c, 0x8a, 0x47,
	0x04, 0x41, 0x5c, 0x78, 0x21, 0xbe, 0x21, 0xd6, 0xb8, 0xeb, 0xa4, 0xdb, 0xe6, 0x2c, 0xab, 0x39,
	0xf2, 0xda, 0xe0, 0xe7, 0x86, 0xe4, 0x2f, 0xf8, 0xe9, 0xca, 0x4b, 0x82, 0x9f, 0x9e, 0xbc, 0x1b,
	0xe0, 0xc1, 0x0d, 0x3f, 0x53, 0xb7, 0x02, 0x3a, 0x2c, 0x8b, 0xb6, 0xb9, 0xf0, 0x1c, 0x16, 0xac,
	0xeb, 0xec, 0xd0, 0x6b, 0xf1, 0x5a, 0x12, 0xb5, 0x71, 0xe9, 0x9b, 0x4e, 0xe6, 0xe0, 0x2d, 0xed,
	0x21, 0x5f, 0xf8, 0x78, 0xc6, 0xdc, 0x95, 0x01, 0x10, 0x78, 0x1c, 0xbc, 0x1d, 0x25, 0x82, 0x31,
	0x1a, 0x96, 0xcd, 0x8e, 0x10, 0xd7, 0xde, 0x0a, 0xbd, 0x17, 0x40, 0x38, 0xee, 0xc7, 0xa0, 0x1e,
	0x78, 0x8a, 0xb7, 0x4e, 0xb2, 0x92, 0x7b, 0x73, 0x70, 0x2a, 0x02, 0x38, 0x59, 0x96, 0x28, 0x09,
	0x12, 0xe8, 0x9e, 0x64, 0xc7, 0xca, 0x5f, 0x82, 0xcc, 0xb1, 0x49, 0xf3, 0x49, 0x01, 0x79, 0xb3,
	0xce, 0x16, 0x85, 0x8e, 0xf8, 0x01, 0xd0, 0x86, 0x19, 0x21, 0x07, 0x96, 0xe5, 0x03, 0xf8, 0x07,
	0x30, 0xc1, 0x80, 0x86, 0x7b, 0x1b, 0x5b, 0xa4, 0x6f, 0x52, 0x56, 0x61, 0x38, 0xe9, 0xe5, 0xb9,
	0x95, 0x53, 0xcd, 0xbe, 0x65, 0x9a, 0xf4, 0x0b, 0xb1, 0xa6, 0x45, 0x9f, 0x60, 0x06, 0x9e, 0x58,
	0x12, 0x41, 0xcc, 0x14, 0xba, 0x77, 0xb1, 0xd9, 0x47, 0x1c, 0x14, 0x1c, 0xb4, 0xab, 0x64, 0xb2,
	0x15, 0x81, 0x51, 0xef, 0x74, 0x6c, 0xc1, 0xb0, 0x28, 0xec, 0x82, 0xd0, 0x17, 0xd8, 0x3c, 0x21,
	0xd2, 0x15, 0x84, 0x01, 0x7a, 0xe3, 0x8a, 0x47, 0x9b, 0x1a, 0xa2, 0x2d, 0x6f, 0xb1, 0x85, 0x5e,
	0x94, 0x40, 0x00, 0xe4, 0x59, 0x14, 0x19, 0x2d, 0xb6, 0x2c, 0x20, 0x61, 0x94, 0x74, 0x90, 0x6f,
	0xe9, 0x82, 0x6c, 0x30, 0xd8, 0x21, 0xf7, 0xa4, 0x52, 0x00, 0xdb, 0x29, 0xc6, 0x6c, 0x44, 0x61,
	0x37, 0xed, 0x1b, 0x42, 0x4a, 0xc2, 0x7a, 0x91, 0x3d, 0xb2, 0x7a, 0x37, 0x6d, 0xb7, 0x56, 0x6d,
	0xa1, 0x12, 0x68, 0x5b, 0x81, 0x06, 0x6d, 0xfc, 0xa4, 0x72, 0x47, 0x6c, 0xb1, 0x12, 0x11, 0xa3,
	0x46, 0xa8, 0x1b, 0xfd, 0x64, 0x44, 0x5f, 0xf8, 0x29, 0xb1, 0xda, 0xea, 0xba, 0x8a, 0x05, 0x76,
	0x56, 0x6c, 0x3a, 0x61, 0xc7, 0x41, 0x73, 0xd4, 0x5a, 0xed, 0x33, 0x5e, 0xa9, 0xc6, 0x0c, 0xae,
	0xb0, 0x19, 0xd4, 0x82, 0xa0, 0x73, 0x52, 0x79, 0x63, 0x67, 0x9a, 0xa3, 0xcc, 0xf8, 0x25, 0xf0,
	0x40, 0x69, 0x95, 0xe1, 0x66, 0x52, 0xda, 0x5e, 0x88, 0x0b, 0x9a, 0xa3, 0x10, 0x5d, 0x11, 0x04,
	0x59, 0x8d, 0xc2, 0x4d, 0x3f, 0xe9, 0x14, 0x72, 0x52, 0x53, 0x62, 0x53, 0x18, 0xe9, 0x05, 0x52,
	0xd2, 0x7b, 0xd2, 0x56, 0x4e, 0x90, 0x88, 0x46, 0xec, 0x92, 0x66, 0x87, 0x7c, 0xd9, 0x7b, 0x14,
	0xe5, 0x10, 0x7a, 0x82, 0xda, 0xe8, 0x08, 0xed, 0xf8, 0x7c, 0x17, 0xbd, 0x3b, 0xbe, 0x07, 0x0c,
	0x1d, 0xa2, 0xe1, 0x8b, 0x32, 0xb0, 0x5b, 0x35, 0xe5, 0x28, 0x0d, 0x7c, 0x27, 0xad, 0x20, 0x7d,
	0x95, 0x2f, 0xd4, 0xd8, 0xb9, 0xe1, 0x67, 0x5a, 0x47, 0x37, 0x19, 0x59, 0xb6, 0x10, 0x95, 0x94,
	0xee, 0xb2, 0x4f, 0x15, 0xd7, 0x95, 0x90, 0x03, 0xc1, 0x80, 0x58, 0x4a, 0x00, 0x50, 0xed, 0x82,
	0x3e, 0x14, 0xea, 0x2e, 0xf7, 0xd2, 0x04, 0xcb, 0x5f, 0x06, 0x55, 0x55, 0xb8, 0x67, 0xe4, 0x82,
	0x12, 0xdb, 0xcf, 0xad, 0x1c, 0x6b, 0xea, 0xac, 0x9a, 0x75, 0x8d, 0x59, 0xa3, 0x90, 0x8d, 0x62,
	0x54, 0x1e, 0xce, 0x86, 0x13, 0x7a, 0x91, 0x20, 0x7b, 0xc3, 0xfa, 0xb1, 0x1a, 0xbb, 0x3c, 0x7c,
	0xde, 0x2a, 0xa1, 0xb7, 0x52, 0x8a, 0x2a, 0xcf, 0xb3, 0xc5, 0x22, 0xaa, 0xc4, 0x40, 0x32, 0x95,
	0x0c, 0xbc, 0xd8, 0xec, 0x8b, 0x3f, 0x41, 0x70, 0xa3, 0xcd, 0xcd, 0x14, 0x8e, 0xec, 0x87, 0x1e,
	0xdf, 0x93, 0x52, 0x04, 0x84, 0xd8, 0xf4, 0x91, 0xda, 0x1b, 0x74, 0x2c, 0x21, 0x37, 0xff, 0x31,
	0xa9, 0xbd, 0xdf, 0x5e, 0x0e, 0x12, 0xb8, 0xc8, 0xfb, 0x45, 0xe7, 0xae, 0xf8, 0x2a, 0x59, 0xfd,
	0x1c, 0x7b, 0x78, 0xd7, 0xf1, 0x33, 0xf4, 0xdb, 0x8b, 0x4b, 0x01, 0xc7, 0x3f, 0x45, 0xda, 0x0a,
	0xee, 0x27, 0x5e, 0xe3, 0x49, 0x12, 0x25, 0xf2, 0x0e, 0xce, 0xb3, 0x33, 0xd2, 0xd7, 0xa7, 0xf5,
	0xb4, 0x13, 0xa7, 0x68, 0xe2, 0xe3, 0x6c, 0x5e, 0xb8, 0x3e, 0xe4, 0xe3, 0xa7, 0x14, 0xdb, 0x60,
	0x6c, 0x36, 0x10, 0xa4, 0xa0, 0x87, 0x03, 0x0e, 0x7f, 0x5c, 0x85, 0xc7, 0x0c, 0x2d, 0x07, 0xc8,
	0xc6, 0x1c, 0x08, 0x91, 0xed, 0x6b, 0x07, 0xcd, 0xd2, 0xa0, 0xb7, 0xb0, 0x93, 0xb8, 0x14, 0xb8,
	0xf2, 0x9e, 0x7e, 0x18, 0x53, 0xc3, 0x76, 0x1c, 0x17, 0xee, 0x36, 0xc4, 0x98, 0x41, 0x33, 0x6c,
	0x8e, 0x86, 0x5d, 0x62, 0xc7, 0x54, 0x36, 0x20, 0x96, 0x36, 0x13, 0x8d, 0xfe, 0x36, 0x99, 0xf4,
	0xb9, 0x95, 0x43, 0xcd, 0x5e, 0x33, 0xf8, 0x1c, 0x6b, 0x84, 0x11, 0x2a, 0xd7, 0x05, 0xba, 0xe0,
	0xab, 0xcd, 0x03, 0x5d, 0x51, 0xf3, 0x25, 0x98, 0x0b, 0xda, 0xff, 0xec, 0x90, 0x53, 0xda, 0xa0,
	0xfb, 0x41, 0x09, 0x1c, 0x22, 0xec, 0x40, 0x07, 0x83, 0xc7, 0xdc, 0xdd, 0xdc, 0xf4, 0x5d, 0x5c,
	0x25, 0x00, 0x77, 0x2b, 0x28, 0x4e, 0xb0, 0x88, 0x63, 0x96, 0x5f, 0x64, 0x93, 0xb4, 0x2c, 0x58,
	0xdd, 0x3c, 0xd3, 0x40, 0xee, 0x5a, 0xc2, 0xdb, 0x32, 0x7a, 0xac, 0xab, 0xd8, 0x5b, 0x82, 0xc4,
	0x45, 0xd7, 0x11, 0x02, 0xee, 0x26, 0xe5, 0x33, 0xa4, 0x03, 0xfe, 0xfd, 0x3a, 0x3b, 0xbf, 0x8a,
	0xaa, 0xb6, 0xef, 0x4c, 0x7d, 0x22, 0x76, 0x33, 0x71, 0x36, 0x75, 0xc1, 0xf5, 0xa0, 0x47, 0x38,
	0xe0, 0x3c, 0x3e, 0x25, 0x9d, 0xc7, 0x12, 0xe8, 0x8a, 0xf0, 0x1b, 0xc9, 0x71, 0x76, 0xe2, 0xd4,
	0x26, 0x9a, 0x90, 0x74, 0x37, 0xc8, 0xd4, 0x11, 0xac, 0x9b, 0x24, 0xb0, 0xb0, 0x8c, 0xaa, 0xd1,
	0x9f, 0x91, 0x93, 0x45, 0x68, 0x3e, 0xdd, 0x0f, 0xde, 0xe1, 0x59, 0x74, 0x85, 0x7c, 0xbe, 0x1e,
	0x70, 0x0c, 0x0a, 0x47, 0x04, 0x8d, 0x0d, 0xf3, 0x59, 0x36, 0xe5, 0xe1, 0x39, 0x04, 0xc7, 0xcc,
	0xad, 0x5c, 0x6e, 0x8e, 0x7b, 0xf2, 0xe6, 0xad, 0x30, 0x4b, 0xf6, 0x97, 0x2f, 0xb0, 0x06, 0xfd,
	0x40, 0xf9, 0x01, 0x24, 0x87, 0xb9, 0xcf, 0xd6, 0xbf, 0xd6, 0xd8, 0xe1, 0xd5, 0xb5, 0x84, 0xd3,
	0x22, 0xe8, 0x12, 0x93, 0xf1, 0xc3, 0xfc, 0x0a, 0x38, 0xfd, 0x3e, 0xc5, 0xf9, 0x60, 0x3f, 0xdd,
	0x4c, 0x2e, 0x71, 0x9d, 0x35, 0x08, 0x37, 0xa2, 0xcc, 0xdc, 0xca, 0x13, 0x63, 0xa3, 0x06, 0xf6,
	0xb4, 0x21, 0x64, 0xb1, 0x21, 0xad, 0xd4, 0xc0, 0xae, 0x4d, 0x4c, 0xcd, 0x90, 0x69, 0x5c, 0x7e,
	0x8d, 0xcd, 0xe6, 0x7f, 0xa0, 0xc7, 0x2b, 0xe4, 0xdd, 0x87, 0x81, 0x80, 0xfc, 0x5e, 0xb6, 0x97,
	0x15, 0xf7, 0x5a, 0xfa, 0x84, 0xf0, 0xba, 0xca, 0x92, 0x94, 0xe1, 0x18, 0x5d, 0x93, 0x75, 0x9c,
	0xb5, 0xfe, 0x7d, 0x62, 0x6c, 0x03, 0x28, 0x2c, 0x15, 0x1f, 0xdb, 0x6e, 0x00, 0xdb, 0xc9, 0x4d,
	0x85, 0x8f, 0x31, 0x59, 0xa4, 0x3a, 0xfa, 0x8c, 0xc6, 0xa3, 0xc0, 0xf1, 0x22, 0x4a, 0x55, 0xe4,
	0x30, 0x9b, 0x83, 0xc1, 0x2b, 0x32, 0x6d, 0xe8, 0x26, 0xfb, 0x64, 0xe7, 0x29, 0x10, 0x99, 0xa2,
	0x55, 0xc1, 0xf5, 0xeb, 0x85, 0x63, 0x66, 0x87, 0x38, 0x6d, 0x12, 0xd1, 0x8a, 0x81, 0xef, 0xf6,
	0x09, 0x53, 0xa1, 0xbc, 0xce, 0xb2, 0xd9, 0xdd, 0x2d, 0x70, 0xc0, 0x02, 0x90, 0x28, 0x52, 0x55,
	0x83, 0xda, 0x43, 0x1b, 0x53, 0x30, 0x5a, 0xf0, 0x42, 0x8f, 0x7d, 0x23, 0x21, 0xa2, 0x68, 0x03,
	0xbd, 0xa0, 0xfe, 0xa4, 0xd6, 0x13, 0x3d, 0x63, 0x05, 0xd5, 0xe7, 0xa5, 0xc1, 0xe9, 0x4b, 0xc0,
	0x3d, 0xc6, 0x4e, 0x95, 0x86, 0xba, 0xb4, 0x73, 0x6a, 0x97, 0xc9, 0xbc, 0x40, 0xc8, 0xeb, 0x22,
	0x81, 0x43, 0x12, 0xb1, 0x43, 0xc0, 0xa2, 0xc2, 0xe2, 0x0a, 0x43, 0xbd, 0x48, 0x68, 0x99, 0x83,
	0x8c, 0x65, 0x7d, 0x77, 0x82, 0xbd, 0x6d, 0x84, 0xd1, 0xed, 0xf7, 0x4d, 0xe0, 0x27, 0xc4, 0xd3,
	0x29, 0x47, 0x21, 0x4d, 0x0a, 0x70, 0xee, 0x85, 0xde, 0x64, 0x73, 0x25, 0x30, 0x71, 0x00, 0x49,
	0xea, 0xc1, 0x58, 0xab, 0x14, 0x07, 0xcf, 0x9a, 0x0f, 0xb3, 0x23, 0x6d, 0xd7, 0x2e, 0xad, 0x0a,
	0x1a, 0x35, 0x14, 0x92, 0xa6, 0x63, 0x25, 0xe1, 0x5c, 0x9f, 0xa1, 0xd8, 0x12, 0xd9, 0x9c, 0xb8,
	0x03, 0x49, 0xdd, 0x17, 0xe2, 0x52, 0x8e, 0x6a, 0xd7, 0x49, 0x3c, 0x5b, 0xfa, 0xb3, 0x92, 0xca,
	0xa9, 0x0c, 0xf2, 0x1f, 0x61, 0x47, 0x7d, 0x2f, 0xe0, 0x03, 0x5f, 0x05, 0xf7, 0x9c, 0x61, 0x4b,
	0x72, 0x76, 0x4f, 0xec, 0x82, 0x62, 0x28, 0x73, 0x5c, 0xc5, 0xfa, 0xc5, 0x08, 0x11, 0xbd, 0x88,
	0x3c, 0x17, 0x18, 0xcf, 0x81, 0xef, 0x0a, 0x00, 0x8b, 0xcc, 0xa9, 0x88, 0x4f, 0xc2, 0xbc, 0x24,
	0x8a, 0x6d, 0xe2, 0xd5, 0xf9, 0x3c, 0x10, 0x2d, 0x31, 0x95, 0xd3, 0xa6, 0xd0, 0x75, 0xd6, 0x7a,
	0xb3, 0xc6, 0xc6, 0x35, 0x72, 0x8a, 0xda, 0x20, 0xa0, 0x82, 0x86, 0xf9, 0x2d, 0x16, 0x90, 0xb8,
	0xc8, 0xd1, 0x48, 0x7f, 0x09, 0xc3, 0xd1, 0x09, 0x15, 0xa5, 0xf6, 0xb2, 0xc0, 0xa4, 0x8e, 0x05,
	0x1a, 0xff, 0x23, 0x16, 0xa0, 0xf4, 0xb5, 0xf5, 0x5f, 0x8d, 0x51, 0x87, 0x92, 0x93, 0xe1, 0x8a,
	0x3c, 0xa1, 0x1d, 0xff, 0xef, 0xf8, 0x13, 0xac, 0x49, 0x82, 0xfb, 0x4a, 0xab, 0x08, 0x7f, 0x6e,
	0xfb, 0x41, 0x20, 0x34, 0x58, 0x83, 0x3c, 0x56, 0xb0, 0xff, 0x69, 0x26, 0x7c, 0xb0, 0x06, 0x26,
	0x05, 0x3d, 0xee, 0x64, 0x5b, 0x82, 0xcf, 0xe8, 0xef, 0xd4, 0x8d, 0x00, 0x29, 0xe2, 0x2c, 0x9a,
	0x2f, 0x7c, 0xd2, 0x59, 0xfa, 0x13, 0x0c, 0x2a, 0xad, 0x8e, 0x02, 0xd0, 0x0d, 0x32, 0x62, 0x1e,
	0x69, 0x66, 0x51, 0xc2, 0x25, 0x74, 0x4e, 0x39, 0xa6, 0x64, 0xc8, 0xe4, 0x7a, 0xf3, 0xb4, 0xc0,
	0xbb, 0xd9, 0xb4, 0x2b, 0x42, 0x16, 0xe2, 0x90, 0x03, 0x9c, 0x56, 0x45, 0x3a, 0xa0, 0x06, 0x7b,
	0xa4, 0x0f, 0x7d, 0x05, 0xd2, 0x36, 0x25, 0x43, 0xe3, 0x75, 0x45, 0x68, 0x45, 0xda, 0x86, 0x30,
	0xe1, 0x21, 0xef, 0xec, 0xdb, 0x82, 0x14, 0x06, 0x61, 0x02, 0xd6, 0x53, 0x00, 0xb7, 0xc0, 0x17,
	0x4c, 0xb7, 0x30, 0x79, 0x72, 0x98, 0x3e, 0x60, 0x8e, 0x9f, 0x3e, 0x5c, 0xdd, 0xc6, 0x0c, 0x48,
	0x0f, 0xe8, 0x69, 0x00, 0x1d, 0xe9, 0x05, 0x5d, 0x03, 0xd0, 0x51, 0x02, 0x61, 0xf6, 0x6c, 0x27,
	0x4e, 0x97, 0x8e, 0xd1, 0x5f, 0x20, 0x2c, 0x69, 0xcc, 0x5d, 0xb8, 0xfe, 0x28, 0x51, 0x5e, 0xc9,
	0x71, 0xe2, 0x54, 0x50, 0x21, 0xfd, 0x5f, 0xec, 0x6c, 0x67, 0xe9, 0x84, 0xca, 0xf5, 0x0d, 0x7c,
	0x0c, 0xc2, 0xed, 0xa5, 0x25, 0x95, 0x2f, 0x2f, 0x9d, 0xc4, 0x76, 0xda, 0xed, 0xa5, 0x87, 0x68,
	0xb7, 0x17, 0xd9, 0x2c, 0xc9, 0x24, 0xe9, 0x98, 0x65, 0xa2, 0xec, 0xf5, 0x03, 0x32, 0x69, 0xf3,
	0x26, 0x2c, 0x80, 0xca, 0x68, 0xf9, 0x34, 0x9b, 0x51, 0xbf, 0xcb, 0x76, 0x15, 0x0e, 0x27, 0x82,
	0x3d, 0xeb, 0x5b, 0x75, 0x76, 0x71, 0x9c, 0xc5, 0x55, 0xf2, 0xc0, 0x7c, 0x97, 0xf2, 0x2b, 0x6a,
	0x63, 0x5d, 0xfa, 0x80, 0xfc, 0x94, 0xd8, 0x66, 0xe2, 0xc1, 0xd8, 0x06, 0x13, 0xca, 0x5c, 0x44,
	0x7e, 0x42, 0x31, 0x20, 0x2b, 0x73, 0x4a, 0x96, 0x8a, 0xc0, 0xb9, 0xa1, 0x8a, 0x18, 0x12, 0xea,
	0x06, 0x5d, 0xb2, 0xb4, 0x20, 0xac, 0x53, 0x4a, 0xc1, 0x38, 0x1b, 0xa0, 0x6f, 0x20, 0x22, 0x10,
	0xeb, 0xa0, 0x31, 0x9f, 0x31, 0xdf, 0xc1, 0x8e, 0x0a, 0xa6, 0xe3, 0x20, 0x16, 0xa5, 0x2c, 0xc4,
	0x0c, 0xe1, 0x79, 0xb2, 0x39, 0x2c, 0x7f, 0x61, 0x35, 0x47, 0xd1, 0x51, 0xc6, 0x8b, 0xad, 0xd5,
	0xe7, 0x79, 0x10, 0x44, 0xd6, 0x17, 0x1b, 0xa3, 0x26, 0xe4, 0xfa, 0x94, 0x26, 0x68, 0x73, 0xeb,
	0xb7, 0x20, 0x8e, 0x2c, 0x45, 0x68, 0xe3, 0xab, 0x9d, 0x5e, 0x45, 0xdd, 0x1f, 0xbe, 0x4d, 0x54,
	0x85, 0x6f, 0xe8, 0xa7, 0xca, 0x90, 0x25, 0xe5, 0x70, 0x8d, 0x5e, 0x5a, 0x14, 0xc3, 0xd4, 0x07,
	0x08, 0xc8, 0xd2, 0xdc, 0x5c, 0x02, 0xd2, 0x10, 0x7d, 0xd9, 0x22, 0xfc, 0x92, 0x4e, 0xfb, 0x39,
	0x51, 0x10, 0xc0, 0xd8, 0x74, 0x5a, 0xba, 0x10, 0x83, 0xce, 0xd8, 0x25, 0x36, 0xef, 0x96, 0x72,
	0xff, 0xf2, 0x0e, 0x4e, 0x34, 0x2b, 0xca, 0x02, 0x67, 0xd9, 0x14, 0xe5, 0xda, 0x53, 0x32, 0x92,
	0x88, 0xfb, 0x40, 0x92, 0x1f, 0x3c, 0x2b, 0x90, 0x36, 0x19, 0x3f, 0x48, 0xcf, 0x8a, 0x55, 0x78,
	0x56, 0x97, 0xd9, 0xf1, 0xfe, 0xb1, 0xd2, 0xbf, 0x9a, 0xd3, 0xfb, 0x57, 0x10, 0xfa, 0x97, 0x26,
	0x50, 0xb2, 0x64, 0x5e, 0xba, 0x07, 0x7d, 0x23, 0xaf, 0xb0, 0x13, 0x03, 0x4b, 0x93, 0xe6, 0x53,
	0xb1, 0xe4, 0x20, 0x36, 0x20, 0xb8, 0xb2, 0xde, 0xb4, 0x03, 0x01, 0x9e, 0x4c, 0x18, 0x5b, 0xa5,
	0x94, 0xff, 0xa2, 0x3c, 0x46, 0x7f, 0x59, 0x00, 0x04, 0x43, 0x95, 0x6d, 0x31, 0x62, 0xa4, 0xf4,
	0x30, 0x85, 0x41, 0x12, 0x0a, 0x58, 0xd8, 0x7b, 0x31, 0xe5, 0x86, 0x1b, 0x98, 0x14, 0x95, 0xe0,
	0xbd, 0x58, 0xe6, 0xf1, 0xb0, 0x16, 0x9b, 0x52, 0x8e, 0xb8, 0x61, 0x7d, 0xbe, 0xc6, 0x9e, 0xd0,
	0xb0, 0x95, 0xdc, 0x72, 0x2d, 0xf1, 0xe1, 0x9e, 0xf7, 0xd7, 0x79, 0x86, 0x29, 0x86, 0x14, 0xcc,
	0x21, 0x18, 0x7a, 0xf1, 0x5b, 0xe6, 0x40, 0x56, 0x9a, 0x63, 0xcf, 0x6e, 0xca, 0x1f, 0xcb, 0x6f,
	0x65, 0xd3, 0xf2, 0x27, 0x1e, 0x45, 0x2e, 0x58, 0xae, 0xa3, 0xc3, 0x51, 0x14, 0x54, 0xb8, 0x40,
	0x22, 0x43, 0xf5, 0x8d, 0xf1, 0x7d, 0x95, 0x1b, 0x22, 0xeb, 0xa3, 0x95, 0xae, 0xe7, 0xd9, 0xa2,
	0x4c, 0x0a, 0xe5, 0x8a, 0xe2, 0x01, 0x05, 0x4c, 0x23, 0x37, 0x13, 0x15, 0x72, 0x23, 0xca, 0x54,
	0x1f, 0xaf, 0xb1, 0x27, 0xc7, 0x51, 0xac, 0xa0, 0x4e, 0x5e, 0x84, 0x50, 0x56, 0x8b, 0xfe, 0xff,
	0x8e, 0x4b, 0x02, 0x6e, 0x84, 0xc4, 0x4c, 0x24, 0xc7, 0xbf, 0x84, 0x06, 0x43, 0x13, 0x84, 0x96,
	0xd6, 0xb8, 0x13, 0xb9, 0xdb, 0xdc, 0x7b, 0x21, 0x24, 0x10, 0xd8, 0x33, 0x53, 0x66, 0xf2, 0xca,
	0xd8, 0xd4, 0x1e, 0x8c, 0x90, 0xb7, 0x90, 0x0d, 0xc8, 0x2d, 0x17, 0x9a, 0xaa, 0xfe, 0x60, 0x46,
	0x08, 0xec, 0x76, 0x82, 0xe9, 0xf4, 0xab, 0x2b, 0xb6, 0xca, 0xfa, 0xa0, 0xb5, 0x15, 0x77, 0xf2,
	0x12, 0x3b, 0x16, 0x40, 0x80, 0x64, 0x0b, 0xf7, 0x88, 0xf6, 0x01, 0x89, 0xee, 0xc4, 0x32, 0x06,
	0x3f, 0xe8, 0x66, 0xd6, 0x36, 0xbb, 0x32, 0x2e, 0xcd, 0x41, 0x01, 0xca, 0x24, 0x5e, 0x39, 0x64,
	0xad, 0x55, 0x86, 0xac, 0xe5, 0x10, 0x98, 0xaa, 0x66, 0xd6, 0x1d, 0x76, 0x75, 0xf8, 0x66, 0x22,
	0x59, 0x1d, 0x21, 0xe7, 0x3c, 0x17, 0x44, 0x6d, 0xb9, 0xdd, 0x40, 0xbd, 0x9d, 0xaa, 0xd4, 0xd6,
	0xfb, 0xb5, 0xab, 0x09, 0x64, 0x5f, 0x8a, 0x32, 0x7f, 0xd3, 0x17, 0xdd, 0x20, 0xb7, 0xa3, 0xe4,
	0x3e, 0x10, 0x72, 0x4d, 0xb0, 0xb2, 0x96, 0x1b, 0x0b, 0x3e, 0xaa, 0xab, 0x22, 0x5d, 0x8f, 0x28,
	0x58, 0xdf, 0xab, 0xb1, 0xb7, 0x68, 0x36, 0x53, 0xf7, 0x8f, 0xf1, 0xc1, 0x90, 0xa6, 0x17, 0x80,
	0x25, 0x71, 0x66, 0x3b, 0x7e, 0x67, 0x23, 0x2a, 0x15, 0x6b, 0x11, 0xb6, 0xeb, 0x04, 0xc1, 0x96,
	0xe3, 0x6e, 0x97, 0xa2, 0x0b, 0x80, 0x82, 0x6b, 0xc6, 0x3d, 0x02, 0x4f, 0x96, 0x07, 0xa3, 0xea,
	0xde, 0x72, 0xc0, 0x39, 0x69, 0x94, 0x07, 0x67, 0x7c, 0x2f, 0x73, 0x36, 0xba, 0xa9, 0x2a, 0x28,
	0x82, 0xd8, 0x22, 0x78, 0x27, 0xf2, 0x5d, 0x2e, 0xe0, 0xd3, 0x03, 0x29, 0x89, 0x19, 0xba, 0x8f,
	0x8f, 0xd4, 0xd8, 0x63, 0x95, 0xa7, 0x92, 0x66, 0x6c, 0xc8, 0xb1, 0x06, 0x16, 0x1c, 0x30, 0x8c,
	0xb3, 0xc3, 0x0d, 0x23, 0x90, 0x9d, 0x9c, 0xa2, 0x54, 0x44, 0x87, 0xd6, 0x27, 0x46, 0x53, 0x59,
	0x5c, 0xaf, 0x22, 0x48, 0x1c, 0x45, 0x09, 0xb0, 0xcc, 0xa6, 0x44, 0x08, 0xbd, 0x2a, 0xa4, 0x33,
	0x1c, 0xda, 0xdf, 0xe1, 0x58, 0x75, 0x0a, 0xd2, 0x22, 0x8f, 0x8f, 0x9f, 0x36, 0x1c, 0xaf, 0x13,
	0x65, 0x9e, 0xa4, 0x36, 0x06, 0x9a, 0x00, 0xc4, 0x00, 0x13, 0x98, 0x4f, 0xd0, 0x6a, 0xb2, 0x82,
	0x56, 0x60, 0x62, 0x1e, 0x1f, 0x81, 0x5b, 0x9e, 0x26, 0x00, 0x8d, 0x2a, 0xdd, 0x48, 0x47, 0xf5,
	0xc6, 0x88, 0x40, 0xac, 0x97, 0x8a, 0x75, 0x55, 0xff, 0xcd, 0x93, 0xbb, 0x3d, 0x31, 0x26, 0xad,
	0x25, 0x0c, 0x4a, 0xde, 0xde, 0x92, 0x83, 0x65, 0x08, 0xd4, 0x50, 0xec, 0x2b, 0xe9, 0x28, 0xca,
	0x97, 0x3f, 0xaa, 0x2d, 0x40, 0x29, 0x54, 0xc9, 0x79, 0x7c, 0xaf, 0xca, 0x89, 0xdc, 0xa6, 0x66,
	0x85, 0x94, 0x78, 0x94, 0xf7, 0x54, 0xd7, 0x16, 0xfa, 0x93, 0x5d, 0x22, 0x0f, 0x5f, 0x0e, 0x9c,
	0x45, 0x66, 0x0b, 0xa4, 0x85, 0x88, 0xa5, 0x82, 0x61, 0xeb, 0xcb, 0x75, 0x66, 0xd2, 0x06, 0xd8,
	0x9b, 0x93, 0x67, 0x5f, 0x7a, 0x4f, 0x5a, 0x2b, 0x55, 0xc3, 0x29, 0xbc, 0xae, 0x97, 0x8a, 0xc0,
	0x45, 0x68, 0x22, 0x29, 0x52, 0xaa, 0x9a, 0x4f, 0xaa, 0xab, 0xce, 0xcb, 0xf2, 0x31, 0xc4, 0x9a,
	0xbb, 0x51, 0x22, 0x7a, 0x9c, 0xe6, 0x31, 0x25, 0xe6, 0x06, 0xb6, 0xc7, 0x29, 0x2b, 0x86, 0x3e,
	0x72, 0x29, 0x5d, 0x76, 0x8a, 0x1d, 0x1f, 0xfc, 0xd6, 0x9b, 0x32, 0x7b, 0xe0, 0x62, 0x7c, 0xe9,
	0x78, 0xaa, 0x08, 0x5f, 0x66, 0xa3, 0x79, 0x95, 0xba, 0x29, 0x87, 0x95, 0xb2, 0x47, 0x67, 0xd2,
	0xfa, 0xb6, 0xde, 0x2b, 0xe8, 0xb9, 0xb3, 0xf7, 0x80, 0x2f, 0x2d, 0xae, 0x8b, 0xf2, 0xb2, 0x40,
	0x13, 0x95, 0xfe, 0xc9, 0xd5, 0xcc, 0x00, 0x77, 0x01, 0xec, 0xfd, 0x30, 0x4d, 0x06, 0x1f, 0x13,
	0x8a, 0xb9, 0x09, 0xe6, 0xc7, 0xb1, 0xa4, 0xe6, 0x3b, 0xd9, 0x44, 0x22, 0x3b, 0x14, 0x1e, 0xc0,
	0xee, 0x61, 0x8a, 0x1d, 0x2b, 0x33, 0x9d, 0xb4, 0x2d, 0x53, 0x17, 0x6f, 0x8c, 0x79, 0x1a, 0x21,
	0xcd, 0xe3, 0x9f, 0x66, 0x90, 0xf7, 0x7a, 0x78, 0x2a, 0x6f, 0x12, 0x94, 0x20, 0xe2, 0xab, 0x46,
	0xf9, 0x84, 0x53, 0x0f, 0x74, 0x42, 0xeb, 0x3e, 0xbb, 0x20, 0x67, 0xa4, 0x55, 0xc7, 0x79, 0x89,
	0xef, 0xde, 0xf5, 0xa9, 0xe6, 0x41, 0x25, 0x02, 0xf1, 0xb3, 0xc0, 0x1c, 0x90, 0x72, 0x9d, 0x4e,
	0xec, 0xf8, 0xed, 0x50, 0xa5, 0x84, 0x17, 0xac, 0xaf, 0xd4, 0xf2, 0x30, 0x2b, 0xd5, 0x95, 0x47,
	0xc9, 0x8a, 0xed, 0xbf, 0xb6, 0x76, 0x8f, 0xb2, 0x61, 0xdc, 0xd3, 0xd6, 0xe4, 0x6b, 0xfa, 0x9a,
	0x7c, 0x05, 0x33, 0x28, 0xdf, 0x7e, 0xaf, 0xa4, 0x6b, 0x14, 0x4c, 0xf8, 0xe1, 0xb9, 0xae, 0xe9,
	0x02, 0xbf, 0x3b, 0x1e, 0x76, 0xfb, 0x88, 0xf6, 0x04, 0xd1, 0x4b, 0xfa, 0xc9, 0x1a, 0x3b, 0xab,
	0xa1, 0x5e, 0xae, 0x4f, 0xd0, 0xd4, 0x1e, 0x40, 0x9b, 0xac, 0xb0, 0x63, 0xbb, 0x4a, 0x53, 0xd8,
	0x45, 0x9a, 0x5e, 0xd5, 0xaf, 0x8f, 0x34, 0x35, 0x7a, 0x04, 0xdb, 0x12, 0xf7, 0x32, 0x10, 0x03,
	0xc0, 0x0d, 0x55, 0x42, 0xd4, 0x95, 0xb7, 0x6c, 0x7d, 0x7a, 0x0c, 0xbe, 0x13, 0xb6, 0x28, 0x05,
	0x62, 0x6d, 0xfa, 0x01, 0x57, 0x5d, 0x7b, 0x02, 0x53, 0x1b, 0xce, 0x1a, 0x27, 0x1c, 0x7b, 0x3a,
	0x14, 0xd6, 0xa7, 0xd9, 0x89, 0x12, 0xd6, 0x3d, 0x03, 0xc4, 0x09, 0x7a, 0x09, 0x5d, 0x52, 0xe0,
	0x62, 0xd1, 0x12, 0x51, 0xad, 0x0f, 0xe9, 0x69, 0xd7, 0x87, 0x91, 0x8e, 0x76, 0x2d, 0x6c, 0xee,
	0x13, 0x9b, 0xc4, 0x62, 0x98, 0x6a, 0x0a, 0xb8, 0xd4, 0x3c, 0x48, 0xa0, 0x6e, 0x7d, 0xa7, 0xa6,
	0x8d, 0xec, 0x05, 0x0a, 0x2f, 0x03, 0xcf, 0xd1, 0x6d, 0xac, 0x3a, 0x29, 0x97, 0xce, 0x17, 0xd8,
	0x16, 0x17, 0xfe, 0xca, 0x4d, 0x18, 0x0a, 0x5c, 0x97, 0xf4, 0x73, 0x7e, 0x5a, 0x40, 0x78, 0x33,
	0x71, 0xdc, 0x52, 0x3e, 0xb4, 0xdf, 0xe5, 0x69, 0x68, 0x5d, 0x9e, 0x29, 0xbd, 0xcb, 0x33, 0xad,
	0x75, 0x79, 0x66, 0xfa, 0x1c, 0x35, 0xd1, 0x6c, 0xfa, 0x91, 0xba, 0xd6, 0xd4, 0x69, 0x8e, 0x73,
	0x03, 0x04, 0xb2, 0x1d, 0x52, 0xc3, 0x62, 0xff, 0x91, 0x40, 0xf5, 0xe0, 0xdf, 0xe8, 0x59, 0x8a,
	0x8a, 0x91, 0xd0, 0x45, 0x58, 0xf1, 0x92, 0x27, 0xc4, 0x3a, 0x60, 0xde, 0x90, 0x98, 0x0b, 0x48,
	0xb6, 0x95, 0x44, 0x59, 0x06, 0x57, 0x21, 0x5d, 0xc5, 0x46, 0x6e, 0xcf, 0x73, 0x02, 0x4d, 0x69,
	0x08, 0x34, 0xad, 0x86, 0x85, 0xdd, 0x0e, 0xb9, 0xf1, 0xa9, 0x3c, 0x1c, 0xd8, 0x06, 0x35, 0x4c,
	0xc2, 0x67, 0xf3, 0x8e, 0x57, 0xec, 0x0a, 0xdd, 0x86, 0x6d, 0x76, 0x64, 0x19, 0x4e, 0xa6, 0x44,
	0x0b, 0x7a, 0x50, 0xea, 0xdc, 0x5a, 0x1b, 0xf7, 0x76, 0xd1, 0xfb, 0xef, 0xa6, 0x03, 0xa4, 0x40,
	0x05, 0x4b, 0x5f, 0x94, 0xce, 0xb0, 0x56, 0xd9, 0xa9, 0x55, 0xc5, 0x40, 0xd8, 0xaa, 0x98, 0xaf,
	0x72, 0x6b, 0xc7, 0xf7, 0x78, 0xe8, 0x72, 0x3c, 0x89, 0xe4, 0xcd, 0xb2, 0x3f, 0x2d, 0x97, 0x15,
	0x8e, 0xff, 0x9a, 0xb6, 0x29, 0x23, 0x67, 0xcd, 0x57, 0x40, 0x9c, 0xe1, 0x33, 0x35, 0xb5, 0x7b,
	0x45, 0x8f, 0x60, 0xa9, 0x9c, 0xb6, 0x88, 0x8d, 0x2d, 0xfb, 0x41, 0xe4, 0x08, 0x9e, 0x9b, 0xb7,
	0x9e, 0xd5, 0xae, 0x98, 0xa7, 0xb1, 0x2a, 0x56, 0x74, 0x92, 0xb6, 0x90, 0x9b, 0x79, 0xeb, 0x6b,
	0xfa, 0x94, 0x81, 0x4a, 0x25, 0xde, 0xeb, 0x86, 0x42, 0xeb, 0x62, 0x86, 0x32, 0x35, 0xef, 0xa8,
	0x4a, 0x40, 0x1e, 0x8a, 0x8d, 0x9d, 0xf8, 0xd4, 0x94, 0x91, 0xaa, 0x72, 0x79, 0x93, 0xe3, 0xe4,
	0xf2, 0xde, 0x98, 0x60, 0x0f, 0xad, 0xde, 0x02, 0x56, 0xc0, 0xb6, 0xa8, 0xb5, 0x84, 0x63, 0x3b,
	0x0c, 0x7e, 0x80, 0x80, 0x09, 0x62, 0x6d, 0xfd, 0x65, 0x60, 0xb1, 0x45, 0x5d, 0x06, 0x15, 0xd4,
	0x41, 0xa3, 0x53, 0x6f, 0x47, 0x2e, 0xc0, 0x60, 0x99, 0x60, 0x0a, 0xc1, 0x26, 0x73, 0x49, 0x73,
	0x12, 0x4c, 0xe0, 0xe4, 0x7d, 0x8b, 0x1f, 0xe8, 0x3a, 0x01, 0x02, 0xf2, 0xbe, 0x45, 0x9a, 0xb4,
	0xcb, 0x9d, 0xa4, 0xe0, 0x69, 0x02, 0xa5, 0x20, 0xca, 0x92, 0xa7, 0xc1, 0x19, 0xc3, 0x1c, 0x32,
	0x77, 0xb0, 0xa6, 0x87, 0x19, 0x7a, 0xba, 0xd4, 0x59, 0xc5, 0xef, 0xf9, 0xb7, 0x72, 0x91, 0x88,
	0xcc, 0x54, 0x9a, 0x45, 0x1d, 0x6a, 0x49, 0x9e, 0x23, 0x91, 0x7c, 0x1a, 0x19, 0x13, 0x1b, 0x71,
	0x12, 0x55, 0x46, 0xb4, 0x9a, 0x95, 0x54, 0x68, 0xae, 0x8b, 0xa1, 0xe2, 0x2d, 0x04, 0xa6, 0xa9,
	0xb0, 0x41, 0x6f, 0x41, 0x9d, 0x2b, 0x4a, 0xfc, 0xb6, 0x1f, 0xca, 0x54, 0x15, 0x9d, 0x0b, 0x28,
	0x0c, 0xe4, 0x59, 0x54, 0xbb, 0x63, 0x8a, 0x5b, 0x8a, 0x15, 0xb5, 0x33, 0x2e, 0xff, 0x10, 0x9b,
	0x56, 0x4b, 0x02, 0x17, 0x61, 0x0b, 0x64, 0xe1, 0xa4, 0x48, 0xb4, 0x7a, 0x5b, 0x88, 0x91, 0x26,
	0xa2, 0x7d, 0x01, 0x5b, 0xa4, 0x5c, 0x47, 0xb6, 0xa8, 0x53, 0x37, 0x03, 0x28, 0x8d, 0xa2, 0x48,
	0x54, 0xb7, 0x36, 0xd8, 0xca, 0x30, 0x3e, 0x2c, 0x98, 0xb0, 0x1c, 0xd3, 0x9a, 0x17, 0xd9, 0x0c,
	0x5d, 0x6a, 0x51, 0xeb, 0x5b, 0xae, 0xa6, 0x87, 0x75, 0x93, 0x1d, 0xc5, 0x3d, 0xf0, 0xdb, 0x0d,
	0x77, 0x3b, 0x8c, 0x76, 0x03, 0xee, 0xb5, 0xc1, 0x9f, 0x28, 0xaf, 0x52, 0x1b, 0xb9, 0xca, 0x07,
	0xb5, 0x85, 0xd3, 0x5c, 0xe6, 0x70, 0x5e, 0xff, 0x1c, 0x69, 0x73, 0x85, 0xfc, 0x26, 0x58, 0xa5,
	0x29, 0x74, 0xae, 0x00, 0x38, 0x92, 0x2b, 0x73, 0x40, 0x29, 0xaa, 0x10, 0x80, 0x8e, 0x8c, 0x2a,
	0xb6, 0xd8, 0xf5, 0x83, 0x6f, 0x2f, 0x25, 0xee, 0x60, 0x07, 0x4d, 0xd9, 0x33, 0x9a, 0x9d, 0xfa,
	0x3a, 0x19, 0xaa, 0x6e, 0xa6, 0xec, 0xf3, 0xd7, 0x06, 0x04, 0xae, 0xde, 0xe7, 0xdb, 0xfa, 0x9e,
	0x70, 0x75, 0x16, 0xac, 0x6b, 0xd5, 0xc9, 0x91, 0x3b, 0x10, 0xa0, 0x4a, 0x4a, 0xae, 0x0a, 0x5f,
	0xed, 0x0e, 0xc4, 0xb7, 0xd8, 0xb6, 0x95, 0x5a, 0xad, 0x6a, 0xf6, 0x29, 0x4d, 0x53, 0xe3, 0x65,
	0x2e, 0x44, 0xa3, 0x26, 0xc6, 0x5c, 0xe8, 0x1e, 0x77, 0xb1, 0x53, 0x08, 0xd6, 0xa0, 0xed, 0x75,
	0x0b, 0xdd, 0x1a, 0x6b, 0xa1, 0x82, 0x9a, 0x62, 0x21, 0xb8, 0x6e, 0xf5, 0x9e, 0x41, 0x34, 0xb9,
	0x79, 0xd5, 0x3d, 0x6e, 0xa5, 0x65, 0x6e, 0x77, 0x83, 0x00, 0x17, 0x20, 0xc7, 0xb0, 0x14, 0x88,
	0xe6, 0xce, 0x0a, 0x38, 0x87, 0x6e, 0xd4, 0xc9, 0x4d, 0x51, 0xd1, 0xc1, 0x28, 0x5c, 0xf0, 0x1f,
	0xaf, 0xb3, 0x93, 0x95, 0x19, 0xc3, 0xca, 0x45, 0x09, 0x40, 0xd1, 0x68, 0x5d, 0x36, 0xfe, 0x99,
	0xb9, 0x17, 0x2b, 0x06, 0x17, 0x66, 0x42, 0xeb, 0xc2, 0xbe, 0x87, 0x1d, 0x16, 0x26, 0x9e, 0x12,
	0x78, 0x01, 0x6f, 0x3b, 0xee, 0xfe, 0x03, 0xa6, 0xf0, 0xcc, 0xdb, 0xe0, 0x40, 0xe5, 0x6b, 0x81,
	0x6f, 0x25, 0xbb, 0x48, 0x0e, 0x9c, 0x0a, 0xfc, 0x61, 0xf6, 0xf8, 0xf0, 0x06, 0x9e, 0x16, 0x86,
	0xbf, 0xfa, 0x27, 0x53, 0xa4, 0xe5, 0x40, 0xbb, 0x17, 0xcd, 0x82, 0xf0, 0x17, 0xf8, 0xc9, 0x19,
	0xf6, 0x32, 0x11, 0x21, 0x66, 0xac, 0x7f, 0xaa, 0x83, 0xcd, 0x1e, 0xbd, 0x01, 0x2e, 0x4e, 0x81,
	0x76, 0xd9, 0x70, 0x93, 0x25, 0x10, 0xce, 0x19, 0xfc, 0x45, 0xcf, 0xb9, 0x26, 0x54, 0x07, 0x3c,
	0x6e, 0xd1, 0xeb, 0x98, 0x4f, 0xca, 0xce, 0xe7, 0x86, 0x28, 0x8b, 0x08, 0x7a, 0x9c, 0x6f, 0x8e,
	0x7b, 0x3a, 0xf4, 0xe0, 0x64, 0x6b, 0x98, 0xaa, 0x5f, 0xcb, 0x6d, 0x50, 0x3b, 0x20, 0xab, 0x07,
	0x74, 0xf7, 0xd3, 0xca, 0x7f, 0xc5, 0x4f, 0x78, 0xbf, 0x62, 0xbb, 0x19, 0xe5, 0x1f, 0xca, 0x4e,
	0xe3, 0x18, 0x23, 0x51, 0x24, 0x83, 0xb0, 0x7a, 0xcf, 0x60, 0xa9, 0x1b, 0x30, 0x96, 0x0d, 0x5d,
	0x17, 0xc6, 0x41, 0xab, 0xb9, 0x86, 0x33, 0x96, 0x97, 0x58, 0x83, 0x7e, 0x90, 0x6e, 0x84, 0x1f,
	0xaa, 0x03, 0xa9, 0x61, 0x7d, 0x18, 0x33, 0x67, 0x43, 0xd7, 0x59, 0x17, 0xef, 0xb4, 0x44, 0xc0,
	0xec, 0x96, 0xda, 0x03, 0x86, 0xd3, 0xf7, 0x69, 0x36, 0x45, 0x97, 0x81, 0xb5, 0x34, 0x44, 0xf7,
	0xd1, 0x71, 0xd0, 0xb5, 0xbe, 0x5a, 0x63, 0xd6, 0xf0, 0x71, 0x24, 0x05, 0xd7, 0x31, 0x9c, 0x97,
	0xfe, 0xac, 0x08, 0x63, 0x1f, 0x6b, 0x8e, 0x77, 0x0a, 0x5d, 0x27, 0x52, 0xfd, 0x00, 0x9d, 0x48,
	0x13, 0xda, 0x4a, 0x99, 0xf5, 0x2f, 0x35, 0xd5, 0x08, 0xae, 0x57, 0x3a, 0xd4, 0x82, 0x90, 0xb6,
	0x65, 0x78, 0x96, 0x13, 0xb0, 0x47, 0x09, 0xf6, 0xb5, 0x8e, 0x10, 0xa7, 0x4c, 0x48, 0x2d, 0x31,
	0xad, 0x9e, 0xa5, 0x4d, 0xca, 0x16, 0xfc, 0xe1, 0xaa, 0xe7, 0x0c, 0x9b, 0x96, 0xcf, 0xc1, 0x24,
	0x0f, 0x0f, 0x14, 0xec, 0xde, 0x51, 0x6e, 0x88, 0x29, 0x39, 0x03, 0xe7, 0x9a, 0xa3, 0xc9, 0x6f,
	0xfd, 0x5b, 0x0d, 0x7c, 0x7b, 0x4d, 0xb4, 0x50, 0x34, 0xfb, 0x0d, 0x74, 0x4f, 0x2e, 0x98, 0xf7,
	0xd8, 0x71, 0x62, 0x08, 0x19, 0xac, 0x93, 0x1a, 0x10, 0xfc, 0x5c, 0xaf, 0x2e, 0xa5, 0x95, 0x96,
	0x6c, 0x12, 0x87, 0xd0, 0x19, 0xf1, 0x04, 0xc8, 0xcf, 0xcb, 0x6d, 0x66, 0x0e, 0x42, 0x07, 0x39,
	0xb5, 0x51, 0x56, 0x0d, 0x75, 0xa5, 0x77, 0x0a, 0x47, 0x96, 0xc2, 0x21, 0xd9, 0x17, 0x36, 0xa9,
	0xfe, 0x96, 0xae, 0x6f, 0x83, 0x5c, 0x88, 0xff, 0xac, 0xb1, 0x65, 0x0d, 0x7a, 0xb7, 0x9d, 0x30,
	0x73, 0xd2, 0x7d, 0xcd, 0x69, 0xdf, 0xaa, 0x74, 0x88, 0x38, 0xdc, 0xe3, 0xcd, 0xea, 0xd9, 0x4d,
	0xf9, 0x3f, 0xe2, 0xbf, 0xfc, 0x0c, 0x9b, 0x93, 0x7f, 0xae, 0x83, 0xb3, 0xd8, 0xd7, 0xf6, 0x4a,
	0x2f, 0x79, 0xe5, 0xe3, 0xd7, 0x32, 0x8e, 0xe4, 0xf7, 0x2c, 0xbf, 0x96, 0x4f, 0xcd, 0x95, 0x51,
	0x1f, 0x15, 0x00, 0x29, 0xf1, 0x0a, 0x67, 0x7c, 0xa4, 0x10, 0x0b, 0xcb, 0x62, 0x87, 0x57, 0x6f,
	0x64, 0x30, 0x68, 0xa3, 0x9b, 0x71, 0x1b, 0x47, 0x87, 0x6d, 0xa4, 0xa0, 0xf0, 0xbd, 0x45, 0x51,
	0x65, 0x99, 0x2d, 0x89, 0xd5, 0x5e, 0x89, 0x5a, 0xab, 0xf7, 0x38, 0x46, 0x5c, 0xaf, 0x8a, 0xb4,
	0x5c, 0x6a, 0x7d, 0xb3, 0x26, 0xdc, 0xc8, 0x7c, 0xa3, 0xf7, 0xf2, 0x00, 0x6d, 0x2b, 0x3d, 0xaf,
	0x04, 0x17, 0x9b, 0x8b, 0xa6, 0xae, 0x2d, 0x27, 0xdd, 0x92, 0x41, 0xc3, 0x69, 0x76, 0x02, 0xf9,
	0x5f, 0xbc, 0x0b, 0x71, 0xd1, 0x13, 0x73, 0xbb, 0xf8, 0x44, 0x31, 0x50, 0x41, 0x04, 0xa6, 0x71,
	0xf1, 0xe5, 0xc8, 0xa6, 0x9f, 0x40, 0x10, 0x24, 0xdf, 0x8f, 0x30, 0x95, 0x9c, 0xa7, 0x4a, 0x57,
	0xf9, 0x65, 0xc9, 0xbc, 0x52, 0xad, 0xf4, 0xc5, 0x8f, 0xf3, 0x17, 0x44, 0x0b, 0x4a, 0xe8, 0xda,
	0x60, 0x86, 0xa2, 0x6d, 0x1f, 0xed, 0xbd, 0xa9, 0x9c, 0xaf, 0x6e, 0xe8, 0x83, 0xbc, 0x02, 0xe4,
	0x08, 0x31, 0xc1, 0xa7, 0x6a, 0xda, 0x9a, 0x97, 0x70, 0x24, 0x5f, 0x75, 0x92, 0x57, 0x91, 0x1c,
	0x65, 0x97, 0x4e, 0x3d, 0xc3, 0x23, 0x3a, 0xd9, 0xa5, 0x77, 0x92, 0x70, 0x37, 0x02, 0xe6, 0x87,
	0x59, 0x61, 0xf9, 0x64, 0xf2, 0x11, 0x51, 0x2b, 0x9e, 0x11, 0x96, 0x33, 0x92, 0x93, 0x79, 0xe2,
	0x6d, 0x0b, 0x3c, 0x11, 0xcf, 0xde, 0x40, 0xb3, 0x22, 0x44, 0x7c, 0x16, 0xbc, 0xdc, 0x2b, 0x95,
	0x55, 0xad, 0x4a, 0xe4, 0x34, 0x51, 0x1f, 0xe2, 0x0b, 0x4e, 0xad, 0x13, 0xb6, 0x55, 0xae, 0xa8,
	0x88, 0xa9, 0x85, 0xeb, 0x73, 0x31, 0x4f, 0x6a, 0xf6, 0x04, 0xe5, 0xfe, 0x66, 0x96, 0xde, 0xa1,
	0x50, 0x7f, 0x23, 0x02, 0x07, 0x57, 0xfa, 0x59, 0xd6, 0x67, 0xea, 0xda, 0xa2, 0xef, 0xe0, 0x70,
	0xe9, 0x71, 0xf7, 0x2a, 0xc0, 0x9a, 0xea, 0x48, 0x12, 0xb7, 0x09, 0x71, 0x74, 0xe4, 0xe5, 0xd5,
	0xe6, 0xfc, 0xc9, 0x2f, 0x3d, 0xf4, 0xb0, 0xdb, 0xb8, 0x24, 0xfc, 0xbb, 0xc3, 0x4b, 0x4f, 0x18,
	0xd5, 0x27, 0xcc, 0x11, 0x4b, 0x02, 0xde, 0x03, 0x8f, 0x31, 0x04, 0x54, 0xb8, 0xd2, 0x8e, 0x37,
	0x9a, 0x07, 0x40, 0xb0, 0x89, 0x1f, 0x4a, 0x70, 0xd1, 0x2d, 0x7d, 0x9d, 0x1d, 0xd5, 0xc1, 0x75,
	0x04, 0x06, 0xc1, 0x21, 0x4c, 0x65, 0x9e, 0xe4, 0x8e, 0x36, 0x9d, 0x20, 0x98, 0x6a, 0xbd, 0xbb,
	0xd1, 0xf1, 0xe1, 0x5f, 0x6c, 0x93, 0x78, 0x15, 0xdb, 0xe0, 0x29, 0x47, 0xa4, 0x1e, 0xe9, 0xe6,
	0x46, 0x98, 0x1a, 0x28, 0xc4, 0x6a, 0xcf, 0x6a, 0xef, 0x26, 0x2f, 0xab, 0x2b, 0x5e, 0x0d, 0x7c,
	0xca, 0xd1, 0x69, 0x9c, 0xf0, 0xaf, 0xd7, 0xb4, 0xc1, 0x5a, 0xbe, 0xc2, 0x5a, 0x37, 0xe1, 0x8a,
	0xa9, 0x68, 0x15, 0x2c, 0x94, 0x3a, 0x7e, 0x00, 0x60, 0xdd, 0x61, 0x51, 0x65, 0x39, 0xd9, 0x56,
	0xe1, 0x22, 0x60, 0x0a, 0x52, 0xba, 0x08, 0x73, 0x6c, 0xc2, 0x4d, 0xdc, 0xe2, 0x59, 0x5d, 0x2e,
	0xff, 0x0d, 0xfc, 0x14, 0xc8, 0x47, 0x75, 0x24, 0x1a, 0xf8, 0x38, 0xc9, 0x0e, 0xbb, 0x9d, 0x0d,
	0x9e, 0xc8, 0x6e, 0x78, 0xec, 0x02, 0x41, 0x20, 0xae, 0xa7, 0x8a, 0x6d, 0xf8, 0x66, 0xf8, 0xc2,
	0xd0, 0x7c, 0x51, 0xaf, 0x1b, 0xd1, 0x17, 0x3a, 0x88, 0xf2, 0x2d, 0x3a, 0x70, 0xe5, 0x1a, 0x5b,
	0x51, 0xd6, 0x29, 0x2a, 0x4a, 0x64, 0x2a, 0x84, 0x31, 0x5e, 0xb0, 0x5e, 0x66, 0x0b, 0xab, 0xeb,
	0x2f, 0x63, 0x4c, 0xb8, 0x0a, 0x16, 0x06, 0x7c, 0x8c, 0x63, 0x82, 0xbf, 0xf6, 0xd5, 0xb2, 0xcf,
	0x4d, 0x7e, 0xe8, 0xb3, 0x27, 0x6b, 0xa2, 0x95, 0xb1, 0xf4, 0x5e, 0x0f, 0x7b, 0xe5, 0xf6, 0x62,
	0x5f, 0x74, 0x02, 0x62, 0x1e, 0x47, 0xec, 0x30, 0x6d, 0xfd, 0x20, 0x33, 0x60, 0x41, 0x4a, 0xdf,
	0xa8, 0xcc, 0x3c, 0xae, 0xd9, 0xe3, 0x3a, 0xc8, 0x35, 0x41, 0xd7, 0x49, 0x67, 0x11, 0x9b, 0xc7,
	0xfc, 0xb0, 0x78, 0x26, 0x0c, 0xf4, 0x29, 0x3f, 0x5b, 0x93, 0xa2, 0xfb, 0x3e, 0x50, 0xc4, 0xeb,
	0x2f, 0xaf, 0x81, 0x2c, 0x44, 0xa1, 0x83, 0x86, 0x7e, 0x8d, 0x9e, 0xf3, 0x0f, 0xf4, 0xd4, 0x08,
	0x7b, 0xd1, 0x5f, 0x95, 0xad, 0x0f, 0xad, 0xca, 0x5a, 0x97, 0xd8, 0xc3, 0x32, 0x01, 0x25, 0x5a,
	0xac, 0x30, 0xbc, 0xb2, 0x81, 0x85, 0xf1, 0x99, 0xd9, 0x06, 0x25, 0x84, 0xc5, 0x8b, 0x28, 0x11,
	0x0e, 0x59, 0x57, 0x20, 0x80, 0x1a, 0x18, 0x7e, 0x3f, 0x4c, 0xf3, 0x09, 0xf8, 0x56, 0x16, 0xa4,
	0x3e, 0xe0, 0x9b, 0xb2, 0x53, 0xdf, 0x5a, 0x63, 0xc7, 0x07, 0xa7, 0x20, 0x36, 0xfd, 0x8b, 0x93,
	0x46, 0x87, 0x8f, 0x38, 0xbf, 0x93, 0x16, 0xae, 0x55, 0x27, 0x8d, 0xb1, 0x29, 0x17, 0xd5, 0xae,
	0x20, 0xc8, 0xff, 0xd7, 0x16, 0x8e, 0x4b, 0xb9, 0x0e, 0x55, 0xfd, 0x07, 0x0a, 0x39, 0xa5, 0x0c,
	0x88, 0x44, 0xe8, 0x8a, 0x36, 0xd6, 0xcc, 0x53, 0x0b, 0xaa, 0x72, 0x90, 0xe0, 0xcd, 0xb5, 0xf9,
	0x2a, 0x6c, 0x6c, 0xdd, 0x66, 0xe7, 0x87, 0x4d, 0x59, 0x27, 0xbf, 0xed, 0x7e, 0x48, 0x49, 0xb9,
	0xfe, 0x53, 0x31, 0x56, 0x8f, 0xc4, 0x69, 0x1a, 0x17, 0x3e, 0x76, 0x8a, 0xb1, 0x5b, 0xab, 0x69,
	0x1b, 0xcc, 0x2d, 0x26, 0x2c, 0x4f, 0xb1, 0x87, 0xb6, 0xed, 0x5b, 0x83, 0x0b, 0x3f, 0xe7, 0xa4,
	0xdc, 0xf8, 0x70, 0x0b, 0x1c, 0xdf, 0xb7, 0x68, 0xbf, 0xf7, 0x3f, 0x70, 0x33, 0x3e, 0xd2, 0x02,
	0xc7, 0xf7, 0xd1, 0xd1, 0x63, 0xa3, 0xd8, 0xf8, 0x89, 0x16, 0xb8, 0x14, 0x57, 0x46, 0x0d, 0x1d,
	0x78, 0x52, 0x66, 0x7c, 0xb4, 0x05, 0xe1, 0xc1, 0xe5, 0x51, 0xf3, 0xfa, 0x9e, 0x17, 0x19, 0x3f,
	0xd9, 0x32, 0xaf, 0xb1, 0xa7, 0xc6, 0x98, 0xd5, 0xd3, 0xea, 0x63, 0x7c, 0xac, 0x65, 0xbe, 0x8b,
	0x3d, 0x33, 0xf2, 0x3c, 0x55, 0x39, 0x57, 0xe3, 0xa7, 0xc6, 0xdd, 0xb6, 0xa7, 0xf2, 0x67, 0xfc,
	0xf4, 0x58, 0xd3, 0xfa, 0x63, 0x69, 0xe3, 0x67, 0x5a, 0xe6, 0x55, 0xd6, 0x1c, 0x93, 0xa4, 0xb2,
	0xeb, 0xd2, 0xf8, 0xd9, 0xb1, 0x26, 0xf5, 0x16, 0x74, 0x8c, 0x9f, 0x1b, 0x6b, 0x52, 0x6f, 0x9f,
	0xac, 0xf1, 0xf1, 0x83, 0x11, 0x43, 0xf6, 0xa1, 0x19, 0x3f, 0xdf, 0x32, 0x57, 0xd8, 0xa5, 0xf1,
	0xf6, 0x92, 0xcd, 0x5f, 0xc6, 0x27, 0x0e, 0x76, 0xdd, 0xb2, 0x8f, 0xd6, 0xf8, 0x64, 0x0b, 0xe2,
	0xf7, 0x95, 0xd1, 0xd3, 0xfa, 0x1f, 0xd2, 0x1a, 0x9f, 0x6a, 0x41, 0x58, 0x79, 0x75, 0x7c, 0xf6,
	0xca, 0xbb, 0x9a, 0x8c, 0x4f, 0xb7, 0xcc, 0xb7, 0xb3, 0x6b, 0xa3, 0x66, 0x6a, 0x5b, 0x94, 0x8c,
	0xcf, 0x54, 0xcf, 0x1d, 0xd5, 0x90, 0x64, 0xfc, 0x42, 0xcb, 0xbc, 0xc8, 0x1e, 0xd7, 0xce, 0x1d,
	0xec, 0x2f, 0x32, 0x7e, 0x71, 0xbc, 0xd1, 0x62, 0x57, 0xe3, 0x97, 0x5a, 0xa0, 0xfd, 0xcf, 0x0f,
	0x19, 0xdd, 0xd3, 0xe5, 0x63, 0xfc, 0x72, 0xcb, 0x6c, 0xb2, 0x27, 0x46, 0x2e, 0x9e, 0x0b, 0xd5,
	0xaf, 0x54, 0x33, 0x84, 0x66, 0x79, 0x30, 0x85, 0xc9, 0xbe, 0xf1, 0xab, 0xd5, 0xa4, 0xaa, 0x9a,
	0x93, 0xef, 0xf7, 0x6b, 0x2d, 0xf3, 0x3c, 0x3b, 0xa7, 0x9d, 0xdb, 0x5b, 0x80, 0x36, 0x3e, 0x5b,
	0xcd, 0x76, 0x43, 0xaa, 0xc1, 0xc6, 0xe7, 0xaa, 0x37, 0xe8, 0x1b, 0xf9, 0xeb, 0xd5, 0xfa, 0x75,
	0x9d, 0x67, 0x77, 0xf7, 0x8b, 0xe6, 0x5e, 0xe3, 0xf3, 0xd5, 0x22, 0x5a, 0x59, 0x77, 0x35, 0xbe,
	0x50, 0x2d, 0x00, 0x43, 0xab, 0x9b, 0xc6, 0x6f, 0x1c, 0x68, 0x37, 0x51, 0x07, 0x34, 0xbe, 0x58,
	0x6d, 0x59, 0xfa, 0xab, 0x74, 0xc6, 0x6f, 0x56, 0x8f, 0xed, 0xaf, 0xbf, 0x19, 0x5f, 0x6a, 0x99,
	0x4f, 0xb1, 0x27, 0xab, 0x65, 0x6a, 0xa0, 0xd2, 0x66, 0x7c, 0xb9, 0x65, 0x3e, 0xc3, 0x9e, 0x1e,
	0x3e, 0x43, 0x9f, 0x79, 0x37, 0xbe, 0x52, 0x2d, 0xfa, 0x43, 0x7b, 0x9f, 0x56, 0x8c, 0xdf, 0x6a,
	0x99, 0xe7, 0xd8, 0xa9, 0xea, 0x4d, 0x31, 0xf7, 0x63, 0xfc, 0xf6, 0x08, 0xfd, 0x30, 0x24, 0x4b,
	0x6f, 0xfc, 0xce, 0x88, 0x53, 0x55, 0x67, 0xd8, 0x8d, 0xaf, 0x56, 0x5b, 0xd9, 0xea, 0x77, 0xf4,
	0xc6, 0xd7, 0x46, 0xd1, 0xa2, 0x2a, 0x96, 0x34, 0x7e, 0xb7, 0x65, 0xbe, 0x9b, 0xbd, 0x43, 0x3b,
	0x73, 0xbc, 0x0a, 0x88, 0xf1, 0x7b, 0xe3, 0x1f, 0xb6, 0xaf, 0x0a, 0x60, 0xfc, 0xfe, 0x08, 0x57,
	0xa4, 0x22, 0xf3, 0x6f, 0x7c, 0xbd, 0x65, 0x5e, 0x61, 0x17, 0xf5, 0x44, 0xd2, 0x07, 0xb4, 0xc6,
	0x1f, 0x54, 0xeb, 0xae, 0xaa, 0x98, 0xd1, 0xf8, 0xc3, 0x6a, 0xaa, 0x0e, 0x8f, 0xd0, 0x8d, 0x3f,
	0x6a, 0x99, 0xa7, 0xd9, 0xb2, 0x9a, 0x39, 0x98, 0x5c, 0x31, 0xbe, 0x51, 0x2d, 0x29, 0xfa, 0x20,
	0xd2, 0x78, 0xbd, 0xfa, 0xcc, 0x15, 0x81, 0xa2, 0xf1, 0xc7, 0xe3, 0xdf, 0x4c, 0x5f, 0xc5, 0xc8,
	0xf8, 0x93, 0x6a, 0xff, 0x6b, 0x9c, 0xa0, 0xd2, 0xf8, 0xd3, 0xea, 0xf9, 0xe3, 0x54, 0x10, 0x8d,
	0x6f, 0xb6, 0xcc, 0x67, 0xd9, 0xdb, 0x1f, 0x64, 0xbe, 0xbc, 0xbb, 0x3f, 0xab, 0x26, 0xb0, 0xbe,
	0xd3, 0xdf, 0xf8, 0x56, 0xcb, 0x7c, 0x92, 0x3d, 0x56, 0xad, 0xe2, 0xd5, 0x53, 0x06, 0xba, 0xe0,
	0x3f, 0xaf, 0xc6, 0xaf, 0x9a, 0xe9, 0x4b, 0x79, 0x51, 0xe3, 0x2f, 0x46, 0x38, 0xb8, 0xb8, 0xc0,
	0xfd, 0x18, 0x79, 0x46, 0x3f, 0xff, 0x2f, 0x5b, 0xe6, 0x63, 0xec, 0xac, 0x76, 0x3e, 0x3d, 0xba,
	0x5e, 0xef, 0x76, 0x3a, 0x0e, 0xd8, 0xdf, 0xbf, 0x1a, 0xd3, 0x32, 0xf6, 0x76, 0x1b, 0x1a, 0xdf,
	0x3e, 0xc0, 0xb4, 0xa2, 0xad, 0xcf, 0xf8, 0x4e, 0x35, 0x93, 0x56, 0xb4, 0xcf, 0x19, 0x6f, 0x54,
	0x1b, 0xb0, 0xca, 0xce, 0x38, 0xe3, 0xaf, 0x87, 0x28, 0x00, 0x7d, 0xda, 0xc0, 0xf8, 0x9b, 0x96,
	0x69, 0xb1, 0x93, 0x6a, 0x8a, 0x36, 0xd8, 0x35, 0xfe, 0xb6, 0x65, 0x3e, 0xca, 0x4e, 0xeb, 0xc6,
	0x94, 0x22, 0x5c, 0xe3, 0xbb, 0x2d, 0xf3, 0x24, 0x5b, 0xd2, 0x8d, 0x42, 0x8b, 0x6b, 0xbc, 0x59,
	0xed, 0xb2, 0x0d, 0x46, 0xa8, 0xc6, 0xf7, 0xaa, 0x55, 0xe0, 0xb0, 0x80, 0xd4, 0xf8, 0xbb, 0x6a,
	0xdf, 0x2d, 0xa7, 0x40, 0xf1, 0x66, 0x2a, 0x35, 0xfe, 0xbe, 0x65, 0x5e, 0x66, 0x17, 0x86, 0xef,
	0x53, 0x8e, 0x62, 0x8d, 0xef, 0x57, 0x2b, 0x4c, 0x99, 0x65, 0x56, 0xd6, 0x8f, 0xa6, 0xd3, 0xf5,
	0xff, 0x43, 0xf5, 0xb5, 0xc8, 0x39, 0xc2, 0x5e, 0x95, 0xa6, 0xfc, 0x63, 0xeb, 0xb9, 0xc6, 0xf3,
	0xb5, 0x0f, 0xd5, 0xfe, 0xdf, 0x7f, 0x07, 0x00, 0x00, 0xff, 0xff, 0x6b, 0x7b, 0x75, 0x25, 0x4c,
	0x53, 0x00, 0x00,
}
