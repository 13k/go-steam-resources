// Code generated by protoc-gen-go. DO NOT EDIT.
// source: tf_gcmessages.proto

package tf2

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "."

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type ETFGCMsg int32

const (
	ETFGCMsg_k_EMsgGCReportWarKill                                  ETFGCMsg = 5001
	ETFGCMsg_k_EMsgGCVoteKickBanPlayer                              ETFGCMsg = 5018
	ETFGCMsg_k_EMsgGCVoteKickBanPlayerResult                        ETFGCMsg = 5019
	ETFGCMsg_k_EMsgGCKickPlayer_DEPRECATED                          ETFGCMsg = 5020
	ETFGCMsg_k_EMsgGCStartedTraining_DEPRECATED                     ETFGCMsg = 5021
	ETFGCMsg_k_EMsgGCFreeTrial_ChooseMostHelpfulFriend              ETFGCMsg = 5022
	ETFGCMsg_k_EMsgGCRequestTF2Friends                              ETFGCMsg = 5023
	ETFGCMsg_k_EMsgGCRequestTF2FriendsResponse                      ETFGCMsg = 5024
	ETFGCMsg_k_EMsgGCReplay_SubmitContestEntry                      ETFGCMsg = 5026
	ETFGCMsg_k_EMsgGCReplay_SubmitContestEntryResponse              ETFGCMsg = 5027
	ETFGCMsg_k_EMsgGCSaxxy_Awarded                                  ETFGCMsg = 5029
	ETFGCMsg_k_EMsgGCFreeTrial_ThankedBySomeone                     ETFGCMsg = 5028
	ETFGCMsg_k_EMsgGCFreeTrial_ThankedSomeone                       ETFGCMsg = 5030
	ETFGCMsg_k_EMsgGCFreeTrial_ConvertedToPremium                   ETFGCMsg = 5031
	ETFGCMsg_k_EMsgGCMeetThePyroSilliness_BananaCraft_DEPRECATED    ETFGCMsg = 5032
	ETFGCMsg_k_EMsgGCMVMARG_HighFiveSuccessResponse_DEPRECATED      ETFGCMsg = 5033
	ETFGCMsg_k_EMsgGCMVMARG_HighFiveOnClient_DEPRECATED             ETFGCMsg = 5034
	ETFGCMsg_k_EMsgGCCoaching_AddToCoaches                          ETFGCMsg = 5200
	ETFGCMsg_k_EMsgGCCoaching_AddToCoachesResponse                  ETFGCMsg = 5201
	ETFGCMsg_k_EMsgGCCoaching_RemoveFromCoaches                     ETFGCMsg = 5202
	ETFGCMsg_k_EMsgGCCoaching_RemoveFromCoachesResponse             ETFGCMsg = 5203
	ETFGCMsg_k_EMsgGCCoaching_FindCoach                             ETFGCMsg = 5204
	ETFGCMsg_k_EMsgGCCoaching_FindCoachResponse                     ETFGCMsg = 5205
	ETFGCMsg_k_EMsgGCCoaching_AskCoach                              ETFGCMsg = 5206
	ETFGCMsg_k_EMsgGCCoaching_AskCoachResponse                      ETFGCMsg = 5207
	ETFGCMsg_k_EMsgGCCoaching_CoachJoinGame                         ETFGCMsg = 5208
	ETFGCMsg_k_EMsgGCCoaching_CoachJoining                          ETFGCMsg = 5209
	ETFGCMsg_k_EMsgGCCoaching_CoachJoined                           ETFGCMsg = 5210
	ETFGCMsg_k_EMsgGCCoaching_LikeCurrentCoach                      ETFGCMsg = 5211
	ETFGCMsg_k_EMsgGCCoaching_RemoveCurrentCoach                    ETFGCMsg = 5212
	ETFGCMsg_k_EMsgGCCoaching_AlreadyRatedCoach                     ETFGCMsg = 5213
	ETFGCMsg_k_EMsgGC_Duel_Request                                  ETFGCMsg = 5500
	ETFGCMsg_k_EMsgGC_Duel_Response                                 ETFGCMsg = 5501
	ETFGCMsg_k_EMsgGC_Duel_Results                                  ETFGCMsg = 5502
	ETFGCMsg_k_EMsgGC_Duel_Status                                   ETFGCMsg = 5503
	ETFGCMsg_k_EMsgGC_Halloween_ReservedItem_DEPRECATED             ETFGCMsg = 5600
	ETFGCMsg_k_EMsgGC_Halloween_GrantItem_DEPRECATED                ETFGCMsg = 5601
	ETFGCMsg_k_EMsgGC_Halloween_GrantItemResponse_DEPRECATED        ETFGCMsg = 5604
	ETFGCMsg_k_EMsgGC_Halloween_Cheat_QueryResponse_DEPRECATED      ETFGCMsg = 5605
	ETFGCMsg_k_EMsgGC_Halloween_ItemClaimed_DEPRECATED              ETFGCMsg = 5606
	ETFGCMsg_k_EMsgGC_Halloween_ReservedItem                        ETFGCMsg = 5607
	ETFGCMsg_k_EMsgGC_Halloween_GrantItem                           ETFGCMsg = 5608
	ETFGCMsg_k_EMsgGC_Halloween_GrantItemResponse                   ETFGCMsg = 5609
	ETFGCMsg_k_EMsgGC_Halloween_Cheat_QueryResponse_DEPRECATED_2    ETFGCMsg = 5610
	ETFGCMsg_k_EMsgGC_Halloween_ItemClaimed_DEPRECATED_2            ETFGCMsg = 5611
	ETFGCMsg_k_EMsgGC_Halloween_ServerBossEvent                     ETFGCMsg = 5612
	ETFGCMsg_k_EMsgGC_Halloween_Merasmus2012                        ETFGCMsg = 5613
	ETFGCMsg_k_EMsgGC_Halloween_UpdateMerasmusLootLevel             ETFGCMsg = 5614
	ETFGCMsg_k_EMsgGC_GameServer_LevelInfo                          ETFGCMsg = 5700
	ETFGCMsg_k_EMsgGC_GameServer_AuthChallenge                      ETFGCMsg = 5701
	ETFGCMsg_k_EMsgGC_GameServer_AuthChallengeResponse              ETFGCMsg = 5702
	ETFGCMsg_k_EMsgGC_GameServer_CreateIdentity                     ETFGCMsg = 5703
	ETFGCMsg_k_EMsgGC_GameServer_CreateIdentityResponse             ETFGCMsg = 5704
	ETFGCMsg_k_EMsgGC_GameServer_List                               ETFGCMsg = 5705
	ETFGCMsg_k_EMsgGC_GameServer_ListResponse                       ETFGCMsg = 5706
	ETFGCMsg_k_EMsgGC_GameServer_AuthResult                         ETFGCMsg = 5707
	ETFGCMsg_k_EMsgGC_GameServer_ResetIdentity                      ETFGCMsg = 5708
	ETFGCMsg_k_EMsgGC_GameServer_ResetIdentityResponse              ETFGCMsg = 5709
	ETFGCMsg_k_EMsgGC_Client_UseServerModificationItem              ETFGCMsg = 5710
	ETFGCMsg_k_EMsgGC_Client_UseServerModificationItem_Response     ETFGCMsg = 5711
	ETFGCMsg_k_EMsgGC_GameServer_UseServerModificationItem          ETFGCMsg = 5712
	ETFGCMsg_k_EMsgGC_GameServer_UseServerModificationItem_Response ETFGCMsg = 5713
	ETFGCMsg_k_EMsgGC_GameServer_ServerModificationItemExpired      ETFGCMsg = 5714
	ETFGCMsg_k_EMsgGC_GameServer_ModificationItemState              ETFGCMsg = 5715
	ETFGCMsg_k_EMsgGC_GameServer_AckPolicy                          ETFGCMsg = 5716
	ETFGCMsg_k_EMsgGC_GameServer_AckPolicyResponse                  ETFGCMsg = 5717
	ETFGCMsg_k_EMsgGC_QP_ScoreServers                               ETFGCMsg = 5800
	ETFGCMsg_k_EMsgGC_QP_ScoreServersResponse                       ETFGCMsg = 5801
	ETFGCMsg_k_EMsgGC_QP_PlayerJoining                              ETFGCMsg = 5802
	ETFGCMsg_k_EMsgGC_PickupItemEligibility_Query_DEPRECATED        ETFGCMsg = 6000
	ETFGCMsg_k_EMsgGC_PickupItemEligibility_Query_DEPRECATED_2      ETFGCMsg = 6001
	ETFGCMsg_k_EMsgGC_IncrementKillCountAttribute_DEPRECATED        ETFGCMsg = 6100
	ETFGCMsg_k_EMsgGC_IncrementKillCountResponse_DEPRECATED         ETFGCMsg = 6101
	ETFGCMsg_k_EMsgGCCreateOrUpdateParty                            ETFGCMsg = 6233
	ETFGCMsg_k_EMsgGCAbandonCurrentGame                             ETFGCMsg = 6235
	ETFGCMsg_k_EMsgForceSOCacheResend                               ETFGCMsg = 6237
	ETFGCMsg_k_EMsgGCRequestChatChannelList                         ETFGCMsg = 6260
	ETFGCMsg_k_EMsgGCRequestChatChannelListResponse                 ETFGCMsg = 6261
	ETFGCMsg_k_EMsgGCReadyUp                                        ETFGCMsg = 6270
	ETFGCMsg_k_EMsgGCKickedFromMatchmakingQueue                     ETFGCMsg = 6271
	ETFGCMsg_k_EMsgGCLeaverDetected                                 ETFGCMsg = 6272
	ETFGCMsg_k_EMsgGCLeaverDetectedResponse                         ETFGCMsg = 6287
	ETFGCMsg_k_EMsgGCExitMatchmaking                                ETFGCMsg = 6289
	ETFGCMsg_k_EMsgGCAcceptInvite                                   ETFGCMsg = 6291
	ETFGCMsg_k_EMsgGCAcceptInviteResponse                           ETFGCMsg = 6292
	ETFGCMsg_k_EMsgGCMatchmakingProgress                            ETFGCMsg = 6293
	ETFGCMsg_k_EMsgGCMvMVictoryInfo                                 ETFGCMsg = 6294
	ETFGCMsg_k_EMsgGCGameServerMatchmakingStatus                    ETFGCMsg = 6295
	ETFGCMsg_k_EMsgGCCreateOrUpdatePartyReply                       ETFGCMsg = 6296
	ETFGCMsg_k_EMsgGCMvMVictory                                     ETFGCMsg = 6297
	ETFGCMsg_k_EMsgGCMvMVictoryReply                                ETFGCMsg = 6298
	ETFGCMsg_k_EMsgGCGameServerKickingLobby                         ETFGCMsg = 6299
	ETFGCMsg_k_EMsgGCLeaveGameAndPrepareToJoinParty                 ETFGCMsg = 6300
	ETFGCMsg_k_EMsgGC_UpdatePeriodicEvent                           ETFGCMsg = 6400
	ETFGCMsg_k_EMsgGC_DuckLeaderboard_IndividualUpdate              ETFGCMsg = 6401
	ETFGCMsg_k_EMsgGC_Client2GCEconPreviewDataBlockRequest          ETFGCMsg = 6402
	ETFGCMsg_k_EMsgGC_Client2GCEconPreviewDataBlockResponse         ETFGCMsg = 6403
	ETFGCMsg_k_EMsgGC_ClientVerificationChallenge                   ETFGCMsg = 6500
	ETFGCMsg_k_EMsgGC_ClientVerificationChallengeResponse           ETFGCMsg = 6501
	ETFGCMsg_k_EMsgGC_ClientVerificationVerboseResponse             ETFGCMsg = 6502
	ETFGCMsg_k_EMsgGC_ClientSetItemSlotAttribute                    ETFGCMsg = 6503
	ETFGCMsg_k_EMsgGC_War_IndividualUpdate                          ETFGCMsg = 6505
	ETFGCMsg_k_EMsgGC_War_JoinWar                                   ETFGCMsg = 6506
	ETFGCMsg_k_EMsgGC_War_RequestGlobalStats                        ETFGCMsg = 6507
	ETFGCMsg_k_EMsgGC_War_GlobalStatsResponse                       ETFGCMsg = 6508
	ETFGCMsg_k_EMsgGC_WorldItemPlacement_Attribute                  ETFGCMsg = 6510
	ETFGCMsg_k_EMsgGC_WorldItemPlacement_Update                     ETFGCMsg = 6511
	ETFGCMsg_k_EMsgGC_Match_Result                                  ETFGCMsg = 6512
	ETFGCMsg_k_EMsgGCVoteKickPlayerRequest                          ETFGCMsg = 6513
	ETFGCMsg_k_EMsgGCVoteKickPlayerRequestResponse                  ETFGCMsg = 6514
	ETFGCMsg_k_EMsgGC_DailyCompetitiveStatsRollup                   ETFGCMsg = 6516
	ETFGCMsg_k_EMsgGC_DailyCompetitiveStatsRollup_Response          ETFGCMsg = 6517
	ETFGCMsg_k_EMsgGC_WorldStatusBroadcast                          ETFGCMsg = 6518
	ETFGCMsg_k_EMsgGC_ReportPlayer                                  ETFGCMsg = 6519
	ETFGCMsg_k_EMsgGC_Match_ResultResponse                          ETFGCMsg = 6520
	ETFGCMsg_k_EMsgGCGameServerKickingLobbyResponse                 ETFGCMsg = 6521
	ETFGCMsg_k_EMsgGCPlayerLeftMatch                                ETFGCMsg = 6522
	ETFGCMsg_k_EMsgGCPlayerLeftMatchResponse                        ETFGCMsg = 6523
	ETFGCMsg_k_EMsgGCRequestMatchMakerStats                         ETFGCMsg = 6524
	ETFGCMsg_k_EMsgGCMatchMakerStatsResponse                        ETFGCMsg = 6525
	ETFGCMsg_k_EMsgGCMatchHistoryLoad                               ETFGCMsg = 6526
	ETFGCMsg_k_EMsgGC_AcknowledgeXP                                 ETFGCMsg = 6527
	ETFGCMsg_k_EMsgGCDataCenterPing_Update                          ETFGCMsg = 6528
	ETFGCMsg_k_EMsgGC_NotificationAcknowledge                       ETFGCMsg = 6529
	ETFGCMsg_k_EMsgGC_NotificationAcknowledgeReply                  ETFGCMsg = 6530
	ETFGCMsg_k_EMsgGC_KickPlayerFromLobby                           ETFGCMsg = 6531
	ETFGCMsg_k_EMsgGC_SurveyQuestionRequest                         ETFGCMsg = 6534
	ETFGCMsg_k_EMsgGC_SurveyQuestionResponse                        ETFGCMsg = 6535
	ETFGCMsg_k_EMsgGC_TFClientInit                                  ETFGCMsg = 6536
	ETFGCMsg_k_EMsgGC_NewMatchForLobbyRequest                       ETFGCMsg = 6537
	ETFGCMsg_k_EMsgGC_NewMatchForLobbyResponse                      ETFGCMsg = 6538
	ETFGCMsg_k_EMsgGC_ChangeMatchPlayerTeamsRequest                 ETFGCMsg = 6539
	ETFGCMsg_k_EMsgGC_ChangeMatchPlayerTeamsResponse                ETFGCMsg = 6540
	ETFGCMsg_k_EMsgGCDev_GrantWarKill                               ETFGCMsg = 10001
)

var ETFGCMsg_name = map[int32]string{
	5001:  "k_EMsgGCReportWarKill",
	5018:  "k_EMsgGCVoteKickBanPlayer",
	5019:  "k_EMsgGCVoteKickBanPlayerResult",
	5020:  "k_EMsgGCKickPlayer_DEPRECATED",
	5021:  "k_EMsgGCStartedTraining_DEPRECATED",
	5022:  "k_EMsgGCFreeTrial_ChooseMostHelpfulFriend",
	5023:  "k_EMsgGCRequestTF2Friends",
	5024:  "k_EMsgGCRequestTF2FriendsResponse",
	5026:  "k_EMsgGCReplay_SubmitContestEntry",
	5027:  "k_EMsgGCReplay_SubmitContestEntryResponse",
	5029:  "k_EMsgGCSaxxy_Awarded",
	5028:  "k_EMsgGCFreeTrial_ThankedBySomeone",
	5030:  "k_EMsgGCFreeTrial_ThankedSomeone",
	5031:  "k_EMsgGCFreeTrial_ConvertedToPremium",
	5032:  "k_EMsgGCMeetThePyroSilliness_BananaCraft_DEPRECATED",
	5033:  "k_EMsgGCMVMARG_HighFiveSuccessResponse_DEPRECATED",
	5034:  "k_EMsgGCMVMARG_HighFiveOnClient_DEPRECATED",
	5200:  "k_EMsgGCCoaching_AddToCoaches",
	5201:  "k_EMsgGCCoaching_AddToCoachesResponse",
	5202:  "k_EMsgGCCoaching_RemoveFromCoaches",
	5203:  "k_EMsgGCCoaching_RemoveFromCoachesResponse",
	5204:  "k_EMsgGCCoaching_FindCoach",
	5205:  "k_EMsgGCCoaching_FindCoachResponse",
	5206:  "k_EMsgGCCoaching_AskCoach",
	5207:  "k_EMsgGCCoaching_AskCoachResponse",
	5208:  "k_EMsgGCCoaching_CoachJoinGame",
	5209:  "k_EMsgGCCoaching_CoachJoining",
	5210:  "k_EMsgGCCoaching_CoachJoined",
	5211:  "k_EMsgGCCoaching_LikeCurrentCoach",
	5212:  "k_EMsgGCCoaching_RemoveCurrentCoach",
	5213:  "k_EMsgGCCoaching_AlreadyRatedCoach",
	5500:  "k_EMsgGC_Duel_Request",
	5501:  "k_EMsgGC_Duel_Response",
	5502:  "k_EMsgGC_Duel_Results",
	5503:  "k_EMsgGC_Duel_Status",
	5600:  "k_EMsgGC_Halloween_ReservedItem_DEPRECATED",
	5601:  "k_EMsgGC_Halloween_GrantItem_DEPRECATED",
	5604:  "k_EMsgGC_Halloween_GrantItemResponse_DEPRECATED",
	5605:  "k_EMsgGC_Halloween_Cheat_QueryResponse_DEPRECATED",
	5606:  "k_EMsgGC_Halloween_ItemClaimed_DEPRECATED",
	5607:  "k_EMsgGC_Halloween_ReservedItem",
	5608:  "k_EMsgGC_Halloween_GrantItem",
	5609:  "k_EMsgGC_Halloween_GrantItemResponse",
	5610:  "k_EMsgGC_Halloween_Cheat_QueryResponse_DEPRECATED_2",
	5611:  "k_EMsgGC_Halloween_ItemClaimed_DEPRECATED_2",
	5612:  "k_EMsgGC_Halloween_ServerBossEvent",
	5613:  "k_EMsgGC_Halloween_Merasmus2012",
	5614:  "k_EMsgGC_Halloween_UpdateMerasmusLootLevel",
	5700:  "k_EMsgGC_GameServer_LevelInfo",
	5701:  "k_EMsgGC_GameServer_AuthChallenge",
	5702:  "k_EMsgGC_GameServer_AuthChallengeResponse",
	5703:  "k_EMsgGC_GameServer_CreateIdentity",
	5704:  "k_EMsgGC_GameServer_CreateIdentityResponse",
	5705:  "k_EMsgGC_GameServer_List",
	5706:  "k_EMsgGC_GameServer_ListResponse",
	5707:  "k_EMsgGC_GameServer_AuthResult",
	5708:  "k_EMsgGC_GameServer_ResetIdentity",
	5709:  "k_EMsgGC_GameServer_ResetIdentityResponse",
	5710:  "k_EMsgGC_Client_UseServerModificationItem",
	5711:  "k_EMsgGC_Client_UseServerModificationItem_Response",
	5712:  "k_EMsgGC_GameServer_UseServerModificationItem",
	5713:  "k_EMsgGC_GameServer_UseServerModificationItem_Response",
	5714:  "k_EMsgGC_GameServer_ServerModificationItemExpired",
	5715:  "k_EMsgGC_GameServer_ModificationItemState",
	5716:  "k_EMsgGC_GameServer_AckPolicy",
	5717:  "k_EMsgGC_GameServer_AckPolicyResponse",
	5800:  "k_EMsgGC_QP_ScoreServers",
	5801:  "k_EMsgGC_QP_ScoreServersResponse",
	5802:  "k_EMsgGC_QP_PlayerJoining",
	6000:  "k_EMsgGC_PickupItemEligibility_Query_DEPRECATED",
	6001:  "k_EMsgGC_PickupItemEligibility_Query_DEPRECATED_2",
	6100:  "k_EMsgGC_IncrementKillCountAttribute_DEPRECATED",
	6101:  "k_EMsgGC_IncrementKillCountResponse_DEPRECATED",
	6233:  "k_EMsgGCCreateOrUpdateParty",
	6235:  "k_EMsgGCAbandonCurrentGame",
	6237:  "k_EMsgForceSOCacheResend",
	6260:  "k_EMsgGCRequestChatChannelList",
	6261:  "k_EMsgGCRequestChatChannelListResponse",
	6270:  "k_EMsgGCReadyUp",
	6271:  "k_EMsgGCKickedFromMatchmakingQueue",
	6272:  "k_EMsgGCLeaverDetected",
	6287:  "k_EMsgGCLeaverDetectedResponse",
	6289:  "k_EMsgGCExitMatchmaking",
	6291:  "k_EMsgGCAcceptInvite",
	6292:  "k_EMsgGCAcceptInviteResponse",
	6293:  "k_EMsgGCMatchmakingProgress",
	6294:  "k_EMsgGCMvMVictoryInfo",
	6295:  "k_EMsgGCGameServerMatchmakingStatus",
	6296:  "k_EMsgGCCreateOrUpdatePartyReply",
	6297:  "k_EMsgGCMvMVictory",
	6298:  "k_EMsgGCMvMVictoryReply",
	6299:  "k_EMsgGCGameServerKickingLobby",
	6300:  "k_EMsgGCLeaveGameAndPrepareToJoinParty",
	6400:  "k_EMsgGC_UpdatePeriodicEvent",
	6401:  "k_EMsgGC_DuckLeaderboard_IndividualUpdate",
	6402:  "k_EMsgGC_Client2GCEconPreviewDataBlockRequest",
	6403:  "k_EMsgGC_Client2GCEconPreviewDataBlockResponse",
	6500:  "k_EMsgGC_ClientVerificationChallenge",
	6501:  "k_EMsgGC_ClientVerificationChallengeResponse",
	6502:  "k_EMsgGC_ClientVerificationVerboseResponse",
	6503:  "k_EMsgGC_ClientSetItemSlotAttribute",
	6505:  "k_EMsgGC_War_IndividualUpdate",
	6506:  "k_EMsgGC_War_JoinWar",
	6507:  "k_EMsgGC_War_RequestGlobalStats",
	6508:  "k_EMsgGC_War_GlobalStatsResponse",
	6510:  "k_EMsgGC_WorldItemPlacement_Attribute",
	6511:  "k_EMsgGC_WorldItemPlacement_Update",
	6512:  "k_EMsgGC_Match_Result",
	6513:  "k_EMsgGCVoteKickPlayerRequest",
	6514:  "k_EMsgGCVoteKickPlayerRequestResponse",
	6516:  "k_EMsgGC_DailyCompetitiveStatsRollup",
	6517:  "k_EMsgGC_DailyCompetitiveStatsRollup_Response",
	6518:  "k_EMsgGC_WorldStatusBroadcast",
	6519:  "k_EMsgGC_ReportPlayer",
	6520:  "k_EMsgGC_Match_ResultResponse",
	6521:  "k_EMsgGCGameServerKickingLobbyResponse",
	6522:  "k_EMsgGCPlayerLeftMatch",
	6523:  "k_EMsgGCPlayerLeftMatchResponse",
	6524:  "k_EMsgGCRequestMatchMakerStats",
	6525:  "k_EMsgGCMatchMakerStatsResponse",
	6526:  "k_EMsgGCMatchHistoryLoad",
	6527:  "k_EMsgGC_AcknowledgeXP",
	6528:  "k_EMsgGCDataCenterPing_Update",
	6529:  "k_EMsgGC_NotificationAcknowledge",
	6530:  "k_EMsgGC_NotificationAcknowledgeReply",
	6531:  "k_EMsgGC_KickPlayerFromLobby",
	6534:  "k_EMsgGC_SurveyQuestionRequest",
	6535:  "k_EMsgGC_SurveyQuestionResponse",
	6536:  "k_EMsgGC_TFClientInit",
	6537:  "k_EMsgGC_NewMatchForLobbyRequest",
	6538:  "k_EMsgGC_NewMatchForLobbyResponse",
	6539:  "k_EMsgGC_ChangeMatchPlayerTeamsRequest",
	6540:  "k_EMsgGC_ChangeMatchPlayerTeamsResponse",
	10001: "k_EMsgGCDev_GrantWarKill",
}
var ETFGCMsg_value = map[string]int32{
	"k_EMsgGCReportWarKill":                                  5001,
	"k_EMsgGCVoteKickBanPlayer":                              5018,
	"k_EMsgGCVoteKickBanPlayerResult":                        5019,
	"k_EMsgGCKickPlayer_DEPRECATED":                          5020,
	"k_EMsgGCStartedTraining_DEPRECATED":                     5021,
	"k_EMsgGCFreeTrial_ChooseMostHelpfulFriend":              5022,
	"k_EMsgGCRequestTF2Friends":                              5023,
	"k_EMsgGCRequestTF2FriendsResponse":                      5024,
	"k_EMsgGCReplay_SubmitContestEntry":                      5026,
	"k_EMsgGCReplay_SubmitContestEntryResponse":              5027,
	"k_EMsgGCSaxxy_Awarded":                                  5029,
	"k_EMsgGCFreeTrial_ThankedBySomeone":                     5028,
	"k_EMsgGCFreeTrial_ThankedSomeone":                       5030,
	"k_EMsgGCFreeTrial_ConvertedToPremium":                   5031,
	"k_EMsgGCMeetThePyroSilliness_BananaCraft_DEPRECATED":    5032,
	"k_EMsgGCMVMARG_HighFiveSuccessResponse_DEPRECATED":      5033,
	"k_EMsgGCMVMARG_HighFiveOnClient_DEPRECATED":             5034,
	"k_EMsgGCCoaching_AddToCoaches":                          5200,
	"k_EMsgGCCoaching_AddToCoachesResponse":                  5201,
	"k_EMsgGCCoaching_RemoveFromCoaches":                     5202,
	"k_EMsgGCCoaching_RemoveFromCoachesResponse":             5203,
	"k_EMsgGCCoaching_FindCoach":                             5204,
	"k_EMsgGCCoaching_FindCoachResponse":                     5205,
	"k_EMsgGCCoaching_AskCoach":                              5206,
	"k_EMsgGCCoaching_AskCoachResponse":                      5207,
	"k_EMsgGCCoaching_CoachJoinGame":                         5208,
	"k_EMsgGCCoaching_CoachJoining":                          5209,
	"k_EMsgGCCoaching_CoachJoined":                           5210,
	"k_EMsgGCCoaching_LikeCurrentCoach":                      5211,
	"k_EMsgGCCoaching_RemoveCurrentCoach":                    5212,
	"k_EMsgGCCoaching_AlreadyRatedCoach":                     5213,
	"k_EMsgGC_Duel_Request":                                  5500,
	"k_EMsgGC_Duel_Response":                                 5501,
	"k_EMsgGC_Duel_Results":                                  5502,
	"k_EMsgGC_Duel_Status":                                   5503,
	"k_EMsgGC_Halloween_ReservedItem_DEPRECATED":             5600,
	"k_EMsgGC_Halloween_GrantItem_DEPRECATED":                5601,
	"k_EMsgGC_Halloween_GrantItemResponse_DEPRECATED":        5604,
	"k_EMsgGC_Halloween_Cheat_QueryResponse_DEPRECATED":      5605,
	"k_EMsgGC_Halloween_ItemClaimed_DEPRECATED":              5606,
	"k_EMsgGC_Halloween_ReservedItem":                        5607,
	"k_EMsgGC_Halloween_GrantItem":                           5608,
	"k_EMsgGC_Halloween_GrantItemResponse":                   5609,
	"k_EMsgGC_Halloween_Cheat_QueryResponse_DEPRECATED_2":    5610,
	"k_EMsgGC_Halloween_ItemClaimed_DEPRECATED_2":            5611,
	"k_EMsgGC_Halloween_ServerBossEvent":                     5612,
	"k_EMsgGC_Halloween_Merasmus2012":                        5613,
	"k_EMsgGC_Halloween_UpdateMerasmusLootLevel":             5614,
	"k_EMsgGC_GameServer_LevelInfo":                          5700,
	"k_EMsgGC_GameServer_AuthChallenge":                      5701,
	"k_EMsgGC_GameServer_AuthChallengeResponse":              5702,
	"k_EMsgGC_GameServer_CreateIdentity":                     5703,
	"k_EMsgGC_GameServer_CreateIdentityResponse":             5704,
	"k_EMsgGC_GameServer_List":                               5705,
	"k_EMsgGC_GameServer_ListResponse":                       5706,
	"k_EMsgGC_GameServer_AuthResult":                         5707,
	"k_EMsgGC_GameServer_ResetIdentity":                      5708,
	"k_EMsgGC_GameServer_ResetIdentityResponse":              5709,
	"k_EMsgGC_Client_UseServerModificationItem":              5710,
	"k_EMsgGC_Client_UseServerModificationItem_Response":     5711,
	"k_EMsgGC_GameServer_UseServerModificationItem":          5712,
	"k_EMsgGC_GameServer_UseServerModificationItem_Response": 5713,
	"k_EMsgGC_GameServer_ServerModificationItemExpired":      5714,
	"k_EMsgGC_GameServer_ModificationItemState":              5715,
	"k_EMsgGC_GameServer_AckPolicy":                          5716,
	"k_EMsgGC_GameServer_AckPolicyResponse":                  5717,
	"k_EMsgGC_QP_ScoreServers":                               5800,
	"k_EMsgGC_QP_ScoreServersResponse":                       5801,
	"k_EMsgGC_QP_PlayerJoining":                              5802,
	"k_EMsgGC_PickupItemEligibility_Query_DEPRECATED":        6000,
	"k_EMsgGC_PickupItemEligibility_Query_DEPRECATED_2":      6001,
	"k_EMsgGC_IncrementKillCountAttribute_DEPRECATED":        6100,
	"k_EMsgGC_IncrementKillCountResponse_DEPRECATED":         6101,
	"k_EMsgGCCreateOrUpdateParty":                            6233,
	"k_EMsgGCAbandonCurrentGame":                             6235,
	"k_EMsgForceSOCacheResend":                               6237,
	"k_EMsgGCRequestChatChannelList":                         6260,
	"k_EMsgGCRequestChatChannelListResponse":                 6261,
	"k_EMsgGCReadyUp":                                        6270,
	"k_EMsgGCKickedFromMatchmakingQueue":                     6271,
	"k_EMsgGCLeaverDetected":                                 6272,
	"k_EMsgGCLeaverDetectedResponse":                         6287,
	"k_EMsgGCExitMatchmaking":                                6289,
	"k_EMsgGCAcceptInvite":                                   6291,
	"k_EMsgGCAcceptInviteResponse":                           6292,
	"k_EMsgGCMatchmakingProgress":                            6293,
	"k_EMsgGCMvMVictoryInfo":                                 6294,
	"k_EMsgGCGameServerMatchmakingStatus":                    6295,
	"k_EMsgGCCreateOrUpdatePartyReply":                       6296,
	"k_EMsgGCMvMVictory":                                     6297,
	"k_EMsgGCMvMVictoryReply":                                6298,
	"k_EMsgGCGameServerKickingLobby":                         6299,
	"k_EMsgGCLeaveGameAndPrepareToJoinParty":                 6300,
	"k_EMsgGC_UpdatePeriodicEvent":                           6400,
	"k_EMsgGC_DuckLeaderboard_IndividualUpdate":              6401,
	"k_EMsgGC_Client2GCEconPreviewDataBlockRequest":          6402,
	"k_EMsgGC_Client2GCEconPreviewDataBlockResponse":         6403,
	"k_EMsgGC_ClientVerificationChallenge":                   6500,
	"k_EMsgGC_ClientVerificationChallengeResponse":           6501,
	"k_EMsgGC_ClientVerificationVerboseResponse":             6502,
	"k_EMsgGC_ClientSetItemSlotAttribute":                    6503,
	"k_EMsgGC_War_IndividualUpdate":                          6505,
	"k_EMsgGC_War_JoinWar":                                   6506,
	"k_EMsgGC_War_RequestGlobalStats":                        6507,
	"k_EMsgGC_War_GlobalStatsResponse":                       6508,
	"k_EMsgGC_WorldItemPlacement_Attribute":                  6510,
	"k_EMsgGC_WorldItemPlacement_Update":                     6511,
	"k_EMsgGC_Match_Result":                                  6512,
	"k_EMsgGCVoteKickPlayerRequest":                          6513,
	"k_EMsgGCVoteKickPlayerRequestResponse":                  6514,
	"k_EMsgGC_DailyCompetitiveStatsRollup":                   6516,
	"k_EMsgGC_DailyCompetitiveStatsRollup_Response":          6517,
	"k_EMsgGC_WorldStatusBroadcast":                          6518,
	"k_EMsgGC_ReportPlayer":                                  6519,
	"k_EMsgGC_Match_ResultResponse":                          6520,
	"k_EMsgGCGameServerKickingLobbyResponse":                 6521,
	"k_EMsgGCPlayerLeftMatch":                                6522,
	"k_EMsgGCPlayerLeftMatchResponse":                        6523,
	"k_EMsgGCRequestMatchMakerStats":                         6524,
	"k_EMsgGCMatchMakerStatsResponse":                        6525,
	"k_EMsgGCMatchHistoryLoad":                               6526,
	"k_EMsgGC_AcknowledgeXP":                                 6527,
	"k_EMsgGCDataCenterPing_Update":                          6528,
	"k_EMsgGC_NotificationAcknowledge":                       6529,
	"k_EMsgGC_NotificationAcknowledgeReply":                  6530,
	"k_EMsgGC_KickPlayerFromLobby":                           6531,
	"k_EMsgGC_SurveyQuestionRequest":                         6534,
	"k_EMsgGC_SurveyQuestionResponse":                        6535,
	"k_EMsgGC_TFClientInit":                                  6536,
	"k_EMsgGC_NewMatchForLobbyRequest":                       6537,
	"k_EMsgGC_NewMatchForLobbyResponse":                      6538,
	"k_EMsgGC_ChangeMatchPlayerTeamsRequest":                 6539,
	"k_EMsgGC_ChangeMatchPlayerTeamsResponse":                6540,
	"k_EMsgGCDev_GrantWarKill":                               10001,
}

func (x ETFGCMsg) Enum() *ETFGCMsg {
	p := new(ETFGCMsg)
	*p = x
	return p
}
func (x ETFGCMsg) String() string {
	return proto.EnumName(ETFGCMsg_name, int32(x))
}
func (x *ETFGCMsg) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ETFGCMsg_value, data, "ETFGCMsg")
	if err != nil {
		return err
	}
	*x = ETFGCMsg(value)
	return nil
}
func (ETFGCMsg) EnumDescriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

type EServerModificationItemType int32

const (
	EServerModificationItemType_kGameServerModificationItem_Halloween EServerModificationItemType = 1
)

var EServerModificationItemType_name = map[int32]string{
	1: "kGameServerModificationItem_Halloween",
}
var EServerModificationItemType_value = map[string]int32{
	"kGameServerModificationItem_Halloween": 1,
}

func (x EServerModificationItemType) Enum() *EServerModificationItemType {
	p := new(EServerModificationItemType)
	*p = x
	return p
}
func (x EServerModificationItemType) String() string {
	return proto.EnumName(EServerModificationItemType_name, int32(x))
}
func (x *EServerModificationItemType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EServerModificationItemType_value, data, "EServerModificationItemType")
	if err != nil {
		return err
	}
	*x = EServerModificationItemType(value)
	return nil
}
func (EServerModificationItemType) EnumDescriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

type TF_MatchmakingMode int32

const (
	TF_MatchmakingMode_TF_Matchmaking_INVALID TF_MatchmakingMode = 0
	TF_MatchmakingMode_TF_Matchmaking_MVM     TF_MatchmakingMode = 1
	TF_MatchmakingMode_TF_Matchmaking_LADDER  TF_MatchmakingMode = 2
	TF_MatchmakingMode_TF_Matchmaking_CASUAL  TF_MatchmakingMode = 3
)

var TF_MatchmakingMode_name = map[int32]string{
	0: "TF_Matchmaking_INVALID",
	1: "TF_Matchmaking_MVM",
	2: "TF_Matchmaking_LADDER",
	3: "TF_Matchmaking_CASUAL",
}
var TF_MatchmakingMode_value = map[string]int32{
	"TF_Matchmaking_INVALID": 0,
	"TF_Matchmaking_MVM":     1,
	"TF_Matchmaking_LADDER":  2,
	"TF_Matchmaking_CASUAL":  3,
}

func (x TF_MatchmakingMode) Enum() *TF_MatchmakingMode {
	p := new(TF_MatchmakingMode)
	*p = x
	return p
}
func (x TF_MatchmakingMode) String() string {
	return proto.EnumName(TF_MatchmakingMode_name, int32(x))
}
func (x *TF_MatchmakingMode) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(TF_MatchmakingMode_value, data, "TF_MatchmakingMode")
	if err != nil {
		return err
	}
	*x = TF_MatchmakingMode(value)
	return nil
}
func (TF_MatchmakingMode) EnumDescriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

type TF_Matchmaking_WizardStep int32

const (
	TF_Matchmaking_WizardStep_TF_Matchmaking_WizardStep_INVALID                      TF_Matchmaking_WizardStep = 0
	TF_Matchmaking_WizardStep_TF_Matchmaking_WizardStep_MVM_PLAY_FOR_BRAGGING_RIGHTS TF_Matchmaking_WizardStep = 1
	TF_Matchmaking_WizardStep_TF_Matchmaking_WizardStep_MVM_TOUR_OF_DUTY             TF_Matchmaking_WizardStep = 2
	TF_Matchmaking_WizardStep_TF_Matchmaking_WizardStep_MVM_CHALLENGE                TF_Matchmaking_WizardStep = 3
	TF_Matchmaking_WizardStep_TF_Matchmaking_WizardStep_SEARCHING                    TF_Matchmaking_WizardStep = 4
	TF_Matchmaking_WizardStep_TF_Matchmaking_WizardStep_LADDER                       TF_Matchmaking_WizardStep = 5
	TF_Matchmaking_WizardStep_TF_Matchmaking_WizardStep_CASUAL                       TF_Matchmaking_WizardStep = 6
)

var TF_Matchmaking_WizardStep_name = map[int32]string{
	0: "TF_Matchmaking_WizardStep_INVALID",
	1: "TF_Matchmaking_WizardStep_MVM_PLAY_FOR_BRAGGING_RIGHTS",
	2: "TF_Matchmaking_WizardStep_MVM_TOUR_OF_DUTY",
	3: "TF_Matchmaking_WizardStep_MVM_CHALLENGE",
	4: "TF_Matchmaking_WizardStep_SEARCHING",
	5: "TF_Matchmaking_WizardStep_LADDER",
	6: "TF_Matchmaking_WizardStep_CASUAL",
}
var TF_Matchmaking_WizardStep_value = map[string]int32{
	"TF_Matchmaking_WizardStep_INVALID":                      0,
	"TF_Matchmaking_WizardStep_MVM_PLAY_FOR_BRAGGING_RIGHTS": 1,
	"TF_Matchmaking_WizardStep_MVM_TOUR_OF_DUTY":             2,
	"TF_Matchmaking_WizardStep_MVM_CHALLENGE":                3,
	"TF_Matchmaking_WizardStep_SEARCHING":                    4,
	"TF_Matchmaking_WizardStep_LADDER":                       5,
	"TF_Matchmaking_WizardStep_CASUAL":                       6,
}

func (x TF_Matchmaking_WizardStep) Enum() *TF_Matchmaking_WizardStep {
	p := new(TF_Matchmaking_WizardStep)
	*p = x
	return p
}
func (x TF_Matchmaking_WizardStep) String() string {
	return proto.EnumName(TF_Matchmaking_WizardStep_name, int32(x))
}
func (x *TF_Matchmaking_WizardStep) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(TF_Matchmaking_WizardStep_value, data, "TF_Matchmaking_WizardStep")
	if err != nil {
		return err
	}
	*x = TF_Matchmaking_WizardStep(value)
	return nil
}
func (TF_Matchmaking_WizardStep) EnumDescriptor() ([]byte, []int) { return fileDescriptor1, []int{3} }

type TF_GC_GameState int32

const (
	TF_GC_GameState_TF_GC_GAMESTATE_STATE_INIT               TF_GC_GameState = 0
	TF_GC_GameState_TF_GC_GAMESTATE_WAIT_FOR_PLAYERS_TO_LOAD TF_GC_GameState = 1
	TF_GC_GameState_TF_GC_GAMESTATE_STRATEGY_TIME            TF_GC_GameState = 3
	TF_GC_GameState_TF_GC_GAMESTATE_GAME_IN_PROGRESS         TF_GC_GameState = 5
	TF_GC_GameState_TF_GC_GAMESTATE_POST_GAME                TF_GC_GameState = 6
	TF_GC_GameState_TF_GC_GAMESTATE_DISCONNECT               TF_GC_GameState = 7
	TF_GC_GameState_TF_GC_GAMESTATE_LAST                     TF_GC_GameState = 8
)

var TF_GC_GameState_name = map[int32]string{
	0: "TF_GC_GAMESTATE_STATE_INIT",
	1: "TF_GC_GAMESTATE_WAIT_FOR_PLAYERS_TO_LOAD",
	3: "TF_GC_GAMESTATE_STRATEGY_TIME",
	5: "TF_GC_GAMESTATE_GAME_IN_PROGRESS",
	6: "TF_GC_GAMESTATE_POST_GAME",
	7: "TF_GC_GAMESTATE_DISCONNECT",
	8: "TF_GC_GAMESTATE_LAST",
}
var TF_GC_GameState_value = map[string]int32{
	"TF_GC_GAMESTATE_STATE_INIT":               0,
	"TF_GC_GAMESTATE_WAIT_FOR_PLAYERS_TO_LOAD": 1,
	"TF_GC_GAMESTATE_STRATEGY_TIME":            3,
	"TF_GC_GAMESTATE_GAME_IN_PROGRESS":         5,
	"TF_GC_GAMESTATE_POST_GAME":                6,
	"TF_GC_GAMESTATE_DISCONNECT":               7,
	"TF_GC_GAMESTATE_LAST":                     8,
}

func (x TF_GC_GameState) Enum() *TF_GC_GameState {
	p := new(TF_GC_GameState)
	*p = x
	return p
}
func (x TF_GC_GameState) String() string {
	return proto.EnumName(TF_GC_GameState_name, int32(x))
}
func (x *TF_GC_GameState) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(TF_GC_GameState_value, data, "TF_GC_GameState")
	if err != nil {
		return err
	}
	*x = TF_GC_GameState(value)
	return nil
}
func (TF_GC_GameState) EnumDescriptor() ([]byte, []int) { return fileDescriptor1, []int{4} }

type TF_GC_TEAM int32

const (
	TF_GC_TEAM_TF_GC_TEAM_DEFENDERS   TF_GC_TEAM = 0
	TF_GC_TEAM_TF_GC_TEAM_INVADERS    TF_GC_TEAM = 1
	TF_GC_TEAM_TF_GC_TEAM_BROADCASTER TF_GC_TEAM = 2
	TF_GC_TEAM_TF_GC_TEAM_SPECTATOR   TF_GC_TEAM = 3
	TF_GC_TEAM_TF_GC_TEAM_PLAYER_POOL TF_GC_TEAM = 4
	TF_GC_TEAM_TF_GC_TEAM_NOTEAM      TF_GC_TEAM = 5
)

var TF_GC_TEAM_name = map[int32]string{
	0: "TF_GC_TEAM_DEFENDERS",
	1: "TF_GC_TEAM_INVADERS",
	2: "TF_GC_TEAM_BROADCASTER",
	3: "TF_GC_TEAM_SPECTATOR",
	4: "TF_GC_TEAM_PLAYER_POOL",
	5: "TF_GC_TEAM_NOTEAM",
}
var TF_GC_TEAM_value = map[string]int32{
	"TF_GC_TEAM_DEFENDERS":   0,
	"TF_GC_TEAM_INVADERS":    1,
	"TF_GC_TEAM_BROADCASTER": 2,
	"TF_GC_TEAM_SPECTATOR":   3,
	"TF_GC_TEAM_PLAYER_POOL": 4,
	"TF_GC_TEAM_NOTEAM":      5,
}

func (x TF_GC_TEAM) Enum() *TF_GC_TEAM {
	p := new(TF_GC_TEAM)
	*p = x
	return p
}
func (x TF_GC_TEAM) String() string {
	return proto.EnumName(TF_GC_TEAM_name, int32(x))
}
func (x *TF_GC_TEAM) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(TF_GC_TEAM_value, data, "TF_GC_TEAM")
	if err != nil {
		return err
	}
	*x = TF_GC_TEAM(value)
	return nil
}
func (TF_GC_TEAM) EnumDescriptor() ([]byte, []int) { return fileDescriptor1, []int{5} }

type TFMatchLeaveReason int32

const (
	TFMatchLeaveReason_TFMatchLeaveReason_UNSPECIFIED TFMatchLeaveReason = 0
	TFMatchLeaveReason_TFMatchLeaveReason_VOTE_KICK   TFMatchLeaveReason = 1
	TFMatchLeaveReason_TFMatchLeaveReason_IDLE        TFMatchLeaveReason = 2
	TFMatchLeaveReason_TFMatchLeaveReason_ADMIN_KICK  TFMatchLeaveReason = 3
	TFMatchLeaveReason_TFMatchLeaveReason_AWOL        TFMatchLeaveReason = 4
	TFMatchLeaveReason_TFMatchLeaveReason_NO_SHOW     TFMatchLeaveReason = 5
	TFMatchLeaveReason_TFMatchLeaveReason_GC_REMOVED  TFMatchLeaveReason = 6
)

var TFMatchLeaveReason_name = map[int32]string{
	0: "TFMatchLeaveReason_UNSPECIFIED",
	1: "TFMatchLeaveReason_VOTE_KICK",
	2: "TFMatchLeaveReason_IDLE",
	3: "TFMatchLeaveReason_ADMIN_KICK",
	4: "TFMatchLeaveReason_AWOL",
	5: "TFMatchLeaveReason_NO_SHOW",
	6: "TFMatchLeaveReason_GC_REMOVED",
}
var TFMatchLeaveReason_value = map[string]int32{
	"TFMatchLeaveReason_UNSPECIFIED": 0,
	"TFMatchLeaveReason_VOTE_KICK":   1,
	"TFMatchLeaveReason_IDLE":        2,
	"TFMatchLeaveReason_ADMIN_KICK":  3,
	"TFMatchLeaveReason_AWOL":        4,
	"TFMatchLeaveReason_NO_SHOW":     5,
	"TFMatchLeaveReason_GC_REMOVED":  6,
}

func (x TFMatchLeaveReason) Enum() *TFMatchLeaveReason {
	p := new(TFMatchLeaveReason)
	*p = x
	return p
}
func (x TFMatchLeaveReason) String() string {
	return proto.EnumName(TFMatchLeaveReason_name, int32(x))
}
func (x *TFMatchLeaveReason) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(TFMatchLeaveReason_value, data, "TFMatchLeaveReason")
	if err != nil {
		return err
	}
	*x = TFMatchLeaveReason(value)
	return nil
}
func (TFMatchLeaveReason) EnumDescriptor() ([]byte, []int) { return fileDescriptor1, []int{6} }

type TFLobbyReadyState int32

const (
	TFLobbyReadyState_TFLobbyReadyState_UNDECLARED TFLobbyReadyState = 0
	TFLobbyReadyState_TFLobbyReadyState_ACCEPTED   TFLobbyReadyState = 1
	TFLobbyReadyState_TFLobbyReadyState_DECLINED   TFLobbyReadyState = 2
)

var TFLobbyReadyState_name = map[int32]string{
	0: "TFLobbyReadyState_UNDECLARED",
	1: "TFLobbyReadyState_ACCEPTED",
	2: "TFLobbyReadyState_DECLINED",
}
var TFLobbyReadyState_value = map[string]int32{
	"TFLobbyReadyState_UNDECLARED": 0,
	"TFLobbyReadyState_ACCEPTED":   1,
	"TFLobbyReadyState_DECLINED":   2,
}

func (x TFLobbyReadyState) Enum() *TFLobbyReadyState {
	p := new(TFLobbyReadyState)
	*p = x
	return p
}
func (x TFLobbyReadyState) String() string {
	return proto.EnumName(TFLobbyReadyState_name, int32(x))
}
func (x *TFLobbyReadyState) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(TFLobbyReadyState_value, data, "TFLobbyReadyState")
	if err != nil {
		return err
	}
	*x = TFLobbyReadyState(value)
	return nil
}
func (TFLobbyReadyState) EnumDescriptor() ([]byte, []int) { return fileDescriptor1, []int{7} }

type ChatChannelTypeT int32

const (
	ChatChannelTypeT_ChatChannelType_Regional ChatChannelTypeT = 0
	ChatChannelTypeT_ChatChannelType_Custom   ChatChannelTypeT = 1
	ChatChannelTypeT_ChatChannelType_Party    ChatChannelTypeT = 2
	ChatChannelTypeT_ChatChannelType_Lobby    ChatChannelTypeT = 3
)

var ChatChannelTypeT_name = map[int32]string{
	0: "ChatChannelType_Regional",
	1: "ChatChannelType_Custom",
	2: "ChatChannelType_Party",
	3: "ChatChannelType_Lobby",
}
var ChatChannelTypeT_value = map[string]int32{
	"ChatChannelType_Regional": 0,
	"ChatChannelType_Custom":   1,
	"ChatChannelType_Party":    2,
	"ChatChannelType_Lobby":    3,
}

func (x ChatChannelTypeT) Enum() *ChatChannelTypeT {
	p := new(ChatChannelTypeT)
	*p = x
	return p
}
func (x ChatChannelTypeT) String() string {
	return proto.EnumName(ChatChannelTypeT_name, int32(x))
}
func (x *ChatChannelTypeT) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ChatChannelTypeT_value, data, "ChatChannelTypeT")
	if err != nil {
		return err
	}
	*x = ChatChannelTypeT(value)
	return nil
}
func (ChatChannelTypeT) EnumDescriptor() ([]byte, []int) { return fileDescriptor1, []int{8} }

type ServerMatchmakingState int32

const (
	ServerMatchmakingState_ServerMatchmakingState_INVALID                           ServerMatchmakingState = 0
	ServerMatchmakingState_ServerMatchmakingState_NOT_PARTICIPATING                 ServerMatchmakingState = 1
	ServerMatchmakingState_ServerMatchmakingState_EMPTY                             ServerMatchmakingState = 2
	ServerMatchmakingState_ServerMatchmakingState_ACTIVE_MATCH_REQUESTING_LATE_JOIN ServerMatchmakingState = 3
	ServerMatchmakingState_ServerMatchmakingState_ACTIVE_MATCH                      ServerMatchmakingState = 4
)

var ServerMatchmakingState_name = map[int32]string{
	0: "ServerMatchmakingState_INVALID",
	1: "ServerMatchmakingState_NOT_PARTICIPATING",
	2: "ServerMatchmakingState_EMPTY",
	3: "ServerMatchmakingState_ACTIVE_MATCH_REQUESTING_LATE_JOIN",
	4: "ServerMatchmakingState_ACTIVE_MATCH",
}
var ServerMatchmakingState_value = map[string]int32{
	"ServerMatchmakingState_INVALID":                           0,
	"ServerMatchmakingState_NOT_PARTICIPATING":                 1,
	"ServerMatchmakingState_EMPTY":                             2,
	"ServerMatchmakingState_ACTIVE_MATCH_REQUESTING_LATE_JOIN": 3,
	"ServerMatchmakingState_ACTIVE_MATCH":                      4,
}

func (x ServerMatchmakingState) Enum() *ServerMatchmakingState {
	p := new(ServerMatchmakingState)
	*p = x
	return p
}
func (x ServerMatchmakingState) String() string {
	return proto.EnumName(ServerMatchmakingState_name, int32(x))
}
func (x *ServerMatchmakingState) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ServerMatchmakingState_value, data, "ServerMatchmakingState")
	if err != nil {
		return err
	}
	*x = ServerMatchmakingState(value)
	return nil
}
func (ServerMatchmakingState) EnumDescriptor() ([]byte, []int) { return fileDescriptor1, []int{9} }

type SurveyQuestionType int32

const (
	SurveyQuestionType_QUESTION_MATCH_QUALITY  SurveyQuestionType = 0
	SurveyQuestionType_QUESTION_MAP_QUALITY    SurveyQuestionType = 1
	SurveyQuestionType_QUESTION_COMP_INQUIRY   SurveyQuestionType = 2
	SurveyQuestionType_QUESTION_CASUAL_INQUIRY SurveyQuestionType = 3
)

var SurveyQuestionType_name = map[int32]string{
	0: "QUESTION_MATCH_QUALITY",
	1: "QUESTION_MAP_QUALITY",
	2: "QUESTION_COMP_INQUIRY",
	3: "QUESTION_CASUAL_INQUIRY",
}
var SurveyQuestionType_value = map[string]int32{
	"QUESTION_MATCH_QUALITY":  0,
	"QUESTION_MAP_QUALITY":    1,
	"QUESTION_COMP_INQUIRY":   2,
	"QUESTION_CASUAL_INQUIRY": 3,
}

func (x SurveyQuestionType) Enum() *SurveyQuestionType {
	p := new(SurveyQuestionType)
	*p = x
	return p
}
func (x SurveyQuestionType) String() string {
	return proto.EnumName(SurveyQuestionType_name, int32(x))
}
func (x *SurveyQuestionType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(SurveyQuestionType_value, data, "SurveyQuestionType")
	if err != nil {
		return err
	}
	*x = SurveyQuestionType(value)
	return nil
}
func (SurveyQuestionType) EnumDescriptor() ([]byte, []int) { return fileDescriptor1, []int{10} }

type CMsgGC_GameServer_CreateIdentityResponse_EStatus int32

const (
	CMsgGC_GameServer_CreateIdentityResponse_kStatus_GenericFailure CMsgGC_GameServer_CreateIdentityResponse_EStatus = 0
	CMsgGC_GameServer_CreateIdentityResponse_kStatus_TooMany        CMsgGC_GameServer_CreateIdentityResponse_EStatus = -1
	CMsgGC_GameServer_CreateIdentityResponse_kStatus_NoPrivs        CMsgGC_GameServer_CreateIdentityResponse_EStatus = -2
	CMsgGC_GameServer_CreateIdentityResponse_kStatus_Created        CMsgGC_GameServer_CreateIdentityResponse_EStatus = 1
)

var CMsgGC_GameServer_CreateIdentityResponse_EStatus_name = map[int32]string{
	0:  "kStatus_GenericFailure",
	-1: "kStatus_TooMany",
	-2: "kStatus_NoPrivs",
	1:  "kStatus_Created",
}
var CMsgGC_GameServer_CreateIdentityResponse_EStatus_value = map[string]int32{
	"kStatus_GenericFailure": 0,
	"kStatus_TooMany":        -1,
	"kStatus_NoPrivs":        -2,
	"kStatus_Created":        1,
}

func (x CMsgGC_GameServer_CreateIdentityResponse_EStatus) Enum() *CMsgGC_GameServer_CreateIdentityResponse_EStatus {
	p := new(CMsgGC_GameServer_CreateIdentityResponse_EStatus)
	*p = x
	return p
}
func (x CMsgGC_GameServer_CreateIdentityResponse_EStatus) String() string {
	return proto.EnumName(CMsgGC_GameServer_CreateIdentityResponse_EStatus_name, int32(x))
}
func (x *CMsgGC_GameServer_CreateIdentityResponse_EStatus) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgGC_GameServer_CreateIdentityResponse_EStatus_value, data, "CMsgGC_GameServer_CreateIdentityResponse_EStatus")
	if err != nil {
		return err
	}
	*x = CMsgGC_GameServer_CreateIdentityResponse_EStatus(value)
	return nil
}
func (CMsgGC_GameServer_CreateIdentityResponse_EStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor1, []int{38, 0}
}

type CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse int32

const (
	CMsgGC_Client_UseServerModificationItem_Response_kServerModificationItemResponse_AlreadyInUse             CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse = 1
	CMsgGC_Client_UseServerModificationItem_Response_kServerModificationItemResponse_NotOnAuthenticatedServer CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse = 2
	CMsgGC_Client_UseServerModificationItem_Response_kServerModificationItemResponse_ServerReject             CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse = 3
	CMsgGC_Client_UseServerModificationItem_Response_kServerModificationItemResponse_InternalError            CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse = 4
	CMsgGC_Client_UseServerModificationItem_Response_kServerModificationItemResponse_EventAlreadyActive       CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse = 5
)

var CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse_name = map[int32]string{
	1: "kServerModificationItemResponse_AlreadyInUse",
	2: "kServerModificationItemResponse_NotOnAuthenticatedServer",
	3: "kServerModificationItemResponse_ServerReject",
	4: "kServerModificationItemResponse_InternalError",
	5: "kServerModificationItemResponse_EventAlreadyActive",
}
var CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse_value = map[string]int32{
	"kServerModificationItemResponse_AlreadyInUse":             1,
	"kServerModificationItemResponse_NotOnAuthenticatedServer": 2,
	"kServerModificationItemResponse_ServerReject":             3,
	"kServerModificationItemResponse_InternalError":            4,
	"kServerModificationItemResponse_EventAlreadyActive":       5,
}

func (x CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse) Enum() *CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse {
	p := new(CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse)
	*p = x
	return p
}
func (x CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse) String() string {
	return proto.EnumName(CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse_name, int32(x))
}
func (x *CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse_value, data, "CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse")
	if err != nil {
		return err
	}
	*x = CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse(value)
	return nil
}
func (CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor1, []int{46, 0}
}

type CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse int32

const (
	CMsgGC_GameServer_UseServerModificationItem_Response_kServerModificationItemServerResponse_Accepted     CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse = 1
	CMsgGC_GameServer_UseServerModificationItem_Response_kServerModificationItemServerResponse_NoVoteCalled CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse = 2
	CMsgGC_GameServer_UseServerModificationItem_Response_kServerModificationItemServerResponse_VoteFailed   CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse = 3
)

var CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse_name = map[int32]string{
	1: "kServerModificationItemServerResponse_Accepted",
	2: "kServerModificationItemServerResponse_NoVoteCalled",
	3: "kServerModificationItemServerResponse_VoteFailed",
}
var CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse_value = map[string]int32{
	"kServerModificationItemServerResponse_Accepted":     1,
	"kServerModificationItemServerResponse_NoVoteCalled": 2,
	"kServerModificationItemServerResponse_VoteFailed":   3,
}

func (x CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse) Enum() *CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse {
	p := new(CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse)
	*p = x
	return p
}
func (x CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse) String() string {
	return proto.EnumName(CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse_name, int32(x))
}
func (x *CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse_value, data, "CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse")
	if err != nil {
		return err
	}
	*x = CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse(value)
	return nil
}
func (CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor1, []int{48, 0}
}

type CSOTFParty_State int32

const (
	CSOTFParty_UI                                CSOTFParty_State = 0
	CSOTFParty_FINDING_MATCH                     CSOTFParty_State = 1
	CSOTFParty_IN_MATCH                          CSOTFParty_State = 2
	CSOTFParty_AWAITING_RESERVATION_CONFIRMATION CSOTFParty_State = 3
)

var CSOTFParty_State_name = map[int32]string{
	0: "UI",
	1: "FINDING_MATCH",
	2: "IN_MATCH",
	3: "AWAITING_RESERVATION_CONFIRMATION",
}
var CSOTFParty_State_value = map[string]int32{
	"UI":                                0,
	"FINDING_MATCH":                     1,
	"IN_MATCH":                          2,
	"AWAITING_RESERVATION_CONFIRMATION": 3,
}

func (x CSOTFParty_State) Enum() *CSOTFParty_State {
	p := new(CSOTFParty_State)
	*p = x
	return p
}
func (x CSOTFParty_State) String() string {
	return proto.EnumName(CSOTFParty_State_name, int32(x))
}
func (x *CSOTFParty_State) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CSOTFParty_State_value, data, "CSOTFParty_State")
	if err != nil {
		return err
	}
	*x = CSOTFParty_State(value)
	return nil
}
func (CSOTFParty_State) EnumDescriptor() ([]byte, []int) { return fileDescriptor1, []int{62, 0} }

type CTFLobbyMember_ConnectState int32

const (
	CTFLobbyMember_INVALID             CTFLobbyMember_ConnectState = 0
	CTFLobbyMember_RESERVATION_PENDING CTFLobbyMember_ConnectState = 1
	CTFLobbyMember_RESERVED            CTFLobbyMember_ConnectState = 2
	CTFLobbyMember_CONNECTED           CTFLobbyMember_ConnectState = 3
	CTFLobbyMember_DISCONNECTED        CTFLobbyMember_ConnectState = 5
)

var CTFLobbyMember_ConnectState_name = map[int32]string{
	0: "INVALID",
	1: "RESERVATION_PENDING",
	2: "RESERVED",
	3: "CONNECTED",
	5: "DISCONNECTED",
}
var CTFLobbyMember_ConnectState_value = map[string]int32{
	"INVALID":             0,
	"RESERVATION_PENDING": 1,
	"RESERVED":            2,
	"CONNECTED":           3,
	"DISCONNECTED":        5,
}

func (x CTFLobbyMember_ConnectState) Enum() *CTFLobbyMember_ConnectState {
	p := new(CTFLobbyMember_ConnectState)
	*p = x
	return p
}
func (x CTFLobbyMember_ConnectState) String() string {
	return proto.EnumName(CTFLobbyMember_ConnectState_name, int32(x))
}
func (x *CTFLobbyMember_ConnectState) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CTFLobbyMember_ConnectState_value, data, "CTFLobbyMember_ConnectState")
	if err != nil {
		return err
	}
	*x = CTFLobbyMember_ConnectState(value)
	return nil
}
func (CTFLobbyMember_ConnectState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor1, []int{64, 0}
}

type CSOTFGameServerLobby_State int32

const (
	CSOTFGameServerLobby_UNKNOWN     CSOTFGameServerLobby_State = 0
	CSOTFGameServerLobby_SERVERSETUP CSOTFGameServerLobby_State = 1
	CSOTFGameServerLobby_RUN         CSOTFGameServerLobby_State = 2
)

var CSOTFGameServerLobby_State_name = map[int32]string{
	0: "UNKNOWN",
	1: "SERVERSETUP",
	2: "RUN",
}
var CSOTFGameServerLobby_State_value = map[string]int32{
	"UNKNOWN":     0,
	"SERVERSETUP": 1,
	"RUN":         2,
}

func (x CSOTFGameServerLobby_State) Enum() *CSOTFGameServerLobby_State {
	p := new(CSOTFGameServerLobby_State)
	*p = x
	return p
}
func (x CSOTFGameServerLobby_State) String() string {
	return proto.EnumName(CSOTFGameServerLobby_State_name, int32(x))
}
func (x *CSOTFGameServerLobby_State) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CSOTFGameServerLobby_State_value, data, "CSOTFGameServerLobby_State")
	if err != nil {
		return err
	}
	*x = CSOTFGameServerLobby_State(value)
	return nil
}
func (CSOTFGameServerLobby_State) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor1, []int{66, 0}
}

type CSOTFGameServerLobby_LobbyType int32

const (
	CSOTFGameServerLobby_INVALID    CSOTFGameServerLobby_LobbyType = -1
	CSOTFGameServerLobby_MATCH      CSOTFGameServerLobby_LobbyType = 0
	CSOTFGameServerLobby_PRACTICE   CSOTFGameServerLobby_LobbyType = 1
	CSOTFGameServerLobby_TOURNAMENT CSOTFGameServerLobby_LobbyType = 2
	CSOTFGameServerLobby_TUTORIAL   CSOTFGameServerLobby_LobbyType = 3
)

var CSOTFGameServerLobby_LobbyType_name = map[int32]string{
	-1: "INVALID",
	0:  "MATCH",
	1:  "PRACTICE",
	2:  "TOURNAMENT",
	3:  "TUTORIAL",
}
var CSOTFGameServerLobby_LobbyType_value = map[string]int32{
	"INVALID":    -1,
	"MATCH":      0,
	"PRACTICE":   1,
	"TOURNAMENT": 2,
	"TUTORIAL":   3,
}

func (x CSOTFGameServerLobby_LobbyType) Enum() *CSOTFGameServerLobby_LobbyType {
	p := new(CSOTFGameServerLobby_LobbyType)
	*p = x
	return p
}
func (x CSOTFGameServerLobby_LobbyType) String() string {
	return proto.EnumName(CSOTFGameServerLobby_LobbyType_name, int32(x))
}
func (x *CSOTFGameServerLobby_LobbyType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CSOTFGameServerLobby_LobbyType_value, data, "CSOTFGameServerLobby_LobbyType")
	if err != nil {
		return err
	}
	*x = CSOTFGameServerLobby_LobbyType(value)
	return nil
}
func (CSOTFGameServerLobby_LobbyType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor1, []int{66, 1}
}

type CSOTFGameServerLobby_WarMatch int32

const (
	CSOTFGameServerLobby_NOPE               CSOTFGameServerLobby_WarMatch = 0
	CSOTFGameServerLobby_INVADERS_ARE_PYRO  CSOTFGameServerLobby_WarMatch = 1
	CSOTFGameServerLobby_INVADERS_ARE_HEAVY CSOTFGameServerLobby_WarMatch = 2
)

var CSOTFGameServerLobby_WarMatch_name = map[int32]string{
	0: "NOPE",
	1: "INVADERS_ARE_PYRO",
	2: "INVADERS_ARE_HEAVY",
}
var CSOTFGameServerLobby_WarMatch_value = map[string]int32{
	"NOPE":               0,
	"INVADERS_ARE_PYRO":  1,
	"INVADERS_ARE_HEAVY": 2,
}

func (x CSOTFGameServerLobby_WarMatch) Enum() *CSOTFGameServerLobby_WarMatch {
	p := new(CSOTFGameServerLobby_WarMatch)
	*p = x
	return p
}
func (x CSOTFGameServerLobby_WarMatch) String() string {
	return proto.EnumName(CSOTFGameServerLobby_WarMatch_name, int32(x))
}
func (x *CSOTFGameServerLobby_WarMatch) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CSOTFGameServerLobby_WarMatch_value, data, "CSOTFGameServerLobby_WarMatch")
	if err != nil {
		return err
	}
	*x = CSOTFGameServerLobby_WarMatch(value)
	return nil
}
func (CSOTFGameServerLobby_WarMatch) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor1, []int{66, 2}
}

type CMsgGameServerMatchmakingStatus_PlayerConnectState int32

const (
	CMsgGameServerMatchmakingStatus_INVALID   CMsgGameServerMatchmakingStatus_PlayerConnectState = 0
	CMsgGameServerMatchmakingStatus_CONNECTED CMsgGameServerMatchmakingStatus_PlayerConnectState = 1
	CMsgGameServerMatchmakingStatus_RESERVED  CMsgGameServerMatchmakingStatus_PlayerConnectState = 2
)

var CMsgGameServerMatchmakingStatus_PlayerConnectState_name = map[int32]string{
	0: "INVALID",
	1: "CONNECTED",
	2: "RESERVED",
}
var CMsgGameServerMatchmakingStatus_PlayerConnectState_value = map[string]int32{
	"INVALID":   0,
	"CONNECTED": 1,
	"RESERVED":  2,
}

func (x CMsgGameServerMatchmakingStatus_PlayerConnectState) Enum() *CMsgGameServerMatchmakingStatus_PlayerConnectState {
	p := new(CMsgGameServerMatchmakingStatus_PlayerConnectState)
	*p = x
	return p
}
func (x CMsgGameServerMatchmakingStatus_PlayerConnectState) String() string {
	return proto.EnumName(CMsgGameServerMatchmakingStatus_PlayerConnectState_name, int32(x))
}
func (x *CMsgGameServerMatchmakingStatus_PlayerConnectState) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgGameServerMatchmakingStatus_PlayerConnectState_value, data, "CMsgGameServerMatchmakingStatus_PlayerConnectState")
	if err != nil {
		return err
	}
	*x = CMsgGameServerMatchmakingStatus_PlayerConnectState(value)
	return nil
}
func (CMsgGameServerMatchmakingStatus_PlayerConnectState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor1, []int{83, 0}
}

type CMsgGameServerMatchmakingStatus_Event int32

const (
	CMsgGameServerMatchmakingStatus_None               CMsgGameServerMatchmakingStatus_Event = 0
	CMsgGameServerMatchmakingStatus_MvMVictory         CMsgGameServerMatchmakingStatus_Event = 1
	CMsgGameServerMatchmakingStatus_MvMDefeat          CMsgGameServerMatchmakingStatus_Event = 2
	CMsgGameServerMatchmakingStatus_AcknowledgePlayers CMsgGameServerMatchmakingStatus_Event = 3
)

var CMsgGameServerMatchmakingStatus_Event_name = map[int32]string{
	0: "None",
	1: "MvMVictory",
	2: "MvMDefeat",
	3: "AcknowledgePlayers",
}
var CMsgGameServerMatchmakingStatus_Event_value = map[string]int32{
	"None":               0,
	"MvMVictory":         1,
	"MvMDefeat":          2,
	"AcknowledgePlayers": 3,
}

func (x CMsgGameServerMatchmakingStatus_Event) Enum() *CMsgGameServerMatchmakingStatus_Event {
	p := new(CMsgGameServerMatchmakingStatus_Event)
	*p = x
	return p
}
func (x CMsgGameServerMatchmakingStatus_Event) String() string {
	return proto.EnumName(CMsgGameServerMatchmakingStatus_Event_name, int32(x))
}
func (x *CMsgGameServerMatchmakingStatus_Event) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgGameServerMatchmakingStatus_Event_value, data, "CMsgGameServerMatchmakingStatus_Event")
	if err != nil {
		return err
	}
	*x = CMsgGameServerMatchmakingStatus_Event(value)
	return nil
}
func (CMsgGameServerMatchmakingStatus_Event) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor1, []int{83, 1}
}

type CMsgMvMVictoryInfo_GrantReason int32

const (
	CMsgMvMVictoryInfo_INVALID       CMsgMvMVictoryInfo_GrantReason = 0
	CMsgMvMVictoryInfo_BADGE_LEVELED CMsgMvMVictoryInfo_GrantReason = 1
	CMsgMvMVictoryInfo_SQUAD_SURPLUS CMsgMvMVictoryInfo_GrantReason = 2
	CMsgMvMVictoryInfo_MANN_UP       CMsgMvMVictoryInfo_GrantReason = 3
	CMsgMvMVictoryInfo_HELP_A_NOOB   CMsgMvMVictoryInfo_GrantReason = 4
)

var CMsgMvMVictoryInfo_GrantReason_name = map[int32]string{
	0: "INVALID",
	1: "BADGE_LEVELED",
	2: "SQUAD_SURPLUS",
	3: "MANN_UP",
	4: "HELP_A_NOOB",
}
var CMsgMvMVictoryInfo_GrantReason_value = map[string]int32{
	"INVALID":       0,
	"BADGE_LEVELED": 1,
	"SQUAD_SURPLUS": 2,
	"MANN_UP":       3,
	"HELP_A_NOOB":   4,
}

func (x CMsgMvMVictoryInfo_GrantReason) Enum() *CMsgMvMVictoryInfo_GrantReason {
	p := new(CMsgMvMVictoryInfo_GrantReason)
	*p = x
	return p
}
func (x CMsgMvMVictoryInfo_GrantReason) String() string {
	return proto.EnumName(CMsgMvMVictoryInfo_GrantReason_name, int32(x))
}
func (x *CMsgMvMVictoryInfo_GrantReason) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgMvMVictoryInfo_GrantReason_value, data, "CMsgMvMVictoryInfo_GrantReason")
	if err != nil {
		return err
	}
	*x = CMsgMvMVictoryInfo_GrantReason(value)
	return nil
}
func (CMsgMvMVictoryInfo_GrantReason) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor1, []int{85, 0}
}

type CMsgTFXPSource_XPSourceType int32

const (
	CMsgTFXPSource_SOURCE_SCORE               CMsgTFXPSource_XPSourceType = 0
	CMsgTFXPSource_SOURCE_OBJECTIVE_BONUS     CMsgTFXPSource_XPSourceType = 1
	CMsgTFXPSource_SOURCE_COMPLETED_MATCH     CMsgTFXPSource_XPSourceType = 2
	CMsgTFXPSource_SOURCE_COMPETITIVE_ABANDON CMsgTFXPSource_XPSourceType = 3
	CMsgTFXPSource_SOURCE_COMPETITIVE_WIN     CMsgTFXPSource_XPSourceType = 4
	CMsgTFXPSource_SOURCE_COMPETITIVE_LOSS    CMsgTFXPSource_XPSourceType = 5
	CMsgTFXPSource_SOURCE_AUTOBALANCE_BONUS   CMsgTFXPSource_XPSourceType = 6
	CMsgTFXPSource_NUM_SOURCE_TYPES           CMsgTFXPSource_XPSourceType = 7
)

var CMsgTFXPSource_XPSourceType_name = map[int32]string{
	0: "SOURCE_SCORE",
	1: "SOURCE_OBJECTIVE_BONUS",
	2: "SOURCE_COMPLETED_MATCH",
	3: "SOURCE_COMPETITIVE_ABANDON",
	4: "SOURCE_COMPETITIVE_WIN",
	5: "SOURCE_COMPETITIVE_LOSS",
	6: "SOURCE_AUTOBALANCE_BONUS",
	7: "NUM_SOURCE_TYPES",
}
var CMsgTFXPSource_XPSourceType_value = map[string]int32{
	"SOURCE_SCORE":               0,
	"SOURCE_OBJECTIVE_BONUS":     1,
	"SOURCE_COMPLETED_MATCH":     2,
	"SOURCE_COMPETITIVE_ABANDON": 3,
	"SOURCE_COMPETITIVE_WIN":     4,
	"SOURCE_COMPETITIVE_LOSS":    5,
	"SOURCE_AUTOBALANCE_BONUS":   6,
	"NUM_SOURCE_TYPES":           7,
}

func (x CMsgTFXPSource_XPSourceType) Enum() *CMsgTFXPSource_XPSourceType {
	p := new(CMsgTFXPSource_XPSourceType)
	*p = x
	return p
}
func (x CMsgTFXPSource_XPSourceType) String() string {
	return proto.EnumName(CMsgTFXPSource_XPSourceType_name, int32(x))
}
func (x *CMsgTFXPSource_XPSourceType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgTFXPSource_XPSourceType_value, data, "CMsgTFXPSource_XPSourceType")
	if err != nil {
		return err
	}
	*x = CMsgTFXPSource_XPSourceType(value)
	return nil
}
func (CMsgTFXPSource_XPSourceType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor1, []int{113, 0}
}

type CMsgGCNotification_NotificationType int32

const (
	CMsgGCNotification_NOTIFICATION_REPORTED_PLAYER_BANNED          CMsgGCNotification_NotificationType = 0
	CMsgGCNotification_NOTIFICATION_CUSTOM_STRING                   CMsgGCNotification_NotificationType = 1
	CMsgGCNotification_NOTIFICATION_MM_BAN_DUE_TO_EXCESSIVE_REPORTS CMsgGCNotification_NotificationType = 2
	CMsgGCNotification_NOTIFICATION_REPORTED_PLAYER_WAS_BANNED      CMsgGCNotification_NotificationType = 3
	CMsgGCNotification_NOTIFICATION_SUPPORT_MESSAGE                 CMsgGCNotification_NotificationType = 4
	CMsgGCNotification_NOTIFICATION_NUM_TYPES                       CMsgGCNotification_NotificationType = 5
)

var CMsgGCNotification_NotificationType_name = map[int32]string{
	0: "NOTIFICATION_REPORTED_PLAYER_BANNED",
	1: "NOTIFICATION_CUSTOM_STRING",
	2: "NOTIFICATION_MM_BAN_DUE_TO_EXCESSIVE_REPORTS",
	3: "NOTIFICATION_REPORTED_PLAYER_WAS_BANNED",
	4: "NOTIFICATION_SUPPORT_MESSAGE",
	5: "NOTIFICATION_NUM_TYPES",
}
var CMsgGCNotification_NotificationType_value = map[string]int32{
	"NOTIFICATION_REPORTED_PLAYER_BANNED":          0,
	"NOTIFICATION_CUSTOM_STRING":                   1,
	"NOTIFICATION_MM_BAN_DUE_TO_EXCESSIVE_REPORTS": 2,
	"NOTIFICATION_REPORTED_PLAYER_WAS_BANNED":      3,
	"NOTIFICATION_SUPPORT_MESSAGE":                 4,
	"NOTIFICATION_NUM_TYPES":                       5,
}

func (x CMsgGCNotification_NotificationType) Enum() *CMsgGCNotification_NotificationType {
	p := new(CMsgGCNotification_NotificationType)
	*p = x
	return p
}
func (x CMsgGCNotification_NotificationType) String() string {
	return proto.EnumName(CMsgGCNotification_NotificationType_name, int32(x))
}
func (x *CMsgGCNotification_NotificationType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgGCNotification_NotificationType_value, data, "CMsgGCNotification_NotificationType")
	if err != nil {
		return err
	}
	*x = CMsgGCNotification_NotificationType(value)
	return nil
}
func (CMsgGCNotification_NotificationType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor1, []int{116, 0}
}

type CMsgGC_Match_Result_Status int32

const (
	CMsgGC_Match_Result_MATCH_SUCCEEDED        CMsgGC_Match_Result_Status = 0
	CMsgGC_Match_Result_MATCH_FAILED_GC        CMsgGC_Match_Result_Status = 1
	CMsgGC_Match_Result_MATCH_FAILED_TRUSTED   CMsgGC_Match_Result_Status = 2
	CMsgGC_Match_Result_MATCH_FAILED_ABANDON   CMsgGC_Match_Result_Status = 3
	CMsgGC_Match_Result_MATCH_FAILED_UNKNOWN   CMsgGC_Match_Result_Status = 5
	CMsgGC_Match_Result_MATCH_FAILED_TIMEOUT   CMsgGC_Match_Result_Status = 6
	CMsgGC_Match_Result_MATCH_FINISHED_ABANDON CMsgGC_Match_Result_Status = 7
)

var CMsgGC_Match_Result_Status_name = map[int32]string{
	0: "MATCH_SUCCEEDED",
	1: "MATCH_FAILED_GC",
	2: "MATCH_FAILED_TRUSTED",
	3: "MATCH_FAILED_ABANDON",
	5: "MATCH_FAILED_UNKNOWN",
	6: "MATCH_FAILED_TIMEOUT",
	7: "MATCH_FINISHED_ABANDON",
}
var CMsgGC_Match_Result_Status_value = map[string]int32{
	"MATCH_SUCCEEDED":        0,
	"MATCH_FAILED_GC":        1,
	"MATCH_FAILED_TRUSTED":   2,
	"MATCH_FAILED_ABANDON":   3,
	"MATCH_FAILED_UNKNOWN":   5,
	"MATCH_FAILED_TIMEOUT":   6,
	"MATCH_FINISHED_ABANDON": 7,
}

func (x CMsgGC_Match_Result_Status) Enum() *CMsgGC_Match_Result_Status {
	p := new(CMsgGC_Match_Result_Status)
	*p = x
	return p
}
func (x CMsgGC_Match_Result_Status) String() string {
	return proto.EnumName(CMsgGC_Match_Result_Status_name, int32(x))
}
func (x *CMsgGC_Match_Result_Status) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgGC_Match_Result_Status_value, data, "CMsgGC_Match_Result_Status")
	if err != nil {
		return err
	}
	*x = CMsgGC_Match_Result_Status(value)
	return nil
}
func (CMsgGC_Match_Result_Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor1, []int{120, 0}
}

type CMsgGC_ReportPlayer_EReason int32

const (
	CMsgGC_ReportPlayer_kReason_INVALID    CMsgGC_ReportPlayer_EReason = 0
	CMsgGC_ReportPlayer_kReason_CHEATING   CMsgGC_ReportPlayer_EReason = 1
	CMsgGC_ReportPlayer_kReason_IDLE       CMsgGC_ReportPlayer_EReason = 2
	CMsgGC_ReportPlayer_kReason_HARASSMENT CMsgGC_ReportPlayer_EReason = 3
	CMsgGC_ReportPlayer_kReason_GRIEFING   CMsgGC_ReportPlayer_EReason = 4
	CMsgGC_ReportPlayer_kReason_COUNT      CMsgGC_ReportPlayer_EReason = 5
)

var CMsgGC_ReportPlayer_EReason_name = map[int32]string{
	0: "kReason_INVALID",
	1: "kReason_CHEATING",
	2: "kReason_IDLE",
	3: "kReason_HARASSMENT",
	4: "kReason_GRIEFING",
	5: "kReason_COUNT",
}
var CMsgGC_ReportPlayer_EReason_value = map[string]int32{
	"kReason_INVALID":    0,
	"kReason_CHEATING":   1,
	"kReason_IDLE":       2,
	"kReason_HARASSMENT": 3,
	"kReason_GRIEFING":   4,
	"kReason_COUNT":      5,
}

func (x CMsgGC_ReportPlayer_EReason) Enum() *CMsgGC_ReportPlayer_EReason {
	p := new(CMsgGC_ReportPlayer_EReason)
	*p = x
	return p
}
func (x CMsgGC_ReportPlayer_EReason) String() string {
	return proto.EnumName(CMsgGC_ReportPlayer_EReason_name, int32(x))
}
func (x *CMsgGC_ReportPlayer_EReason) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgGC_ReportPlayer_EReason_value, data, "CMsgGC_ReportPlayer_EReason")
	if err != nil {
		return err
	}
	*x = CMsgGC_ReportPlayer_EReason(value)
	return nil
}
func (CMsgGC_ReportPlayer_EReason) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor1, []int{130, 0}
}

type CMsgGCDataCenterPing_Update_Status int32

const (
	CMsgGCDataCenterPing_Update_Invalid          CMsgGCDataCenterPing_Update_Status = 0
	CMsgGCDataCenterPing_Update_Normal           CMsgGCDataCenterPing_Update_Status = 1
	CMsgGCDataCenterPing_Update_Unreachable      CMsgGCDataCenterPing_Update_Status = 2
	CMsgGCDataCenterPing_Update_FallbackToDCPing CMsgGCDataCenterPing_Update_Status = 3
)

var CMsgGCDataCenterPing_Update_Status_name = map[int32]string{
	0: "Invalid",
	1: "Normal",
	2: "Unreachable",
	3: "FallbackToDCPing",
}
var CMsgGCDataCenterPing_Update_Status_value = map[string]int32{
	"Invalid":          0,
	"Normal":           1,
	"Unreachable":      2,
	"FallbackToDCPing": 3,
}

func (x CMsgGCDataCenterPing_Update_Status) Enum() *CMsgGCDataCenterPing_Update_Status {
	p := new(CMsgGCDataCenterPing_Update_Status)
	*p = x
	return p
}
func (x CMsgGCDataCenterPing_Update_Status) String() string {
	return proto.EnumName(CMsgGCDataCenterPing_Update_Status_name, int32(x))
}
func (x *CMsgGCDataCenterPing_Update_Status) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgGCDataCenterPing_Update_Status_value, data, "CMsgGCDataCenterPing_Update_Status")
	if err != nil {
		return err
	}
	*x = CMsgGCDataCenterPing_Update_Status(value)
	return nil
}
func (CMsgGCDataCenterPing_Update_Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor1, []int{137, 0}
}

type CMsgTFGoldenWrenchBroadcast struct {
	WrenchNumber     *int32  `protobuf:"varint,1,opt,name=wrench_number,json=wrenchNumber" json:"wrench_number,omitempty"`
	Deleted          *bool   `protobuf:"varint,2,opt,name=deleted" json:"deleted,omitempty"`
	UserName         *string `protobuf:"bytes,3,opt,name=user_name,json=userName" json:"user_name,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgTFGoldenWrenchBroadcast) Reset()                    { *m = CMsgTFGoldenWrenchBroadcast{} }
func (m *CMsgTFGoldenWrenchBroadcast) String() string            { return proto.CompactTextString(m) }
func (*CMsgTFGoldenWrenchBroadcast) ProtoMessage()               {}
func (*CMsgTFGoldenWrenchBroadcast) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *CMsgTFGoldenWrenchBroadcast) GetWrenchNumber() int32 {
	if m != nil && m.WrenchNumber != nil {
		return *m.WrenchNumber
	}
	return 0
}

func (m *CMsgTFGoldenWrenchBroadcast) GetDeleted() bool {
	if m != nil && m.Deleted != nil {
		return *m.Deleted
	}
	return false
}

func (m *CMsgTFGoldenWrenchBroadcast) GetUserName() string {
	if m != nil && m.UserName != nil {
		return *m.UserName
	}
	return ""
}

type CMsgTFSaxxyBroadcast struct {
	CategoryNumber   *int32  `protobuf:"varint,1,opt,name=category_number,json=categoryNumber" json:"category_number,omitempty"`
	UserName         *string `protobuf:"bytes,2,opt,name=user_name,json=userName" json:"user_name,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgTFSaxxyBroadcast) Reset()                    { *m = CMsgTFSaxxyBroadcast{} }
func (m *CMsgTFSaxxyBroadcast) String() string            { return proto.CompactTextString(m) }
func (*CMsgTFSaxxyBroadcast) ProtoMessage()               {}
func (*CMsgTFSaxxyBroadcast) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *CMsgTFSaxxyBroadcast) GetCategoryNumber() int32 {
	if m != nil && m.CategoryNumber != nil {
		return *m.CategoryNumber
	}
	return 0
}

func (m *CMsgTFSaxxyBroadcast) GetUserName() string {
	if m != nil && m.UserName != nil {
		return *m.UserName
	}
	return ""
}

type CMsgGCTFSpecificItemBroadcast struct {
	ItemDefIndex     *uint32 `protobuf:"varint,1,opt,name=item_def_index,json=itemDefIndex" json:"item_def_index,omitempty"`
	WasDestruction   *bool   `protobuf:"varint,2,opt,name=was_destruction,json=wasDestruction" json:"was_destruction,omitempty"`
	UserName         *string `protobuf:"bytes,3,opt,name=user_name,json=userName" json:"user_name,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgGCTFSpecificItemBroadcast) Reset()                    { *m = CMsgGCTFSpecificItemBroadcast{} }
func (m *CMsgGCTFSpecificItemBroadcast) String() string            { return proto.CompactTextString(m) }
func (*CMsgGCTFSpecificItemBroadcast) ProtoMessage()               {}
func (*CMsgGCTFSpecificItemBroadcast) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

func (m *CMsgGCTFSpecificItemBroadcast) GetItemDefIndex() uint32 {
	if m != nil && m.ItemDefIndex != nil {
		return *m.ItemDefIndex
	}
	return 0
}

func (m *CMsgGCTFSpecificItemBroadcast) GetWasDestruction() bool {
	if m != nil && m.WasDestruction != nil {
		return *m.WasDestruction
	}
	return false
}

func (m *CMsgGCTFSpecificItemBroadcast) GetUserName() string {
	if m != nil && m.UserName != nil {
		return *m.UserName
	}
	return ""
}

type CMsgTFWorldStatus struct {
	BetaStressTestEventActive *bool  `protobuf:"varint,1,opt,name=beta_stress_test_event_active,json=betaStressTestEventActive,def=0" json:"beta_stress_test_event_active,omitempty"`
	XXX_unrecognized          []byte `json:"-"`
}

func (m *CMsgTFWorldStatus) Reset()                    { *m = CMsgTFWorldStatus{} }
func (m *CMsgTFWorldStatus) String() string            { return proto.CompactTextString(m) }
func (*CMsgTFWorldStatus) ProtoMessage()               {}
func (*CMsgTFWorldStatus) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{3} }

const Default_CMsgTFWorldStatus_BetaStressTestEventActive bool = false

func (m *CMsgTFWorldStatus) GetBetaStressTestEventActive() bool {
	if m != nil && m.BetaStressTestEventActive != nil {
		return *m.BetaStressTestEventActive
	}
	return Default_CMsgTFWorldStatus_BetaStressTestEventActive
}

type CSOTFDuelSummary struct {
	AccountId         *uint32 `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	DuelWins          *uint32 `protobuf:"varint,2,opt,name=duel_wins,json=duelWins" json:"duel_wins,omitempty"`
	DuelLosses        *uint32 `protobuf:"varint,3,opt,name=duel_losses,json=duelLosses" json:"duel_losses,omitempty"`
	LastDuelAccountId *uint32 `protobuf:"varint,4,opt,name=last_duel_account_id,json=lastDuelAccountId" json:"last_duel_account_id,omitempty"`
	LastDuelTimestamp *uint32 `protobuf:"varint,5,opt,name=last_duel_timestamp,json=lastDuelTimestamp" json:"last_duel_timestamp,omitempty"`
	LastDuelStatus    *uint32 `protobuf:"varint,6,opt,name=last_duel_status,json=lastDuelStatus" json:"last_duel_status,omitempty"`
	XXX_unrecognized  []byte  `json:"-"`
}

func (m *CSOTFDuelSummary) Reset()                    { *m = CSOTFDuelSummary{} }
func (m *CSOTFDuelSummary) String() string            { return proto.CompactTextString(m) }
func (*CSOTFDuelSummary) ProtoMessage()               {}
func (*CSOTFDuelSummary) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{4} }

func (m *CSOTFDuelSummary) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *CSOTFDuelSummary) GetDuelWins() uint32 {
	if m != nil && m.DuelWins != nil {
		return *m.DuelWins
	}
	return 0
}

func (m *CSOTFDuelSummary) GetDuelLosses() uint32 {
	if m != nil && m.DuelLosses != nil {
		return *m.DuelLosses
	}
	return 0
}

func (m *CSOTFDuelSummary) GetLastDuelAccountId() uint32 {
	if m != nil && m.LastDuelAccountId != nil {
		return *m.LastDuelAccountId
	}
	return 0
}

func (m *CSOTFDuelSummary) GetLastDuelTimestamp() uint32 {
	if m != nil && m.LastDuelTimestamp != nil {
		return *m.LastDuelTimestamp
	}
	return 0
}

func (m *CSOTFDuelSummary) GetLastDuelStatus() uint32 {
	if m != nil && m.LastDuelStatus != nil {
		return *m.LastDuelStatus
	}
	return 0
}

type CSOTFMapContribution struct {
	AccountId         *uint32 `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	DefIndex          *uint32 `protobuf:"varint,2,opt,name=def_index,json=defIndex" json:"def_index,omitempty"`
	ContributionLevel *uint32 `protobuf:"varint,3,opt,name=contribution_level,json=contributionLevel" json:"contribution_level,omitempty"`
	XXX_unrecognized  []byte  `json:"-"`
}

func (m *CSOTFMapContribution) Reset()                    { *m = CSOTFMapContribution{} }
func (m *CSOTFMapContribution) String() string            { return proto.CompactTextString(m) }
func (*CSOTFMapContribution) ProtoMessage()               {}
func (*CSOTFMapContribution) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{5} }

func (m *CSOTFMapContribution) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *CSOTFMapContribution) GetDefIndex() uint32 {
	if m != nil && m.DefIndex != nil {
		return *m.DefIndex
	}
	return 0
}

func (m *CSOTFMapContribution) GetContributionLevel() uint32 {
	if m != nil && m.ContributionLevel != nil {
		return *m.ContributionLevel
	}
	return 0
}

type CMsgTFVoteKickBanPlayer struct {
	AccountIdSubject *uint32 `protobuf:"varint,1,opt,name=account_id_subject,json=accountIdSubject" json:"account_id_subject,omitempty"`
	KickReason       *uint32 `protobuf:"varint,2,opt,name=kick_reason,json=kickReason" json:"kick_reason,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgTFVoteKickBanPlayer) Reset()                    { *m = CMsgTFVoteKickBanPlayer{} }
func (m *CMsgTFVoteKickBanPlayer) String() string            { return proto.CompactTextString(m) }
func (*CMsgTFVoteKickBanPlayer) ProtoMessage()               {}
func (*CMsgTFVoteKickBanPlayer) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{6} }

func (m *CMsgTFVoteKickBanPlayer) GetAccountIdSubject() uint32 {
	if m != nil && m.AccountIdSubject != nil {
		return *m.AccountIdSubject
	}
	return 0
}

func (m *CMsgTFVoteKickBanPlayer) GetKickReason() uint32 {
	if m != nil && m.KickReason != nil {
		return *m.KickReason
	}
	return 0
}

type CMsgTFVoteKickBanPlayerResult struct {
	AccountIdInitiator *uint32 `protobuf:"varint,1,opt,name=account_id_initiator,json=accountIdInitiator" json:"account_id_initiator,omitempty"`
	AccountIdSubject   *uint32 `protobuf:"varint,2,opt,name=account_id_subject,json=accountIdSubject" json:"account_id_subject,omitempty"`
	KickReason         *uint32 `protobuf:"varint,3,opt,name=kick_reason,json=kickReason" json:"kick_reason,omitempty"`
	KickSuccessful     *bool   `protobuf:"varint,4,opt,name=kick_successful,json=kickSuccessful" json:"kick_successful,omitempty"`
	NumYesVotes        *uint32 `protobuf:"varint,5,opt,name=num_yes_votes,json=numYesVotes" json:"num_yes_votes,omitempty"`
	NumNoVotes         *uint32 `protobuf:"varint,6,opt,name=num_no_votes,json=numNoVotes" json:"num_no_votes,omitempty"`
	NumPossibleVotes   *uint32 `protobuf:"varint,7,opt,name=num_possible_votes,json=numPossibleVotes" json:"num_possible_votes,omitempty"`
	XXX_unrecognized   []byte  `json:"-"`
}

func (m *CMsgTFVoteKickBanPlayerResult) Reset()                    { *m = CMsgTFVoteKickBanPlayerResult{} }
func (m *CMsgTFVoteKickBanPlayerResult) String() string            { return proto.CompactTextString(m) }
func (*CMsgTFVoteKickBanPlayerResult) ProtoMessage()               {}
func (*CMsgTFVoteKickBanPlayerResult) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{7} }

func (m *CMsgTFVoteKickBanPlayerResult) GetAccountIdInitiator() uint32 {
	if m != nil && m.AccountIdInitiator != nil {
		return *m.AccountIdInitiator
	}
	return 0
}

func (m *CMsgTFVoteKickBanPlayerResult) GetAccountIdSubject() uint32 {
	if m != nil && m.AccountIdSubject != nil {
		return *m.AccountIdSubject
	}
	return 0
}

func (m *CMsgTFVoteKickBanPlayerResult) GetKickReason() uint32 {
	if m != nil && m.KickReason != nil {
		return *m.KickReason
	}
	return 0
}

func (m *CMsgTFVoteKickBanPlayerResult) GetKickSuccessful() bool {
	if m != nil && m.KickSuccessful != nil {
		return *m.KickSuccessful
	}
	return false
}

func (m *CMsgTFVoteKickBanPlayerResult) GetNumYesVotes() uint32 {
	if m != nil && m.NumYesVotes != nil {
		return *m.NumYesVotes
	}
	return 0
}

func (m *CMsgTFVoteKickBanPlayerResult) GetNumNoVotes() uint32 {
	if m != nil && m.NumNoVotes != nil {
		return *m.NumNoVotes
	}
	return 0
}

func (m *CMsgTFVoteKickBanPlayerResult) GetNumPossibleVotes() uint32 {
	if m != nil && m.NumPossibleVotes != nil {
		return *m.NumPossibleVotes
	}
	return 0
}

type CMsgTFFreeTrialChooseMostHelpfulFriend struct {
	AccountIdFriend  *uint32 `protobuf:"varint,1,opt,name=account_id_friend,json=accountIdFriend" json:"account_id_friend,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgTFFreeTrialChooseMostHelpfulFriend) Reset() {
	*m = CMsgTFFreeTrialChooseMostHelpfulFriend{}
}
func (m *CMsgTFFreeTrialChooseMostHelpfulFriend) String() string { return proto.CompactTextString(m) }
func (*CMsgTFFreeTrialChooseMostHelpfulFriend) ProtoMessage()    {}
func (*CMsgTFFreeTrialChooseMostHelpfulFriend) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{8}
}

func (m *CMsgTFFreeTrialChooseMostHelpfulFriend) GetAccountIdFriend() uint32 {
	if m != nil && m.AccountIdFriend != nil {
		return *m.AccountIdFriend
	}
	return 0
}

type CMsgTFRequestTF2Friends struct {
	AccountIds       []uint32 `protobuf:"varint,1,rep,name=account_ids,json=accountIds" json:"account_ids,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CMsgTFRequestTF2Friends) Reset()                    { *m = CMsgTFRequestTF2Friends{} }
func (m *CMsgTFRequestTF2Friends) String() string            { return proto.CompactTextString(m) }
func (*CMsgTFRequestTF2Friends) ProtoMessage()               {}
func (*CMsgTFRequestTF2Friends) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{9} }

func (m *CMsgTFRequestTF2Friends) GetAccountIds() []uint32 {
	if m != nil {
		return m.AccountIds
	}
	return nil
}

type CMsgTFRequestTF2FriendsResponse struct {
	AccountIds       []uint32 `protobuf:"varint,1,rep,name=account_ids,json=accountIds" json:"account_ids,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CMsgTFRequestTF2FriendsResponse) Reset()         { *m = CMsgTFRequestTF2FriendsResponse{} }
func (m *CMsgTFRequestTF2FriendsResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgTFRequestTF2FriendsResponse) ProtoMessage()    {}
func (*CMsgTFRequestTF2FriendsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{10}
}

func (m *CMsgTFRequestTF2FriendsResponse) GetAccountIds() []uint32 {
	if m != nil {
		return m.AccountIds
	}
	return nil
}

type CSOTFPlayerInfo struct {
	NumNewUsersHelped *uint32 `protobuf:"varint,1,opt,name=num_new_users_helped,json=numNewUsersHelped" json:"num_new_users_helped,omitempty"`
	XXX_unrecognized  []byte  `json:"-"`
}

func (m *CSOTFPlayerInfo) Reset()                    { *m = CSOTFPlayerInfo{} }
func (m *CSOTFPlayerInfo) String() string            { return proto.CompactTextString(m) }
func (*CSOTFPlayerInfo) ProtoMessage()               {}
func (*CSOTFPlayerInfo) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{11} }

func (m *CSOTFPlayerInfo) GetNumNewUsersHelped() uint32 {
	if m != nil && m.NumNewUsersHelped != nil {
		return *m.NumNewUsersHelped
	}
	return 0
}

type CMsgTFThankedBySomeone struct {
	ThankerSteamId   *uint64 `protobuf:"varint,1,opt,name=thanker_steam_id,json=thankerSteamId" json:"thanker_steam_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgTFThankedBySomeone) Reset()                    { *m = CMsgTFThankedBySomeone{} }
func (m *CMsgTFThankedBySomeone) String() string            { return proto.CompactTextString(m) }
func (*CMsgTFThankedBySomeone) ProtoMessage()               {}
func (*CMsgTFThankedBySomeone) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{12} }

func (m *CMsgTFThankedBySomeone) GetThankerSteamId() uint64 {
	if m != nil && m.ThankerSteamId != nil {
		return *m.ThankerSteamId
	}
	return 0
}

type CMsgTFThankedSomeone struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMsgTFThankedSomeone) Reset()                    { *m = CMsgTFThankedSomeone{} }
func (m *CMsgTFThankedSomeone) String() string            { return proto.CompactTextString(m) }
func (*CMsgTFThankedSomeone) ProtoMessage()               {}
func (*CMsgTFThankedSomeone) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{13} }

type CMsgTFFreeTrialConvertedToPremium struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMsgTFFreeTrialConvertedToPremium) Reset()         { *m = CMsgTFFreeTrialConvertedToPremium{} }
func (m *CMsgTFFreeTrialConvertedToPremium) String() string { return proto.CompactTextString(m) }
func (*CMsgTFFreeTrialConvertedToPremium) ProtoMessage()    {}
func (*CMsgTFFreeTrialConvertedToPremium) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{14}
}

type CMsgSaxxyAwarded struct {
	Category         *uint32  `protobuf:"varint,1,opt,name=category" json:"category,omitempty"`
	WinnerNames      []string `protobuf:"bytes,2,rep,name=winner_names,json=winnerNames" json:"winner_names,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CMsgSaxxyAwarded) Reset()                    { *m = CMsgSaxxyAwarded{} }
func (m *CMsgSaxxyAwarded) String() string            { return proto.CompactTextString(m) }
func (*CMsgSaxxyAwarded) ProtoMessage()               {}
func (*CMsgSaxxyAwarded) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{15} }

func (m *CMsgSaxxyAwarded) GetCategory() uint32 {
	if m != nil && m.Category != nil {
		return *m.Category
	}
	return 0
}

func (m *CMsgSaxxyAwarded) GetWinnerNames() []string {
	if m != nil {
		return m.WinnerNames
	}
	return nil
}

type CMsgReplaySubmitContestEntry struct {
	YoutubeUrl       *string `protobuf:"bytes,1,opt,name=youtube_url,json=youtubeUrl" json:"youtube_url,omitempty"`
	Category         *uint32 `protobuf:"varint,2,opt,name=category" json:"category,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgReplaySubmitContestEntry) Reset()                    { *m = CMsgReplaySubmitContestEntry{} }
func (m *CMsgReplaySubmitContestEntry) String() string            { return proto.CompactTextString(m) }
func (*CMsgReplaySubmitContestEntry) ProtoMessage()               {}
func (*CMsgReplaySubmitContestEntry) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{16} }

func (m *CMsgReplaySubmitContestEntry) GetYoutubeUrl() string {
	if m != nil && m.YoutubeUrl != nil {
		return *m.YoutubeUrl
	}
	return ""
}

func (m *CMsgReplaySubmitContestEntry) GetCategory() uint32 {
	if m != nil && m.Category != nil {
		return *m.Category
	}
	return 0
}

type CMsgReplaySubmitContestEntryResponse struct {
	Success          *bool  `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMsgReplaySubmitContestEntryResponse) Reset()         { *m = CMsgReplaySubmitContestEntryResponse{} }
func (m *CMsgReplaySubmitContestEntryResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgReplaySubmitContestEntryResponse) ProtoMessage()    {}
func (*CMsgReplaySubmitContestEntryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{17}
}

func (m *CMsgReplaySubmitContestEntryResponse) GetSuccess() bool {
	if m != nil && m.Success != nil {
		return *m.Success
	}
	return false
}

type CReplayCachedContestData struct {
	Timestamp        *uint32  `protobuf:"fixed32,1,opt,name=timestamp" json:"timestamp,omitempty"`
	NumVotesLastDay  *uint32  `protobuf:"varint,2,opt,name=num_votes_last_day,json=numVotesLastDay" json:"num_votes_last_day,omitempty"`
	VideoEntryIds    []uint32 `protobuf:"varint,3,rep,name=video_entry_ids,json=videoEntryIds" json:"video_entry_ids,omitempty"`
	NumFlagsLastDay  *uint32  `protobuf:"varint,4,opt,name=num_flags_last_day,json=numFlagsLastDay" json:"num_flags_last_day,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CReplayCachedContestData) Reset()                    { *m = CReplayCachedContestData{} }
func (m *CReplayCachedContestData) String() string            { return proto.CompactTextString(m) }
func (*CReplayCachedContestData) ProtoMessage()               {}
func (*CReplayCachedContestData) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{18} }

func (m *CReplayCachedContestData) GetTimestamp() uint32 {
	if m != nil && m.Timestamp != nil {
		return *m.Timestamp
	}
	return 0
}

func (m *CReplayCachedContestData) GetNumVotesLastDay() uint32 {
	if m != nil && m.NumVotesLastDay != nil {
		return *m.NumVotesLastDay
	}
	return 0
}

func (m *CReplayCachedContestData) GetVideoEntryIds() []uint32 {
	if m != nil {
		return m.VideoEntryIds
	}
	return nil
}

func (m *CReplayCachedContestData) GetNumFlagsLastDay() uint32 {
	if m != nil && m.NumFlagsLastDay != nil {
		return *m.NumFlagsLastDay
	}
	return 0
}

type CMsgTFCoaching_AddToCoaches struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMsgTFCoaching_AddToCoaches) Reset()                    { *m = CMsgTFCoaching_AddToCoaches{} }
func (m *CMsgTFCoaching_AddToCoaches) String() string            { return proto.CompactTextString(m) }
func (*CMsgTFCoaching_AddToCoaches) ProtoMessage()               {}
func (*CMsgTFCoaching_AddToCoaches) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{19} }

type CMsgTFCoaching_RemoveFromCoaches struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMsgTFCoaching_RemoveFromCoaches) Reset()         { *m = CMsgTFCoaching_RemoveFromCoaches{} }
func (m *CMsgTFCoaching_RemoveFromCoaches) String() string { return proto.CompactTextString(m) }
func (*CMsgTFCoaching_RemoveFromCoaches) ProtoMessage()    {}
func (*CMsgTFCoaching_RemoveFromCoaches) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{20}
}

type CMsgTFCoaching_FindCoach struct {
	AccountIdFriendAsCoach *uint32 `protobuf:"varint,1,opt,name=account_id_friend_as_coach,json=accountIdFriendAsCoach" json:"account_id_friend_as_coach,omitempty"`
	XXX_unrecognized       []byte  `json:"-"`
}

func (m *CMsgTFCoaching_FindCoach) Reset()                    { *m = CMsgTFCoaching_FindCoach{} }
func (m *CMsgTFCoaching_FindCoach) String() string            { return proto.CompactTextString(m) }
func (*CMsgTFCoaching_FindCoach) ProtoMessage()               {}
func (*CMsgTFCoaching_FindCoach) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{21} }

func (m *CMsgTFCoaching_FindCoach) GetAccountIdFriendAsCoach() uint32 {
	if m != nil && m.AccountIdFriendAsCoach != nil {
		return *m.AccountIdFriendAsCoach
	}
	return 0
}

type CMsgTFCoaching_FindCoachResponse struct {
	FoundCoach       *bool   `protobuf:"varint,1,opt,name=found_coach,json=foundCoach" json:"found_coach,omitempty"`
	NumLikes         *uint32 `protobuf:"varint,2,opt,name=num_likes,json=numLikes" json:"num_likes,omitempty"`
	CoachName        *string `protobuf:"bytes,3,opt,name=coach_name,json=coachName" json:"coach_name,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgTFCoaching_FindCoachResponse) Reset()         { *m = CMsgTFCoaching_FindCoachResponse{} }
func (m *CMsgTFCoaching_FindCoachResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgTFCoaching_FindCoachResponse) ProtoMessage()    {}
func (*CMsgTFCoaching_FindCoachResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{22}
}

func (m *CMsgTFCoaching_FindCoachResponse) GetFoundCoach() bool {
	if m != nil && m.FoundCoach != nil {
		return *m.FoundCoach
	}
	return false
}

func (m *CMsgTFCoaching_FindCoachResponse) GetNumLikes() uint32 {
	if m != nil && m.NumLikes != nil {
		return *m.NumLikes
	}
	return 0
}

func (m *CMsgTFCoaching_FindCoachResponse) GetCoachName() string {
	if m != nil && m.CoachName != nil {
		return *m.CoachName
	}
	return ""
}

type CMsgTFCoaching_AskCoach struct {
	AccountIdStudent *uint32 `protobuf:"varint,1,opt,name=account_id_student,json=accountIdStudent" json:"account_id_student,omitempty"`
	StudentIsFriend  *bool   `protobuf:"varint,2,opt,name=student_is_friend,json=studentIsFriend" json:"student_is_friend,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgTFCoaching_AskCoach) Reset()                    { *m = CMsgTFCoaching_AskCoach{} }
func (m *CMsgTFCoaching_AskCoach) String() string            { return proto.CompactTextString(m) }
func (*CMsgTFCoaching_AskCoach) ProtoMessage()               {}
func (*CMsgTFCoaching_AskCoach) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{23} }

func (m *CMsgTFCoaching_AskCoach) GetAccountIdStudent() uint32 {
	if m != nil && m.AccountIdStudent != nil {
		return *m.AccountIdStudent
	}
	return 0
}

func (m *CMsgTFCoaching_AskCoach) GetStudentIsFriend() bool {
	if m != nil && m.StudentIsFriend != nil {
		return *m.StudentIsFriend
	}
	return false
}

type CMsgTFCoaching_AskCoachResponse struct {
	AcceptCoachingAssignment *bool  `protobuf:"varint,1,opt,name=accept_coaching_assignment,json=acceptCoachingAssignment" json:"accept_coaching_assignment,omitempty"`
	XXX_unrecognized         []byte `json:"-"`
}

func (m *CMsgTFCoaching_AskCoachResponse) Reset()         { *m = CMsgTFCoaching_AskCoachResponse{} }
func (m *CMsgTFCoaching_AskCoachResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgTFCoaching_AskCoachResponse) ProtoMessage()    {}
func (*CMsgTFCoaching_AskCoachResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{24}
}

func (m *CMsgTFCoaching_AskCoachResponse) GetAcceptCoachingAssignment() bool {
	if m != nil && m.AcceptCoachingAssignment != nil {
		return *m.AcceptCoachingAssignment
	}
	return false
}

type CMsgTFCoaching_CoachJoinGame struct {
	JoinGame         *bool   `protobuf:"varint,1,opt,name=join_game,json=joinGame" json:"join_game,omitempty"`
	ServerAddress    *uint32 `protobuf:"varint,2,opt,name=server_address,json=serverAddress" json:"server_address,omitempty"`
	ServerPort       *uint32 `protobuf:"varint,3,opt,name=server_port,json=serverPort" json:"server_port,omitempty"`
	AccountIdStudent *uint32 `protobuf:"varint,4,opt,name=account_id_student,json=accountIdStudent" json:"account_id_student,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgTFCoaching_CoachJoinGame) Reset()                    { *m = CMsgTFCoaching_CoachJoinGame{} }
func (m *CMsgTFCoaching_CoachJoinGame) String() string            { return proto.CompactTextString(m) }
func (*CMsgTFCoaching_CoachJoinGame) ProtoMessage()               {}
func (*CMsgTFCoaching_CoachJoinGame) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{25} }

func (m *CMsgTFCoaching_CoachJoinGame) GetJoinGame() bool {
	if m != nil && m.JoinGame != nil {
		return *m.JoinGame
	}
	return false
}

func (m *CMsgTFCoaching_CoachJoinGame) GetServerAddress() uint32 {
	if m != nil && m.ServerAddress != nil {
		return *m.ServerAddress
	}
	return 0
}

func (m *CMsgTFCoaching_CoachJoinGame) GetServerPort() uint32 {
	if m != nil && m.ServerPort != nil {
		return *m.ServerPort
	}
	return 0
}

func (m *CMsgTFCoaching_CoachJoinGame) GetAccountIdStudent() uint32 {
	if m != nil && m.AccountIdStudent != nil {
		return *m.AccountIdStudent
	}
	return 0
}

type CMsgTFCoaching_CoachJoining struct {
	AccountIdCoach   *uint32 `protobuf:"varint,1,opt,name=account_id_coach,json=accountIdCoach" json:"account_id_coach,omitempty"`
	AccountIdStudent *uint32 `protobuf:"varint,2,opt,name=account_id_student,json=accountIdStudent" json:"account_id_student,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgTFCoaching_CoachJoining) Reset()                    { *m = CMsgTFCoaching_CoachJoining{} }
func (m *CMsgTFCoaching_CoachJoining) String() string            { return proto.CompactTextString(m) }
func (*CMsgTFCoaching_CoachJoining) ProtoMessage()               {}
func (*CMsgTFCoaching_CoachJoining) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{26} }

func (m *CMsgTFCoaching_CoachJoining) GetAccountIdCoach() uint32 {
	if m != nil && m.AccountIdCoach != nil {
		return *m.AccountIdCoach
	}
	return 0
}

func (m *CMsgTFCoaching_CoachJoining) GetAccountIdStudent() uint32 {
	if m != nil && m.AccountIdStudent != nil {
		return *m.AccountIdStudent
	}
	return 0
}

type CMsgTFCoaching_CoachJoined struct {
	AccountIdCoach   *uint32 `protobuf:"varint,1,opt,name=account_id_coach,json=accountIdCoach" json:"account_id_coach,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgTFCoaching_CoachJoined) Reset()                    { *m = CMsgTFCoaching_CoachJoined{} }
func (m *CMsgTFCoaching_CoachJoined) String() string            { return proto.CompactTextString(m) }
func (*CMsgTFCoaching_CoachJoined) ProtoMessage()               {}
func (*CMsgTFCoaching_CoachJoined) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{27} }

func (m *CMsgTFCoaching_CoachJoined) GetAccountIdCoach() uint32 {
	if m != nil && m.AccountIdCoach != nil {
		return *m.AccountIdCoach
	}
	return 0
}

type CMsgTFCoaching_LikeCurrentCoach struct {
	LikeCoach        *bool  `protobuf:"varint,1,opt,name=like_coach,json=likeCoach" json:"like_coach,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMsgTFCoaching_LikeCurrentCoach) Reset()         { *m = CMsgTFCoaching_LikeCurrentCoach{} }
func (m *CMsgTFCoaching_LikeCurrentCoach) String() string { return proto.CompactTextString(m) }
func (*CMsgTFCoaching_LikeCurrentCoach) ProtoMessage()    {}
func (*CMsgTFCoaching_LikeCurrentCoach) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{28}
}

func (m *CMsgTFCoaching_LikeCurrentCoach) GetLikeCoach() bool {
	if m != nil && m.LikeCoach != nil {
		return *m.LikeCoach
	}
	return false
}

type CMsgTFCoaching_RemoveCurrentCoach struct {
	AccountIdCoach   *uint32 `protobuf:"varint,1,opt,name=account_id_coach,json=accountIdCoach" json:"account_id_coach,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgTFCoaching_RemoveCurrentCoach) Reset()         { *m = CMsgTFCoaching_RemoveCurrentCoach{} }
func (m *CMsgTFCoaching_RemoveCurrentCoach) String() string { return proto.CompactTextString(m) }
func (*CMsgTFCoaching_RemoveCurrentCoach) ProtoMessage()    {}
func (*CMsgTFCoaching_RemoveCurrentCoach) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{29}
}

func (m *CMsgTFCoaching_RemoveCurrentCoach) GetAccountIdCoach() uint32 {
	if m != nil && m.AccountIdCoach != nil {
		return *m.AccountIdCoach
	}
	return 0
}

type CMsgTFQuickplay_ScoreServers struct {
	Servers          []*CMsgTFQuickplay_ScoreServers_ServerInfo `protobuf:"bytes,1,rep,name=servers" json:"servers,omitempty"`
	XXX_unrecognized []byte                                     `json:"-"`
}

func (m *CMsgTFQuickplay_ScoreServers) Reset()                    { *m = CMsgTFQuickplay_ScoreServers{} }
func (m *CMsgTFQuickplay_ScoreServers) String() string            { return proto.CompactTextString(m) }
func (*CMsgTFQuickplay_ScoreServers) ProtoMessage()               {}
func (*CMsgTFQuickplay_ScoreServers) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{30} }

func (m *CMsgTFQuickplay_ScoreServers) GetServers() []*CMsgTFQuickplay_ScoreServers_ServerInfo {
	if m != nil {
		return m.Servers
	}
	return nil
}

type CMsgTFQuickplay_ScoreServers_ServerInfo struct {
	ServerAddress    *uint32  `protobuf:"varint,1,opt,name=server_address,json=serverAddress" json:"server_address,omitempty"`
	ServerPort       *uint32  `protobuf:"varint,2,opt,name=server_port,json=serverPort" json:"server_port,omitempty"`
	NumUsers         *uint32  `protobuf:"varint,3,opt,name=num_users,json=numUsers" json:"num_users,omitempty"`
	SteamId          *uint64  `protobuf:"varint,4,opt,name=steam_id,json=steamId" json:"steam_id,omitempty"`
	MaxUsers         *uint32  `protobuf:"varint,5,opt,name=max_users,json=maxUsers" json:"max_users,omitempty"`
	UserScore        *float32 `protobuf:"fixed32,6,opt,name=user_score,json=userScore" json:"user_score,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CMsgTFQuickplay_ScoreServers_ServerInfo) Reset() {
	*m = CMsgTFQuickplay_ScoreServers_ServerInfo{}
}
func (m *CMsgTFQuickplay_ScoreServers_ServerInfo) String() string { return proto.CompactTextString(m) }
func (*CMsgTFQuickplay_ScoreServers_ServerInfo) ProtoMessage()    {}
func (*CMsgTFQuickplay_ScoreServers_ServerInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{30, 0}
}

func (m *CMsgTFQuickplay_ScoreServers_ServerInfo) GetServerAddress() uint32 {
	if m != nil && m.ServerAddress != nil {
		return *m.ServerAddress
	}
	return 0
}

func (m *CMsgTFQuickplay_ScoreServers_ServerInfo) GetServerPort() uint32 {
	if m != nil && m.ServerPort != nil {
		return *m.ServerPort
	}
	return 0
}

func (m *CMsgTFQuickplay_ScoreServers_ServerInfo) GetNumUsers() uint32 {
	if m != nil && m.NumUsers != nil {
		return *m.NumUsers
	}
	return 0
}

func (m *CMsgTFQuickplay_ScoreServers_ServerInfo) GetSteamId() uint64 {
	if m != nil && m.SteamId != nil {
		return *m.SteamId
	}
	return 0
}

func (m *CMsgTFQuickplay_ScoreServers_ServerInfo) GetMaxUsers() uint32 {
	if m != nil && m.MaxUsers != nil {
		return *m.MaxUsers
	}
	return 0
}

func (m *CMsgTFQuickplay_ScoreServers_ServerInfo) GetUserScore() float32 {
	if m != nil && m.UserScore != nil {
		return *m.UserScore
	}
	return 0
}

type CMsgTFQuickplay_ScoreServersResponse struct {
	Servers          []*CMsgTFQuickplay_ScoreServersResponse_ServerInfo `protobuf:"bytes,1,rep,name=servers" json:"servers,omitempty"`
	XXX_unrecognized []byte                                             `json:"-"`
}

func (m *CMsgTFQuickplay_ScoreServersResponse) Reset()         { *m = CMsgTFQuickplay_ScoreServersResponse{} }
func (m *CMsgTFQuickplay_ScoreServersResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgTFQuickplay_ScoreServersResponse) ProtoMessage()    {}
func (*CMsgTFQuickplay_ScoreServersResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{31}
}

func (m *CMsgTFQuickplay_ScoreServersResponse) GetServers() []*CMsgTFQuickplay_ScoreServersResponse_ServerInfo {
	if m != nil {
		return m.Servers
	}
	return nil
}

type CMsgTFQuickplay_ScoreServersResponse_ServerInfo struct {
	ServerAddress    *uint32  `protobuf:"varint,1,opt,name=server_address,json=serverAddress" json:"server_address,omitempty"`
	ServerPort       *uint32  `protobuf:"varint,2,opt,name=server_port,json=serverPort" json:"server_port,omitempty"`
	TotalScore       *float32 `protobuf:"fixed32,3,opt,name=total_score,json=totalScore" json:"total_score,omitempty"`
	SteamId          *uint64  `protobuf:"varint,4,opt,name=steam_id,json=steamId" json:"steam_id,omitempty"`
	OptionsScore     *uint32  `protobuf:"varint,5,opt,name=options_score,json=optionsScore" json:"options_score,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CMsgTFQuickplay_ScoreServersResponse_ServerInfo) Reset() {
	*m = CMsgTFQuickplay_ScoreServersResponse_ServerInfo{}
}
func (m *CMsgTFQuickplay_ScoreServersResponse_ServerInfo) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgTFQuickplay_ScoreServersResponse_ServerInfo) ProtoMessage() {}
func (*CMsgTFQuickplay_ScoreServersResponse_ServerInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{31, 0}
}

func (m *CMsgTFQuickplay_ScoreServersResponse_ServerInfo) GetServerAddress() uint32 {
	if m != nil && m.ServerAddress != nil {
		return *m.ServerAddress
	}
	return 0
}

func (m *CMsgTFQuickplay_ScoreServersResponse_ServerInfo) GetServerPort() uint32 {
	if m != nil && m.ServerPort != nil {
		return *m.ServerPort
	}
	return 0
}

func (m *CMsgTFQuickplay_ScoreServersResponse_ServerInfo) GetTotalScore() float32 {
	if m != nil && m.TotalScore != nil {
		return *m.TotalScore
	}
	return 0
}

func (m *CMsgTFQuickplay_ScoreServersResponse_ServerInfo) GetSteamId() uint64 {
	if m != nil && m.SteamId != nil {
		return *m.SteamId
	}
	return 0
}

func (m *CMsgTFQuickplay_ScoreServersResponse_ServerInfo) GetOptionsScore() uint32 {
	if m != nil && m.OptionsScore != nil {
		return *m.OptionsScore
	}
	return 0
}

type CMsgTFQuickplay_PlayerJoining struct {
	AccountId        *uint32 `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgTFQuickplay_PlayerJoining) Reset()                    { *m = CMsgTFQuickplay_PlayerJoining{} }
func (m *CMsgTFQuickplay_PlayerJoining) String() string            { return proto.CompactTextString(m) }
func (*CMsgTFQuickplay_PlayerJoining) ProtoMessage()               {}
func (*CMsgTFQuickplay_PlayerJoining) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{32} }

func (m *CMsgTFQuickplay_PlayerJoining) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

type CMsgGC_GameServer_LevelInfo struct {
	LevelLoaded      *bool   `protobuf:"varint,1,opt,name=level_loaded,json=levelLoaded" json:"level_loaded,omitempty"`
	LevelName        *string `protobuf:"bytes,2,opt,name=level_name,json=levelName" json:"level_name,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgGC_GameServer_LevelInfo) Reset()                    { *m = CMsgGC_GameServer_LevelInfo{} }
func (m *CMsgGC_GameServer_LevelInfo) String() string            { return proto.CompactTextString(m) }
func (*CMsgGC_GameServer_LevelInfo) ProtoMessage()               {}
func (*CMsgGC_GameServer_LevelInfo) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{33} }

func (m *CMsgGC_GameServer_LevelInfo) GetLevelLoaded() bool {
	if m != nil && m.LevelLoaded != nil {
		return *m.LevelLoaded
	}
	return false
}

func (m *CMsgGC_GameServer_LevelInfo) GetLevelName() string {
	if m != nil && m.LevelName != nil {
		return *m.LevelName
	}
	return ""
}

type CMsgGC_GameServer_AuthChallenge struct {
	ChallengeString  *string `protobuf:"bytes,1,opt,name=challenge_string,json=challengeString" json:"challenge_string,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgGC_GameServer_AuthChallenge) Reset()         { *m = CMsgGC_GameServer_AuthChallenge{} }
func (m *CMsgGC_GameServer_AuthChallenge) String() string { return proto.CompactTextString(m) }
func (*CMsgGC_GameServer_AuthChallenge) ProtoMessage()    {}
func (*CMsgGC_GameServer_AuthChallenge) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{34}
}

func (m *CMsgGC_GameServer_AuthChallenge) GetChallengeString() string {
	if m != nil && m.ChallengeString != nil {
		return *m.ChallengeString
	}
	return ""
}

type CMsgGC_GameServer_AuthResult struct {
	Authenticated           *bool   `protobuf:"varint,1,opt,name=authenticated" json:"authenticated,omitempty"`
	GameServerStanding      *int32  `protobuf:"varint,2,opt,name=game_server_standing,json=gameServerStanding" json:"game_server_standing,omitempty"`
	GameServerStandingTrend *int32  `protobuf:"varint,3,opt,name=game_server_standing_trend,json=gameServerStandingTrend" json:"game_server_standing_trend,omitempty"`
	IsValveServer           *bool   `protobuf:"varint,4,opt,name=is_valve_server,json=isValveServer" json:"is_valve_server,omitempty"`
	Message                 *string `protobuf:"bytes,5,opt,name=message" json:"message,omitempty"`
	XXX_unrecognized        []byte  `json:"-"`
}

func (m *CMsgGC_GameServer_AuthResult) Reset()                    { *m = CMsgGC_GameServer_AuthResult{} }
func (m *CMsgGC_GameServer_AuthResult) String() string            { return proto.CompactTextString(m) }
func (*CMsgGC_GameServer_AuthResult) ProtoMessage()               {}
func (*CMsgGC_GameServer_AuthResult) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{35} }

func (m *CMsgGC_GameServer_AuthResult) GetAuthenticated() bool {
	if m != nil && m.Authenticated != nil {
		return *m.Authenticated
	}
	return false
}

func (m *CMsgGC_GameServer_AuthResult) GetGameServerStanding() int32 {
	if m != nil && m.GameServerStanding != nil {
		return *m.GameServerStanding
	}
	return 0
}

func (m *CMsgGC_GameServer_AuthResult) GetGameServerStandingTrend() int32 {
	if m != nil && m.GameServerStandingTrend != nil {
		return *m.GameServerStandingTrend
	}
	return 0
}

func (m *CMsgGC_GameServer_AuthResult) GetIsValveServer() bool {
	if m != nil && m.IsValveServer != nil {
		return *m.IsValveServer
	}
	return false
}

func (m *CMsgGC_GameServer_AuthResult) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

type CMsgGC_GameServer_AuthChallengeResponse struct {
	GameServerAccountId   *uint32 `protobuf:"varint,1,opt,name=game_server_account_id,json=gameServerAccountId" json:"game_server_account_id,omitempty"`
	HashedChallengeString []byte  `protobuf:"bytes,2,opt,name=hashed_challenge_string,json=hashedChallengeString" json:"hashed_challenge_string,omitempty"`
	XXX_unrecognized      []byte  `json:"-"`
}

func (m *CMsgGC_GameServer_AuthChallengeResponse) Reset() {
	*m = CMsgGC_GameServer_AuthChallengeResponse{}
}
func (m *CMsgGC_GameServer_AuthChallengeResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgGC_GameServer_AuthChallengeResponse) ProtoMessage()    {}
func (*CMsgGC_GameServer_AuthChallengeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{36}
}

func (m *CMsgGC_GameServer_AuthChallengeResponse) GetGameServerAccountId() uint32 {
	if m != nil && m.GameServerAccountId != nil {
		return *m.GameServerAccountId
	}
	return 0
}

func (m *CMsgGC_GameServer_AuthChallengeResponse) GetHashedChallengeString() []byte {
	if m != nil {
		return m.HashedChallengeString
	}
	return nil
}

type CMsgGC_GameServer_CreateIdentity struct {
	AccountId        *uint32 `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgGC_GameServer_CreateIdentity) Reset()         { *m = CMsgGC_GameServer_CreateIdentity{} }
func (m *CMsgGC_GameServer_CreateIdentity) String() string { return proto.CompactTextString(m) }
func (*CMsgGC_GameServer_CreateIdentity) ProtoMessage()    {}
func (*CMsgGC_GameServer_CreateIdentity) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{37}
}

func (m *CMsgGC_GameServer_CreateIdentity) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

type CMsgGC_GameServer_CreateIdentityResponse struct {
	AccountCreated          *bool                                             `protobuf:"varint,1,opt,name=account_created,json=accountCreated" json:"account_created,omitempty"`
	GameServerAccountId     *uint32                                           `protobuf:"varint,2,opt,name=game_server_account_id,json=gameServerAccountId" json:"game_server_account_id,omitempty"`
	GameServerIdentityToken *string                                           `protobuf:"bytes,3,opt,name=game_server_identity_token,json=gameServerIdentityToken" json:"game_server_identity_token,omitempty"`
	Status                  *CMsgGC_GameServer_CreateIdentityResponse_EStatus `protobuf:"varint,4,opt,name=status,enum=CMsgGC_GameServer_CreateIdentityResponse_EStatus,def=0" json:"status,omitempty"`
	XXX_unrecognized        []byte                                            `json:"-"`
}

func (m *CMsgGC_GameServer_CreateIdentityResponse) Reset() {
	*m = CMsgGC_GameServer_CreateIdentityResponse{}
}
func (m *CMsgGC_GameServer_CreateIdentityResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgGC_GameServer_CreateIdentityResponse) ProtoMessage()    {}
func (*CMsgGC_GameServer_CreateIdentityResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{38}
}

const Default_CMsgGC_GameServer_CreateIdentityResponse_Status CMsgGC_GameServer_CreateIdentityResponse_EStatus = CMsgGC_GameServer_CreateIdentityResponse_kStatus_GenericFailure

func (m *CMsgGC_GameServer_CreateIdentityResponse) GetAccountCreated() bool {
	if m != nil && m.AccountCreated != nil {
		return *m.AccountCreated
	}
	return false
}

func (m *CMsgGC_GameServer_CreateIdentityResponse) GetGameServerAccountId() uint32 {
	if m != nil && m.GameServerAccountId != nil {
		return *m.GameServerAccountId
	}
	return 0
}

func (m *CMsgGC_GameServer_CreateIdentityResponse) GetGameServerIdentityToken() string {
	if m != nil && m.GameServerIdentityToken != nil {
		return *m.GameServerIdentityToken
	}
	return ""
}

func (m *CMsgGC_GameServer_CreateIdentityResponse) GetStatus() CMsgGC_GameServer_CreateIdentityResponse_EStatus {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return Default_CMsgGC_GameServer_CreateIdentityResponse_Status
}

type CMsgGC_GameServer_List struct {
	AccountId        *uint32 `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgGC_GameServer_List) Reset()                    { *m = CMsgGC_GameServer_List{} }
func (m *CMsgGC_GameServer_List) String() string            { return proto.CompactTextString(m) }
func (*CMsgGC_GameServer_List) ProtoMessage()               {}
func (*CMsgGC_GameServer_List) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{39} }

func (m *CMsgGC_GameServer_List) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

type CMsgGC_GameServer_ListResponse struct {
	OwnedGameServers []*CMsgGC_GameServer_ListResponse_GameServerIdentity `protobuf:"bytes,1,rep,name=owned_game_servers,json=ownedGameServers" json:"owned_game_servers,omitempty"`
	XXX_unrecognized []byte                                               `json:"-"`
}

func (m *CMsgGC_GameServer_ListResponse) Reset()                    { *m = CMsgGC_GameServer_ListResponse{} }
func (m *CMsgGC_GameServer_ListResponse) String() string            { return proto.CompactTextString(m) }
func (*CMsgGC_GameServer_ListResponse) ProtoMessage()               {}
func (*CMsgGC_GameServer_ListResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{40} }

func (m *CMsgGC_GameServer_ListResponse) GetOwnedGameServers() []*CMsgGC_GameServer_ListResponse_GameServerIdentity {
	if m != nil {
		return m.OwnedGameServers
	}
	return nil
}

type CMsgGC_GameServer_ListResponse_GameServerIdentity struct {
	GameServerAccountId     *uint32 `protobuf:"varint,1,opt,name=game_server_account_id,json=gameServerAccountId" json:"game_server_account_id,omitempty"`
	GameServerIdentityToken *string `protobuf:"bytes,2,opt,name=game_server_identity_token,json=gameServerIdentityToken" json:"game_server_identity_token,omitempty"`
	GameServerStanding      *int32  `protobuf:"varint,3,opt,name=game_server_standing,json=gameServerStanding" json:"game_server_standing,omitempty"`
	GameServerStandingTrend *int32  `protobuf:"varint,4,opt,name=game_server_standing_trend,json=gameServerStandingTrend" json:"game_server_standing_trend,omitempty"`
	XXX_unrecognized        []byte  `json:"-"`
}

func (m *CMsgGC_GameServer_ListResponse_GameServerIdentity) Reset() {
	*m = CMsgGC_GameServer_ListResponse_GameServerIdentity{}
}
func (m *CMsgGC_GameServer_ListResponse_GameServerIdentity) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgGC_GameServer_ListResponse_GameServerIdentity) ProtoMessage() {}
func (*CMsgGC_GameServer_ListResponse_GameServerIdentity) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{40, 0}
}

func (m *CMsgGC_GameServer_ListResponse_GameServerIdentity) GetGameServerAccountId() uint32 {
	if m != nil && m.GameServerAccountId != nil {
		return *m.GameServerAccountId
	}
	return 0
}

func (m *CMsgGC_GameServer_ListResponse_GameServerIdentity) GetGameServerIdentityToken() string {
	if m != nil && m.GameServerIdentityToken != nil {
		return *m.GameServerIdentityToken
	}
	return ""
}

func (m *CMsgGC_GameServer_ListResponse_GameServerIdentity) GetGameServerStanding() int32 {
	if m != nil && m.GameServerStanding != nil {
		return *m.GameServerStanding
	}
	return 0
}

func (m *CMsgGC_GameServer_ListResponse_GameServerIdentity) GetGameServerStandingTrend() int32 {
	if m != nil && m.GameServerStandingTrend != nil {
		return *m.GameServerStandingTrend
	}
	return 0
}

type CMsgGC_GameServer_ResetIdentity struct {
	GameServerAccountId *uint32 `protobuf:"varint,1,opt,name=game_server_account_id,json=gameServerAccountId" json:"game_server_account_id,omitempty"`
	XXX_unrecognized    []byte  `json:"-"`
}

func (m *CMsgGC_GameServer_ResetIdentity) Reset()         { *m = CMsgGC_GameServer_ResetIdentity{} }
func (m *CMsgGC_GameServer_ResetIdentity) String() string { return proto.CompactTextString(m) }
func (*CMsgGC_GameServer_ResetIdentity) ProtoMessage()    {}
func (*CMsgGC_GameServer_ResetIdentity) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{41}
}

func (m *CMsgGC_GameServer_ResetIdentity) GetGameServerAccountId() uint32 {
	if m != nil && m.GameServerAccountId != nil {
		return *m.GameServerAccountId
	}
	return 0
}

type CMsgGC_GameServer_ResetIdentityResponse struct {
	GameServerIdentityTokenReset *bool   `protobuf:"varint,1,opt,name=game_server_identity_token_reset,json=gameServerIdentityTokenReset" json:"game_server_identity_token_reset,omitempty"`
	GameServerAccountId          *uint32 `protobuf:"varint,2,opt,name=game_server_account_id,json=gameServerAccountId" json:"game_server_account_id,omitempty"`
	GameServerIdentityToken      *string `protobuf:"bytes,3,opt,name=game_server_identity_token,json=gameServerIdentityToken" json:"game_server_identity_token,omitempty"`
	XXX_unrecognized             []byte  `json:"-"`
}

func (m *CMsgGC_GameServer_ResetIdentityResponse) Reset() {
	*m = CMsgGC_GameServer_ResetIdentityResponse{}
}
func (m *CMsgGC_GameServer_ResetIdentityResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgGC_GameServer_ResetIdentityResponse) ProtoMessage()    {}
func (*CMsgGC_GameServer_ResetIdentityResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{42}
}

func (m *CMsgGC_GameServer_ResetIdentityResponse) GetGameServerIdentityTokenReset() bool {
	if m != nil && m.GameServerIdentityTokenReset != nil {
		return *m.GameServerIdentityTokenReset
	}
	return false
}

func (m *CMsgGC_GameServer_ResetIdentityResponse) GetGameServerAccountId() uint32 {
	if m != nil && m.GameServerAccountId != nil {
		return *m.GameServerAccountId
	}
	return 0
}

func (m *CMsgGC_GameServer_ResetIdentityResponse) GetGameServerIdentityToken() string {
	if m != nil && m.GameServerIdentityToken != nil {
		return *m.GameServerIdentityToken
	}
	return ""
}

type CMsgGC_GameServer_AckPolicy struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMsgGC_GameServer_AckPolicy) Reset()                    { *m = CMsgGC_GameServer_AckPolicy{} }
func (m *CMsgGC_GameServer_AckPolicy) String() string            { return proto.CompactTextString(m) }
func (*CMsgGC_GameServer_AckPolicy) ProtoMessage()               {}
func (*CMsgGC_GameServer_AckPolicy) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{43} }

type CMsgGC_GameServer_AckPolicyResponse struct {
	Result           *uint32 `protobuf:"varint,1,opt,name=result" json:"result,omitempty"`
	Message          *string `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgGC_GameServer_AckPolicyResponse) Reset()         { *m = CMsgGC_GameServer_AckPolicyResponse{} }
func (m *CMsgGC_GameServer_AckPolicyResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgGC_GameServer_AckPolicyResponse) ProtoMessage()    {}
func (*CMsgGC_GameServer_AckPolicyResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{44}
}

func (m *CMsgGC_GameServer_AckPolicyResponse) GetResult() uint32 {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return 0
}

func (m *CMsgGC_GameServer_AckPolicyResponse) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

type CMsgGC_Client_UseServerModificationItem struct {
	ItemId           *uint64 `protobuf:"varint,1,opt,name=item_id,json=itemId" json:"item_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgGC_Client_UseServerModificationItem) Reset() {
	*m = CMsgGC_Client_UseServerModificationItem{}
}
func (m *CMsgGC_Client_UseServerModificationItem) String() string { return proto.CompactTextString(m) }
func (*CMsgGC_Client_UseServerModificationItem) ProtoMessage()    {}
func (*CMsgGC_Client_UseServerModificationItem) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{45}
}

func (m *CMsgGC_Client_UseServerModificationItem) GetItemId() uint64 {
	if m != nil && m.ItemId != nil {
		return *m.ItemId
	}
	return 0
}

type CMsgGC_Client_UseServerModificationItem_Response struct {
	ResponseCode     *CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse `protobuf:"varint,1,opt,name=response_code,json=responseCode,enum=CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse,def=1" json:"response_code,omitempty"`
	XXX_unrecognized []byte                                                                            `json:"-"`
}

func (m *CMsgGC_Client_UseServerModificationItem_Response) Reset() {
	*m = CMsgGC_Client_UseServerModificationItem_Response{}
}
func (m *CMsgGC_Client_UseServerModificationItem_Response) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgGC_Client_UseServerModificationItem_Response) ProtoMessage() {}
func (*CMsgGC_Client_UseServerModificationItem_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{46}
}

const Default_CMsgGC_Client_UseServerModificationItem_Response_ResponseCode CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse = CMsgGC_Client_UseServerModificationItem_Response_kServerModificationItemResponse_AlreadyInUse

func (m *CMsgGC_Client_UseServerModificationItem_Response) GetResponseCode() CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse {
	if m != nil && m.ResponseCode != nil {
		return *m.ResponseCode
	}
	return Default_CMsgGC_Client_UseServerModificationItem_Response_ResponseCode
}

type CMsgGC_GameServer_UseServerModificationItem struct {
	ModificationType *EServerModificationItemType `protobuf:"varint,1,opt,name=modification_type,json=modificationType,enum=EServerModificationItemType,def=1" json:"modification_type,omitempty"`
	XXX_unrecognized []byte                       `json:"-"`
}

func (m *CMsgGC_GameServer_UseServerModificationItem) Reset() {
	*m = CMsgGC_GameServer_UseServerModificationItem{}
}
func (m *CMsgGC_GameServer_UseServerModificationItem) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgGC_GameServer_UseServerModificationItem) ProtoMessage() {}
func (*CMsgGC_GameServer_UseServerModificationItem) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{47}
}

const Default_CMsgGC_GameServer_UseServerModificationItem_ModificationType EServerModificationItemType = EServerModificationItemType_kGameServerModificationItem_Halloween

func (m *CMsgGC_GameServer_UseServerModificationItem) GetModificationType() EServerModificationItemType {
	if m != nil && m.ModificationType != nil {
		return *m.ModificationType
	}
	return Default_CMsgGC_GameServer_UseServerModificationItem_ModificationType
}

type CMsgGC_GameServer_UseServerModificationItem_Response struct {
	ModificationType   *EServerModificationItemType                                                                `protobuf:"varint,1,opt,name=modification_type,json=modificationType,enum=EServerModificationItemType,def=1" json:"modification_type,omitempty"`
	ServerResponseCode *CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse `protobuf:"varint,2,opt,name=server_response_code,json=serverResponseCode,enum=CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse,def=1" json:"server_response_code,omitempty"`
	XXX_unrecognized   []byte                                                                                      `json:"-"`
}

func (m *CMsgGC_GameServer_UseServerModificationItem_Response) Reset() {
	*m = CMsgGC_GameServer_UseServerModificationItem_Response{}
}
func (m *CMsgGC_GameServer_UseServerModificationItem_Response) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgGC_GameServer_UseServerModificationItem_Response) ProtoMessage() {}
func (*CMsgGC_GameServer_UseServerModificationItem_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{48}
}

const Default_CMsgGC_GameServer_UseServerModificationItem_Response_ModificationType EServerModificationItemType = EServerModificationItemType_kGameServerModificationItem_Halloween
const Default_CMsgGC_GameServer_UseServerModificationItem_Response_ServerResponseCode CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse = CMsgGC_GameServer_UseServerModificationItem_Response_kServerModificationItemServerResponse_Accepted

func (m *CMsgGC_GameServer_UseServerModificationItem_Response) GetModificationType() EServerModificationItemType {
	if m != nil && m.ModificationType != nil {
		return *m.ModificationType
	}
	return Default_CMsgGC_GameServer_UseServerModificationItem_Response_ModificationType
}

func (m *CMsgGC_GameServer_UseServerModificationItem_Response) GetServerResponseCode() CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse {
	if m != nil && m.ServerResponseCode != nil {
		return *m.ServerResponseCode
	}
	return Default_CMsgGC_GameServer_UseServerModificationItem_Response_ServerResponseCode
}

type CMsgGC_GameServer_ServerModificationItemExpired struct {
	ModificationType *EServerModificationItemType `protobuf:"varint,1,opt,name=modification_type,json=modificationType,enum=EServerModificationItemType,def=1" json:"modification_type,omitempty"`
	XXX_unrecognized []byte                       `json:"-"`
}

func (m *CMsgGC_GameServer_ServerModificationItemExpired) Reset() {
	*m = CMsgGC_GameServer_ServerModificationItemExpired{}
}
func (m *CMsgGC_GameServer_ServerModificationItemExpired) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgGC_GameServer_ServerModificationItemExpired) ProtoMessage() {}
func (*CMsgGC_GameServer_ServerModificationItemExpired) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{49}
}

const Default_CMsgGC_GameServer_ServerModificationItemExpired_ModificationType EServerModificationItemType = EServerModificationItemType_kGameServerModificationItem_Halloween

func (m *CMsgGC_GameServer_ServerModificationItemExpired) GetModificationType() EServerModificationItemType {
	if m != nil && m.ModificationType != nil {
		return *m.ModificationType
	}
	return Default_CMsgGC_GameServer_ServerModificationItemExpired_ModificationType
}

type CMsgGC_GameServer_ServerModificationItem struct {
	ModificationType *EServerModificationItemType `protobuf:"varint,1,opt,name=modification_type,json=modificationType,enum=EServerModificationItemType,def=1" json:"modification_type,omitempty"`
	Active           *bool                        `protobuf:"varint,2,opt,name=active" json:"active,omitempty"`
	XXX_unrecognized []byte                       `json:"-"`
}

func (m *CMsgGC_GameServer_ServerModificationItem) Reset() {
	*m = CMsgGC_GameServer_ServerModificationItem{}
}
func (m *CMsgGC_GameServer_ServerModificationItem) String() string { return proto.CompactTextString(m) }
func (*CMsgGC_GameServer_ServerModificationItem) ProtoMessage()    {}
func (*CMsgGC_GameServer_ServerModificationItem) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{50}
}

const Default_CMsgGC_GameServer_ServerModificationItem_ModificationType EServerModificationItemType = EServerModificationItemType_kGameServerModificationItem_Halloween

func (m *CMsgGC_GameServer_ServerModificationItem) GetModificationType() EServerModificationItemType {
	if m != nil && m.ModificationType != nil {
		return *m.ModificationType
	}
	return Default_CMsgGC_GameServer_ServerModificationItem_ModificationType
}

func (m *CMsgGC_GameServer_ServerModificationItem) GetActive() bool {
	if m != nil && m.Active != nil {
		return *m.Active
	}
	return false
}

type CMsgGC_Halloween_ReservedItem struct {
	X                []float32 `protobuf:"fixed32,1,rep,name=x" json:"x,omitempty"`
	Y                []float32 `protobuf:"fixed32,2,rep,name=y" json:"y,omitempty"`
	Z                []float32 `protobuf:"fixed32,3,rep,name=z" json:"z,omitempty"`
	SpawnMetaInfo    *uint32   `protobuf:"varint,7,opt,name=spawn_meta_info,json=spawnMetaInfo" json:"spawn_meta_info,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (m *CMsgGC_Halloween_ReservedItem) Reset()                    { *m = CMsgGC_Halloween_ReservedItem{} }
func (m *CMsgGC_Halloween_ReservedItem) String() string            { return proto.CompactTextString(m) }
func (*CMsgGC_Halloween_ReservedItem) ProtoMessage()               {}
func (*CMsgGC_Halloween_ReservedItem) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{51} }

func (m *CMsgGC_Halloween_ReservedItem) GetX() []float32 {
	if m != nil {
		return m.X
	}
	return nil
}

func (m *CMsgGC_Halloween_ReservedItem) GetY() []float32 {
	if m != nil {
		return m.Y
	}
	return nil
}

func (m *CMsgGC_Halloween_ReservedItem) GetZ() []float32 {
	if m != nil {
		return m.Z
	}
	return nil
}

func (m *CMsgGC_Halloween_ReservedItem) GetSpawnMetaInfo() uint32 {
	if m != nil && m.SpawnMetaInfo != nil {
		return *m.SpawnMetaInfo
	}
	return 0
}

type CMsgGC_Halloween_GrantItem struct {
	RecipientAccountId *uint32 `protobuf:"varint,1,opt,name=recipient_account_id,json=recipientAccountId" json:"recipient_account_id,omitempty"`
	LevelId            *uint32 `protobuf:"varint,2,opt,name=level_id,json=levelId" json:"level_id,omitempty"`
	Flagged            *bool   `protobuf:"varint,3,opt,name=flagged" json:"flagged,omitempty"`
	XXX_unrecognized   []byte  `json:"-"`
}

func (m *CMsgGC_Halloween_GrantItem) Reset()                    { *m = CMsgGC_Halloween_GrantItem{} }
func (m *CMsgGC_Halloween_GrantItem) String() string            { return proto.CompactTextString(m) }
func (*CMsgGC_Halloween_GrantItem) ProtoMessage()               {}
func (*CMsgGC_Halloween_GrantItem) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{52} }

func (m *CMsgGC_Halloween_GrantItem) GetRecipientAccountId() uint32 {
	if m != nil && m.RecipientAccountId != nil {
		return *m.RecipientAccountId
	}
	return 0
}

func (m *CMsgGC_Halloween_GrantItem) GetLevelId() uint32 {
	if m != nil && m.LevelId != nil {
		return *m.LevelId
	}
	return 0
}

func (m *CMsgGC_Halloween_GrantItem) GetFlagged() bool {
	if m != nil && m.Flagged != nil {
		return *m.Flagged
	}
	return false
}

type CMsgGC_Halloween_GrantItemResponse struct {
	RecipientAccountId *uint32 `protobuf:"varint,1,opt,name=recipient_account_id,json=recipientAccountId" json:"recipient_account_id,omitempty"`
	XXX_unrecognized   []byte  `json:"-"`
}

func (m *CMsgGC_Halloween_GrantItemResponse) Reset()         { *m = CMsgGC_Halloween_GrantItemResponse{} }
func (m *CMsgGC_Halloween_GrantItemResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgGC_Halloween_GrantItemResponse) ProtoMessage()    {}
func (*CMsgGC_Halloween_GrantItemResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{53}
}

func (m *CMsgGC_Halloween_GrantItemResponse) GetRecipientAccountId() uint32 {
	if m != nil && m.RecipientAccountId != nil {
		return *m.RecipientAccountId
	}
	return 0
}

type CMsgGC_Halloween_ItemClaimed struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMsgGC_Halloween_ItemClaimed) Reset()                    { *m = CMsgGC_Halloween_ItemClaimed{} }
func (m *CMsgGC_Halloween_ItemClaimed) String() string            { return proto.CompactTextString(m) }
func (*CMsgGC_Halloween_ItemClaimed) ProtoMessage()               {}
func (*CMsgGC_Halloween_ItemClaimed) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{54} }

type CMsgGC_PickupItemEligibility_Query struct {
	AccountId        *uint32 `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	SecondsAgo       *uint32 `protobuf:"varint,2,opt,name=seconds_ago,json=secondsAgo" json:"seconds_ago,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgGC_PickupItemEligibility_Query) Reset()         { *m = CMsgGC_PickupItemEligibility_Query{} }
func (m *CMsgGC_PickupItemEligibility_Query) String() string { return proto.CompactTextString(m) }
func (*CMsgGC_PickupItemEligibility_Query) ProtoMessage()    {}
func (*CMsgGC_PickupItemEligibility_Query) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{55}
}

func (m *CMsgGC_PickupItemEligibility_Query) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *CMsgGC_PickupItemEligibility_Query) GetSecondsAgo() uint32 {
	if m != nil && m.SecondsAgo != nil {
		return *m.SecondsAgo
	}
	return 0
}

type CMsgGC_PickupItemEligibility_QueryResponse struct {
	AccountId        *uint32 `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	WasEligible      *bool   `protobuf:"varint,2,opt,name=was_eligible,json=wasEligible" json:"was_eligible,omitempty"`
	LevelId          *uint32 `protobuf:"varint,3,opt,name=level_id,json=levelId" json:"level_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgGC_PickupItemEligibility_QueryResponse) Reset() {
	*m = CMsgGC_PickupItemEligibility_QueryResponse{}
}
func (m *CMsgGC_PickupItemEligibility_QueryResponse) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgGC_PickupItemEligibility_QueryResponse) ProtoMessage() {}
func (*CMsgGC_PickupItemEligibility_QueryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{56}
}

func (m *CMsgGC_PickupItemEligibility_QueryResponse) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *CMsgGC_PickupItemEligibility_QueryResponse) GetWasEligible() bool {
	if m != nil && m.WasEligible != nil {
		return *m.WasEligible
	}
	return false
}

func (m *CMsgGC_PickupItemEligibility_QueryResponse) GetLevelId() uint32 {
	if m != nil && m.LevelId != nil {
		return *m.LevelId
	}
	return 0
}

type CSOTFPartyMember struct {
	OwnsTicket        *bool   `protobuf:"varint,2,opt,name=owns_ticket,json=ownsTicket" json:"owns_ticket,omitempty"`
	CompletedMissions *uint32 `protobuf:"varint,3,opt,name=completed_missions,json=completedMissions" json:"completed_missions,omitempty"`
	BadgeLevel        *uint32 `protobuf:"varint,4,opt,name=badge_level,json=badgeLevel" json:"badge_level,omitempty"`
	SquadSurplus      *bool   `protobuf:"varint,5,opt,name=squad_surplus,json=squadSurplus" json:"squad_surplus,omitempty"`
	IsBanned          *bool   `protobuf:"varint,8,opt,name=is_banned,json=isBanned,def=0" json:"is_banned,omitempty"`
	CompetitiveAccess *bool   `protobuf:"varint,9,opt,name=competitive_access,json=competitiveAccess" json:"competitive_access,omitempty"`
	LadderRank        *uint32 `protobuf:"varint,12,opt,name=ladder_rank,json=ladderRank" json:"ladder_rank,omitempty"`
	IsLowPriority     *bool   `protobuf:"varint,13,opt,name=is_low_priority,json=isLowPriority,def=0" json:"is_low_priority,omitempty"`
	Experience        *uint32 `protobuf:"varint,14,opt,name=experience" json:"experience,omitempty"`
	Skillrating       *uint32 `protobuf:"varint,15,opt,name=skillrating,def=10000" json:"skillrating,omitempty"`
	XXX_unrecognized  []byte  `json:"-"`
}

func (m *CSOTFPartyMember) Reset()                    { *m = CSOTFPartyMember{} }
func (m *CSOTFPartyMember) String() string            { return proto.CompactTextString(m) }
func (*CSOTFPartyMember) ProtoMessage()               {}
func (*CSOTFPartyMember) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{57} }

const Default_CSOTFPartyMember_IsBanned bool = false
const Default_CSOTFPartyMember_IsLowPriority bool = false
const Default_CSOTFPartyMember_Skillrating uint32 = 10000

func (m *CSOTFPartyMember) GetOwnsTicket() bool {
	if m != nil && m.OwnsTicket != nil {
		return *m.OwnsTicket
	}
	return false
}

func (m *CSOTFPartyMember) GetCompletedMissions() uint32 {
	if m != nil && m.CompletedMissions != nil {
		return *m.CompletedMissions
	}
	return 0
}

func (m *CSOTFPartyMember) GetBadgeLevel() uint32 {
	if m != nil && m.BadgeLevel != nil {
		return *m.BadgeLevel
	}
	return 0
}

func (m *CSOTFPartyMember) GetSquadSurplus() bool {
	if m != nil && m.SquadSurplus != nil {
		return *m.SquadSurplus
	}
	return false
}

func (m *CSOTFPartyMember) GetIsBanned() bool {
	if m != nil && m.IsBanned != nil {
		return *m.IsBanned
	}
	return Default_CSOTFPartyMember_IsBanned
}

func (m *CSOTFPartyMember) GetCompetitiveAccess() bool {
	if m != nil && m.CompetitiveAccess != nil {
		return *m.CompetitiveAccess
	}
	return false
}

func (m *CSOTFPartyMember) GetLadderRank() uint32 {
	if m != nil && m.LadderRank != nil {
		return *m.LadderRank
	}
	return 0
}

func (m *CSOTFPartyMember) GetIsLowPriority() bool {
	if m != nil && m.IsLowPriority != nil {
		return *m.IsLowPriority
	}
	return Default_CSOTFPartyMember_IsLowPriority
}

func (m *CSOTFPartyMember) GetExperience() uint32 {
	if m != nil && m.Experience != nil {
		return *m.Experience
	}
	return 0
}

func (m *CSOTFPartyMember) GetSkillrating() uint32 {
	if m != nil && m.Skillrating != nil {
		return *m.Skillrating
	}
	return Default_CSOTFPartyMember_Skillrating
}

type CMsgMatchSearchCriteria struct {
	MatchmakingMode       *TF_MatchmakingMode                  `protobuf:"varint,7,opt,name=matchmaking_mode,json=matchmakingMode,enum=TF_MatchmakingMode,def=0" json:"matchmaking_mode,omitempty"`
	LateJoinOk            *bool                                `protobuf:"varint,5,opt,name=late_join_ok,json=lateJoinOk" json:"late_join_ok,omitempty"`
	CustomPingTolerance   *uint32                              `protobuf:"varint,13,opt,name=custom_ping_tolerance,json=customPingTolerance,def=0" json:"custom_ping_tolerance,omitempty"`
	MvmMannupTour         *string                              `protobuf:"bytes,10,opt,name=mvm_mannup_tour,json=mvmMannupTour" json:"mvm_mannup_tour,omitempty"`
	MvmMissions           []string                             `protobuf:"bytes,9,rep,name=mvm_missions,json=mvmMissions" json:"mvm_missions,omitempty"`
	PlayForBraggingRights *bool                                `protobuf:"varint,6,opt,name=play_for_bragging_rights,json=playForBraggingRights" json:"play_for_bragging_rights,omitempty"`
	QuickplayGameType     *uint32                              `protobuf:"varint,8,opt,name=quickplay_game_type,json=quickplayGameType" json:"quickplay_game_type,omitempty"`
	LadderGameType        *uint32                              `protobuf:"varint,11,opt,name=ladder_game_type,json=ladderGameType" json:"ladder_game_type,omitempty"`
	CasualCriteria        *CMsgCasualMatchmakingSearchCriteria `protobuf:"bytes,12,opt,name=casual_criteria,json=casualCriteria" json:"casual_criteria,omitempty"`
	XXX_unrecognized      []byte                               `json:"-"`
}

func (m *CMsgMatchSearchCriteria) Reset()                    { *m = CMsgMatchSearchCriteria{} }
func (m *CMsgMatchSearchCriteria) String() string            { return proto.CompactTextString(m) }
func (*CMsgMatchSearchCriteria) ProtoMessage()               {}
func (*CMsgMatchSearchCriteria) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{58} }

const Default_CMsgMatchSearchCriteria_MatchmakingMode TF_MatchmakingMode = TF_MatchmakingMode_TF_Matchmaking_INVALID
const Default_CMsgMatchSearchCriteria_CustomPingTolerance uint32 = 0

func (m *CMsgMatchSearchCriteria) GetMatchmakingMode() TF_MatchmakingMode {
	if m != nil && m.MatchmakingMode != nil {
		return *m.MatchmakingMode
	}
	return Default_CMsgMatchSearchCriteria_MatchmakingMode
}

func (m *CMsgMatchSearchCriteria) GetLateJoinOk() bool {
	if m != nil && m.LateJoinOk != nil {
		return *m.LateJoinOk
	}
	return false
}

func (m *CMsgMatchSearchCriteria) GetCustomPingTolerance() uint32 {
	if m != nil && m.CustomPingTolerance != nil {
		return *m.CustomPingTolerance
	}
	return Default_CMsgMatchSearchCriteria_CustomPingTolerance
}

func (m *CMsgMatchSearchCriteria) GetMvmMannupTour() string {
	if m != nil && m.MvmMannupTour != nil {
		return *m.MvmMannupTour
	}
	return ""
}

func (m *CMsgMatchSearchCriteria) GetMvmMissions() []string {
	if m != nil {
		return m.MvmMissions
	}
	return nil
}

func (m *CMsgMatchSearchCriteria) GetPlayForBraggingRights() bool {
	if m != nil && m.PlayForBraggingRights != nil {
		return *m.PlayForBraggingRights
	}
	return false
}

func (m *CMsgMatchSearchCriteria) GetQuickplayGameType() uint32 {
	if m != nil && m.QuickplayGameType != nil {
		return *m.QuickplayGameType
	}
	return 0
}

func (m *CMsgMatchSearchCriteria) GetLadderGameType() uint32 {
	if m != nil && m.LadderGameType != nil {
		return *m.LadderGameType
	}
	return 0
}

func (m *CMsgMatchSearchCriteria) GetCasualCriteria() *CMsgCasualMatchmakingSearchCriteria {
	if m != nil {
		return m.CasualCriteria
	}
	return nil
}

type CMsgCasualMatchmakingSearchCriteria struct {
	SelectedMapsBits []uint32 `protobuf:"fixed32,3,rep,name=selected_maps_bits,json=selectedMapsBits" json:"selected_maps_bits,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CMsgCasualMatchmakingSearchCriteria) Reset()         { *m = CMsgCasualMatchmakingSearchCriteria{} }
func (m *CMsgCasualMatchmakingSearchCriteria) String() string { return proto.CompactTextString(m) }
func (*CMsgCasualMatchmakingSearchCriteria) ProtoMessage()    {}
func (*CMsgCasualMatchmakingSearchCriteria) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{59}
}

func (m *CMsgCasualMatchmakingSearchCriteria) GetSelectedMapsBits() []uint32 {
	if m != nil {
		return m.SelectedMapsBits
	}
	return nil
}

type CMsgCreateOrUpdateParty struct {
	SearchCriteria   *CMsgMatchSearchCriteria   `protobuf:"bytes,1,opt,name=search_criteria,json=searchCriteria" json:"search_criteria,omitempty"`
	SteamLobbyId     *uint64                    `protobuf:"fixed64,3,opt,name=steam_lobby_id,json=steamLobbyId" json:"steam_lobby_id,omitempty"`
	SquadSurplus     *bool                      `protobuf:"varint,4,opt,name=squad_surplus,json=squadSurplus" json:"squad_surplus,omitempty"`
	WizardStep       *TF_Matchmaking_WizardStep `protobuf:"varint,5,opt,name=wizard_step,json=wizardStep,enum=TF_Matchmaking_WizardStep,def=0" json:"wizard_step,omitempty"`
	ClientVersion    *uint32                    `protobuf:"varint,6,opt,name=client_version,json=clientVersion,def=1225" json:"client_version,omitempty"`
	XXX_unrecognized []byte                     `json:"-"`
}

func (m *CMsgCreateOrUpdateParty) Reset()                    { *m = CMsgCreateOrUpdateParty{} }
func (m *CMsgCreateOrUpdateParty) String() string            { return proto.CompactTextString(m) }
func (*CMsgCreateOrUpdateParty) ProtoMessage()               {}
func (*CMsgCreateOrUpdateParty) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{60} }

const Default_CMsgCreateOrUpdateParty_WizardStep TF_Matchmaking_WizardStep = TF_Matchmaking_WizardStep_TF_Matchmaking_WizardStep_INVALID
const Default_CMsgCreateOrUpdateParty_ClientVersion uint32 = 1225

func (m *CMsgCreateOrUpdateParty) GetSearchCriteria() *CMsgMatchSearchCriteria {
	if m != nil {
		return m.SearchCriteria
	}
	return nil
}

func (m *CMsgCreateOrUpdateParty) GetSteamLobbyId() uint64 {
	if m != nil && m.SteamLobbyId != nil {
		return *m.SteamLobbyId
	}
	return 0
}

func (m *CMsgCreateOrUpdateParty) GetSquadSurplus() bool {
	if m != nil && m.SquadSurplus != nil {
		return *m.SquadSurplus
	}
	return false
}

func (m *CMsgCreateOrUpdateParty) GetWizardStep() TF_Matchmaking_WizardStep {
	if m != nil && m.WizardStep != nil {
		return *m.WizardStep
	}
	return Default_CMsgCreateOrUpdateParty_WizardStep
}

func (m *CMsgCreateOrUpdateParty) GetClientVersion() uint32 {
	if m != nil && m.ClientVersion != nil {
		return *m.ClientVersion
	}
	return Default_CMsgCreateOrUpdateParty_ClientVersion
}

type CMsgCreateOrUpdatePartyReply struct {
	Result           *uint32                    `protobuf:"varint,1,opt,name=result" json:"result,omitempty"`
	Message          *string                    `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	WizardStep       *TF_Matchmaking_WizardStep `protobuf:"varint,3,opt,name=wizard_step,json=wizardStep,enum=TF_Matchmaking_WizardStep,def=0" json:"wizard_step,omitempty"`
	XXX_unrecognized []byte                     `json:"-"`
}

func (m *CMsgCreateOrUpdatePartyReply) Reset()                    { *m = CMsgCreateOrUpdatePartyReply{} }
func (m *CMsgCreateOrUpdatePartyReply) String() string            { return proto.CompactTextString(m) }
func (*CMsgCreateOrUpdatePartyReply) ProtoMessage()               {}
func (*CMsgCreateOrUpdatePartyReply) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{61} }

const Default_CMsgCreateOrUpdatePartyReply_WizardStep TF_Matchmaking_WizardStep = TF_Matchmaking_WizardStep_TF_Matchmaking_WizardStep_INVALID

func (m *CMsgCreateOrUpdatePartyReply) GetResult() uint32 {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return 0
}

func (m *CMsgCreateOrUpdatePartyReply) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *CMsgCreateOrUpdatePartyReply) GetWizardStep() TF_Matchmaking_WizardStep {
	if m != nil && m.WizardStep != nil {
		return *m.WizardStep
	}
	return Default_CMsgCreateOrUpdatePartyReply_WizardStep
}

type CSOTFParty struct {
	PartyId                     *uint64                              `protobuf:"varint,1,opt,name=party_id,json=partyId" json:"party_id,omitempty"`
	LeaderId                    *uint64                              `protobuf:"fixed64,2,opt,name=leader_id,json=leaderId" json:"leader_id,omitempty"`
	MemberIds                   []uint64                             `protobuf:"fixed64,3,rep,name=member_ids,json=memberIds" json:"member_ids,omitempty"`
	Members                     []*CSOTFPartyMember                  `protobuf:"bytes,13,rep,name=members" json:"members,omitempty"`
	PendingInvites              []uint64                             `protobuf:"fixed64,5,rep,name=pending_invites,json=pendingInvites" json:"pending_invites,omitempty"`
	AssociatedLobbyId           *uint64                              `protobuf:"varint,35,opt,name=associated_lobby_id,json=associatedLobbyId" json:"associated_lobby_id,omitempty"`
	State                       *CSOTFParty_State                    `protobuf:"varint,6,opt,name=state,enum=CSOTFParty_State,def=0" json:"state,omitempty"`
	WizardStep                  *TF_Matchmaking_WizardStep           `protobuf:"varint,29,opt,name=wizard_step,json=wizardStep,enum=TF_Matchmaking_WizardStep,def=0" json:"wizard_step,omitempty"`
	StartedMatchmakingTime      *uint32                              `protobuf:"varint,7,opt,name=started_matchmaking_time,json=startedMatchmakingTime" json:"started_matchmaking_time,omitempty"`
	SearchingPlayersByGroup     []uint32                             `protobuf:"varint,10,rep,name=searching_players_by_group,json=searchingPlayersByGroup" json:"searching_players_by_group,omitempty"`
	SteamLobbyId                *uint64                              `protobuf:"fixed64,27,opt,name=steam_lobby_id,json=steamLobbyId" json:"steam_lobby_id,omitempty"`
	MatchmakingMode             *TF_MatchmakingMode                  `protobuf:"varint,30,opt,name=matchmaking_mode,json=matchmakingMode,enum=TF_MatchmakingMode,def=0" json:"matchmaking_mode,omitempty"`
	SearchLateJoinOk            *bool                                `protobuf:"varint,23,opt,name=search_late_join_ok,json=searchLateJoinOk" json:"search_late_join_ok,omitempty"`
	SearchMvmMannupTour         *string                              `protobuf:"bytes,32,opt,name=search_mvm_mannup_tour,json=searchMvmMannupTour" json:"search_mvm_mannup_tour,omitempty"`
	SearchMvmMissions           []string                             `protobuf:"bytes,31,rep,name=search_mvm_missions,json=searchMvmMissions" json:"search_mvm_missions,omitempty"`
	SearchPlayForBraggingRights *bool                                `protobuf:"varint,26,opt,name=search_play_for_bragging_rights,json=searchPlayForBraggingRights" json:"search_play_for_bragging_rights,omitempty"`
	SearchQuickplayGameType     *uint32                              `protobuf:"varint,28,opt,name=search_quickplay_game_type,json=searchQuickplayGameType" json:"search_quickplay_game_type,omitempty"`
	SearchLadderGameType        *uint32                              `protobuf:"varint,33,opt,name=search_ladder_game_type,json=searchLadderGameType" json:"search_ladder_game_type,omitempty"`
	SearchCasual                *CMsgCasualMatchmakingSearchCriteria `protobuf:"bytes,34,opt,name=search_casual,json=searchCasual" json:"search_casual,omitempty"`
	CustomPingTolerance         *uint32                              `protobuf:"varint,36,opt,name=custom_ping_tolerance,json=customPingTolerance" json:"custom_ping_tolerance,omitempty"`
	MatchmakingBanTime          *uint32                              `protobuf:"varint,18,opt,name=matchmaking_ban_time,json=matchmakingBanTime" json:"matchmaking_ban_time,omitempty"`
	MatchmakingBanAccountId     *uint32                              `protobuf:"varint,19,opt,name=matchmaking_ban_account_id,json=matchmakingBanAccountId" json:"matchmaking_ban_account_id,omitempty"`
	MatchmakingLowPriorityTime  *uint32                              `protobuf:"varint,20,opt,name=matchmaking_low_priority_time,json=matchmakingLowPriorityTime" json:"matchmaking_low_priority_time,omitempty"`
	XXX_unrecognized            []byte                               `json:"-"`
}

func (m *CSOTFParty) Reset()                    { *m = CSOTFParty{} }
func (m *CSOTFParty) String() string            { return proto.CompactTextString(m) }
func (*CSOTFParty) ProtoMessage()               {}
func (*CSOTFParty) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{62} }

const Default_CSOTFParty_State CSOTFParty_State = CSOTFParty_UI
const Default_CSOTFParty_WizardStep TF_Matchmaking_WizardStep = TF_Matchmaking_WizardStep_TF_Matchmaking_WizardStep_INVALID
const Default_CSOTFParty_MatchmakingMode TF_MatchmakingMode = TF_MatchmakingMode_TF_Matchmaking_INVALID

func (m *CSOTFParty) GetPartyId() uint64 {
	if m != nil && m.PartyId != nil {
		return *m.PartyId
	}
	return 0
}

func (m *CSOTFParty) GetLeaderId() uint64 {
	if m != nil && m.LeaderId != nil {
		return *m.LeaderId
	}
	return 0
}

func (m *CSOTFParty) GetMemberIds() []uint64 {
	if m != nil {
		return m.MemberIds
	}
	return nil
}

func (m *CSOTFParty) GetMembers() []*CSOTFPartyMember {
	if m != nil {
		return m.Members
	}
	return nil
}

func (m *CSOTFParty) GetPendingInvites() []uint64 {
	if m != nil {
		return m.PendingInvites
	}
	return nil
}

func (m *CSOTFParty) GetAssociatedLobbyId() uint64 {
	if m != nil && m.AssociatedLobbyId != nil {
		return *m.AssociatedLobbyId
	}
	return 0
}

func (m *CSOTFParty) GetState() CSOTFParty_State {
	if m != nil && m.State != nil {
		return *m.State
	}
	return Default_CSOTFParty_State
}

func (m *CSOTFParty) GetWizardStep() TF_Matchmaking_WizardStep {
	if m != nil && m.WizardStep != nil {
		return *m.WizardStep
	}
	return Default_CSOTFParty_WizardStep
}

func (m *CSOTFParty) GetStartedMatchmakingTime() uint32 {
	if m != nil && m.StartedMatchmakingTime != nil {
		return *m.StartedMatchmakingTime
	}
	return 0
}

func (m *CSOTFParty) GetSearchingPlayersByGroup() []uint32 {
	if m != nil {
		return m.SearchingPlayersByGroup
	}
	return nil
}

func (m *CSOTFParty) GetSteamLobbyId() uint64 {
	if m != nil && m.SteamLobbyId != nil {
		return *m.SteamLobbyId
	}
	return 0
}

func (m *CSOTFParty) GetMatchmakingMode() TF_MatchmakingMode {
	if m != nil && m.MatchmakingMode != nil {
		return *m.MatchmakingMode
	}
	return Default_CSOTFParty_MatchmakingMode
}

func (m *CSOTFParty) GetSearchLateJoinOk() bool {
	if m != nil && m.SearchLateJoinOk != nil {
		return *m.SearchLateJoinOk
	}
	return false
}

func (m *CSOTFParty) GetSearchMvmMannupTour() string {
	if m != nil && m.SearchMvmMannupTour != nil {
		return *m.SearchMvmMannupTour
	}
	return ""
}

func (m *CSOTFParty) GetSearchMvmMissions() []string {
	if m != nil {
		return m.SearchMvmMissions
	}
	return nil
}

func (m *CSOTFParty) GetSearchPlayForBraggingRights() bool {
	if m != nil && m.SearchPlayForBraggingRights != nil {
		return *m.SearchPlayForBraggingRights
	}
	return false
}

func (m *CSOTFParty) GetSearchQuickplayGameType() uint32 {
	if m != nil && m.SearchQuickplayGameType != nil {
		return *m.SearchQuickplayGameType
	}
	return 0
}

func (m *CSOTFParty) GetSearchLadderGameType() uint32 {
	if m != nil && m.SearchLadderGameType != nil {
		return *m.SearchLadderGameType
	}
	return 0
}

func (m *CSOTFParty) GetSearchCasual() *CMsgCasualMatchmakingSearchCriteria {
	if m != nil {
		return m.SearchCasual
	}
	return nil
}

func (m *CSOTFParty) GetCustomPingTolerance() uint32 {
	if m != nil && m.CustomPingTolerance != nil {
		return *m.CustomPingTolerance
	}
	return 0
}

func (m *CSOTFParty) GetMatchmakingBanTime() uint32 {
	if m != nil && m.MatchmakingBanTime != nil {
		return *m.MatchmakingBanTime
	}
	return 0
}

func (m *CSOTFParty) GetMatchmakingBanAccountId() uint32 {
	if m != nil && m.MatchmakingBanAccountId != nil {
		return *m.MatchmakingBanAccountId
	}
	return 0
}

func (m *CSOTFParty) GetMatchmakingLowPriorityTime() uint32 {
	if m != nil && m.MatchmakingLowPriorityTime != nil {
		return *m.MatchmakingLowPriorityTime
	}
	return 0
}

type CSOTFPartyInvite struct {
	GroupId          *uint64                         `protobuf:"varint,1,opt,name=group_id,json=groupId" json:"group_id,omitempty"`
	SenderId         *uint64                         `protobuf:"fixed64,2,opt,name=sender_id,json=senderId" json:"sender_id,omitempty"`
	SenderName       *string                         `protobuf:"bytes,3,opt,name=sender_name,json=senderName" json:"sender_name,omitempty"`
	Members          []*CSOTFPartyInvite_PartyMember `protobuf:"bytes,4,rep,name=members" json:"members,omitempty"`
	XXX_unrecognized []byte                          `json:"-"`
}

func (m *CSOTFPartyInvite) Reset()                    { *m = CSOTFPartyInvite{} }
func (m *CSOTFPartyInvite) String() string            { return proto.CompactTextString(m) }
func (*CSOTFPartyInvite) ProtoMessage()               {}
func (*CSOTFPartyInvite) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{63} }

func (m *CSOTFPartyInvite) GetGroupId() uint64 {
	if m != nil && m.GroupId != nil {
		return *m.GroupId
	}
	return 0
}

func (m *CSOTFPartyInvite) GetSenderId() uint64 {
	if m != nil && m.SenderId != nil {
		return *m.SenderId
	}
	return 0
}

func (m *CSOTFPartyInvite) GetSenderName() string {
	if m != nil && m.SenderName != nil {
		return *m.SenderName
	}
	return ""
}

func (m *CSOTFPartyInvite) GetMembers() []*CSOTFPartyInvite_PartyMember {
	if m != nil {
		return m.Members
	}
	return nil
}

type CSOTFPartyInvite_PartyMember struct {
	Name             *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	SteamId          *uint64 `protobuf:"fixed64,2,opt,name=steam_id,json=steamId" json:"steam_id,omitempty"`
	Avatar           *uint32 `protobuf:"varint,3,opt,name=avatar" json:"avatar,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CSOTFPartyInvite_PartyMember) Reset()         { *m = CSOTFPartyInvite_PartyMember{} }
func (m *CSOTFPartyInvite_PartyMember) String() string { return proto.CompactTextString(m) }
func (*CSOTFPartyInvite_PartyMember) ProtoMessage()    {}
func (*CSOTFPartyInvite_PartyMember) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{63, 0}
}

func (m *CSOTFPartyInvite_PartyMember) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *CSOTFPartyInvite_PartyMember) GetSteamId() uint64 {
	if m != nil && m.SteamId != nil {
		return *m.SteamId
	}
	return 0
}

func (m *CSOTFPartyInvite_PartyMember) GetAvatar() uint32 {
	if m != nil && m.Avatar != nil {
		return *m.Avatar
	}
	return 0
}

type CTFLobbyMember struct {
	Id               *uint64                      `protobuf:"fixed64,1,opt,name=id" json:"id,omitempty"`
	Team             *TF_GC_TEAM                  `protobuf:"varint,3,opt,name=team,enum=TF_GC_TEAM,def=0" json:"team,omitempty"`
	ConnectState     *CTFLobbyMember_ConnectState `protobuf:"varint,13,opt,name=connect_state,json=connectState,enum=CTFLobbyMember_ConnectState,def=0" json:"connect_state,omitempty"`
	Name             *string                      `protobuf:"bytes,6,opt,name=name" json:"name,omitempty"`
	ReadyState       *TFLobbyReadyState           `protobuf:"varint,11,opt,name=ready_state,json=readyState,enum=TFLobbyReadyState,def=0" json:"ready_state,omitempty"`
	PartyId          *uint64                      `protobuf:"varint,12,opt,name=party_id,json=partyId" json:"party_id,omitempty"`
	SquadSurplus     *bool                        `protobuf:"varint,14,opt,name=squad_surplus,json=squadSurplus" json:"squad_surplus,omitempty"`
	BadgeLevel       *uint32                      `protobuf:"varint,15,opt,name=badge_level,json=badgeLevel" json:"badge_level,omitempty"`
	Skillrating      *uint32                      `protobuf:"varint,16,opt,name=skillrating,def=10000" json:"skillrating,omitempty"`
	LastConnectTime  *uint32                      `protobuf:"varint,17,opt,name=last_connect_time,json=lastConnectTime" json:"last_connect_time,omitempty"`
	XXX_unrecognized []byte                       `json:"-"`
}

func (m *CTFLobbyMember) Reset()                    { *m = CTFLobbyMember{} }
func (m *CTFLobbyMember) String() string            { return proto.CompactTextString(m) }
func (*CTFLobbyMember) ProtoMessage()               {}
func (*CTFLobbyMember) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{64} }

const Default_CTFLobbyMember_Team TF_GC_TEAM = TF_GC_TEAM_TF_GC_TEAM_DEFENDERS
const Default_CTFLobbyMember_ConnectState CTFLobbyMember_ConnectState = CTFLobbyMember_INVALID
const Default_CTFLobbyMember_ReadyState TFLobbyReadyState = TFLobbyReadyState_TFLobbyReadyState_UNDECLARED
const Default_CTFLobbyMember_Skillrating uint32 = 10000

func (m *CTFLobbyMember) GetId() uint64 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *CTFLobbyMember) GetTeam() TF_GC_TEAM {
	if m != nil && m.Team != nil {
		return *m.Team
	}
	return Default_CTFLobbyMember_Team
}

func (m *CTFLobbyMember) GetConnectState() CTFLobbyMember_ConnectState {
	if m != nil && m.ConnectState != nil {
		return *m.ConnectState
	}
	return Default_CTFLobbyMember_ConnectState
}

func (m *CTFLobbyMember) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *CTFLobbyMember) GetReadyState() TFLobbyReadyState {
	if m != nil && m.ReadyState != nil {
		return *m.ReadyState
	}
	return Default_CTFLobbyMember_ReadyState
}

func (m *CTFLobbyMember) GetPartyId() uint64 {
	if m != nil && m.PartyId != nil {
		return *m.PartyId
	}
	return 0
}

func (m *CTFLobbyMember) GetSquadSurplus() bool {
	if m != nil && m.SquadSurplus != nil {
		return *m.SquadSurplus
	}
	return false
}

func (m *CTFLobbyMember) GetBadgeLevel() uint32 {
	if m != nil && m.BadgeLevel != nil {
		return *m.BadgeLevel
	}
	return 0
}

func (m *CTFLobbyMember) GetSkillrating() uint32 {
	if m != nil && m.Skillrating != nil {
		return *m.Skillrating
	}
	return Default_CTFLobbyMember_Skillrating
}

func (m *CTFLobbyMember) GetLastConnectTime() uint32 {
	if m != nil && m.LastConnectTime != nil {
		return *m.LastConnectTime
	}
	return 0
}

type CLobbyPendingPlayerReport struct {
	AccountId        *uint32 `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	Date             *uint32 `protobuf:"fixed32,2,opt,name=date" json:"date,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CLobbyPendingPlayerReport) Reset()                    { *m = CLobbyPendingPlayerReport{} }
func (m *CLobbyPendingPlayerReport) String() string            { return proto.CompactTextString(m) }
func (*CLobbyPendingPlayerReport) ProtoMessage()               {}
func (*CLobbyPendingPlayerReport) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{65} }

func (m *CLobbyPendingPlayerReport) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *CLobbyPendingPlayerReport) GetDate() uint32 {
	if m != nil && m.Date != nil {
		return *m.Date
	}
	return 0
}

type CSOTFGameServerLobby struct {
	LobbyId              *uint64                         `protobuf:"varint,1,opt,name=lobby_id,json=lobbyId" json:"lobby_id,omitempty"`
	Members              []*CTFLobbyMember               `protobuf:"bytes,2,rep,name=members" json:"members,omitempty"`
	LeftMembers          []*CTFLobbyMember               `protobuf:"bytes,7,rep,name=left_members,json=leftMembers" json:"left_members,omitempty"`
	LeaderId             *uint64                         `protobuf:"fixed64,11,opt,name=leader_id,json=leaderId" json:"leader_id,omitempty"`
	ServerId             *uint64                         `protobuf:"fixed64,6,opt,name=server_id,json=serverId,def=0" json:"server_id,omitempty"`
	PendingInvites       []uint64                        `protobuf:"fixed64,10,rep,name=pending_invites,json=pendingInvites" json:"pending_invites,omitempty"`
	State                *CSOTFGameServerLobby_State     `protobuf:"varint,4,opt,name=state,enum=CSOTFGameServerLobby_State,def=1" json:"state,omitempty"`
	Connect              *string                         `protobuf:"bytes,5,opt,name=connect" json:"connect,omitempty"`
	LobbyType            *CSOTFGameServerLobby_LobbyType `protobuf:"varint,12,opt,name=lobby_type,json=lobbyType,enum=CSOTFGameServerLobby_LobbyType,def=-1" json:"lobby_type,omitempty"`
	AllowCheats          *bool                           `protobuf:"varint,13,opt,name=allow_cheats,json=allowCheats" json:"allow_cheats,omitempty"`
	GameName             *string                         `protobuf:"bytes,16,opt,name=game_name,json=gameName" json:"game_name,omitempty"`
	ServerRegion         *uint32                         `protobuf:"varint,21,opt,name=server_region,json=serverRegion,def=0" json:"server_region,omitempty"`
	GameState            *TF_GC_GameState                `protobuf:"varint,22,opt,name=game_state,json=gameState,enum=TF_GC_GameState,def=0" json:"game_state,omitempty"`
	NumSpectators        *uint32                         `protobuf:"varint,23,opt,name=num_spectators,json=numSpectators" json:"num_spectators,omitempty"`
	ReadyupRemainingTime *float32                        `protobuf:"fixed32,26,opt,name=readyup_remaining_time,json=readyupRemainingTime" json:"readyup_remaining_time,omitempty"`
	AllowSpectating      *bool                           `protobuf:"varint,31,opt,name=allow_spectating,json=allowSpectating,def=1" json:"allow_spectating,omitempty"`
	AverageRank          *uint32                         `protobuf:"varint,32,opt,name=average_rank,json=averageRank" json:"average_rank,omitempty"`
	LoadGameLobbyId      *uint64                         `protobuf:"fixed64,33,opt,name=load_game_lobby_id,json=loadGameLobbyId" json:"load_game_lobby_id,omitempty"`
	LoadGameSaveNumber   *uint32                         `protobuf:"varint,34,opt,name=load_game_save_number,json=loadGameSaveNumber" json:"load_game_save_number,omitempty"`
	MannupTourName       *string                         `protobuf:"bytes,42,opt,name=mannup_tour_name,json=mannupTourName" json:"mannup_tour_name,omitempty"`
	MapName              *string                         `protobuf:"bytes,38,opt,name=map_name,json=mapName" json:"map_name,omitempty"`
	MissionName          *string                         `protobuf:"bytes,39,opt,name=mission_name,json=missionName" json:"mission_name,omitempty"`
	MatchGroup           *uint32                         `protobuf:"varint,41,opt,name=match_group,json=matchGroup" json:"match_group,omitempty"`
	MatchId              *uint64                         `protobuf:"varint,30,opt,name=match_id,json=matchId,def=0" json:"match_id,omitempty"`
	ReplaySalt           *uint32                         `protobuf:"fixed32,35,opt,name=replay_salt,json=replaySalt" json:"replay_salt,omitempty"`
	FormedTime           *uint32                         `protobuf:"varint,36,opt,name=formed_time,json=formedTime" json:"formed_time,omitempty"`
	Flags                *uint32                         `protobuf:"varint,43,opt,name=flags" json:"flags,omitempty"`
	LateJoinEligible     *bool                           `protobuf:"varint,44,opt,name=late_join_eligible,json=lateJoinEligible" json:"late_join_eligible,omitempty"`
	FixedMatchSize       *uint32                         `protobuf:"varint,45,opt,name=fixed_match_size,json=fixedMatchSize" json:"fixed_match_size,omitempty"`
	IsWarMatch           *CSOTFGameServerLobby_WarMatch  `protobuf:"varint,46,opt,name=is_war_match,json=isWarMatch,enum=CSOTFGameServerLobby_WarMatch,def=0" json:"is_war_match,omitempty"`
	NextMapsForVote      []uint32                        `protobuf:"varint,47,rep,name=next_maps_for_vote,json=nextMapsForVote" json:"next_maps_for_vote,omitempty"`
	XXX_unrecognized     []byte                          `json:"-"`
}

func (m *CSOTFGameServerLobby) Reset()                    { *m = CSOTFGameServerLobby{} }
func (m *CSOTFGameServerLobby) String() string            { return proto.CompactTextString(m) }
func (*CSOTFGameServerLobby) ProtoMessage()               {}
func (*CSOTFGameServerLobby) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{66} }

const Default_CSOTFGameServerLobby_ServerId uint64 = 0
const Default_CSOTFGameServerLobby_State CSOTFGameServerLobby_State = CSOTFGameServerLobby_SERVERSETUP
const Default_CSOTFGameServerLobby_LobbyType CSOTFGameServerLobby_LobbyType = CSOTFGameServerLobby_INVALID
const Default_CSOTFGameServerLobby_ServerRegion uint32 = 0
const Default_CSOTFGameServerLobby_GameState TF_GC_GameState = TF_GC_GameState_TF_GC_GAMESTATE_STATE_INIT
const Default_CSOTFGameServerLobby_AllowSpectating bool = true
const Default_CSOTFGameServerLobby_MatchId uint64 = 0
const Default_CSOTFGameServerLobby_IsWarMatch CSOTFGameServerLobby_WarMatch = CSOTFGameServerLobby_NOPE

func (m *CSOTFGameServerLobby) GetLobbyId() uint64 {
	if m != nil && m.LobbyId != nil {
		return *m.LobbyId
	}
	return 0
}

func (m *CSOTFGameServerLobby) GetMembers() []*CTFLobbyMember {
	if m != nil {
		return m.Members
	}
	return nil
}

func (m *CSOTFGameServerLobby) GetLeftMembers() []*CTFLobbyMember {
	if m != nil {
		return m.LeftMembers
	}
	return nil
}

func (m *CSOTFGameServerLobby) GetLeaderId() uint64 {
	if m != nil && m.LeaderId != nil {
		return *m.LeaderId
	}
	return 0
}

func (m *CSOTFGameServerLobby) GetServerId() uint64 {
	if m != nil && m.ServerId != nil {
		return *m.ServerId
	}
	return Default_CSOTFGameServerLobby_ServerId
}

func (m *CSOTFGameServerLobby) GetPendingInvites() []uint64 {
	if m != nil {
		return m.PendingInvites
	}
	return nil
}

func (m *CSOTFGameServerLobby) GetState() CSOTFGameServerLobby_State {
	if m != nil && m.State != nil {
		return *m.State
	}
	return Default_CSOTFGameServerLobby_State
}

func (m *CSOTFGameServerLobby) GetConnect() string {
	if m != nil && m.Connect != nil {
		return *m.Connect
	}
	return ""
}

func (m *CSOTFGameServerLobby) GetLobbyType() CSOTFGameServerLobby_LobbyType {
	if m != nil && m.LobbyType != nil {
		return *m.LobbyType
	}
	return Default_CSOTFGameServerLobby_LobbyType
}

func (m *CSOTFGameServerLobby) GetAllowCheats() bool {
	if m != nil && m.AllowCheats != nil {
		return *m.AllowCheats
	}
	return false
}

func (m *CSOTFGameServerLobby) GetGameName() string {
	if m != nil && m.GameName != nil {
		return *m.GameName
	}
	return ""
}

func (m *CSOTFGameServerLobby) GetServerRegion() uint32 {
	if m != nil && m.ServerRegion != nil {
		return *m.ServerRegion
	}
	return Default_CSOTFGameServerLobby_ServerRegion
}

func (m *CSOTFGameServerLobby) GetGameState() TF_GC_GameState {
	if m != nil && m.GameState != nil {
		return *m.GameState
	}
	return Default_CSOTFGameServerLobby_GameState
}

func (m *CSOTFGameServerLobby) GetNumSpectators() uint32 {
	if m != nil && m.NumSpectators != nil {
		return *m.NumSpectators
	}
	return 0
}

func (m *CSOTFGameServerLobby) GetReadyupRemainingTime() float32 {
	if m != nil && m.ReadyupRemainingTime != nil {
		return *m.ReadyupRemainingTime
	}
	return 0
}

func (m *CSOTFGameServerLobby) GetAllowSpectating() bool {
	if m != nil && m.AllowSpectating != nil {
		return *m.AllowSpectating
	}
	return Default_CSOTFGameServerLobby_AllowSpectating
}

func (m *CSOTFGameServerLobby) GetAverageRank() uint32 {
	if m != nil && m.AverageRank != nil {
		return *m.AverageRank
	}
	return 0
}

func (m *CSOTFGameServerLobby) GetLoadGameLobbyId() uint64 {
	if m != nil && m.LoadGameLobbyId != nil {
		return *m.LoadGameLobbyId
	}
	return 0
}

func (m *CSOTFGameServerLobby) GetLoadGameSaveNumber() uint32 {
	if m != nil && m.LoadGameSaveNumber != nil {
		return *m.LoadGameSaveNumber
	}
	return 0
}

func (m *CSOTFGameServerLobby) GetMannupTourName() string {
	if m != nil && m.MannupTourName != nil {
		return *m.MannupTourName
	}
	return ""
}

func (m *CSOTFGameServerLobby) GetMapName() string {
	if m != nil && m.MapName != nil {
		return *m.MapName
	}
	return ""
}

func (m *CSOTFGameServerLobby) GetMissionName() string {
	if m != nil && m.MissionName != nil {
		return *m.MissionName
	}
	return ""
}

func (m *CSOTFGameServerLobby) GetMatchGroup() uint32 {
	if m != nil && m.MatchGroup != nil {
		return *m.MatchGroup
	}
	return 0
}

func (m *CSOTFGameServerLobby) GetMatchId() uint64 {
	if m != nil && m.MatchId != nil {
		return *m.MatchId
	}
	return Default_CSOTFGameServerLobby_MatchId
}

func (m *CSOTFGameServerLobby) GetReplaySalt() uint32 {
	if m != nil && m.ReplaySalt != nil {
		return *m.ReplaySalt
	}
	return 0
}

func (m *CSOTFGameServerLobby) GetFormedTime() uint32 {
	if m != nil && m.FormedTime != nil {
		return *m.FormedTime
	}
	return 0
}

func (m *CSOTFGameServerLobby) GetFlags() uint32 {
	if m != nil && m.Flags != nil {
		return *m.Flags
	}
	return 0
}

func (m *CSOTFGameServerLobby) GetLateJoinEligible() bool {
	if m != nil && m.LateJoinEligible != nil {
		return *m.LateJoinEligible
	}
	return false
}

func (m *CSOTFGameServerLobby) GetFixedMatchSize() uint32 {
	if m != nil && m.FixedMatchSize != nil {
		return *m.FixedMatchSize
	}
	return 0
}

func (m *CSOTFGameServerLobby) GetIsWarMatch() CSOTFGameServerLobby_WarMatch {
	if m != nil && m.IsWarMatch != nil {
		return *m.IsWarMatch
	}
	return Default_CSOTFGameServerLobby_IsWarMatch
}

func (m *CSOTFGameServerLobby) GetNextMapsForVote() []uint32 {
	if m != nil {
		return m.NextMapsForVote
	}
	return nil
}

type CMsgExitMatchmaking struct {
	ExplicitAbandon  *bool   `protobuf:"varint,1,opt,name=explicit_abandon,json=explicitAbandon" json:"explicit_abandon,omitempty"`
	PartyId          *uint64 `protobuf:"varint,2,opt,name=party_id,json=partyId" json:"party_id,omitempty"`
	LobbyId          *uint64 `protobuf:"varint,3,opt,name=lobby_id,json=lobbyId" json:"lobby_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgExitMatchmaking) Reset()                    { *m = CMsgExitMatchmaking{} }
func (m *CMsgExitMatchmaking) String() string            { return proto.CompactTextString(m) }
func (*CMsgExitMatchmaking) ProtoMessage()               {}
func (*CMsgExitMatchmaking) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{67} }

func (m *CMsgExitMatchmaking) GetExplicitAbandon() bool {
	if m != nil && m.ExplicitAbandon != nil {
		return *m.ExplicitAbandon
	}
	return false
}

func (m *CMsgExitMatchmaking) GetPartyId() uint64 {
	if m != nil && m.PartyId != nil {
		return *m.PartyId
	}
	return 0
}

func (m *CMsgExitMatchmaking) GetLobbyId() uint64 {
	if m != nil && m.LobbyId != nil {
		return *m.LobbyId
	}
	return 0
}

type CMsgAcceptInvite struct {
	PartyId          *uint64 `protobuf:"varint,1,opt,name=party_id,json=partyId" json:"party_id,omitempty"`
	SteamidLobby     *uint64 `protobuf:"fixed64,2,opt,name=steamid_lobby,json=steamidLobby" json:"steamid_lobby,omitempty"`
	ClientVersion    *uint32 `protobuf:"varint,3,opt,name=client_version,json=clientVersion,def=1225" json:"client_version,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgAcceptInvite) Reset()                    { *m = CMsgAcceptInvite{} }
func (m *CMsgAcceptInvite) String() string            { return proto.CompactTextString(m) }
func (*CMsgAcceptInvite) ProtoMessage()               {}
func (*CMsgAcceptInvite) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{68} }

const Default_CMsgAcceptInvite_ClientVersion uint32 = 1225

func (m *CMsgAcceptInvite) GetPartyId() uint64 {
	if m != nil && m.PartyId != nil {
		return *m.PartyId
	}
	return 0
}

func (m *CMsgAcceptInvite) GetSteamidLobby() uint64 {
	if m != nil && m.SteamidLobby != nil {
		return *m.SteamidLobby
	}
	return 0
}

func (m *CMsgAcceptInvite) GetClientVersion() uint32 {
	if m != nil && m.ClientVersion != nil {
		return *m.ClientVersion
	}
	return Default_CMsgAcceptInvite_ClientVersion
}

type CMsgAcceptInviteResponse struct {
	ResultCode       *int32 `protobuf:"varint,1,opt,name=result_code,json=resultCode" json:"result_code,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMsgAcceptInviteResponse) Reset()                    { *m = CMsgAcceptInviteResponse{} }
func (m *CMsgAcceptInviteResponse) String() string            { return proto.CompactTextString(m) }
func (*CMsgAcceptInviteResponse) ProtoMessage()               {}
func (*CMsgAcceptInviteResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{69} }

func (m *CMsgAcceptInviteResponse) GetResultCode() int32 {
	if m != nil && m.ResultCode != nil {
		return *m.ResultCode
	}
	return 0
}

type CMsgReadyUp struct {
	State            *TFLobbyReadyState `protobuf:"varint,1,opt,name=state,enum=TFLobbyReadyState,def=0" json:"state,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *CMsgReadyUp) Reset()                    { *m = CMsgReadyUp{} }
func (m *CMsgReadyUp) String() string            { return proto.CompactTextString(m) }
func (*CMsgReadyUp) ProtoMessage()               {}
func (*CMsgReadyUp) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{70} }

const Default_CMsgReadyUp_State TFLobbyReadyState = TFLobbyReadyState_TFLobbyReadyState_UNDECLARED

func (m *CMsgReadyUp) GetState() TFLobbyReadyState {
	if m != nil && m.State != nil {
		return *m.State
	}
	return Default_CMsgReadyUp_State
}

type CMsgMatchmakingSearchCountRequest struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMsgMatchmakingSearchCountRequest) Reset()         { *m = CMsgMatchmakingSearchCountRequest{} }
func (m *CMsgMatchmakingSearchCountRequest) String() string { return proto.CompactTextString(m) }
func (*CMsgMatchmakingSearchCountRequest) ProtoMessage()    {}
func (*CMsgMatchmakingSearchCountRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{71}
}

type CMsgMatchmakingSearchCountResponse struct {
	SearchingPlayersByGroup []uint32 `protobuf:"varint,1,rep,name=searching_players_by_group,json=searchingPlayersByGroup" json:"searching_players_by_group,omitempty"`
	XXX_unrecognized        []byte   `json:"-"`
}

func (m *CMsgMatchmakingSearchCountResponse) Reset()         { *m = CMsgMatchmakingSearchCountResponse{} }
func (m *CMsgMatchmakingSearchCountResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgMatchmakingSearchCountResponse) ProtoMessage()    {}
func (*CMsgMatchmakingSearchCountResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{72}
}

func (m *CMsgMatchmakingSearchCountResponse) GetSearchingPlayersByGroup() []uint32 {
	if m != nil {
		return m.SearchingPlayersByGroup
	}
	return nil
}

type CMsgKickedFromMatchmakingQueue struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMsgKickedFromMatchmakingQueue) Reset()                    { *m = CMsgKickedFromMatchmakingQueue{} }
func (m *CMsgKickedFromMatchmakingQueue) String() string            { return proto.CompactTextString(m) }
func (*CMsgKickedFromMatchmakingQueue) ProtoMessage()               {}
func (*CMsgKickedFromMatchmakingQueue) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{73} }

type CMsgTFJoinChatChannel struct {
	PersonaName      *string           `protobuf:"bytes,1,opt,name=persona_name,json=personaName" json:"persona_name,omitempty"`
	ChannelName      *string           `protobuf:"bytes,2,opt,name=channel_name,json=channelName" json:"channel_name,omitempty"`
	Password         *string           `protobuf:"bytes,3,opt,name=password" json:"password,omitempty"`
	ChannelType      *ChatChannelTypeT `protobuf:"varint,4,opt,name=channel_type,json=channelType,enum=ChatChannelTypeT,def=0" json:"channel_type,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *CMsgTFJoinChatChannel) Reset()                    { *m = CMsgTFJoinChatChannel{} }
func (m *CMsgTFJoinChatChannel) String() string            { return proto.CompactTextString(m) }
func (*CMsgTFJoinChatChannel) ProtoMessage()               {}
func (*CMsgTFJoinChatChannel) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{74} }

const Default_CMsgTFJoinChatChannel_ChannelType ChatChannelTypeT = ChatChannelTypeT_ChatChannelType_Regional

func (m *CMsgTFJoinChatChannel) GetPersonaName() string {
	if m != nil && m.PersonaName != nil {
		return *m.PersonaName
	}
	return ""
}

func (m *CMsgTFJoinChatChannel) GetChannelName() string {
	if m != nil && m.ChannelName != nil {
		return *m.ChannelName
	}
	return ""
}

func (m *CMsgTFJoinChatChannel) GetPassword() string {
	if m != nil && m.Password != nil {
		return *m.Password
	}
	return ""
}

func (m *CMsgTFJoinChatChannel) GetChannelType() ChatChannelTypeT {
	if m != nil && m.ChannelType != nil {
		return *m.ChannelType
	}
	return Default_CMsgTFJoinChatChannel_ChannelType
}

type CMsgTFLeaveChatChannel struct {
	ChannelName      *string `protobuf:"bytes,1,opt,name=channel_name,json=channelName" json:"channel_name,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgTFLeaveChatChannel) Reset()                    { *m = CMsgTFLeaveChatChannel{} }
func (m *CMsgTFLeaveChatChannel) String() string            { return proto.CompactTextString(m) }
func (*CMsgTFLeaveChatChannel) ProtoMessage()               {}
func (*CMsgTFLeaveChatChannel) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{75} }

func (m *CMsgTFLeaveChatChannel) GetChannelName() string {
	if m != nil && m.ChannelName != nil {
		return *m.ChannelName
	}
	return ""
}

type CMsgTFJoinChatChannelResponse struct {
	Response         *uint32                                     `protobuf:"varint,1,opt,name=response" json:"response,omitempty"`
	ChannelName      *string                                     `protobuf:"bytes,2,opt,name=channel_name,json=channelName" json:"channel_name,omitempty"`
	ChannelId        *uint64                                     `protobuf:"fixed64,3,opt,name=channel_id,json=channelId" json:"channel_id,omitempty"`
	MaxMembers       *uint32                                     `protobuf:"varint,4,opt,name=max_members,json=maxMembers" json:"max_members,omitempty"`
	Members          []*CMsgTFJoinChatChannelResponse_ChatMember `protobuf:"bytes,5,rep,name=members" json:"members,omitempty"`
	XXX_unrecognized []byte                                      `json:"-"`
}

func (m *CMsgTFJoinChatChannelResponse) Reset()                    { *m = CMsgTFJoinChatChannelResponse{} }
func (m *CMsgTFJoinChatChannelResponse) String() string            { return proto.CompactTextString(m) }
func (*CMsgTFJoinChatChannelResponse) ProtoMessage()               {}
func (*CMsgTFJoinChatChannelResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{76} }

func (m *CMsgTFJoinChatChannelResponse) GetResponse() uint32 {
	if m != nil && m.Response != nil {
		return *m.Response
	}
	return 0
}

func (m *CMsgTFJoinChatChannelResponse) GetChannelName() string {
	if m != nil && m.ChannelName != nil {
		return *m.ChannelName
	}
	return ""
}

func (m *CMsgTFJoinChatChannelResponse) GetChannelId() uint64 {
	if m != nil && m.ChannelId != nil {
		return *m.ChannelId
	}
	return 0
}

func (m *CMsgTFJoinChatChannelResponse) GetMaxMembers() uint32 {
	if m != nil && m.MaxMembers != nil {
		return *m.MaxMembers
	}
	return 0
}

func (m *CMsgTFJoinChatChannelResponse) GetMembers() []*CMsgTFJoinChatChannelResponse_ChatMember {
	if m != nil {
		return m.Members
	}
	return nil
}

type CMsgTFJoinChatChannelResponse_ChatMember struct {
	SteamId          *uint64 `protobuf:"fixed64,1,opt,name=steam_id,json=steamId" json:"steam_id,omitempty"`
	PersonaName      *string `protobuf:"bytes,2,opt,name=persona_name,json=personaName" json:"persona_name,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgTFJoinChatChannelResponse_ChatMember) Reset() {
	*m = CMsgTFJoinChatChannelResponse_ChatMember{}
}
func (m *CMsgTFJoinChatChannelResponse_ChatMember) String() string { return proto.CompactTextString(m) }
func (*CMsgTFJoinChatChannelResponse_ChatMember) ProtoMessage()    {}
func (*CMsgTFJoinChatChannelResponse_ChatMember) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{76, 0}
}

func (m *CMsgTFJoinChatChannelResponse_ChatMember) GetSteamId() uint64 {
	if m != nil && m.SteamId != nil {
		return *m.SteamId
	}
	return 0
}

func (m *CMsgTFJoinChatChannelResponse_ChatMember) GetPersonaName() string {
	if m != nil && m.PersonaName != nil {
		return *m.PersonaName
	}
	return ""
}

type CMsgTFOtherJoinedChatChannel struct {
	ChannelId        *uint64 `protobuf:"fixed64,1,opt,name=channel_id,json=channelId" json:"channel_id,omitempty"`
	PersonaName      *string `protobuf:"bytes,2,opt,name=persona_name,json=personaName" json:"persona_name,omitempty"`
	SteamId          *uint64 `protobuf:"fixed64,3,opt,name=steam_id,json=steamId" json:"steam_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgTFOtherJoinedChatChannel) Reset()                    { *m = CMsgTFOtherJoinedChatChannel{} }
func (m *CMsgTFOtherJoinedChatChannel) String() string            { return proto.CompactTextString(m) }
func (*CMsgTFOtherJoinedChatChannel) ProtoMessage()               {}
func (*CMsgTFOtherJoinedChatChannel) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{77} }

func (m *CMsgTFOtherJoinedChatChannel) GetChannelId() uint64 {
	if m != nil && m.ChannelId != nil {
		return *m.ChannelId
	}
	return 0
}

func (m *CMsgTFOtherJoinedChatChannel) GetPersonaName() string {
	if m != nil && m.PersonaName != nil {
		return *m.PersonaName
	}
	return ""
}

func (m *CMsgTFOtherJoinedChatChannel) GetSteamId() uint64 {
	if m != nil && m.SteamId != nil {
		return *m.SteamId
	}
	return 0
}

type CMsgTFOtherLeftChatChannel struct {
	ChannelId        *uint64 `protobuf:"fixed64,1,opt,name=channel_id,json=channelId" json:"channel_id,omitempty"`
	SteamId          *uint64 `protobuf:"fixed64,2,opt,name=steam_id,json=steamId" json:"steam_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgTFOtherLeftChatChannel) Reset()                    { *m = CMsgTFOtherLeftChatChannel{} }
func (m *CMsgTFOtherLeftChatChannel) String() string            { return proto.CompactTextString(m) }
func (*CMsgTFOtherLeftChatChannel) ProtoMessage()               {}
func (*CMsgTFOtherLeftChatChannel) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{78} }

func (m *CMsgTFOtherLeftChatChannel) GetChannelId() uint64 {
	if m != nil && m.ChannelId != nil {
		return *m.ChannelId
	}
	return 0
}

func (m *CMsgTFOtherLeftChatChannel) GetSteamId() uint64 {
	if m != nil && m.SteamId != nil {
		return *m.SteamId
	}
	return 0
}

type CMsgTFRequestDefaultChatChannel struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMsgTFRequestDefaultChatChannel) Reset()         { *m = CMsgTFRequestDefaultChatChannel{} }
func (m *CMsgTFRequestDefaultChatChannel) String() string { return proto.CompactTextString(m) }
func (*CMsgTFRequestDefaultChatChannel) ProtoMessage()    {}
func (*CMsgTFRequestDefaultChatChannel) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{79}
}

type CMsgTFRequestDefaultChatChannelResponse struct {
	ChannelName      *string `protobuf:"bytes,1,opt,name=channel_name,json=channelName" json:"channel_name,omitempty"`
	ChannelId        *uint64 `protobuf:"fixed64,2,opt,name=channel_id,json=channelId" json:"channel_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgTFRequestDefaultChatChannelResponse) Reset() {
	*m = CMsgTFRequestDefaultChatChannelResponse{}
}
func (m *CMsgTFRequestDefaultChatChannelResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgTFRequestDefaultChatChannelResponse) ProtoMessage()    {}
func (*CMsgTFRequestDefaultChatChannelResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{80}
}

func (m *CMsgTFRequestDefaultChatChannelResponse) GetChannelName() string {
	if m != nil && m.ChannelName != nil {
		return *m.ChannelName
	}
	return ""
}

func (m *CMsgTFRequestDefaultChatChannelResponse) GetChannelId() uint64 {
	if m != nil && m.ChannelId != nil {
		return *m.ChannelId
	}
	return 0
}

type CMsgTFRequestChatChannelList struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMsgTFRequestChatChannelList) Reset()                    { *m = CMsgTFRequestChatChannelList{} }
func (m *CMsgTFRequestChatChannelList) String() string            { return proto.CompactTextString(m) }
func (*CMsgTFRequestChatChannelList) ProtoMessage()               {}
func (*CMsgTFRequestChatChannelList) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{81} }

type CMsgTFRequestChatChannelListResponse struct {
	Channels         []*CMsgTFRequestChatChannelListResponse_ChatChannel `protobuf:"bytes,1,rep,name=channels" json:"channels,omitempty"`
	XXX_unrecognized []byte                                              `json:"-"`
}

func (m *CMsgTFRequestChatChannelListResponse) Reset()         { *m = CMsgTFRequestChatChannelListResponse{} }
func (m *CMsgTFRequestChatChannelListResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgTFRequestChatChannelListResponse) ProtoMessage()    {}
func (*CMsgTFRequestChatChannelListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{82}
}

func (m *CMsgTFRequestChatChannelListResponse) GetChannels() []*CMsgTFRequestChatChannelListResponse_ChatChannel {
	if m != nil {
		return m.Channels
	}
	return nil
}

type CMsgTFRequestChatChannelListResponse_ChatChannel struct {
	ChannelName      *string           `protobuf:"bytes,1,opt,name=channel_name,json=channelName" json:"channel_name,omitempty"`
	NumMembers       *uint32           `protobuf:"varint,2,opt,name=num_members,json=numMembers" json:"num_members,omitempty"`
	ChannelType      *ChatChannelTypeT `protobuf:"varint,3,opt,name=channel_type,json=channelType,enum=ChatChannelTypeT,def=0" json:"channel_type,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *CMsgTFRequestChatChannelListResponse_ChatChannel) Reset() {
	*m = CMsgTFRequestChatChannelListResponse_ChatChannel{}
}
func (m *CMsgTFRequestChatChannelListResponse_ChatChannel) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgTFRequestChatChannelListResponse_ChatChannel) ProtoMessage() {}
func (*CMsgTFRequestChatChannelListResponse_ChatChannel) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{82, 0}
}

const Default_CMsgTFRequestChatChannelListResponse_ChatChannel_ChannelType ChatChannelTypeT = ChatChannelTypeT_ChatChannelType_Regional

func (m *CMsgTFRequestChatChannelListResponse_ChatChannel) GetChannelName() string {
	if m != nil && m.ChannelName != nil {
		return *m.ChannelName
	}
	return ""
}

func (m *CMsgTFRequestChatChannelListResponse_ChatChannel) GetNumMembers() uint32 {
	if m != nil && m.NumMembers != nil {
		return *m.NumMembers
	}
	return 0
}

func (m *CMsgTFRequestChatChannelListResponse_ChatChannel) GetChannelType() ChatChannelTypeT {
	if m != nil && m.ChannelType != nil {
		return *m.ChannelType
	}
	return Default_CMsgTFRequestChatChannelListResponse_ChatChannel_ChannelType
}

type CMsgGameServerMatchmakingStatus struct {
	ServerVersion      *uint32                                   `protobuf:"varint,16,opt,name=server_version,json=serverVersion,def=1225" json:"server_version,omitempty"`
	MatchmakingState   *ServerMatchmakingState                   `protobuf:"varint,1,opt,name=matchmaking_state,json=matchmakingState,enum=ServerMatchmakingState,def=0" json:"matchmaking_state,omitempty"`
	MatchmakingMode    *TF_MatchmakingMode                       `protobuf:"varint,2,opt,name=matchmaking_mode,json=matchmakingMode,enum=TF_MatchmakingMode,def=0" json:"matchmaking_mode,omitempty"`
	Map                *string                                   `protobuf:"bytes,3,opt,name=map" json:"map,omitempty"`
	Tags               *string                                   `protobuf:"bytes,4,opt,name=tags" json:"tags,omitempty"`
	BotCount           *uint32                                   `protobuf:"varint,5,opt,name=bot_count,json=botCount" json:"bot_count,omitempty"`
	NumSpectators      *uint32                                   `protobuf:"varint,6,opt,name=num_spectators,json=numSpectators" json:"num_spectators,omitempty"`
	MaxPlayers         *uint32                                   `protobuf:"varint,7,opt,name=max_players,json=maxPlayers" json:"max_players,omitempty"`
	SlotsFree          *uint32                                   `protobuf:"varint,8,opt,name=slots_free,json=slotsFree" json:"slots_free,omitempty"`
	ServerRegion       *uint32                                   `protobuf:"varint,9,opt,name=server_region,json=serverRegion" json:"server_region,omitempty"`
	ServerLoadavg      *float32                                  `protobuf:"fixed32,10,opt,name=server_loadavg,json=serverLoadavg" json:"server_loadavg,omitempty"`
	ServerTrusted      *bool                                     `protobuf:"varint,11,opt,name=server_trusted,json=serverTrusted" json:"server_trusted,omitempty"`
	ServerDedicated    *bool                                     `protobuf:"varint,12,opt,name=server_dedicated,json=serverDedicated" json:"server_dedicated,omitempty"`
	Strict             *uint32                                   `protobuf:"varint,17,opt,name=strict" json:"strict,omitempty"`
	Players            []*CMsgGameServerMatchmakingStatus_Player `protobuf:"bytes,13,rep,name=players" json:"players,omitempty"`
	GameState          *TF_GC_GameState                          `protobuf:"varint,14,opt,name=game_state,json=gameState,enum=TF_GC_GameState,def=0" json:"game_state,omitempty"`
	Event              *CMsgGameServerMatchmakingStatus_Event    `protobuf:"varint,15,opt,name=event,enum=CMsgGameServerMatchmakingStatus_Event,def=0" json:"event,omitempty"`
	MvmWave            *uint32                                   `protobuf:"varint,18,opt,name=mvm_wave,json=mvmWave" json:"mvm_wave,omitempty"`
	MvmCreditsAcquired *uint32                                   `protobuf:"varint,19,opt,name=mvm_credits_acquired,json=mvmCreditsAcquired" json:"mvm_credits_acquired,omitempty"`
	MvmCreditsDropped  *uint32                                   `protobuf:"varint,20,opt,name=mvm_credits_dropped,json=mvmCreditsDropped" json:"mvm_credits_dropped,omitempty"`
	MatchGroup         *int32                                    `protobuf:"zigzag32,23,opt,name=match_group,json=matchGroup,def=-1" json:"match_group,omitempty"`
	XXX_unrecognized   []byte                                    `json:"-"`
}

func (m *CMsgGameServerMatchmakingStatus) Reset()         { *m = CMsgGameServerMatchmakingStatus{} }
func (m *CMsgGameServerMatchmakingStatus) String() string { return proto.CompactTextString(m) }
func (*CMsgGameServerMatchmakingStatus) ProtoMessage()    {}
func (*CMsgGameServerMatchmakingStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{83}
}

const Default_CMsgGameServerMatchmakingStatus_ServerVersion uint32 = 1225
const Default_CMsgGameServerMatchmakingStatus_MatchmakingState ServerMatchmakingState = ServerMatchmakingState_ServerMatchmakingState_INVALID
const Default_CMsgGameServerMatchmakingStatus_MatchmakingMode TF_MatchmakingMode = TF_MatchmakingMode_TF_Matchmaking_INVALID
const Default_CMsgGameServerMatchmakingStatus_GameState TF_GC_GameState = TF_GC_GameState_TF_GC_GAMESTATE_STATE_INIT
const Default_CMsgGameServerMatchmakingStatus_Event CMsgGameServerMatchmakingStatus_Event = CMsgGameServerMatchmakingStatus_None
const Default_CMsgGameServerMatchmakingStatus_MatchGroup int32 = -1

func (m *CMsgGameServerMatchmakingStatus) GetServerVersion() uint32 {
	if m != nil && m.ServerVersion != nil {
		return *m.ServerVersion
	}
	return Default_CMsgGameServerMatchmakingStatus_ServerVersion
}

func (m *CMsgGameServerMatchmakingStatus) GetMatchmakingState() ServerMatchmakingState {
	if m != nil && m.MatchmakingState != nil {
		return *m.MatchmakingState
	}
	return Default_CMsgGameServerMatchmakingStatus_MatchmakingState
}

func (m *CMsgGameServerMatchmakingStatus) GetMatchmakingMode() TF_MatchmakingMode {
	if m != nil && m.MatchmakingMode != nil {
		return *m.MatchmakingMode
	}
	return Default_CMsgGameServerMatchmakingStatus_MatchmakingMode
}

func (m *CMsgGameServerMatchmakingStatus) GetMap() string {
	if m != nil && m.Map != nil {
		return *m.Map
	}
	return ""
}

func (m *CMsgGameServerMatchmakingStatus) GetTags() string {
	if m != nil && m.Tags != nil {
		return *m.Tags
	}
	return ""
}

func (m *CMsgGameServerMatchmakingStatus) GetBotCount() uint32 {
	if m != nil && m.BotCount != nil {
		return *m.BotCount
	}
	return 0
}

func (m *CMsgGameServerMatchmakingStatus) GetNumSpectators() uint32 {
	if m != nil && m.NumSpectators != nil {
		return *m.NumSpectators
	}
	return 0
}

func (m *CMsgGameServerMatchmakingStatus) GetMaxPlayers() uint32 {
	if m != nil && m.MaxPlayers != nil {
		return *m.MaxPlayers
	}
	return 0
}

func (m *CMsgGameServerMatchmakingStatus) GetSlotsFree() uint32 {
	if m != nil && m.SlotsFree != nil {
		return *m.SlotsFree
	}
	return 0
}

func (m *CMsgGameServerMatchmakingStatus) GetServerRegion() uint32 {
	if m != nil && m.ServerRegion != nil {
		return *m.ServerRegion
	}
	return 0
}

func (m *CMsgGameServerMatchmakingStatus) GetServerLoadavg() float32 {
	if m != nil && m.ServerLoadavg != nil {
		return *m.ServerLoadavg
	}
	return 0
}

func (m *CMsgGameServerMatchmakingStatus) GetServerTrusted() bool {
	if m != nil && m.ServerTrusted != nil {
		return *m.ServerTrusted
	}
	return false
}

func (m *CMsgGameServerMatchmakingStatus) GetServerDedicated() bool {
	if m != nil && m.ServerDedicated != nil {
		return *m.ServerDedicated
	}
	return false
}

func (m *CMsgGameServerMatchmakingStatus) GetStrict() uint32 {
	if m != nil && m.Strict != nil {
		return *m.Strict
	}
	return 0
}

func (m *CMsgGameServerMatchmakingStatus) GetPlayers() []*CMsgGameServerMatchmakingStatus_Player {
	if m != nil {
		return m.Players
	}
	return nil
}

func (m *CMsgGameServerMatchmakingStatus) GetGameState() TF_GC_GameState {
	if m != nil && m.GameState != nil {
		return *m.GameState
	}
	return Default_CMsgGameServerMatchmakingStatus_GameState
}

func (m *CMsgGameServerMatchmakingStatus) GetEvent() CMsgGameServerMatchmakingStatus_Event {
	if m != nil && m.Event != nil {
		return *m.Event
	}
	return Default_CMsgGameServerMatchmakingStatus_Event
}

func (m *CMsgGameServerMatchmakingStatus) GetMvmWave() uint32 {
	if m != nil && m.MvmWave != nil {
		return *m.MvmWave
	}
	return 0
}

func (m *CMsgGameServerMatchmakingStatus) GetMvmCreditsAcquired() uint32 {
	if m != nil && m.MvmCreditsAcquired != nil {
		return *m.MvmCreditsAcquired
	}
	return 0
}

func (m *CMsgGameServerMatchmakingStatus) GetMvmCreditsDropped() uint32 {
	if m != nil && m.MvmCreditsDropped != nil {
		return *m.MvmCreditsDropped
	}
	return 0
}

func (m *CMsgGameServerMatchmakingStatus) GetMatchGroup() int32 {
	if m != nil && m.MatchGroup != nil {
		return *m.MatchGroup
	}
	return Default_CMsgGameServerMatchmakingStatus_MatchGroup
}

type CMsgGameServerMatchmakingStatus_Player struct {
	SteamId          *uint64                                             `protobuf:"fixed64,1,opt,name=steam_id,json=steamId" json:"steam_id,omitempty"`
	ConnectState     *CMsgGameServerMatchmakingStatus_PlayerConnectState `protobuf:"varint,2,opt,name=connect_state,json=connectState,enum=CMsgGameServerMatchmakingStatus_PlayerConnectState,def=0" json:"connect_state,omitempty"`
	XXX_unrecognized []byte                                              `json:"-"`
}

func (m *CMsgGameServerMatchmakingStatus_Player) Reset() {
	*m = CMsgGameServerMatchmakingStatus_Player{}
}
func (m *CMsgGameServerMatchmakingStatus_Player) String() string { return proto.CompactTextString(m) }
func (*CMsgGameServerMatchmakingStatus_Player) ProtoMessage()    {}
func (*CMsgGameServerMatchmakingStatus_Player) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{83, 0}
}

const Default_CMsgGameServerMatchmakingStatus_Player_ConnectState CMsgGameServerMatchmakingStatus_PlayerConnectState = CMsgGameServerMatchmakingStatus_INVALID

func (m *CMsgGameServerMatchmakingStatus_Player) GetSteamId() uint64 {
	if m != nil && m.SteamId != nil {
		return *m.SteamId
	}
	return 0
}

func (m *CMsgGameServerMatchmakingStatus_Player) GetConnectState() CMsgGameServerMatchmakingStatus_PlayerConnectState {
	if m != nil && m.ConnectState != nil {
		return *m.ConnectState
	}
	return Default_CMsgGameServerMatchmakingStatus_Player_ConnectState
}

type CMsgMatchmakingProgress struct {
	AvgWaitTimeNew                    *uint32 `protobuf:"varint,4,opt,name=avg_wait_time_new,json=avgWaitTimeNew" json:"avg_wait_time_new,omitempty"`
	AvgWaitTimeJoinLate               *uint32 `protobuf:"varint,5,opt,name=avg_wait_time_join_late,json=avgWaitTimeJoinLate" json:"avg_wait_time_join_late,omitempty"`
	YourWaitTime                      *uint32 `protobuf:"varint,6,opt,name=your_wait_time,json=yourWaitTime" json:"your_wait_time,omitempty"`
	MatchingWorldwideSearchingPlayers *uint32 `protobuf:"varint,8,opt,name=matching_worldwide_searching_players,json=matchingWorldwideSearchingPlayers" json:"matching_worldwide_searching_players,omitempty"`
	MatchingNearYouSearchingPlayers   *uint32 `protobuf:"varint,9,opt,name=matching_near_you_searching_players,json=matchingNearYouSearchingPlayers" json:"matching_near_you_searching_players,omitempty"`
	TotalWorldwideSearchingPlayers    *uint32 `protobuf:"varint,13,opt,name=total_worldwide_searching_players,json=totalWorldwideSearchingPlayers" json:"total_worldwide_searching_players,omitempty"`
	TotalNearYouSearchingPlayers      *uint32 `protobuf:"varint,14,opt,name=total_near_you_searching_players,json=totalNearYouSearchingPlayers" json:"total_near_you_searching_players,omitempty"`
	MatchingWorldwideActivePlayers    *uint32 `protobuf:"varint,15,opt,name=matching_worldwide_active_players,json=matchingWorldwideActivePlayers" json:"matching_worldwide_active_players,omitempty"`
	MatchingNearYouActivePlayers      *uint32 `protobuf:"varint,16,opt,name=matching_near_you_active_players,json=matchingNearYouActivePlayers" json:"matching_near_you_active_players,omitempty"`
	TotalWorldwideActivePlayers       *uint32 `protobuf:"varint,17,opt,name=total_worldwide_active_players,json=totalWorldwideActivePlayers" json:"total_worldwide_active_players,omitempty"`
	TotalNearYouActivePlayers         *uint32 `protobuf:"varint,18,opt,name=total_near_you_active_players,json=totalNearYouActivePlayers" json:"total_near_you_active_players,omitempty"`
	MatchingWorldwideEmptyGameservers *uint32 `protobuf:"varint,19,opt,name=matching_worldwide_empty_gameservers,json=matchingWorldwideEmptyGameservers" json:"matching_worldwide_empty_gameservers,omitempty"`
	MatchingNearYouEmptyGameservers   *uint32 `protobuf:"varint,20,opt,name=matching_near_you_empty_gameservers,json=matchingNearYouEmptyGameservers" json:"matching_near_you_empty_gameservers,omitempty"`
	TotalWorldwideEmptyGameservers    *uint32 `protobuf:"varint,21,opt,name=total_worldwide_empty_gameservers,json=totalWorldwideEmptyGameservers" json:"total_worldwide_empty_gameservers,omitempty"`
	TotalNearYouEmptyGameservers      *uint32 `protobuf:"varint,22,opt,name=total_near_you_empty_gameservers,json=totalNearYouEmptyGameservers" json:"total_near_you_empty_gameservers,omitempty"`
	UrgencyPct                        *uint32 `protobuf:"varint,1,opt,name=urgency_pct,json=urgencyPct" json:"urgency_pct,omitempty"`
	XXX_unrecognized                  []byte  `json:"-"`
}

func (m *CMsgMatchmakingProgress) Reset()                    { *m = CMsgMatchmakingProgress{} }
func (m *CMsgMatchmakingProgress) String() string            { return proto.CompactTextString(m) }
func (*CMsgMatchmakingProgress) ProtoMessage()               {}
func (*CMsgMatchmakingProgress) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{84} }

func (m *CMsgMatchmakingProgress) GetAvgWaitTimeNew() uint32 {
	if m != nil && m.AvgWaitTimeNew != nil {
		return *m.AvgWaitTimeNew
	}
	return 0
}

func (m *CMsgMatchmakingProgress) GetAvgWaitTimeJoinLate() uint32 {
	if m != nil && m.AvgWaitTimeJoinLate != nil {
		return *m.AvgWaitTimeJoinLate
	}
	return 0
}

func (m *CMsgMatchmakingProgress) GetYourWaitTime() uint32 {
	if m != nil && m.YourWaitTime != nil {
		return *m.YourWaitTime
	}
	return 0
}

func (m *CMsgMatchmakingProgress) GetMatchingWorldwideSearchingPlayers() uint32 {
	if m != nil && m.MatchingWorldwideSearchingPlayers != nil {
		return *m.MatchingWorldwideSearchingPlayers
	}
	return 0
}

func (m *CMsgMatchmakingProgress) GetMatchingNearYouSearchingPlayers() uint32 {
	if m != nil && m.MatchingNearYouSearchingPlayers != nil {
		return *m.MatchingNearYouSearchingPlayers
	}
	return 0
}

func (m *CMsgMatchmakingProgress) GetTotalWorldwideSearchingPlayers() uint32 {
	if m != nil && m.TotalWorldwideSearchingPlayers != nil {
		return *m.TotalWorldwideSearchingPlayers
	}
	return 0
}

func (m *CMsgMatchmakingProgress) GetTotalNearYouSearchingPlayers() uint32 {
	if m != nil && m.TotalNearYouSearchingPlayers != nil {
		return *m.TotalNearYouSearchingPlayers
	}
	return 0
}

func (m *CMsgMatchmakingProgress) GetMatchingWorldwideActivePlayers() uint32 {
	if m != nil && m.MatchingWorldwideActivePlayers != nil {
		return *m.MatchingWorldwideActivePlayers
	}
	return 0
}

func (m *CMsgMatchmakingProgress) GetMatchingNearYouActivePlayers() uint32 {
	if m != nil && m.MatchingNearYouActivePlayers != nil {
		return *m.MatchingNearYouActivePlayers
	}
	return 0
}

func (m *CMsgMatchmakingProgress) GetTotalWorldwideActivePlayers() uint32 {
	if m != nil && m.TotalWorldwideActivePlayers != nil {
		return *m.TotalWorldwideActivePlayers
	}
	return 0
}

func (m *CMsgMatchmakingProgress) GetTotalNearYouActivePlayers() uint32 {
	if m != nil && m.TotalNearYouActivePlayers != nil {
		return *m.TotalNearYouActivePlayers
	}
	return 0
}

func (m *CMsgMatchmakingProgress) GetMatchingWorldwideEmptyGameservers() uint32 {
	if m != nil && m.MatchingWorldwideEmptyGameservers != nil {
		return *m.MatchingWorldwideEmptyGameservers
	}
	return 0
}

func (m *CMsgMatchmakingProgress) GetMatchingNearYouEmptyGameservers() uint32 {
	if m != nil && m.MatchingNearYouEmptyGameservers != nil {
		return *m.MatchingNearYouEmptyGameservers
	}
	return 0
}

func (m *CMsgMatchmakingProgress) GetTotalWorldwideEmptyGameservers() uint32 {
	if m != nil && m.TotalWorldwideEmptyGameservers != nil {
		return *m.TotalWorldwideEmptyGameservers
	}
	return 0
}

func (m *CMsgMatchmakingProgress) GetTotalNearYouEmptyGameservers() uint32 {
	if m != nil && m.TotalNearYouEmptyGameservers != nil {
		return *m.TotalNearYouEmptyGameservers
	}
	return 0
}

func (m *CMsgMatchmakingProgress) GetUrgencyPct() uint32 {
	if m != nil && m.UrgencyPct != nil {
		return *m.UrgencyPct
	}
	return 0
}

type CMsgMvMVictoryInfo struct {
	Players          []*CMsgMvMVictoryInfo_Player `protobuf:"bytes,1,rep,name=players" json:"players,omitempty"`
	TourName         *string                      `protobuf:"bytes,2,opt,name=tour_name,json=tourName" json:"tour_name,omitempty"`
	MissionName      *string                      `protobuf:"bytes,3,opt,name=mission_name,json=missionName" json:"mission_name,omitempty"`
	XXX_unrecognized []byte                       `json:"-"`
}

func (m *CMsgMvMVictoryInfo) Reset()                    { *m = CMsgMvMVictoryInfo{} }
func (m *CMsgMvMVictoryInfo) String() string            { return proto.CompactTextString(m) }
func (*CMsgMvMVictoryInfo) ProtoMessage()               {}
func (*CMsgMvMVictoryInfo) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{85} }

func (m *CMsgMvMVictoryInfo) GetPlayers() []*CMsgMvMVictoryInfo_Player {
	if m != nil {
		return m.Players
	}
	return nil
}

func (m *CMsgMvMVictoryInfo) GetTourName() string {
	if m != nil && m.TourName != nil {
		return *m.TourName
	}
	return ""
}

func (m *CMsgMvMVictoryInfo) GetMissionName() string {
	if m != nil && m.MissionName != nil {
		return *m.MissionName
	}
	return ""
}

type CMsgMvMVictoryInfo_Item struct {
	GrantReason                *CMsgMvMVictoryInfo_GrantReason `protobuf:"varint,1,opt,name=grant_reason,json=grantReason,enum=CMsgMvMVictoryInfo_GrantReason,def=0" json:"grant_reason,omitempty"`
	ItemData                   []byte                          `protobuf:"bytes,2,opt,name=item_data,json=itemData" json:"item_data,omitempty"`
	SquadSurplusClaimerSteamId *uint64                         `protobuf:"fixed64,3,opt,name=squad_surplus_claimer_steam_id,json=squadSurplusClaimerSteamId" json:"squad_surplus_claimer_steam_id,omitempty"`
	XXX_unrecognized           []byte                          `json:"-"`
}

func (m *CMsgMvMVictoryInfo_Item) Reset()                    { *m = CMsgMvMVictoryInfo_Item{} }
func (m *CMsgMvMVictoryInfo_Item) String() string            { return proto.CompactTextString(m) }
func (*CMsgMvMVictoryInfo_Item) ProtoMessage()               {}
func (*CMsgMvMVictoryInfo_Item) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{85, 0} }

const Default_CMsgMvMVictoryInfo_Item_GrantReason CMsgMvMVictoryInfo_GrantReason = CMsgMvMVictoryInfo_INVALID

func (m *CMsgMvMVictoryInfo_Item) GetGrantReason() CMsgMvMVictoryInfo_GrantReason {
	if m != nil && m.GrantReason != nil {
		return *m.GrantReason
	}
	return Default_CMsgMvMVictoryInfo_Item_GrantReason
}

func (m *CMsgMvMVictoryInfo_Item) GetItemData() []byte {
	if m != nil {
		return m.ItemData
	}
	return nil
}

func (m *CMsgMvMVictoryInfo_Item) GetSquadSurplusClaimerSteamId() uint64 {
	if m != nil && m.SquadSurplusClaimerSteamId != nil {
		return *m.SquadSurplusClaimerSteamId
	}
	return 0
}

type CMsgMvMVictoryInfo_Player struct {
	SteamId              *uint64                    `protobuf:"fixed64,1,opt,name=steam_id,json=steamId" json:"steam_id,omitempty"`
	BadgeGranted         *bool                      `protobuf:"varint,3,opt,name=badge_granted,json=badgeGranted" json:"badge_granted,omitempty"`
	BadgeProgressUpdated *bool                      `protobuf:"varint,4,opt,name=badge_progress_updated,json=badgeProgressUpdated" json:"badge_progress_updated,omitempty"`
	BadgeLeveled         *bool                      `protobuf:"varint,5,opt,name=badge_leveled,json=badgeLeveled" json:"badge_leveled,omitempty"`
	BadgeLevel           *uint32                    `protobuf:"varint,6,opt,name=badge_level,json=badgeLevel" json:"badge_level,omitempty"`
	BadgeProgressBits    *uint32                    `protobuf:"varint,7,opt,name=badge_progress_bits,json=badgeProgressBits" json:"badge_progress_bits,omitempty"`
	Items                []*CMsgMvMVictoryInfo_Item `protobuf:"bytes,8,rep,name=items" json:"items,omitempty"`
	VoucherMissing       *bool                      `protobuf:"varint,9,opt,name=voucher_missing,json=voucherMissing" json:"voucher_missing,omitempty"`
	BadgePoints          *uint32                    `protobuf:"varint,10,opt,name=badge_points,json=badgePoints" json:"badge_points,omitempty"`
	XXX_unrecognized     []byte                     `json:"-"`
}

func (m *CMsgMvMVictoryInfo_Player) Reset()                    { *m = CMsgMvMVictoryInfo_Player{} }
func (m *CMsgMvMVictoryInfo_Player) String() string            { return proto.CompactTextString(m) }
func (*CMsgMvMVictoryInfo_Player) ProtoMessage()               {}
func (*CMsgMvMVictoryInfo_Player) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{85, 1} }

func (m *CMsgMvMVictoryInfo_Player) GetSteamId() uint64 {
	if m != nil && m.SteamId != nil {
		return *m.SteamId
	}
	return 0
}

func (m *CMsgMvMVictoryInfo_Player) GetBadgeGranted() bool {
	if m != nil && m.BadgeGranted != nil {
		return *m.BadgeGranted
	}
	return false
}

func (m *CMsgMvMVictoryInfo_Player) GetBadgeProgressUpdated() bool {
	if m != nil && m.BadgeProgressUpdated != nil {
		return *m.BadgeProgressUpdated
	}
	return false
}

func (m *CMsgMvMVictoryInfo_Player) GetBadgeLeveled() bool {
	if m != nil && m.BadgeLeveled != nil {
		return *m.BadgeLeveled
	}
	return false
}

func (m *CMsgMvMVictoryInfo_Player) GetBadgeLevel() uint32 {
	if m != nil && m.BadgeLevel != nil {
		return *m.BadgeLevel
	}
	return 0
}

func (m *CMsgMvMVictoryInfo_Player) GetBadgeProgressBits() uint32 {
	if m != nil && m.BadgeProgressBits != nil {
		return *m.BadgeProgressBits
	}
	return 0
}

func (m *CMsgMvMVictoryInfo_Player) GetItems() []*CMsgMvMVictoryInfo_Item {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *CMsgMvMVictoryInfo_Player) GetVoucherMissing() bool {
	if m != nil && m.VoucherMissing != nil {
		return *m.VoucherMissing
	}
	return false
}

func (m *CMsgMvMVictoryInfo_Player) GetBadgePoints() uint32 {
	if m != nil && m.BadgePoints != nil {
		return *m.BadgePoints
	}
	return 0
}

type CGCMsgTFHelloResponse struct {
	VersionCheck     *uint32  `protobuf:"varint,1,opt,name=version_check,json=versionCheck" json:"version_check,omitempty"`
	VersionChecksum  []uint64 `protobuf:"varint,2,rep,name=version_checksum,json=versionChecksum" json:"version_checksum,omitempty"`
	VersionVerbose   *uint32  `protobuf:"varint,3,opt,name=version_verbose,json=versionVerbose" json:"version_verbose,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CGCMsgTFHelloResponse) Reset()                    { *m = CGCMsgTFHelloResponse{} }
func (m *CGCMsgTFHelloResponse) String() string            { return proto.CompactTextString(m) }
func (*CGCMsgTFHelloResponse) ProtoMessage()               {}
func (*CGCMsgTFHelloResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{86} }

func (m *CGCMsgTFHelloResponse) GetVersionCheck() uint32 {
	if m != nil && m.VersionCheck != nil {
		return *m.VersionCheck
	}
	return 0
}

func (m *CGCMsgTFHelloResponse) GetVersionChecksum() []uint64 {
	if m != nil {
		return m.VersionChecksum
	}
	return nil
}

func (m *CGCMsgTFHelloResponse) GetVersionVerbose() uint32 {
	if m != nil && m.VersionVerbose != nil {
		return *m.VersionVerbose
	}
	return 0
}

type CGCMsgTFSync struct {
	VersionChecksum   []byte  `protobuf:"bytes,1,opt,name=version_checksum,json=versionChecksum" json:"version_checksum,omitempty"`
	VersionCheck      *uint32 `protobuf:"varint,2,opt,name=version_check,json=versionCheck" json:"version_check,omitempty"`
	VersionCheckEx    *uint32 `protobuf:"varint,3,opt,name=version_check_ex,json=versionCheckEx" json:"version_check_ex,omitempty"`
	VersionCheckEx2   *uint32 `protobuf:"varint,4,opt,name=version_check_ex2,json=versionCheckEx2" json:"version_check_ex2,omitempty"`
	VersionChecksumEx []byte  `protobuf:"bytes,5,opt,name=version_checksum_ex,json=versionChecksumEx" json:"version_checksum_ex,omitempty"`
	XXX_unrecognized  []byte  `json:"-"`
}

func (m *CGCMsgTFSync) Reset()                    { *m = CGCMsgTFSync{} }
func (m *CGCMsgTFSync) String() string            { return proto.CompactTextString(m) }
func (*CGCMsgTFSync) ProtoMessage()               {}
func (*CGCMsgTFSync) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{87} }

func (m *CGCMsgTFSync) GetVersionChecksum() []byte {
	if m != nil {
		return m.VersionChecksum
	}
	return nil
}

func (m *CGCMsgTFSync) GetVersionCheck() uint32 {
	if m != nil && m.VersionCheck != nil {
		return *m.VersionCheck
	}
	return 0
}

func (m *CGCMsgTFSync) GetVersionCheckEx() uint32 {
	if m != nil && m.VersionCheckEx != nil {
		return *m.VersionCheckEx
	}
	return 0
}

func (m *CGCMsgTFSync) GetVersionCheckEx2() uint32 {
	if m != nil && m.VersionCheckEx2 != nil {
		return *m.VersionCheckEx2
	}
	return 0
}

func (m *CGCMsgTFSync) GetVersionChecksumEx() []byte {
	if m != nil {
		return m.VersionChecksumEx
	}
	return nil
}

type CGCMsgTFSyncEx struct {
	VersionChecksum   *string `protobuf:"bytes,1,opt,name=version_checksum,json=versionChecksum" json:"version_checksum,omitempty"`
	VersionChecksumEx []byte  `protobuf:"bytes,2,opt,name=version_checksum_ex,json=versionChecksumEx" json:"version_checksum_ex,omitempty"`
	VersionCheck      *uint32 `protobuf:"varint,3,opt,name=version_check,json=versionCheck" json:"version_check,omitempty"`
	XXX_unrecognized  []byte  `json:"-"`
}

func (m *CGCMsgTFSyncEx) Reset()                    { *m = CGCMsgTFSyncEx{} }
func (m *CGCMsgTFSyncEx) String() string            { return proto.CompactTextString(m) }
func (*CGCMsgTFSyncEx) ProtoMessage()               {}
func (*CGCMsgTFSyncEx) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{88} }

func (m *CGCMsgTFSyncEx) GetVersionChecksum() string {
	if m != nil && m.VersionChecksum != nil {
		return *m.VersionChecksum
	}
	return ""
}

func (m *CGCMsgTFSyncEx) GetVersionChecksumEx() []byte {
	if m != nil {
		return m.VersionChecksumEx
	}
	return nil
}

func (m *CGCMsgTFSyncEx) GetVersionCheck() uint32 {
	if m != nil && m.VersionCheck != nil {
		return *m.VersionCheck
	}
	return 0
}

type CMsgMvMVictory struct {
	LegacyMissionIndex *uint32                  `protobuf:"varint,1,opt,name=legacy_mission_index,json=legacyMissionIndex" json:"legacy_mission_index,omitempty"`
	TourNameMannup     *string                  `protobuf:"bytes,5,opt,name=tour_name_mannup,json=tourNameMannup" json:"tour_name_mannup,omitempty"`
	MissionName        *string                  `protobuf:"bytes,6,opt,name=mission_name,json=missionName" json:"mission_name,omitempty"`
	Players            []*CMsgMvMVictory_Player `protobuf:"bytes,2,rep,name=players" json:"players,omitempty"`
	LobbyId            *uint64                  `protobuf:"varint,3,opt,name=lobby_id,json=lobbyId" json:"lobby_id,omitempty"`
	EventTime          *uint32                  `protobuf:"fixed32,4,opt,name=event_time,json=eventTime" json:"event_time,omitempty"`
	XXX_unrecognized   []byte                   `json:"-"`
}

func (m *CMsgMvMVictory) Reset()                    { *m = CMsgMvMVictory{} }
func (m *CMsgMvMVictory) String() string            { return proto.CompactTextString(m) }
func (*CMsgMvMVictory) ProtoMessage()               {}
func (*CMsgMvMVictory) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{89} }

func (m *CMsgMvMVictory) GetLegacyMissionIndex() uint32 {
	if m != nil && m.LegacyMissionIndex != nil {
		return *m.LegacyMissionIndex
	}
	return 0
}

func (m *CMsgMvMVictory) GetTourNameMannup() string {
	if m != nil && m.TourNameMannup != nil {
		return *m.TourNameMannup
	}
	return ""
}

func (m *CMsgMvMVictory) GetMissionName() string {
	if m != nil && m.MissionName != nil {
		return *m.MissionName
	}
	return ""
}

func (m *CMsgMvMVictory) GetPlayers() []*CMsgMvMVictory_Player {
	if m != nil {
		return m.Players
	}
	return nil
}

func (m *CMsgMvMVictory) GetLobbyId() uint64 {
	if m != nil && m.LobbyId != nil {
		return *m.LobbyId
	}
	return 0
}

func (m *CMsgMvMVictory) GetEventTime() uint32 {
	if m != nil && m.EventTime != nil {
		return *m.EventTime
	}
	return 0
}

type CMsgMvMVictory_Player struct {
	SteamId          *uint64 `protobuf:"fixed64,1,opt,name=steam_id,json=steamId" json:"steam_id,omitempty"`
	SquadSurplus     *bool   `protobuf:"varint,2,opt,name=squad_surplus,json=squadSurplus" json:"squad_surplus,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgMvMVictory_Player) Reset()                    { *m = CMsgMvMVictory_Player{} }
func (m *CMsgMvMVictory_Player) String() string            { return proto.CompactTextString(m) }
func (*CMsgMvMVictory_Player) ProtoMessage()               {}
func (*CMsgMvMVictory_Player) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{89, 0} }

func (m *CMsgMvMVictory_Player) GetSteamId() uint64 {
	if m != nil && m.SteamId != nil {
		return *m.SteamId
	}
	return 0
}

func (m *CMsgMvMVictory_Player) GetSquadSurplus() bool {
	if m != nil && m.SquadSurplus != nil {
		return *m.SquadSurplus
	}
	return false
}

type CMsgMvMMannUpVictoryReply struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMsgMvMMannUpVictoryReply) Reset()                    { *m = CMsgMvMMannUpVictoryReply{} }
func (m *CMsgMvMMannUpVictoryReply) String() string            { return proto.CompactTextString(m) }
func (*CMsgMvMMannUpVictoryReply) ProtoMessage()               {}
func (*CMsgMvMMannUpVictoryReply) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{90} }

type CMsgGameServerKickingLobby struct {
	ConnectedPlayers []uint64 `protobuf:"fixed64,1,rep,name=connected_players,json=connectedPlayers" json:"connected_players,omitempty"`
	CreateParty      *bool    `protobuf:"varint,2,opt,name=create_party,json=createParty,def=1" json:"create_party,omitempty"`
	LobbyId          *uint64  `protobuf:"varint,3,opt,name=lobby_id,json=lobbyId" json:"lobby_id,omitempty"`
	MatchId          *uint64  `protobuf:"varint,4,opt,name=match_id,json=matchId" json:"match_id,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CMsgGameServerKickingLobby) Reset()                    { *m = CMsgGameServerKickingLobby{} }
func (m *CMsgGameServerKickingLobby) String() string            { return proto.CompactTextString(m) }
func (*CMsgGameServerKickingLobby) ProtoMessage()               {}
func (*CMsgGameServerKickingLobby) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{91} }

const Default_CMsgGameServerKickingLobby_CreateParty bool = true

func (m *CMsgGameServerKickingLobby) GetConnectedPlayers() []uint64 {
	if m != nil {
		return m.ConnectedPlayers
	}
	return nil
}

func (m *CMsgGameServerKickingLobby) GetCreateParty() bool {
	if m != nil && m.CreateParty != nil {
		return *m.CreateParty
	}
	return Default_CMsgGameServerKickingLobby_CreateParty
}

func (m *CMsgGameServerKickingLobby) GetLobbyId() uint64 {
	if m != nil && m.LobbyId != nil {
		return *m.LobbyId
	}
	return 0
}

func (m *CMsgGameServerKickingLobby) GetMatchId() uint64 {
	if m != nil && m.MatchId != nil {
		return *m.MatchId
	}
	return 0
}

type CMsgGameServerKickingLobbyResponse struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMsgGameServerKickingLobbyResponse) Reset()         { *m = CMsgGameServerKickingLobbyResponse{} }
func (m *CMsgGameServerKickingLobbyResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgGameServerKickingLobbyResponse) ProtoMessage()    {}
func (*CMsgGameServerKickingLobbyResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{92}
}

type CMsgLeaveGameAndPrepareToJoinParty struct {
	PartyId          *uint64 `protobuf:"fixed64,1,opt,name=party_id,json=partyId" json:"party_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgLeaveGameAndPrepareToJoinParty) Reset()         { *m = CMsgLeaveGameAndPrepareToJoinParty{} }
func (m *CMsgLeaveGameAndPrepareToJoinParty) String() string { return proto.CompactTextString(m) }
func (*CMsgLeaveGameAndPrepareToJoinParty) ProtoMessage()    {}
func (*CMsgLeaveGameAndPrepareToJoinParty) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{93}
}

func (m *CMsgLeaveGameAndPrepareToJoinParty) GetPartyId() uint64 {
	if m != nil && m.PartyId != nil {
		return *m.PartyId
	}
	return 0
}

type CMsgPlayerLeftMatch struct {
	SteamId          *uint64             `protobuf:"fixed64,1,opt,name=steam_id,json=steamId" json:"steam_id,omitempty"`
	LeaveReason      *TFMatchLeaveReason `protobuf:"varint,2,opt,name=leave_reason,json=leaveReason,enum=TFMatchLeaveReason,def=0" json:"leave_reason,omitempty"`
	WasAbandon       *bool               `protobuf:"varint,3,opt,name=was_abandon,json=wasAbandon" json:"was_abandon,omitempty"`
	LobbyId          *uint64             `protobuf:"varint,4,opt,name=lobby_id,json=lobbyId" json:"lobby_id,omitempty"`
	MatchId          *uint64             `protobuf:"varint,5,opt,name=match_id,json=matchId" json:"match_id,omitempty"`
	XpBreakdown      []*CMsgTFXPSource   `protobuf:"bytes,6,rep,name=xp_breakdown,json=xpBreakdown" json:"xp_breakdown,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *CMsgPlayerLeftMatch) Reset()                    { *m = CMsgPlayerLeftMatch{} }
func (m *CMsgPlayerLeftMatch) String() string            { return proto.CompactTextString(m) }
func (*CMsgPlayerLeftMatch) ProtoMessage()               {}
func (*CMsgPlayerLeftMatch) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{94} }

const Default_CMsgPlayerLeftMatch_LeaveReason TFMatchLeaveReason = TFMatchLeaveReason_TFMatchLeaveReason_UNSPECIFIED

func (m *CMsgPlayerLeftMatch) GetSteamId() uint64 {
	if m != nil && m.SteamId != nil {
		return *m.SteamId
	}
	return 0
}

func (m *CMsgPlayerLeftMatch) GetLeaveReason() TFMatchLeaveReason {
	if m != nil && m.LeaveReason != nil {
		return *m.LeaveReason
	}
	return Default_CMsgPlayerLeftMatch_LeaveReason
}

func (m *CMsgPlayerLeftMatch) GetWasAbandon() bool {
	if m != nil && m.WasAbandon != nil {
		return *m.WasAbandon
	}
	return false
}

func (m *CMsgPlayerLeftMatch) GetLobbyId() uint64 {
	if m != nil && m.LobbyId != nil {
		return *m.LobbyId
	}
	return 0
}

func (m *CMsgPlayerLeftMatch) GetMatchId() uint64 {
	if m != nil && m.MatchId != nil {
		return *m.MatchId
	}
	return 0
}

func (m *CMsgPlayerLeftMatch) GetXpBreakdown() []*CMsgTFXPSource {
	if m != nil {
		return m.XpBreakdown
	}
	return nil
}

type CMsgPlayerLeftMatchResponse struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMsgPlayerLeftMatchResponse) Reset()                    { *m = CMsgPlayerLeftMatchResponse{} }
func (m *CMsgPlayerLeftMatchResponse) String() string            { return proto.CompactTextString(m) }
func (*CMsgPlayerLeftMatchResponse) ProtoMessage()               {}
func (*CMsgPlayerLeftMatchResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{95} }

type CMsgHalloween_ServerBossEvent struct {
	EventCounter     *uint32  `protobuf:"varint,1,opt,name=event_counter,json=eventCounter" json:"event_counter,omitempty"`
	Timestamp        *uint32  `protobuf:"varint,2,opt,name=timestamp" json:"timestamp,omitempty"`
	BossType         *uint32  `protobuf:"varint,3,opt,name=boss_type,json=bossType" json:"boss_type,omitempty"`
	BossLevel        *uint32  `protobuf:"varint,4,opt,name=boss_level,json=bossLevel" json:"boss_level,omitempty"`
	EventType        *uint32  `protobuf:"varint,5,opt,name=event_type,json=eventType" json:"event_type,omitempty"`
	PlayersInvolved  *uint32  `protobuf:"varint,6,opt,name=players_involved,json=playersInvolved" json:"players_involved,omitempty"`
	ElapsedTime      *float32 `protobuf:"fixed32,7,opt,name=elapsed_time,json=elapsedTime" json:"elapsed_time,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CMsgHalloween_ServerBossEvent) Reset()                    { *m = CMsgHalloween_ServerBossEvent{} }
func (m *CMsgHalloween_ServerBossEvent) String() string            { return proto.CompactTextString(m) }
func (*CMsgHalloween_ServerBossEvent) ProtoMessage()               {}
func (*CMsgHalloween_ServerBossEvent) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{96} }

func (m *CMsgHalloween_ServerBossEvent) GetEventCounter() uint32 {
	if m != nil && m.EventCounter != nil {
		return *m.EventCounter
	}
	return 0
}

func (m *CMsgHalloween_ServerBossEvent) GetTimestamp() uint32 {
	if m != nil && m.Timestamp != nil {
		return *m.Timestamp
	}
	return 0
}

func (m *CMsgHalloween_ServerBossEvent) GetBossType() uint32 {
	if m != nil && m.BossType != nil {
		return *m.BossType
	}
	return 0
}

func (m *CMsgHalloween_ServerBossEvent) GetBossLevel() uint32 {
	if m != nil && m.BossLevel != nil {
		return *m.BossLevel
	}
	return 0
}

func (m *CMsgHalloween_ServerBossEvent) GetEventType() uint32 {
	if m != nil && m.EventType != nil {
		return *m.EventType
	}
	return 0
}

func (m *CMsgHalloween_ServerBossEvent) GetPlayersInvolved() uint32 {
	if m != nil && m.PlayersInvolved != nil {
		return *m.PlayersInvolved
	}
	return 0
}

func (m *CMsgHalloween_ServerBossEvent) GetElapsedTime() float32 {
	if m != nil && m.ElapsedTime != nil {
		return *m.ElapsedTime
	}
	return 0
}

type CMsgHalloween_Merasmus2012 struct {
	EventCounter     *uint32 `protobuf:"varint,1,opt,name=event_counter,json=eventCounter" json:"event_counter,omitempty"`
	TimeSubmitted    *uint32 `protobuf:"fixed32,2,opt,name=time_submitted,json=timeSubmitted" json:"time_submitted,omitempty"`
	IsValveServer    *bool   `protobuf:"varint,3,opt,name=is_valve_server,json=isValveServer" json:"is_valve_server,omitempty"`
	BossLevel        *uint32 `protobuf:"varint,4,opt,name=boss_level,json=bossLevel" json:"boss_level,omitempty"`
	SpawnedHealth    *uint32 `protobuf:"varint,5,opt,name=spawned_health,json=spawnedHealth" json:"spawned_health,omitempty"`
	RemainingHealth  *uint32 `protobuf:"varint,6,opt,name=remaining_health,json=remainingHealth" json:"remaining_health,omitempty"`
	LifeTime         *uint32 `protobuf:"varint,7,opt,name=life_time,json=lifeTime" json:"life_time,omitempty"`
	BombKills        *uint32 `protobuf:"varint,8,opt,name=bomb_kills,json=bombKills" json:"bomb_kills,omitempty"`
	StaffKills       *uint32 `protobuf:"varint,9,opt,name=staff_kills,json=staffKills" json:"staff_kills,omitempty"`
	PvpKills         *uint32 `protobuf:"varint,10,opt,name=pvp_kills,json=pvpKills" json:"pvp_kills,omitempty"`
	ProphuntTime1    *uint32 `protobuf:"varint,11,opt,name=prophunt_time1,json=prophuntTime1" json:"prophunt_time1,omitempty"`
	ProphuntTime2    *uint32 `protobuf:"varint,12,opt,name=prophunt_time2,json=prophuntTime2" json:"prophunt_time2,omitempty"`
	DmgScout         *uint32 `protobuf:"varint,13,opt,name=dmg_scout,json=dmgScout" json:"dmg_scout,omitempty"`
	DmgSniper        *uint32 `protobuf:"varint,14,opt,name=dmg_sniper,json=dmgSniper" json:"dmg_sniper,omitempty"`
	DmgSoldier       *uint32 `protobuf:"varint,15,opt,name=dmg_soldier,json=dmgSoldier" json:"dmg_soldier,omitempty"`
	DmgDemo          *uint32 `protobuf:"varint,16,opt,name=dmg_demo,json=dmgDemo" json:"dmg_demo,omitempty"`
	DmgMedic         *uint32 `protobuf:"varint,17,opt,name=dmg_medic,json=dmgMedic" json:"dmg_medic,omitempty"`
	DmgHeavy         *uint32 `protobuf:"varint,18,opt,name=dmg_heavy,json=dmgHeavy" json:"dmg_heavy,omitempty"`
	DmgPyro          *uint32 `protobuf:"varint,19,opt,name=dmg_pyro,json=dmgPyro" json:"dmg_pyro,omitempty"`
	DmgSpy           *uint32 `protobuf:"varint,20,opt,name=dmg_spy,json=dmgSpy" json:"dmg_spy,omitempty"`
	DmgEngineer      *uint32 `protobuf:"varint,21,opt,name=dmg_engineer,json=dmgEngineer" json:"dmg_engineer,omitempty"`
	ScoutCount       *uint32 `protobuf:"varint,22,opt,name=scout_count,json=scoutCount" json:"scout_count,omitempty"`
	SniperCount      *uint32 `protobuf:"varint,23,opt,name=sniper_count,json=sniperCount" json:"sniper_count,omitempty"`
	SoliderCount     *uint32 `protobuf:"varint,24,opt,name=solider_count,json=soliderCount" json:"solider_count,omitempty"`
	DemoCount        *uint32 `protobuf:"varint,25,opt,name=demo_count,json=demoCount" json:"demo_count,omitempty"`
	MedicCount       *uint32 `protobuf:"varint,26,opt,name=medic_count,json=medicCount" json:"medic_count,omitempty"`
	HeavyCount       *uint32 `protobuf:"varint,27,opt,name=heavy_count,json=heavyCount" json:"heavy_count,omitempty"`
	PyroCount        *uint32 `protobuf:"varint,28,opt,name=pyro_count,json=pyroCount" json:"pyro_count,omitempty"`
	SpyCount         *uint32 `protobuf:"varint,29,opt,name=spy_count,json=spyCount" json:"spy_count,omitempty"`
	EngineerCount    *uint32 `protobuf:"varint,30,opt,name=engineer_count,json=engineerCount" json:"engineer_count,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgHalloween_Merasmus2012) Reset()                    { *m = CMsgHalloween_Merasmus2012{} }
func (m *CMsgHalloween_Merasmus2012) String() string            { return proto.CompactTextString(m) }
func (*CMsgHalloween_Merasmus2012) ProtoMessage()               {}
func (*CMsgHalloween_Merasmus2012) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{97} }

func (m *CMsgHalloween_Merasmus2012) GetEventCounter() uint32 {
	if m != nil && m.EventCounter != nil {
		return *m.EventCounter
	}
	return 0
}

func (m *CMsgHalloween_Merasmus2012) GetTimeSubmitted() uint32 {
	if m != nil && m.TimeSubmitted != nil {
		return *m.TimeSubmitted
	}
	return 0
}

func (m *CMsgHalloween_Merasmus2012) GetIsValveServer() bool {
	if m != nil && m.IsValveServer != nil {
		return *m.IsValveServer
	}
	return false
}

func (m *CMsgHalloween_Merasmus2012) GetBossLevel() uint32 {
	if m != nil && m.BossLevel != nil {
		return *m.BossLevel
	}
	return 0
}

func (m *CMsgHalloween_Merasmus2012) GetSpawnedHealth() uint32 {
	if m != nil && m.SpawnedHealth != nil {
		return *m.SpawnedHealth
	}
	return 0
}

func (m *CMsgHalloween_Merasmus2012) GetRemainingHealth() uint32 {
	if m != nil && m.RemainingHealth != nil {
		return *m.RemainingHealth
	}
	return 0
}

func (m *CMsgHalloween_Merasmus2012) GetLifeTime() uint32 {
	if m != nil && m.LifeTime != nil {
		return *m.LifeTime
	}
	return 0
}

func (m *CMsgHalloween_Merasmus2012) GetBombKills() uint32 {
	if m != nil && m.BombKills != nil {
		return *m.BombKills
	}
	return 0
}

func (m *CMsgHalloween_Merasmus2012) GetStaffKills() uint32 {
	if m != nil && m.StaffKills != nil {
		return *m.StaffKills
	}
	return 0
}

func (m *CMsgHalloween_Merasmus2012) GetPvpKills() uint32 {
	if m != nil && m.PvpKills != nil {
		return *m.PvpKills
	}
	return 0
}

func (m *CMsgHalloween_Merasmus2012) GetProphuntTime1() uint32 {
	if m != nil && m.ProphuntTime1 != nil {
		return *m.ProphuntTime1
	}
	return 0
}

func (m *CMsgHalloween_Merasmus2012) GetProphuntTime2() uint32 {
	if m != nil && m.ProphuntTime2 != nil {
		return *m.ProphuntTime2
	}
	return 0
}

func (m *CMsgHalloween_Merasmus2012) GetDmgScout() uint32 {
	if m != nil && m.DmgScout != nil {
		return *m.DmgScout
	}
	return 0
}

func (m *CMsgHalloween_Merasmus2012) GetDmgSniper() uint32 {
	if m != nil && m.DmgSniper != nil {
		return *m.DmgSniper
	}
	return 0
}

func (m *CMsgHalloween_Merasmus2012) GetDmgSoldier() uint32 {
	if m != nil && m.DmgSoldier != nil {
		return *m.DmgSoldier
	}
	return 0
}

func (m *CMsgHalloween_Merasmus2012) GetDmgDemo() uint32 {
	if m != nil && m.DmgDemo != nil {
		return *m.DmgDemo
	}
	return 0
}

func (m *CMsgHalloween_Merasmus2012) GetDmgMedic() uint32 {
	if m != nil && m.DmgMedic != nil {
		return *m.DmgMedic
	}
	return 0
}

func (m *CMsgHalloween_Merasmus2012) GetDmgHeavy() uint32 {
	if m != nil && m.DmgHeavy != nil {
		return *m.DmgHeavy
	}
	return 0
}

func (m *CMsgHalloween_Merasmus2012) GetDmgPyro() uint32 {
	if m != nil && m.DmgPyro != nil {
		return *m.DmgPyro
	}
	return 0
}

func (m *CMsgHalloween_Merasmus2012) GetDmgSpy() uint32 {
	if m != nil && m.DmgSpy != nil {
		return *m.DmgSpy
	}
	return 0
}

func (m *CMsgHalloween_Merasmus2012) GetDmgEngineer() uint32 {
	if m != nil && m.DmgEngineer != nil {
		return *m.DmgEngineer
	}
	return 0
}

func (m *CMsgHalloween_Merasmus2012) GetScoutCount() uint32 {
	if m != nil && m.ScoutCount != nil {
		return *m.ScoutCount
	}
	return 0
}

func (m *CMsgHalloween_Merasmus2012) GetSniperCount() uint32 {
	if m != nil && m.SniperCount != nil {
		return *m.SniperCount
	}
	return 0
}

func (m *CMsgHalloween_Merasmus2012) GetSoliderCount() uint32 {
	if m != nil && m.SoliderCount != nil {
		return *m.SoliderCount
	}
	return 0
}

func (m *CMsgHalloween_Merasmus2012) GetDemoCount() uint32 {
	if m != nil && m.DemoCount != nil {
		return *m.DemoCount
	}
	return 0
}

func (m *CMsgHalloween_Merasmus2012) GetMedicCount() uint32 {
	if m != nil && m.MedicCount != nil {
		return *m.MedicCount
	}
	return 0
}

func (m *CMsgHalloween_Merasmus2012) GetHeavyCount() uint32 {
	if m != nil && m.HeavyCount != nil {
		return *m.HeavyCount
	}
	return 0
}

func (m *CMsgHalloween_Merasmus2012) GetPyroCount() uint32 {
	if m != nil && m.PyroCount != nil {
		return *m.PyroCount
	}
	return 0
}

func (m *CMsgHalloween_Merasmus2012) GetSpyCount() uint32 {
	if m != nil && m.SpyCount != nil {
		return *m.SpyCount
	}
	return 0
}

func (m *CMsgHalloween_Merasmus2012) GetEngineerCount() uint32 {
	if m != nil && m.EngineerCount != nil {
		return *m.EngineerCount
	}
	return 0
}

type CMsgUpdateHalloweenMerasmusLootLevel struct {
	Players          []*CMsgUpdateHalloweenMerasmusLootLevel_Player `protobuf:"bytes,1,rep,name=players" json:"players,omitempty"`
	MerasmusLevel    *uint32                                        `protobuf:"varint,2,opt,name=merasmus_level,json=merasmusLevel" json:"merasmus_level,omitempty"`
	XXX_unrecognized []byte                                         `json:"-"`
}

func (m *CMsgUpdateHalloweenMerasmusLootLevel) Reset()         { *m = CMsgUpdateHalloweenMerasmusLootLevel{} }
func (m *CMsgUpdateHalloweenMerasmusLootLevel) String() string { return proto.CompactTextString(m) }
func (*CMsgUpdateHalloweenMerasmusLootLevel) ProtoMessage()    {}
func (*CMsgUpdateHalloweenMerasmusLootLevel) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{98}
}

func (m *CMsgUpdateHalloweenMerasmusLootLevel) GetPlayers() []*CMsgUpdateHalloweenMerasmusLootLevel_Player {
	if m != nil {
		return m.Players
	}
	return nil
}

func (m *CMsgUpdateHalloweenMerasmusLootLevel) GetMerasmusLevel() uint32 {
	if m != nil && m.MerasmusLevel != nil {
		return *m.MerasmusLevel
	}
	return 0
}

type CMsgUpdateHalloweenMerasmusLootLevel_Player struct {
	SteamId          *uint64 `protobuf:"fixed64,1,opt,name=steam_id,json=steamId" json:"steam_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgUpdateHalloweenMerasmusLootLevel_Player) Reset() {
	*m = CMsgUpdateHalloweenMerasmusLootLevel_Player{}
}
func (m *CMsgUpdateHalloweenMerasmusLootLevel_Player) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgUpdateHalloweenMerasmusLootLevel_Player) ProtoMessage() {}
func (*CMsgUpdateHalloweenMerasmusLootLevel_Player) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{98, 0}
}

func (m *CMsgUpdateHalloweenMerasmusLootLevel_Player) GetSteamId() uint64 {
	if m != nil && m.SteamId != nil {
		return *m.SteamId
	}
	return 0
}

type CAttribute_String struct {
	Value            *string `protobuf:"bytes,1,opt,name=value" json:"value,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CAttribute_String) Reset()                    { *m = CAttribute_String{} }
func (m *CAttribute_String) String() string            { return proto.CompactTextString(m) }
func (*CAttribute_String) ProtoMessage()               {}
func (*CAttribute_String) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{99} }

func (m *CAttribute_String) GetValue() string {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return ""
}

type CAttribute_DynamicRecipeComponent struct {
	DefIndex         *uint32 `protobuf:"varint,1,opt,name=def_index,json=defIndex" json:"def_index,omitempty"`
	ItemQuality      *uint32 `protobuf:"varint,2,opt,name=item_quality,json=itemQuality" json:"item_quality,omitempty"`
	ComponentFlags   *uint32 `protobuf:"varint,3,opt,name=component_flags,json=componentFlags" json:"component_flags,omitempty"`
	AttributesString *string `protobuf:"bytes,4,opt,name=attributes_string,json=attributesString" json:"attributes_string,omitempty"`
	NumRequired      *uint32 `protobuf:"varint,5,opt,name=num_required,json=numRequired" json:"num_required,omitempty"`
	NumFulfilled     *uint32 `protobuf:"varint,6,opt,name=num_fulfilled,json=numFulfilled" json:"num_fulfilled,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CAttribute_DynamicRecipeComponent) Reset()         { *m = CAttribute_DynamicRecipeComponent{} }
func (m *CAttribute_DynamicRecipeComponent) String() string { return proto.CompactTextString(m) }
func (*CAttribute_DynamicRecipeComponent) ProtoMessage()    {}
func (*CAttribute_DynamicRecipeComponent) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{100}
}

func (m *CAttribute_DynamicRecipeComponent) GetDefIndex() uint32 {
	if m != nil && m.DefIndex != nil {
		return *m.DefIndex
	}
	return 0
}

func (m *CAttribute_DynamicRecipeComponent) GetItemQuality() uint32 {
	if m != nil && m.ItemQuality != nil {
		return *m.ItemQuality
	}
	return 0
}

func (m *CAttribute_DynamicRecipeComponent) GetComponentFlags() uint32 {
	if m != nil && m.ComponentFlags != nil {
		return *m.ComponentFlags
	}
	return 0
}

func (m *CAttribute_DynamicRecipeComponent) GetAttributesString() string {
	if m != nil && m.AttributesString != nil {
		return *m.AttributesString
	}
	return ""
}

func (m *CAttribute_DynamicRecipeComponent) GetNumRequired() uint32 {
	if m != nil && m.NumRequired != nil {
		return *m.NumRequired
	}
	return 0
}

func (m *CAttribute_DynamicRecipeComponent) GetNumFulfilled() uint32 {
	if m != nil && m.NumFulfilled != nil {
		return *m.NumFulfilled
	}
	return 0
}

type CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT struct {
	DefIndex         *uint32 `protobuf:"varint,1,opt,name=def_index,json=defIndex" json:"def_index,omitempty"`
	ItemDef          *uint32 `protobuf:"varint,2,opt,name=item_def,json=itemDef" json:"item_def,omitempty"`
	ItemQuality      *uint32 `protobuf:"varint,3,opt,name=item_quality,json=itemQuality" json:"item_quality,omitempty"`
	ComponentFlags   *uint32 `protobuf:"varint,4,opt,name=component_flags,json=componentFlags" json:"component_flags,omitempty"`
	ItemFlags        *uint32 `protobuf:"varint,5,opt,name=item_flags,json=itemFlags" json:"item_flags,omitempty"`
	AttributesString *string `protobuf:"bytes,6,opt,name=attributes_string,json=attributesString" json:"attributes_string,omitempty"`
	NumRequired      *uint32 `protobuf:"varint,7,opt,name=num_required,json=numRequired" json:"num_required,omitempty"`
	ItemCount        *uint32 `protobuf:"varint,8,opt,name=item_count,json=itemCount" json:"item_count,omitempty"`
	NumFulfilled     *uint32 `protobuf:"varint,9,opt,name=num_fulfilled,json=numFulfilled" json:"num_fulfilled,omitempty"`
	ItemsFulfilled   *uint32 `protobuf:"varint,10,opt,name=items_fulfilled,json=itemsFulfilled" json:"items_fulfilled,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT) Reset() {
	*m = CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT{}
}
func (m *CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT) String() string {
	return proto.CompactTextString(m)
}
func (*CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT) ProtoMessage() {}
func (*CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{101}
}

func (m *CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT) GetDefIndex() uint32 {
	if m != nil && m.DefIndex != nil {
		return *m.DefIndex
	}
	return 0
}

func (m *CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT) GetItemDef() uint32 {
	if m != nil && m.ItemDef != nil {
		return *m.ItemDef
	}
	return 0
}

func (m *CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT) GetItemQuality() uint32 {
	if m != nil && m.ItemQuality != nil {
		return *m.ItemQuality
	}
	return 0
}

func (m *CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT) GetComponentFlags() uint32 {
	if m != nil && m.ComponentFlags != nil {
		return *m.ComponentFlags
	}
	return 0
}

func (m *CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT) GetItemFlags() uint32 {
	if m != nil && m.ItemFlags != nil {
		return *m.ItemFlags
	}
	return 0
}

func (m *CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT) GetAttributesString() string {
	if m != nil && m.AttributesString != nil {
		return *m.AttributesString
	}
	return ""
}

func (m *CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT) GetNumRequired() uint32 {
	if m != nil && m.NumRequired != nil {
		return *m.NumRequired
	}
	return 0
}

func (m *CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT) GetItemCount() uint32 {
	if m != nil && m.ItemCount != nil {
		return *m.ItemCount
	}
	return 0
}

func (m *CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT) GetNumFulfilled() uint32 {
	if m != nil && m.NumFulfilled != nil {
		return *m.NumFulfilled
	}
	return 0
}

func (m *CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT) GetItemsFulfilled() uint32 {
	if m != nil && m.ItemsFulfilled != nil {
		return *m.ItemsFulfilled
	}
	return 0
}

type CAttribute_ItemSlotCriteria struct {
	Tags             *string `protobuf:"bytes,1,opt,name=tags" json:"tags,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CAttribute_ItemSlotCriteria) Reset()                    { *m = CAttribute_ItemSlotCriteria{} }
func (m *CAttribute_ItemSlotCriteria) String() string            { return proto.CompactTextString(m) }
func (*CAttribute_ItemSlotCriteria) ProtoMessage()               {}
func (*CAttribute_ItemSlotCriteria) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{102} }

func (m *CAttribute_ItemSlotCriteria) GetTags() string {
	if m != nil && m.Tags != nil {
		return *m.Tags
	}
	return ""
}

type CMsgSetItemSlotAttribute struct {
	ItemId             *uint64 `protobuf:"varint,1,opt,name=item_id,json=itemId" json:"item_id,omitempty"`
	SlotItemOriginalId *uint64 `protobuf:"varint,2,opt,name=slot_item_original_id,json=slotItemOriginalId" json:"slot_item_original_id,omitempty"`
	SlotIndex          *uint32 `protobuf:"varint,3,opt,name=slot_index,json=slotIndex" json:"slot_index,omitempty"`
	XXX_unrecognized   []byte  `json:"-"`
}

func (m *CMsgSetItemSlotAttribute) Reset()                    { *m = CMsgSetItemSlotAttribute{} }
func (m *CMsgSetItemSlotAttribute) String() string            { return proto.CompactTextString(m) }
func (*CMsgSetItemSlotAttribute) ProtoMessage()               {}
func (*CMsgSetItemSlotAttribute) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{103} }

func (m *CMsgSetItemSlotAttribute) GetItemId() uint64 {
	if m != nil && m.ItemId != nil {
		return *m.ItemId
	}
	return 0
}

func (m *CMsgSetItemSlotAttribute) GetSlotItemOriginalId() uint64 {
	if m != nil && m.SlotItemOriginalId != nil {
		return *m.SlotItemOriginalId
	}
	return 0
}

func (m *CMsgSetItemSlotAttribute) GetSlotIndex() uint32 {
	if m != nil && m.SlotIndex != nil {
		return *m.SlotIndex
	}
	return 0
}

type CSOWarData struct {
	AccountId        *uint32 `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	WarId            *uint32 `protobuf:"varint,2,opt,name=war_id,json=warId" json:"war_id,omitempty"`
	Affiliation      *uint32 `protobuf:"varint,3,opt,name=affiliation" json:"affiliation,omitempty"`
	PointsScored     *uint32 `protobuf:"varint,4,opt,name=points_scored,json=pointsScored" json:"points_scored,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CSOWarData) Reset()                    { *m = CSOWarData{} }
func (m *CSOWarData) String() string            { return proto.CompactTextString(m) }
func (*CSOWarData) ProtoMessage()               {}
func (*CSOWarData) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{104} }

func (m *CSOWarData) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *CSOWarData) GetWarId() uint32 {
	if m != nil && m.WarId != nil {
		return *m.WarId
	}
	return 0
}

func (m *CSOWarData) GetAffiliation() uint32 {
	if m != nil && m.Affiliation != nil {
		return *m.Affiliation
	}
	return 0
}

func (m *CSOWarData) GetPointsScored() uint32 {
	if m != nil && m.PointsScored != nil {
		return *m.PointsScored
	}
	return 0
}

type CGCMsgGC_War_IndividualUpdate struct {
	SteamId          *uint64 `protobuf:"fixed64,1,opt,name=steam_id,json=steamId" json:"steam_id,omitempty"`
	WarId            *uint32 `protobuf:"varint,2,opt,name=war_id,json=warId" json:"war_id,omitempty"`
	Score            *uint32 `protobuf:"varint,3,opt,name=score" json:"score,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CGCMsgGC_War_IndividualUpdate) Reset()                    { *m = CGCMsgGC_War_IndividualUpdate{} }
func (m *CGCMsgGC_War_IndividualUpdate) String() string            { return proto.CompactTextString(m) }
func (*CGCMsgGC_War_IndividualUpdate) ProtoMessage()               {}
func (*CGCMsgGC_War_IndividualUpdate) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{105} }

func (m *CGCMsgGC_War_IndividualUpdate) GetSteamId() uint64 {
	if m != nil && m.SteamId != nil {
		return *m.SteamId
	}
	return 0
}

func (m *CGCMsgGC_War_IndividualUpdate) GetWarId() uint32 {
	if m != nil && m.WarId != nil {
		return *m.WarId
	}
	return 0
}

func (m *CGCMsgGC_War_IndividualUpdate) GetScore() uint32 {
	if m != nil && m.Score != nil {
		return *m.Score
	}
	return 0
}

type CGCMsgGC_War_JoinWar struct {
	Affiliation      *uint32 `protobuf:"varint,1,opt,name=affiliation" json:"affiliation,omitempty"`
	WarId            *uint32 `protobuf:"varint,2,opt,name=war_id,json=warId" json:"war_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CGCMsgGC_War_JoinWar) Reset()                    { *m = CGCMsgGC_War_JoinWar{} }
func (m *CGCMsgGC_War_JoinWar) String() string            { return proto.CompactTextString(m) }
func (*CGCMsgGC_War_JoinWar) ProtoMessage()               {}
func (*CGCMsgGC_War_JoinWar) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{106} }

func (m *CGCMsgGC_War_JoinWar) GetAffiliation() uint32 {
	if m != nil && m.Affiliation != nil {
		return *m.Affiliation
	}
	return 0
}

func (m *CGCMsgGC_War_JoinWar) GetWarId() uint32 {
	if m != nil && m.WarId != nil {
		return *m.WarId
	}
	return 0
}

type CGCMsgGC_War_RequestGlobalStats struct {
	WarId            *uint32 `protobuf:"varint,1,opt,name=war_id,json=warId" json:"war_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CGCMsgGC_War_RequestGlobalStats) Reset()         { *m = CGCMsgGC_War_RequestGlobalStats{} }
func (m *CGCMsgGC_War_RequestGlobalStats) String() string { return proto.CompactTextString(m) }
func (*CGCMsgGC_War_RequestGlobalStats) ProtoMessage()    {}
func (*CGCMsgGC_War_RequestGlobalStats) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{107}
}

func (m *CGCMsgGC_War_RequestGlobalStats) GetWarId() uint32 {
	if m != nil && m.WarId != nil {
		return *m.WarId
	}
	return 0
}

type CGCMsgGC_War_GlobalStatsResponse struct {
	SideScores       []*CGCMsgGC_War_GlobalStatsResponse_SideScore `protobuf:"bytes,1,rep,name=side_scores,json=sideScores" json:"side_scores,omitempty"`
	WarId            *uint32                                       `protobuf:"varint,2,opt,name=war_id,json=warId" json:"war_id,omitempty"`
	XXX_unrecognized []byte                                        `json:"-"`
}

func (m *CGCMsgGC_War_GlobalStatsResponse) Reset()         { *m = CGCMsgGC_War_GlobalStatsResponse{} }
func (m *CGCMsgGC_War_GlobalStatsResponse) String() string { return proto.CompactTextString(m) }
func (*CGCMsgGC_War_GlobalStatsResponse) ProtoMessage()    {}
func (*CGCMsgGC_War_GlobalStatsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{108}
}

func (m *CGCMsgGC_War_GlobalStatsResponse) GetSideScores() []*CGCMsgGC_War_GlobalStatsResponse_SideScore {
	if m != nil {
		return m.SideScores
	}
	return nil
}

func (m *CGCMsgGC_War_GlobalStatsResponse) GetWarId() uint32 {
	if m != nil && m.WarId != nil {
		return *m.WarId
	}
	return 0
}

type CGCMsgGC_War_GlobalStatsResponse_SideScore struct {
	Side             *uint32 `protobuf:"varint,1,opt,name=side" json:"side,omitempty"`
	Score            *uint64 `protobuf:"varint,2,opt,name=score" json:"score,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CGCMsgGC_War_GlobalStatsResponse_SideScore) Reset() {
	*m = CGCMsgGC_War_GlobalStatsResponse_SideScore{}
}
func (m *CGCMsgGC_War_GlobalStatsResponse_SideScore) String() string {
	return proto.CompactTextString(m)
}
func (*CGCMsgGC_War_GlobalStatsResponse_SideScore) ProtoMessage() {}
func (*CGCMsgGC_War_GlobalStatsResponse_SideScore) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{108, 0}
}

func (m *CGCMsgGC_War_GlobalStatsResponse_SideScore) GetSide() uint32 {
	if m != nil && m.Side != nil {
		return *m.Side
	}
	return 0
}

func (m *CGCMsgGC_War_GlobalStatsResponse_SideScore) GetScore() uint64 {
	if m != nil && m.Score != nil {
		return *m.Score
	}
	return 0
}

type CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate struct {
	Score            *uint32 `protobuf:"varint,2,opt,name=score" json:"score,omitempty"`
	Type             *uint32 `protobuf:"varint,3,opt,name=type" json:"type,omitempty"`
	ScoreId          []byte  `protobuf:"bytes,4,opt,name=score_id,json=scoreId" json:"score_id,omitempty"`
	ScoreCheck       *uint32 `protobuf:"varint,5,opt,name=score_check,json=scoreCheck" json:"score_check,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate) Reset() {
	*m = CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate{}
}
func (m *CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate) String() string {
	return proto.CompactTextString(m)
}
func (*CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate) ProtoMessage() {}
func (*CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{109}
}

func (m *CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate) GetScore() uint32 {
	if m != nil && m.Score != nil {
		return *m.Score
	}
	return 0
}

func (m *CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate) GetType() uint32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

func (m *CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate) GetScoreId() []byte {
	if m != nil {
		return m.ScoreId
	}
	return nil
}

func (m *CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate) GetScoreCheck() uint32 {
	if m != nil && m.ScoreCheck != nil {
		return *m.ScoreCheck
	}
	return 0
}

type CAttribute_WorldItemPlacement struct {
	OriginalItemId   *uint64  `protobuf:"varint,1,opt,name=original_item_id,json=originalItemId" json:"original_item_id,omitempty"`
	PosX             *float32 `protobuf:"fixed32,2,opt,name=pos_x,json=posX" json:"pos_x,omitempty"`
	PosY             *float32 `protobuf:"fixed32,3,opt,name=pos_y,json=posY" json:"pos_y,omitempty"`
	PosZ             *float32 `protobuf:"fixed32,4,opt,name=pos_z,json=posZ" json:"pos_z,omitempty"`
	AngX             *float32 `protobuf:"fixed32,5,opt,name=ang_x,json=angX" json:"ang_x,omitempty"`
	AngY             *float32 `protobuf:"fixed32,6,opt,name=ang_y,json=angY" json:"ang_y,omitempty"`
	AngZ             *float32 `protobuf:"fixed32,7,opt,name=ang_z,json=angZ" json:"ang_z,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CAttribute_WorldItemPlacement) Reset()                    { *m = CAttribute_WorldItemPlacement{} }
func (m *CAttribute_WorldItemPlacement) String() string            { return proto.CompactTextString(m) }
func (*CAttribute_WorldItemPlacement) ProtoMessage()               {}
func (*CAttribute_WorldItemPlacement) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{110} }

func (m *CAttribute_WorldItemPlacement) GetOriginalItemId() uint64 {
	if m != nil && m.OriginalItemId != nil {
		return *m.OriginalItemId
	}
	return 0
}

func (m *CAttribute_WorldItemPlacement) GetPosX() float32 {
	if m != nil && m.PosX != nil {
		return *m.PosX
	}
	return 0
}

func (m *CAttribute_WorldItemPlacement) GetPosY() float32 {
	if m != nil && m.PosY != nil {
		return *m.PosY
	}
	return 0
}

func (m *CAttribute_WorldItemPlacement) GetPosZ() float32 {
	if m != nil && m.PosZ != nil {
		return *m.PosZ
	}
	return 0
}

func (m *CAttribute_WorldItemPlacement) GetAngX() float32 {
	if m != nil && m.AngX != nil {
		return *m.AngX
	}
	return 0
}

func (m *CAttribute_WorldItemPlacement) GetAngY() float32 {
	if m != nil && m.AngY != nil {
		return *m.AngY
	}
	return 0
}

func (m *CAttribute_WorldItemPlacement) GetAngZ() float32 {
	if m != nil && m.AngZ != nil {
		return *m.AngZ
	}
	return 0
}

type CGCMsg_WorldItemPlacement_Update struct {
	OriginalItemId   *uint64  `protobuf:"varint,1,opt,name=original_item_id,json=originalItemId" json:"original_item_id,omitempty"`
	PosX             *float32 `protobuf:"fixed32,2,opt,name=pos_x,json=posX" json:"pos_x,omitempty"`
	PosY             *float32 `protobuf:"fixed32,3,opt,name=pos_y,json=posY" json:"pos_y,omitempty"`
	PosZ             *float32 `protobuf:"fixed32,4,opt,name=pos_z,json=posZ" json:"pos_z,omitempty"`
	AngX             *float32 `protobuf:"fixed32,5,opt,name=ang_x,json=angX" json:"ang_x,omitempty"`
	AngY             *float32 `protobuf:"fixed32,6,opt,name=ang_y,json=angY" json:"ang_y,omitempty"`
	AngZ             *float32 `protobuf:"fixed32,7,opt,name=ang_z,json=angZ" json:"ang_z,omitempty"`
	ForceRemoveAll   *bool    `protobuf:"varint,8,opt,name=force_remove_all,json=forceRemoveAll" json:"force_remove_all,omitempty"`
	AttribName       *string  `protobuf:"bytes,9,opt,name=attrib_name,json=attribName" json:"attrib_name,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CGCMsg_WorldItemPlacement_Update) Reset()         { *m = CGCMsg_WorldItemPlacement_Update{} }
func (m *CGCMsg_WorldItemPlacement_Update) String() string { return proto.CompactTextString(m) }
func (*CGCMsg_WorldItemPlacement_Update) ProtoMessage()    {}
func (*CGCMsg_WorldItemPlacement_Update) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{111}
}

func (m *CGCMsg_WorldItemPlacement_Update) GetOriginalItemId() uint64 {
	if m != nil && m.OriginalItemId != nil {
		return *m.OriginalItemId
	}
	return 0
}

func (m *CGCMsg_WorldItemPlacement_Update) GetPosX() float32 {
	if m != nil && m.PosX != nil {
		return *m.PosX
	}
	return 0
}

func (m *CGCMsg_WorldItemPlacement_Update) GetPosY() float32 {
	if m != nil && m.PosY != nil {
		return *m.PosY
	}
	return 0
}

func (m *CGCMsg_WorldItemPlacement_Update) GetPosZ() float32 {
	if m != nil && m.PosZ != nil {
		return *m.PosZ
	}
	return 0
}

func (m *CGCMsg_WorldItemPlacement_Update) GetAngX() float32 {
	if m != nil && m.AngX != nil {
		return *m.AngX
	}
	return 0
}

func (m *CGCMsg_WorldItemPlacement_Update) GetAngY() float32 {
	if m != nil && m.AngY != nil {
		return *m.AngY
	}
	return 0
}

func (m *CGCMsg_WorldItemPlacement_Update) GetAngZ() float32 {
	if m != nil && m.AngZ != nil {
		return *m.AngZ
	}
	return 0
}

func (m *CGCMsg_WorldItemPlacement_Update) GetForceRemoveAll() bool {
	if m != nil && m.ForceRemoveAll != nil {
		return *m.ForceRemoveAll
	}
	return false
}

func (m *CGCMsg_WorldItemPlacement_Update) GetAttribName() string {
	if m != nil && m.AttribName != nil {
		return *m.AttribName
	}
	return ""
}

type CMsgAcknowledgeXP struct {
	MatchGroup          *int32  `protobuf:"varint,1,opt,name=match_group,json=matchGroup" json:"match_group,omitempty"`
	PredictedExperience *uint32 `protobuf:"varint,2,opt,name=predicted_experience,json=predictedExperience" json:"predicted_experience,omitempty"`
	XXX_unrecognized    []byte  `json:"-"`
}

func (m *CMsgAcknowledgeXP) Reset()                    { *m = CMsgAcknowledgeXP{} }
func (m *CMsgAcknowledgeXP) String() string            { return proto.CompactTextString(m) }
func (*CMsgAcknowledgeXP) ProtoMessage()               {}
func (*CMsgAcknowledgeXP) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{112} }

func (m *CMsgAcknowledgeXP) GetMatchGroup() int32 {
	if m != nil && m.MatchGroup != nil {
		return *m.MatchGroup
	}
	return 0
}

func (m *CMsgAcknowledgeXP) GetPredictedExperience() uint32 {
	if m != nil && m.PredictedExperience != nil {
		return *m.PredictedExperience
	}
	return 0
}

type CMsgTFXPSource struct {
	Type             *CMsgTFXPSource_XPSourceType `protobuf:"varint,1,opt,name=type,enum=CMsgTFXPSource_XPSourceType,def=0" json:"type,omitempty"`
	Amount           *int32                       `protobuf:"varint,2,opt,name=amount" json:"amount,omitempty"`
	MatchGroup       *int32                       `protobuf:"varint,3,opt,name=match_group,json=matchGroup" json:"match_group,omitempty"`
	AccountId        *uint32                      `protobuf:"varint,4,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	MatchId          *uint64                      `protobuf:"varint,5,opt,name=match_id,json=matchId" json:"match_id,omitempty"`
	XXX_unrecognized []byte                       `json:"-"`
}

func (m *CMsgTFXPSource) Reset()                    { *m = CMsgTFXPSource{} }
func (m *CMsgTFXPSource) String() string            { return proto.CompactTextString(m) }
func (*CMsgTFXPSource) ProtoMessage()               {}
func (*CMsgTFXPSource) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{113} }

const Default_CMsgTFXPSource_Type CMsgTFXPSource_XPSourceType = CMsgTFXPSource_SOURCE_SCORE

func (m *CMsgTFXPSource) GetType() CMsgTFXPSource_XPSourceType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return Default_CMsgTFXPSource_Type
}

func (m *CMsgTFXPSource) GetAmount() int32 {
	if m != nil && m.Amount != nil {
		return *m.Amount
	}
	return 0
}

func (m *CMsgTFXPSource) GetMatchGroup() int32 {
	if m != nil && m.MatchGroup != nil {
		return *m.MatchGroup
	}
	return 0
}

func (m *CMsgTFXPSource) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *CMsgTFXPSource) GetMatchId() uint64 {
	if m != nil && m.MatchId != nil {
		return *m.MatchId
	}
	return 0
}

type CMsgTFXPSourceBreakdown struct {
	Sources          []*CMsgTFXPSource `protobuf:"bytes,1,rep,name=sources" json:"sources,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *CMsgTFXPSourceBreakdown) Reset()                    { *m = CMsgTFXPSourceBreakdown{} }
func (m *CMsgTFXPSourceBreakdown) String() string            { return proto.CompactTextString(m) }
func (*CMsgTFXPSourceBreakdown) ProtoMessage()               {}
func (*CMsgTFXPSourceBreakdown) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{114} }

func (m *CMsgTFXPSourceBreakdown) GetSources() []*CMsgTFXPSource {
	if m != nil {
		return m.Sources
	}
	return nil
}

type CMsgTFClientInit struct {
	ClientVersion    *uint32 `protobuf:"varint,1,opt,name=client_version,json=clientVersion" json:"client_version,omitempty"`
	Language         *int32  `protobuf:"varint,2,opt,name=language" json:"language,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgTFClientInit) Reset()                    { *m = CMsgTFClientInit{} }
func (m *CMsgTFClientInit) String() string            { return proto.CompactTextString(m) }
func (*CMsgTFClientInit) ProtoMessage()               {}
func (*CMsgTFClientInit) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{115} }

func (m *CMsgTFClientInit) GetClientVersion() uint32 {
	if m != nil && m.ClientVersion != nil {
		return *m.ClientVersion
	}
	return 0
}

func (m *CMsgTFClientInit) GetLanguage() int32 {
	if m != nil && m.Language != nil {
		return *m.Language
	}
	return 0
}

type CMsgGCNotification struct {
	NotificationId     *uint64                              `protobuf:"varint,1,opt,name=notification_id,json=notificationId" json:"notification_id,omitempty"`
	AccountId          *uint32                              `protobuf:"varint,2,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	ExpirationTime     *uint32                              `protobuf:"fixed32,3,opt,name=expiration_time,json=expirationTime" json:"expiration_time,omitempty"`
	Type               *CMsgGCNotification_NotificationType `protobuf:"varint,4,opt,name=type,enum=CMsgGCNotification_NotificationType,def=1" json:"type,omitempty"`
	NotificationString *string                              `protobuf:"bytes,5,opt,name=notification_string,json=notificationString" json:"notification_string,omitempty"`
	XXX_unrecognized   []byte                               `json:"-"`
}

func (m *CMsgGCNotification) Reset()                    { *m = CMsgGCNotification{} }
func (m *CMsgGCNotification) String() string            { return proto.CompactTextString(m) }
func (*CMsgGCNotification) ProtoMessage()               {}
func (*CMsgGCNotification) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{116} }

const Default_CMsgGCNotification_Type CMsgGCNotification_NotificationType = CMsgGCNotification_NOTIFICATION_CUSTOM_STRING

func (m *CMsgGCNotification) GetNotificationId() uint64 {
	if m != nil && m.NotificationId != nil {
		return *m.NotificationId
	}
	return 0
}

func (m *CMsgGCNotification) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *CMsgGCNotification) GetExpirationTime() uint32 {
	if m != nil && m.ExpirationTime != nil {
		return *m.ExpirationTime
	}
	return 0
}

func (m *CMsgGCNotification) GetType() CMsgGCNotification_NotificationType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return Default_CMsgGCNotification_Type
}

func (m *CMsgGCNotification) GetNotificationString() string {
	if m != nil && m.NotificationString != nil {
		return *m.NotificationString
	}
	return ""
}

type CMsgGCNotificationQueue struct {
	Notifications    []*CMsgGCNotification `protobuf:"bytes,1,rep,name=notifications" json:"notifications,omitempty"`
	XXX_unrecognized []byte                `json:"-"`
}

func (m *CMsgGCNotificationQueue) Reset()                    { *m = CMsgGCNotificationQueue{} }
func (m *CMsgGCNotificationQueue) String() string            { return proto.CompactTextString(m) }
func (*CMsgGCNotificationQueue) ProtoMessage()               {}
func (*CMsgGCNotificationQueue) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{117} }

func (m *CMsgGCNotificationQueue) GetNotifications() []*CMsgGCNotification {
	if m != nil {
		return m.Notifications
	}
	return nil
}

type CMsgNotificationAcknowledge struct {
	AccountId        *uint32 `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	NotificationId   *uint64 `protobuf:"varint,2,opt,name=notification_id,json=notificationId" json:"notification_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgNotificationAcknowledge) Reset()                    { *m = CMsgNotificationAcknowledge{} }
func (m *CMsgNotificationAcknowledge) String() string            { return proto.CompactTextString(m) }
func (*CMsgNotificationAcknowledge) ProtoMessage()               {}
func (*CMsgNotificationAcknowledge) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{118} }

func (m *CMsgNotificationAcknowledge) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *CMsgNotificationAcknowledge) GetNotificationId() uint64 {
	if m != nil && m.NotificationId != nil {
		return *m.NotificationId
	}
	return 0
}

type CMsgNotificationAcknowledgeReply struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMsgNotificationAcknowledgeReply) Reset()         { *m = CMsgNotificationAcknowledgeReply{} }
func (m *CMsgNotificationAcknowledgeReply) String() string { return proto.CompactTextString(m) }
func (*CMsgNotificationAcknowledgeReply) ProtoMessage()    {}
func (*CMsgNotificationAcknowledgeReply) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{119}
}

type CMsgGC_Match_Result struct {
	MatchId          *uint64                       `protobuf:"varint,1,opt,name=match_id,json=matchId" json:"match_id,omitempty"`
	MatchGroup       *int32                        `protobuf:"varint,2,opt,name=match_group,json=matchGroup" json:"match_group,omitempty"`
	Status           *CMsgGC_Match_Result_Status   `protobuf:"varint,3,opt,name=status,enum=CMsgGC_Match_Result_Status,def=0" json:"status,omitempty"`
	Duration         *uint32                       `protobuf:"varint,4,opt,name=duration" json:"duration,omitempty"`
	RedScore         *uint32                       `protobuf:"varint,5,opt,name=red_score,json=redScore" json:"red_score,omitempty"`
	BlueScore        *uint32                       `protobuf:"varint,6,opt,name=blue_score,json=blueScore" json:"blue_score,omitempty"`
	WinningTeam      *uint32                       `protobuf:"varint,7,opt,name=winning_team,json=winningTeam" json:"winning_team,omitempty"`
	MapIndex         *uint32                       `protobuf:"varint,8,opt,name=map_index,json=mapIndex" json:"map_index,omitempty"`
	GameType         *uint32                       `protobuf:"varint,9,opt,name=game_type,json=gameType,def=0" json:"game_type,omitempty"`
	Players          []*CMsgGC_Match_Result_Player `protobuf:"bytes,10,rep,name=players" json:"players,omitempty"`
	RedSkillrating   *uint32                       `protobuf:"varint,11,opt,name=red_skillrating,json=redSkillrating" json:"red_skillrating,omitempty"`
	BlueSkillrating  *uint32                       `protobuf:"varint,12,opt,name=blue_skillrating,json=blueSkillrating" json:"blue_skillrating,omitempty"`
	WinReason        *uint32                       `protobuf:"varint,13,opt,name=win_reason,json=winReason" json:"win_reason,omitempty"`
	Flags            *uint32                       `protobuf:"varint,14,opt,name=flags" json:"flags,omitempty"`
	ServerVersion    *uint32                       `protobuf:"varint,15,opt,name=server_version,json=serverVersion" json:"server_version,omitempty"`
	Bots             *uint32                       `protobuf:"varint,16,opt,name=bots" json:"bots,omitempty"`
	ServerCreated    *bool                         `protobuf:"varint,17,opt,name=server_created,json=serverCreated,def=0" json:"server_created,omitempty"`
	XXX_unrecognized []byte                        `json:"-"`
}

func (m *CMsgGC_Match_Result) Reset()                    { *m = CMsgGC_Match_Result{} }
func (m *CMsgGC_Match_Result) String() string            { return proto.CompactTextString(m) }
func (*CMsgGC_Match_Result) ProtoMessage()               {}
func (*CMsgGC_Match_Result) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{120} }

const Default_CMsgGC_Match_Result_Status CMsgGC_Match_Result_Status = CMsgGC_Match_Result_MATCH_SUCCEEDED
const Default_CMsgGC_Match_Result_GameType uint32 = 0
const Default_CMsgGC_Match_Result_ServerCreated bool = false

func (m *CMsgGC_Match_Result) GetMatchId() uint64 {
	if m != nil && m.MatchId != nil {
		return *m.MatchId
	}
	return 0
}

func (m *CMsgGC_Match_Result) GetMatchGroup() int32 {
	if m != nil && m.MatchGroup != nil {
		return *m.MatchGroup
	}
	return 0
}

func (m *CMsgGC_Match_Result) GetStatus() CMsgGC_Match_Result_Status {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return Default_CMsgGC_Match_Result_Status
}

func (m *CMsgGC_Match_Result) GetDuration() uint32 {
	if m != nil && m.Duration != nil {
		return *m.Duration
	}
	return 0
}

func (m *CMsgGC_Match_Result) GetRedScore() uint32 {
	if m != nil && m.RedScore != nil {
		return *m.RedScore
	}
	return 0
}

func (m *CMsgGC_Match_Result) GetBlueScore() uint32 {
	if m != nil && m.BlueScore != nil {
		return *m.BlueScore
	}
	return 0
}

func (m *CMsgGC_Match_Result) GetWinningTeam() uint32 {
	if m != nil && m.WinningTeam != nil {
		return *m.WinningTeam
	}
	return 0
}

func (m *CMsgGC_Match_Result) GetMapIndex() uint32 {
	if m != nil && m.MapIndex != nil {
		return *m.MapIndex
	}
	return 0
}

func (m *CMsgGC_Match_Result) GetGameType() uint32 {
	if m != nil && m.GameType != nil {
		return *m.GameType
	}
	return Default_CMsgGC_Match_Result_GameType
}

func (m *CMsgGC_Match_Result) GetPlayers() []*CMsgGC_Match_Result_Player {
	if m != nil {
		return m.Players
	}
	return nil
}

func (m *CMsgGC_Match_Result) GetRedSkillrating() uint32 {
	if m != nil && m.RedSkillrating != nil {
		return *m.RedSkillrating
	}
	return 0
}

func (m *CMsgGC_Match_Result) GetBlueSkillrating() uint32 {
	if m != nil && m.BlueSkillrating != nil {
		return *m.BlueSkillrating
	}
	return 0
}

func (m *CMsgGC_Match_Result) GetWinReason() uint32 {
	if m != nil && m.WinReason != nil {
		return *m.WinReason
	}
	return 0
}

func (m *CMsgGC_Match_Result) GetFlags() uint32 {
	if m != nil && m.Flags != nil {
		return *m.Flags
	}
	return 0
}

func (m *CMsgGC_Match_Result) GetServerVersion() uint32 {
	if m != nil && m.ServerVersion != nil {
		return *m.ServerVersion
	}
	return 0
}

func (m *CMsgGC_Match_Result) GetBots() uint32 {
	if m != nil && m.Bots != nil {
		return *m.Bots
	}
	return 0
}

func (m *CMsgGC_Match_Result) GetServerCreated() bool {
	if m != nil && m.ServerCreated != nil {
		return *m.ServerCreated
	}
	return Default_CMsgGC_Match_Result_ServerCreated
}

type CMsgGC_Match_Result_Player struct {
	SteamId           *uint64             `protobuf:"fixed64,1,opt,name=steam_id,json=steamId" json:"steam_id,omitempty"`
	PartyId           *uint64             `protobuf:"varint,2,opt,name=party_id,json=partyId" json:"party_id,omitempty"`
	Team              *uint32             `protobuf:"varint,3,opt,name=team" json:"team,omitempty"`
	Score             *uint32             `protobuf:"varint,4,opt,name=score" json:"score,omitempty"`
	Ping              *uint32             `protobuf:"varint,5,opt,name=ping" json:"ping,omitempty"`
	Flags             *uint32             `protobuf:"varint,6,opt,name=flags" json:"flags,omitempty"`
	Skillrating       *uint32             `protobuf:"varint,7,opt,name=skillrating" json:"skillrating,omitempty"`
	SkillratingChange *int32              `protobuf:"varint,8,opt,name=skillrating_change,json=skillratingChange" json:"skillrating_change,omitempty"`
	Rank              *uint32             `protobuf:"varint,9,opt,name=rank" json:"rank,omitempty"`
	ClassesPlayed     *uint32             `protobuf:"varint,10,opt,name=classes_played,json=classesPlayed" json:"classes_played,omitempty"`
	Kills             *uint32             `protobuf:"varint,11,opt,name=kills" json:"kills,omitempty"`
	Deaths            *uint32             `protobuf:"varint,12,opt,name=deaths" json:"deaths,omitempty"`
	Damage            *uint32             `protobuf:"varint,13,opt,name=damage" json:"damage,omitempty"`
	Healing           *uint32             `protobuf:"varint,14,opt,name=healing" json:"healing,omitempty"`
	Support           *uint32             `protobuf:"varint,15,opt,name=support" json:"support,omitempty"`
	ScoreMedal        *uint32             `protobuf:"varint,16,opt,name=score_medal,json=scoreMedal" json:"score_medal,omitempty"`
	KillsMedal        *uint32             `protobuf:"varint,17,opt,name=kills_medal,json=killsMedal" json:"kills_medal,omitempty"`
	DamageMedal       *uint32             `protobuf:"varint,18,opt,name=damage_medal,json=damageMedal" json:"damage_medal,omitempty"`
	HealingMedal      *uint32             `protobuf:"varint,19,opt,name=healing_medal,json=healingMedal" json:"healing_medal,omitempty"`
	SupportMedal      *uint32             `protobuf:"varint,20,opt,name=support_medal,json=supportMedal" json:"support_medal,omitempty"`
	XpBreakdown       []*CMsgTFXPSource   `protobuf:"bytes,21,rep,name=xp_breakdown,json=xpBreakdown" json:"xp_breakdown,omitempty"`
	LeaveTime         *uint32             `protobuf:"varint,22,opt,name=leave_time,json=leaveTime" json:"leave_time,omitempty"`
	LeaveReason       *TFMatchLeaveReason `protobuf:"varint,23,opt,name=leave_reason,json=leaveReason,enum=TFMatchLeaveReason,def=0" json:"leave_reason,omitempty"`
	ConnectTime       *uint32             `protobuf:"varint,24,opt,name=connect_time,json=connectTime" json:"connect_time,omitempty"`
	XXX_unrecognized  []byte              `json:"-"`
}

func (m *CMsgGC_Match_Result_Player) Reset()                    { *m = CMsgGC_Match_Result_Player{} }
func (m *CMsgGC_Match_Result_Player) String() string            { return proto.CompactTextString(m) }
func (*CMsgGC_Match_Result_Player) ProtoMessage()               {}
func (*CMsgGC_Match_Result_Player) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{120, 0} }

const Default_CMsgGC_Match_Result_Player_LeaveReason TFMatchLeaveReason = TFMatchLeaveReason_TFMatchLeaveReason_UNSPECIFIED

func (m *CMsgGC_Match_Result_Player) GetSteamId() uint64 {
	if m != nil && m.SteamId != nil {
		return *m.SteamId
	}
	return 0
}

func (m *CMsgGC_Match_Result_Player) GetPartyId() uint64 {
	if m != nil && m.PartyId != nil {
		return *m.PartyId
	}
	return 0
}

func (m *CMsgGC_Match_Result_Player) GetTeam() uint32 {
	if m != nil && m.Team != nil {
		return *m.Team
	}
	return 0
}

func (m *CMsgGC_Match_Result_Player) GetScore() uint32 {
	if m != nil && m.Score != nil {
		return *m.Score
	}
	return 0
}

func (m *CMsgGC_Match_Result_Player) GetPing() uint32 {
	if m != nil && m.Ping != nil {
		return *m.Ping
	}
	return 0
}

func (m *CMsgGC_Match_Result_Player) GetFlags() uint32 {
	if m != nil && m.Flags != nil {
		return *m.Flags
	}
	return 0
}

func (m *CMsgGC_Match_Result_Player) GetSkillrating() uint32 {
	if m != nil && m.Skillrating != nil {
		return *m.Skillrating
	}
	return 0
}

func (m *CMsgGC_Match_Result_Player) GetSkillratingChange() int32 {
	if m != nil && m.SkillratingChange != nil {
		return *m.SkillratingChange
	}
	return 0
}

func (m *CMsgGC_Match_Result_Player) GetRank() uint32 {
	if m != nil && m.Rank != nil {
		return *m.Rank
	}
	return 0
}

func (m *CMsgGC_Match_Result_Player) GetClassesPlayed() uint32 {
	if m != nil && m.ClassesPlayed != nil {
		return *m.ClassesPlayed
	}
	return 0
}

func (m *CMsgGC_Match_Result_Player) GetKills() uint32 {
	if m != nil && m.Kills != nil {
		return *m.Kills
	}
	return 0
}

func (m *CMsgGC_Match_Result_Player) GetDeaths() uint32 {
	if m != nil && m.Deaths != nil {
		return *m.Deaths
	}
	return 0
}

func (m *CMsgGC_Match_Result_Player) GetDamage() uint32 {
	if m != nil && m.Damage != nil {
		return *m.Damage
	}
	return 0
}

func (m *CMsgGC_Match_Result_Player) GetHealing() uint32 {
	if m != nil && m.Healing != nil {
		return *m.Healing
	}
	return 0
}

func (m *CMsgGC_Match_Result_Player) GetSupport() uint32 {
	if m != nil && m.Support != nil {
		return *m.Support
	}
	return 0
}

func (m *CMsgGC_Match_Result_Player) GetScoreMedal() uint32 {
	if m != nil && m.ScoreMedal != nil {
		return *m.ScoreMedal
	}
	return 0
}

func (m *CMsgGC_Match_Result_Player) GetKillsMedal() uint32 {
	if m != nil && m.KillsMedal != nil {
		return *m.KillsMedal
	}
	return 0
}

func (m *CMsgGC_Match_Result_Player) GetDamageMedal() uint32 {
	if m != nil && m.DamageMedal != nil {
		return *m.DamageMedal
	}
	return 0
}

func (m *CMsgGC_Match_Result_Player) GetHealingMedal() uint32 {
	if m != nil && m.HealingMedal != nil {
		return *m.HealingMedal
	}
	return 0
}

func (m *CMsgGC_Match_Result_Player) GetSupportMedal() uint32 {
	if m != nil && m.SupportMedal != nil {
		return *m.SupportMedal
	}
	return 0
}

func (m *CMsgGC_Match_Result_Player) GetXpBreakdown() []*CMsgTFXPSource {
	if m != nil {
		return m.XpBreakdown
	}
	return nil
}

func (m *CMsgGC_Match_Result_Player) GetLeaveTime() uint32 {
	if m != nil && m.LeaveTime != nil {
		return *m.LeaveTime
	}
	return 0
}

func (m *CMsgGC_Match_Result_Player) GetLeaveReason() TFMatchLeaveReason {
	if m != nil && m.LeaveReason != nil {
		return *m.LeaveReason
	}
	return Default_CMsgGC_Match_Result_Player_LeaveReason
}

func (m *CMsgGC_Match_Result_Player) GetConnectTime() uint32 {
	if m != nil && m.ConnectTime != nil {
		return *m.ConnectTime
	}
	return 0
}

type CMsgGC_Match_ResultResponse struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMsgGC_Match_ResultResponse) Reset()                    { *m = CMsgGC_Match_ResultResponse{} }
func (m *CMsgGC_Match_ResultResponse) String() string            { return proto.CompactTextString(m) }
func (*CMsgGC_Match_ResultResponse) ProtoMessage()               {}
func (*CMsgGC_Match_ResultResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{121} }

type CEconItemPreviewDataBlock struct {
	Econitem         *CSOEconItem `protobuf:"bytes,1,opt,name=econitem" json:"econitem,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *CEconItemPreviewDataBlock) Reset()                    { *m = CEconItemPreviewDataBlock{} }
func (m *CEconItemPreviewDataBlock) String() string            { return proto.CompactTextString(m) }
func (*CEconItemPreviewDataBlock) ProtoMessage()               {}
func (*CEconItemPreviewDataBlock) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{122} }

func (m *CEconItemPreviewDataBlock) GetEconitem() *CSOEconItem {
	if m != nil {
		return m.Econitem
	}
	return nil
}

type CMsgGC_Client2GCEconPreviewDataBlockRequest struct {
	ParamS           *uint64 `protobuf:"varint,1,opt,name=param_s,json=paramS" json:"param_s,omitempty"`
	ParamA           *uint64 `protobuf:"varint,2,opt,name=param_a,json=paramA" json:"param_a,omitempty"`
	ParamD           *uint64 `protobuf:"varint,3,opt,name=param_d,json=paramD" json:"param_d,omitempty"`
	ParamM           *uint64 `protobuf:"varint,4,opt,name=param_m,json=paramM" json:"param_m,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgGC_Client2GCEconPreviewDataBlockRequest) Reset() {
	*m = CMsgGC_Client2GCEconPreviewDataBlockRequest{}
}
func (m *CMsgGC_Client2GCEconPreviewDataBlockRequest) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgGC_Client2GCEconPreviewDataBlockRequest) ProtoMessage() {}
func (*CMsgGC_Client2GCEconPreviewDataBlockRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{123}
}

func (m *CMsgGC_Client2GCEconPreviewDataBlockRequest) GetParamS() uint64 {
	if m != nil && m.ParamS != nil {
		return *m.ParamS
	}
	return 0
}

func (m *CMsgGC_Client2GCEconPreviewDataBlockRequest) GetParamA() uint64 {
	if m != nil && m.ParamA != nil {
		return *m.ParamA
	}
	return 0
}

func (m *CMsgGC_Client2GCEconPreviewDataBlockRequest) GetParamD() uint64 {
	if m != nil && m.ParamD != nil {
		return *m.ParamD
	}
	return 0
}

func (m *CMsgGC_Client2GCEconPreviewDataBlockRequest) GetParamM() uint64 {
	if m != nil && m.ParamM != nil {
		return *m.ParamM
	}
	return 0
}

type CMsgGC_Client2GCEconPreviewDataBlockResponse struct {
	Iteminfo         *CEconItemPreviewDataBlock `protobuf:"bytes,1,opt,name=iteminfo" json:"iteminfo,omitempty"`
	XXX_unrecognized []byte                     `json:"-"`
}

func (m *CMsgGC_Client2GCEconPreviewDataBlockResponse) Reset() {
	*m = CMsgGC_Client2GCEconPreviewDataBlockResponse{}
}
func (m *CMsgGC_Client2GCEconPreviewDataBlockResponse) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgGC_Client2GCEconPreviewDataBlockResponse) ProtoMessage() {}
func (*CMsgGC_Client2GCEconPreviewDataBlockResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{124}
}

func (m *CMsgGC_Client2GCEconPreviewDataBlockResponse) GetIteminfo() *CEconItemPreviewDataBlock {
	if m != nil {
		return m.Iteminfo
	}
	return nil
}

type CSOTFLadderPlayerStats struct {
	AccountId          *uint32 `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	MatchGroup         *int32  `protobuf:"varint,2,opt,name=match_group,json=matchGroup" json:"match_group,omitempty"`
	SeasonId           *uint32 `protobuf:"varint,3,opt,name=season_id,json=seasonId" json:"season_id,omitempty"`
	Rating             *uint32 `protobuf:"varint,4,opt,name=rating" json:"rating,omitempty"`
	LastAckdRating     *uint32 `protobuf:"varint,31,opt,name=last_ackd_rating,json=lastAckdRating" json:"last_ackd_rating,omitempty"`
	LastRatingChange   *int32  `protobuf:"varint,5,opt,name=last_rating_change,json=lastRatingChange" json:"last_rating_change,omitempty"`
	Rank               *uint32 `protobuf:"varint,6,opt,name=rank" json:"rank,omitempty"`
	HighestRank        *uint32 `protobuf:"varint,7,opt,name=highest_rank,json=highestRank" json:"highest_rank,omitempty"`
	Experience         *uint32 `protobuf:"varint,8,opt,name=experience" json:"experience,omitempty"`
	LastAckdExperience *uint32 `protobuf:"varint,32,opt,name=last_ackd_experience,json=lastAckdExperience" json:"last_ackd_experience,omitempty"`
	Games              *uint32 `protobuf:"varint,9,opt,name=games" json:"games,omitempty"`
	Score              *uint32 `protobuf:"varint,10,opt,name=score" json:"score,omitempty"`
	Kills              *uint32 `protobuf:"varint,11,opt,name=kills" json:"kills,omitempty"`
	Deaths             *uint32 `protobuf:"varint,12,opt,name=deaths" json:"deaths,omitempty"`
	Damage             *uint32 `protobuf:"varint,13,opt,name=damage" json:"damage,omitempty"`
	Healing            *uint32 `protobuf:"varint,14,opt,name=healing" json:"healing,omitempty"`
	Support            *uint32 `protobuf:"varint,15,opt,name=support" json:"support,omitempty"`
	ScoreBronze        *uint32 `protobuf:"varint,16,opt,name=score_bronze,json=scoreBronze" json:"score_bronze,omitempty"`
	ScoreSilver        *uint32 `protobuf:"varint,17,opt,name=score_silver,json=scoreSilver" json:"score_silver,omitempty"`
	ScoreGold          *uint32 `protobuf:"varint,18,opt,name=score_gold,json=scoreGold" json:"score_gold,omitempty"`
	KillsBronze        *uint32 `protobuf:"varint,19,opt,name=kills_bronze,json=killsBronze" json:"kills_bronze,omitempty"`
	KillsSilver        *uint32 `protobuf:"varint,20,opt,name=kills_silver,json=killsSilver" json:"kills_silver,omitempty"`
	KillsGold          *uint32 `protobuf:"varint,21,opt,name=kills_gold,json=killsGold" json:"kills_gold,omitempty"`
	DamageBronze       *uint32 `protobuf:"varint,22,opt,name=damage_bronze,json=damageBronze" json:"damage_bronze,omitempty"`
	DamageSilver       *uint32 `protobuf:"varint,23,opt,name=damage_silver,json=damageSilver" json:"damage_silver,omitempty"`
	DamageGold         *uint32 `protobuf:"varint,24,opt,name=damage_gold,json=damageGold" json:"damage_gold,omitempty"`
	HealingBronze      *uint32 `protobuf:"varint,25,opt,name=healing_bronze,json=healingBronze" json:"healing_bronze,omitempty"`
	HealingSilver      *uint32 `protobuf:"varint,26,opt,name=healing_silver,json=healingSilver" json:"healing_silver,omitempty"`
	HealingGold        *uint32 `protobuf:"varint,27,opt,name=healing_gold,json=healingGold" json:"healing_gold,omitempty"`
	SupportBronze      *uint32 `protobuf:"varint,28,opt,name=support_bronze,json=supportBronze" json:"support_bronze,omitempty"`
	SupportSilver      *uint32 `protobuf:"varint,29,opt,name=support_silver,json=supportSilver" json:"support_silver,omitempty"`
	SupportGold        *uint32 `protobuf:"varint,30,opt,name=support_gold,json=supportGold" json:"support_gold,omitempty"`
	XXX_unrecognized   []byte  `json:"-"`
}

func (m *CSOTFLadderPlayerStats) Reset()                    { *m = CSOTFLadderPlayerStats{} }
func (m *CSOTFLadderPlayerStats) String() string            { return proto.CompactTextString(m) }
func (*CSOTFLadderPlayerStats) ProtoMessage()               {}
func (*CSOTFLadderPlayerStats) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{125} }

func (m *CSOTFLadderPlayerStats) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *CSOTFLadderPlayerStats) GetMatchGroup() int32 {
	if m != nil && m.MatchGroup != nil {
		return *m.MatchGroup
	}
	return 0
}

func (m *CSOTFLadderPlayerStats) GetSeasonId() uint32 {
	if m != nil && m.SeasonId != nil {
		return *m.SeasonId
	}
	return 0
}

func (m *CSOTFLadderPlayerStats) GetRating() uint32 {
	if m != nil && m.Rating != nil {
		return *m.Rating
	}
	return 0
}

func (m *CSOTFLadderPlayerStats) GetLastAckdRating() uint32 {
	if m != nil && m.LastAckdRating != nil {
		return *m.LastAckdRating
	}
	return 0
}

func (m *CSOTFLadderPlayerStats) GetLastRatingChange() int32 {
	if m != nil && m.LastRatingChange != nil {
		return *m.LastRatingChange
	}
	return 0
}

func (m *CSOTFLadderPlayerStats) GetRank() uint32 {
	if m != nil && m.Rank != nil {
		return *m.Rank
	}
	return 0
}

func (m *CSOTFLadderPlayerStats) GetHighestRank() uint32 {
	if m != nil && m.HighestRank != nil {
		return *m.HighestRank
	}
	return 0
}

func (m *CSOTFLadderPlayerStats) GetExperience() uint32 {
	if m != nil && m.Experience != nil {
		return *m.Experience
	}
	return 0
}

func (m *CSOTFLadderPlayerStats) GetLastAckdExperience() uint32 {
	if m != nil && m.LastAckdExperience != nil {
		return *m.LastAckdExperience
	}
	return 0
}

func (m *CSOTFLadderPlayerStats) GetGames() uint32 {
	if m != nil && m.Games != nil {
		return *m.Games
	}
	return 0
}

func (m *CSOTFLadderPlayerStats) GetScore() uint32 {
	if m != nil && m.Score != nil {
		return *m.Score
	}
	return 0
}

func (m *CSOTFLadderPlayerStats) GetKills() uint32 {
	if m != nil && m.Kills != nil {
		return *m.Kills
	}
	return 0
}

func (m *CSOTFLadderPlayerStats) GetDeaths() uint32 {
	if m != nil && m.Deaths != nil {
		return *m.Deaths
	}
	return 0
}

func (m *CSOTFLadderPlayerStats) GetDamage() uint32 {
	if m != nil && m.Damage != nil {
		return *m.Damage
	}
	return 0
}

func (m *CSOTFLadderPlayerStats) GetHealing() uint32 {
	if m != nil && m.Healing != nil {
		return *m.Healing
	}
	return 0
}

func (m *CSOTFLadderPlayerStats) GetSupport() uint32 {
	if m != nil && m.Support != nil {
		return *m.Support
	}
	return 0
}

func (m *CSOTFLadderPlayerStats) GetScoreBronze() uint32 {
	if m != nil && m.ScoreBronze != nil {
		return *m.ScoreBronze
	}
	return 0
}

func (m *CSOTFLadderPlayerStats) GetScoreSilver() uint32 {
	if m != nil && m.ScoreSilver != nil {
		return *m.ScoreSilver
	}
	return 0
}

func (m *CSOTFLadderPlayerStats) GetScoreGold() uint32 {
	if m != nil && m.ScoreGold != nil {
		return *m.ScoreGold
	}
	return 0
}

func (m *CSOTFLadderPlayerStats) GetKillsBronze() uint32 {
	if m != nil && m.KillsBronze != nil {
		return *m.KillsBronze
	}
	return 0
}

func (m *CSOTFLadderPlayerStats) GetKillsSilver() uint32 {
	if m != nil && m.KillsSilver != nil {
		return *m.KillsSilver
	}
	return 0
}

func (m *CSOTFLadderPlayerStats) GetKillsGold() uint32 {
	if m != nil && m.KillsGold != nil {
		return *m.KillsGold
	}
	return 0
}

func (m *CSOTFLadderPlayerStats) GetDamageBronze() uint32 {
	if m != nil && m.DamageBronze != nil {
		return *m.DamageBronze
	}
	return 0
}

func (m *CSOTFLadderPlayerStats) GetDamageSilver() uint32 {
	if m != nil && m.DamageSilver != nil {
		return *m.DamageSilver
	}
	return 0
}

func (m *CSOTFLadderPlayerStats) GetDamageGold() uint32 {
	if m != nil && m.DamageGold != nil {
		return *m.DamageGold
	}
	return 0
}

func (m *CSOTFLadderPlayerStats) GetHealingBronze() uint32 {
	if m != nil && m.HealingBronze != nil {
		return *m.HealingBronze
	}
	return 0
}

func (m *CSOTFLadderPlayerStats) GetHealingSilver() uint32 {
	if m != nil && m.HealingSilver != nil {
		return *m.HealingSilver
	}
	return 0
}

func (m *CSOTFLadderPlayerStats) GetHealingGold() uint32 {
	if m != nil && m.HealingGold != nil {
		return *m.HealingGold
	}
	return 0
}

func (m *CSOTFLadderPlayerStats) GetSupportBronze() uint32 {
	if m != nil && m.SupportBronze != nil {
		return *m.SupportBronze
	}
	return 0
}

func (m *CSOTFLadderPlayerStats) GetSupportSilver() uint32 {
	if m != nil && m.SupportSilver != nil {
		return *m.SupportSilver
	}
	return 0
}

func (m *CSOTFLadderPlayerStats) GetSupportGold() uint32 {
	if m != nil && m.SupportGold != nil {
		return *m.SupportGold
	}
	return 0
}

type CMsgGC_TFVoteKickPlayerRequest struct {
	AccountId        *uint32 `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	TargetId         *uint64 `protobuf:"varint,2,opt,name=target_id,json=targetId" json:"target_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgGC_TFVoteKickPlayerRequest) Reset()         { *m = CMsgGC_TFVoteKickPlayerRequest{} }
func (m *CMsgGC_TFVoteKickPlayerRequest) String() string { return proto.CompactTextString(m) }
func (*CMsgGC_TFVoteKickPlayerRequest) ProtoMessage()    {}
func (*CMsgGC_TFVoteKickPlayerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{126}
}

func (m *CMsgGC_TFVoteKickPlayerRequest) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *CMsgGC_TFVoteKickPlayerRequest) GetTargetId() uint64 {
	if m != nil && m.TargetId != nil {
		return *m.TargetId
	}
	return 0
}

type CMsgGC_VoteKickPlayerRequestResponse struct {
	Allowed          *bool  `protobuf:"varint,1,opt,name=allowed" json:"allowed,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMsgGC_VoteKickPlayerRequestResponse) Reset()         { *m = CMsgGC_VoteKickPlayerRequestResponse{} }
func (m *CMsgGC_VoteKickPlayerRequestResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgGC_VoteKickPlayerRequestResponse) ProtoMessage()    {}
func (*CMsgGC_VoteKickPlayerRequestResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{127}
}

func (m *CMsgGC_VoteKickPlayerRequestResponse) GetAllowed() bool {
	if m != nil && m.Allowed != nil {
		return *m.Allowed
	}
	return false
}

type CMsgGC_DailyCompetitiveStatsRollup struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMsgGC_DailyCompetitiveStatsRollup) Reset()         { *m = CMsgGC_DailyCompetitiveStatsRollup{} }
func (m *CMsgGC_DailyCompetitiveStatsRollup) String() string { return proto.CompactTextString(m) }
func (*CMsgGC_DailyCompetitiveStatsRollup) ProtoMessage()    {}
func (*CMsgGC_DailyCompetitiveStatsRollup) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{128}
}

type CMsgGC_DailyCompetitiveStatsRollup_Response struct {
	Rankdata         []*CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry `protobuf:"bytes,1,rep,name=rankdata" json:"rankdata,omitempty"`
	XXX_unrecognized []byte                                                         `json:"-"`
}

func (m *CMsgGC_DailyCompetitiveStatsRollup_Response) Reset() {
	*m = CMsgGC_DailyCompetitiveStatsRollup_Response{}
}
func (m *CMsgGC_DailyCompetitiveStatsRollup_Response) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgGC_DailyCompetitiveStatsRollup_Response) ProtoMessage() {}
func (*CMsgGC_DailyCompetitiveStatsRollup_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{129}
}

func (m *CMsgGC_DailyCompetitiveStatsRollup_Response) GetRankdata() []*CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry {
	if m != nil {
		return m.Rankdata
	}
	return nil
}

type CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry struct {
	Rank             *uint32 `protobuf:"varint,1,opt,name=rank" json:"rank,omitempty"`
	Records          *uint32 `protobuf:"varint,2,opt,name=records" json:"records,omitempty"`
	AvgScore         *uint32 `protobuf:"varint,3,opt,name=avg_score,json=avgScore" json:"avg_score,omitempty"`
	StdevScore       *uint32 `protobuf:"varint,4,opt,name=stdev_score,json=stdevScore" json:"stdev_score,omitempty"`
	AvgKills         *uint32 `protobuf:"varint,5,opt,name=avg_kills,json=avgKills" json:"avg_kills,omitempty"`
	StdevKills       *uint32 `protobuf:"varint,6,opt,name=stdev_kills,json=stdevKills" json:"stdev_kills,omitempty"`
	AvgDamage        *uint32 `protobuf:"varint,7,opt,name=avg_damage,json=avgDamage" json:"avg_damage,omitempty"`
	StdevDamage      *uint32 `protobuf:"varint,8,opt,name=stdev_damage,json=stdevDamage" json:"stdev_damage,omitempty"`
	AvgHealing       *uint32 `protobuf:"varint,9,opt,name=avg_healing,json=avgHealing" json:"avg_healing,omitempty"`
	StdevHealing     *uint32 `protobuf:"varint,10,opt,name=stdev_healing,json=stdevHealing" json:"stdev_healing,omitempty"`
	AvgSupport       *uint32 `protobuf:"varint,11,opt,name=avg_support,json=avgSupport" json:"avg_support,omitempty"`
	StdevSupport     *uint32 `protobuf:"varint,12,opt,name=stdev_support,json=stdevSupport" json:"stdev_support,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry) Reset() {
	*m = CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry{}
}
func (m *CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry) ProtoMessage() {}
func (*CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{129, 0}
}

func (m *CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry) GetRank() uint32 {
	if m != nil && m.Rank != nil {
		return *m.Rank
	}
	return 0
}

func (m *CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry) GetRecords() uint32 {
	if m != nil && m.Records != nil {
		return *m.Records
	}
	return 0
}

func (m *CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry) GetAvgScore() uint32 {
	if m != nil && m.AvgScore != nil {
		return *m.AvgScore
	}
	return 0
}

func (m *CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry) GetStdevScore() uint32 {
	if m != nil && m.StdevScore != nil {
		return *m.StdevScore
	}
	return 0
}

func (m *CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry) GetAvgKills() uint32 {
	if m != nil && m.AvgKills != nil {
		return *m.AvgKills
	}
	return 0
}

func (m *CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry) GetStdevKills() uint32 {
	if m != nil && m.StdevKills != nil {
		return *m.StdevKills
	}
	return 0
}

func (m *CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry) GetAvgDamage() uint32 {
	if m != nil && m.AvgDamage != nil {
		return *m.AvgDamage
	}
	return 0
}

func (m *CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry) GetStdevDamage() uint32 {
	if m != nil && m.StdevDamage != nil {
		return *m.StdevDamage
	}
	return 0
}

func (m *CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry) GetAvgHealing() uint32 {
	if m != nil && m.AvgHealing != nil {
		return *m.AvgHealing
	}
	return 0
}

func (m *CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry) GetStdevHealing() uint32 {
	if m != nil && m.StdevHealing != nil {
		return *m.StdevHealing
	}
	return 0
}

func (m *CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry) GetAvgSupport() uint32 {
	if m != nil && m.AvgSupport != nil {
		return *m.AvgSupport
	}
	return 0
}

func (m *CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry) GetStdevSupport() uint32 {
	if m != nil && m.StdevSupport != nil {
		return *m.StdevSupport
	}
	return 0
}

type CMsgGC_ReportPlayer struct {
	AccountIdTarget  *uint32                      `protobuf:"varint,1,opt,name=account_id_target,json=accountIdTarget" json:"account_id_target,omitempty"`
	Reason           *CMsgGC_ReportPlayer_EReason `protobuf:"varint,2,opt,name=reason,enum=CMsgGC_ReportPlayer_EReason,def=0" json:"reason,omitempty"`
	XXX_unrecognized []byte                       `json:"-"`
}

func (m *CMsgGC_ReportPlayer) Reset()                    { *m = CMsgGC_ReportPlayer{} }
func (m *CMsgGC_ReportPlayer) String() string            { return proto.CompactTextString(m) }
func (*CMsgGC_ReportPlayer) ProtoMessage()               {}
func (*CMsgGC_ReportPlayer) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{130} }

const Default_CMsgGC_ReportPlayer_Reason CMsgGC_ReportPlayer_EReason = CMsgGC_ReportPlayer_kReason_INVALID

func (m *CMsgGC_ReportPlayer) GetAccountIdTarget() uint32 {
	if m != nil && m.AccountIdTarget != nil {
		return *m.AccountIdTarget
	}
	return 0
}

func (m *CMsgGC_ReportPlayer) GetReason() CMsgGC_ReportPlayer_EReason {
	if m != nil && m.Reason != nil {
		return *m.Reason
	}
	return Default_CMsgGC_ReportPlayer_Reason
}

type CSOTFMatchResultPlayerStats struct {
	MatchId           *uint64 `protobuf:"varint,1,opt,name=match_id,json=matchId" json:"match_id,omitempty"`
	AccountId         *uint32 `protobuf:"varint,2,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	MatchGroup        *int32  `protobuf:"varint,3,opt,name=match_group,json=matchGroup" json:"match_group,omitempty"`
	Endtime           *uint32 `protobuf:"varint,4,opt,name=endtime" json:"endtime,omitempty"`
	SeasonId          *uint32 `protobuf:"varint,5,opt,name=season_id,json=seasonId" json:"season_id,omitempty"`
	Status            *uint32 `protobuf:"varint,6,opt,name=status" json:"status,omitempty"`
	PartyId           *uint32 `protobuf:"varint,7,opt,name=party_id,json=partyId" json:"party_id,omitempty"`
	Team              *uint32 `protobuf:"varint,8,opt,name=team" json:"team,omitempty"`
	Score             *uint32 `protobuf:"varint,9,opt,name=score" json:"score,omitempty"`
	Ping              *uint32 `protobuf:"varint,10,opt,name=ping" json:"ping,omitempty"`
	Flags             *uint32 `protobuf:"varint,11,opt,name=flags" json:"flags,omitempty"`
	Skillrating       *uint32 `protobuf:"varint,12,opt,name=skillrating" json:"skillrating,omitempty"`
	SkillratingChange *int32  `protobuf:"varint,13,opt,name=skillrating_change,json=skillratingChange" json:"skillrating_change,omitempty"`
	Rank              *uint32 `protobuf:"varint,14,opt,name=rank" json:"rank,omitempty"`
	ClassesPlayed     *uint32 `protobuf:"varint,15,opt,name=classes_played,json=classesPlayed" json:"classes_played,omitempty"`
	Kills             *uint32 `protobuf:"varint,16,opt,name=kills" json:"kills,omitempty"`
	Deaths            *uint32 `protobuf:"varint,17,opt,name=deaths" json:"deaths,omitempty"`
	Damage            *uint32 `protobuf:"varint,18,opt,name=damage" json:"damage,omitempty"`
	Healing           *uint32 `protobuf:"varint,19,opt,name=healing" json:"healing,omitempty"`
	Support           *uint32 `protobuf:"varint,20,opt,name=support" json:"support,omitempty"`
	ScoreMedal        *uint32 `protobuf:"varint,21,opt,name=score_medal,json=scoreMedal" json:"score_medal,omitempty"`
	KillsMedal        *uint32 `protobuf:"varint,22,opt,name=kills_medal,json=killsMedal" json:"kills_medal,omitempty"`
	DamageMedal       *uint32 `protobuf:"varint,23,opt,name=damage_medal,json=damageMedal" json:"damage_medal,omitempty"`
	HealingMedal      *uint32 `protobuf:"varint,24,opt,name=healing_medal,json=healingMedal" json:"healing_medal,omitempty"`
	SupportMedal      *uint32 `protobuf:"varint,25,opt,name=support_medal,json=supportMedal" json:"support_medal,omitempty"`
	MapIndex          *uint32 `protobuf:"varint,26,opt,name=map_index,json=mapIndex" json:"map_index,omitempty"`
	XXX_unrecognized  []byte  `json:"-"`
}

func (m *CSOTFMatchResultPlayerStats) Reset()                    { *m = CSOTFMatchResultPlayerStats{} }
func (m *CSOTFMatchResultPlayerStats) String() string            { return proto.CompactTextString(m) }
func (*CSOTFMatchResultPlayerStats) ProtoMessage()               {}
func (*CSOTFMatchResultPlayerStats) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{131} }

func (m *CSOTFMatchResultPlayerStats) GetMatchId() uint64 {
	if m != nil && m.MatchId != nil {
		return *m.MatchId
	}
	return 0
}

func (m *CSOTFMatchResultPlayerStats) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *CSOTFMatchResultPlayerStats) GetMatchGroup() int32 {
	if m != nil && m.MatchGroup != nil {
		return *m.MatchGroup
	}
	return 0
}

func (m *CSOTFMatchResultPlayerStats) GetEndtime() uint32 {
	if m != nil && m.Endtime != nil {
		return *m.Endtime
	}
	return 0
}

func (m *CSOTFMatchResultPlayerStats) GetSeasonId() uint32 {
	if m != nil && m.SeasonId != nil {
		return *m.SeasonId
	}
	return 0
}

func (m *CSOTFMatchResultPlayerStats) GetStatus() uint32 {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return 0
}

func (m *CSOTFMatchResultPlayerStats) GetPartyId() uint32 {
	if m != nil && m.PartyId != nil {
		return *m.PartyId
	}
	return 0
}

func (m *CSOTFMatchResultPlayerStats) GetTeam() uint32 {
	if m != nil && m.Team != nil {
		return *m.Team
	}
	return 0
}

func (m *CSOTFMatchResultPlayerStats) GetScore() uint32 {
	if m != nil && m.Score != nil {
		return *m.Score
	}
	return 0
}

func (m *CSOTFMatchResultPlayerStats) GetPing() uint32 {
	if m != nil && m.Ping != nil {
		return *m.Ping
	}
	return 0
}

func (m *CSOTFMatchResultPlayerStats) GetFlags() uint32 {
	if m != nil && m.Flags != nil {
		return *m.Flags
	}
	return 0
}

func (m *CSOTFMatchResultPlayerStats) GetSkillrating() uint32 {
	if m != nil && m.Skillrating != nil {
		return *m.Skillrating
	}
	return 0
}

func (m *CSOTFMatchResultPlayerStats) GetSkillratingChange() int32 {
	if m != nil && m.SkillratingChange != nil {
		return *m.SkillratingChange
	}
	return 0
}

func (m *CSOTFMatchResultPlayerStats) GetRank() uint32 {
	if m != nil && m.Rank != nil {
		return *m.Rank
	}
	return 0
}

func (m *CSOTFMatchResultPlayerStats) GetClassesPlayed() uint32 {
	if m != nil && m.ClassesPlayed != nil {
		return *m.ClassesPlayed
	}
	return 0
}

func (m *CSOTFMatchResultPlayerStats) GetKills() uint32 {
	if m != nil && m.Kills != nil {
		return *m.Kills
	}
	return 0
}

func (m *CSOTFMatchResultPlayerStats) GetDeaths() uint32 {
	if m != nil && m.Deaths != nil {
		return *m.Deaths
	}
	return 0
}

func (m *CSOTFMatchResultPlayerStats) GetDamage() uint32 {
	if m != nil && m.Damage != nil {
		return *m.Damage
	}
	return 0
}

func (m *CSOTFMatchResultPlayerStats) GetHealing() uint32 {
	if m != nil && m.Healing != nil {
		return *m.Healing
	}
	return 0
}

func (m *CSOTFMatchResultPlayerStats) GetSupport() uint32 {
	if m != nil && m.Support != nil {
		return *m.Support
	}
	return 0
}

func (m *CSOTFMatchResultPlayerStats) GetScoreMedal() uint32 {
	if m != nil && m.ScoreMedal != nil {
		return *m.ScoreMedal
	}
	return 0
}

func (m *CSOTFMatchResultPlayerStats) GetKillsMedal() uint32 {
	if m != nil && m.KillsMedal != nil {
		return *m.KillsMedal
	}
	return 0
}

func (m *CSOTFMatchResultPlayerStats) GetDamageMedal() uint32 {
	if m != nil && m.DamageMedal != nil {
		return *m.DamageMedal
	}
	return 0
}

func (m *CSOTFMatchResultPlayerStats) GetHealingMedal() uint32 {
	if m != nil && m.HealingMedal != nil {
		return *m.HealingMedal
	}
	return 0
}

func (m *CSOTFMatchResultPlayerStats) GetSupportMedal() uint32 {
	if m != nil && m.SupportMedal != nil {
		return *m.SupportMedal
	}
	return 0
}

func (m *CSOTFMatchResultPlayerStats) GetMapIndex() uint32 {
	if m != nil && m.MapIndex != nil {
		return *m.MapIndex
	}
	return 0
}

type CMsgGCRequestMatchMakerStats struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMsgGCRequestMatchMakerStats) Reset()                    { *m = CMsgGCRequestMatchMakerStats{} }
func (m *CMsgGCRequestMatchMakerStats) String() string            { return proto.CompactTextString(m) }
func (*CMsgGCRequestMatchMakerStats) ProtoMessage()               {}
func (*CMsgGCRequestMatchMakerStats) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{132} }

type CMsgGCDataCenterPopulation struct {
	Name             *string  `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	HealthRatio      *float32 `protobuf:"fixed32,2,opt,name=health_ratio,json=healthRatio" json:"health_ratio,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CMsgGCDataCenterPopulation) Reset()                    { *m = CMsgGCDataCenterPopulation{} }
func (m *CMsgGCDataCenterPopulation) String() string            { return proto.CompactTextString(m) }
func (*CMsgGCDataCenterPopulation) ProtoMessage()               {}
func (*CMsgGCDataCenterPopulation) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{133} }

func (m *CMsgGCDataCenterPopulation) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *CMsgGCDataCenterPopulation) GetHealthRatio() float32 {
	if m != nil && m.HealthRatio != nil {
		return *m.HealthRatio
	}
	return 0
}

type CMsgGCMatchGroupDataCenterPopulation struct {
	DataCenterPopulation []*CMsgGCDataCenterPopulation `protobuf:"bytes,1,rep,name=data_center_population,json=dataCenterPopulation" json:"data_center_population,omitempty"`
	XXX_unrecognized     []byte                        `json:"-"`
}

func (m *CMsgGCMatchGroupDataCenterPopulation) Reset()         { *m = CMsgGCMatchGroupDataCenterPopulation{} }
func (m *CMsgGCMatchGroupDataCenterPopulation) String() string { return proto.CompactTextString(m) }
func (*CMsgGCMatchGroupDataCenterPopulation) ProtoMessage()    {}
func (*CMsgGCMatchGroupDataCenterPopulation) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{134}
}

func (m *CMsgGCMatchGroupDataCenterPopulation) GetDataCenterPopulation() []*CMsgGCDataCenterPopulation {
	if m != nil {
		return m.DataCenterPopulation
	}
	return nil
}

type CMsgGCMatchMakerStatsResponse struct {
	MapCount                       []uint32                                `protobuf:"varint,1,rep,name=map_count,json=mapCount" json:"map_count,omitempty"`
	MatchgroupDataCenterPopulation []*CMsgGCMatchGroupDataCenterPopulation `protobuf:"bytes,2,rep,name=matchgroup_data_center_population,json=matchgroupDataCenterPopulation" json:"matchgroup_data_center_population,omitempty"`
	XXX_unrecognized               []byte                                  `json:"-"`
}

func (m *CMsgGCMatchMakerStatsResponse) Reset()                    { *m = CMsgGCMatchMakerStatsResponse{} }
func (m *CMsgGCMatchMakerStatsResponse) String() string            { return proto.CompactTextString(m) }
func (*CMsgGCMatchMakerStatsResponse) ProtoMessage()               {}
func (*CMsgGCMatchMakerStatsResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{135} }

func (m *CMsgGCMatchMakerStatsResponse) GetMapCount() []uint32 {
	if m != nil {
		return m.MapCount
	}
	return nil
}

func (m *CMsgGCMatchMakerStatsResponse) GetMatchgroupDataCenterPopulation() []*CMsgGCMatchGroupDataCenterPopulation {
	if m != nil {
		return m.MatchgroupDataCenterPopulation
	}
	return nil
}

type CMsgGCMatchHistoryLoad struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMsgGCMatchHistoryLoad) Reset()                    { *m = CMsgGCMatchHistoryLoad{} }
func (m *CMsgGCMatchHistoryLoad) String() string            { return proto.CompactTextString(m) }
func (*CMsgGCMatchHistoryLoad) ProtoMessage()               {}
func (*CMsgGCMatchHistoryLoad) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{136} }

type CMsgGCDataCenterPing_Update struct {
	Pingdata         []*CMsgGCDataCenterPing_Update_PingEntry `protobuf:"bytes,1,rep,name=pingdata" json:"pingdata,omitempty"`
	XXX_unrecognized []byte                                   `json:"-"`
}

func (m *CMsgGCDataCenterPing_Update) Reset()                    { *m = CMsgGCDataCenterPing_Update{} }
func (m *CMsgGCDataCenterPing_Update) String() string            { return proto.CompactTextString(m) }
func (*CMsgGCDataCenterPing_Update) ProtoMessage()               {}
func (*CMsgGCDataCenterPing_Update) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{137} }

func (m *CMsgGCDataCenterPing_Update) GetPingdata() []*CMsgGCDataCenterPing_Update_PingEntry {
	if m != nil {
		return m.Pingdata
	}
	return nil
}

type CMsgGCDataCenterPing_Update_PingEntry struct {
	Name             *string                             `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Ping             *uint32                             `protobuf:"varint,2,opt,name=ping" json:"ping,omitempty"`
	PingStatus       *CMsgGCDataCenterPing_Update_Status `protobuf:"varint,3,opt,name=ping_status,json=pingStatus,enum=CMsgGCDataCenterPing_Update_Status,def=1" json:"ping_status,omitempty"`
	XXX_unrecognized []byte                              `json:"-"`
}

func (m *CMsgGCDataCenterPing_Update_PingEntry) Reset()         { *m = CMsgGCDataCenterPing_Update_PingEntry{} }
func (m *CMsgGCDataCenterPing_Update_PingEntry) String() string { return proto.CompactTextString(m) }
func (*CMsgGCDataCenterPing_Update_PingEntry) ProtoMessage()    {}
func (*CMsgGCDataCenterPing_Update_PingEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{137, 0}
}

const Default_CMsgGCDataCenterPing_Update_PingEntry_PingStatus CMsgGCDataCenterPing_Update_Status = CMsgGCDataCenterPing_Update_Normal

func (m *CMsgGCDataCenterPing_Update_PingEntry) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *CMsgGCDataCenterPing_Update_PingEntry) GetPing() uint32 {
	if m != nil && m.Ping != nil {
		return *m.Ping
	}
	return 0
}

func (m *CMsgGCDataCenterPing_Update_PingEntry) GetPingStatus() CMsgGCDataCenterPing_Update_Status {
	if m != nil && m.PingStatus != nil {
		return *m.PingStatus
	}
	return Default_CMsgGCDataCenterPing_Update_PingEntry_PingStatus
}

type CMsgGC_KickPlayerFromLobby struct {
	TargetID         *uint64 `protobuf:"varint,1,opt,name=targetID" json:"targetID,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgGC_KickPlayerFromLobby) Reset()                    { *m = CMsgGC_KickPlayerFromLobby{} }
func (m *CMsgGC_KickPlayerFromLobby) String() string            { return proto.CompactTextString(m) }
func (*CMsgGC_KickPlayerFromLobby) ProtoMessage()               {}
func (*CMsgGC_KickPlayerFromLobby) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{138} }

func (m *CMsgGC_KickPlayerFromLobby) GetTargetID() uint64 {
	if m != nil && m.TargetID != nil {
		return *m.TargetID
	}
	return 0
}

type CMsgGCSurveyRequest struct {
	QuestionType     *SurveyQuestionType `protobuf:"varint,1,opt,name=question_type,json=questionType,enum=SurveyQuestionType,def=0" json:"question_type,omitempty"`
	MatchId          *uint64             `protobuf:"varint,2,opt,name=match_id,json=matchId" json:"match_id,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *CMsgGCSurveyRequest) Reset()                    { *m = CMsgGCSurveyRequest{} }
func (m *CMsgGCSurveyRequest) String() string            { return proto.CompactTextString(m) }
func (*CMsgGCSurveyRequest) ProtoMessage()               {}
func (*CMsgGCSurveyRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{139} }

const Default_CMsgGCSurveyRequest_QuestionType SurveyQuestionType = SurveyQuestionType_QUESTION_MATCH_QUALITY

func (m *CMsgGCSurveyRequest) GetQuestionType() SurveyQuestionType {
	if m != nil && m.QuestionType != nil {
		return *m.QuestionType
	}
	return Default_CMsgGCSurveyRequest_QuestionType
}

func (m *CMsgGCSurveyRequest) GetMatchId() uint64 {
	if m != nil && m.MatchId != nil {
		return *m.MatchId
	}
	return 0
}

type CMsgGCSurveyResponse struct {
	QuestionType     *SurveyQuestionType `protobuf:"varint,1,opt,name=question_type,json=questionType,enum=SurveyQuestionType,def=0" json:"question_type,omitempty"`
	MatchId          *uint64             `protobuf:"varint,2,opt,name=match_id,json=matchId" json:"match_id,omitempty"`
	Response         *int32              `protobuf:"varint,3,opt,name=response" json:"response,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *CMsgGCSurveyResponse) Reset()                    { *m = CMsgGCSurveyResponse{} }
func (m *CMsgGCSurveyResponse) String() string            { return proto.CompactTextString(m) }
func (*CMsgGCSurveyResponse) ProtoMessage()               {}
func (*CMsgGCSurveyResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{140} }

const Default_CMsgGCSurveyResponse_QuestionType SurveyQuestionType = SurveyQuestionType_QUESTION_MATCH_QUALITY

func (m *CMsgGCSurveyResponse) GetQuestionType() SurveyQuestionType {
	if m != nil && m.QuestionType != nil {
		return *m.QuestionType
	}
	return Default_CMsgGCSurveyResponse_QuestionType
}

func (m *CMsgGCSurveyResponse) GetMatchId() uint64 {
	if m != nil && m.MatchId != nil {
		return *m.MatchId
	}
	return 0
}

func (m *CMsgGCSurveyResponse) GetResponse() int32 {
	if m != nil && m.Response != nil {
		return *m.Response
	}
	return 0
}

type CMsgGCNewMatchForLobbyRequest struct {
	CurrentMatchId   *uint64 `protobuf:"varint,1,opt,name=current_match_id,json=currentMatchId" json:"current_match_id,omitempty"`
	NextMapId        *uint32 `protobuf:"varint,2,opt,name=next_map_id,json=nextMapId" json:"next_map_id,omitempty"`
	LobbyId          *uint64 `protobuf:"varint,3,opt,name=lobby_id,json=lobbyId" json:"lobby_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgGCNewMatchForLobbyRequest) Reset()                    { *m = CMsgGCNewMatchForLobbyRequest{} }
func (m *CMsgGCNewMatchForLobbyRequest) String() string            { return proto.CompactTextString(m) }
func (*CMsgGCNewMatchForLobbyRequest) ProtoMessage()               {}
func (*CMsgGCNewMatchForLobbyRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{141} }

func (m *CMsgGCNewMatchForLobbyRequest) GetCurrentMatchId() uint64 {
	if m != nil && m.CurrentMatchId != nil {
		return *m.CurrentMatchId
	}
	return 0
}

func (m *CMsgGCNewMatchForLobbyRequest) GetNextMapId() uint32 {
	if m != nil && m.NextMapId != nil {
		return *m.NextMapId
	}
	return 0
}

func (m *CMsgGCNewMatchForLobbyRequest) GetLobbyId() uint64 {
	if m != nil && m.LobbyId != nil {
		return *m.LobbyId
	}
	return 0
}

type CMsgGCNewMatchForLobbyResponse struct {
	Success          *bool  `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMsgGCNewMatchForLobbyResponse) Reset()         { *m = CMsgGCNewMatchForLobbyResponse{} }
func (m *CMsgGCNewMatchForLobbyResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgGCNewMatchForLobbyResponse) ProtoMessage()    {}
func (*CMsgGCNewMatchForLobbyResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{142}
}

func (m *CMsgGCNewMatchForLobbyResponse) GetSuccess() bool {
	if m != nil && m.Success != nil {
		return *m.Success
	}
	return false
}

type CMsgGCChangeMatchPlayerTeamsRequest struct {
	MatchId          *uint64                                       `protobuf:"varint,1,opt,name=match_id,json=matchId" json:"match_id,omitempty"`
	LobbyId          *uint64                                       `protobuf:"varint,2,opt,name=lobby_id,json=lobbyId" json:"lobby_id,omitempty"`
	Member           []*CMsgGCChangeMatchPlayerTeamsRequest_Member `protobuf:"bytes,3,rep,name=member" json:"member,omitempty"`
	XXX_unrecognized []byte                                        `json:"-"`
}

func (m *CMsgGCChangeMatchPlayerTeamsRequest) Reset()         { *m = CMsgGCChangeMatchPlayerTeamsRequest{} }
func (m *CMsgGCChangeMatchPlayerTeamsRequest) String() string { return proto.CompactTextString(m) }
func (*CMsgGCChangeMatchPlayerTeamsRequest) ProtoMessage()    {}
func (*CMsgGCChangeMatchPlayerTeamsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{143}
}

func (m *CMsgGCChangeMatchPlayerTeamsRequest) GetMatchId() uint64 {
	if m != nil && m.MatchId != nil {
		return *m.MatchId
	}
	return 0
}

func (m *CMsgGCChangeMatchPlayerTeamsRequest) GetLobbyId() uint64 {
	if m != nil && m.LobbyId != nil {
		return *m.LobbyId
	}
	return 0
}

func (m *CMsgGCChangeMatchPlayerTeamsRequest) GetMember() []*CMsgGCChangeMatchPlayerTeamsRequest_Member {
	if m != nil {
		return m.Member
	}
	return nil
}

type CMsgGCChangeMatchPlayerTeamsRequest_Member struct {
	MemberId         *uint64     `protobuf:"varint,1,opt,name=member_id,json=memberId" json:"member_id,omitempty"`
	NewTeam          *TF_GC_TEAM `protobuf:"varint,2,opt,name=new_team,json=newTeam,enum=TF_GC_TEAM,def=5" json:"new_team,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *CMsgGCChangeMatchPlayerTeamsRequest_Member) Reset() {
	*m = CMsgGCChangeMatchPlayerTeamsRequest_Member{}
}
func (m *CMsgGCChangeMatchPlayerTeamsRequest_Member) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgGCChangeMatchPlayerTeamsRequest_Member) ProtoMessage() {}
func (*CMsgGCChangeMatchPlayerTeamsRequest_Member) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{143, 0}
}

const Default_CMsgGCChangeMatchPlayerTeamsRequest_Member_NewTeam TF_GC_TEAM = TF_GC_TEAM_TF_GC_TEAM_NOTEAM

func (m *CMsgGCChangeMatchPlayerTeamsRequest_Member) GetMemberId() uint64 {
	if m != nil && m.MemberId != nil {
		return *m.MemberId
	}
	return 0
}

func (m *CMsgGCChangeMatchPlayerTeamsRequest_Member) GetNewTeam() TF_GC_TEAM {
	if m != nil && m.NewTeam != nil {
		return *m.NewTeam
	}
	return Default_CMsgGCChangeMatchPlayerTeamsRequest_Member_NewTeam
}

type CMsgGCChangeMatchPlayerTeamsResponse struct {
	Success          *bool  `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMsgGCChangeMatchPlayerTeamsResponse) Reset()         { *m = CMsgGCChangeMatchPlayerTeamsResponse{} }
func (m *CMsgGCChangeMatchPlayerTeamsResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgGCChangeMatchPlayerTeamsResponse) ProtoMessage()    {}
func (*CMsgGCChangeMatchPlayerTeamsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{144}
}

func (m *CMsgGCChangeMatchPlayerTeamsResponse) GetSuccess() bool {
	if m != nil && m.Success != nil {
		return *m.Success
	}
	return false
}

func init() {
	proto.RegisterType((*CMsgTFGoldenWrenchBroadcast)(nil), "CMsgTFGoldenWrenchBroadcast")
	proto.RegisterType((*CMsgTFSaxxyBroadcast)(nil), "CMsgTFSaxxyBroadcast")
	proto.RegisterType((*CMsgGCTFSpecificItemBroadcast)(nil), "CMsgGCTFSpecificItemBroadcast")
	proto.RegisterType((*CMsgTFWorldStatus)(nil), "CMsgTFWorldStatus")
	proto.RegisterType((*CSOTFDuelSummary)(nil), "CSOTFDuelSummary")
	proto.RegisterType((*CSOTFMapContribution)(nil), "CSOTFMapContribution")
	proto.RegisterType((*CMsgTFVoteKickBanPlayer)(nil), "CMsgTFVoteKickBanPlayer")
	proto.RegisterType((*CMsgTFVoteKickBanPlayerResult)(nil), "CMsgTFVoteKickBanPlayerResult")
	proto.RegisterType((*CMsgTFFreeTrialChooseMostHelpfulFriend)(nil), "CMsgTFFreeTrialChooseMostHelpfulFriend")
	proto.RegisterType((*CMsgTFRequestTF2Friends)(nil), "CMsgTFRequestTF2Friends")
	proto.RegisterType((*CMsgTFRequestTF2FriendsResponse)(nil), "CMsgTFRequestTF2FriendsResponse")
	proto.RegisterType((*CSOTFPlayerInfo)(nil), "CSOTFPlayerInfo")
	proto.RegisterType((*CMsgTFThankedBySomeone)(nil), "CMsgTFThankedBySomeone")
	proto.RegisterType((*CMsgTFThankedSomeone)(nil), "CMsgTFThankedSomeone")
	proto.RegisterType((*CMsgTFFreeTrialConvertedToPremium)(nil), "CMsgTFFreeTrialConvertedToPremium")
	proto.RegisterType((*CMsgSaxxyAwarded)(nil), "CMsgSaxxyAwarded")
	proto.RegisterType((*CMsgReplaySubmitContestEntry)(nil), "CMsgReplaySubmitContestEntry")
	proto.RegisterType((*CMsgReplaySubmitContestEntryResponse)(nil), "CMsgReplaySubmitContestEntryResponse")
	proto.RegisterType((*CReplayCachedContestData)(nil), "CReplayCachedContestData")
	proto.RegisterType((*CMsgTFCoaching_AddToCoaches)(nil), "CMsgTFCoaching_AddToCoaches")
	proto.RegisterType((*CMsgTFCoaching_RemoveFromCoaches)(nil), "CMsgTFCoaching_RemoveFromCoaches")
	proto.RegisterType((*CMsgTFCoaching_FindCoach)(nil), "CMsgTFCoaching_FindCoach")
	proto.RegisterType((*CMsgTFCoaching_FindCoachResponse)(nil), "CMsgTFCoaching_FindCoachResponse")
	proto.RegisterType((*CMsgTFCoaching_AskCoach)(nil), "CMsgTFCoaching_AskCoach")
	proto.RegisterType((*CMsgTFCoaching_AskCoachResponse)(nil), "CMsgTFCoaching_AskCoachResponse")
	proto.RegisterType((*CMsgTFCoaching_CoachJoinGame)(nil), "CMsgTFCoaching_CoachJoinGame")
	proto.RegisterType((*CMsgTFCoaching_CoachJoining)(nil), "CMsgTFCoaching_CoachJoining")
	proto.RegisterType((*CMsgTFCoaching_CoachJoined)(nil), "CMsgTFCoaching_CoachJoined")
	proto.RegisterType((*CMsgTFCoaching_LikeCurrentCoach)(nil), "CMsgTFCoaching_LikeCurrentCoach")
	proto.RegisterType((*CMsgTFCoaching_RemoveCurrentCoach)(nil), "CMsgTFCoaching_RemoveCurrentCoach")
	proto.RegisterType((*CMsgTFQuickplay_ScoreServers)(nil), "CMsgTFQuickplay_ScoreServers")
	proto.RegisterType((*CMsgTFQuickplay_ScoreServers_ServerInfo)(nil), "CMsgTFQuickplay_ScoreServers.ServerInfo")
	proto.RegisterType((*CMsgTFQuickplay_ScoreServersResponse)(nil), "CMsgTFQuickplay_ScoreServersResponse")
	proto.RegisterType((*CMsgTFQuickplay_ScoreServersResponse_ServerInfo)(nil), "CMsgTFQuickplay_ScoreServersResponse.ServerInfo")
	proto.RegisterType((*CMsgTFQuickplay_PlayerJoining)(nil), "CMsgTFQuickplay_PlayerJoining")
	proto.RegisterType((*CMsgGC_GameServer_LevelInfo)(nil), "CMsgGC_GameServer_LevelInfo")
	proto.RegisterType((*CMsgGC_GameServer_AuthChallenge)(nil), "CMsgGC_GameServer_AuthChallenge")
	proto.RegisterType((*CMsgGC_GameServer_AuthResult)(nil), "CMsgGC_GameServer_AuthResult")
	proto.RegisterType((*CMsgGC_GameServer_AuthChallengeResponse)(nil), "CMsgGC_GameServer_AuthChallengeResponse")
	proto.RegisterType((*CMsgGC_GameServer_CreateIdentity)(nil), "CMsgGC_GameServer_CreateIdentity")
	proto.RegisterType((*CMsgGC_GameServer_CreateIdentityResponse)(nil), "CMsgGC_GameServer_CreateIdentityResponse")
	proto.RegisterType((*CMsgGC_GameServer_List)(nil), "CMsgGC_GameServer_List")
	proto.RegisterType((*CMsgGC_GameServer_ListResponse)(nil), "CMsgGC_GameServer_ListResponse")
	proto.RegisterType((*CMsgGC_GameServer_ListResponse_GameServerIdentity)(nil), "CMsgGC_GameServer_ListResponse.GameServerIdentity")
	proto.RegisterType((*CMsgGC_GameServer_ResetIdentity)(nil), "CMsgGC_GameServer_ResetIdentity")
	proto.RegisterType((*CMsgGC_GameServer_ResetIdentityResponse)(nil), "CMsgGC_GameServer_ResetIdentityResponse")
	proto.RegisterType((*CMsgGC_GameServer_AckPolicy)(nil), "CMsgGC_GameServer_AckPolicy")
	proto.RegisterType((*CMsgGC_GameServer_AckPolicyResponse)(nil), "CMsgGC_GameServer_AckPolicyResponse")
	proto.RegisterType((*CMsgGC_Client_UseServerModificationItem)(nil), "CMsgGC_Client_UseServerModificationItem")
	proto.RegisterType((*CMsgGC_Client_UseServerModificationItem_Response)(nil), "CMsgGC_Client_UseServerModificationItem_Response")
	proto.RegisterType((*CMsgGC_GameServer_UseServerModificationItem)(nil), "CMsgGC_GameServer_UseServerModificationItem")
	proto.RegisterType((*CMsgGC_GameServer_UseServerModificationItem_Response)(nil), "CMsgGC_GameServer_UseServerModificationItem_Response")
	proto.RegisterType((*CMsgGC_GameServer_ServerModificationItemExpired)(nil), "CMsgGC_GameServer_ServerModificationItemExpired")
	proto.RegisterType((*CMsgGC_GameServer_ServerModificationItem)(nil), "CMsgGC_GameServer_ServerModificationItem")
	proto.RegisterType((*CMsgGC_Halloween_ReservedItem)(nil), "CMsgGC_Halloween_ReservedItem")
	proto.RegisterType((*CMsgGC_Halloween_GrantItem)(nil), "CMsgGC_Halloween_GrantItem")
	proto.RegisterType((*CMsgGC_Halloween_GrantItemResponse)(nil), "CMsgGC_Halloween_GrantItemResponse")
	proto.RegisterType((*CMsgGC_Halloween_ItemClaimed)(nil), "CMsgGC_Halloween_ItemClaimed")
	proto.RegisterType((*CMsgGC_PickupItemEligibility_Query)(nil), "CMsgGC_PickupItemEligibility_Query")
	proto.RegisterType((*CMsgGC_PickupItemEligibility_QueryResponse)(nil), "CMsgGC_PickupItemEligibility_QueryResponse")
	proto.RegisterType((*CSOTFPartyMember)(nil), "CSOTFPartyMember")
	proto.RegisterType((*CMsgMatchSearchCriteria)(nil), "CMsgMatchSearchCriteria")
	proto.RegisterType((*CMsgCasualMatchmakingSearchCriteria)(nil), "CMsgCasualMatchmakingSearchCriteria")
	proto.RegisterType((*CMsgCreateOrUpdateParty)(nil), "CMsgCreateOrUpdateParty")
	proto.RegisterType((*CMsgCreateOrUpdatePartyReply)(nil), "CMsgCreateOrUpdatePartyReply")
	proto.RegisterType((*CSOTFParty)(nil), "CSOTFParty")
	proto.RegisterType((*CSOTFPartyInvite)(nil), "CSOTFPartyInvite")
	proto.RegisterType((*CSOTFPartyInvite_PartyMember)(nil), "CSOTFPartyInvite.PartyMember")
	proto.RegisterType((*CTFLobbyMember)(nil), "CTFLobbyMember")
	proto.RegisterType((*CLobbyPendingPlayerReport)(nil), "CLobbyPendingPlayerReport")
	proto.RegisterType((*CSOTFGameServerLobby)(nil), "CSOTFGameServerLobby")
	proto.RegisterType((*CMsgExitMatchmaking)(nil), "CMsgExitMatchmaking")
	proto.RegisterType((*CMsgAcceptInvite)(nil), "CMsgAcceptInvite")
	proto.RegisterType((*CMsgAcceptInviteResponse)(nil), "CMsgAcceptInviteResponse")
	proto.RegisterType((*CMsgReadyUp)(nil), "CMsgReadyUp")
	proto.RegisterType((*CMsgMatchmakingSearchCountRequest)(nil), "CMsgMatchmakingSearchCountRequest")
	proto.RegisterType((*CMsgMatchmakingSearchCountResponse)(nil), "CMsgMatchmakingSearchCountResponse")
	proto.RegisterType((*CMsgKickedFromMatchmakingQueue)(nil), "CMsgKickedFromMatchmakingQueue")
	proto.RegisterType((*CMsgTFJoinChatChannel)(nil), "CMsgTFJoinChatChannel")
	proto.RegisterType((*CMsgTFLeaveChatChannel)(nil), "CMsgTFLeaveChatChannel")
	proto.RegisterType((*CMsgTFJoinChatChannelResponse)(nil), "CMsgTFJoinChatChannelResponse")
	proto.RegisterType((*CMsgTFJoinChatChannelResponse_ChatMember)(nil), "CMsgTFJoinChatChannelResponse.ChatMember")
	proto.RegisterType((*CMsgTFOtherJoinedChatChannel)(nil), "CMsgTFOtherJoinedChatChannel")
	proto.RegisterType((*CMsgTFOtherLeftChatChannel)(nil), "CMsgTFOtherLeftChatChannel")
	proto.RegisterType((*CMsgTFRequestDefaultChatChannel)(nil), "CMsgTFRequestDefaultChatChannel")
	proto.RegisterType((*CMsgTFRequestDefaultChatChannelResponse)(nil), "CMsgTFRequestDefaultChatChannelResponse")
	proto.RegisterType((*CMsgTFRequestChatChannelList)(nil), "CMsgTFRequestChatChannelList")
	proto.RegisterType((*CMsgTFRequestChatChannelListResponse)(nil), "CMsgTFRequestChatChannelListResponse")
	proto.RegisterType((*CMsgTFRequestChatChannelListResponse_ChatChannel)(nil), "CMsgTFRequestChatChannelListResponse.ChatChannel")
	proto.RegisterType((*CMsgGameServerMatchmakingStatus)(nil), "CMsgGameServerMatchmakingStatus")
	proto.RegisterType((*CMsgGameServerMatchmakingStatus_Player)(nil), "CMsgGameServerMatchmakingStatus.Player")
	proto.RegisterType((*CMsgMatchmakingProgress)(nil), "CMsgMatchmakingProgress")
	proto.RegisterType((*CMsgMvMVictoryInfo)(nil), "CMsgMvMVictoryInfo")
	proto.RegisterType((*CMsgMvMVictoryInfo_Item)(nil), "CMsgMvMVictoryInfo.Item")
	proto.RegisterType((*CMsgMvMVictoryInfo_Player)(nil), "CMsgMvMVictoryInfo.Player")
	proto.RegisterType((*CGCMsgTFHelloResponse)(nil), "CGCMsgTFHelloResponse")
	proto.RegisterType((*CGCMsgTFSync)(nil), "CGCMsgTFSync")
	proto.RegisterType((*CGCMsgTFSyncEx)(nil), "CGCMsgTFSyncEx")
	proto.RegisterType((*CMsgMvMVictory)(nil), "CMsgMvMVictory")
	proto.RegisterType((*CMsgMvMVictory_Player)(nil), "CMsgMvMVictory.Player")
	proto.RegisterType((*CMsgMvMMannUpVictoryReply)(nil), "CMsgMvMMannUpVictoryReply")
	proto.RegisterType((*CMsgGameServerKickingLobby)(nil), "CMsgGameServerKickingLobby")
	proto.RegisterType((*CMsgGameServerKickingLobbyResponse)(nil), "CMsgGameServerKickingLobbyResponse")
	proto.RegisterType((*CMsgLeaveGameAndPrepareToJoinParty)(nil), "CMsgLeaveGameAndPrepareToJoinParty")
	proto.RegisterType((*CMsgPlayerLeftMatch)(nil), "CMsgPlayerLeftMatch")
	proto.RegisterType((*CMsgPlayerLeftMatchResponse)(nil), "CMsgPlayerLeftMatchResponse")
	proto.RegisterType((*CMsgHalloween_ServerBossEvent)(nil), "CMsgHalloween_ServerBossEvent")
	proto.RegisterType((*CMsgHalloween_Merasmus2012)(nil), "CMsgHalloween_Merasmus2012")
	proto.RegisterType((*CMsgUpdateHalloweenMerasmusLootLevel)(nil), "CMsgUpdateHalloweenMerasmusLootLevel")
	proto.RegisterType((*CMsgUpdateHalloweenMerasmusLootLevel_Player)(nil), "CMsgUpdateHalloweenMerasmusLootLevel.Player")
	proto.RegisterType((*CAttribute_String)(nil), "CAttribute_String")
	proto.RegisterType((*CAttribute_DynamicRecipeComponent)(nil), "CAttribute_DynamicRecipeComponent")
	proto.RegisterType((*CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT)(nil), "CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT")
	proto.RegisterType((*CAttribute_ItemSlotCriteria)(nil), "CAttribute_ItemSlotCriteria")
	proto.RegisterType((*CMsgSetItemSlotAttribute)(nil), "CMsgSetItemSlotAttribute")
	proto.RegisterType((*CSOWarData)(nil), "CSOWarData")
	proto.RegisterType((*CGCMsgGC_War_IndividualUpdate)(nil), "CGCMsgGC_War_IndividualUpdate")
	proto.RegisterType((*CGCMsgGC_War_JoinWar)(nil), "CGCMsgGC_War_JoinWar")
	proto.RegisterType((*CGCMsgGC_War_RequestGlobalStats)(nil), "CGCMsgGC_War_RequestGlobalStats")
	proto.RegisterType((*CGCMsgGC_War_GlobalStatsResponse)(nil), "CGCMsgGC_War_GlobalStatsResponse")
	proto.RegisterType((*CGCMsgGC_War_GlobalStatsResponse_SideScore)(nil), "CGCMsgGC_War_GlobalStatsResponse.SideScore")
	proto.RegisterType((*CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate)(nil), "CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate")
	proto.RegisterType((*CAttribute_WorldItemPlacement)(nil), "CAttribute_WorldItemPlacement")
	proto.RegisterType((*CGCMsg_WorldItemPlacement_Update)(nil), "CGCMsg_WorldItemPlacement_Update")
	proto.RegisterType((*CMsgAcknowledgeXP)(nil), "CMsgAcknowledgeXP")
	proto.RegisterType((*CMsgTFXPSource)(nil), "CMsgTFXPSource")
	proto.RegisterType((*CMsgTFXPSourceBreakdown)(nil), "CMsgTFXPSourceBreakdown")
	proto.RegisterType((*CMsgTFClientInit)(nil), "CMsgTFClientInit")
	proto.RegisterType((*CMsgGCNotification)(nil), "CMsgGCNotification")
	proto.RegisterType((*CMsgGCNotificationQueue)(nil), "CMsgGCNotificationQueue")
	proto.RegisterType((*CMsgNotificationAcknowledge)(nil), "CMsgNotificationAcknowledge")
	proto.RegisterType((*CMsgNotificationAcknowledgeReply)(nil), "CMsgNotificationAcknowledgeReply")
	proto.RegisterType((*CMsgGC_Match_Result)(nil), "CMsgGC_Match_Result")
	proto.RegisterType((*CMsgGC_Match_Result_Player)(nil), "CMsgGC_Match_Result.Player")
	proto.RegisterType((*CMsgGC_Match_ResultResponse)(nil), "CMsgGC_Match_ResultResponse")
	proto.RegisterType((*CEconItemPreviewDataBlock)(nil), "CEconItemPreviewDataBlock")
	proto.RegisterType((*CMsgGC_Client2GCEconPreviewDataBlockRequest)(nil), "CMsgGC_Client2GCEconPreviewDataBlockRequest")
	proto.RegisterType((*CMsgGC_Client2GCEconPreviewDataBlockResponse)(nil), "CMsgGC_Client2GCEconPreviewDataBlockResponse")
	proto.RegisterType((*CSOTFLadderPlayerStats)(nil), "CSOTFLadderPlayerStats")
	proto.RegisterType((*CMsgGC_TFVoteKickPlayerRequest)(nil), "CMsgGC_TFVoteKickPlayerRequest")
	proto.RegisterType((*CMsgGC_VoteKickPlayerRequestResponse)(nil), "CMsgGC_VoteKickPlayerRequestResponse")
	proto.RegisterType((*CMsgGC_DailyCompetitiveStatsRollup)(nil), "CMsgGC_DailyCompetitiveStatsRollup")
	proto.RegisterType((*CMsgGC_DailyCompetitiveStatsRollup_Response)(nil), "CMsgGC_DailyCompetitiveStatsRollup_Response")
	proto.RegisterType((*CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry)(nil), "CMsgGC_DailyCompetitiveStatsRollup_Response.RankBucketEntry")
	proto.RegisterType((*CMsgGC_ReportPlayer)(nil), "CMsgGC_ReportPlayer")
	proto.RegisterType((*CSOTFMatchResultPlayerStats)(nil), "CSOTFMatchResultPlayerStats")
	proto.RegisterType((*CMsgGCRequestMatchMakerStats)(nil), "CMsgGCRequestMatchMakerStats")
	proto.RegisterType((*CMsgGCDataCenterPopulation)(nil), "CMsgGCDataCenterPopulation")
	proto.RegisterType((*CMsgGCMatchGroupDataCenterPopulation)(nil), "CMsgGCMatchGroupDataCenterPopulation")
	proto.RegisterType((*CMsgGCMatchMakerStatsResponse)(nil), "CMsgGCMatchMakerStatsResponse")
	proto.RegisterType((*CMsgGCMatchHistoryLoad)(nil), "CMsgGCMatchHistoryLoad")
	proto.RegisterType((*CMsgGCDataCenterPing_Update)(nil), "CMsgGCDataCenterPing_Update")
	proto.RegisterType((*CMsgGCDataCenterPing_Update_PingEntry)(nil), "CMsgGCDataCenterPing_Update.PingEntry")
	proto.RegisterType((*CMsgGC_KickPlayerFromLobby)(nil), "CMsgGC_KickPlayerFromLobby")
	proto.RegisterType((*CMsgGCSurveyRequest)(nil), "CMsgGCSurveyRequest")
	proto.RegisterType((*CMsgGCSurveyResponse)(nil), "CMsgGCSurveyResponse")
	proto.RegisterType((*CMsgGCNewMatchForLobbyRequest)(nil), "CMsgGCNewMatchForLobbyRequest")
	proto.RegisterType((*CMsgGCNewMatchForLobbyResponse)(nil), "CMsgGCNewMatchForLobbyResponse")
	proto.RegisterType((*CMsgGCChangeMatchPlayerTeamsRequest)(nil), "CMsgGCChangeMatchPlayerTeamsRequest")
	proto.RegisterType((*CMsgGCChangeMatchPlayerTeamsRequest_Member)(nil), "CMsgGCChangeMatchPlayerTeamsRequest.Member")
	proto.RegisterType((*CMsgGCChangeMatchPlayerTeamsResponse)(nil), "CMsgGCChangeMatchPlayerTeamsResponse")
	proto.RegisterEnum("ETFGCMsg", ETFGCMsg_name, ETFGCMsg_value)
	proto.RegisterEnum("EServerModificationItemType", EServerModificationItemType_name, EServerModificationItemType_value)
	proto.RegisterEnum("TF_MatchmakingMode", TF_MatchmakingMode_name, TF_MatchmakingMode_value)
	proto.RegisterEnum("TF_Matchmaking_WizardStep", TF_Matchmaking_WizardStep_name, TF_Matchmaking_WizardStep_value)
	proto.RegisterEnum("TF_GC_GameState", TF_GC_GameState_name, TF_GC_GameState_value)
	proto.RegisterEnum("TF_GC_TEAM", TF_GC_TEAM_name, TF_GC_TEAM_value)
	proto.RegisterEnum("TFMatchLeaveReason", TFMatchLeaveReason_name, TFMatchLeaveReason_value)
	proto.RegisterEnum("TFLobbyReadyState", TFLobbyReadyState_name, TFLobbyReadyState_value)
	proto.RegisterEnum("ChatChannelTypeT", ChatChannelTypeT_name, ChatChannelTypeT_value)
	proto.RegisterEnum("ServerMatchmakingState", ServerMatchmakingState_name, ServerMatchmakingState_value)
	proto.RegisterEnum("SurveyQuestionType", SurveyQuestionType_name, SurveyQuestionType_value)
	proto.RegisterEnum("CMsgGC_GameServer_CreateIdentityResponse_EStatus", CMsgGC_GameServer_CreateIdentityResponse_EStatus_name, CMsgGC_GameServer_CreateIdentityResponse_EStatus_value)
	proto.RegisterEnum("CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse", CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse_name, CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse_value)
	proto.RegisterEnum("CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse", CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse_name, CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse_value)
	proto.RegisterEnum("CSOTFParty_State", CSOTFParty_State_name, CSOTFParty_State_value)
	proto.RegisterEnum("CTFLobbyMember_ConnectState", CTFLobbyMember_ConnectState_name, CTFLobbyMember_ConnectState_value)
	proto.RegisterEnum("CSOTFGameServerLobby_State", CSOTFGameServerLobby_State_name, CSOTFGameServerLobby_State_value)
	proto.RegisterEnum("CSOTFGameServerLobby_LobbyType", CSOTFGameServerLobby_LobbyType_name, CSOTFGameServerLobby_LobbyType_value)
	proto.RegisterEnum("CSOTFGameServerLobby_WarMatch", CSOTFGameServerLobby_WarMatch_name, CSOTFGameServerLobby_WarMatch_value)
	proto.RegisterEnum("CMsgGameServerMatchmakingStatus_PlayerConnectState", CMsgGameServerMatchmakingStatus_PlayerConnectState_name, CMsgGameServerMatchmakingStatus_PlayerConnectState_value)
	proto.RegisterEnum("CMsgGameServerMatchmakingStatus_Event", CMsgGameServerMatchmakingStatus_Event_name, CMsgGameServerMatchmakingStatus_Event_value)
	proto.RegisterEnum("CMsgMvMVictoryInfo_GrantReason", CMsgMvMVictoryInfo_GrantReason_name, CMsgMvMVictoryInfo_GrantReason_value)
	proto.RegisterEnum("CMsgTFXPSource_XPSourceType", CMsgTFXPSource_XPSourceType_name, CMsgTFXPSource_XPSourceType_value)
	proto.RegisterEnum("CMsgGCNotification_NotificationType", CMsgGCNotification_NotificationType_name, CMsgGCNotification_NotificationType_value)
	proto.RegisterEnum("CMsgGC_Match_Result_Status", CMsgGC_Match_Result_Status_name, CMsgGC_Match_Result_Status_value)
	proto.RegisterEnum("CMsgGC_ReportPlayer_EReason", CMsgGC_ReportPlayer_EReason_name, CMsgGC_ReportPlayer_EReason_value)
	proto.RegisterEnum("CMsgGCDataCenterPing_Update_Status", CMsgGCDataCenterPing_Update_Status_name, CMsgGCDataCenterPing_Update_Status_value)
}

func init() { proto.RegisterFile("tf_gcmessages.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 12632 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0xbd, 0x69, 0x70, 0x24, 0x5b,
	0x56, 0x18, 0xdc, 0x55, 0xda, 0x8f, 0xb6, 0x54, 0xb6, 0xba, 0x5b, 0xad, 0xde, 0xb3, 0x5f, 0x3f,
	0xf5, 0xf6, 0xea, 0x75, 0xab, 0xdf, 0x2c, 0xf4, 0x4c, 0xf0, 0x51, 0x2a, 0x95, 0xd4, 0xf5, 0x9e,
	0x54, 0xa5, 0xce, 0x2a, 0x75, 0xbf, 0x07, 0x04, 0x49, 0xaa, 0xf2, 0xaa, 0x94, 0xa3, 0xac, 0xcc,
	0x7a, 0x99, 0x59, 0xa5, 0xd6, 0xfb, 0x22, 0x3e, 0xde, 0xcc, 0x7c, 0x1f, 0x7c, 0x03, 0xc6, 0x36,
	0x86, 0x01, 0x7b, 0xc0, 0x86, 0x00, 0x8c, 0x07, 0x1c, 0x06, 0x3b, 0x02, 0xfb, 0x07, 0x11, 0x63,
	0xff, 0x31, 0x66, 0xf1, 0xc2, 0x6e, 0x1b, 0x63, 0x22, 0xec, 0x30, 0x8b, 0x59, 0x8c, 0xc1, 0x66,
	0x0c, 0xc6, 0x30, 0xe3, 0xb8, 0xe7, 0xdc, 0x9b, 0x4b, 0x6d, 0xd2, 0x1b, 0xc6, 0x60, 0xf7, 0x8f,
	0x56, 0xe5, 0x39, 0xe7, 0x6e, 0xe7, 0xde, 0x7b, 0xb6, 0xbb, 0xc1, 0xd9, 0x70, 0xdf, 0x68, 0xd4,
	0x9b, 0x2c, 0x08, 0xcc, 0x06, 0x0b, 0x72, 0x2d, 0xdf, 0x0b, 0xbd, 0xe5, 0xb3, 0x41, 0xc8, 0xcc,
	0x66, 0x17, 0xf0, 0xdc, 0x9e, 0x19, 0xb0, 0x1e, 0x5a, 0xed, 0x18, 0x2e, 0x15, 0xb6, 0x83, 0x46,
	0x6d, 0x63, 0xd3, 0x73, 0x2c, 0xe6, 0x3e, 0xf7, 0x99, 0x5b, 0x3f, 0x58, 0xf3, 0x3d, 0xd3, 0xaa,
	0x9b, 0x41, 0xa8, 0xde, 0x84, 0xd9, 0x23, 0x04, 0x19, 0x6e, 0xbb, 0xb9, 0xc7, 0xfc, 0xa5, 0xcc,
	0xf5, 0xcc, 0xed, 0x31, 0x7d, 0x86, 0x80, 0x65, 0x84, 0xa9, 0x4b, 0x30, 0x61, 0x31, 0x87, 0x85,
	0xcc, 0x5a, 0xca, 0x5e, 0xcf, 0xdc, 0x9e, 0xd4, 0xe5, 0xa7, 0x7a, 0x09, 0xa6, 0xda, 0x01, 0xf3,
	0x0d, 0xd7, 0x6c, 0xb2, 0xa5, 0x91, 0xeb, 0x99, 0xdb, 0x53, 0xfa, 0x24, 0x07, 0x94, 0xcd, 0x26,
	0xd3, 0xbe, 0x12, 0x16, 0xa9, 0xe8, 0xaa, 0xf9, 0xe2, 0xc5, 0x71, 0x5c, 0xe6, 0x0a, 0xcc, 0xd7,
	0xcd, 0x90, 0x35, 0x3c, 0xff, 0x38, 0x5d, 0xea, 0x9c, 0x04, 0x8b, 0x72, 0x53, 0xb9, 0x67, 0xbb,
	0x72, 0xff, 0x86, 0x0c, 0x5c, 0xe1, 0xd9, 0x6f, 0x16, 0x6a, 0x1b, 0xd5, 0x16, 0xab, 0xdb, 0xfb,
	0x76, 0xbd, 0x14, 0xb2, 0x66, 0x5c, 0xce, 0x4b, 0x30, 0x67, 0x87, 0xac, 0x69, 0x58, 0x6c, 0xdf,
	0xb0, 0x5d, 0x8b, 0xbd, 0xc0, 0x62, 0x66, 0xf5, 0x19, 0x0e, 0x5d, 0x67, 0xfb, 0x25, 0x0e, 0xe3,
	0xb5, 0x39, 0x32, 0x03, 0xc3, 0x62, 0x41, 0xe8, 0xb7, 0xeb, 0xa1, 0xed, 0xb9, 0xa2, 0x91, 0x73,
	0x47, 0x66, 0xb0, 0x1e, 0x43, 0x4f, 0x6a, 0xeb, 0x02, 0xb5, 0xf5, 0xb9, 0xe7, 0x3b, 0x56, 0x35,
	0x34, 0xc3, 0x76, 0xa0, 0x6e, 0xc2, 0x95, 0x3d, 0x16, 0x9a, 0x46, 0x10, 0xfa, 0x2c, 0x08, 0x8c,
	0x90, 0x05, 0xa1, 0xc1, 0x3a, 0xcc, 0x0d, 0x0d, 0xb3, 0x1e, 0xda, 0x1d, 0x86, 0xf5, 0x99, 0x7c,
	0x3c, 0xb6, 0x6f, 0x3a, 0x01, 0xd3, 0x2f, 0x72, 0xda, 0x2a, 0x92, 0xd6, 0x58, 0x10, 0x16, 0x39,
	0x61, 0x1e, 0xe9, 0xb4, 0x77, 0xb3, 0xa0, 0x14, 0xaa, 0x95, 0xda, 0xc6, 0x7a, 0x9b, 0x39, 0xd5,
	0x76, 0xb3, 0x69, 0xfa, 0xc7, 0xea, 0x4d, 0x00, 0xb3, 0x5e, 0xf7, 0xda, 0x6e, 0x68, 0xd8, 0x16,
	0x35, 0x6d, 0x6d, 0xf4, 0xdd, 0xef, 0xbb, 0x92, 0xd1, 0xa7, 0x04, 0xbc, 0x84, 0x1d, 0x64, 0xb5,
	0x99, 0x63, 0x1c, 0xd9, 0x6e, 0x80, 0xed, 0x9a, 0xd5, 0x27, 0x39, 0xe0, 0xb9, 0xed, 0x06, 0xea,
	0x35, 0x98, 0x46, 0xa4, 0xe3, 0x05, 0x01, 0x0b, 0xb0, 0x4d, 0xb3, 0x3a, 0x70, 0xd0, 0x16, 0x42,
	0xd4, 0x57, 0x61, 0xd1, 0x31, 0x83, 0xd0, 0x40, 0xaa, 0x44, 0x61, 0xa3, 0x48, 0xb9, 0xc0, 0x71,
	0xbc, 0x46, 0xf9, 0xa8, 0xb8, 0x1c, 0x9c, 0x8d, 0x13, 0x84, 0x76, 0x93, 0x05, 0xa1, 0xd9, 0x6c,
	0x2d, 0x8d, 0xa5, 0xe9, 0x6b, 0x12, 0xa1, 0xde, 0x06, 0x25, 0xa6, 0x0f, 0x90, 0x6b, 0x4b, 0xe3,
	0x48, 0x3c, 0x27, 0x89, 0x89, 0x97, 0xda, 0x37, 0x66, 0x60, 0x11, 0x59, 0xb0, 0x6d, 0xb6, 0x0a,
	0x9e, 0x1b, 0xfa, 0xf6, 0x5e, 0x1b, 0xbb, 0xe5, 0x54, 0x6c, 0xb8, 0x01, 0x53, 0xf1, 0x28, 0xc8,
	0x26, 0x68, 0x26, 0x2d, 0x39, 0x0e, 0x5e, 0x01, 0xb5, 0x9e, 0xc8, 0xd7, 0x70, 0x58, 0x87, 0x39,
	0x82, 0x27, 0x0b, 0x49, 0xcc, 0x16, 0x47, 0x68, 0x07, 0x70, 0x81, 0x3a, 0xfc, 0x99, 0x17, 0xb2,
	0x37, 0xec, 0xfa, 0xe1, 0x9a, 0xe9, 0xee, 0x38, 0xe6, 0x31, 0xf3, 0xd5, 0xfb, 0xa0, 0xc6, 0x35,
	0x32, 0x82, 0xf6, 0xde, 0x47, 0x58, 0x3d, 0x14, 0x63, 0x4f, 0x89, 0xea, 0x54, 0x25, 0x38, 0xef,
	0x84, 0x43, 0xbb, 0x7e, 0x68, 0xf8, 0xcc, 0x0c, 0xc4, 0xd8, 0x9b, 0xd5, 0x81, 0x83, 0x74, 0x84,
	0x68, 0x9f, 0xc9, 0xd2, 0x40, 0xef, 0x53, 0x94, 0xce, 0x82, 0xb6, 0x13, 0xaa, 0x0f, 0x60, 0x31,
	0x51, 0xa0, 0xed, 0xda, 0xa1, 0x6d, 0x86, 0x9e, 0x2f, 0x8a, 0x54, 0xa3, 0x22, 0x4b, 0x12, 0x33,
	0xa0, 0x8a, 0xd9, 0xd3, 0x55, 0x71, 0xa4, 0xbb, 0x8a, 0x7c, 0x0e, 0x21, 0x41, 0xd0, 0xae, 0xd7,
	0x59, 0x10, 0xec, 0xb7, 0x1d, 0x1c, 0x22, 0x93, 0xfa, 0x1c, 0x07, 0x57, 0x23, 0xa8, 0xaa, 0xc1,
	0xac, 0xdb, 0x6e, 0x1a, 0xc7, 0x2c, 0x30, 0x3a, 0x5e, 0xc8, 0x02, 0x31, 0x32, 0xa6, 0xdd, 0x76,
	0xf3, 0x2d, 0x16, 0xf0, 0xf6, 0x05, 0xea, 0x75, 0x98, 0xe1, 0x34, 0xae, 0x27, 0x48, 0x68, 0x3c,
	0x80, 0xdb, 0x6e, 0x96, 0x3d, 0xa2, 0xb8, 0x0f, 0x2a, 0xa7, 0x68, 0x79, 0x41, 0x60, 0xef, 0x39,
	0x4c, 0xd0, 0x4d, 0x50, 0xed, 0xdd, 0x76, 0x73, 0x47, 0x20, 0x90, 0x5a, 0xab, 0xc1, 0xcb, 0xc4,
	0xbe, 0x0d, 0x9f, 0xb1, 0x9a, 0x6f, 0x9b, 0x4e, 0xe1, 0xc0, 0xf3, 0x02, 0xb6, 0xed, 0x05, 0xe1,
	0x13, 0xe6, 0xb4, 0xf6, 0xdb, 0xce, 0x86, 0x6f, 0x33, 0xd7, 0x52, 0xef, 0xc2, 0x42, 0x82, 0x2b,
	0xfb, 0x08, 0x14, 0x4c, 0x9c, 0x8f, 0x98, 0x42, 0xb4, 0xda, 0x63, 0xd9, 0xff, 0x3a, 0x7b, 0xbb,
	0xcd, 0x82, 0xb0, 0xb6, 0xb1, 0x4a, 0x18, 0x9c, 0x56, 0x71, 0x36, 0xc1, 0x52, 0xe6, 0xfa, 0x08,
	0xaf, 0x7f, 0x94, 0x41, 0xa0, 0xad, 0xc1, 0xb5, 0x01, 0x69, 0x75, 0x16, 0xb4, 0x3c, 0x37, 0x60,
	0xa7, 0xc9, 0x63, 0x1e, 0xa7, 0x03, 0x0d, 0x84, 0x92, 0xbb, 0xef, 0xf1, 0xd9, 0x8a, 0x8c, 0x63,
	0x47, 0x06, 0x97, 0x4b, 0x81, 0x71, 0xc0, 0x9c, 0x16, 0x93, 0x2d, 0x58, 0xe0, 0x0c, 0x64, 0x47,
	0xbb, 0x1c, 0xf3, 0x04, 0x11, 0xda, 0x1a, 0x9c, 0xa7, 0x7a, 0xd4, 0x0e, 0x4c, 0xf7, 0x90, 0x59,
	0x6b, 0xc7, 0x55, 0xaf, 0xc9, 0x3c, 0x97, 0xf1, 0x79, 0x19, 0x22, 0xcc, 0x37, 0x50, 0xd7, 0xc8,
	0xa9, 0x35, 0xaa, 0xcf, 0x09, 0x78, 0x95, 0x83, 0x4b, 0x96, 0x76, 0x5e, 0x0a, 0x79, 0x91, 0x87,
	0xc8, 0x41, 0xbb, 0x09, 0x37, 0xba, 0xb9, 0xee, 0xb9, 0x1d, 0xe6, 0x87, 0xcc, 0xaa, 0x79, 0x3b,
	0x3e, 0x6b, 0xda, 0xed, 0xa6, 0xf6, 0x14, 0x14, 0x4e, 0x84, 0xfa, 0x21, 0x7f, 0x64, 0xfa, 0x16,
	0xb3, 0xd4, 0x65, 0x98, 0x94, 0x6a, 0x40, 0xd4, 0x3c, 0xfa, 0x56, 0x6f, 0xc0, 0xcc, 0x91, 0xed,
	0xba, 0x42, 0x08, 0x73, 0x81, 0x36, 0x72, 0x7b, 0x4a, 0x9f, 0x26, 0x18, 0x97, 0xc3, 0x81, 0xf6,
	0x15, 0x70, 0x99, 0x67, 0xa9, 0xb3, 0x96, 0x63, 0x1e, 0x57, 0xdb, 0x7b, 0x4d, 0x3b, 0xe4, 0xe2,
	0x82, 0x0b, 0x54, 0x37, 0xf4, 0x8f, 0x39, 0x63, 0x8f, 0xbd, 0x76, 0xd8, 0xde, 0x63, 0x46, 0xdb,
	0x77, 0xb0, 0x84, 0x29, 0x1d, 0x04, 0x68, 0xd7, 0x77, 0x52, 0xe5, 0x67, 0xd3, 0xe5, 0x6b, 0x5f,
	0x06, 0x2f, 0x0d, 0xcb, 0x3c, 0xea, 0xbd, 0x25, 0x98, 0x10, 0x53, 0x81, 0x44, 0xbc, 0x2e, 0x3f,
	0xb5, 0x1f, 0xc9, 0xc0, 0x52, 0x81, 0xd2, 0x17, 0xcc, 0xfa, 0x01, 0xb3, 0x44, 0xfa, 0x75, 0x33,
	0x34, 0xd5, 0xcb, 0x30, 0x15, 0xcb, 0x4c, 0x9e, 0x70, 0x42, 0x8f, 0x01, 0xea, 0x3d, 0x1a, 0xf5,
	0x38, 0xd8, 0x0d, 0x92, 0x9a, 0xa6, 0xac, 0xe2, 0xbc, 0xdb, 0x6e, 0xe2, 0x68, 0xdf, 0xe2, 0x52,
	0xd3, 0x3c, 0x56, 0x5f, 0x86, 0xf9, 0x8e, 0x6d, 0x31, 0xcf, 0x60, 0xbc, 0x62, 0x38, 0x86, 0x46,
	0x70, 0x0c, 0xcd, 0x22, 0x18, 0xab, 0x5b, 0xb2, 0x02, 0x99, 0xe9, 0xbe, 0x63, 0x36, 0x12, 0x99,
	0x8e, 0x46, 0x99, 0x6e, 0x70, 0x84, 0xc8, 0x54, 0xbb, 0x22, 0x6d, 0x89, 0x82, 0x67, 0xd6, 0x0f,
	0x6c, 0xb7, 0x61, 0xe4, 0x2d, 0xab, 0xe6, 0xe1, 0x17, 0x0b, 0x34, 0x0d, 0xae, 0x77, 0xa1, 0x75,
	0xd6, 0xf4, 0x3a, 0x6c, 0xc3, 0xf7, 0x9a, 0x92, 0xe6, 0x19, 0x2c, 0x75, 0xd1, 0x6c, 0xd8, 0xae,
	0x85, 0x1f, 0xea, 0x63, 0x58, 0xee, 0x99, 0x7e, 0x86, 0x19, 0x18, 0x75, 0x8e, 0x15, 0x63, 0xe1,
	0x7c, 0xd7, 0x3c, 0xcc, 0x07, 0x98, 0x56, 0xfb, 0x9a, 0x9e, 0xb2, 0xa3, 0x7c, 0x93, 0x73, 0x6a,
	0xdf, 0x6b, 0xbb, 0x56, 0x22, 0xc3, 0x49, 0x1d, 0x10, 0x44, 0x15, 0xb8, 0x04, 0x53, 0x9c, 0x19,
	0x8e, 0x7d, 0xc8, 0x22, 0x65, 0xe9, 0xb6, 0x9b, 0x5b, 0xfc, 0x5b, 0xbd, 0x02, 0x80, 0xe9, 0x92,
	0xfa, 0x7f, 0x0a, 0x21, 0x68, 0x00, 0x04, 0x52, 0x1e, 0xc4, 0xbc, 0x09, 0x0e, 0x29, 0xdb, 0x2e,
	0x61, 0x1b, 0xb6, 0x2d, 0xe6, 0xf6, 0xd1, 0x07, 0x04, 0xe7, 0x42, 0x48, 0x90, 0x18, 0x76, 0x20,
	0x85, 0x10, 0x59, 0x24, 0xf3, 0x02, 0x51, 0x0a, 0x84, 0x10, 0x32, 0xa4, 0x20, 0xe9, 0x29, 0x34,
	0x6a, 0xf4, 0x87, 0x91, 0xa9, 0xac, 0x15, 0x52, 0xab, 0x39, 0x8d, 0x19, 0x04, 0x76, 0xc3, 0x6d,
	0xca, 0x4a, 0x4c, 0xea, 0x4b, 0x44, 0x21, 0x33, 0xc9, 0x47, 0x78, 0xed, 0xef, 0x65, 0x68, 0x3a,
	0x25, 0x4a, 0xc0, 0x1f, 0xaf, 0x7b, 0xb6, 0xbb, 0x69, 0x36, 0x19, 0x67, 0xd9, 0x47, 0x3c, 0xdb,
	0x35, 0x1a, 0x9c, 0x29, 0x94, 0xdb, 0xe4, 0x47, 0x24, 0xf2, 0x16, 0xcc, 0x05, 0xcc, 0xef, 0x30,
	0xdf, 0x30, 0x2d, 0x8b, 0xdb, 0x35, 0x82, 0xa9, 0xb3, 0x04, 0xcd, 0x13, 0x90, 0xf7, 0x8b, 0x20,
	0x6b, 0x79, 0x7e, 0x28, 0xd5, 0x0b, 0x81, 0x76, 0x3c, 0x3f, 0x1c, 0xc0, 0xc0, 0xd1, 0xfe, 0x0c,
	0xd4, 0xda, 0x3d, 0xa3, 0x34, 0xaa, 0xb2, 0xed, 0x36, 0xb8, 0x68, 0x4b, 0x64, 0x96, 0x1c, 0x5b,
	0x73, 0x51, 0x56, 0xc3, 0xfa, 0x2d, 0x3b, 0xa0, 0xd8, 0x0d, 0x58, 0x1e, 0x54, 0x2c, 0xb3, 0x4e,
	0x5f, 0xaa, 0xf6, 0x65, 0x3d, 0x7d, 0xca, 0xc7, 0x5f, 0xa1, 0xed, 0xfb, 0xcc, 0xa5, 0x2e, 0xe2,
	0x43, 0x91, 0x8f, 0xd1, 0xd4, 0x38, 0x9e, 0xe2, 0x10, 0xca, 0x61, 0x5b, 0x8a, 0xde, 0xae, 0x79,
	0x98, 0xca, 0xe3, 0xf4, 0x15, 0xfa, 0x3b, 0x59, 0x39, 0x06, 0x9e, 0xb6, 0xed, 0xfa, 0x21, 0x17,
	0x5d, 0x46, 0xb5, 0xee, 0xf9, 0xac, 0x8a, 0x3d, 0x14, 0xa8, 0x6b, 0x30, 0x41, 0x9d, 0x45, 0x7a,
	0x6a, 0x7a, 0xf5, 0x76, 0x6e, 0x18, 0x7d, 0x8e, 0xfe, 0x72, 0x95, 0xa5, 0xcb, 0x84, 0xcb, 0x3f,
	0x9e, 0x01, 0x88, 0xe1, 0x7d, 0x46, 0x4e, 0xe6, 0x14, 0x23, 0x27, 0xdb, 0x33, 0x72, 0xc4, 0x8c,
	0x46, 0x75, 0x28, 0x06, 0x16, 0x9f, 0xd1, 0xa8, 0x04, 0xd5, 0x8b, 0x30, 0x19, 0x29, 0xb7, 0x51,
	0x54, 0x6e, 0x13, 0x01, 0x69, 0x35, 0x9e, 0xae, 0x69, 0xbe, 0x10, 0xe9, 0xc8, 0x46, 0x99, 0x6c,
	0x9a, 0x2f, 0x28, 0xdd, 0x15, 0x00, 0x74, 0x04, 0x02, 0xde, 0x28, 0x34, 0x4f, 0xb2, 0x3a, 0xba,
	0x06, 0xd8, 0x4a, 0xed, 0x07, 0xb2, 0xa4, 0x25, 0x06, 0xb5, 0x3f, 0x9a, 0x9a, 0xaf, 0x77, 0xf3,
	0xed, 0x41, 0xee, 0x34, 0xe9, 0xfa, 0xf2, 0xef, 0xef, 0xff, 0xaf, 0xe1, 0xdf, 0x35, 0x98, 0x0e,
	0xbd, 0xd0, 0x74, 0x44, 0x5b, 0x47, 0xb0, 0xad, 0x80, 0x20, 0xac, 0xda, 0x30, 0x1e, 0xde, 0x84,
	0x59, 0xaf, 0xc5, 0x0d, 0xe6, 0x40, 0xa4, 0x26, 0x3e, 0xce, 0x08, 0x20, 0x31, 0xeb, 0x4b, 0xa5,
	0x6d, 0x1b, 0xb7, 0x99, 0x2c, 0x1a, 0x39, 0x5d, 0xaf, 0xf4, 0x9a, 0xf7, 0x09, 0xc3, 0x5e, 0x33,
	0x68, 0xb2, 0x6f, 0x16, 0x0c, 0x2e, 0x71, 0x88, 0x03, 0x06, 0x5a, 0xe8, 0xc8, 0x87, 0x1b, 0x30,
	0x83, 0x76, 0xbc, 0xe1, 0x78, 0xa6, 0x25, 0x4c, 0xa1, 0x49, 0x7d, 0x1a, 0x61, 0x5b, 0x08, 0xc2,
	0xc9, 0x84, 0x24, 0x09, 0x2f, 0x73, 0x0a, 0x21, 0x28, 0xd7, 0xb7, 0x68, 0x3a, 0xa6, 0x0b, 0xc8,
	0xb7, 0xc3, 0x83, 0xc2, 0x81, 0xe9, 0x38, 0xcc, 0x6d, 0x30, 0xf5, 0x0e, 0x28, 0x75, 0xf9, 0xc1,
	0x7d, 0x3d, 0xdb, 0x6d, 0x08, 0xbb, 0x62, 0x3e, 0x82, 0x57, 0x11, 0xac, 0x7d, 0x56, 0xc8, 0xd3,
	0xde, 0xec, 0x84, 0x29, 0xff, 0x12, 0xcc, 0x9a, 0xed, 0xf0, 0x80, 0xb9, 0xa1, 0xcd, 0xad, 0x0e,
	0x59, 0xe3, 0x34, 0x90, 0x1b, 0xfc, 0x5c, 0xe0, 0x1a, 0xa2, 0xf3, 0x82, 0xd0, 0x74, 0x2d, 0x5e,
	0x6a, 0x16, 0xdd, 0x68, 0xb5, 0x11, 0x65, 0x5d, 0x15, 0x18, 0xf5, 0x43, 0xb0, 0xdc, 0x2f, 0x85,
	0x11, 0xfa, 0x5c, 0xbd, 0x8c, 0x60, 0xba, 0x0b, 0xbd, 0xe9, 0x6a, 0x1c, 0xcd, 0x8d, 0x09, 0x3b,
	0x30, 0x3a, 0xa6, 0xd3, 0x91, 0x19, 0x08, 0xf3, 0x7e, 0xd6, 0x0e, 0x9e, 0x71, 0x28, 0x25, 0xe2,
	0x66, 0x8f, 0x88, 0x3e, 0x60, 0x5f, 0x4f, 0xe9, 0xf2, 0x53, 0xfb, 0xd6, 0x0c, 0xac, 0x9c, 0xc0,
	0xc6, 0x68, 0x5a, 0x3c, 0x82, 0xf3, 0xc9, 0xaa, 0xf6, 0xf4, 0xfe, 0xd9, 0xb8, 0x9a, 0xb1, 0xe3,
	0xf9, 0x7e, 0xb8, 0x70, 0x60, 0x06, 0x07, 0xcc, 0x32, 0x7a, 0xba, 0x82, 0x33, 0x65, 0x46, 0x3f,
	0x47, 0xe8, 0x42, 0x57, 0x87, 0xe4, 0xc9, 0x6e, 0x48, 0xd7, 0xab, 0xe0, 0x33, 0x33, 0x64, 0x25,
	0x2e, 0xd6, 0xed, 0xf0, 0xf8, 0xa4, 0x21, 0xf8, 0x5d, 0x23, 0x70, 0xfb, 0xa4, 0x3c, 0xa2, 0xc6,
	0xad, 0x80, 0xf4, 0x24, 0x8c, 0x3a, 0x52, 0xc8, 0x1e, 0x96, 0x52, 0x97, 0xd2, 0x59, 0x43, 0xb8,
	0x90, 0x1d, 0xcc, 0x85, 0xae, 0x5e, 0xb6, 0x45, 0xe9, 0x46, 0xe8, 0x1d, 0x32, 0x57, 0xd8, 0x2c,
	0x89, 0x5e, 0x96, 0xb5, 0xab, 0x71, 0xb4, 0x6a, 0xc2, 0xb8, 0xf0, 0xc0, 0x79, 0xe7, 0xce, 0xad,
	0x3e, 0xcc, 0x9d, 0xb6, 0x55, 0xb9, 0x22, 0x39, 0xe9, 0x8f, 0xcf, 0x1f, 0xd2, 0x0f, 0x63, 0x93,
	0xb9, 0xcc, 0xb7, 0xeb, 0x1b, 0xa6, 0xed, 0xb4, 0x7d, 0xa6, 0x8b, 0x8c, 0xb5, 0x0e, 0x4c, 0x08,
	0x52, 0x75, 0x19, 0x06, 0x10, 0x2b, 0x67, 0xd4, 0xcb, 0x30, 0x2f, 0x71, 0x35, 0xcf, 0xdb, 0x36,
	0xdd, 0x63, 0xe5, 0xf3, 0xf2, 0x5f, 0x26, 0x89, 0x2d, 0x7b, 0x3b, 0xbe, 0xdd, 0x09, 0x94, 0xcf,
	0xc5, 0xd8, 0xb3, 0x31, 0x56, 0xb0, 0x52, 0xc9, 0x68, 0x1f, 0x20, 0x47, 0xa7, 0x4b, 0x4a, 0xd8,
	0x41, 0x78, 0x52, 0xdf, 0xfe, 0x51, 0x16, 0xae, 0xf6, 0x4f, 0x19, 0xf5, 0xe8, 0x57, 0x83, 0xea,
	0x1d, 0xb9, 0xcc, 0x32, 0x12, 0x9c, 0x97, 0x02, 0x7d, 0x35, 0x37, 0x3c, 0x71, 0x6e, 0xb3, 0xa7,
	0x2f, 0x74, 0x05, 0x73, 0x8b, 0x11, 0xc1, 0xf2, 0x67, 0x33, 0xa0, 0xf6, 0x12, 0x7e, 0x61, 0xf3,
	0x64, 0xf8, 0x08, 0xc9, 0x0e, 0x1f, 0x21, 0x83, 0xc4, 0xce, 0xc8, 0x17, 0x28, 0x76, 0x46, 0x87,
	0x8a, 0x1d, 0xed, 0x59, 0x3f, 0xd1, 0xab, 0xb3, 0x80, 0x85, 0x7f, 0x2a, 0x1e, 0x68, 0xff, 0xa1,
	0xaf, 0x30, 0x4a, 0x65, 0x1c, 0xf5, 0xee, 0x06, 0x5c, 0x1f, 0xcc, 0x2f, 0xc3, 0xe7, 0x69, 0xc4,
	0x04, 0xbe, 0x3c, 0x80, 0x6b, 0x98, 0xef, 0x9f, 0xfd, 0x74, 0x96, 0xce, 0x5a, 0x97, 0xc4, 0xad,
	0x1f, 0xee, 0x78, 0x8e, 0x5d, 0x3f, 0xd6, 0x9e, 0xc3, 0xcd, 0x21, 0xe8, 0xa8, 0xfd, 0xe7, 0x61,
	0xdc, 0x47, 0xcd, 0x24, 0x18, 0x2a, 0xbe, 0x92, 0xa2, 0x3e, 0x9b, 0x16, 0xf5, 0x6b, 0x11, 0x73,
	0x0b, 0x8e, 0xcd, 0xbd, 0x98, 0xdd, 0x40, 0x64, 0xbf, 0xed, 0x59, 0xf6, 0x3e, 0xd7, 0x60, 0xb6,
	0xe7, 0x96, 0x42, 0xd6, 0x54, 0x2f, 0xc0, 0x04, 0x06, 0x68, 0xa3, 0xe0, 0xc2, 0x38, 0xff, 0x2c,
	0x59, 0xda, 0xd7, 0x8f, 0xc2, 0x83, 0x53, 0x66, 0x62, 0x44, 0x55, 0xfd, 0xde, 0x0c, 0xcc, 0xfa,
	0xe2, 0xc3, 0xa8, 0x7b, 0x16, 0xf9, 0x23, 0x73, 0xab, 0x4f, 0x73, 0xef, 0x35, 0xab, 0x5c, 0xb1,
	0x3f, 0x81, 0xc4, 0x3f, 0xbe, 0x7f, 0x38, 0x9c, 0xc0, 0xc8, 0x3b, 0x3e, 0x33, 0xad, 0xe3, 0x92,
	0xbb, 0x1b, 0x30, 0x7d, 0x46, 0xd6, 0xaa, 0xe0, 0x59, 0x4c, 0xfb, 0xc1, 0x2c, 0x5c, 0x3b, 0x21,
	0x7f, 0xf5, 0x01, 0xbc, 0xa7, 0x12, 0x94, 0x8c, 0xfa, 0x61, 0xf8, 0xe0, 0x49, 0x29, 0xca, 0x5e,
	0x58, 0x71, 0xf3, 0x49, 0x3b, 0x82, 0x12, 0x28, 0xd9, 0xd3, 0x94, 0x47, 0x68, 0x9d, 0x7d, 0x84,
	0xd5, 0x43, 0x65, 0x44, 0x7d, 0x08, 0xaf, 0x9c, 0x94, 0xa2, 0xe4, 0x86, 0xcc, 0x77, 0x4d, 0xa7,
	0xe8, 0xfb, 0x9e, 0xaf, 0x8c, 0xaa, 0xef, 0x87, 0xd5, 0x93, 0x92, 0x50, 0xcc, 0x9b, 0x5a, 0x46,
	0xa1, 0x6f, 0x65, 0x4c, 0xfb, 0xce, 0x0c, 0xdc, 0xeb, 0x1d, 0xaa, 0x83, 0x47, 0x55, 0x0b, 0x16,
	0x9a, 0x09, 0x98, 0x11, 0x1e, 0xb7, 0xe4, 0x50, 0xb8, 0x3c, 0xa8, 0x67, 0x6b, 0xc7, 0x2d, 0xf6,
	0xf8, 0xd6, 0x61, 0x9c, 0x7f, 0xcf, 0xd8, 0x78, 0x62, 0x3a, 0x8e, 0x77, 0xc4, 0x98, 0xab, 0x2b,
	0xc9, 0xdc, 0x79, 0x42, 0xed, 0x87, 0x47, 0xe1, 0xb5, 0xf7, 0x50, 0xc3, 0x78, 0xc8, 0xfe, 0x99,
	0x57, 0x55, 0xfd, 0x4c, 0x06, 0x16, 0x85, 0x38, 0x49, 0xcf, 0x95, 0x2c, 0x96, 0xfa, 0x15, 0xb9,
	0x2f, 0xa4, 0x1d, 0x83, 0xaa, 0x2a, 0xc7, 0x8c, 0x98, 0x35, 0xb9, 0xc3, 0xd3, 0x90, 0x19, 0x79,
	0x0c, 0x46, 0x30, 0x4b, 0x57, 0x83, 0x14, 0x02, 0x67, 0xcf, 0x4f, 0x64, 0xe0, 0xd6, 0xa9, 0x4a,
	0x53, 0x57, 0xe1, 0x3d, 0x96, 0xa7, 0x64, 0x86, 0x0c, 0xd1, 0xae, 0x34, 0x14, 0x89, 0x2e, 0x70,
	0x5b, 0xd2, 0x52, 0xb2, 0xea, 0x6b, 0xf0, 0xe0, 0x74, 0xe9, 0x78, 0x2a, 0x6e, 0xe7, 0x30, 0x4b,
	0x19, 0xd1, 0xbe, 0x27, 0x03, 0xaf, 0xf6, 0xb2, 0xbb, 0x7f, 0x3e, 0xc5, 0x17, 0x2d, 0xdb, 0x67,
	0xd6, 0x9f, 0xc7, 0xe0, 0xce, 0xf4, 0x33, 0x6f, 0xff, 0x77, 0x99, 0x7b, 0x5c, 0x41, 0x89, 0xc5,
	0x34, 0x8a, 0x91, 0x89, 0x2f, 0xed, 0x6d, 0xb9, 0x3a, 0x18, 0xa7, 0x46, 0x15, 0xef, 0x77, 0x98,
	0x85, 0x55, 0x9d, 0x81, 0xcc, 0x0b, 0x34, 0xd3, 0xb2, 0x7a, 0xe6, 0x05, 0xff, 0x3a, 0xc6, 0x70,
	0x72, 0x56, 0xcf, 0x1c, 0xf3, 0xaf, 0x77, 0x30, 0x5e, 0x9a, 0xd5, 0x33, 0xef, 0x70, 0xf7, 0x27,
	0x68, 0x99, 0x47, 0xae, 0xd1, 0x64, 0xa1, 0x69, 0xd8, 0xee, 0xbe, 0x27, 0xd6, 0x1a, 0x66, 0x11,
	0xbc, 0xcd, 0x42, 0x93, 0x3b, 0x9b, 0xda, 0xc7, 0x33, 0x14, 0x02, 0x4a, 0x95, 0xb9, 0xe9, 0x9b,
	0x6e, 0x88, 0x05, 0x3e, 0x80, 0x45, 0x9f, 0xd5, 0xed, 0x96, 0x4d, 0x0b, 0x80, 0x5d, 0x96, 0x8a,
	0x1a, 0xe1, 0x62, 0xfd, 0x7f, 0x11, 0x26, 0xc9, 0x35, 0x8d, 0xcc, 0x84, 0x09, 0xfc, 0x2e, 0x59,
	0x5c, 0xff, 0xee, 0x3b, 0x66, 0xa3, 0xc1, 0xc8, 0x79, 0x9b, 0xd4, 0xe5, 0xa7, 0xf6, 0x0c, 0xb4,
	0xc1, 0x95, 0x48, 0x68, 0x98, 0xf7, 0x58, 0x19, 0xed, 0x6a, 0xe4, 0xb9, 0xc6, 0xf9, 0xf2, 0x2c,
	0x0b, 0x8e, 0x69, 0x37, 0x99, 0xa5, 0x59, 0x51, 0xb9, 0x3b, 0x76, 0xfd, 0xb0, 0xdd, 0xc2, 0x51,
	0xeb, 0xd8, 0x0d, 0x7b, 0xcf, 0x76, 0xb8, 0xd1, 0xf2, 0xb4, 0xcd, 0xfc, 0x93, 0x7c, 0x29, 0x0a,
	0x48, 0xd4, 0x3d, 0xd7, 0x0a, 0x0c, 0xb3, 0xe1, 0xc5, 0x01, 0x09, 0x04, 0xe5, 0x1b, 0x9e, 0xf6,
	0x89, 0x0c, 0xdc, 0x3d, 0xb9, 0x98, 0xa8, 0x99, 0x27, 0x14, 0x77, 0x03, 0x66, 0x8e, 0xcc, 0xc0,
	0x60, 0x98, 0xde, 0x91, 0x43, 0x68, 0xfa, 0xc8, 0x0c, 0x8a, 0x02, 0x94, 0xea, 0x83, 0x91, 0x54,
	0x1f, 0x68, 0xdf, 0x32, 0x22, 0x56, 0x65, 0x77, 0x4c, 0x3f, 0x3c, 0xde, 0x66, 0xb8, 0x66, 0x7d,
	0x0d, 0xa6, 0xbd, 0x23, 0x37, 0x30, 0x42, 0xbb, 0x7e, 0xc8, 0x42, 0x91, 0x23, 0x70, 0x50, 0x0d,
	0x21, 0xb4, 0xce, 0xd8, 0x6c, 0xe1, 0xfa, 0xb9, 0xd1, 0xb4, 0x83, 0xc0, 0xf6, 0xdc, 0x20, 0x5e,
	0x67, 0x14, 0x98, 0x6d, 0x81, 0xe0, 0xf9, 0xed, 0x99, 0x56, 0x83, 0x89, 0xf5, 0x48, 0x0a, 0x7a,
	0x02, 0x82, 0x30, 0xcc, 0xa1, 0xde, 0x84, 0xd9, 0xe0, 0xed, 0xb6, 0x69, 0x19, 0x41, 0xdb, 0x6f,
	0x39, 0x6d, 0x0a, 0x57, 0x4d, 0xea, 0x33, 0x08, 0xac, 0x12, 0x4c, 0xd5, 0x60, 0xca, 0x0e, 0x8c,
	0x3d, 0xd3, 0x75, 0x99, 0xb5, 0x34, 0x99, 0x5c, 0x75, 0x9e, 0xb4, 0x83, 0x35, 0x04, 0xcb, 0x8a,
	0xb1, 0xd0, 0xe6, 0x13, 0x88, 0x0f, 0x0a, 0x16, 0x04, 0x4b, 0x53, 0x98, 0xdb, 0x42, 0x02, 0x93,
	0x47, 0x04, 0xaf, 0x98, 0x63, 0x5a, 0x16, 0x57, 0x24, 0xa6, 0x7b, 0xb8, 0x34, 0x43, 0x15, 0x23,
	0x90, 0x6e, 0xba, 0x87, 0xea, 0x2b, 0x18, 0x35, 0x70, 0xbc, 0x23, 0xa3, 0xe5, 0xdb, 0x9e, 0x6f,
	0x87, 0xc7, 0x4b, 0xb3, 0xc9, 0x92, 0x67, 0xed, 0x60, 0xcb, 0x3b, 0xda, 0x11, 0x38, 0xf5, 0x2a,
	0x00, 0x7b, 0xd1, 0x62, 0xbe, 0xcd, 0xdc, 0x3a, 0x5b, 0x9a, 0xa3, 0xec, 0x62, 0x88, 0xba, 0x02,
	0xd3, 0xc1, 0xa1, 0xed, 0x38, 0xbe, 0x19, 0x72, 0x9f, 0x63, 0x9e, 0x13, 0x3c, 0x1e, 0x7b, 0xf8,
	0xe0, 0xc1, 0x83, 0x07, 0x7a, 0x12, 0xa3, 0xfd, 0xc1, 0x08, 0x85, 0xe2, 0xb7, 0xcd, 0xb0, 0x7e,
	0x50, 0x65, 0xa6, 0x5f, 0x3f, 0x28, 0xf8, 0x76, 0xc8, 0x7c, 0xdb, 0x54, 0x9f, 0x81, 0xd2, 0xe4,
	0xe0, 0xa6, 0x79, 0xc8, 0xdd, 0x90, 0x26, 0xd7, 0x7c, 0x13, 0x28, 0x9e, 0xce, 0xe6, 0x6a, 0x1b,
	0xc6, 0x76, 0x8c, 0xdb, 0xf6, 0x2c, 0xf6, 0xf8, 0x7c, 0x1a, 0x66, 0x94, 0xca, 0xcf, 0xf2, 0x5b,
	0xa5, 0x75, 0x7d, 0xbe, 0x99, 0x26, 0x54, 0xaf, 0xc3, 0x8c, 0x63, 0x86, 0xcc, 0xc0, 0x58, 0xb8,
	0x77, 0x28, 0xfa, 0x00, 0x38, 0xec, 0x75, 0xcf, 0x76, 0x2b, 0x87, 0xea, 0xfb, 0xe0, 0x5c, 0xbd,
	0x1d, 0x84, 0x5e, 0xd3, 0x68, 0xa1, 0x03, 0xe4, 0x39, 0xcc, 0x37, 0x79, 0x4b, 0x67, 0xb1, 0x21,
	0x99, 0x07, 0xfa, 0x59, 0xc2, 0xef, 0x70, 0xff, 0x47, 0x62, 0xb9, 0xec, 0x69, 0x76, 0x9a, 0x46,
	0xd3, 0x74, 0xdd, 0x76, 0xcb, 0x08, 0xbd, 0xb6, 0xbf, 0x04, 0x68, 0x6f, 0xcf, 0x36, 0x3b, 0xcd,
	0x6d, 0x84, 0xd6, 0xbc, 0xb6, 0xcf, 0x47, 0x32, 0xd2, 0xc9, 0xf1, 0x34, 0x45, 0x2b, 0x63, 0x9c,
	0x48, 0x8e, 0xa4, 0x0f, 0xc0, 0x12, 0xc6, 0xd7, 0xf6, 0x3d, 0xdf, 0xd8, 0xf3, 0xcd, 0x46, 0x83,
	0xd7, 0xc3, 0xb7, 0x1b, 0x07, 0x21, 0xad, 0xb1, 0x4e, 0xea, 0xe7, 0x38, 0x7e, 0xc3, 0xf3, 0xd7,
	0x04, 0x56, 0x47, 0xa4, 0x9a, 0x83, 0xb3, 0x6f, 0x47, 0xd1, 0x39, 0x74, 0x48, 0x50, 0xac, 0x4f,
	0xd2, 0x90, 0x8d, 0x50, 0x5c, 0x80, 0xa3, 0x48, 0xc6, 0x45, 0x7d, 0x1c, 0x19, 0x31, 0xf1, 0xb4,
	0x5c, 0xd4, 0xe7, 0xf0, 0x88, 0x72, 0x1b, 0xe6, 0xeb, 0x66, 0xd0, 0x36, 0x1d, 0xa3, 0x2e, 0x7a,
	0x08, 0xc7, 0xd1, 0xf4, 0xea, 0x4b, 0x68, 0x87, 0x14, 0x10, 0x97, 0xe8, 0x80, 0x74, 0x6f, 0xea,
	0x73, 0x94, 0x58, 0x7e, 0x6b, 0x55, 0xf2, 0x69, 0x4e, 0x48, 0xa6, 0xde, 0x07, 0x35, 0x60, 0x0e,
	0xab, 0xe3, 0x04, 0x34, 0x5b, 0x81, 0xb1, 0x67, 0x87, 0xb4, 0x3c, 0x36, 0xa1, 0x2b, 0x12, 0xb3,
	0x6d, 0xb6, 0x82, 0x35, 0x3b, 0x0c, 0xb4, 0x1f, 0xce, 0xd2, 0x70, 0xa2, 0x68, 0x42, 0xc5, 0xdf,
	0x6d, 0x59, 0x66, 0xc8, 0x70, 0xca, 0xab, 0x79, 0x98, 0x0f, 0x30, 0xef, 0xb8, 0xfe, 0x19, 0xac,
	0xff, 0x52, 0x6e, 0xc0, 0x08, 0xd4, 0xe7, 0x82, 0x74, 0x65, 0x5e, 0x82, 0x39, 0x0a, 0xa0, 0x3a,
	0xde, 0xde, 0xde, 0xb1, 0x94, 0x32, 0xe3, 0xfa, 0x0c, 0x42, 0xb7, 0x38, 0x90, 0x62, 0xa9, 0xe9,
	0x49, 0x3e, 0xda, 0x67, 0x92, 0x7f, 0x15, 0x4c, 0x1f, 0xd9, 0xef, 0x98, 0xbe, 0x65, 0x04, 0x21,
	0xa3, 0x4d, 0x17, 0x73, 0xab, 0xcb, 0x5d, 0xe3, 0xda, 0x78, 0x8e, 0x24, 0xd5, 0x90, 0xb5, 0x1e,
	0xdf, 0x18, 0x88, 0x8a, 0x46, 0x3a, 0x1c, 0x45, 0x30, 0xf5, 0x1e, 0xcc, 0xd5, 0xc9, 0x85, 0xea,
	0x30, 0x9f, 0x8f, 0x29, 0x5a, 0x9a, 0x7f, 0x3c, 0xfa, 0x70, 0x75, 0xf5, 0x7d, 0xfa, 0x2c, 0xe1,
	0x9e, 0x11, 0x4a, 0xfb, 0xbb, 0x22, 0xd2, 0xd9, 0x87, 0x6d, 0x3a, 0x6b, 0x39, 0xc7, 0xef, 0xdd,
	0xb3, 0xec, 0x6e, 0xdf, 0xc8, 0x17, 0xb9, 0x7d, 0xda, 0x4f, 0x00, 0x40, 0x2c, 0xcf, 0xd5, 0x6b,
	0x30, 0xd9, 0xe2, 0x3f, 0x22, 0xf7, 0x54, 0x6c, 0x19, 0x99, 0x40, 0x28, 0x2d, 0x12, 0x38, 0xcc,
	0xb4, 0xd0, 0x33, 0xc7, 0xba, 0x8e, 0xeb, 0x93, 0x04, 0x28, 0x61, 0x58, 0xb9, 0x89, 0x1a, 0x21,
	0x5a, 0x7b, 0x1d, 0xd7, 0xa7, 0x08, 0x42, 0xeb, 0xae, 0x13, 0xf4, 0x11, 0x2c, 0xcd, 0x62, 0xa8,
	0x68, 0x21, 0xd7, 0xad, 0x4a, 0x74, 0x49, 0xa1, 0xae, 0xc0, 0x7c, 0x8b, 0x51, 0xe0, 0xc4, 0x76,
	0x3b, 0x36, 0xed, 0x9b, 0xe0, 0x19, 0xce, 0x09, 0x70, 0x89, 0xa0, 0x7c, 0xa6, 0x9a, 0x41, 0xe0,
	0xd5, 0x6d, 0xee, 0xdd, 0xc5, 0x23, 0xea, 0x26, 0x3a, 0xd7, 0x0b, 0x31, 0x4a, 0x0e, 0xab, 0x7b,
	0x30, 0x16, 0x84, 0x66, 0x48, 0x8b, 0x18, 0x73, 0xa9, 0x3a, 0xe4, 0xaa, 0x1c, 0xf1, 0x38, 0xbb,
	0x5b, 0xd2, 0x89, 0xa6, 0x9b, 0xfd, 0x57, 0xbe, 0xd8, 0xc3, 0xeb, 0x83, 0xb0, 0x14, 0x84, 0xa6,
	0x4f, 0xb3, 0x32, 0x4e, 0x15, 0xda, 0x4d, 0x26, 0xec, 0xad, 0xf3, 0x02, 0x9f, 0xc8, 0xb4, 0x66,
	0x37, 0x99, 0xfa, 0x21, 0x58, 0xa6, 0x59, 0xc5, 0xe9, 0x5b, 0xb8, 0x7c, 0x10, 0x18, 0x7b, 0xc7,
	0x46, 0xc3, 0xf7, 0xda, 0xad, 0x25, 0xc0, 0x75, 0xef, 0x0b, 0x11, 0x05, 0xad, 0x2f, 0x04, 0x6b,
	0xc7, 0x9b, 0x1c, 0xdd, 0x67, 0x02, 0x5e, 0xea, 0x33, 0x01, 0xfb, 0x29, 0x8e, 0xab, 0x5f, 0x04,
	0xc5, 0xf1, 0x0a, 0x9c, 0x15, 0x12, 0x24, 0xa5, 0x3f, 0x2e, 0xe0, 0xf4, 0x56, 0x08, 0xb5, 0x15,
	0x6b, 0x91, 0x47, 0x70, 0x5e, 0x90, 0x77, 0x6b, 0x85, 0xeb, 0x38, 0x57, 0x44, 0x66, 0xdb, 0x29,
	0xdd, 0x90, 0x8b, 0xca, 0x48, 0xa9, 0x88, 0x6b, 0xa8, 0x22, 0x16, 0xe2, 0x14, 0x52, 0x51, 0xac,
	0xc3, 0x35, 0x41, 0x3f, 0x50, 0x5f, 0x2c, 0x63, 0xfd, 0x2e, 0x11, 0xd9, 0x4e, 0x5f, 0xad, 0x11,
	0x75, 0x8a, 0xd1, 0x4f, 0x79, 0x5c, 0xc6, 0x0e, 0x15, 0x9d, 0xf2, 0xb4, 0x47, 0x85, 0xbc, 0x0f,
	0x2e, 0x44, 0x6c, 0xe9, 0xd2, 0x24, 0x37, 0x30, 0xe5, 0xa2, 0x64, 0x4d, 0x4a, 0x9f, 0x94, 0x60,
	0x56, 0xca, 0x63, 0xd4, 0x01, 0x4b, 0xda, 0x7b, 0xd0, 0x26, 0x33, 0x42, 0x32, 0x23, 0x99, 0xba,
	0x3a, 0x48, 0x5f, 0xbf, 0x44, 0xf1, 0xba, 0x7e, 0xca, 0xfa, 0x01, 0x2c, 0x26, 0x07, 0xc9, 0x9e,
	0xe9, 0xd2, 0xe8, 0x55, 0xc9, 0xa8, 0x4e, 0xe0, 0xd6, 0x4c, 0x57, 0x8e, 0xdc, 0xee, 0x14, 0x09,
	0x7b, 0xf5, 0x2c, 0x31, 0x29, 0x9d, 0x2e, 0x76, 0x0f, 0xf2, 0x70, 0x25, 0x99, 0x38, 0x69, 0x69,
	0x51, 0xb9, 0x8b, 0x98, 0x3e, 0x59, 0x42, 0xc2, 0xe0, 0xe2, 0xe5, 0x6b, 0xcf, 0x61, 0x0c, 0xe7,
	0xb9, 0x3a, 0x0e, 0xd9, 0xdd, 0x92, 0x72, 0x46, 0x5d, 0x80, 0xd9, 0x8d, 0x52, 0x79, 0xbd, 0x54,
	0xde, 0x34, 0xb6, 0xf3, 0xb5, 0xc2, 0x13, 0x25, 0xa3, 0xce, 0xc0, 0x64, 0xa9, 0x2c, 0xbe, 0xb2,
	0xea, 0x2d, 0xb8, 0x91, 0x7f, 0x9e, 0x2f, 0xd5, 0x38, 0x85, 0x5e, 0xac, 0x16, 0xf5, 0x67, 0xf9,
	0x5a, 0xa9, 0x52, 0x36, 0x0a, 0x95, 0xf2, 0x46, 0x49, 0xdf, 0xc6, 0x0f, 0x65, 0x24, 0xde, 0xb1,
	0x88, 0xc2, 0x84, 0xe4, 0x13, 0x97, 0xa8, 0x38, 0x25, 0x7b, 0x24, 0x2a, 0x42, 0x49, 0xa2, 0x06,
	0xcc, 0x4d, 0x4b, 0x54, 0x02, 0x48, 0xdf, 0x00, 0x91, 0x89, 0x1d, 0x18, 0x40, 0xa0, 0xb2, 0xd9,
	0x64, 0xea, 0x07, 0x62, 0x99, 0x3a, 0x8a, 0x32, 0xf5, 0x4a, 0xae, 0xbb, 0x0a, 0xb9, 0x7e, 0xf2,
	0x75, 0xb9, 0x06, 0xd3, 0x49, 0x13, 0x5e, 0x85, 0x51, 0x57, 0x6e, 0x67, 0x98, 0xd2, 0xf1, 0x77,
	0x6a, 0x9d, 0x93, 0x2a, 0x16, 0xad, 0x73, 0x72, 0x0f, 0xb4, 0x63, 0x86, 0xa6, 0x2f, 0x8c, 0x78,
	0xf1, 0xa5, 0xfd, 0xed, 0x51, 0x98, 0x2b, 0xd4, 0x36, 0x50, 0x82, 0x88, 0x9c, 0x17, 0x21, 0x2b,
	0x9a, 0x3e, 0x2e, 0x9a, 0x9e, 0xb5, 0x2d, 0xf5, 0x7d, 0x30, 0xca, 0xb3, 0x12, 0x0a, 0x6d, 0x9a,
	0xcb, 0x93, 0xcd, 0x82, 0x51, 0x2b, 0xe6, 0xb7, 0x1f, 0x2f, 0xc6, 0xbf, 0x8d, 0xf5, 0xe2, 0x46,
	0xb1, 0xbc, 0x5e, 0xd4, 0xab, 0x3a, 0x92, 0xab, 0xaf, 0xc3, 0x6c, 0xdd, 0x73, 0x5d, 0x56, 0x0f,
	0x0d, 0x12, 0xe2, 0xb3, 0xc2, 0xcf, 0x4e, 0x17, 0x9a, 0x2b, 0x10, 0x11, 0xc9, 0xf3, 0x09, 0x29,
	0x89, 0x66, 0xea, 0x09, 0x70, 0xd4, 0xe4, 0xf1, 0x44, 0x93, 0x9f, 0xc2, 0x34, 0x06, 0xe2, 0x44,
	0xee, 0xd3, 0x98, 0xbb, 0x9a, 0x13, 0x99, 0xeb, 0x1c, 0x45, 0x79, 0x5e, 0xee, 0x01, 0x19, 0xbb,
	0xe5, 0xf5, 0x62, 0x61, 0x2b, 0xaf, 0x17, 0xd7, 0x75, 0xf0, 0x23, 0x30, 0xe7, 0x62, 0xa4, 0x52,
	0x67, 0x68, 0xb5, 0x58, 0x2a, 0xd3, 0x1e, 0x0b, 0x67, 0xae, 0x8f, 0x85, 0xd3, 0xe5, 0x0c, 0xcd,
	0xf7, 0x38, 0x43, 0x5d, 0x4e, 0x82, 0x32, 0xc8, 0x49, 0x50, 0xef, 0x02, 0xee, 0x46, 0x35, 0x24,
	0x07, 0x71, 0xbe, 0x2c, 0xd0, 0xb6, 0x27, 0x8e, 0x10, 0x4c, 0xc3, 0x49, 0x52, 0x87, 0x99, 0x24,
	0x0f, 0xd5, 0x69, 0x90, 0x5c, 0x54, 0xce, 0xa8, 0x17, 0xe0, 0x6c, 0x72, 0x1a, 0xec, 0x14, 0x71,
	0xf2, 0xd0, 0xb4, 0x21, 0x44, 0x71, 0x5d, 0xc9, 0xaa, 0xb3, 0x30, 0x55, 0xa8, 0x94, 0xcb, 0xc5,
	0x42, 0xad, 0xb8, 0xae, 0x8c, 0xa8, 0x0a, 0xcc, 0xac, 0x97, 0xaa, 0x31, 0x64, 0x4c, 0x2b, 0xc3,
	0xc5, 0x02, 0x72, 0x71, 0x87, 0x54, 0xba, 0xdc, 0xe0, 0xd9, 0xf2, 0xfc, 0x93, 0x56, 0xa9, 0x78,
	0xef, 0x71, 0xe3, 0x0a, 0x07, 0xe6, 0x84, 0x8e, 0xbf, 0xb5, 0x77, 0x67, 0xc4, 0x7e, 0xd9, 0x38,
	0xae, 0x82, 0xd9, 0xf3, 0x49, 0x18, 0x69, 0xba, 0xd4, 0x24, 0x74, 0x84, 0xaa, 0xbb, 0x13, 0x4f,
	0xa3, 0x2c, 0x4e, 0xa3, 0xf9, 0xae, 0x11, 0x15, 0x1b, 0x26, 0xab, 0x30, 0xe3, 0xb0, 0xfd, 0xd0,
	0x90, 0xf4, 0x13, 0xfd, 0xe9, 0xa7, 0x39, 0xd1, 0xb6, 0x48, 0x93, 0xb2, 0x9a, 0xa6, 0xbb, 0xac,
	0xa6, 0xab, 0x5c, 0x00, 0x88, 0xc5, 0x0e, 0x1c, 0x8c, 0xe3, 0xdc, 0x33, 0x9a, 0x0c, 0xc4, 0xfa,
	0x46, 0x3f, 0x4b, 0x08, 0xfa, 0x5a, 0x42, 0x5f, 0x2a, 0x2d, 0x1b, 0x5a, 0xcb, 0xbc, 0x94, 0xeb,
	0xc7, 0x0b, 0x61, 0xe3, 0x4c, 0x63, 0x2f, 0xe9, 0xd5, 0x62, 0x6d, 0x77, 0x47, 0x1a, 0x3b, 0x4b,
	0x30, 0x21, 0x86, 0x86, 0x5c, 0xca, 0x16, 0x9f, 0xea, 0x26, 0x00, 0xf1, 0x0f, 0xb5, 0xd1, 0x0c,
	0x66, 0x7f, 0xad, 0x7f, 0xf6, 0xf8, 0x3f, 0x86, 0xb7, 0xa2, 0x69, 0x37, 0xe5, 0x48, 0x18, 0x77,
	0xd9, 0x30, 0x90, 0x62, 0xd4, 0x0f, 0x98, 0x19, 0x06, 0xe4, 0x1c, 0xeb, 0xd3, 0x08, 0x2b, 0x20,
	0x88, 0xf3, 0x0a, 0x15, 0x1f, 0xce, 0x4d, 0x85, 0xb6, 0x9c, 0x73, 0x00, 0x8a, 0xbb, 0x97, 0x61,
	0x36, 0x8a, 0xe4, 0x36, 0xb8, 0x35, 0x7e, 0x4e, 0x7a, 0x92, 0x33, 0x32, 0x70, 0xca, 0xc1, 0xea,
	0x1b, 0x00, 0xb4, 0x8a, 0x84, 0xfc, 0x38, 0x8f, 0x15, 0x56, 0x84, 0x90, 0xc1, 0x1a, 0x23, 0x13,
	0x96, 0x05, 0x20, 0xbf, 0x5d, 0xac, 0xd6, 0xf2, 0xb5, 0xa2, 0x41, 0xff, 0x97, 0xca, 0xa5, 0x9a,
	0x8e, 0x95, 0xa0, 0xb1, 0x7f, 0x0b, 0xe6, 0xdc, 0x76, 0xd3, 0x08, 0x5a, 0xac, 0x1e, 0x9a, 0xa1,
	0xe7, 0x07, 0x68, 0xaa, 0xcc, 0xea, 0xb3, 0x6e, 0xbb, 0x59, 0x8d, 0x80, 0xea, 0x6b, 0x70, 0x1e,
	0xa7, 0x7d, 0xbb, 0x65, 0xf8, 0xac, 0x69, 0xe2, 0x56, 0x0e, 0x9a, 0x63, 0xcb, 0xb8, 0x85, 0x64,
	0x51, 0x60, 0x75, 0x89, 0x44, 0x6d, 0xf8, 0x2a, 0x28, 0xc4, 0x11, 0x91, 0x3d, 0x9f, 0xc2, 0xd7,
	0x30, 0x64, 0x30, 0x1a, 0xfa, 0x6d, 0xa6, 0xcf, 0x23, 0xb6, 0x1a, 0x21, 0x91, 0x85, 0x1d, 0xe6,
	0x9b, 0x0d, 0x46, 0x41, 0x88, 0xeb, 0xb4, 0x9b, 0x58, 0xc0, 0x30, 0x0a, 0x71, 0x0f, 0x54, 0xc7,
	0x33, 0xc5, 0xea, 0x6c, 0x34, 0xf0, 0x6f, 0xe0, 0xb8, 0x9b, 0xe7, 0x18, 0xce, 0x02, 0x69, 0xe5,
	0x3d, 0x84, 0x73, 0x31, 0x71, 0x60, 0x76, 0x98, 0x3c, 0x9f, 0xa0, 0x91, 0x06, 0x97, 0xf4, 0x55,
	0xb3, 0xc3, 0xc4, 0x19, 0x85, 0xdb, 0xdc, 0x30, 0x8c, 0xcc, 0x30, 0xea, 0xa9, 0xbb, 0xd8, 0x53,
	0x73, 0xcd, 0xc8, 0x04, 0x2b, 0x0b, 0x15, 0xd2, 0x34, 0x5b, 0x44, 0xf1, 0xb2, 0xf0, 0x6c, 0xcc,
	0x16, 0xa2, 0xb8, 0xf7, 0x4e, 0xd6, 0x17, 0xa1, 0x57, 0x10, 0x3d, 0x2d, 0x60, 0x48, 0x72, 0x0d,
	0xa6, 0x51, 0x8f, 0x0b, 0xa3, 0xf6, 0x0e, 0x89, 0x3e, 0x04, 0x91, 0x1d, 0x7b, 0x99, 0x67, 0xcf,
	0x09, 0x6c, 0x0b, 0x2d, 0xd3, 0x51, 0x3e, 0x12, 0x26, 0x10, 0x44, 0xca, 0xd3, 0xc7, 0x5d, 0xa7,
	0x46, 0x60, 0x3a, 0x21, 0x7a, 0x04, 0x13, 0x5c, 0x34, 0xe3, 0x46, 0x56, 0xd3, 0x09, 0x69, 0x73,
	0xa4, 0xdf, 0x64, 0x16, 0x75, 0x13, 0x59, 0x39, 0x40, 0x20, 0xec, 0x9c, 0x45, 0x18, 0xc3, 0x5d,
	0xa2, 0x4b, 0xf7, 0x10, 0x45, 0x1f, 0xdc, 0x97, 0x8e, 0x0d, 0xd7, 0x28, 0x8e, 0x76, 0x9f, 0xcc,
	0x57, 0x19, 0xfe, 0x88, 0x82, 0x69, 0xb7, 0x41, 0xd9, 0xb7, 0x5f, 0x48, 0x03, 0xdf, 0x08, 0xec,
	0x77, 0xd8, 0xd2, 0x2b, 0x14, 0x19, 0x40, 0x38, 0x39, 0xcc, 0xf6, 0x3b, 0x4c, 0xdd, 0x80, 0x19,
	0x3b, 0x30, 0x8e, 0x4c, 0x9f, 0x48, 0x97, 0x72, 0x38, 0x6c, 0xaf, 0xf6, 0x9f, 0x67, 0xcf, 0x4d,
	0x1f, 0x53, 0x3e, 0x1e, 0x2d, 0x57, 0x76, 0x8a, 0x3a, 0xd8, 0x81, 0x84, 0xe0, 0xfe, 0x56, 0xf6,
	0x22, 0x24, 0x3f, 0x9f, 0x5b, 0xb2, 0x1d, 0x2f, 0x64, 0x4b, 0xaf, 0xa2, 0x4b, 0x30, 0xcf, 0x31,
	0xdc, 0xcf, 0xdf, 0xf0, 0xfc, 0x67, 0x5e, 0xc8, 0xb4, 0x9c, 0xb4, 0x86, 0xa6, 0x61, 0x62, 0xb7,
	0xfc, 0x46, 0xb9, 0xf2, 0xbc, 0xac, 0x9c, 0x51, 0xe7, 0x21, 0x29, 0x20, 0x94, 0x8c, 0x3a, 0x01,
	0x23, 0xfa, 0x6e, 0x59, 0xc9, 0x6a, 0x6f, 0xc2, 0x54, 0x34, 0xc5, 0xd5, 0xc5, 0x58, 0x2b, 0x24,
	0x36, 0x2b, 0x4c, 0xc1, 0x18, 0x59, 0x4e, 0x67, 0xb8, 0x42, 0xd8, 0xd1, 0xf3, 0x85, 0x5a, 0xa9,
	0x50, 0x54, 0x32, 0xea, 0x1c, 0x40, 0xad, 0xb2, 0xab, 0x97, 0xf3, 0xdb, 0xc5, 0x72, 0x4d, 0xc9,
	0x72, 0x6c, 0x6d, 0xb7, 0x56, 0xd1, 0x4b, 0xf9, 0x2d, 0x65, 0x44, 0x2b, 0xc0, 0x64, 0xd4, 0x84,
	0x49, 0xc0, 0x66, 0x29, 0x67, 0xd4, 0x73, 0xb0, 0xc0, 0x8b, 0xe0, 0x36, 0x80, 0x91, 0xd7, 0x8b,
	0xc6, 0xce, 0x5b, 0x7a, 0x45, 0xc9, 0xa8, 0xe7, 0x41, 0x4d, 0x81, 0x9f, 0x14, 0xf3, 0xcf, 0xde,
	0x52, 0xb2, 0x5a, 0x07, 0xce, 0x72, 0xbb, 0xb7, 0xf8, 0xc2, 0x0e, 0x13, 0x56, 0xaf, 0x7a, 0x07,
	0x14, 0xf6, 0xa2, 0xe5, 0xd8, 0x75, 0x3b, 0x34, 0xcc, 0x3d, 0xd3, 0xb5, 0x3c, 0x57, 0x2c, 0x61,
	0xcf, 0x4b, 0x78, 0x9e, 0xc0, 0x29, 0x7d, 0x9d, 0x4d, 0xeb, 0xeb, 0x8b, 0x09, 0x35, 0x32, 0x42,
	0x28, 0xa1, 0x40, 0xb4, 0xaf, 0xa1, 0x5d, 0xdd, 0xb4, 0xae, 0x22, 0x4c, 0xbf, 0x8b, 0xdd, 0xce,
	0x74, 0x5a, 0xf3, 0x73, 0x83, 0xc6, 0x16, 0x1e, 0xab, 0xb0, 0xaf, 0x66, 0x04, 0x90, 0xb4, 0x56,
	0x6f, 0xec, 0x61, 0x64, 0x70, 0xec, 0xe1, 0x43, 0xb4, 0xc9, 0x38, 0x59, 0x81, 0xe4, 0x26, 0x60,
	0x0a, 0x34, 0xc4, 0x4b, 0xc4, 0x63, 0x7c, 0x22, 0x70, 0x10, 0xae, 0x30, 0xed, 0xc2, 0x34, 0xed,
	0xf1, 0x36, 0xad, 0xe3, 0xdd, 0x96, 0xba, 0x21, 0x15, 0x49, 0xe6, 0x0b, 0xb4, 0x7f, 0x28, 0xb9,
	0xdc, 0x0f, 0xdf, 0xeb, 0x7e, 0x70, 0x1d, 0x2e, 0xce, 0x01, 0x68, 0x26, 0xc5, 0xd0, 0x07, 0x11,
	0x89, 0x26, 0x0c, 0x77, 0x77, 0x33, 0x43, 0xdd, 0x5d, 0xed, 0x3a, 0x6d, 0x68, 0x79, 0xc3, 0xae,
	0x1f, 0x32, 0x6b, 0xc3, 0xf7, 0x9a, 0x89, 0xc2, 0x9e, 0xb6, 0x59, 0x9b, 0x69, 0x3f, 0x99, 0x81,
	0x73, 0xb4, 0x27, 0x8f, 0xcf, 0xdd, 0xc2, 0x81, 0x19, 0x16, 0x0e, 0x4c, 0xd7, 0x65, 0x0e, 0x17,
	0x53, 0x2d, 0xe6, 0x07, 0x9e, 0x6b, 0x1a, 0x09, 0x03, 0x79, 0x5a, 0xc0, 0xa4, 0x24, 0xab, 0x13,
	0x75, 0x72, 0x3f, 0xdd, 0xb4, 0x80, 0x21, 0xc9, 0x32, 0x1f, 0x0a, 0x41, 0x70, 0xe4, 0xf9, 0x96,
	0x3c, 0x46, 0x25, 0xbf, 0xd5, 0x4a, 0x9c, 0x1c, 0xd5, 0xeb, 0xa8, 0x60, 0x7a, 0xa2, 0x16, 0x7c,
	0xb2, 0x19, 0xe1, 0xe3, 0xa5, 0x6e, 0x10, 0x69, 0x3b, 0xd3, 0x89, 0x0a, 0xc3, 0xd5, 0xab, 0x0f,
	0xc9, 0x23, 0x0e, 0x5b, 0xcc, 0xec, 0xb0, 0xae, 0xc6, 0xa4, 0x6a, 0x9a, 0xe9, 0xa9, 0xa9, 0xf6,
	0x43, 0xd1, 0xc9, 0x9b, 0x2e, 0x4e, 0x44, 0x5d, 0xb1, 0x0c, 0x93, 0x72, 0x19, 0x55, 0x1e, 0x56,
	0x90, 0xdf, 0xa7, 0x61, 0xc5, 0x15, 0x00, 0x49, 0x12, 0x05, 0xfe, 0xa6, 0x04, 0x84, 0x84, 0x76,
	0xd3, 0x7c, 0x61, 0xc4, 0x4e, 0x8d, 0x90, 0xf9, 0x2f, 0xa4, 0x2d, 0x55, 0x88, 0x4d, 0xb5, 0x31,
	0x34, 0xbd, 0xee, 0xe4, 0x86, 0xd6, 0x17, 0xf9, 0xd8, 0xed, 0xfd, 0xbc, 0x0e, 0x10, 0x83, 0x53,
	0x8e, 0x4e, 0x26, 0xed, 0xe8, 0x74, 0x77, 0x7f, 0xb6, 0xa7, 0xfb, 0xb5, 0xff, 0x5b, 0x6e, 0x15,
	0xae, 0x84, 0x07, 0xb4, 0x87, 0x13, 0xb7, 0xdc, 0x45, 0x4c, 0x4f, 0x37, 0x38, 0xd3, 0xdd, 0xe0,
	0x93, 0x4b, 0x48, 0xd5, 0x6f, 0x24, 0x55, 0x3f, 0xed, 0x99, 0xdc, 0x81, 0x8d, 0x85, 0x6f, 0xb1,
	0xfd, 0xf0, 0x3d, 0x14, 0x3d, 0xd8, 0xc1, 0xd3, 0x6e, 0x74, 0x1d, 0xd7, 0x59, 0x67, 0xfb, 0x26,
	0x97, 0x16, 0x71, 0xe6, 0xda, 0x21, 0x6d, 0x7a, 0x19, 0x42, 0xa2, 0x0f, 0x1a, 0x16, 0x99, 0x93,
	0x86, 0x45, 0xb6, 0xab, 0xaa, 0x72, 0x25, 0x2e, 0x2a, 0x2c, 0x51, 0xca, 0x96, 0x1d, 0x84, 0xda,
	0xa7, 0xa2, 0x0d, 0xc8, 0xfd, 0x09, 0xa2, 0xaa, 0x6c, 0xc3, 0xa4, 0xc8, 0x55, 0x6e, 0x58, 0x7b,
	0x98, 0x3b, 0x4d, 0xc2, 0xe4, 0x74, 0xd4, 0xa3, 0x2c, 0x96, 0xbf, 0x3b, 0x03, 0xd3, 0xef, 0x6d,
	0x86, 0xf1, 0x11, 0xce, 0xcd, 0xc9, 0xd8, 0xdf, 0x90, 0x47, 0xbd, 0xe4, 0x08, 0xef, 0x16, 0x08,
	0x23, 0x7f, 0x5a, 0x81, 0xf0, 0xd9, 0x29, 0xb1, 0xab, 0x2c, 0x5e, 0x6e, 0x4e, 0x48, 0x5b, 0xda,
	0x9b, 0x78, 0x2f, 0xda, 0x3d, 0x2d, 0x95, 0x8d, 0x92, 0x54, 0x36, 0x84, 0x13, 0xca, 0x46, 0xb5,
	0x60, 0x21, 0x19, 0x85, 0x49, 0x2a, 0x8b, 0x0b, 0xb9, 0xbe, 0x25, 0xb0, 0xc7, 0x57, 0xfb, 0xc3,
	0xa3, 0x30, 0x61, 0x32, 0xd6, 0x48, 0x16, 0x49, 0xbf, 0xf8, 0x63, 0xf6, 0x8b, 0x10, 0x7f, 0x54,
	0x60, 0xa4, 0x69, 0xb6, 0x84, 0x1c, 0xe6, 0x3f, 0xb9, 0x33, 0x19, 0x72, 0x33, 0x6f, 0x94, 0x42,
	0x01, 0xfc, 0x37, 0xf7, 0x43, 0xf6, 0x3c, 0xae, 0x31, 0xdb, 0x6e, 0x28, 0xb7, 0xc3, 0xef, 0x79,
	0x21, 0xaa, 0xa5, 0x3e, 0x2e, 0xc1, 0x78, 0x3f, 0x97, 0x40, 0x08, 0x33, 0xa1, 0xaf, 0x44, 0x44,
	0x97, 0x0b, 0x33, 0xa1, 0xa0, 0xf8, 0xa8, 0x0f, 0x1c, 0x2f, 0x0c, 0x8c, 0x7d, 0x9f, 0xc9, 0xd5,
	0xa5, 0x29, 0x84, 0x6c, 0xf8, 0x8c, 0xa1, 0x99, 0x90, 0x72, 0x77, 0xa6, 0x68, 0x3b, 0x79, 0xca,
	0xd7, 0x89, 0xf7, 0xbd, 0x73, 0x53, 0xdd, 0xec, 0x34, 0x70, 0xb5, 0x2c, 0x2b, 0xfb, 0x6c, 0x8b,
	0x80, 0x09, 0xb2, 0xd0, 0x6f, 0x07, 0x21, 0x23, 0x47, 0x74, 0x52, 0x92, 0xd5, 0x08, 0xc8, 0x2d,
	0x25, 0x41, 0x66, 0x31, 0x4b, 0xec, 0xc7, 0x9e, 0x11, 0x27, 0x71, 0x10, 0xbe, 0x2e, 0xc1, 0xea,
	0x79, 0x18, 0x0f, 0x42, 0xdf, 0xae, 0x87, 0x22, 0x88, 0x20, 0xbe, 0xd4, 0x3c, 0x4c, 0xc8, 0x16,
	0x53, 0x9c, 0x7f, 0x25, 0x77, 0xc2, 0xe8, 0xcb, 0x09, 0xcf, 0x5f, 0xa6, 0xeb, 0xf2, 0xdf, 0xe6,
	0xfe, 0x74, 0xfe, 0xdb, 0x1a, 0x8c, 0xe1, 0x09, 0x64, 0x8c, 0x9d, 0xcc, 0xad, 0xbe, 0x7c, 0x62,
	0x6d, 0x70, 0x4b, 0xd6, 0xe3, 0xd1, 0xb2, 0xe7, 0x32, 0x9d, 0x92, 0xa2, 0x23, 0xd3, 0x69, 0x1a,
	0x47, 0x66, 0x47, 0x86, 0x36, 0x27, 0x9a, 0x9d, 0xe6, 0x73, 0xb3, 0x43, 0x11, 0xd0, 0x4e, 0xd3,
	0xa8, 0xfb, 0xcc, 0xb2, 0xc3, 0xc0, 0x30, 0xeb, 0x6f, 0xb7, 0x6d, 0x9f, 0xc9, 0x48, 0xa6, 0xda,
	0xec, 0x34, 0x0b, 0x84, 0xca, 0x0b, 0x8c, 0x9a, 0x83, 0xb3, 0xc9, 0x14, 0x96, 0xef, 0xb5, 0x5a,
	0xcc, 0x12, 0xa1, 0xcb, 0x85, 0x38, 0xc1, 0x3a, 0x21, 0xd4, 0x9b, 0x69, 0x3f, 0x88, 0x7b, 0x9f,
	0x0b, 0x8f, 0xb3, 0xaf, 0x3c, 0x4c, 0xfa, 0x42, 0xcb, 0x5f, 0x9b, 0x81, 0x71, 0x71, 0x18, 0x77,
	0x88, 0x3e, 0x33, 0xbb, 0x03, 0x68, 0x34, 0xa1, 0x1e, 0x9d, 0xb2, 0x87, 0x4e, 0x11, 0x57, 0xd3,
	0xbe, 0x14, 0xd4, 0x5e, 0xe2, 0x74, 0x00, 0x29, 0x15, 0x19, 0xea, 0x0a, 0x1b, 0x69, 0x4f, 0x60,
	0x0c, 0x3b, 0x00, 0x9d, 0x00, 0xcf, 0x65, 0xca, 0x19, 0xee, 0x38, 0x6c, 0x77, 0xb6, 0x9f, 0xd9,
	0xf5, 0xd0, 0xf3, 0x8f, 0x95, 0x0c, 0x4f, 0xbf, 0xdd, 0xd9, 0x5e, 0x67, 0xfb, 0xcc, 0x0c, 0x95,
	0x2c, 0x77, 0x06, 0xf2, 0xf5, 0x43, 0xd7, 0x3b, 0x72, 0x98, 0xd5, 0x60, 0x62, 0x6e, 0x29, 0x23,
	0xda, 0x3f, 0x9a, 0x4c, 0xac, 0x8a, 0x53, 0x6b, 0x76, 0x7c, 0xaf, 0x81, 0xc7, 0x40, 0xee, 0xc0,
	0x82, 0xd9, 0x69, 0x18, 0x47, 0xa6, 0x4d, 0x81, 0x30, 0xc3, 0x65, 0x47, 0xc2, 0xda, 0x98, 0x33,
	0x3b, 0x8d, 0xe7, 0xa6, 0x8d, 0x81, 0xb0, 0x32, 0x3b, 0x52, 0x5f, 0x83, 0x0b, 0x69, 0x52, 0x74,
	0xfc, 0xb8, 0xa3, 0x27, 0xe4, 0xc2, 0xd9, 0x44, 0x02, 0xae, 0xff, 0xb7, 0x78, 0x83, 0x5f, 0x82,
	0xb9, 0x63, 0xee, 0x1d, 0x47, 0xc9, 0x84, 0x88, 0x98, 0xe1, 0x50, 0x49, 0xad, 0x56, 0xe0, 0x25,
	0xec, 0x43, 0x2e, 0xb0, 0x8e, 0x3c, 0xdf, 0xb1, 0x8e, 0x6c, 0x8b, 0x19, 0x3d, 0xa6, 0xae, 0x10,
	0x0d, 0x37, 0x24, 0xed, 0x73, 0x49, 0x5a, 0xed, 0x32, 0x79, 0xd5, 0x2d, 0xb8, 0x19, 0x65, 0xe8,
	0x32, 0xd3, 0x37, 0x8e, 0xbd, 0x76, 0x9f, 0xfc, 0x48, 0x90, 0x5c, 0x93, 0xa4, 0x65, 0x66, 0xfa,
	0x6f, 0x79, 0xed, 0x9e, 0xdc, 0x4a, 0x70, 0x83, 0xce, 0xc2, 0x0c, 0xab, 0x1b, 0xae, 0xe6, 0xeb,
	0x57, 0x91, 0x70, 0x70, 0xc5, 0x36, 0xe0, 0x3a, 0x65, 0x35, 0xa4, 0x56, 0xb4, 0x03, 0xe2, 0x32,
	0xd2, 0x0d, 0xa9, 0x52, 0x1f, 0x8e, 0xd1, 0x0e, 0xa8, 0x28, 0x23, 0x8a, 0x92, 0x5e, 0xed, 0x61,
	0x17, 0x6d, 0xb0, 0x4c, 0x54, 0xa9, 0x97, 0x57, 0x5d, 0x39, 0x29, 0x54, 0xa5, 0x2e, 0x46, 0xa5,
	0xf3, 0x29, 0xc0, 0xd5, 0x6e, 0x2e, 0x75, 0xe5, 0x42, 0x02, 0xf2, 0x52, 0x9a, 0x45, 0xe9, 0x4c,
	0xbe, 0x0c, 0xae, 0x74, 0xf1, 0xa7, 0x2b, 0x0f, 0x12, 0x3b, 0x17, 0x93, 0xcc, 0x49, 0xe7, 0xd0,
	0x7f, 0x2c, 0xb1, 0x66, 0x2b, 0xa4, 0x55, 0x28, 0xb9, 0x4f, 0xff, 0xec, 0x80, 0xb1, 0x54, 0xe4,
	0x94, 0x9b, 0x31, 0x61, 0xff, 0xb1, 0xd4, 0x9b, 0xdf, 0x62, 0xdf, 0xb1, 0xd4, 0x93, 0x5b, 0x9f,
	0xb1, 0xd4, 0x9b, 0xd7, 0xb9, 0x7e, 0x63, 0xa9, 0x27, 0xab, 0xde, 0xb1, 0xd4, 0x9b, 0xd3, 0xf9,
	0xde, 0xb1, 0xd4, 0x93, 0xcf, 0x35, 0x98, 0x6e, 0xfb, 0x0d, 0xe6, 0xd6, 0x8f, 0x8d, 0x56, 0x74,
	0x5d, 0x01, 0x08, 0xd0, 0x4e, 0x3d, 0xd4, 0xbe, 0x65, 0x1c, 0x54, 0x94, 0x20, 0x91, 0xf4, 0xc1,
	0x23, 0x56, 0xaf, 0xc5, 0x1a, 0x8e, 0x6c, 0xc8, 0xe5, 0x5c, 0x2f, 0x55, 0x8f, 0x52, 0xbb, 0x04,
	0x53, 0x71, 0xbc, 0x4c, 0x5c, 0xed, 0x11, 0xca, 0x48, 0x59, 0x77, 0x38, 0x6c, 0xa4, 0x27, 0x1c,
	0xb6, 0xfc, 0xc3, 0x19, 0x18, 0xc5, 0x5d, 0x75, 0x6f, 0xc0, 0x4c, 0xc3, 0x37, 0xdd, 0x50, 0x5e,
	0x4e, 0x90, 0x91, 0x01, 0xd9, 0xde, 0x3a, 0xe0, 0x2e, 0x38, 0xba, 0xb1, 0x20, 0x96, 0xd7, 0xd3,
	0x8d, 0x18, 0xca, 0x6b, 0x45, 0x37, 0x86, 0x98, 0xa1, 0x29, 0xce, 0x0d, 0x4d, 0xe2, 0x65, 0x21,
	0x66, 0x68, 0xaa, 0x6b, 0x70, 0x35, 0xb5, 0x42, 0x61, 0xd4, 0x71, 0xe7, 0x5b, 0xe2, 0x84, 0x3c,
	0xf9, 0x23, 0xcb, 0xc9, 0x25, 0x0b, 0xda, 0x1d, 0x27, 0x4f, 0xcb, 0x2f, 0xff, 0x6e, 0xf6, 0x34,
	0x8a, 0xe9, 0x26, 0xcc, 0xd2, 0x32, 0x07, 0xd6, 0x2d, 0xda, 0xe2, 0x37, 0x83, 0xc0, 0x4d, 0x82,
	0xa9, 0xaf, 0xc1, 0x79, 0x22, 0x6a, 0x09, 0x31, 0x6e, 0xb4, 0x71, 0x8b, 0x85, 0x25, 0xf6, 0x86,
	0x2c, 0x22, 0x56, 0xca, 0x78, 0xda, 0x7e, 0x91, 0xc8, 0x1a, 0x57, 0x50, 0x98, 0x25, 0x77, 0x8b,
	0xc5, 0x6b, 0x28, 0xcc, 0xea, 0x5e, 0x66, 0x19, 0xef, 0x59, 0x66, 0xc9, 0xc1, 0xd9, 0xae, 0xb2,
	0x71, 0x0b, 0x0d, 0xd9, 0x74, 0x0b, 0xa9, 0x82, 0xd7, 0x6c, 0xdc, 0x41, 0x34, 0xc6, 0xd9, 0xc8,
	0x45, 0xf7, 0x48, 0xbc, 0x3b, 0x26, 0xdd, 0x3b, 0xb8, 0x3d, 0x91, 0xc8, 0xd4, 0x15, 0x98, 0xef,
	0x78, 0xed, 0xfa, 0x01, 0xf3, 0x69, 0xb9, 0xda, 0x6d, 0x88, 0x7d, 0x68, 0x73, 0x02, 0xbc, 0x4d,
	0x50, 0x3e, 0x52, 0x44, 0x45, 0x3c, 0xdb, 0x0d, 0x03, 0xb4, 0xf6, 0x66, 0x75, 0xaa, 0xfd, 0x0e,
	0x82, 0xb4, 0xaf, 0x82, 0xe9, 0x44, 0xc7, 0xa7, 0x75, 0xef, 0x02, 0xcc, 0xae, 0xe5, 0xd7, 0x37,
	0x8b, 0xc6, 0x56, 0xf1, 0x59, 0x71, 0x0b, 0xf5, 0xef, 0x02, 0xcc, 0x56, 0x9f, 0xee, 0xe6, 0xd7,
	0x8d, 0xea, 0xae, 0xbe, 0xb3, 0xb5, 0x5b, 0x55, 0xb2, 0x3c, 0xc9, 0x76, 0xbe, 0x5c, 0x36, 0x76,
	0x77, 0x94, 0x11, 0x75, 0x1e, 0xa6, 0x9f, 0x14, 0xb7, 0x76, 0x8c, 0xbc, 0x51, 0xae, 0x54, 0xd6,
	0x94, 0x51, 0xed, 0x2f, 0x67, 0xe0, 0x5c, 0x61, 0x93, 0xdc, 0xa6, 0x27, 0xcc, 0x71, 0xbc, 0xc8,
	0xbd, 0xba, 0x09, 0xb3, 0xc2, 0x7f, 0x30, 0xea, 0x07, 0xac, 0x7e, 0x28, 0xaf, 0x9f, 0x11, 0xc0,
	0x02, 0x87, 0x71, 0x1b, 0x33, 0x45, 0x14, 0xb4, 0x9b, 0xb8, 0xec, 0x32, 0xaa, 0xcf, 0x27, 0xe9,
	0x82, 0x76, 0x13, 0xb9, 0x22, 0x48, 0x3b, 0xcc, 0xdf, 0xf3, 0x02, 0x26, 0x56, 0x1c, 0xe7, 0x04,
	0xf8, 0x19, 0x41, 0xb5, 0x5f, 0xc9, 0xc0, 0x8c, 0xac, 0x52, 0xf5, 0xd8, 0xad, 0xf7, 0x2d, 0x24,
	0x83, 0xc3, 0xbb, 0xa7, 0x90, 0x9e, 0x4a, 0x67, 0xfb, 0x54, 0xfa, 0x76, 0x57, 0x7e, 0x06, 0x7b,
	0xd1, 0x55, 0x15, 0xa4, 0x2b, 0xbe, 0x50, 0xef, 0xc2, 0x42, 0x37, 0xe5, 0xaa, 0xbc, 0x5e, 0x20,
	0x4d, 0xba, 0xca, 0x47, 0x55, 0x77, 0x2d, 0x79, 0xc6, 0x63, 0x58, 0xd1, 0x85, 0xae, 0x8a, 0x16,
	0x5f, 0x70, 0xce, 0xcf, 0x25, 0x9b, 0x59, 0x7c, 0x31, 0xb0, 0xa1, 0x53, 0xbd, 0x0d, 0x1d, 0x50,
	0x5a, 0x76, 0x40, 0x69, 0xbd, 0x8c, 0x19, 0xe9, 0x65, 0x8c, 0xf6, 0xa3, 0x59, 0x98, 0x4b, 0x8f,
	0x6d, 0x6e, 0x12, 0x3b, 0xac, 0x61, 0xd6, 0x8f, 0xe5, 0xce, 0x8b, 0xd4, 0x5d, 0x44, 0x2a, 0xe1,
	0xc4, 0xde, 0x0b, 0xba, 0x89, 0xe6, 0x36, 0x28, 0x91, 0x6c, 0x14, 0x7b, 0x3c, 0xc4, 0x22, 0xd4,
	0x9c, 0x14, 0x91, 0xb4, 0xbb, 0xa3, 0x47, 0x50, 0x8e, 0xf7, 0xae, 0x1b, 0x3c, 0x88, 0xc5, 0x33,
	0xad, 0xe6, 0x9d, 0xef, 0x9a, 0x7c, 0x3d, 0xa2, 0x79, 0x70, 0x64, 0x97, 0xbb, 0x68, 0x74, 0x7f,
	0x11, 0xda, 0x70, 0xa3, 0x74, 0x43, 0x05, 0x42, 0xb8, 0x01, 0xb7, 0xfc, 0xe4, 0x94, 0xc2, 0x2d,
	0xbd, 0xd0, 0x9b, 0xed, 0x5d, 0xe8, 0xd5, 0x2e, 0xc1, 0x45, 0x51, 0x4b, 0xde, 0xd2, 0xdd, 0x96,
	0xa8, 0x2b, 0xee, 0x1c, 0xd3, 0x3e, 0x2d, 0xf7, 0x59, 0x47, 0x26, 0xfa, 0x1b, 0x76, 0x9d, 0x76,
	0x37, 0x50, 0xa8, 0x78, 0x41, 0xd8, 0xe0, 0xcc, 0x32, 0x92, 0xaa, 0x69, 0x5c, 0x57, 0x22, 0x84,
	0xb4, 0x13, 0x56, 0x60, 0x86, 0xce, 0x61, 0x1a, 0x18, 0x8e, 0xa6, 0xca, 0x88, 0xe5, 0xa6, 0x69,
	0xc2, 0xd0, 0x6e, 0xb0, 0x21, 0x5c, 0xb9, 0x98, 0x58, 0x79, 0x11, 0x67, 0xa0, 0xc5, 0xb2, 0x8b,
	0xf6, 0x92, 0xd8, 0x14, 0xdd, 0xb7, 0xa6, 0x52, 0x50, 0x68, 0xff, 0x17, 0x51, 0x61, 0x88, 0x92,
	0x93, 0xe6, 0x5d, 0x6b, 0xc7, 0x67, 0x2d, 0xd3, 0x67, 0x35, 0x8f, 0xdb, 0xd0, 0x51, 0x0d, 0x52,
	0x21, 0xf4, 0xf1, 0x28, 0x84, 0xae, 0x7d, 0x73, 0x96, 0x42, 0xfd, 0xd4, 0xaa, 0x2d, 0xb6, 0x4f,
	0x01, 0xff, 0x61, 0xdd, 0xf0, 0x0c, 0x66, 0x1c, 0x5e, 0x5e, 0xf2, 0xde, 0x21, 0x0a, 0x26, 0x60,
	0x52, 0xac, 0x8b, 0xd0, 0x95, 0x57, 0x7b, 0x61, 0xc6, 0x6e, 0xb9, 0xba, 0x53, 0x2c, 0x94, 0x36,
	0x4a, 0xc5, 0x75, 0x7d, 0xda, 0x89, 0x11, 0x5c, 0x77, 0x1c, 0x99, 0x41, 0xb4, 0xb0, 0x40, 0x9a,
	0x0b, 0x8e, 0xcc, 0x20, 0xb1, 0xa6, 0x10, 0x31, 0x72, 0x74, 0x30, 0x23, 0xc7, 0x52, 0x8c, 0x54,
	0x57, 0x61, 0xe6, 0x45, 0xcb, 0xd8, 0xf3, 0x99, 0x79, 0x68, 0x79, 0x47, 0xee, 0xd2, 0xb8, 0x5c,
	0x69, 0xc6, 0xd9, 0xff, 0xe6, 0x4e, 0xd5, 0x6b, 0xfb, 0x75, 0xa6, 0x4f, 0xbf, 0x68, 0xad, 0x49,
	0x1a, 0x79, 0x02, 0xae, 0x8b, 0x29, 0x11, 0xd7, 0xbf, 0x41, 0x44, 0x77, 0xe3, 0xed, 0xec, 0xd4,
	0x45, 0x6b, 0x5e, 0x10, 0x90, 0xd3, 0x75, 0x13, 0x66, 0x69, 0xb8, 0x63, 0xe0, 0x83, 0xc9, 0x0b,
	0x95, 0x66, 0x10, 0x58, 0x20, 0x58, 0xfa, 0xd2, 0x16, 0x12, 0x96, 0x89, 0x4b, 0x5b, 0x30, 0x72,
	0x12, 0x04, 0x71, 0xf0, 0x0a, 0x23, 0x27, 0x41, 0x80, 0x4b, 0x46, 0x57, 0x00, 0x10, 0x99, 0xdc,
	0xda, 0x8d, 0xe4, 0xa4, 0x65, 0xe3, 0xd9, 0xc6, 0x13, 0x93, 0x7b, 0x25, 0x66, 0x1b, 0x4f, 0x7d,
	0x07, 0x14, 0x19, 0xfc, 0xb7, 0xdd, 0x8e, 0xe7, 0x74, 0x98, 0x25, 0x54, 0xf5, 0xbc, 0x80, 0x97,
	0x04, 0x98, 0xcb, 0x09, 0xe6, 0x98, 0xad, 0x40, 0xae, 0xee, 0x4d, 0x60, 0x50, 0x64, 0x5a, 0xc0,
	0x70, 0x93, 0xc3, 0xe7, 0x27, 0x68, 0x52, 0xc5, 0xdc, 0xd8, 0x66, 0xbe, 0x19, 0x34, 0xdb, 0xc1,
	0xea, 0x83, 0x87, 0xab, 0xa7, 0x63, 0xc5, 0x2d, 0x98, 0x43, 0x9f, 0x30, 0xc0, 0x9b, 0x71, 0xe4,
	0x75, 0x71, 0x13, 0xfa, 0x2c, 0x87, 0x56, 0x25, 0xb0, 0xdf, 0x71, 0xf2, 0x91, 0x7e, 0xc7, 0xc9,
	0x4f, 0x60, 0xcf, 0x2d, 0x98, 0xc3, 0xf3, 0x17, 0xcc, 0x32, 0x0e, 0x98, 0xe9, 0x84, 0x07, 0x82,
	0x45, 0xb3, 0x02, 0xfa, 0x04, 0x81, 0x9c, 0x4d, 0xf1, 0x12, 0xb4, 0x20, 0x14, 0x6c, 0x8a, 0xe0,
	0x82, 0xf4, 0x12, 0x4c, 0x39, 0xf6, 0x3e, 0x4b, 0x6e, 0x39, 0x9c, 0xe4, 0x00, 0xf4, 0x4e, 0xb1,
	0x36, 0xcd, 0x3d, 0xe3, 0xd0, 0x76, 0x1c, 0xe9, 0x83, 0x4e, 0x71, 0xc8, 0x1b, 0x1c, 0x80, 0xbb,
	0x93, 0x42, 0x73, 0x7f, 0x5f, 0xe0, 0xa7, 0xc4, 0xc9, 0x05, 0x0e, 0x22, 0x82, 0x4b, 0x30, 0xd5,
	0xea, 0xb4, 0x04, 0x9a, 0xec, 0x94, 0xc9, 0x56, 0xa7, 0x45, 0xc8, 0x5b, 0x30, 0xd7, 0xf2, 0xbd,
	0xd6, 0x41, 0x5b, 0xc8, 0xd6, 0x87, 0x62, 0xc3, 0xf4, 0xac, 0x84, 0xf2, 0x2a, 0x3c, 0xec, 0x21,
	0x5b, 0x15, 0xdb, 0xee, 0x53, 0x64, 0xab, 0x78, 0xe9, 0x5b, 0xb3, 0x61, 0x04, 0x75, 0xaf, 0x1d,
	0x0a, 0x8f, 0x74, 0xd2, 0x6a, 0x36, 0xaa, 0xfc, 0x9b, 0xb7, 0x03, 0x91, 0xae, 0xdd, 0x62, 0xbe,
	0xf0, 0x32, 0x39, 0x79, 0x15, 0x01, 0x78, 0x27, 0x1c, 0x47, 0x7b, 0x8e, 0x65, 0x33, 0x5f, 0x6e,
	0xb1, 0xe1, 0x78, 0x82, 0xf0, 0x49, 0xca, 0x09, 0x2c, 0xd6, 0xf4, 0x84, 0x43, 0x38, 0x61, 0x35,
	0x1b, 0xeb, 0xac, 0xe9, 0xc9, 0x72, 0x9b, 0xcc, 0xb2, 0xeb, 0xc2, 0xcd, 0xe3, 0xb4, 0xdb, 0xfc,
	0x5b, 0x22, 0x0f, 0x98, 0xd9, 0x39, 0x16, 0xfe, 0x1b, 0x47, 0x3e, 0xe1, 0xdf, 0x32, 0xd3, 0xd6,
	0xb1, 0xef, 0x09, 0x97, 0x8c, 0x67, 0xba, 0x73, 0xec, 0x7b, 0xea, 0x05, 0x98, 0xc0, 0x0a, 0xb5,
	0x8e, 0x85, 0x73, 0x35, 0xce, 0x2b, 0xd3, 0xc2, 0xcb, 0xa0, 0x38, 0x82, 0xb9, 0x0d, 0xdb, 0x65,
	0xcc, 0x17, 0xee, 0x12, 0xaf, 0x7d, 0x51, 0x80, 0xb0, 0x53, 0x78, 0xa3, 0x45, 0xe4, 0xf2, 0xbc,
	0xe8, 0x14, 0x0e, 0xa2, 0xd8, 0xe5, 0x0d, 0x98, 0x21, 0x46, 0x08, 0x0a, 0xda, 0xcc, 0x30, 0x4d,
	0x30, 0x22, 0xe1, 0xfa, 0xca, 0x73, 0x6c, 0x2b, 0xa2, 0x59, 0x12, 0x71, 0x47, 0x02, 0x12, 0x11,
	0x67, 0x2a, 0x6b, 0x7a, 0x82, 0xe2, 0xa2, 0x60, 0x2a, 0x6b, 0x7a, 0x84, 0xbe, 0x06, 0xd3, 0xc8,
	0x14, 0x81, 0x5f, 0x16, 0xb1, 0x4f, 0x0e, 0x8a, 0x08, 0x90, 0x31, 0x82, 0xe0, 0x12, 0x11, 0x20,
	0x28, 0x2a, 0x80, 0x33, 0x47, 0xe0, 0x69, 0xf7, 0xe4, 0x14, 0x87, 0x10, 0xfa, 0x12, 0x4c, 0x05,
	0x2d, 0x99, 0xfa, 0x0a, 0x31, 0x37, 0x68, 0x1d, 0x47, 0x01, 0x5a, 0xc9, 0x24, 0x41, 0x71, 0x95,
	0x46, 0x8d, 0x84, 0x22, 0x99, 0xf6, 0x23, 0x19, 0x5a, 0x36, 0x20, 0x57, 0x21, 0x92, 0x03, 0x52,
	0x0c, 0x6c, 0x79, 0x5e, 0x48, 0x13, 0x6f, 0xa3, 0xdb, 0xe3, 0xbb, 0x9f, 0x3b, 0x4d, 0xba, 0x1e,
	0x43, 0xe3, 0x16, 0xcc, 0x35, 0x05, 0x91, 0x98, 0xe3, 0xe2, 0x7a, 0x20, 0x09, 0xc5, 0x64, 0xcb,
	0x37, 0x4f, 0x61, 0x55, 0x68, 0x77, 0x60, 0xa1, 0x90, 0x0f, 0xe9, 0x8e, 0x3e, 0x66, 0xd0, 0xe5,
	0x0e, 0xea, 0x22, 0x8c, 0x75, 0x4c, 0xa7, 0x2d, 0x57, 0x1e, 0xe8, 0x43, 0xfb, 0x68, 0x16, 0x6e,
	0x24, 0x68, 0xd7, 0x8f, 0x5d, 0xb3, 0x69, 0xd7, 0x75, 0x56, 0xb7, 0x5b, 0xac, 0xe0, 0x35, 0x5b,
	0x9e, 0xcb, 0x88, 0xa3, 0xdd, 0xf7, 0x46, 0xc6, 0x77, 0x05, 0xde, 0x00, 0xbc, 0x43, 0xd2, 0x78,
	0xbb, 0x6d, 0x3a, 0x76, 0x28, 0x2f, 0xe1, 0x9a, 0xe6, 0xb0, 0xa7, 0x04, 0xc2, 0x4b, 0x2e, 0x65,
	0x66, 0x74, 0xbd, 0x96, 0xb4, 0x90, 0x23, 0x30, 0xde, 0xad, 0xc5, 0xcd, 0x15, 0x53, 0x56, 0x26,
	0x90, 0x77, 0x56, 0x50, 0xf0, 0x5d, 0x89, 0x11, 0xa2, 0x45, 0x37, 0xe8, 0x6e, 0x3c, 0x9f, 0x89,
	0xb8, 0x6a, 0x7c, 0x7d, 0x9e, 0x2e, 0x40, 0x7c, 0xbc, 0xe2, 0x8d, 0x5e, 0x6d, 0x67, 0xdf, 0x76,
	0x9c, 0x48, 0x27, 0xf0, 0x74, 0x1b, 0x12, 0xa6, 0x7d, 0xcf, 0x08, 0xe4, 0x4f, 0xe4, 0x81, 0x51,
	0xa8, 0x6c, 0xef, 0xe4, 0x6b, 0x46, 0xb9, 0xf8, 0xac, 0xa8, 0x1b, 0xd5, 0xa2, 0x5e, 0xca, 0x6f,
	0x95, 0xbe, 0xbc, 0x68, 0xd4, 0x9e, 0x94, 0xaa, 0x46, 0x65, 0xb7, 0x36, 0x9c, 0x47, 0x17, 0x61,
	0x52, 0xde, 0xbe, 0x29, 0x0f, 0xaf, 0x89, 0x7b, 0x37, 0x7b, 0xd8, 0x37, 0x72, 0x2a, 0xf6, 0x8d,
	0xf6, 0x65, 0xdf, 0x15, 0x00, 0xcc, 0x8b, 0x68, 0x84, 0x92, 0xe4, 0x90, 0x21, 0xdc, 0x1d, 0x3f,
	0x25, 0x77, 0x27, 0x7a, 0xb9, 0x2b, 0x8b, 0xa3, 0x79, 0x34, 0x19, 0x17, 0x17, 0x09, 0x8b, 0x34,
	0xf3, 0xa7, 0x7a, 0x99, 0xcf, 0xdb, 0x86, 0x6e, 0x6e, 0x82, 0x8c, 0xf4, 0x01, 0x5e, 0x57, 0x1a,
	0xc4, 0xbd, 0xf4, 0x10, 0x2e, 0x25, 0x3a, 0x09, 0x8f, 0x93, 0x3a, 0x5e, 0x18, 0x1d, 0x1d, 0x91,
	0x2b, 0x35, 0x99, 0x78, 0xa5, 0x46, 0xfb, 0xff, 0x32, 0xb4, 0xf7, 0xa1, 0xca, 0x42, 0x49, 0x1f,
	0xe5, 0x30, 0xf0, 0xbc, 0xbd, 0xfa, 0x10, 0xce, 0x05, 0x8e, 0x17, 0x1a, 0x88, 0xf5, 0x7c, 0xbb,
	0x61, 0xbb, 0xa6, 0x13, 0x6f, 0xfa, 0x50, 0x39, 0x92, 0x67, 0x57, 0x11, 0x28, 0x72, 0x05, 0x28,
	0x09, 0x76, 0xfe, 0x48, 0xbc, 0x5a, 0x83, 0xbd, 0xaf, 0x7d, 0x32, 0x83, 0x67, 0x29, 0x9e, 0x9b,
	0x3e, 0xc6, 0x4e, 0x4e, 0x79, 0x57, 0xe9, 0xf8, 0x91, 0x19, 0x6d, 0xfd, 0x95, 0x04, 0x63, 0x47,
	0xa6, 0x5f, 0xb2, 0xd4, 0xeb, 0x30, 0x6d, 0xee, 0xef, 0xdb, 0x8e, 0x8d, 0x47, 0x3f, 0xe5, 0x90,
	0x49, 0x80, 0x38, 0xef, 0x29, 0x0a, 0x40, 0xd7, 0x0d, 0xc9, 0x5b, 0x4a, 0x67, 0x08, 0x88, 0xd7,
	0x0d, 0x59, 0x5a, 0x03, 0xae, 0x90, 0xcb, 0xb8, 0x59, 0x30, 0x9e, 0x9b, 0xbe, 0x51, 0x72, 0x2d,
	0xbb, 0x63, 0x5b, 0x6d, 0xd3, 0x21, 0xf1, 0x35, 0xcc, 0x64, 0x3e, 0x97, 0xae, 0x9f, 0xac, 0xd9,
	0x22, 0x8c, 0xc5, 0xb7, 0x23, 0xcd, 0xea, 0xf4, 0xa1, 0x55, 0x60, 0x31, 0x55, 0x10, 0xb7, 0xe3,
	0x9f, 0x9b, 0x7e, 0x77, 0x3b, 0x32, 0xbd, 0xed, 0xe8, 0x5f, 0x8c, 0xf6, 0x41, 0xb8, 0x96, 0xca,
	0x50, 0x2c, 0xd1, 0x6e, 0x3a, 0xde, 0x9e, 0x89, 0x97, 0xa4, 0x06, 0x89, 0x94, 0x99, 0x64, 0xca,
	0x7f, 0x98, 0x81, 0xeb, 0xa9, 0xa4, 0x89, 0x34, 0x51, 0xb0, 0x62, 0x0b, 0xa6, 0x03, 0x0c, 0x69,
	0xf3, 0xda, 0x4b, 0xc1, 0x7e, 0x2f, 0x77, 0x52, 0xba, 0x5c, 0xd5, 0xb6, 0x18, 0xf2, 0x56, 0x87,
	0x40, 0xfe, 0x0c, 0x06, 0xb4, 0x61, 0xf9, 0x7d, 0x30, 0x15, 0xd1, 0xf3, 0xe1, 0xcb, 0x53, 0x88,
	0xba, 0xe2, 0xef, 0x98, 0x97, 0x34, 0xf0, 0x04, 0x2f, 0xbf, 0x2d, 0x03, 0xaf, 0x46, 0x15, 0x21,
	0x5d, 0xb0, 0xde, 0xae, 0x1f, 0x6e, 0xe1, 0xae, 0xd1, 0x3d, 0xcf, 0xf4, 0xad, 0xde, 0x7e, 0x4c,
	0xe5, 0x24, 0x7b, 0x05, 0xa7, 0x4c, 0x6c, 0x89, 0xe3, 0x6f, 0xec, 0x71, 0x8e, 0x94, 0x0e, 0xc9,
	0x8c, 0x3e, 0x81, 0xdf, 0x62, 0xcb, 0x39, 0xa2, 0xc8, 0xe3, 0x1f, 0x8b, 0xec, 0x07, 0x9f, 0x91,
	0xbf, 0xff, 0x63, 0x19, 0xb8, 0x92, 0x98, 0xa2, 0x18, 0xa5, 0xe5, 0x13, 0x65, 0xc7, 0x31, 0xeb,
	0xac, 0xc9, 0xf5, 0xc8, 0x6d, 0x50, 0xe2, 0x09, 0x95, 0x9a, 0x7c, 0x73, 0x12, 0x5e, 0xa2, 0x49,
	0x78, 0x16, 0xc6, 0x5a, 0x5e, 0x60, 0x50, 0x08, 0x22, 0xab, 0x8f, 0xb6, 0xbc, 0xe0, 0x4d, 0x09,
	0x3c, 0x16, 0x57, 0x6f, 0x71, 0xe0, 0x5b, 0x12, 0xf8, 0x0e, 0x56, 0x97, 0x80, 0x5f, 0xce, 0x81,
	0xa6, 0xdb, 0x30, 0x28, 0x5e, 0x92, 0xd5, 0x47, 0x4d, 0xb7, 0xf1, 0xa6, 0x04, 0x1e, 0x8b, 0x5b,
	0xca, 0x38, 0xf0, 0x2d, 0x09, 0x7c, 0x47, 0xb8, 0x01, 0x1c, 0xf8, 0xe5, 0xda, 0x27, 0xb3, 0x72,
	0x90, 0xf4, 0x69, 0x85, 0x21, 0x98, 0xfa, 0x7f, 0x48, 0x63, 0x70, 0x9f, 0xa1, 0xe7, 0xd7, 0xb9,
	0x73, 0xdb, 0xf4, 0x3a, 0xcc, 0x30, 0x1d, 0x87, 0x4e, 0xbd, 0xea, 0x73, 0x08, 0xa7, 0xfb, 0xf0,
	0xf2, 0x8e, 0x83, 0xf7, 0xac, 0x62, 0xf7, 0x51, 0x00, 0x65, 0x8a, 0x0e, 0x15, 0x10, 0x08, 0x77,
	0xb4, 0x34, 0xe8, 0x62, 0xe7, 0xc4, 0x9a, 0xda, 0x9b, 0x3b, 0xdd, 0x9b, 0x31, 0xc5, 0x26, 0xb2,
	0xc4, 0x66, 0xcc, 0x87, 0xb0, 0xd8, 0xf2, 0xb9, 0x79, 0x17, 0x32, 0xcb, 0x48, 0x1c, 0x6b, 0x15,
	0x97, 0xbd, 0x44, 0xb8, 0x62, 0x84, 0xd2, 0x3e, 0x33, 0x42, 0xa1, 0xa3, 0xd8, 0x9b, 0x55, 0xd7,
	0xc5, 0x68, 0x95, 0x07, 0xe8, 0xd3, 0xe8, 0x9c, 0xfc, 0x81, 0x3b, 0x8c, 0x67, 0xaa, 0x95, 0x5d,
	0xbd, 0x50, 0x34, 0xaa, 0x85, 0x8a, 0x5e, 0x14, 0xa2, 0x93, 0xc6, 0xf7, 0x79, 0x18, 0x37, 0x9b,
	0xa8, 0xae, 0xe8, 0x7a, 0x30, 0xf1, 0xd5, 0xdd, 0x88, 0x91, 0x9e, 0x46, 0xa4, 0x85, 0xf6, 0x68,
	0x7f, 0xa1, 0x7d, 0xad, 0xdb, 0x67, 0x97, 0xdb, 0xc9, 0x65, 0x08, 0xe4, 0x57, 0x33, 0x30, 0x93,
	0xac, 0xa9, 0xaa, 0x40, 0xaa, 0xae, 0xca, 0x19, 0x75, 0x19, 0xce, 0x0b, 0x48, 0x65, 0xed, 0xf5,
	0x62, 0xa1, 0x56, 0x7a, 0x56, 0x34, 0xd6, 0x2a, 0xe5, 0xdd, 0xaa, 0x92, 0x49, 0xe0, 0xb8, 0x35,
	0xb2, 0x55, 0xac, 0x15, 0xd7, 0xa3, 0xb3, 0x28, 0x57, 0x61, 0x39, 0x81, 0x2b, 0xd6, 0x4a, 0x98,
	0x32, 0xbf, 0x96, 0x2f, 0xaf, 0x57, 0xca, 0xca, 0x48, 0x57, 0x5a, 0x89, 0x7f, 0x5e, 0x2a, 0x2b,
	0xa3, 0xea, 0x25, 0xb8, 0xd0, 0x07, 0xb7, 0x55, 0xa9, 0x56, 0x95, 0x31, 0xf5, 0x32, 0x2c, 0x09,
	0x64, 0x7e, 0xb7, 0x56, 0x59, 0xcb, 0x6f, 0xe5, 0xcb, 0x05, 0x59, 0xa5, 0x71, 0x75, 0x11, 0x94,
	0xf2, 0xee, 0xb6, 0x21, 0x28, 0x6a, 0x6f, 0xed, 0x14, 0xab, 0xca, 0x84, 0xb6, 0x2e, 0x2f, 0x00,
	0x95, 0x8d, 0x8d, 0x02, 0x11, 0xea, 0x1d, 0x98, 0x08, 0x10, 0x24, 0xe5, 0x6a, 0x4f, 0xdc, 0x42,
	0xe2, 0xb5, 0x5d, 0xda, 0x3b, 0x59, 0xdb, 0xa0, 0xcb, 0x6a, 0x4a, 0xae, 0x8d, 0xf6, 0x7b, 0xd7,
	0xde, 0x47, 0x71, 0x99, 0x5f, 0x6a, 0xd7, 0xa3, 0xba, 0x0c, 0x93, 0x8e, 0xe9, 0x36, 0xda, 0xf2,
	0xe4, 0xe4, 0x98, 0x1e, 0x7d, 0x6b, 0xdf, 0x38, 0x4a, 0x6b, 0x37, 0x9b, 0x85, 0xb2, 0x17, 0x46,
	0x17, 0x28, 0xa8, 0xaf, 0xc0, 0xbc, 0x9b, 0xf8, 0xee, 0x3e, 0x12, 0x30, 0x97, 0x44, 0x92, 0xce,
	0xef, 0xb9, 0xb8, 0x28, 0x31, 0x14, 0x56, 0x60, 0x9e, 0xbd, 0x68, 0xd9, 0xbe, 0xb8, 0xfa, 0xc1,
	0x16, 0x2b, 0x37, 0x13, 0xfa, 0x5c, 0x0c, 0x46, 0x57, 0xba, 0x26, 0xc6, 0x35, 0xed, 0xee, 0x7b,
	0x29, 0xd7, 0x5b, 0xb3, 0x5c, 0xf2, 0x03, 0xc7, 0xf7, 0x72, 0xb9, 0x52, 0x2b, 0x6d, 0x94, 0x0a,
	0xe2, 0xb4, 0xd1, 0x6e, 0xb5, 0x56, 0xd9, 0x36, 0xaa, 0x35, 0xbd, 0x54, 0xde, 0x14, 0xe3, 0xfc,
	0x55, 0x38, 0x9b, 0x6a, 0x8c, 0x30, 0xf6, 0x28, 0x72, 0xaa, 0x26, 0x51, 0xe2, 0xee, 0xb7, 0x3f,
	0xcc, 0x80, 0xd2, 0x5d, 0x8e, 0xba, 0x02, 0x37, 0x53, 0x25, 0xe9, 0xc5, 0x9d, 0x8a, 0xce, 0x07,
	0xdd, 0xce, 0x56, 0xfe, 0xad, 0xa2, 0x6e, 0xac, 0xe5, 0xcb, 0xe5, 0xe2, 0xba, 0x72, 0x86, 0x0f,
	0xbe, 0xc1, 0x55, 0x52, 0x32, 0xea, 0x03, 0xb8, 0x9f, 0xc2, 0x6f, 0x6f, 0xf3, 0xb4, 0xc6, 0xfa,
	0x6e, 0xd1, 0xa8, 0x55, 0x8c, 0xe2, 0x9b, 0x85, 0x62, 0xb5, 0xca, 0x87, 0x1c, 0x15, 0x50, 0x55,
	0xb2, 0xea, 0x3d, 0x58, 0x19, 0x5a, 0xf4, 0xf3, 0x7c, 0x55, 0x16, 0x3f, 0xa2, 0x5e, 0x87, 0xcb,
	0x29, 0xe2, 0xea, 0xee, 0x0e, 0xa7, 0x36, 0xb6, 0x8b, 0xd5, 0x6a, 0x7e, 0xb3, 0xa8, 0x8c, 0xf2,
	0xd1, 0x9f, 0xa2, 0xe0, 0x63, 0x96, 0x06, 0xeb, 0x98, 0x56, 0xa3, 0xc1, 0x9a, 0x66, 0x3a, 0x6e,
	0xff, 0x54, 0xbf, 0x04, 0x66, 0x93, 0xbc, 0x92, 0x43, 0xf6, 0x6c, 0x9f, 0x5e, 0xd2, 0xd3, 0x94,
	0x1a, 0xa3, 0x80, 0x5b, 0x92, 0x24, 0x21, 0x37, 0x4f, 0x3a, 0xc5, 0xb2, 0xd2, 0x3b, 0x18, 0xc9,
	0x0a, 0xe8, 0x1a, 0x86, 0xf2, 0x9e, 0xe1, 0x01, 0xc5, 0x50, 0x8c, 0xf8, 0xa7, 0x66, 0x28, 0x22,
	0xba, 0x59, 0xa0, 0x7d, 0x50, 0x86, 0xb8, 0x5f, 0x31, 0x29, 0xae, 0x32, 0x7d, 0xc4, 0x55, 0xb7,
	0x54, 0xcc, 0xf6, 0x48, 0xc5, 0xf5, 0xe8, 0x9a, 0xbc, 0x11, 0x79, 0xb4, 0xa4, 0xb7, 0x9c, 0x9c,
	0xb8, 0x10, 0x6f, 0x1e, 0x45, 0x95, 0x51, 0xdd, 0x2d, 0x14, 0x8a, 0xc5, 0xf5, 0xe2, 0xba, 0xbc,
	0x09, 0x8f, 0x4f, 0x56, 0xab, 0x4d, 0x53, 0x42, 0xd8, 0xa9, 0xd1, 0x37, 0x77, 0xab, 0x7c, 0x66,
	0xa5, 0x2e, 0xcd, 0x9c, 0xf4, 0x99, 0x45, 0x56, 0xd3, 0x15, 0x80, 0x3d, 0xa7, 0xcd, 0x12, 0x97,
	0x8f, 0xce, 0xea, 0x53, 0x1c, 0x42, 0x68, 0x71, 0x43, 0x36, 0x1e, 0xb7, 0x60, 0x66, 0x53, 0xba,
	0x30, 0x02, 0x56, 0x63, 0x66, 0x93, 0xee, 0x36, 0x6d, 0x09, 0xc3, 0x7d, 0x52, 0xde, 0x6d, 0xda,
	0x22, 0xaf, 0xed, 0xaa, 0x38, 0x71, 0x82, 0xf3, 0x73, 0x4a, 0x1e, 0x28, 0xc1, 0x43, 0x27, 0xe2,
	0x60, 0x66, 0xe4, 0xfb, 0x03, 0x8e, 0x8b, 0xfe, 0xcd, 0xef, 0x76, 0xf5, 0x57, 0x60, 0x1e, 0x9b,
	0x94, 0x38, 0x9b, 0x25, 0x6e, 0x04, 0xe0, 0x0d, 0x4b, 0x9c, 0xcb, 0xba, 0x03, 0x0a, 0x35, 0x2f,
	0x41, 0x49, 0x31, 0xae, 0x79, 0x6c, 0x64, 0x82, 0xf4, 0x0a, 0xc0, 0x91, 0xed, 0xca, 0xf8, 0x35,
	0x85, 0xb9, 0xa6, 0x8e, 0x6c, 0x57, 0x04, 0xa2, 0xa3, 0xf3, 0x0a, 0x73, 0xc9, 0xf3, 0x0a, 0xb7,
	0x7a, 0xb6, 0xf6, 0xcd, 0x27, 0x2f, 0x46, 0x95, 0xb2, 0x54, 0x85, 0xd1, 0x3d, 0x2f, 0x94, 0x3b,
	0x1e, 0xf0, 0xb7, 0x7a, 0x3f, 0x4a, 0x2a, 0x6f, 0x6e, 0x5c, 0x48, 0x5d, 0x67, 0x41, 0x48, 0x71,
	0xe9, 0xe0, 0xf2, 0x27, 0xc7, 0x4f, 0xb3, 0x18, 0x32, 0x64, 0x83, 0xbd, 0x9a, 0x38, 0x15, 0x38,
	0x2b, 0x8e, 0xfc, 0x45, 0x46, 0xed, 0x68, 0x97, 0x51, 0xdb, 0x92, 0x92, 0x6e, 0x56, 0xc7, 0xdf,
	0x71, 0xeb, 0xc7, 0x93, 0xad, 0xbf, 0x9e, 0x3e, 0x1e, 0x27, 0x06, 0x47, 0xf2, 0x5c, 0xdc, 0x2b,
	0xa0, 0x26, 0x3e, 0x8d, 0xfa, 0x81, 0xe9, 0x36, 0x68, 0x33, 0xde, 0x98, 0xbe, 0x90, 0xc0, 0x14,
	0x10, 0xc1, 0x8b, 0xc6, 0x83, 0x37, 0xe4, 0xe6, 0xe2, 0x6f, 0x52, 0x57, 0x66, 0x10, 0xb0, 0x80,
	0x56, 0x5f, 0xa4, 0x77, 0x3b, 0x2b, 0xa0, 0xc8, 0x15, 0x74, 0x9b, 0x28, 0x16, 0x4a, 0x03, 0x81,
	0x3e, 0xb8, 0xb1, 0x62, 0x31, 0x33, 0x3c, 0x08, 0x44, 0xaf, 0x8b, 0x2f, 0x84, 0x9b, 0x4d, 0xae,
	0xda, 0x66, 0x05, 0x1c, 0xbf, 0xd4, 0x25, 0x98, 0x38, 0x60, 0xa6, 0xc3, 0x5b, 0x43, 0xfd, 0x2c,
	0x3f, 0xe9, 0x0e, 0xf6, 0x16, 0xde, 0x6b, 0x4b, 0x5d, 0x2c, 0x3f, 0x63, 0xab, 0xbe, 0xc9, 0x2c,
	0xd3, 0x11, 0x7d, 0x4c, 0x56, 0xfd, 0x36, 0x87, 0xd0, 0x7b, 0x07, 0x8e, 0x13, 0x08, 0x82, 0x05,
	0xf9, 0xde, 0x81, 0xe3, 0x04, 0x44, 0x70, 0x03, 0x66, 0xa8, 0x7c, 0x41, 0xa1, 0x8a, 0xd0, 0x23,
	0xc2, 0x88, 0xe4, 0x26, 0xcc, 0x8a, 0x9a, 0x08, 0x1a, 0x0a, 0x6b, 0xce, 0x08, 0x60, 0x44, 0x24,
	0x2a, 0x25, 0x88, 0x16, 0x45, 0x6c, 0x91, 0x80, 0x44, 0xd4, 0xbd, 0xf4, 0x71, 0xee, 0xe4, 0xa5,
	0x0f, 0xba, 0xd4, 0xd6, 0xec, 0x88, 0x50, 0x36, 0xc5, 0x3d, 0xa7, 0x10, 0x82, 0x0a, 0xb8, 0x7b,
	0xf1, 0xe7, 0xc2, 0x17, 0x69, 0xf1, 0xe7, 0x06, 0xcc, 0xa4, 0x0e, 0x54, 0x52, 0xa8, 0x74, 0xba,
	0x9e, 0x38, 0x4c, 0xf9, 0x0f, 0x32, 0x30, 0x2e, 0xb6, 0xd9, 0x9e, 0x85, 0x6e, 0xf1, 0xa8, 0x9c,
	0x89, 0x81, 0x1b, 0xf9, 0xd2, 0x56, 0x71, 0xdd, 0xd8, 0x2c, 0x28, 0x19, 0x75, 0x09, 0x16, 0x53,
	0xc0, 0x9a, 0xbe, 0x5b, 0xad, 0xe1, 0xb9, 0xca, 0x6e, 0x4c, 0x6c, 0xfc, 0x75, 0x63, 0xe4, 0x81,
	0x9e, 0xb1, 0xde, 0xdc, 0x4a, 0xdb, 0xc5, 0xca, 0x6e, 0x4d, 0x19, 0xe7, 0x2a, 0x53, 0x60, 0x4a,
	0xe5, 0x52, 0xf5, 0x49, 0x22, 0xbf, 0x89, 0xc4, 0x7d, 0x8a, 0x49, 0x49, 0x17, 0xad, 0x26, 0x15,
	0xe1, 0x62, 0xa1, 0x58, 0xa7, 0x0b, 0xab, 0x76, 0x7c, 0xd6, 0xb1, 0xd9, 0xd1, 0xba, 0x19, 0x9a,
	0x6b, 0x8e, 0x87, 0xeb, 0xe5, 0x93, 0xac, 0xee, 0xb9, 0xdc, 0x65, 0x12, 0x17, 0x84, 0xcc, 0xe4,
	0x0a, 0xd5, 0x8a, 0xa4, 0xd7, 0x23, 0xac, 0xf6, 0x4d, 0xf1, 0x65, 0x77, 0x64, 0x01, 0xae, 0x6e,
	0x62, 0xb6, 0xdd, 0x59, 0x0a, 0xef, 0x5f, 0xbd, 0x00, 0x5c, 0x60, 0x98, 0x4d, 0x23, 0x90, 0x21,
	0x1d, 0xfc, 0xac, 0xc6, 0x08, 0x53, 0x08, 0x16, 0x42, 0xe4, 0x63, 0x84, 0x5c, 0xc7, 0x24, 0xc4,
	0x7a, 0x8c, 0x68, 0x8a, 0x75, 0x39, 0x42, 0x6c, 0x6b, 0xfb, 0x70, 0xff, 0x74, 0x55, 0x12, 0xa1,
	0x84, 0xf7, 0x53, 0xe4, 0x0f, 0x2f, 0xca, 0xa2, 0xd6, 0x2e, 0xe7, 0x06, 0xf2, 0x46, 0x8f, 0x68,
	0xb5, 0xcf, 0x4c, 0xc2, 0x79, 0x3c, 0xdf, 0x45, 0xa7, 0xfa, 0x49, 0x7a, 0x52, 0x64, 0xe3, 0x54,
	0xf1, 0xa3, 0x5b, 0x7d, 0x54, 0xb7, 0xa0, 0x4a, 0x2a, 0xf0, 0x1b, 0x30, 0x15, 0xd0, 0x38, 0x96,
	0x57, 0x3a, 0xc9, 0xb7, 0x60, 0x08, 0x4c, 0x47, 0xba, 0x85, 0x88, 0x1c, 0x15, 0x77, 0x93, 0x90,
	0x74, 0x94, 0xcf, 0xd5, 0x98, 0xf5, 0x43, 0xcb, 0xf0, 0xe3, 0x03, 0x8a, 0xe2, 0xb9, 0x9a, 0x7c,
	0xfd, 0xd0, 0xd2, 0x89, 0x12, 0xcf, 0xc5, 0x05, 0xa1, 0x91, 0x96, 0xa3, 0x63, 0x28, 0x47, 0x31,
	0x0f, 0xbd, 0x9f, 0x18, 0x1d, 0x4f, 0x88, 0xd1, 0x1b, 0x30, 0x73, 0x60, 0x37, 0x0e, 0x18, 0x66,
	0xe2, 0x1e, 0x4a, 0x61, 0x2d, 0x60, 0x78, 0xb6, 0x31, 0x7d, 0x65, 0xd2, 0x64, 0xcf, 0x95, 0x49,
	0x0f, 0xc4, 0xf3, 0x3d, 0x58, 0xdd, 0x04, 0xe5, 0x75, 0xb1, 0xf5, 0x40, 0x54, 0x39, 0x76, 0x42,
	0xb9, 0x50, 0xc6, 0x7d, 0x63, 0x42, 0xa0, 0xd3, 0x47, 0xac, 0x76, 0x20, 0xa9, 0x76, 0xfe, 0xfc,
	0x04, 0xf8, 0x0d, 0x98, 0x21, 0x01, 0xbe, 0xe7, 0x7b, 0xee, 0x3b, 0x4c, 0x48, 0x70, 0x12, 0xea,
	0x6b, 0x08, 0x8a, 0x49, 0x02, 0xdb, 0xe9, 0x30, 0x5f, 0xc8, 0x70, 0x22, 0xa9, 0x22, 0x08, 0x23,
	0x98, 0x48, 0xd2, 0xf0, 0x1c, 0x4b, 0x88, 0xf0, 0x29, 0x84, 0x6c, 0x7a, 0x0e, 0xae, 0x99, 0x92,
	0x12, 0x10, 0x85, 0x90, 0xfc, 0x26, 0xc5, 0x10, 0x17, 0x42, 0x24, 0xa2, 0x90, 0xc5, 0x04, 0x49,
	0x5c, 0x08, 0x91, 0x60, 0x21, 0xb4, 0x44, 0x35, 0x85, 0x10, 0x2c, 0xe4, 0x26, 0xcc, 0x0a, 0x45,
	0x22, 0x4a, 0x21, 0x51, 0x2d, 0xb4, 0x8b, 0x28, 0x26, 0x26, 0x12, 0xe5, 0x5c, 0x48, 0x12, 0x89,
	0x82, 0xae, 0x81, 0x50, 0x3f, 0x54, 0xd2, 0x92, 0x58, 0xb7, 0x43, 0x10, 0x16, 0x75, 0x0b, 0xe6,
	0xa4, 0x42, 0x12, 0x65, 0xd1, 0x32, 0x95, 0x54, 0x53, 0xa2, 0xb0, 0x04, 0x99, 0x28, 0x6d, 0x39,
	0x45, 0x26, 0x8a, 0xe3, 0xa3, 0x53, 0x90, 0x61, 0x79, 0x97, 0xc4, 0xe8, 0x24, 0x98, 0x2c, 0x50,
	0x2a, 0x37, 0x51, 0xe0, 0x65, 0x61, 0x6a, 0x11, 0x34, 0x2e, 0x50, 0x92, 0x89, 0x02, 0xaf, 0xa4,
	0xc8, 0xe2, 0x02, 0x25, 0x19, 0x16, 0x78, 0x55, 0x74, 0x28, 0xc1, 0x78, 0x81, 0xda, 0x57, 0x46,
	0x77, 0x35, 0xc7, 0x4f, 0x25, 0xc9, 0x63, 0xf4, 0x24, 0x2d, 0x4f, 0xf0, 0x40, 0x2e, 0xc1, 0x54,
	0x68, 0xfa, 0x0d, 0x16, 0xc6, 0xe6, 0xd8, 0x24, 0x01, 0x4a, 0x96, 0x7c, 0xfb, 0x65, 0xb3, 0x60,
	0xf4, 0xcd, 0x3b, 0xf9, 0xf6, 0x0b, 0x2d, 0x81, 0xc9, 0x9b, 0xbd, 0xe5, 0x67, 0xb4, 0x19, 0xa4,
	0x60, 0xac, 0x9b, 0xb6, 0x73, 0x5c, 0x88, 0xaf, 0x54, 0xa3, 0x90, 0xaa, 0xe7, 0x38, 0xed, 0x96,
	0xf6, 0xcd, 0xa3, 0x91, 0x06, 0x18, 0x42, 0x16, 0xdf, 0x21, 0xfa, 0x26, 0x4c, 0x72, 0xf9, 0x80,
	0x5b, 0x16, 0xc9, 0x55, 0xfb, 0x70, 0xee, 0x3d, 0xa4, 0xcf, 0x71, 0x49, 0xb2, 0xd6, 0xae, 0x1f,
	0x32, 0xf1, 0x86, 0x4d, 0x94, 0xdb, 0xf2, 0x27, 0x46, 0x60, 0xbe, 0x0b, 0x1b, 0x49, 0xaa, 0x4c,
	0x42, 0x52, 0x2d, 0xc1, 0x84, 0xcf, 0xea, 0x9e, 0x6f, 0xc9, 0x03, 0x3c, 0xf2, 0x93, 0x33, 0xd4,
	0xec, 0x34, 0x8c, 0x64, 0x78, 0x7c, 0xd2, 0xec, 0x34, 0xc8, 0x55, 0xc1, 0x15, 0x73, 0x8b, 0x75,
	0x8c, 0xa4, 0x49, 0x0b, 0x08, 0x22, 0x02, 0x91, 0x9a, 0x84, 0xcc, 0x58, 0x94, 0x3a, 0xb1, 0xde,
	0xce, 0x53, 0x13, 0x7a, 0x3c, 0x91, 0x9a, 0x08, 0x78, 0x5f, 0x77, 0x1a, 0x86, 0x10, 0x3a, 0x13,
	0xa2, 0xaf, 0x3b, 0x8d, 0x75, 0x92, 0x3b, 0x7c, 0x3c, 0x61, 0x7a, 0x41, 0x30, 0x29, 0xc6, 0x13,
	0x87, 0x09, 0x92, 0x6b, 0x30, 0xcd, 0x73, 0x90, 0xe2, 0x49, 0x2c, 0xe9, 0x9b, 0x1d, 0xdc, 0x2e,
	0xc0, 0x25, 0x14, 0x9e, 0x5c, 0xe5, 0x79, 0x48, 0x12, 0x10, 0xe6, 0x1b, 0x07, 0x4a, 0x22, 0x91,
	0x8b, 0x14, 0x65, 0xd3, 0x51, 0x2e, 0x55, 0x21, 0xcd, 0xa2, 0x5c, 0x24, 0xc9, 0x4c, 0x22, 0x17,
	0x41, 0xa4, 0xfd, 0x95, 0x6c, 0xe4, 0xcf, 0xd2, 0x9d, 0x10, 0xc2, 0xb7, 0x48, 0x3f, 0x59, 0x45,
	0x83, 0xb5, 0xe7, 0xc9, 0xaa, 0x1a, 0x82, 0xd5, 0x22, 0x8c, 0xa7, 0x36, 0xfb, 0x5c, 0xce, 0xf5,
	0xc9, 0x31, 0x57, 0x14, 0x86, 0xdf, 0xbc, 0x78, 0xdc, 0x2b, 0x3a, 0x3b, 0x24, 0x12, 0x6b, 0x5f,
	0x97, 0x81, 0x09, 0x41, 0x84, 0xb7, 0xad, 0xa7, 0xc9, 0x94, 0x33, 0xea, 0x22, 0x28, 0x12, 0x58,
	0x78, 0x52, 0xcc, 0xd7, 0x28, 0x1e, 0xa2, 0xc0, 0x4c, 0x44, 0xba, 0xbe, 0x55, 0xa4, 0xa3, 0x0a,
	0x12, 0xf2, 0x24, 0xaf, 0xe7, 0xab, 0x55, 0x3c, 0x0a, 0x3d, 0x92, 0x4c, 0xbf, 0xa9, 0x97, 0x8a,
	0x1b, 0x3c, 0xfd, 0xa8, 0xba, 0x00, 0xb3, 0x51, 0xae, 0x95, 0xdd, 0x72, 0x4d, 0x19, 0xd3, 0x3e,
	0x35, 0x0e, 0x97, 0xc4, 0x9b, 0x70, 0xb4, 0xb1, 0xa7, 0xed, 0x84, 0x49, 0xab, 0xe1, 0x44, 0x67,
	0xff, 0x66, 0x6f, 0x40, 0xeb, 0x44, 0xb3, 0x62, 0x64, 0x80, 0x59, 0xb1, 0x04, 0x13, 0xcc, 0xb5,
	0xa2, 0x8d, 0x71, 0xb3, 0xba, 0xfc, 0xa4, 0x5b, 0x6d, 0xa4, 0xc1, 0x21, 0xc6, 0x71, 0xd2, 0xd4,
	0x48, 0xbd, 0x7b, 0x27, 0x03, 0x04, 0x49, 0xcf, 0x90, 0x06, 0x6f, 0x8f, 0x67, 0x38, 0xd9, 0xcf,
	0x33, 0x9c, 0xea, 0xe7, 0x19, 0x42, 0x3f, 0xcf, 0x70, 0x7a, 0x88, 0x67, 0x38, 0x73, 0x5a, 0xcf,
	0x70, 0xf6, 0x24, 0xcf, 0x70, 0x6e, 0xa8, 0x67, 0x38, 0x3f, 0xd4, 0x33, 0x54, 0xfa, 0x1b, 0x16,
	0x0b, 0x03, 0x0c, 0x0b, 0x75, 0x90, 0x61, 0x71, 0x76, 0xa0, 0x61, 0xb1, 0x38, 0xd4, 0x33, 0x3c,
	0x77, 0x92, 0x67, 0x78, 0xfe, 0x44, 0xcf, 0xf0, 0xc2, 0x29, 0x3c, 0xc3, 0xa5, 0xd3, 0x78, 0x86,
	0x17, 0xfb, 0x78, 0x86, 0xa9, 0x48, 0xce, 0x72, 0x3a, 0x92, 0x13, 0xdf, 0xd7, 0x2a, 0x14, 0x14,
	0xce, 0x91, 0x6d, 0xf3, 0x50, 0x4c, 0x0e, 0xad, 0x2a, 0x2f, 0xab, 0xe5, 0xa6, 0x78, 0x81, 0xb9,
	0x21, 0xf3, 0x77, 0xbc, 0x56, 0xdb, 0xa1, 0x18, 0x54, 0xbf, 0x3b, 0x90, 0x84, 0xce, 0x0f, 0x0f,
	0xd0, 0xaa, 0xf5, 0xc4, 0xd2, 0xce, 0x34, 0xc1, 0xb8, 0x3d, 0xeb, 0x69, 0xc7, 0x52, 0x49, 0x6e,
	0x47, 0x13, 0xa3, 0x6f, 0xf6, 0x4f, 0xe1, 0x3c, 0x57, 0x31, 0x46, 0x1d, 0x11, 0x46, 0x2b, 0xc2,
	0x08, 0x15, 0x26, 0xa3, 0x4a, 0xfd, 0x12, 0xeb, 0x8b, 0x56, 0x1f, 0xa8, 0xf6, 0x83, 0xd1, 0x7b,
	0xa0, 0x5d, 0x2d, 0x8d, 0x34, 0xa5, 0x60, 0x17, 0x2d, 0xdd, 0xd3, 0x31, 0x79, 0xce, 0x2e, 0x5a,
	0xb9, 0x6f, 0x89, 0xa3, 0x34, 0x74, 0x41, 0xd5, 0x80, 0xca, 0xd1, 0x0e, 0xda, 0x5b, 0xb9, 0xd3,
	0xb4, 0x51, 0x9c, 0xb8, 0x69, 0x0c, 0xc2, 0x6b, 0x4b, 0xf2, 0x51, 0x0a, 0xcc, 0xe7, 0x89, 0x1d,
	0x84, 0x9e, 0x7f, 0xbc, 0xe5, 0x99, 0x96, 0xf6, 0x43, 0x59, 0xe9, 0x6b, 0x26, 0x12, 0xf2, 0xf1,
	0x22, 0x96, 0xe1, 0xd6, 0x60, 0x92, 0x4f, 0xe5, 0x84, 0xca, 0x7f, 0x39, 0x37, 0x84, 0x3e, 0xc7,
	0x7f, 0x0b, 0xe5, 0x2e, 0xd3, 0x2d, 0x7f, 0x34, 0x03, 0x53, 0x11, 0xbc, 0x6f, 0x77, 0x4b, 0xe1,
	0x91, 0x4d, 0x08, 0x8f, 0x2d, 0x98, 0x6e, 0xc9, 0x53, 0xae, 0x51, 0x04, 0xf4, 0xe6, 0xd0, 0xc2,
	0x45, 0x24, 0x74, 0xbc, 0xec, 0xf9, 0x4d, 0xd3, 0xd1, 0xa1, 0x15, 0x9d, 0xa3, 0xd3, 0x9e, 0x44,
	0xa1, 0x80, 0x69, 0x98, 0x28, 0xb9, 0x1d, 0xd3, 0xb1, 0x2d, 0xe5, 0x8c, 0x0a, 0x20, 0x88, 0x95,
	0x8c, 0x3a, 0x0f, 0xd3, 0xbb, 0xae, 0xcf, 0xcc, 0xfa, 0x81, 0xb9, 0xe7, 0x30, 0x25, 0xcb, 0x95,
	0xc3, 0x86, 0xe9, 0x38, 0x7b, 0x66, 0xfd, 0xb0, 0xe6, 0xad, 0x17, 0x78, 0x49, 0xca, 0x88, 0xf6,
	0xc1, 0xe8, 0xe6, 0xe5, 0xd8, 0x30, 0xdb, 0xf0, 0x3d, 0xba, 0xbe, 0x4f, 0x5d, 0x06, 0x69, 0xc6,
	0xad, 0x0b, 0x2f, 0x39, 0xfa, 0xd6, 0x3e, 0x96, 0x91, 0x8a, 0xb5, 0xda, 0xf6, 0x3b, 0xec, 0x58,
	0x9a, 0x8a, 0x3b, 0x30, 0x8b, 0x3f, 0xba, 0x6e, 0xb1, 0x3e, 0x9b, 0x23, 0xb2, 0xa7, 0x02, 0x87,
	0x6b, 0x13, 0xe7, 0x9f, 0xee, 0x16, 0xab, 0x14, 0xe4, 0xc7, 0xe8, 0xc1, 0xd3, 0xdd, 0xfc, 0x56,
	0xa9, 0xf6, 0x96, 0x3e, 0xf3, 0x76, 0x82, 0x2a, 0xb5, 0xbb, 0x35, 0x9b, 0xde, 0x26, 0xfc, 0x9d,
	0x19, 0x7a, 0x45, 0x31, 0xae, 0x84, 0x18, 0xb2, 0x7f, 0x96, 0xb5, 0x48, 0x5d, 0x66, 0x40, 0xab,
	0x81, 0xd1, 0xb7, 0xf6, 0xff, 0x46, 0xb3, 0xab, 0xcc, 0x8e, 0x70, 0xc0, 0x6e, 0x78, 0xbe, 0xd8,
	0xc5, 0x4c, 0x0c, 0xbb, 0x0d, 0x4a, 0x9d, 0x1e, 0x18, 0x33, 0xd2, 0x4a, 0x57, 0x9f, 0x13, 0xf0,
	0x6d, 0x51, 0xce, 0x55, 0x98, 0x96, 0x77, 0xb2, 0x24, 0xd6, 0x91, 0xc4, 0x65, 0x2c, 0xc3, 0xaf,
	0x16, 0x79, 0x2c, 0x4d, 0xfc, 0xde, 0x5a, 0x9c, 0xf8, 0xf4, 0xe2, 0xc7, 0xb2, 0xf2, 0xc9, 0x0b,
	0x52, 0x51, 0x98, 0x9e, 0x86, 0x4a, 0x8d, 0x99, 0xcd, 0x40, 0x36, 0xe4, 0x62, 0xb7, 0xd5, 0x10,
	0x73, 0x28, 0x59, 0xb3, 0x6c, 0x7a, 0xef, 0x72, 0x01, 0xc6, 0xe9, 0x14, 0x3b, 0xde, 0xf5, 0x89,
	0x5b, 0x27, 0x4e, 0x2e, 0x2b, 0x27, 0xee, 0x62, 0x10, 0x49, 0x97, 0xbf, 0x1a, 0xc6, 0xc5, 0x35,
	0x0c, 0x5c, 0x56, 0xc9, 0xeb, 0x43, 0xe5, 0x98, 0x95, 0xb7, 0x87, 0xaa, 0x5f, 0x02, 0x93, 0x2e,
	0x3b, 0xa2, 0x00, 0x7f, 0xb6, 0xf7, 0xd2, 0xb8, 0x85, 0xc4, 0xa5, 0x71, 0xe5, 0x0a, 0xff, 0xa3,
	0x4f, 0xb8, 0xec, 0x88, 0x17, 0x1c, 0x7b, 0x31, 0x83, 0xea, 0x75, 0x12, 0x1b, 0xef, 0xfe, 0xc5,
	0xbb, 0x30, 0x59, 0xac, 0x6d, 0xe0, 0x56, 0x01, 0x75, 0x19, 0xce, 0x1d, 0x1a, 0x45, 0xa1, 0x66,
	0xb8, 0x62, 0x7a, 0x6e, 0xfa, 0xdc, 0xfc, 0x56, 0x3e, 0xb1, 0xa2, 0x5e, 0x85, 0x8b, 0x12, 0xd7,
	0xf3, 0x70, 0xad, 0xf2, 0xa9, 0x15, 0xf5, 0x25, 0xb8, 0x36, 0x10, 0x4f, 0xb6, 0x9c, 0xf2, 0xed,
	0x2b, 0xaa, 0x06, 0x57, 0x24, 0x55, 0x3c, 0xb5, 0x8d, 0xf5, 0xe2, 0x8e, 0x5e, 0x2c, 0xe4, 0x6b,
	0xc5, 0x75, 0xe5, 0x3b, 0x56, 0xd4, 0x15, 0xd0, 0x24, 0x4d, 0x95, 0x6e, 0x08, 0xad, 0xf9, 0x62,
	0xc3, 0x6f, 0x82, 0xf0, 0xaf, 0xaf, 0xa8, 0x39, 0xb8, 0x23, 0x09, 0xa3, 0x67, 0x49, 0x8d, 0x01,
	0xaf, 0xc1, 0x2a, 0x7f, 0x23, 0xd5, 0x84, 0x9e, 0xa7, 0x5a, 0x95, 0xef, 0x5c, 0x51, 0x5f, 0x86,
	0x1b, 0x03, 0xf1, 0x92, 0x95, 0xca, 0x77, 0x75, 0xd1, 0xd1, 0xc3, 0x6e, 0x3d, 0x8f, 0x87, 0x2a,
	0xdf, 0x9d, 0xaa, 0xdf, 0x40, 0xba, 0x28, 0xdf, 0xef, 0x59, 0x49, 0xb2, 0x1f, 0xdf, 0x50, 0x35,
	0xc4, 0x23, 0xaa, 0xca, 0xdf, 0x4c, 0x31, 0x25, 0x6e, 0x6b, 0xf7, 0x43, 0xaf, 0xca, 0xf7, 0xae,
	0xa8, 0xb7, 0xe0, 0xfa, 0x40, 0x42, 0x49, 0xf6, 0x7d, 0x2b, 0xea, 0x1d, 0x78, 0xa9, 0x0f, 0xef,
	0x7a, 0xde, 0x74, 0x55, 0xfe, 0xd6, 0x8a, 0xfa, 0x41, 0x78, 0x24, 0x49, 0xb7, 0x19, 0x0b, 0x6b,
	0x07, 0x6c, 0xe7, 0xd8, 0xf7, 0xaa, 0xb6, 0xe3, 0xd8, 0x2e, 0x0b, 0x02, 0x63, 0xcd, 0x74, 0x4d,
	0xd7, 0x2c, 0xf8, 0xe6, 0x7e, 0x98, 0xec, 0xa0, 0x4f, 0xaf, 0xa8, 0xef, 0x87, 0x87, 0x51, 0xca,
	0x67, 0xdb, 0x79, 0x7d, 0xd3, 0x78, 0x62, 0x37, 0x0e, 0x36, 0xb8, 0xef, 0x4a, 0xc3, 0x2f, 0x7a,
	0x49, 0x21, 0x91, 0xee, 0xfb, 0x57, 0xd4, 0x57, 0xe1, 0xee, 0x80, 0x74, 0x15, 0x57, 0x3c, 0xfb,
	0x92, 0x48, 0xf0, 0x03, 0xa9, 0x61, 0xd5, 0xf7, 0x31, 0x53, 0xe5, 0xa7, 0x6f, 0xab, 0x77, 0xe1,
	0xd6, 0x50, 0x9a, 0xa8, 0x27, 0x7e, 0xe6, 0x76, 0x92, 0xdb, 0x83, 0x5f, 0x3f, 0x55, 0x7e, 0xf6,
	0x76, 0xb2, 0xa6, 0x83, 0x09, 0xa3, 0x9c, 0x7f, 0xee, 0xb6, 0x7a, 0x0d, 0x96, 0x7b, 0x12, 0x44,
	0x6f, 0x9b, 0x2a, 0x3f, 0xdf, 0xbf, 0xe8, 0x9e, 0xc7, 0x4f, 0x95, 0x5f, 0xb8, 0x9d, 0x1c, 0xcd,
	0x3d, 0xef, 0x85, 0x2a, 0xff, 0xf2, 0x76, 0x72, 0x94, 0x0e, 0x7c, 0x4f, 0x54, 0xf9, 0x57, 0xb7,
	0xd5, 0x9b, 0x70, 0xb5, 0x87, 0x2e, 0xf5, 0x2a, 0xa8, 0xf2, 0xaf, 0x6f, 0xf7, 0x65, 0x70, 0xf2,
	0x1d, 0x4e, 0xe5, 0x17, 0x6f, 0xab, 0x37, 0xe0, 0xf2, 0x60, 0x1a, 0x66, 0x29, 0xff, 0xa6, 0x7f,
	0x9d, 0xba, 0xdf, 0xc3, 0x54, 0x7e, 0xe9, 0xb6, 0x7a, 0x1b, 0x6e, 0x0e, 0x60, 0x6b, 0x8a, 0xf2,
	0xdf, 0xf6, 0x67, 0x97, 0x78, 0x72, 0x46, 0x37, 0x43, 0x26, 0xf8, 0xfa, 0xcb, 0xb7, 0x93, 0x93,
	0xcb, 0x58, 0x6f, 0x33, 0x47, 0xee, 0xb8, 0x53, 0xfe, 0xf8, 0xae, 0x7a, 0x09, 0xce, 0x77, 0xe3,
	0x04, 0x7f, 0xfe, 0xe4, 0x6e, 0xbf, 0x84, 0x5c, 0x9a, 0x05, 0xca, 0xe7, 0xee, 0xaa, 0x17, 0x61,
	0x31, 0x8d, 0x23, 0x03, 0x48, 0xf9, 0xfc, 0xdd, 0xe4, 0xc8, 0x18, 0xf0, 0x66, 0x45, 0x72, 0x0c,
	0xff, 0xbb, 0x7b, 0xea, 0x7d, 0x58, 0xe9, 0x93, 0x20, 0x7a, 0xeb, 0x21, 0x49, 0xfd, 0xef, 0xef,
	0xa9, 0xaf, 0xc1, 0xab, 0xc3, 0xa8, 0xfb, 0x4d, 0xac, 0x5f, 0xb9, 0x97, 0x9c, 0x90, 0x89, 0x54,
	0x78, 0x3d, 0x61, 0xfa, 0xa9, 0x85, 0x64, 0xba, 0x5f, 0xbd, 0x97, 0x94, 0x64, 0xfd, 0xdf, 0x8b,
	0x48, 0xd2, 0xff, 0xda, 0xbd, 0xa4, 0x32, 0x18, 0xd0, 0x78, 0xe5, 0xd7, 0xef, 0x25, 0x07, 0x4c,
	0xbf, 0x36, 0x28, 0xff, 0xf1, 0x5e, 0x52, 0x4c, 0x0d, 0x6b, 0xa6, 0xf2, 0x1b, 0xf7, 0x92, 0x62,
	0xea, 0xd4, 0x6d, 0x33, 0x56, 0x95, 0xdf, 0xbc, 0xa7, 0x3e, 0x80, 0x7b, 0xa7, 0x6e, 0x9d, 0xb1,
	0xaa, 0xfc, 0xd6, 0xbd, 0xe4, 0xa8, 0x33, 0x06, 0x1e, 0x38, 0x52, 0x7e, 0x7b, 0x10, 0x23, 0x92,
	0x67, 0x71, 0x94, 0xff, 0x74, 0x6f, 0xc0, 0x58, 0x21, 0x8b, 0xbb, 0x67, 0xe3, 0xbd, 0xf2, 0x3b,
	0xf7, 0x92, 0xd3, 0xb1, 0xef, 0x4b, 0x99, 0xca, 0x3f, 0xbe, 0x9f, 0x9c, 0x6b, 0x03, 0x5f, 0x69,
	0x54, 0x7e, 0xf4, 0x7e, 0xaa, 0x6f, 0x4f, 0x7a, 0xcd, 0x51, 0xf9, 0x27, 0xf7, 0x53, 0x6d, 0x1f,
	0xf8, 0x96, 0xa0, 0xf2, 0x63, 0xf7, 0x53, 0xad, 0x3a, 0xf1, 0xd1, 0x41, 0xe5, 0xc7, 0xef, 0xab,
	0x57, 0x60, 0xa9, 0x6f, 0xab, 0xec, 0x20, 0x54, 0x7e, 0xe2, 0x7e, 0x52, 0xb3, 0x0d, 0x7a, 0x81,
	0x4f, 0xf9, 0xc9, 0xfb, 0x49, 0x79, 0xd6, 0xff, 0x55, 0x4e, 0xe5, 0x9f, 0x0e, 0x64, 0x4e, 0xea,
	0xd5, 0x38, 0xe5, 0x9f, 0x0d, 0x64, 0x4e, 0xdf, 0xd7, 0xe5, 0x94, 0x7f, 0x9e, 0xa6, 0x3f, 0xe9,
	0x81, 0x32, 0xe5, 0x5f, 0xdc, 0x57, 0x3f, 0x00, 0xab, 0xa7, 0xa6, 0x8f, 0xa5, 0xd2, 0x4f, 0xdd,
	0x57, 0x57, 0xe1, 0x95, 0x7e, 0x15, 0x1b, 0x5c, 0xd8, 0x4f, 0xdf, 0x57, 0x3f, 0x04, 0xef, 0x7f,
	0x4f, 0x69, 0xe2, 0x02, 0x7f, 0xe6, 0x7e, 0x4a, 0x74, 0x9c, 0xf6, 0x7d, 0x23, 0xe5, 0x67, 0x07,
	0x72, 0xb0, 0xe7, 0x65, 0xa5, 0xd0, 0x0c, 0x99, 0xf2, 0x73, 0xf7, 0x07, 0x0d, 0xed, 0xe8, 0x2d,
	0x3b, 0xe5, 0xe7, 0xef, 0x27, 0x55, 0xf9, 0xd0, 0xf7, 0xee, 0x94, 0x5f, 0x48, 0x0f, 0xaa, 0xa7,
	0x3b, 0xa9, 0x27, 0x78, 0x95, 0x4f, 0xbf, 0x92, 0x1a, 0x54, 0x5d, 0xe8, 0x28, 0x97, 0xef, 0x7f,
	0x25, 0xa9, 0x6c, 0x39, 0x59, 0xea, 0x51, 0x5b, 0xe5, 0x07, 0x5e, 0x49, 0x89, 0xe3, 0x21, 0x2f,
	0xd9, 0x24, 0xc5, 0xe4, 0xef, 0xe6, 0x52, 0x3c, 0x3d, 0x5d, 0x2a, 0x63, 0x55, 0xf9, 0xbd, 0x5c,
	0xaa, 0xb4, 0x92, 0x5b, 0xf7, 0x71, 0x57, 0x2f, 0x37, 0xd4, 0x31, 0xf8, 0x91, 0x38, 0x08, 0x12,
	0x97, 0xf6, 0xf3, 0xaf, 0xaa, 0x8f, 0x20, 0x37, 0x24, 0x55, 0x3f, 0xc9, 0xff, 0x0b, 0xaf, 0xaa,
	0xd7, 0xe1, 0x52, 0xa4, 0x5f, 0x7b, 0xdf, 0x7e, 0x50, 0x7e, 0xf1, 0x41, 0xd2, 0xa2, 0x11, 0x87,
	0x42, 0x85, 0x8e, 0x46, 0xdb, 0xe1, 0x97, 0x1e, 0xc4, 0x3d, 0xb0, 0xe1, 0xf9, 0x75, 0x56, 0xad,
	0xe0, 0x4b, 0xf9, 0x7c, 0x06, 0xb9, 0x96, 0xf2, 0xcb, 0x0f, 0x92, 0xf3, 0xb5, 0xff, 0x3d, 0x65,
	0xca, 0xef, 0x3f, 0x50, 0xef, 0xc1, 0xcb, 0xc3, 0x89, 0xa2, 0xce, 0xfa, 0xec, 0x03, 0x75, 0x11,
	0xe6, 0x63, 0x62, 0xbc, 0xf7, 0x51, 0xf9, 0xdc, 0x83, 0xa4, 0xdc, 0x1a, 0x7c, 0x5d, 0xa2, 0xf2,
	0xf9, 0x07, 0x49, 0x6b, 0x00, 0xb7, 0x49, 0xf8, 0xeb, 0x2c, 0xc4, 0x53, 0xc6, 0xca, 0xbb, 0x0f,
	0x93, 0xb5, 0x4d, 0x23, 0xa3, 0x0a, 0xfc, 0xa5, 0x87, 0xea, 0x65, 0xb8, 0x20, 0x89, 0xba, 0xae,
	0xeb, 0x54, 0xbe, 0xe9, 0x61, 0xd2, 0x68, 0x48, 0xde, 0x69, 0xa9, 0x7c, 0xf3, 0xc3, 0xa4, 0x46,
	0xec, 0x77, 0xdd, 0xa5, 0xf2, 0x2d, 0x0f, 0x93, 0x1d, 0xd2, 0xe7, 0xf2, 0x1f, 0xe5, 0x93, 0x0f,
	0x93, 0xf5, 0x4f, 0x5f, 0xca, 0xa0, 0x7c, 0xeb, 0xc3, 0xa4, 0x65, 0x35, 0xe4, 0x4e, 0x24, 0xe5,
	0xdb, 0x1e, 0x26, 0x67, 0xc6, 0xa0, 0x57, 0x3f, 0x94, 0xbf, 0xfa, 0x50, 0xbd, 0x00, 0x6a, 0x6f,
	0x69, 0xca, 0x5f, 0x4b, 0x31, 0x21, 0x46, 0x50, 0xb2, 0x4f, 0xa5, 0xf8, 0xd8, 0xff, 0x38, 0xb5,
	0xf2, 0xed, 0x0f, 0x93, 0xbd, 0x3e, 0xfc, 0x34, 0xb5, 0xf2, 0x1d, 0x29, 0xde, 0x09, 0xd5, 0xb9,
	0xc3, 0x7c, 0xdb, 0xb3, 0xec, 0x3a, 0x69, 0xe3, 0x77, 0x57, 0x53, 0xb2, 0xe8, 0xa4, 0x23, 0x07,
	0xca, 0x47, 0x57, 0x53, 0x42, 0xf6, 0x34, 0xfb, 0x37, 0x94, 0x8f, 0xad, 0xa6, 0x66, 0xd9, 0xa9,
	0x36, 0x58, 0x28, 0x1f, 0x5f, 0x4d, 0x99, 0x39, 0x05, 0xb9, 0x0d, 0x38, 0x92, 0x8f, 0xb1, 0xba,
	0xfe, 0x95, 0x55, 0xf5, 0x21, 0xdc, 0x3f, 0x0d, 0x69, 0x94, 0xfb, 0xaf, 0xae, 0xa6, 0x14, 0x71,
	0x6f, 0x12, 0x71, 0xcd, 0x44, 0x94, 0xe0, 0xd7, 0x56, 0x93, 0x83, 0x44, 0x24, 0xe8, 0x77, 0x00,
	0x49, 0xf9, 0xf5, 0xd5, 0x94, 0xb4, 0xee, 0x77, 0x00, 0x47, 0xf9, 0x8d, 0xd5, 0x94, 0x91, 0x9c,
	0x38, 0x3b, 0xa3, 0xfc, 0xe6, 0x6a, 0xca, 0x3c, 0xea, 0x7f, 0x0a, 0x46, 0xf9, 0xad, 0xd5, 0x94,
	0x8c, 0x1e, 0x70, 0x70, 0x45, 0xf9, 0xed, 0xd5, 0x94, 0x56, 0xe8, 0x73, 0xe8, 0x21, 0xae, 0xf7,
	0xef, 0xac, 0xa6, 0x8c, 0x98, 0x81, 0x07, 0x24, 0x94, 0xff, 0xbc, 0x9a, 0xb2, 0xfe, 0x93, 0x3b,
	0x85, 0x94, 0xdf, 0x4d, 0x35, 0xbe, 0xef, 0x22, 0xb2, 0xf2, 0x7b, 0xa9, 0x4a, 0x0d, 0x5d, 0x68,
	0x56, 0xfe, 0x4b, 0x7a, 0x14, 0x0c, 0x59, 0xec, 0x55, 0x7e, 0x3f, 0x3d, 0x32, 0x4f, 0xb3, 0x2e,
	0xac, 0x7c, 0xb6, 0xab, 0xaf, 0x78, 0x9b, 0x69, 0xae, 0xaf, 0xf9, 0x9e, 0x69, 0xd5, 0xcd, 0x20,
	0x54, 0xfe, 0x5b, 0xba, 0xb9, 0xc9, 0x75, 0x44, 0xe5, 0x0f, 0xd2, 0xe9, 0xfb, 0x6d, 0x9a, 0x52,
	0xfe, 0x70, 0x35, 0x39, 0x63, 0x87, 0xdf, 0x92, 0xa0, 0xfc, 0xf7, 0xd5, 0xa4, 0x84, 0xe8, 0x3a,
	0xd5, 0xaf, 0xfc, 0x51, 0x6a, 0x6c, 0x0c, 0x38, 0xf3, 0xaf, 0xfc, 0x8f, 0xd5, 0x3e, 0xda, 0xa3,
	0x6b, 0xbd, 0x40, 0xf9, 0xe3, 0x54, 0x56, 0x03, 0x56, 0x13, 0x94, 0x3f, 0x59, 0x4d, 0x5a, 0x0a,
	0xdd, 0x31, 0x7c, 0xe5, 0x73, 0xab, 0x29, 0x27, 0x31, 0x75, 0x7e, 0x44, 0xf9, 0x7c, 0x8a, 0x37,
	0x7d, 0xe3, 0xe6, 0xca, 0xbb, 0x8f, 0x52, 0xc3, 0x78, 0xc0, 0x6e, 0x67, 0xe5, 0xa3, 0x8f, 0x52,
	0xc3, 0x78, 0xd8, 0xa6, 0x68, 0xe5, 0x63, 0x8f, 0x52, 0x32, 0xaf, 0x4f, 0xa8, 0x5c, 0xf9, 0xf8,
	0xa3, 0x94, 0x39, 0x9c, 0x0e, 0x33, 0xcb, 0x51, 0xfa, 0xb5, 0x8f, 0x52, 0xf3, 0xb0, 0x9b, 0x48,
	0x30, 0xe8, 0xeb, 0x1e, 0xa5, 0x06, 0x47, 0xf2, 0x48, 0x83, 0xf2, 0xff, 0x77, 0x35, 0xae, 0x7f,
	0x4c, 0x59, 0xf9, 0xc4, 0xa3, 0x94, 0xdd, 0x3d, 0x28, 0xe8, 0xab, 0x7c, 0xfd, 0xa3, 0xe4, 0x38,
	0x32, 0x86, 0xc6, 0x5c, 0x95, 0x6f, 0x78, 0x94, 0xf2, 0x9c, 0x87, 0x07, 0x42, 0x95, 0xbf, 0xf0,
	0x28, 0xd9, 0xcd, 0xeb, 0xac, 0x43, 0xbe, 0xa4, 0x8c, 0x73, 0x7e, 0x53, 0xf9, 0xee, 0x13, 0xb8,
	0x34, 0xe4, 0x65, 0x4b, 0xf5, 0x0e, 0x9c, 0xee, 0x6d, 0x4b, 0x25, 0x73, 0xf7, 0xff, 0x01, 0xb5,
	0xf7, 0x2e, 0x4f, 0x75, 0x19, 0x06, 0xdc, 0xe6, 0xa9, 0x9c, 0x51, 0xcf, 0x77, 0xa7, 0x30, 0xb6,
	0x9f, 0x6d, 0x2b, 0x19, 0xf5, 0x22, 0x9c, 0xeb, 0x82, 0x6f, 0xe5, 0xd7, 0xd7, 0x8b, 0xba, 0x92,
	0xed, 0x83, 0x2a, 0xe4, 0xab, 0xbb, 0xf9, 0x2d, 0x65, 0xe4, 0xee, 0x4f, 0x67, 0xe1, 0xe2, 0xc0,
	0x37, 0x9b, 0xd4, 0x5b, 0x70, 0xf2, 0x83, 0x4e, 0xca, 0x19, 0xf5, 0x31, 0xbc, 0x7f, 0x30, 0xd9,
	0xf6, 0xb3, 0x6d, 0x3c, 0xcd, 0x60, 0x6c, 0x54, 0x74, 0x63, 0x4d, 0xcf, 0x6f, 0x6e, 0xe2, 0x3b,
	0x32, 0xa5, 0xcd, 0x27, 0xb5, 0xaa, 0x92, 0x51, 0x73, 0x70, 0x77, 0x78, 0xda, 0x5a, 0x65, 0x57,
	0x37, 0x2a, 0x1b, 0xc6, 0xfa, 0x6e, 0xed, 0x2d, 0x3a, 0x31, 0x31, 0x9c, 0xbe, 0xf0, 0x24, 0xbf,
	0xb5, 0x55, 0x2c, 0x6f, 0x16, 0x95, 0x11, 0x75, 0x05, 0x6e, 0x0e, 0x26, 0xae, 0x16, 0xf3, 0x7a,
	0xe1, 0x09, 0xed, 0x34, 0x78, 0x09, 0xae, 0x0f, 0x26, 0x14, 0x7c, 0x1c, 0x1b, 0x4e, 0x25, 0x58,
	0x3a, 0x7e, 0xf7, 0xa3, 0x59, 0x98, 0xef, 0xba, 0xaa, 0x53, 0xbd, 0x0a, 0x43, 0x2e, 0xeb, 0x54,
	0xce, 0xa8, 0xf7, 0xe1, 0x76, 0x37, 0xfe, 0x79, 0xbe, 0x54, 0x43, 0x9e, 0xd1, 0x51, 0x90, 0xaa,
	0x51, 0xab, 0x18, 0x5b, 0x95, 0xfc, 0xba, 0x92, 0x51, 0x6f, 0xc0, 0x95, 0xde, 0xdc, 0xf4, 0x7c,
	0xad, 0xb8, 0xf9, 0x16, 0xee, 0x6c, 0x55, 0x46, 0x44, 0x55, 0x53, 0x24, 0xfc, 0x97, 0x51, 0x2a,
	0x1b, 0x3b, 0x7a, 0x65, 0x53, 0x2f, 0xe2, 0xa1, 0xa7, 0x2b, 0xd8, 0xf9, 0x29, 0xaa, 0x9d, 0x4a,
	0xb5, 0x86, 0x9f, 0xca, 0x78, 0xbf, 0x5a, 0xc7, 0x4f, 0x98, 0x28, 0x13, 0xea, 0x12, 0x2c, 0x76,
	0xe3, 0xb7, 0xf2, 0xd5, 0x9a, 0x32, 0x79, 0xf7, 0xd3, 0x19, 0x80, 0x78, 0x49, 0x22, 0x26, 0x4c,
	0xbf, 0x6a, 0x43, 0x6f, 0xa9, 0x24, 0x30, 0xf2, 0x4e, 0x7b, 0x3a, 0x04, 0x96, 0x40, 0xac, 0xe9,
	0x95, 0xfc, 0x7a, 0x21, 0x5f, 0xad, 0xe1, 0x78, 0x4e, 0x67, 0x57, 0xdd, 0x29, 0x16, 0x6a, 0xf9,
	0x5a, 0x45, 0xa7, 0xe3, 0x5f, 0x09, 0x8c, 0x38, 0x44, 0xb3, 0x53, 0xa9, 0x6c, 0x29, 0xa3, 0xea,
	0x39, 0xe8, 0x5d, 0x25, 0x51, 0xc6, 0xee, 0xfe, 0x51, 0x86, 0x4f, 0xa8, 0xee, 0x0d, 0xcf, 0xaa,
	0x06, 0x27, 0x6c, 0x83, 0x56, 0xce, 0xa8, 0xd7, 0xe1, 0x72, 0x1f, 0x9a, 0x67, 0x95, 0x5a, 0xd1,
	0x78, 0xa3, 0x54, 0x78, 0x43, 0xc9, 0xa8, 0x97, 0xe0, 0x42, 0x1f, 0x0a, 0xb1, 0x19, 0x06, 0xbb,
	0xb1, 0x07, 0x99, 0x5f, 0xdf, 0x2e, 0x95, 0x29, 0xfd, 0xc8, 0x80, 0xf4, 0xf9, 0xe7, 0xd8, 0x20,
	0xec, 0x9e, 0x1e, 0x64, 0xb9, 0x62, 0x54, 0x9f, 0x54, 0x9e, 0x2b, 0x63, 0x03, 0xf2, 0xe7, 0x4a,
	0xbb, 0xb8, 0x5d, 0x79, 0x56, 0x5c, 0x57, 0xc6, 0xef, 0xb6, 0x39, 0x4f, 0xba, 0x6e, 0xb2, 0xa7,
	0x66, 0x0d, 0xbe, 0xde, 0x9e, 0x0e, 0x42, 0xf5, 0x52, 0xe4, 0x0b, 0x85, 0xe2, 0x0e, 0xdd, 0x68,
	0xda, 0x17, 0xcf, 0xd3, 0x97, 0xca, 0xc5, 0x75, 0x25, 0x7b, 0xf7, 0xe3, 0x19, 0x58, 0xe8, 0xb9,
	0xce, 0x59, 0xbd, 0x0c, 0x03, 0x2f, 0x74, 0xa6, 0x13, 0x83, 0xdd, 0xd8, 0x02, 0x3e, 0xc8, 0x45,
	0xb2, 0xaf, 0x1b, 0x47, 0x26, 0x7f, 0xb6, 0x1f, 0x8a, 0xd4, 0xde, 0xc8, 0xdd, 0xff, 0x9a, 0x81,
	0xf3, 0xfd, 0x6f, 0x65, 0xe6, 0xbd, 0x3f, 0xfc, 0xbe, 0x66, 0x9a, 0xb3, 0x03, 0x68, 0xca, 0x95,
	0x9a, 0xb1, 0x93, 0xd7, 0x6b, 0xa5, 0x42, 0x69, 0x47, 0xee, 0x85, 0xba, 0x0e, 0x97, 0x07, 0x50,
	0x17, 0xb7, 0x77, 0x50, 0xb2, 0x7d, 0x18, 0x3e, 0x38, 0x80, 0x22, 0x4f, 0xe7, 0x23, 0x69, 0x8d,
	0x57, 0x2f, 0xd2, 0xa2, 0x6f, 0x79, 0xd3, 0xd8, 0xe2, 0x33, 0xee, 0xf5, 0x4a, 0xa9, 0x4c, 0xa2,
	0xee, 0x14, 0xa9, 0x95, 0xd1, 0xbb, 0x1f, 0xcb, 0x80, 0xda, 0xbb, 0x94, 0xcc, 0xd9, 0xdb, 0x7f,
	0x31, 0x59, 0x39, 0xc3, 0xe7, 0x5b, 0x02, 0xb7, 0x13, 0x61, 0x90, 0xf1, 0x11, 0xa6, 0x50, 0xd9,
	0xde, 0x31, 0x4a, 0xe5, 0xa7, 0xbb, 0x25, 0x9d, 0x37, 0xe7, 0x12, 0x5c, 0x88, 0x51, 0x28, 0x1b,
	0x23, 0xe4, 0xc8, 0xda, 0xd8, 0x93, 0xcc, 0xbb, 0x99, 0x33, 0xff, 0x33, 0x00, 0x00, 0xff, 0xff,
	0x52, 0x66, 0x19, 0x29, 0xeb, 0x96, 0x00, 0x00,
}
