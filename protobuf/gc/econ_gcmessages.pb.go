// Code generated by protoc-gen-go.
// source: econ_gcmessages.proto
// DO NOT EDIT!

package gc

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type EGCItemMsg int32

const (
	EGCItemMsg_k_EMsgGCBase                                   EGCItemMsg = 1000
	EGCItemMsg_k_EMsgGCSetItemPosition                        EGCItemMsg = 1001
	EGCItemMsg_k_EMsgGCCraft                                  EGCItemMsg = 1002
	EGCItemMsg_k_EMsgGCCraftResponse                          EGCItemMsg = 1003
	EGCItemMsg_k_EMsgGCDelete                                 EGCItemMsg = 1004
	EGCItemMsg_k_EMsgGCVerifyCacheSubscription                EGCItemMsg = 1005
	EGCItemMsg_k_EMsgGCNameItem                               EGCItemMsg = 1006
	EGCItemMsg_k_EMsgGCUnlockCrate                            EGCItemMsg = 1007
	EGCItemMsg_k_EMsgGCUnlockCrateResponse                    EGCItemMsg = 1008
	EGCItemMsg_k_EMsgGCPaintItem                              EGCItemMsg = 1009
	EGCItemMsg_k_EMsgGCPaintItemResponse                      EGCItemMsg = 1010
	EGCItemMsg_k_EMsgGCGoldenWrenchBroadcast                  EGCItemMsg = 1011
	EGCItemMsg_k_EMsgGCMOTDRequest                            EGCItemMsg = 1012
	EGCItemMsg_k_EMsgGCMOTDRequestResponse                    EGCItemMsg = 1013
	EGCItemMsg_k_EMsgGCAddItemToSocket_DEPRECATED             EGCItemMsg = 1014
	EGCItemMsg_k_EMsgGCAddItemToSocketResponse_DEPRECATED     EGCItemMsg = 1015
	EGCItemMsg_k_EMsgGCAddSocketToBaseItem_DEPRECATED         EGCItemMsg = 1016
	EGCItemMsg_k_EMsgGCAddSocketToItem_DEPRECATED             EGCItemMsg = 1017
	EGCItemMsg_k_EMsgGCAddSocketToItemResponse_DEPRECATED     EGCItemMsg = 1018
	EGCItemMsg_k_EMsgGCNameBaseItem                           EGCItemMsg = 1019
	EGCItemMsg_k_EMsgGCNameBaseItemResponse                   EGCItemMsg = 1020
	EGCItemMsg_k_EMsgGCRemoveSocketItem_DEPRECATED            EGCItemMsg = 1021
	EGCItemMsg_k_EMsgGCRemoveSocketItemResponse_DEPRECATED    EGCItemMsg = 1022
	EGCItemMsg_k_EMsgGCCustomizeItemTexture                   EGCItemMsg = 1023
	EGCItemMsg_k_EMsgGCCustomizeItemTextureResponse           EGCItemMsg = 1024
	EGCItemMsg_k_EMsgGCUseItemRequest                         EGCItemMsg = 1025
	EGCItemMsg_k_EMsgGCUseItemResponse                        EGCItemMsg = 1026
	EGCItemMsg_k_EMsgGCGiftedItems                            EGCItemMsg = 1027
	EGCItemMsg_k_EMsgGCRemoveItemName                         EGCItemMsg = 1030
	EGCItemMsg_k_EMsgGCRemoveItemPaint                        EGCItemMsg = 1031
	EGCItemMsg_k_EMsgGCUnwrapGiftRequest                      EGCItemMsg = 1037
	EGCItemMsg_k_EMsgGCUnwrapGiftResponse                     EGCItemMsg = 1038
	EGCItemMsg_k_EMsgGCSetItemStyle                           EGCItemMsg = 1039
	EGCItemMsg_k_EMsgGCUsedClaimCodeItem                      EGCItemMsg = 1040
	EGCItemMsg_k_EMsgGCSortItems                              EGCItemMsg = 1041
	EGCItemMsg_k_EMsgGC_RevolvingLootList_DEPRECATED          EGCItemMsg = 1042
	EGCItemMsg_k_EMsgGCLookupAccount                          EGCItemMsg = 1043
	EGCItemMsg_k_EMsgGCLookupAccountResponse                  EGCItemMsg = 1044
	EGCItemMsg_k_EMsgGCLookupAccountName                      EGCItemMsg = 1045
	EGCItemMsg_k_EMsgGCLookupAccountNameResponse              EGCItemMsg = 1046
	EGCItemMsg_k_EMsgGCUpdateItemSchema                       EGCItemMsg = 1049
	EGCItemMsg_k_EMsgGCRemoveCustomTexture                    EGCItemMsg = 1051
	EGCItemMsg_k_EMsgGCRemoveCustomTextureResponse            EGCItemMsg = 1052
	EGCItemMsg_k_EMsgGCRemoveMakersMark                       EGCItemMsg = 1053
	EGCItemMsg_k_EMsgGCRemoveMakersMarkResponse               EGCItemMsg = 1054
	EGCItemMsg_k_EMsgGCRemoveUniqueCraftIndex                 EGCItemMsg = 1055
	EGCItemMsg_k_EMsgGCRemoveUniqueCraftIndexResponse         EGCItemMsg = 1056
	EGCItemMsg_k_EMsgGCSaxxyBroadcast                         EGCItemMsg = 1057
	EGCItemMsg_k_EMsgGCBackpackSortFinished                   EGCItemMsg = 1058
	EGCItemMsg_k_EMsgGCAdjustItemEquippedState                EGCItemMsg = 1059
	EGCItemMsg_k_EMsgGCCollectItem                            EGCItemMsg = 1061
	EGCItemMsg_k_EMsgGCItemAcknowledged                       EGCItemMsg = 1062
	EGCItemMsg_k_EMsgGCPresets_SelectPresetForClass           EGCItemMsg = 1063
	EGCItemMsg_k_EMsgGCPresets_SetItemPosition                EGCItemMsg = 1064
	EGCItemMsg_k_EMsgGC_ReportAbuse                           EGCItemMsg = 1065
	EGCItemMsg_k_EMsgGC_ReportAbuseResponse                   EGCItemMsg = 1066
	EGCItemMsg_k_EMsgGCPresets_SelectPresetForClassReply      EGCItemMsg = 1067
	EGCItemMsg_k_EMsgGCNameItemNotification                   EGCItemMsg = 1068
	EGCItemMsg_k_EMsgGCApplyConsumableEffects                 EGCItemMsg = 1069
	EGCItemMsg_k_EMsgGCConsumableExhausted                    EGCItemMsg = 1070
	EGCItemMsg_k_EMsgGCShowItemsPickedUp                      EGCItemMsg = 1071
	EGCItemMsg_k_EMsgGCClientDisplayNotification              EGCItemMsg = 1072
	EGCItemMsg_k_EMsgGCApplyStrangePart                       EGCItemMsg = 1073
	EGCItemMsg_k_EMsgGC_IncrementKillCountResponse            EGCItemMsg = 1075
	EGCItemMsg_k_EMsgGCApplyPennantUpgrade                    EGCItemMsg = 1076
	EGCItemMsg_k_EMsgGCSetItemPositions                       EGCItemMsg = 1077
	EGCItemMsg_k_EMsgGCSetItemPositions_RateLimited           EGCItemMsg = 1096
	EGCItemMsg_k_EMsgGCApplyEggEssence                        EGCItemMsg = 1078
	EGCItemMsg_k_EMsgGCNameEggEssenceResponse                 EGCItemMsg = 1079
	EGCItemMsg_k_EMsgGCFulfillDynamicRecipeComponent          EGCItemMsg = 1082
	EGCItemMsg_k_EMsgGCFulfillDynamicRecipeComponentResponse  EGCItemMsg = 1083
	EGCItemMsg_k_EMsgGCClientRequestMarketData                EGCItemMsg = 1084
	EGCItemMsg_k_EMsgGCClientRequestMarketDataResponse        EGCItemMsg = 1085
	EGCItemMsg_k_EMsgGCExtractGems                            EGCItemMsg = 1086
	EGCItemMsg_k_EMsgGCAddSocket                              EGCItemMsg = 1087
	EGCItemMsg_k_EMsgGCAddItemToSocket                        EGCItemMsg = 1088
	EGCItemMsg_k_EMsgGCAddItemToSocketResponse                EGCItemMsg = 1089
	EGCItemMsg_k_EMsgGCAddSocketResponse                      EGCItemMsg = 1090
	EGCItemMsg_k_EMsgGCResetStrangeGemCount                   EGCItemMsg = 1091
	EGCItemMsg_k_EMsgGCRequestCrateItems                      EGCItemMsg = 1092
	EGCItemMsg_k_EMsgGCRequestCrateItemsResponse              EGCItemMsg = 1093
	EGCItemMsg_k_EMsgGCExtractGemsResponse                    EGCItemMsg = 1094
	EGCItemMsg_k_EMsgGCResetStrangeGemCountResponse           EGCItemMsg = 1095
	EGCItemMsg_k_EMsgGCServerUseItemRequest                   EGCItemMsg = 1103
	EGCItemMsg_k_EMsgGCAddGiftItem                            EGCItemMsg = 1104
	EGCItemMsg_k_EMsgGCRemoveItemGiftMessage                  EGCItemMsg = 1105
	EGCItemMsg_k_EMsgGCRemoveItemGiftMessageResponse          EGCItemMsg = 1106
	EGCItemMsg_k_EMsgGCRemoveItemGifterAccountId              EGCItemMsg = 1107
	EGCItemMsg_k_EMsgGCRemoveItemGifterAccountIdResponse      EGCItemMsg = 1108
	EGCItemMsg_k_EMsgClientToGCRemoveItemGifterAttributes     EGCItemMsg = 1109
	EGCItemMsg_k_EMsgClientToGCRemoveItemName                 EGCItemMsg = 1110
	EGCItemMsg_k_EMsgClientToGCRemoveItemDescription          EGCItemMsg = 1111
	EGCItemMsg_k_EMsgGCTradingBase                            EGCItemMsg = 1500
	EGCItemMsg_k_EMsgGCTrading_InitiateTradeRequest           EGCItemMsg = 1501
	EGCItemMsg_k_EMsgGCTrading_InitiateTradeResponse          EGCItemMsg = 1502
	EGCItemMsg_k_EMsgGCTrading_StartSession                   EGCItemMsg = 1503
	EGCItemMsg_k_EMsgGCTrading_SessionClosed                  EGCItemMsg = 1509
	EGCItemMsg_k_EMsgGCTrading_InitiateTradeRequestResponse   EGCItemMsg = 1514
	EGCItemMsg_k_EMsgGCServerBrowser_FavoriteServer           EGCItemMsg = 1601
	EGCItemMsg_k_EMsgGCServerBrowser_BlacklistServer          EGCItemMsg = 1602
	EGCItemMsg_k_EMsgGCServerRentalsBase                      EGCItemMsg = 1700
	EGCItemMsg_k_EMsgGCItemPreviewCheckStatus                 EGCItemMsg = 1701
	EGCItemMsg_k_EMsgGCItemPreviewStatusResponse              EGCItemMsg = 1702
	EGCItemMsg_k_EMsgGCItemPreviewRequest                     EGCItemMsg = 1703
	EGCItemMsg_k_EMsgGCItemPreviewRequestResponse             EGCItemMsg = 1704
	EGCItemMsg_k_EMsgGCItemPreviewExpire                      EGCItemMsg = 1705
	EGCItemMsg_k_EMsgGCItemPreviewExpireNotification          EGCItemMsg = 1706
	EGCItemMsg_k_EMsgGCItemPreviewItemBoughtNotification      EGCItemMsg = 1707
	EGCItemMsg_k_EMsgGCDev_NewItemRequest                     EGCItemMsg = 2001
	EGCItemMsg_k_EMsgGCDev_NewItemRequestResponse             EGCItemMsg = 2002
	EGCItemMsg_k_EMsgGCStoreGetUserData                       EGCItemMsg = 2500
	EGCItemMsg_k_EMsgGCStoreGetUserDataResponse               EGCItemMsg = 2501
	EGCItemMsg_k_EMsgGCStorePurchaseFinalize                  EGCItemMsg = 2504
	EGCItemMsg_k_EMsgGCStorePurchaseFinalizeResponse          EGCItemMsg = 2505
	EGCItemMsg_k_EMsgGCStorePurchaseCancel                    EGCItemMsg = 2506
	EGCItemMsg_k_EMsgGCStorePurchaseCancelResponse            EGCItemMsg = 2507
	EGCItemMsg_k_EMsgGCStorePurchaseInit                      EGCItemMsg = 2510
	EGCItemMsg_k_EMsgGCStorePurchaseInitResponse              EGCItemMsg = 2511
	EGCItemMsg_k_EMsgGCBannedWordListRequest                  EGCItemMsg = 2512
	EGCItemMsg_k_EMsgGCBannedWordListResponse                 EGCItemMsg = 2513
	EGCItemMsg_k_EMsgGCToGCBannedWordListBroadcast            EGCItemMsg = 2514
	EGCItemMsg_k_EMsgGCToGCBannedWordListUpdated              EGCItemMsg = 2515
	EGCItemMsg_k_EMsgGCToGCDirtySDOCache                      EGCItemMsg = 2516
	EGCItemMsg_k_EMsgGCToGCDirtyMultipleSDOCache              EGCItemMsg = 2517
	EGCItemMsg_k_EMsgGCToGCUpdateSQLKeyValue                  EGCItemMsg = 2518
	EGCItemMsg_k_EMsgGCToGCBroadcastConsoleCommand            EGCItemMsg = 2521
	EGCItemMsg_k_EMsgGCServerVersionUpdated                   EGCItemMsg = 2522
	EGCItemMsg_k_EMsgGCApplyAutograph                         EGCItemMsg = 2523
	EGCItemMsg_k_EMsgGCToGCWebAPIAccountChanged               EGCItemMsg = 2524
	EGCItemMsg_k_EMsgGCClientVersionUpdated                   EGCItemMsg = 2528
	EGCItemMsg_k_EMsgGCItemPurgatory_FinalizePurchase         EGCItemMsg = 2531
	EGCItemMsg_k_EMsgGCItemPurgatory_FinalizePurchaseResponse EGCItemMsg = 2532
	EGCItemMsg_k_EMsgGCItemPurgatory_RefundPurchase           EGCItemMsg = 2533
	EGCItemMsg_k_EMsgGCItemPurgatory_RefundPurchaseResponse   EGCItemMsg = 2534
	EGCItemMsg_k_EMsgGCToGCPlayerStrangeCountAdjustments      EGCItemMsg = 2535
	EGCItemMsg_k_EMsgGCRequestStoreSalesData                  EGCItemMsg = 2536
	EGCItemMsg_k_EMsgGCRequestStoreSalesDataResponse          EGCItemMsg = 2537
	EGCItemMsg_k_EMsgGCRequestStoreSalesDataUpToDateResponse  EGCItemMsg = 2538
	EGCItemMsg_k_EMsgGCToGCPingRequest                        EGCItemMsg = 2539
	EGCItemMsg_k_EMsgGCToGCPingResponse                       EGCItemMsg = 2540
	EGCItemMsg_k_EMsgGCToGCGetUserSessionServer               EGCItemMsg = 2541
	EGCItemMsg_k_EMsgGCToGCGetUserSessionServerResponse       EGCItemMsg = 2542
	EGCItemMsg_k_EMsgGCToGCGetUserServerMembers               EGCItemMsg = 2543
	EGCItemMsg_k_EMsgGCToGCGetUserServerMembersResponse       EGCItemMsg = 2544
	EGCItemMsg_k_EMsgGCToGCGetUserPCBangNo                    EGCItemMsg = 2545
	EGCItemMsg_k_EMsgGCToGCGetUserPCBangNoResponse            EGCItemMsg = 2546
	EGCItemMsg_k_EMsgGCToGCCanUseDropRateBonus                EGCItemMsg = 2547
	EGCItemMsg_k_EMsgSQLAddDropRateBonus                      EGCItemMsg = 2548
	EGCItemMsg_k_EMsgGCToGCRefreshSOCache                     EGCItemMsg = 2549
	EGCItemMsg_k_EMsgGCToGCApplyLocalizationDiff              EGCItemMsg = 2550
	EGCItemMsg_k_EMsgGCToGCApplyLocalizationDiffResponse      EGCItemMsg = 2551
	EGCItemMsg_k_EMsgGCToGCCheckAccountTradeStatus            EGCItemMsg = 2552
	EGCItemMsg_k_EMsgGCToGCCheckAccountTradeStatusResponse    EGCItemMsg = 2553
	EGCItemMsg_k_EMsgGCToGCGrantAccountRolledItems            EGCItemMsg = 2554
	EGCItemMsg_k_EMsgGCToGCGrantSelfMadeItemToAccount         EGCItemMsg = 2555
	EGCItemMsg_k_EMsgSQLUpgradeBattleBooster                  EGCItemMsg = 2556
	EGCItemMsg_k_EMsgGCPartnerBalanceRequest                  EGCItemMsg = 2557
	EGCItemMsg_k_EMsgGCPartnerBalanceResponse                 EGCItemMsg = 2558
	EGCItemMsg_k_EMsgGCPartnerRechargeRedirectURLRequest      EGCItemMsg = 2559
	EGCItemMsg_k_EMsgGCPartnerRechargeRedirectURLResponse     EGCItemMsg = 2560
	EGCItemMsg_k_EMsgGCStatueCraft                            EGCItemMsg = 2561
	EGCItemMsg_k_EMsgGCRedeemCode                             EGCItemMsg = 2562
	EGCItemMsg_k_EMsgGCRedeemCodeResponse                     EGCItemMsg = 2563
	EGCItemMsg_k_EMsgGCToGCItemConsumptionRollback            EGCItemMsg = 2564
	EGCItemMsg_k_EMsgClientToGCWrapAndDeliverGift             EGCItemMsg = 2565
	EGCItemMsg_k_EMsgClientToGCWrapAndDeliverGiftResponse     EGCItemMsg = 2566
	EGCItemMsg_k_EMsgClientToGCUnpackBundleResponse           EGCItemMsg = 2567
	EGCItemMsg_k_EMsgGCToClientStoreTransactionCompleted      EGCItemMsg = 2568
	EGCItemMsg_k_EMsgClientToGCEquipItems                     EGCItemMsg = 2569
	EGCItemMsg_k_EMsgClientToGCEquipItemsResponse             EGCItemMsg = 2570
	EGCItemMsg_k_EMsgClientToGCUnlockItemStyle                EGCItemMsg = 2571
	EGCItemMsg_k_EMsgClientToGCUnlockItemStyleResponse        EGCItemMsg = 2572
	EGCItemMsg_k_EMsgClientToGCSetItemInventoryCategory       EGCItemMsg = 2573
	EGCItemMsg_k_EMsgClientToGCUnlockCrate                    EGCItemMsg = 2574
	EGCItemMsg_k_EMsgClientToGCUnlockCrateResponse            EGCItemMsg = 2575
	EGCItemMsg_k_EMsgClientToGCUnpackBundle                   EGCItemMsg = 2576
)

var EGCItemMsg_name = map[int32]string{
	1000: "k_EMsgGCBase",
	1001: "k_EMsgGCSetItemPosition",
	1002: "k_EMsgGCCraft",
	1003: "k_EMsgGCCraftResponse",
	1004: "k_EMsgGCDelete",
	1005: "k_EMsgGCVerifyCacheSubscription",
	1006: "k_EMsgGCNameItem",
	1007: "k_EMsgGCUnlockCrate",
	1008: "k_EMsgGCUnlockCrateResponse",
	1009: "k_EMsgGCPaintItem",
	1010: "k_EMsgGCPaintItemResponse",
	1011: "k_EMsgGCGoldenWrenchBroadcast",
	1012: "k_EMsgGCMOTDRequest",
	1013: "k_EMsgGCMOTDRequestResponse",
	1014: "k_EMsgGCAddItemToSocket_DEPRECATED",
	1015: "k_EMsgGCAddItemToSocketResponse_DEPRECATED",
	1016: "k_EMsgGCAddSocketToBaseItem_DEPRECATED",
	1017: "k_EMsgGCAddSocketToItem_DEPRECATED",
	1018: "k_EMsgGCAddSocketToItemResponse_DEPRECATED",
	1019: "k_EMsgGCNameBaseItem",
	1020: "k_EMsgGCNameBaseItemResponse",
	1021: "k_EMsgGCRemoveSocketItem_DEPRECATED",
	1022: "k_EMsgGCRemoveSocketItemResponse_DEPRECATED",
	1023: "k_EMsgGCCustomizeItemTexture",
	1024: "k_EMsgGCCustomizeItemTextureResponse",
	1025: "k_EMsgGCUseItemRequest",
	1026: "k_EMsgGCUseItemResponse",
	1027: "k_EMsgGCGiftedItems",
	1030: "k_EMsgGCRemoveItemName",
	1031: "k_EMsgGCRemoveItemPaint",
	1037: "k_EMsgGCUnwrapGiftRequest",
	1038: "k_EMsgGCUnwrapGiftResponse",
	1039: "k_EMsgGCSetItemStyle",
	1040: "k_EMsgGCUsedClaimCodeItem",
	1041: "k_EMsgGCSortItems",
	1042: "k_EMsgGC_RevolvingLootList_DEPRECATED",
	1043: "k_EMsgGCLookupAccount",
	1044: "k_EMsgGCLookupAccountResponse",
	1045: "k_EMsgGCLookupAccountName",
	1046: "k_EMsgGCLookupAccountNameResponse",
	1049: "k_EMsgGCUpdateItemSchema",
	1051: "k_EMsgGCRemoveCustomTexture",
	1052: "k_EMsgGCRemoveCustomTextureResponse",
	1053: "k_EMsgGCRemoveMakersMark",
	1054: "k_EMsgGCRemoveMakersMarkResponse",
	1055: "k_EMsgGCRemoveUniqueCraftIndex",
	1056: "k_EMsgGCRemoveUniqueCraftIndexResponse",
	1057: "k_EMsgGCSaxxyBroadcast",
	1058: "k_EMsgGCBackpackSortFinished",
	1059: "k_EMsgGCAdjustItemEquippedState",
	1061: "k_EMsgGCCollectItem",
	1062: "k_EMsgGCItemAcknowledged",
	1063: "k_EMsgGCPresets_SelectPresetForClass",
	1064: "k_EMsgGCPresets_SetItemPosition",
	1065: "k_EMsgGC_ReportAbuse",
	1066: "k_EMsgGC_ReportAbuseResponse",
	1067: "k_EMsgGCPresets_SelectPresetForClassReply",
	1068: "k_EMsgGCNameItemNotification",
	1069: "k_EMsgGCApplyConsumableEffects",
	1070: "k_EMsgGCConsumableExhausted",
	1071: "k_EMsgGCShowItemsPickedUp",
	1072: "k_EMsgGCClientDisplayNotification",
	1073: "k_EMsgGCApplyStrangePart",
	1075: "k_EMsgGC_IncrementKillCountResponse",
	1076: "k_EMsgGCApplyPennantUpgrade",
	1077: "k_EMsgGCSetItemPositions",
	1096: "k_EMsgGCSetItemPositions_RateLimited",
	1078: "k_EMsgGCApplyEggEssence",
	1079: "k_EMsgGCNameEggEssenceResponse",
	1082: "k_EMsgGCFulfillDynamicRecipeComponent",
	1083: "k_EMsgGCFulfillDynamicRecipeComponentResponse",
	1084: "k_EMsgGCClientRequestMarketData",
	1085: "k_EMsgGCClientRequestMarketDataResponse",
	1086: "k_EMsgGCExtractGems",
	1087: "k_EMsgGCAddSocket",
	1088: "k_EMsgGCAddItemToSocket",
	1089: "k_EMsgGCAddItemToSocketResponse",
	1090: "k_EMsgGCAddSocketResponse",
	1091: "k_EMsgGCResetStrangeGemCount",
	1092: "k_EMsgGCRequestCrateItems",
	1093: "k_EMsgGCRequestCrateItemsResponse",
	1094: "k_EMsgGCExtractGemsResponse",
	1095: "k_EMsgGCResetStrangeGemCountResponse",
	1103: "k_EMsgGCServerUseItemRequest",
	1104: "k_EMsgGCAddGiftItem",
	1105: "k_EMsgGCRemoveItemGiftMessage",
	1106: "k_EMsgGCRemoveItemGiftMessageResponse",
	1107: "k_EMsgGCRemoveItemGifterAccountId",
	1108: "k_EMsgGCRemoveItemGifterAccountIdResponse",
	1109: "k_EMsgClientToGCRemoveItemGifterAttributes",
	1110: "k_EMsgClientToGCRemoveItemName",
	1111: "k_EMsgClientToGCRemoveItemDescription",
	1500: "k_EMsgGCTradingBase",
	1501: "k_EMsgGCTrading_InitiateTradeRequest",
	1502: "k_EMsgGCTrading_InitiateTradeResponse",
	1503: "k_EMsgGCTrading_StartSession",
	1509: "k_EMsgGCTrading_SessionClosed",
	1514: "k_EMsgGCTrading_InitiateTradeRequestResponse",
	1601: "k_EMsgGCServerBrowser_FavoriteServer",
	1602: "k_EMsgGCServerBrowser_BlacklistServer",
	1700: "k_EMsgGCServerRentalsBase",
	1701: "k_EMsgGCItemPreviewCheckStatus",
	1702: "k_EMsgGCItemPreviewStatusResponse",
	1703: "k_EMsgGCItemPreviewRequest",
	1704: "k_EMsgGCItemPreviewRequestResponse",
	1705: "k_EMsgGCItemPreviewExpire",
	1706: "k_EMsgGCItemPreviewExpireNotification",
	1707: "k_EMsgGCItemPreviewItemBoughtNotification",
	2001: "k_EMsgGCDev_NewItemRequest",
	2002: "k_EMsgGCDev_NewItemRequestResponse",
	2500: "k_EMsgGCStoreGetUserData",
	2501: "k_EMsgGCStoreGetUserDataResponse",
	2504: "k_EMsgGCStorePurchaseFinalize",
	2505: "k_EMsgGCStorePurchaseFinalizeResponse",
	2506: "k_EMsgGCStorePurchaseCancel",
	2507: "k_EMsgGCStorePurchaseCancelResponse",
	2510: "k_EMsgGCStorePurchaseInit",
	2511: "k_EMsgGCStorePurchaseInitResponse",
	2512: "k_EMsgGCBannedWordListRequest",
	2513: "k_EMsgGCBannedWordListResponse",
	2514: "k_EMsgGCToGCBannedWordListBroadcast",
	2515: "k_EMsgGCToGCBannedWordListUpdated",
	2516: "k_EMsgGCToGCDirtySDOCache",
	2517: "k_EMsgGCToGCDirtyMultipleSDOCache",
	2518: "k_EMsgGCToGCUpdateSQLKeyValue",
	2521: "k_EMsgGCToGCBroadcastConsoleCommand",
	2522: "k_EMsgGCServerVersionUpdated",
	2523: "k_EMsgGCApplyAutograph",
	2524: "k_EMsgGCToGCWebAPIAccountChanged",
	2528: "k_EMsgGCClientVersionUpdated",
	2531: "k_EMsgGCItemPurgatory_FinalizePurchase",
	2532: "k_EMsgGCItemPurgatory_FinalizePurchaseResponse",
	2533: "k_EMsgGCItemPurgatory_RefundPurchase",
	2534: "k_EMsgGCItemPurgatory_RefundPurchaseResponse",
	2535: "k_EMsgGCToGCPlayerStrangeCountAdjustments",
	2536: "k_EMsgGCRequestStoreSalesData",
	2537: "k_EMsgGCRequestStoreSalesDataResponse",
	2538: "k_EMsgGCRequestStoreSalesDataUpToDateResponse",
	2539: "k_EMsgGCToGCPingRequest",
	2540: "k_EMsgGCToGCPingResponse",
	2541: "k_EMsgGCToGCGetUserSessionServer",
	2542: "k_EMsgGCToGCGetUserSessionServerResponse",
	2543: "k_EMsgGCToGCGetUserServerMembers",
	2544: "k_EMsgGCToGCGetUserServerMembersResponse",
	2545: "k_EMsgGCToGCGetUserPCBangNo",
	2546: "k_EMsgGCToGCGetUserPCBangNoResponse",
	2547: "k_EMsgGCToGCCanUseDropRateBonus",
	2548: "k_EMsgSQLAddDropRateBonus",
	2549: "k_EMsgGCToGCRefreshSOCache",
	2550: "k_EMsgGCToGCApplyLocalizationDiff",
	2551: "k_EMsgGCToGCApplyLocalizationDiffResponse",
	2552: "k_EMsgGCToGCCheckAccountTradeStatus",
	2553: "k_EMsgGCToGCCheckAccountTradeStatusResponse",
	2554: "k_EMsgGCToGCGrantAccountRolledItems",
	2555: "k_EMsgGCToGCGrantSelfMadeItemToAccount",
	2556: "k_EMsgSQLUpgradeBattleBooster",
	2557: "k_EMsgGCPartnerBalanceRequest",
	2558: "k_EMsgGCPartnerBalanceResponse",
	2559: "k_EMsgGCPartnerRechargeRedirectURLRequest",
	2560: "k_EMsgGCPartnerRechargeRedirectURLResponse",
	2561: "k_EMsgGCStatueCraft",
	2562: "k_EMsgGCRedeemCode",
	2563: "k_EMsgGCRedeemCodeResponse",
	2564: "k_EMsgGCToGCItemConsumptionRollback",
	2565: "k_EMsgClientToGCWrapAndDeliverGift",
	2566: "k_EMsgClientToGCWrapAndDeliverGiftResponse",
	2567: "k_EMsgClientToGCUnpackBundleResponse",
	2568: "k_EMsgGCToClientStoreTransactionCompleted",
	2569: "k_EMsgClientToGCEquipItems",
	2570: "k_EMsgClientToGCEquipItemsResponse",
	2571: "k_EMsgClientToGCUnlockItemStyle",
	2572: "k_EMsgClientToGCUnlockItemStyleResponse",
	2573: "k_EMsgClientToGCSetItemInventoryCategory",
	2574: "k_EMsgClientToGCUnlockCrate",
	2575: "k_EMsgClientToGCUnlockCrateResponse",
	2576: "k_EMsgClientToGCUnpackBundle",
}
var EGCItemMsg_value = map[string]int32{
	"k_EMsgGCBase":                                   1000,
	"k_EMsgGCSetItemPosition":                        1001,
	"k_EMsgGCCraft":                                  1002,
	"k_EMsgGCCraftResponse":                          1003,
	"k_EMsgGCDelete":                                 1004,
	"k_EMsgGCVerifyCacheSubscription":                1005,
	"k_EMsgGCNameItem":                               1006,
	"k_EMsgGCUnlockCrate":                            1007,
	"k_EMsgGCUnlockCrateResponse":                    1008,
	"k_EMsgGCPaintItem":                              1009,
	"k_EMsgGCPaintItemResponse":                      1010,
	"k_EMsgGCGoldenWrenchBroadcast":                  1011,
	"k_EMsgGCMOTDRequest":                            1012,
	"k_EMsgGCMOTDRequestResponse":                    1013,
	"k_EMsgGCAddItemToSocket_DEPRECATED":             1014,
	"k_EMsgGCAddItemToSocketResponse_DEPRECATED":     1015,
	"k_EMsgGCAddSocketToBaseItem_DEPRECATED":         1016,
	"k_EMsgGCAddSocketToItem_DEPRECATED":             1017,
	"k_EMsgGCAddSocketToItemResponse_DEPRECATED":     1018,
	"k_EMsgGCNameBaseItem":                           1019,
	"k_EMsgGCNameBaseItemResponse":                   1020,
	"k_EMsgGCRemoveSocketItem_DEPRECATED":            1021,
	"k_EMsgGCRemoveSocketItemResponse_DEPRECATED":    1022,
	"k_EMsgGCCustomizeItemTexture":                   1023,
	"k_EMsgGCCustomizeItemTextureResponse":           1024,
	"k_EMsgGCUseItemRequest":                         1025,
	"k_EMsgGCUseItemResponse":                        1026,
	"k_EMsgGCGiftedItems":                            1027,
	"k_EMsgGCRemoveItemName":                         1030,
	"k_EMsgGCRemoveItemPaint":                        1031,
	"k_EMsgGCUnwrapGiftRequest":                      1037,
	"k_EMsgGCUnwrapGiftResponse":                     1038,
	"k_EMsgGCSetItemStyle":                           1039,
	"k_EMsgGCUsedClaimCodeItem":                      1040,
	"k_EMsgGCSortItems":                              1041,
	"k_EMsgGC_RevolvingLootList_DEPRECATED":          1042,
	"k_EMsgGCLookupAccount":                          1043,
	"k_EMsgGCLookupAccountResponse":                  1044,
	"k_EMsgGCLookupAccountName":                      1045,
	"k_EMsgGCLookupAccountNameResponse":              1046,
	"k_EMsgGCUpdateItemSchema":                       1049,
	"k_EMsgGCRemoveCustomTexture":                    1051,
	"k_EMsgGCRemoveCustomTextureResponse":            1052,
	"k_EMsgGCRemoveMakersMark":                       1053,
	"k_EMsgGCRemoveMakersMarkResponse":               1054,
	"k_EMsgGCRemoveUniqueCraftIndex":                 1055,
	"k_EMsgGCRemoveUniqueCraftIndexResponse":         1056,
	"k_EMsgGCSaxxyBroadcast":                         1057,
	"k_EMsgGCBackpackSortFinished":                   1058,
	"k_EMsgGCAdjustItemEquippedState":                1059,
	"k_EMsgGCCollectItem":                            1061,
	"k_EMsgGCItemAcknowledged":                       1062,
	"k_EMsgGCPresets_SelectPresetForClass":           1063,
	"k_EMsgGCPresets_SetItemPosition":                1064,
	"k_EMsgGC_ReportAbuse":                           1065,
	"k_EMsgGC_ReportAbuseResponse":                   1066,
	"k_EMsgGCPresets_SelectPresetForClassReply":      1067,
	"k_EMsgGCNameItemNotification":                   1068,
	"k_EMsgGCApplyConsumableEffects":                 1069,
	"k_EMsgGCConsumableExhausted":                    1070,
	"k_EMsgGCShowItemsPickedUp":                      1071,
	"k_EMsgGCClientDisplayNotification":              1072,
	"k_EMsgGCApplyStrangePart":                       1073,
	"k_EMsgGC_IncrementKillCountResponse":            1075,
	"k_EMsgGCApplyPennantUpgrade":                    1076,
	"k_EMsgGCSetItemPositions":                       1077,
	"k_EMsgGCSetItemPositions_RateLimited":           1096,
	"k_EMsgGCApplyEggEssence":                        1078,
	"k_EMsgGCNameEggEssenceResponse":                 1079,
	"k_EMsgGCFulfillDynamicRecipeComponent":          1082,
	"k_EMsgGCFulfillDynamicRecipeComponentResponse":  1083,
	"k_EMsgGCClientRequestMarketData":                1084,
	"k_EMsgGCClientRequestMarketDataResponse":        1085,
	"k_EMsgGCExtractGems":                            1086,
	"k_EMsgGCAddSocket":                              1087,
	"k_EMsgGCAddItemToSocket":                        1088,
	"k_EMsgGCAddItemToSocketResponse":                1089,
	"k_EMsgGCAddSocketResponse":                      1090,
	"k_EMsgGCResetStrangeGemCount":                   1091,
	"k_EMsgGCRequestCrateItems":                      1092,
	"k_EMsgGCRequestCrateItemsResponse":              1093,
	"k_EMsgGCExtractGemsResponse":                    1094,
	"k_EMsgGCResetStrangeGemCountResponse":           1095,
	"k_EMsgGCServerUseItemRequest":                   1103,
	"k_EMsgGCAddGiftItem":                            1104,
	"k_EMsgGCRemoveItemGiftMessage":                  1105,
	"k_EMsgGCRemoveItemGiftMessageResponse":          1106,
	"k_EMsgGCRemoveItemGifterAccountId":              1107,
	"k_EMsgGCRemoveItemGifterAccountIdResponse":      1108,
	"k_EMsgClientToGCRemoveItemGifterAttributes":     1109,
	"k_EMsgClientToGCRemoveItemName":                 1110,
	"k_EMsgClientToGCRemoveItemDescription":          1111,
	"k_EMsgGCTradingBase":                            1500,
	"k_EMsgGCTrading_InitiateTradeRequest":           1501,
	"k_EMsgGCTrading_InitiateTradeResponse":          1502,
	"k_EMsgGCTrading_StartSession":                   1503,
	"k_EMsgGCTrading_SessionClosed":                  1509,
	"k_EMsgGCTrading_InitiateTradeRequestResponse":   1514,
	"k_EMsgGCServerBrowser_FavoriteServer":           1601,
	"k_EMsgGCServerBrowser_BlacklistServer":          1602,
	"k_EMsgGCServerRentalsBase":                      1700,
	"k_EMsgGCItemPreviewCheckStatus":                 1701,
	"k_EMsgGCItemPreviewStatusResponse":              1702,
	"k_EMsgGCItemPreviewRequest":                     1703,
	"k_EMsgGCItemPreviewRequestResponse":             1704,
	"k_EMsgGCItemPreviewExpire":                      1705,
	"k_EMsgGCItemPreviewExpireNotification":          1706,
	"k_EMsgGCItemPreviewItemBoughtNotification":      1707,
	"k_EMsgGCDev_NewItemRequest":                     2001,
	"k_EMsgGCDev_NewItemRequestResponse":             2002,
	"k_EMsgGCStoreGetUserData":                       2500,
	"k_EMsgGCStoreGetUserDataResponse":               2501,
	"k_EMsgGCStorePurchaseFinalize":                  2504,
	"k_EMsgGCStorePurchaseFinalizeResponse":          2505,
	"k_EMsgGCStorePurchaseCancel":                    2506,
	"k_EMsgGCStorePurchaseCancelResponse":            2507,
	"k_EMsgGCStorePurchaseInit":                      2510,
	"k_EMsgGCStorePurchaseInitResponse":              2511,
	"k_EMsgGCBannedWordListRequest":                  2512,
	"k_EMsgGCBannedWordListResponse":                 2513,
	"k_EMsgGCToGCBannedWordListBroadcast":            2514,
	"k_EMsgGCToGCBannedWordListUpdated":              2515,
	"k_EMsgGCToGCDirtySDOCache":                      2516,
	"k_EMsgGCToGCDirtyMultipleSDOCache":              2517,
	"k_EMsgGCToGCUpdateSQLKeyValue":                  2518,
	"k_EMsgGCToGCBroadcastConsoleCommand":            2521,
	"k_EMsgGCServerVersionUpdated":                   2522,
	"k_EMsgGCApplyAutograph":                         2523,
	"k_EMsgGCToGCWebAPIAccountChanged":               2524,
	"k_EMsgGCClientVersionUpdated":                   2528,
	"k_EMsgGCItemPurgatory_FinalizePurchase":         2531,
	"k_EMsgGCItemPurgatory_FinalizePurchaseResponse": 2532,
	"k_EMsgGCItemPurgatory_RefundPurchase":           2533,
	"k_EMsgGCItemPurgatory_RefundPurchaseResponse":   2534,
	"k_EMsgGCToGCPlayerStrangeCountAdjustments":      2535,
	"k_EMsgGCRequestStoreSalesData":                  2536,
	"k_EMsgGCRequestStoreSalesDataResponse":          2537,
	"k_EMsgGCRequestStoreSalesDataUpToDateResponse":  2538,
	"k_EMsgGCToGCPingRequest":                        2539,
	"k_EMsgGCToGCPingResponse":                       2540,
	"k_EMsgGCToGCGetUserSessionServer":               2541,
	"k_EMsgGCToGCGetUserSessionServerResponse":       2542,
	"k_EMsgGCToGCGetUserServerMembers":               2543,
	"k_EMsgGCToGCGetUserServerMembersResponse":       2544,
	"k_EMsgGCToGCGetUserPCBangNo":                    2545,
	"k_EMsgGCToGCGetUserPCBangNoResponse":            2546,
	"k_EMsgGCToGCCanUseDropRateBonus":                2547,
	"k_EMsgSQLAddDropRateBonus":                      2548,
	"k_EMsgGCToGCRefreshSOCache":                     2549,
	"k_EMsgGCToGCApplyLocalizationDiff":              2550,
	"k_EMsgGCToGCApplyLocalizationDiffResponse":      2551,
	"k_EMsgGCToGCCheckAccountTradeStatus":            2552,
	"k_EMsgGCToGCCheckAccountTradeStatusResponse":    2553,
	"k_EMsgGCToGCGrantAccountRolledItems":            2554,
	"k_EMsgGCToGCGrantSelfMadeItemToAccount":         2555,
	"k_EMsgSQLUpgradeBattleBooster":                  2556,
	"k_EMsgGCPartnerBalanceRequest":                  2557,
	"k_EMsgGCPartnerBalanceResponse":                 2558,
	"k_EMsgGCPartnerRechargeRedirectURLRequest":      2559,
	"k_EMsgGCPartnerRechargeRedirectURLResponse":     2560,
	"k_EMsgGCStatueCraft":                            2561,
	"k_EMsgGCRedeemCode":                             2562,
	"k_EMsgGCRedeemCodeResponse":                     2563,
	"k_EMsgGCToGCItemConsumptionRollback":            2564,
	"k_EMsgClientToGCWrapAndDeliverGift":             2565,
	"k_EMsgClientToGCWrapAndDeliverGiftResponse":     2566,
	"k_EMsgClientToGCUnpackBundleResponse":           2567,
	"k_EMsgGCToClientStoreTransactionCompleted":      2568,
	"k_EMsgClientToGCEquipItems":                     2569,
	"k_EMsgClientToGCEquipItemsResponse":             2570,
	"k_EMsgClientToGCUnlockItemStyle":                2571,
	"k_EMsgClientToGCUnlockItemStyleResponse":        2572,
	"k_EMsgClientToGCSetItemInventoryCategory":       2573,
	"k_EMsgClientToGCUnlockCrate":                    2574,
	"k_EMsgClientToGCUnlockCrateResponse":            2575,
	"k_EMsgClientToGCUnpackBundle":                   2576,
}

func (x EGCItemMsg) Enum() *EGCItemMsg {
	p := new(EGCItemMsg)
	*p = x
	return p
}
func (x EGCItemMsg) String() string {
	return proto.EnumName(EGCItemMsg_name, int32(x))
}
func (x *EGCItemMsg) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EGCItemMsg_value, data, "EGCItemMsg")
	if err != nil {
		return err
	}
	*x = EGCItemMsg(value)
	return nil
}
func (EGCItemMsg) EnumDescriptor() ([]byte, []int) { return fileDescriptor4, []int{0} }

type EGCMsgResponse int32

const (
	EGCMsgResponse_k_EGCMsgResponseOK           EGCMsgResponse = 0
	EGCMsgResponse_k_EGCMsgResponseDenied       EGCMsgResponse = 1
	EGCMsgResponse_k_EGCMsgResponseServerError  EGCMsgResponse = 2
	EGCMsgResponse_k_EGCMsgResponseTimeout      EGCMsgResponse = 3
	EGCMsgResponse_k_EGCMsgResponseInvalid      EGCMsgResponse = 4
	EGCMsgResponse_k_EGCMsgResponseNoMatch      EGCMsgResponse = 5
	EGCMsgResponse_k_EGCMsgResponseUnknownError EGCMsgResponse = 6
	EGCMsgResponse_k_EGCMsgResponseNotLoggedOn  EGCMsgResponse = 7
	EGCMsgResponse_k_EGCMsgFailedToCreate       EGCMsgResponse = 8
)

var EGCMsgResponse_name = map[int32]string{
	0: "k_EGCMsgResponseOK",
	1: "k_EGCMsgResponseDenied",
	2: "k_EGCMsgResponseServerError",
	3: "k_EGCMsgResponseTimeout",
	4: "k_EGCMsgResponseInvalid",
	5: "k_EGCMsgResponseNoMatch",
	6: "k_EGCMsgResponseUnknownError",
	7: "k_EGCMsgResponseNotLoggedOn",
	8: "k_EGCMsgFailedToCreate",
}
var EGCMsgResponse_value = map[string]int32{
	"k_EGCMsgResponseOK":           0,
	"k_EGCMsgResponseDenied":       1,
	"k_EGCMsgResponseServerError":  2,
	"k_EGCMsgResponseTimeout":      3,
	"k_EGCMsgResponseInvalid":      4,
	"k_EGCMsgResponseNoMatch":      5,
	"k_EGCMsgResponseUnknownError": 6,
	"k_EGCMsgResponseNotLoggedOn":  7,
	"k_EGCMsgFailedToCreate":       8,
}

func (x EGCMsgResponse) Enum() *EGCMsgResponse {
	p := new(EGCMsgResponse)
	*p = x
	return p
}
func (x EGCMsgResponse) String() string {
	return proto.EnumName(EGCMsgResponse_name, int32(x))
}
func (x *EGCMsgResponse) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EGCMsgResponse_value, data, "EGCMsgResponse")
	if err != nil {
		return err
	}
	*x = EGCMsgResponse(value)
	return nil
}
func (EGCMsgResponse) EnumDescriptor() ([]byte, []int) { return fileDescriptor4, []int{1} }

type EItemPurgatoryResponse_Finalize int32

const (
	EItemPurgatoryResponse_Finalize_k_ItemPurgatoryResponse_Finalize_Succeeded                  EItemPurgatoryResponse_Finalize = 0
	EItemPurgatoryResponse_Finalize_k_ItemPurgatoryResponse_Finalize_Failed_Incomplete          EItemPurgatoryResponse_Finalize = 1
	EItemPurgatoryResponse_Finalize_k_ItemPurgatoryResponse_Finalize_Failed_ItemsNotInPurgatory EItemPurgatoryResponse_Finalize = 2
	EItemPurgatoryResponse_Finalize_k_ItemPurgatoryResponse_Finalize_Failed_CouldNotFindItems   EItemPurgatoryResponse_Finalize = 3
	EItemPurgatoryResponse_Finalize_k_ItemPurgatoryResponse_Finalize_Failed_NoSOCache           EItemPurgatoryResponse_Finalize = 4
	EItemPurgatoryResponse_Finalize_k_ItemPurgatoryResponse_Finalize_BackpackFull               EItemPurgatoryResponse_Finalize = 5
)

var EItemPurgatoryResponse_Finalize_name = map[int32]string{
	0: "k_ItemPurgatoryResponse_Finalize_Succeeded",
	1: "k_ItemPurgatoryResponse_Finalize_Failed_Incomplete",
	2: "k_ItemPurgatoryResponse_Finalize_Failed_ItemsNotInPurgatory",
	3: "k_ItemPurgatoryResponse_Finalize_Failed_CouldNotFindItems",
	4: "k_ItemPurgatoryResponse_Finalize_Failed_NoSOCache",
	5: "k_ItemPurgatoryResponse_Finalize_BackpackFull",
}
var EItemPurgatoryResponse_Finalize_value = map[string]int32{
	"k_ItemPurgatoryResponse_Finalize_Succeeded":                  0,
	"k_ItemPurgatoryResponse_Finalize_Failed_Incomplete":          1,
	"k_ItemPurgatoryResponse_Finalize_Failed_ItemsNotInPurgatory": 2,
	"k_ItemPurgatoryResponse_Finalize_Failed_CouldNotFindItems":   3,
	"k_ItemPurgatoryResponse_Finalize_Failed_NoSOCache":           4,
	"k_ItemPurgatoryResponse_Finalize_BackpackFull":               5,
}

func (x EItemPurgatoryResponse_Finalize) Enum() *EItemPurgatoryResponse_Finalize {
	p := new(EItemPurgatoryResponse_Finalize)
	*p = x
	return p
}
func (x EItemPurgatoryResponse_Finalize) String() string {
	return proto.EnumName(EItemPurgatoryResponse_Finalize_name, int32(x))
}
func (x *EItemPurgatoryResponse_Finalize) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EItemPurgatoryResponse_Finalize_value, data, "EItemPurgatoryResponse_Finalize")
	if err != nil {
		return err
	}
	*x = EItemPurgatoryResponse_Finalize(value)
	return nil
}
func (EItemPurgatoryResponse_Finalize) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor4, []int{2}
}

type EItemPurgatoryResponse_Refund int32

const (
	EItemPurgatoryResponse_Refund_k_ItemPurgatoryResponse_Refund_Succeeded                 EItemPurgatoryResponse_Refund = 0
	EItemPurgatoryResponse_Refund_k_ItemPurgatoryResponse_Refund_Failed_ItemNotInPurgatory EItemPurgatoryResponse_Refund = 1
	EItemPurgatoryResponse_Refund_k_ItemPurgatoryResponse_Refund_Failed_CouldNotFindItem   EItemPurgatoryResponse_Refund = 2
	EItemPurgatoryResponse_Refund_k_ItemPurgatoryResponse_Refund_Failed_NoSOCache          EItemPurgatoryResponse_Refund = 3
	EItemPurgatoryResponse_Refund_k_ItemPurgatoryResponse_Refund_Failed_NoDetail           EItemPurgatoryResponse_Refund = 4
	EItemPurgatoryResponse_Refund_k_ItemPurgatoryResponse_Refund_Failed_NexonWebAPI        EItemPurgatoryResponse_Refund = 5
)

var EItemPurgatoryResponse_Refund_name = map[int32]string{
	0: "k_ItemPurgatoryResponse_Refund_Succeeded",
	1: "k_ItemPurgatoryResponse_Refund_Failed_ItemNotInPurgatory",
	2: "k_ItemPurgatoryResponse_Refund_Failed_CouldNotFindItem",
	3: "k_ItemPurgatoryResponse_Refund_Failed_NoSOCache",
	4: "k_ItemPurgatoryResponse_Refund_Failed_NoDetail",
	5: "k_ItemPurgatoryResponse_Refund_Failed_NexonWebAPI",
}
var EItemPurgatoryResponse_Refund_value = map[string]int32{
	"k_ItemPurgatoryResponse_Refund_Succeeded":                 0,
	"k_ItemPurgatoryResponse_Refund_Failed_ItemNotInPurgatory": 1,
	"k_ItemPurgatoryResponse_Refund_Failed_CouldNotFindItem":   2,
	"k_ItemPurgatoryResponse_Refund_Failed_NoSOCache":          3,
	"k_ItemPurgatoryResponse_Refund_Failed_NoDetail":           4,
	"k_ItemPurgatoryResponse_Refund_Failed_NexonWebAPI":        5,
}

func (x EItemPurgatoryResponse_Refund) Enum() *EItemPurgatoryResponse_Refund {
	p := new(EItemPurgatoryResponse_Refund)
	*p = x
	return p
}
func (x EItemPurgatoryResponse_Refund) String() string {
	return proto.EnumName(EItemPurgatoryResponse_Refund_name, int32(x))
}
func (x *EItemPurgatoryResponse_Refund) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EItemPurgatoryResponse_Refund_value, data, "EItemPurgatoryResponse_Refund")
	if err != nil {
		return err
	}
	*x = EItemPurgatoryResponse_Refund(value)
	return nil
}
func (EItemPurgatoryResponse_Refund) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor4, []int{3}
}

type EGCPartnerRequestResponse int32

const (
	EGCPartnerRequestResponse_k_EPartnerRequestOK                     EGCPartnerRequestResponse = 1
	EGCPartnerRequestResponse_k_EPartnerRequestBadAccount             EGCPartnerRequestResponse = 2
	EGCPartnerRequestResponse_k_EPartnerRequestNotLinked              EGCPartnerRequestResponse = 3
	EGCPartnerRequestResponse_k_EPartnerRequestUnsupportedPartnerType EGCPartnerRequestResponse = 4
)

var EGCPartnerRequestResponse_name = map[int32]string{
	1: "k_EPartnerRequestOK",
	2: "k_EPartnerRequestBadAccount",
	3: "k_EPartnerRequestNotLinked",
	4: "k_EPartnerRequestUnsupportedPartnerType",
}
var EGCPartnerRequestResponse_value = map[string]int32{
	"k_EPartnerRequestOK":                     1,
	"k_EPartnerRequestBadAccount":             2,
	"k_EPartnerRequestNotLinked":              3,
	"k_EPartnerRequestUnsupportedPartnerType": 4,
}

func (x EGCPartnerRequestResponse) Enum() *EGCPartnerRequestResponse {
	p := new(EGCPartnerRequestResponse)
	*p = x
	return p
}
func (x EGCPartnerRequestResponse) String() string {
	return proto.EnumName(EGCPartnerRequestResponse_name, int32(x))
}
func (x *EGCPartnerRequestResponse) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EGCPartnerRequestResponse_value, data, "EGCPartnerRequestResponse")
	if err != nil {
		return err
	}
	*x = EGCPartnerRequestResponse(value)
	return nil
}
func (EGCPartnerRequestResponse) EnumDescriptor() ([]byte, []int) { return fileDescriptor4, []int{4} }

type EGCMsgInitiateTradeResponse int32

const (
	EGCMsgInitiateTradeResponse_k_EGCMsgInitiateTradeResponse_Accepted                          EGCMsgInitiateTradeResponse = 0
	EGCMsgInitiateTradeResponse_k_EGCMsgInitiateTradeResponse_Declined                          EGCMsgInitiateTradeResponse = 1
	EGCMsgInitiateTradeResponse_k_EGCMsgInitiateTradeResponse_VAC_Banned_Initiator              EGCMsgInitiateTradeResponse = 2
	EGCMsgInitiateTradeResponse_k_EGCMsgInitiateTradeResponse_VAC_Banned_Target                 EGCMsgInitiateTradeResponse = 3
	EGCMsgInitiateTradeResponse_k_EGCMsgInitiateTradeResponse_Target_Already_Trading            EGCMsgInitiateTradeResponse = 4
	EGCMsgInitiateTradeResponse_k_EGCMsgInitiateTradeResponse_Disabled                          EGCMsgInitiateTradeResponse = 5
	EGCMsgInitiateTradeResponse_k_EGCMsgInitiateTradeResponse_NotLoggedIn                       EGCMsgInitiateTradeResponse = 6
	EGCMsgInitiateTradeResponse_k_EGCMsgInitiateTradeResponse_Cancel                            EGCMsgInitiateTradeResponse = 7
	EGCMsgInitiateTradeResponse_k_EGCMsgInitiateTradeResponse_TooSoon                           EGCMsgInitiateTradeResponse = 8
	EGCMsgInitiateTradeResponse_k_EGCMsgInitiateTradeResponse_TooSoonPenalty                    EGCMsgInitiateTradeResponse = 9
	EGCMsgInitiateTradeResponse_k_EGCMsgInitiateTradeResponse_Trade_Banned_Initiator            EGCMsgInitiateTradeResponse = 10
	EGCMsgInitiateTradeResponse_k_EGCMsgInitiateTradeResponse_Trade_Banned_Target               EGCMsgInitiateTradeResponse = 11
	EGCMsgInitiateTradeResponse_k_EGCMsgInitiateTradeResponse_Free_Account_Initiator_DEPRECATED EGCMsgInitiateTradeResponse = 12
	EGCMsgInitiateTradeResponse_k_EGCMsgInitiateTradeResponse_Shared_Account_Initiator          EGCMsgInitiateTradeResponse = 13
	EGCMsgInitiateTradeResponse_k_EGCMsgInitiateTradeResponse_Service_Unavailable               EGCMsgInitiateTradeResponse = 14
	EGCMsgInitiateTradeResponse_k_EGCMsgInitiateTradeResponse_Target_Blocked                    EGCMsgInitiateTradeResponse = 15
	EGCMsgInitiateTradeResponse_k_EGCMsgInitiateTradeResponse_NeedVerifiedEmail                 EGCMsgInitiateTradeResponse = 16
	EGCMsgInitiateTradeResponse_k_EGCMsgInitiateTradeResponse_NeedSteamGuard                    EGCMsgInitiateTradeResponse = 17
	EGCMsgInitiateTradeResponse_k_EGCMsgInitiateTradeResponse_SteamGuardDuration                EGCMsgInitiateTradeResponse = 18
	EGCMsgInitiateTradeResponse_k_EGCMsgInitiateTradeResponse_TheyCannotTrade                   EGCMsgInitiateTradeResponse = 19
	EGCMsgInitiateTradeResponse_k_EGCMsgInitiateTradeResponse_Recent_Password_Reset             EGCMsgInitiateTradeResponse = 20
	EGCMsgInitiateTradeResponse_k_EGCMsgInitiateTradeResponse_Using_New_Device                  EGCMsgInitiateTradeResponse = 21
	EGCMsgInitiateTradeResponse_k_EGCMsgInitiateTradeResponse_Sent_Invalid_Cookie               EGCMsgInitiateTradeResponse = 22
)

var EGCMsgInitiateTradeResponse_name = map[int32]string{
	0:  "k_EGCMsgInitiateTradeResponse_Accepted",
	1:  "k_EGCMsgInitiateTradeResponse_Declined",
	2:  "k_EGCMsgInitiateTradeResponse_VAC_Banned_Initiator",
	3:  "k_EGCMsgInitiateTradeResponse_VAC_Banned_Target",
	4:  "k_EGCMsgInitiateTradeResponse_Target_Already_Trading",
	5:  "k_EGCMsgInitiateTradeResponse_Disabled",
	6:  "k_EGCMsgInitiateTradeResponse_NotLoggedIn",
	7:  "k_EGCMsgInitiateTradeResponse_Cancel",
	8:  "k_EGCMsgInitiateTradeResponse_TooSoon",
	9:  "k_EGCMsgInitiateTradeResponse_TooSoonPenalty",
	10: "k_EGCMsgInitiateTradeResponse_Trade_Banned_Initiator",
	11: "k_EGCMsgInitiateTradeResponse_Trade_Banned_Target",
	12: "k_EGCMsgInitiateTradeResponse_Free_Account_Initiator_DEPRECATED",
	13: "k_EGCMsgInitiateTradeResponse_Shared_Account_Initiator",
	14: "k_EGCMsgInitiateTradeResponse_Service_Unavailable",
	15: "k_EGCMsgInitiateTradeResponse_Target_Blocked",
	16: "k_EGCMsgInitiateTradeResponse_NeedVerifiedEmail",
	17: "k_EGCMsgInitiateTradeResponse_NeedSteamGuard",
	18: "k_EGCMsgInitiateTradeResponse_SteamGuardDuration",
	19: "k_EGCMsgInitiateTradeResponse_TheyCannotTrade",
	20: "k_EGCMsgInitiateTradeResponse_Recent_Password_Reset",
	21: "k_EGCMsgInitiateTradeResponse_Using_New_Device",
	22: "k_EGCMsgInitiateTradeResponse_Sent_Invalid_Cookie",
}
var EGCMsgInitiateTradeResponse_value = map[string]int32{
	"k_EGCMsgInitiateTradeResponse_Accepted":                          0,
	"k_EGCMsgInitiateTradeResponse_Declined":                          1,
	"k_EGCMsgInitiateTradeResponse_VAC_Banned_Initiator":              2,
	"k_EGCMsgInitiateTradeResponse_VAC_Banned_Target":                 3,
	"k_EGCMsgInitiateTradeResponse_Target_Already_Trading":            4,
	"k_EGCMsgInitiateTradeResponse_Disabled":                          5,
	"k_EGCMsgInitiateTradeResponse_NotLoggedIn":                       6,
	"k_EGCMsgInitiateTradeResponse_Cancel":                            7,
	"k_EGCMsgInitiateTradeResponse_TooSoon":                           8,
	"k_EGCMsgInitiateTradeResponse_TooSoonPenalty":                    9,
	"k_EGCMsgInitiateTradeResponse_Trade_Banned_Initiator":            10,
	"k_EGCMsgInitiateTradeResponse_Trade_Banned_Target":               11,
	"k_EGCMsgInitiateTradeResponse_Free_Account_Initiator_DEPRECATED": 12,
	"k_EGCMsgInitiateTradeResponse_Shared_Account_Initiator":          13,
	"k_EGCMsgInitiateTradeResponse_Service_Unavailable":               14,
	"k_EGCMsgInitiateTradeResponse_Target_Blocked":                    15,
	"k_EGCMsgInitiateTradeResponse_NeedVerifiedEmail":                 16,
	"k_EGCMsgInitiateTradeResponse_NeedSteamGuard":                    17,
	"k_EGCMsgInitiateTradeResponse_SteamGuardDuration":                18,
	"k_EGCMsgInitiateTradeResponse_TheyCannotTrade":                   19,
	"k_EGCMsgInitiateTradeResponse_Recent_Password_Reset":             20,
	"k_EGCMsgInitiateTradeResponse_Using_New_Device":                  21,
	"k_EGCMsgInitiateTradeResponse_Sent_Invalid_Cookie":               22,
}

func (x EGCMsgInitiateTradeResponse) Enum() *EGCMsgInitiateTradeResponse {
	p := new(EGCMsgInitiateTradeResponse)
	*p = x
	return p
}
func (x EGCMsgInitiateTradeResponse) String() string {
	return proto.EnumName(EGCMsgInitiateTradeResponse_name, int32(x))
}
func (x *EGCMsgInitiateTradeResponse) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EGCMsgInitiateTradeResponse_value, data, "EGCMsgInitiateTradeResponse")
	if err != nil {
		return err
	}
	*x = EGCMsgInitiateTradeResponse(value)
	return nil
}
func (EGCMsgInitiateTradeResponse) EnumDescriptor() ([]byte, []int) { return fileDescriptor4, []int{5} }

type CMsgClientToGCUnpackBundleResponse_EUnpackBundle int32

const (
	CMsgClientToGCUnpackBundleResponse_k_UnpackBundle_Succeeded                          CMsgClientToGCUnpackBundleResponse_EUnpackBundle = 0
	CMsgClientToGCUnpackBundleResponse_k_UnpackBundle_Failed_ItemIsNotBundle             CMsgClientToGCUnpackBundleResponse_EUnpackBundle = 1
	CMsgClientToGCUnpackBundleResponse_k_UnpackBundle_Failed_UnableToCreateContainedItem CMsgClientToGCUnpackBundleResponse_EUnpackBundle = 2
	CMsgClientToGCUnpackBundleResponse_k_UnpackBundle_Failed_SOCacheError                CMsgClientToGCUnpackBundleResponse_EUnpackBundle = 3
	CMsgClientToGCUnpackBundleResponse_k_UnpackBundle_Failed_ItemIsInvalid               CMsgClientToGCUnpackBundleResponse_EUnpackBundle = 4
	CMsgClientToGCUnpackBundleResponse_k_UnpackBundle_Failed_BadItemQuantity             CMsgClientToGCUnpackBundleResponse_EUnpackBundle = 5
	CMsgClientToGCUnpackBundleResponse_k_UnpackBundle_Failed_UnableToDeleteItem          CMsgClientToGCUnpackBundleResponse_EUnpackBundle = 6
)

var CMsgClientToGCUnpackBundleResponse_EUnpackBundle_name = map[int32]string{
	0: "k_UnpackBundle_Succeeded",
	1: "k_UnpackBundle_Failed_ItemIsNotBundle",
	2: "k_UnpackBundle_Failed_UnableToCreateContainedItem",
	3: "k_UnpackBundle_Failed_SOCacheError",
	4: "k_UnpackBundle_Failed_ItemIsInvalid",
	5: "k_UnpackBundle_Failed_BadItemQuantity",
	6: "k_UnpackBundle_Failed_UnableToDeleteItem",
}
var CMsgClientToGCUnpackBundleResponse_EUnpackBundle_value = map[string]int32{
	"k_UnpackBundle_Succeeded":                          0,
	"k_UnpackBundle_Failed_ItemIsNotBundle":             1,
	"k_UnpackBundle_Failed_UnableToCreateContainedItem": 2,
	"k_UnpackBundle_Failed_SOCacheError":                3,
	"k_UnpackBundle_Failed_ItemIsInvalid":               4,
	"k_UnpackBundle_Failed_BadItemQuantity":             5,
	"k_UnpackBundle_Failed_UnableToDeleteItem":          6,
}

func (x CMsgClientToGCUnpackBundleResponse_EUnpackBundle) Enum() *CMsgClientToGCUnpackBundleResponse_EUnpackBundle {
	p := new(CMsgClientToGCUnpackBundleResponse_EUnpackBundle)
	*p = x
	return p
}
func (x CMsgClientToGCUnpackBundleResponse_EUnpackBundle) String() string {
	return proto.EnumName(CMsgClientToGCUnpackBundleResponse_EUnpackBundle_name, int32(x))
}
func (x *CMsgClientToGCUnpackBundleResponse_EUnpackBundle) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgClientToGCUnpackBundleResponse_EUnpackBundle_value, data, "CMsgClientToGCUnpackBundleResponse_EUnpackBundle")
	if err != nil {
		return err
	}
	*x = CMsgClientToGCUnpackBundleResponse_EUnpackBundle(value)
	return nil
}
func (CMsgClientToGCUnpackBundleResponse_EUnpackBundle) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor4, []int{48, 0}
}

type CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle int32

const (
	CMsgClientToGCUnlockItemStyleResponse_k_UnlockStyle_Succeeded                CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle = 0
	CMsgClientToGCUnlockItemStyleResponse_k_UnlockStyle_Failed_PreReq            CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle = 1
	CMsgClientToGCUnlockItemStyleResponse_k_UnlockStyle_Failed_CantAfford        CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle = 2
	CMsgClientToGCUnlockItemStyleResponse_k_UnlockStyle_Failed_CantCommit        CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle = 3
	CMsgClientToGCUnlockItemStyleResponse_k_UnlockStyle_Failed_CantLockCache     CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle = 4
	CMsgClientToGCUnlockItemStyleResponse_k_UnlockStyle_Failed_CantAffordAttrib  CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle = 5
	CMsgClientToGCUnlockItemStyleResponse_k_UnlockStyle_Failed_CantAffordGem     CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle = 6
	CMsgClientToGCUnlockItemStyleResponse_k_UnlockStyle_Failed_NoCompendiumLevel CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle = 7
	CMsgClientToGCUnlockItemStyleResponse_k_UnlockStyle_Failed_AlreadyUnlocked   CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle = 8
)

var CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle_name = map[int32]string{
	0: "k_UnlockStyle_Succeeded",
	1: "k_UnlockStyle_Failed_PreReq",
	2: "k_UnlockStyle_Failed_CantAfford",
	3: "k_UnlockStyle_Failed_CantCommit",
	4: "k_UnlockStyle_Failed_CantLockCache",
	5: "k_UnlockStyle_Failed_CantAffordAttrib",
	6: "k_UnlockStyle_Failed_CantAffordGem",
	7: "k_UnlockStyle_Failed_NoCompendiumLevel",
	8: "k_UnlockStyle_Failed_AlreadyUnlocked",
}
var CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle_value = map[string]int32{
	"k_UnlockStyle_Succeeded":                0,
	"k_UnlockStyle_Failed_PreReq":            1,
	"k_UnlockStyle_Failed_CantAfford":        2,
	"k_UnlockStyle_Failed_CantCommit":        3,
	"k_UnlockStyle_Failed_CantLockCache":     4,
	"k_UnlockStyle_Failed_CantAffordAttrib":  5,
	"k_UnlockStyle_Failed_CantAffordGem":     6,
	"k_UnlockStyle_Failed_NoCompendiumLevel": 7,
	"k_UnlockStyle_Failed_AlreadyUnlocked":   8,
}

func (x CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle) Enum() *CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle {
	p := new(CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle)
	*p = x
	return p
}
func (x CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle) String() string {
	return proto.EnumName(CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle_name, int32(x))
}
func (x *CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle_value, data, "CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle")
	if err != nil {
		return err
	}
	*x = CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle(value)
	return nil
}
func (CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor4, []int{53, 0}
}

type CMsgApplyAutograph struct {
	AutographItemId  *uint64 `protobuf:"varint,1,opt,name=autograph_item_id" json:"autograph_item_id,omitempty"`
	ItemItemId       *uint64 `protobuf:"varint,2,opt,name=item_item_id" json:"item_item_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgApplyAutograph) Reset()                    { *m = CMsgApplyAutograph{} }
func (m *CMsgApplyAutograph) String() string            { return proto.CompactTextString(m) }
func (*CMsgApplyAutograph) ProtoMessage()               {}
func (*CMsgApplyAutograph) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{0} }

func (m *CMsgApplyAutograph) GetAutographItemId() uint64 {
	if m != nil && m.AutographItemId != nil {
		return *m.AutographItemId
	}
	return 0
}

func (m *CMsgApplyAutograph) GetItemItemId() uint64 {
	if m != nil && m.ItemItemId != nil {
		return *m.ItemItemId
	}
	return 0
}

type CMsgAdjustItemEquippedState struct {
	ItemId           *uint64 `protobuf:"varint,1,opt,name=item_id" json:"item_id,omitempty"`
	NewClass         *uint32 `protobuf:"varint,2,opt,name=new_class" json:"new_class,omitempty"`
	NewSlot          *uint32 `protobuf:"varint,3,opt,name=new_slot" json:"new_slot,omitempty"`
	StyleIndex       *uint32 `protobuf:"varint,4,opt,name=style_index" json:"style_index,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgAdjustItemEquippedState) Reset()                    { *m = CMsgAdjustItemEquippedState{} }
func (m *CMsgAdjustItemEquippedState) String() string            { return proto.CompactTextString(m) }
func (*CMsgAdjustItemEquippedState) ProtoMessage()               {}
func (*CMsgAdjustItemEquippedState) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{1} }

func (m *CMsgAdjustItemEquippedState) GetItemId() uint64 {
	if m != nil && m.ItemId != nil {
		return *m.ItemId
	}
	return 0
}

func (m *CMsgAdjustItemEquippedState) GetNewClass() uint32 {
	if m != nil && m.NewClass != nil {
		return *m.NewClass
	}
	return 0
}

func (m *CMsgAdjustItemEquippedState) GetNewSlot() uint32 {
	if m != nil && m.NewSlot != nil {
		return *m.NewSlot
	}
	return 0
}

func (m *CMsgAdjustItemEquippedState) GetStyleIndex() uint32 {
	if m != nil && m.StyleIndex != nil {
		return *m.StyleIndex
	}
	return 0
}

type CMsgEconPlayerStrangeCountAdjustment struct {
	AccountId               *uint32                                                         `protobuf:"varint,1,opt,name=account_id" json:"account_id,omitempty"`
	StrangeCountAdjustments []*CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment `protobuf:"bytes,2,rep,name=strange_count_adjustments" json:"strange_count_adjustments,omitempty"`
	XXX_unrecognized        []byte                                                          `json:"-"`
}

func (m *CMsgEconPlayerStrangeCountAdjustment) Reset()         { *m = CMsgEconPlayerStrangeCountAdjustment{} }
func (m *CMsgEconPlayerStrangeCountAdjustment) String() string { return proto.CompactTextString(m) }
func (*CMsgEconPlayerStrangeCountAdjustment) ProtoMessage()    {}
func (*CMsgEconPlayerStrangeCountAdjustment) Descriptor() ([]byte, []int) {
	return fileDescriptor4, []int{2}
}

func (m *CMsgEconPlayerStrangeCountAdjustment) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *CMsgEconPlayerStrangeCountAdjustment) GetStrangeCountAdjustments() []*CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment {
	if m != nil {
		return m.StrangeCountAdjustments
	}
	return nil
}

type CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment struct {
	EventType        *uint32 `protobuf:"varint,1,opt,name=event_type" json:"event_type,omitempty"`
	ItemId           *uint64 `protobuf:"varint,2,opt,name=item_id" json:"item_id,omitempty"`
	Adjustment       *uint32 `protobuf:"varint,3,opt,name=adjustment" json:"adjustment,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment) Reset() {
	*m = CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment{}
}
func (m *CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment) ProtoMessage() {}
func (*CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment) Descriptor() ([]byte, []int) {
	return fileDescriptor4, []int{2, 0}
}

func (m *CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment) GetEventType() uint32 {
	if m != nil && m.EventType != nil {
		return *m.EventType
	}
	return 0
}

func (m *CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment) GetItemId() uint64 {
	if m != nil && m.ItemId != nil {
		return *m.ItemId
	}
	return 0
}

func (m *CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment) GetAdjustment() uint32 {
	if m != nil && m.Adjustment != nil {
		return *m.Adjustment
	}
	return 0
}

type CMsgRequestItemPurgatory_FinalizePurchase struct {
	ItemIds          []uint64 `protobuf:"varint,1,rep,name=item_ids" json:"item_ids,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CMsgRequestItemPurgatory_FinalizePurchase) Reset() {
	*m = CMsgRequestItemPurgatory_FinalizePurchase{}
}
func (m *CMsgRequestItemPurgatory_FinalizePurchase) String() string { return proto.CompactTextString(m) }
func (*CMsgRequestItemPurgatory_FinalizePurchase) ProtoMessage()    {}
func (*CMsgRequestItemPurgatory_FinalizePurchase) Descriptor() ([]byte, []int) {
	return fileDescriptor4, []int{3}
}

func (m *CMsgRequestItemPurgatory_FinalizePurchase) GetItemIds() []uint64 {
	if m != nil {
		return m.ItemIds
	}
	return nil
}

type CMsgRequestItemPurgatory_FinalizePurchaseResponse struct {
	Result           *uint32 `protobuf:"varint,1,opt,name=result" json:"result,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgRequestItemPurgatory_FinalizePurchaseResponse) Reset() {
	*m = CMsgRequestItemPurgatory_FinalizePurchaseResponse{}
}
func (m *CMsgRequestItemPurgatory_FinalizePurchaseResponse) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgRequestItemPurgatory_FinalizePurchaseResponse) ProtoMessage() {}
func (*CMsgRequestItemPurgatory_FinalizePurchaseResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor4, []int{4}
}

func (m *CMsgRequestItemPurgatory_FinalizePurchaseResponse) GetResult() uint32 {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return 0
}

type CMsgRequestItemPurgatory_RefundPurchase struct {
	ItemId           *uint64 `protobuf:"varint,1,opt,name=item_id" json:"item_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgRequestItemPurgatory_RefundPurchase) Reset() {
	*m = CMsgRequestItemPurgatory_RefundPurchase{}
}
func (m *CMsgRequestItemPurgatory_RefundPurchase) String() string { return proto.CompactTextString(m) }
func (*CMsgRequestItemPurgatory_RefundPurchase) ProtoMessage()    {}
func (*CMsgRequestItemPurgatory_RefundPurchase) Descriptor() ([]byte, []int) {
	return fileDescriptor4, []int{5}
}

func (m *CMsgRequestItemPurgatory_RefundPurchase) GetItemId() uint64 {
	if m != nil && m.ItemId != nil {
		return *m.ItemId
	}
	return 0
}

type CMsgRequestItemPurgatory_RefundPurchaseResponse struct {
	Result           *uint32 `protobuf:"varint,1,opt,name=result" json:"result,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgRequestItemPurgatory_RefundPurchaseResponse) Reset() {
	*m = CMsgRequestItemPurgatory_RefundPurchaseResponse{}
}
func (m *CMsgRequestItemPurgatory_RefundPurchaseResponse) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgRequestItemPurgatory_RefundPurchaseResponse) ProtoMessage() {}
func (*CMsgRequestItemPurgatory_RefundPurchaseResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor4, []int{6}
}

func (m *CMsgRequestItemPurgatory_RefundPurchaseResponse) GetResult() uint32 {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return 0
}

type CMsgCraftingResponse struct {
	ItemIds          []uint64 `protobuf:"varint,1,rep,name=item_ids" json:"item_ids,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CMsgCraftingResponse) Reset()                    { *m = CMsgCraftingResponse{} }
func (m *CMsgCraftingResponse) String() string            { return proto.CompactTextString(m) }
func (*CMsgCraftingResponse) ProtoMessage()               {}
func (*CMsgCraftingResponse) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{7} }

func (m *CMsgCraftingResponse) GetItemIds() []uint64 {
	if m != nil {
		return m.ItemIds
	}
	return nil
}

type CMsgGCRequestStoreSalesData struct {
	Version          *uint32 `protobuf:"varint,1,opt,name=version" json:"version,omitempty"`
	Currency         *uint32 `protobuf:"varint,2,opt,name=currency" json:"currency,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgGCRequestStoreSalesData) Reset()                    { *m = CMsgGCRequestStoreSalesData{} }
func (m *CMsgGCRequestStoreSalesData) String() string            { return proto.CompactTextString(m) }
func (*CMsgGCRequestStoreSalesData) ProtoMessage()               {}
func (*CMsgGCRequestStoreSalesData) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{8} }

func (m *CMsgGCRequestStoreSalesData) GetVersion() uint32 {
	if m != nil && m.Version != nil {
		return *m.Version
	}
	return 0
}

func (m *CMsgGCRequestStoreSalesData) GetCurrency() uint32 {
	if m != nil && m.Currency != nil {
		return *m.Currency
	}
	return 0
}

type CMsgGCRequestStoreSalesDataResponse struct {
	SalePrice        []*CMsgGCRequestStoreSalesDataResponse_Price `protobuf:"bytes,1,rep,name=sale_price" json:"sale_price,omitempty"`
	Version          *uint32                                      `protobuf:"varint,2,opt,name=version" json:"version,omitempty"`
	ExpirationTime   *uint32                                      `protobuf:"varint,3,opt,name=expiration_time" json:"expiration_time,omitempty"`
	XXX_unrecognized []byte                                       `json:"-"`
}

func (m *CMsgGCRequestStoreSalesDataResponse) Reset()         { *m = CMsgGCRequestStoreSalesDataResponse{} }
func (m *CMsgGCRequestStoreSalesDataResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgGCRequestStoreSalesDataResponse) ProtoMessage()    {}
func (*CMsgGCRequestStoreSalesDataResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor4, []int{9}
}

func (m *CMsgGCRequestStoreSalesDataResponse) GetSalePrice() []*CMsgGCRequestStoreSalesDataResponse_Price {
	if m != nil {
		return m.SalePrice
	}
	return nil
}

func (m *CMsgGCRequestStoreSalesDataResponse) GetVersion() uint32 {
	if m != nil && m.Version != nil {
		return *m.Version
	}
	return 0
}

func (m *CMsgGCRequestStoreSalesDataResponse) GetExpirationTime() uint32 {
	if m != nil && m.ExpirationTime != nil {
		return *m.ExpirationTime
	}
	return 0
}

type CMsgGCRequestStoreSalesDataResponse_Price struct {
	ItemDef          *uint32 `protobuf:"varint,1,opt,name=item_def" json:"item_def,omitempty"`
	Price            *uint32 `protobuf:"varint,2,opt,name=price" json:"price,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgGCRequestStoreSalesDataResponse_Price) Reset() {
	*m = CMsgGCRequestStoreSalesDataResponse_Price{}
}
func (m *CMsgGCRequestStoreSalesDataResponse_Price) String() string { return proto.CompactTextString(m) }
func (*CMsgGCRequestStoreSalesDataResponse_Price) ProtoMessage()    {}
func (*CMsgGCRequestStoreSalesDataResponse_Price) Descriptor() ([]byte, []int) {
	return fileDescriptor4, []int{9, 0}
}

func (m *CMsgGCRequestStoreSalesDataResponse_Price) GetItemDef() uint32 {
	if m != nil && m.ItemDef != nil {
		return *m.ItemDef
	}
	return 0
}

func (m *CMsgGCRequestStoreSalesDataResponse_Price) GetPrice() uint32 {
	if m != nil && m.Price != nil {
		return *m.Price
	}
	return 0
}

type CMsgGCRequestStoreSalesDataUpToDateResponse struct {
	Version          *uint32 `protobuf:"varint,1,opt,name=version" json:"version,omitempty"`
	ExpirationTime   *uint32 `protobuf:"varint,2,opt,name=expiration_time" json:"expiration_time,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgGCRequestStoreSalesDataUpToDateResponse) Reset() {
	*m = CMsgGCRequestStoreSalesDataUpToDateResponse{}
}
func (m *CMsgGCRequestStoreSalesDataUpToDateResponse) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgGCRequestStoreSalesDataUpToDateResponse) ProtoMessage() {}
func (*CMsgGCRequestStoreSalesDataUpToDateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor4, []int{10}
}

func (m *CMsgGCRequestStoreSalesDataUpToDateResponse) GetVersion() uint32 {
	if m != nil && m.Version != nil {
		return *m.Version
	}
	return 0
}

func (m *CMsgGCRequestStoreSalesDataUpToDateResponse) GetExpirationTime() uint32 {
	if m != nil && m.ExpirationTime != nil {
		return *m.ExpirationTime
	}
	return 0
}

type CMsgGCToGCPingRequest struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMsgGCToGCPingRequest) Reset()                    { *m = CMsgGCToGCPingRequest{} }
func (m *CMsgGCToGCPingRequest) String() string            { return proto.CompactTextString(m) }
func (*CMsgGCToGCPingRequest) ProtoMessage()               {}
func (*CMsgGCToGCPingRequest) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{11} }

type CMsgGCToGCPingResponse struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMsgGCToGCPingResponse) Reset()                    { *m = CMsgGCToGCPingResponse{} }
func (m *CMsgGCToGCPingResponse) String() string            { return proto.CompactTextString(m) }
func (*CMsgGCToGCPingResponse) ProtoMessage()               {}
func (*CMsgGCToGCPingResponse) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{12} }

type CMsgGCToGCGetUserSessionServer struct {
	AccountId        *uint32 `protobuf:"varint,1,opt,name=account_id" json:"account_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgGCToGCGetUserSessionServer) Reset()                    { *m = CMsgGCToGCGetUserSessionServer{} }
func (m *CMsgGCToGCGetUserSessionServer) String() string            { return proto.CompactTextString(m) }
func (*CMsgGCToGCGetUserSessionServer) ProtoMessage()               {}
func (*CMsgGCToGCGetUserSessionServer) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{13} }

func (m *CMsgGCToGCGetUserSessionServer) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

type CMsgGCToGCGetUserSessionServerResponse struct {
	ServerSteamId    *uint64 `protobuf:"fixed64,1,opt,name=server_steam_id" json:"server_steam_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgGCToGCGetUserSessionServerResponse) Reset() {
	*m = CMsgGCToGCGetUserSessionServerResponse{}
}
func (m *CMsgGCToGCGetUserSessionServerResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgGCToGCGetUserSessionServerResponse) ProtoMessage()    {}
func (*CMsgGCToGCGetUserSessionServerResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor4, []int{14}
}

func (m *CMsgGCToGCGetUserSessionServerResponse) GetServerSteamId() uint64 {
	if m != nil && m.ServerSteamId != nil {
		return *m.ServerSteamId
	}
	return 0
}

type CMsgGCToGCGetUserServerMembers struct {
	AccountId        *uint32 `protobuf:"varint,1,opt,name=account_id" json:"account_id,omitempty"`
	MaxSpectators    *uint32 `protobuf:"varint,2,opt,name=max_spectators" json:"max_spectators,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgGCToGCGetUserServerMembers) Reset()                    { *m = CMsgGCToGCGetUserServerMembers{} }
func (m *CMsgGCToGCGetUserServerMembers) String() string            { return proto.CompactTextString(m) }
func (*CMsgGCToGCGetUserServerMembers) ProtoMessage()               {}
func (*CMsgGCToGCGetUserServerMembers) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{15} }

func (m *CMsgGCToGCGetUserServerMembers) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *CMsgGCToGCGetUserServerMembers) GetMaxSpectators() uint32 {
	if m != nil && m.MaxSpectators != nil {
		return *m.MaxSpectators
	}
	return 0
}

type CMsgGCToGCGetUserServerMembersResponse struct {
	MemberAccountId  []uint32 `protobuf:"varint,1,rep,name=member_account_id" json:"member_account_id,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CMsgGCToGCGetUserServerMembersResponse) Reset() {
	*m = CMsgGCToGCGetUserServerMembersResponse{}
}
func (m *CMsgGCToGCGetUserServerMembersResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgGCToGCGetUserServerMembersResponse) ProtoMessage()    {}
func (*CMsgGCToGCGetUserServerMembersResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor4, []int{16}
}

func (m *CMsgGCToGCGetUserServerMembersResponse) GetMemberAccountId() []uint32 {
	if m != nil {
		return m.MemberAccountId
	}
	return nil
}

type CMsgLookupMultipleAccountNames struct {
	Accountids       []uint32 `protobuf:"varint,1,rep,packed,name=accountids" json:"accountids,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CMsgLookupMultipleAccountNames) Reset()                    { *m = CMsgLookupMultipleAccountNames{} }
func (m *CMsgLookupMultipleAccountNames) String() string            { return proto.CompactTextString(m) }
func (*CMsgLookupMultipleAccountNames) ProtoMessage()               {}
func (*CMsgLookupMultipleAccountNames) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{17} }

func (m *CMsgLookupMultipleAccountNames) GetAccountids() []uint32 {
	if m != nil {
		return m.Accountids
	}
	return nil
}

type CMsgLookupMultipleAccountNamesResponse struct {
	Accounts         []*CMsgLookupMultipleAccountNamesResponse_Account `protobuf:"bytes,1,rep,name=accounts" json:"accounts,omitempty"`
	XXX_unrecognized []byte                                            `json:"-"`
}

func (m *CMsgLookupMultipleAccountNamesResponse) Reset() {
	*m = CMsgLookupMultipleAccountNamesResponse{}
}
func (m *CMsgLookupMultipleAccountNamesResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgLookupMultipleAccountNamesResponse) ProtoMessage()    {}
func (*CMsgLookupMultipleAccountNamesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor4, []int{18}
}

func (m *CMsgLookupMultipleAccountNamesResponse) GetAccounts() []*CMsgLookupMultipleAccountNamesResponse_Account {
	if m != nil {
		return m.Accounts
	}
	return nil
}

type CMsgLookupMultipleAccountNamesResponse_Account struct {
	Accountid        *uint32 `protobuf:"varint,1,opt,name=accountid" json:"accountid,omitempty"`
	Persona          *string `protobuf:"bytes,2,opt,name=persona" json:"persona,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgLookupMultipleAccountNamesResponse_Account) Reset() {
	*m = CMsgLookupMultipleAccountNamesResponse_Account{}
}
func (m *CMsgLookupMultipleAccountNamesResponse_Account) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgLookupMultipleAccountNamesResponse_Account) ProtoMessage() {}
func (*CMsgLookupMultipleAccountNamesResponse_Account) Descriptor() ([]byte, []int) {
	return fileDescriptor4, []int{18, 0}
}

func (m *CMsgLookupMultipleAccountNamesResponse_Account) GetAccountid() uint32 {
	if m != nil && m.Accountid != nil {
		return *m.Accountid
	}
	return 0
}

func (m *CMsgLookupMultipleAccountNamesResponse_Account) GetPersona() string {
	if m != nil && m.Persona != nil {
		return *m.Persona
	}
	return ""
}

type CMsgGCToGCGetUserPCBangNo struct {
	AccountId        *uint32 `protobuf:"varint,1,opt,name=account_id" json:"account_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgGCToGCGetUserPCBangNo) Reset()                    { *m = CMsgGCToGCGetUserPCBangNo{} }
func (m *CMsgGCToGCGetUserPCBangNo) String() string            { return proto.CompactTextString(m) }
func (*CMsgGCToGCGetUserPCBangNo) ProtoMessage()               {}
func (*CMsgGCToGCGetUserPCBangNo) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{19} }

func (m *CMsgGCToGCGetUserPCBangNo) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

type CMsgGCToGCGetUserPCBangNoResponse struct {
	PcBangNo         *uint32 `protobuf:"varint,1,opt,name=pc_bang_no" json:"pc_bang_no,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgGCToGCGetUserPCBangNoResponse) Reset()         { *m = CMsgGCToGCGetUserPCBangNoResponse{} }
func (m *CMsgGCToGCGetUserPCBangNoResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgGCToGCGetUserPCBangNoResponse) ProtoMessage()    {}
func (*CMsgGCToGCGetUserPCBangNoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor4, []int{20}
}

func (m *CMsgGCToGCGetUserPCBangNoResponse) GetPcBangNo() uint32 {
	if m != nil && m.PcBangNo != nil {
		return *m.PcBangNo
	}
	return 0
}

type CMsgRequestCrateItems struct {
	CrateItemDef     *uint32 `protobuf:"varint,1,opt,name=crate_item_def" json:"crate_item_def,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgRequestCrateItems) Reset()                    { *m = CMsgRequestCrateItems{} }
func (m *CMsgRequestCrateItems) String() string            { return proto.CompactTextString(m) }
func (*CMsgRequestCrateItems) ProtoMessage()               {}
func (*CMsgRequestCrateItems) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{21} }

func (m *CMsgRequestCrateItems) GetCrateItemDef() uint32 {
	if m != nil && m.CrateItemDef != nil {
		return *m.CrateItemDef
	}
	return 0
}

type CMsgRequestCrateItemsResponse struct {
	CrateItemDef     *uint32  `protobuf:"varint,1,opt,name=crate_item_def" json:"crate_item_def,omitempty"`
	ItemDefs         []uint32 `protobuf:"varint,2,rep,name=item_defs" json:"item_defs,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CMsgRequestCrateItemsResponse) Reset()                    { *m = CMsgRequestCrateItemsResponse{} }
func (m *CMsgRequestCrateItemsResponse) String() string            { return proto.CompactTextString(m) }
func (*CMsgRequestCrateItemsResponse) ProtoMessage()               {}
func (*CMsgRequestCrateItemsResponse) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{22} }

func (m *CMsgRequestCrateItemsResponse) GetCrateItemDef() uint32 {
	if m != nil && m.CrateItemDef != nil {
		return *m.CrateItemDef
	}
	return 0
}

func (m *CMsgRequestCrateItemsResponse) GetItemDefs() []uint32 {
	if m != nil {
		return m.ItemDefs
	}
	return nil
}

type CMsgGCToGCCanUseDropRateBonus struct {
	AccountId        *uint32  `protobuf:"varint,1,opt,name=account_id" json:"account_id,omitempty"`
	DropRateBonus    *float32 `protobuf:"fixed32,2,opt,name=drop_rate_bonus" json:"drop_rate_bonus,omitempty"`
	BoosterType      *uint32  `protobuf:"varint,3,opt,name=booster_type" json:"booster_type,omitempty"`
	ExclusiveItemDef *uint32  `protobuf:"varint,4,opt,name=exclusive_item_def" json:"exclusive_item_def,omitempty"`
	AllowEqualRate   *bool    `protobuf:"varint,5,opt,name=allow_equal_rate" json:"allow_equal_rate,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CMsgGCToGCCanUseDropRateBonus) Reset()                    { *m = CMsgGCToGCCanUseDropRateBonus{} }
func (m *CMsgGCToGCCanUseDropRateBonus) String() string            { return proto.CompactTextString(m) }
func (*CMsgGCToGCCanUseDropRateBonus) ProtoMessage()               {}
func (*CMsgGCToGCCanUseDropRateBonus) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{23} }

func (m *CMsgGCToGCCanUseDropRateBonus) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *CMsgGCToGCCanUseDropRateBonus) GetDropRateBonus() float32 {
	if m != nil && m.DropRateBonus != nil {
		return *m.DropRateBonus
	}
	return 0
}

func (m *CMsgGCToGCCanUseDropRateBonus) GetBoosterType() uint32 {
	if m != nil && m.BoosterType != nil {
		return *m.BoosterType
	}
	return 0
}

func (m *CMsgGCToGCCanUseDropRateBonus) GetExclusiveItemDef() uint32 {
	if m != nil && m.ExclusiveItemDef != nil {
		return *m.ExclusiveItemDef
	}
	return 0
}

func (m *CMsgGCToGCCanUseDropRateBonus) GetAllowEqualRate() bool {
	if m != nil && m.AllowEqualRate != nil {
		return *m.AllowEqualRate
	}
	return false
}

type CMsgSQLAddDropRateBonus struct {
	AccountId        *uint32  `protobuf:"varint,1,opt,name=account_id" json:"account_id,omitempty"`
	ItemId           *uint64  `protobuf:"varint,2,opt,name=item_id" json:"item_id,omitempty"`
	ItemDef          *uint32  `protobuf:"varint,3,opt,name=item_def" json:"item_def,omitempty"`
	DropRateBonus    *float32 `protobuf:"fixed32,4,opt,name=drop_rate_bonus" json:"drop_rate_bonus,omitempty"`
	BoosterType      *uint32  `protobuf:"varint,5,opt,name=booster_type" json:"booster_type,omitempty"`
	SecondsDuration  *uint32  `protobuf:"varint,6,opt,name=seconds_duration" json:"seconds_duration,omitempty"`
	EndTimeStamp     *uint32  `protobuf:"varint,7,opt,name=end_time_stamp" json:"end_time_stamp,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CMsgSQLAddDropRateBonus) Reset()                    { *m = CMsgSQLAddDropRateBonus{} }
func (m *CMsgSQLAddDropRateBonus) String() string            { return proto.CompactTextString(m) }
func (*CMsgSQLAddDropRateBonus) ProtoMessage()               {}
func (*CMsgSQLAddDropRateBonus) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{24} }

func (m *CMsgSQLAddDropRateBonus) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *CMsgSQLAddDropRateBonus) GetItemId() uint64 {
	if m != nil && m.ItemId != nil {
		return *m.ItemId
	}
	return 0
}

func (m *CMsgSQLAddDropRateBonus) GetItemDef() uint32 {
	if m != nil && m.ItemDef != nil {
		return *m.ItemDef
	}
	return 0
}

func (m *CMsgSQLAddDropRateBonus) GetDropRateBonus() float32 {
	if m != nil && m.DropRateBonus != nil {
		return *m.DropRateBonus
	}
	return 0
}

func (m *CMsgSQLAddDropRateBonus) GetBoosterType() uint32 {
	if m != nil && m.BoosterType != nil {
		return *m.BoosterType
	}
	return 0
}

func (m *CMsgSQLAddDropRateBonus) GetSecondsDuration() uint32 {
	if m != nil && m.SecondsDuration != nil {
		return *m.SecondsDuration
	}
	return 0
}

func (m *CMsgSQLAddDropRateBonus) GetEndTimeStamp() uint32 {
	if m != nil && m.EndTimeStamp != nil {
		return *m.EndTimeStamp
	}
	return 0
}

type CMsgSQLUpgradeBattleBooster struct {
	AccountId        *uint32  `protobuf:"varint,1,opt,name=account_id" json:"account_id,omitempty"`
	ItemDef          *uint32  `protobuf:"varint,2,opt,name=item_def" json:"item_def,omitempty"`
	BonusToAdd       *float32 `protobuf:"fixed32,3,opt,name=bonus_to_add" json:"bonus_to_add,omitempty"`
	BoosterType      *uint32  `protobuf:"varint,4,opt,name=booster_type" json:"booster_type,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CMsgSQLUpgradeBattleBooster) Reset()                    { *m = CMsgSQLUpgradeBattleBooster{} }
func (m *CMsgSQLUpgradeBattleBooster) String() string            { return proto.CompactTextString(m) }
func (*CMsgSQLUpgradeBattleBooster) ProtoMessage()               {}
func (*CMsgSQLUpgradeBattleBooster) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{25} }

func (m *CMsgSQLUpgradeBattleBooster) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *CMsgSQLUpgradeBattleBooster) GetItemDef() uint32 {
	if m != nil && m.ItemDef != nil {
		return *m.ItemDef
	}
	return 0
}

func (m *CMsgSQLUpgradeBattleBooster) GetBonusToAdd() float32 {
	if m != nil && m.BonusToAdd != nil {
		return *m.BonusToAdd
	}
	return 0
}

func (m *CMsgSQLUpgradeBattleBooster) GetBoosterType() uint32 {
	if m != nil && m.BoosterType != nil {
		return *m.BoosterType
	}
	return 0
}

type CMsgGCToGCRefreshSOCache struct {
	AccountId        *uint32 `protobuf:"varint,1,opt,name=account_id" json:"account_id,omitempty"`
	Reload           *bool   `protobuf:"varint,2,opt,name=reload" json:"reload,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgGCToGCRefreshSOCache) Reset()                    { *m = CMsgGCToGCRefreshSOCache{} }
func (m *CMsgGCToGCRefreshSOCache) String() string            { return proto.CompactTextString(m) }
func (*CMsgGCToGCRefreshSOCache) ProtoMessage()               {}
func (*CMsgGCToGCRefreshSOCache) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{26} }

func (m *CMsgGCToGCRefreshSOCache) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *CMsgGCToGCRefreshSOCache) GetReload() bool {
	if m != nil && m.Reload != nil {
		return *m.Reload
	}
	return false
}

type CMsgGCToGCCheckAccountTradeStatus struct {
	AccountId        *uint32 `protobuf:"varint,1,opt,name=account_id" json:"account_id,omitempty"`
	Initiator        *bool   `protobuf:"varint,2,opt,name=initiator" json:"initiator,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgGCToGCCheckAccountTradeStatus) Reset()         { *m = CMsgGCToGCCheckAccountTradeStatus{} }
func (m *CMsgGCToGCCheckAccountTradeStatus) String() string { return proto.CompactTextString(m) }
func (*CMsgGCToGCCheckAccountTradeStatus) ProtoMessage()    {}
func (*CMsgGCToGCCheckAccountTradeStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor4, []int{27}
}

func (m *CMsgGCToGCCheckAccountTradeStatus) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *CMsgGCToGCCheckAccountTradeStatus) GetInitiator() bool {
	if m != nil && m.Initiator != nil {
		return *m.Initiator
	}
	return false
}

type CMsgGCToGCCheckAccountTradeStatusResponse struct {
	CanTrade         *bool   `protobuf:"varint,1,opt,name=can_trade" json:"can_trade,omitempty"`
	ErrorCode        *uint32 `protobuf:"varint,2,opt,name=error_code" json:"error_code,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgGCToGCCheckAccountTradeStatusResponse) Reset() {
	*m = CMsgGCToGCCheckAccountTradeStatusResponse{}
}
func (m *CMsgGCToGCCheckAccountTradeStatusResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgGCToGCCheckAccountTradeStatusResponse) ProtoMessage()    {}
func (*CMsgGCToGCCheckAccountTradeStatusResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor4, []int{28}
}

func (m *CMsgGCToGCCheckAccountTradeStatusResponse) GetCanTrade() bool {
	if m != nil && m.CanTrade != nil {
		return *m.CanTrade
	}
	return false
}

func (m *CMsgGCToGCCheckAccountTradeStatusResponse) GetErrorCode() uint32 {
	if m != nil && m.ErrorCode != nil {
		return *m.ErrorCode
	}
	return 0
}

type CMsgGCToGCGrantAccountRolledItems struct {
	AccountId        *uint32                                   `protobuf:"varint,1,opt,name=account_id" json:"account_id,omitempty"`
	Items            []*CMsgGCToGCGrantAccountRolledItems_Item `protobuf:"bytes,2,rep,name=items" json:"items,omitempty"`
	AuditAction      *uint32                                   `protobuf:"varint,3,opt,name=audit_action" json:"audit_action,omitempty"`
	AuditData        *uint32                                   `protobuf:"varint,4,opt,name=audit_data" json:"audit_data,omitempty"`
	XXX_unrecognized []byte                                    `json:"-"`
}

func (m *CMsgGCToGCGrantAccountRolledItems) Reset()         { *m = CMsgGCToGCGrantAccountRolledItems{} }
func (m *CMsgGCToGCGrantAccountRolledItems) String() string { return proto.CompactTextString(m) }
func (*CMsgGCToGCGrantAccountRolledItems) ProtoMessage()    {}
func (*CMsgGCToGCGrantAccountRolledItems) Descriptor() ([]byte, []int) {
	return fileDescriptor4, []int{29}
}

func (m *CMsgGCToGCGrantAccountRolledItems) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *CMsgGCToGCGrantAccountRolledItems) GetItems() []*CMsgGCToGCGrantAccountRolledItems_Item {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *CMsgGCToGCGrantAccountRolledItems) GetAuditAction() uint32 {
	if m != nil && m.AuditAction != nil {
		return *m.AuditAction
	}
	return 0
}

func (m *CMsgGCToGCGrantAccountRolledItems) GetAuditData() uint32 {
	if m != nil && m.AuditData != nil {
		return *m.AuditData
	}
	return 0
}

type CMsgGCToGCGrantAccountRolledItems_Item struct {
	ItemDef                *uint32                                                        `protobuf:"varint,1,opt,name=item_def" json:"item_def,omitempty"`
	LootLists              []string                                                       `protobuf:"bytes,2,rep,name=loot_lists" json:"loot_lists,omitempty"`
	IgnoreLimit            *bool                                                          `protobuf:"varint,3,opt,name=ignore_limit" json:"ignore_limit,omitempty"`
	Origin                 *uint32                                                        `protobuf:"varint,4,opt,name=origin" json:"origin,omitempty"`
	DynamicAttributes      []*CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute     `protobuf:"bytes,5,rep,name=dynamic_attributes" json:"dynamic_attributes,omitempty"`
	AdditionalAuditEntries []*CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry `protobuf:"bytes,6,rep,name=additional_audit_entries" json:"additional_audit_entries,omitempty"`
	InventoryToken         *uint32                                                        `protobuf:"varint,7,opt,name=inventory_token" json:"inventory_token,omitempty"`
	XXX_unrecognized       []byte                                                         `json:"-"`
}

func (m *CMsgGCToGCGrantAccountRolledItems_Item) Reset() {
	*m = CMsgGCToGCGrantAccountRolledItems_Item{}
}
func (m *CMsgGCToGCGrantAccountRolledItems_Item) String() string { return proto.CompactTextString(m) }
func (*CMsgGCToGCGrantAccountRolledItems_Item) ProtoMessage()    {}
func (*CMsgGCToGCGrantAccountRolledItems_Item) Descriptor() ([]byte, []int) {
	return fileDescriptor4, []int{29, 0}
}

func (m *CMsgGCToGCGrantAccountRolledItems_Item) GetItemDef() uint32 {
	if m != nil && m.ItemDef != nil {
		return *m.ItemDef
	}
	return 0
}

func (m *CMsgGCToGCGrantAccountRolledItems_Item) GetLootLists() []string {
	if m != nil {
		return m.LootLists
	}
	return nil
}

func (m *CMsgGCToGCGrantAccountRolledItems_Item) GetIgnoreLimit() bool {
	if m != nil && m.IgnoreLimit != nil {
		return *m.IgnoreLimit
	}
	return false
}

func (m *CMsgGCToGCGrantAccountRolledItems_Item) GetOrigin() uint32 {
	if m != nil && m.Origin != nil {
		return *m.Origin
	}
	return 0
}

func (m *CMsgGCToGCGrantAccountRolledItems_Item) GetDynamicAttributes() []*CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute {
	if m != nil {
		return m.DynamicAttributes
	}
	return nil
}

func (m *CMsgGCToGCGrantAccountRolledItems_Item) GetAdditionalAuditEntries() []*CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry {
	if m != nil {
		return m.AdditionalAuditEntries
	}
	return nil
}

func (m *CMsgGCToGCGrantAccountRolledItems_Item) GetInventoryToken() uint32 {
	if m != nil && m.InventoryToken != nil {
		return *m.InventoryToken
	}
	return 0
}

type CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute struct {
	Name             *string  `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	ValueUint32      *uint32  `protobuf:"varint,2,opt,name=value_uint32" json:"value_uint32,omitempty"`
	ValueFloat       *float32 `protobuf:"fixed32,3,opt,name=value_float" json:"value_float,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute) Reset() {
	*m = CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute{}
}
func (m *CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute) ProtoMessage() {}
func (*CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute) Descriptor() ([]byte, []int) {
	return fileDescriptor4, []int{29, 0, 0}
}

func (m *CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute) GetValueUint32() uint32 {
	if m != nil && m.ValueUint32 != nil {
		return *m.ValueUint32
	}
	return 0
}

func (m *CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute) GetValueFloat() float32 {
	if m != nil && m.ValueFloat != nil {
		return *m.ValueFloat
	}
	return 0
}

type CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry struct {
	OwnerAccountId   *uint32 `protobuf:"varint,1,opt,name=owner_account_id" json:"owner_account_id,omitempty"`
	AuditAction      *uint32 `protobuf:"varint,2,opt,name=audit_action" json:"audit_action,omitempty"`
	AuditData        *uint32 `protobuf:"varint,3,opt,name=audit_data" json:"audit_data,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry) Reset() {
	*m = CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry{}
}
func (m *CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry) ProtoMessage() {}
func (*CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor4, []int{29, 0, 1}
}

func (m *CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry) GetOwnerAccountId() uint32 {
	if m != nil && m.OwnerAccountId != nil {
		return *m.OwnerAccountId
	}
	return 0
}

func (m *CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry) GetAuditAction() uint32 {
	if m != nil && m.AuditAction != nil {
		return *m.AuditAction
	}
	return 0
}

func (m *CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry) GetAuditData() uint32 {
	if m != nil && m.AuditData != nil {
		return *m.AuditData
	}
	return 0
}

type CMsgGCToGCGrantSelfMadeItemToAccount struct {
	ItemDefIndex     *uint32 `protobuf:"varint,1,opt,name=item_def_index" json:"item_def_index,omitempty"`
	Accountid        *uint32 `protobuf:"varint,2,opt,name=accountid" json:"accountid,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgGCToGCGrantSelfMadeItemToAccount) Reset()         { *m = CMsgGCToGCGrantSelfMadeItemToAccount{} }
func (m *CMsgGCToGCGrantSelfMadeItemToAccount) String() string { return proto.CompactTextString(m) }
func (*CMsgGCToGCGrantSelfMadeItemToAccount) ProtoMessage()    {}
func (*CMsgGCToGCGrantSelfMadeItemToAccount) Descriptor() ([]byte, []int) {
	return fileDescriptor4, []int{30}
}

func (m *CMsgGCToGCGrantSelfMadeItemToAccount) GetItemDefIndex() uint32 {
	if m != nil && m.ItemDefIndex != nil {
		return *m.ItemDefIndex
	}
	return 0
}

func (m *CMsgGCToGCGrantSelfMadeItemToAccount) GetAccountid() uint32 {
	if m != nil && m.Accountid != nil {
		return *m.Accountid
	}
	return 0
}

type CMsgUseItem struct {
	ItemId                  *uint64  `protobuf:"varint,1,opt,name=item_id" json:"item_id,omitempty"`
	TargetSteamId           *uint64  `protobuf:"fixed64,2,opt,name=target_steam_id" json:"target_steam_id,omitempty"`
	Gift_PotentialTargets   []uint32 `protobuf:"varint,3,rep,name=gift__potential_targets" json:"gift__potential_targets,omitempty"`
	Duel_ClassLock          *uint32  `protobuf:"varint,4,opt,name=duel__class_lock" json:"duel__class_lock,omitempty"`
	InitiatorSteamId        *uint64  `protobuf:"varint,5,opt,name=initiator_steam_id" json:"initiator_steam_id,omitempty"`
	Itempack_AckImmediately *bool    `protobuf:"varint,6,opt,name=itempack__ack_immediately" json:"itempack__ack_immediately,omitempty"`
	XXX_unrecognized        []byte   `json:"-"`
}

func (m *CMsgUseItem) Reset()                    { *m = CMsgUseItem{} }
func (m *CMsgUseItem) String() string            { return proto.CompactTextString(m) }
func (*CMsgUseItem) ProtoMessage()               {}
func (*CMsgUseItem) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{31} }

func (m *CMsgUseItem) GetItemId() uint64 {
	if m != nil && m.ItemId != nil {
		return *m.ItemId
	}
	return 0
}

func (m *CMsgUseItem) GetTargetSteamId() uint64 {
	if m != nil && m.TargetSteamId != nil {
		return *m.TargetSteamId
	}
	return 0
}

func (m *CMsgUseItem) GetGift_PotentialTargets() []uint32 {
	if m != nil {
		return m.Gift_PotentialTargets
	}
	return nil
}

func (m *CMsgUseItem) GetDuel_ClassLock() uint32 {
	if m != nil && m.Duel_ClassLock != nil {
		return *m.Duel_ClassLock
	}
	return 0
}

func (m *CMsgUseItem) GetInitiatorSteamId() uint64 {
	if m != nil && m.InitiatorSteamId != nil {
		return *m.InitiatorSteamId
	}
	return 0
}

func (m *CMsgUseItem) GetItempack_AckImmediately() bool {
	if m != nil && m.Itempack_AckImmediately != nil {
		return *m.Itempack_AckImmediately
	}
	return false
}

type CMsgServerUseItem struct {
	InitiatorAccountId *uint32      `protobuf:"varint,1,opt,name=initiator_account_id" json:"initiator_account_id,omitempty"`
	UseItemMsg         *CMsgUseItem `protobuf:"bytes,2,opt,name=use_item_msg" json:"use_item_msg,omitempty"`
	XXX_unrecognized   []byte       `json:"-"`
}

func (m *CMsgServerUseItem) Reset()                    { *m = CMsgServerUseItem{} }
func (m *CMsgServerUseItem) String() string            { return proto.CompactTextString(m) }
func (*CMsgServerUseItem) ProtoMessage()               {}
func (*CMsgServerUseItem) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{32} }

func (m *CMsgServerUseItem) GetInitiatorAccountId() uint32 {
	if m != nil && m.InitiatorAccountId != nil {
		return *m.InitiatorAccountId
	}
	return 0
}

func (m *CMsgServerUseItem) GetUseItemMsg() *CMsgUseItem {
	if m != nil {
		return m.UseItemMsg
	}
	return nil
}

type CMsgGCPartnerBalanceRequest struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMsgGCPartnerBalanceRequest) Reset()                    { *m = CMsgGCPartnerBalanceRequest{} }
func (m *CMsgGCPartnerBalanceRequest) String() string            { return proto.CompactTextString(m) }
func (*CMsgGCPartnerBalanceRequest) ProtoMessage()               {}
func (*CMsgGCPartnerBalanceRequest) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{33} }

type CMsgGCPartnerBalanceResponse struct {
	Result           *EGCPartnerRequestResponse `protobuf:"varint,1,opt,name=result,enum=EGCPartnerRequestResponse,def=1" json:"result,omitempty"`
	Balance          *uint32                    `protobuf:"varint,2,opt,name=balance" json:"balance,omitempty"`
	XXX_unrecognized []byte                     `json:"-"`
}

func (m *CMsgGCPartnerBalanceResponse) Reset()                    { *m = CMsgGCPartnerBalanceResponse{} }
func (m *CMsgGCPartnerBalanceResponse) String() string            { return proto.CompactTextString(m) }
func (*CMsgGCPartnerBalanceResponse) ProtoMessage()               {}
func (*CMsgGCPartnerBalanceResponse) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{34} }

const Default_CMsgGCPartnerBalanceResponse_Result EGCPartnerRequestResponse = EGCPartnerRequestResponse_k_EPartnerRequestOK

func (m *CMsgGCPartnerBalanceResponse) GetResult() EGCPartnerRequestResponse {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return Default_CMsgGCPartnerBalanceResponse_Result
}

func (m *CMsgGCPartnerBalanceResponse) GetBalance() uint32 {
	if m != nil && m.Balance != nil {
		return *m.Balance
	}
	return 0
}

type CMsgGCPartnerRechargeRedirectURLRequest struct {
	DefIndex         *uint32 `protobuf:"varint,1,opt,name=def_index" json:"def_index,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgGCPartnerRechargeRedirectURLRequest) Reset() {
	*m = CMsgGCPartnerRechargeRedirectURLRequest{}
}
func (m *CMsgGCPartnerRechargeRedirectURLRequest) String() string { return proto.CompactTextString(m) }
func (*CMsgGCPartnerRechargeRedirectURLRequest) ProtoMessage()    {}
func (*CMsgGCPartnerRechargeRedirectURLRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor4, []int{35}
}

func (m *CMsgGCPartnerRechargeRedirectURLRequest) GetDefIndex() uint32 {
	if m != nil && m.DefIndex != nil {
		return *m.DefIndex
	}
	return 0
}

type CMsgGCPartnerRechargeRedirectURLResponse struct {
	Result           *EGCPartnerRequestResponse `protobuf:"varint,1,opt,name=result,enum=EGCPartnerRequestResponse,def=1" json:"result,omitempty"`
	Url              *string                    `protobuf:"bytes,2,opt,name=url" json:"url,omitempty"`
	XXX_unrecognized []byte                     `json:"-"`
}

func (m *CMsgGCPartnerRechargeRedirectURLResponse) Reset() {
	*m = CMsgGCPartnerRechargeRedirectURLResponse{}
}
func (m *CMsgGCPartnerRechargeRedirectURLResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgGCPartnerRechargeRedirectURLResponse) ProtoMessage()    {}
func (*CMsgGCPartnerRechargeRedirectURLResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor4, []int{36}
}

const Default_CMsgGCPartnerRechargeRedirectURLResponse_Result EGCPartnerRequestResponse = EGCPartnerRequestResponse_k_EPartnerRequestOK

func (m *CMsgGCPartnerRechargeRedirectURLResponse) GetResult() EGCPartnerRequestResponse {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return Default_CMsgGCPartnerRechargeRedirectURLResponse_Result
}

func (m *CMsgGCPartnerRechargeRedirectURLResponse) GetUrl() string {
	if m != nil && m.Url != nil {
		return *m.Url
	}
	return ""
}

type CMsgGCEconSQLWorkItemEmbeddedRollbackData struct {
	AccountId        *uint32 `protobuf:"varint,1,opt,name=account_id" json:"account_id,omitempty"`
	DeletedItemId    *uint64 `protobuf:"varint,2,opt,name=deleted_item_id" json:"deleted_item_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgGCEconSQLWorkItemEmbeddedRollbackData) Reset() {
	*m = CMsgGCEconSQLWorkItemEmbeddedRollbackData{}
}
func (m *CMsgGCEconSQLWorkItemEmbeddedRollbackData) String() string { return proto.CompactTextString(m) }
func (*CMsgGCEconSQLWorkItemEmbeddedRollbackData) ProtoMessage()    {}
func (*CMsgGCEconSQLWorkItemEmbeddedRollbackData) Descriptor() ([]byte, []int) {
	return fileDescriptor4, []int{37}
}

func (m *CMsgGCEconSQLWorkItemEmbeddedRollbackData) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *CMsgGCEconSQLWorkItemEmbeddedRollbackData) GetDeletedItemId() uint64 {
	if m != nil && m.DeletedItemId != nil {
		return *m.DeletedItemId
	}
	return 0
}

type CMsgCraftStatue struct {
	Heroid           *uint32  `protobuf:"varint,1,opt,name=heroid" json:"heroid,omitempty"`
	Sequencename     *string  `protobuf:"bytes,2,opt,name=sequencename" json:"sequencename,omitempty"`
	Cycle            *float32 `protobuf:"fixed32,3,opt,name=cycle" json:"cycle,omitempty"`
	Description      *string  `protobuf:"bytes,4,opt,name=description" json:"description,omitempty"`
	PedestalItemdef  *uint32  `protobuf:"varint,5,opt,name=pedestal_itemdef" json:"pedestal_itemdef,omitempty"`
	Toolid           *uint64  `protobuf:"varint,6,opt,name=toolid" json:"toolid,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CMsgCraftStatue) Reset()                    { *m = CMsgCraftStatue{} }
func (m *CMsgCraftStatue) String() string            { return proto.CompactTextString(m) }
func (*CMsgCraftStatue) ProtoMessage()               {}
func (*CMsgCraftStatue) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{38} }

func (m *CMsgCraftStatue) GetHeroid() uint32 {
	if m != nil && m.Heroid != nil {
		return *m.Heroid
	}
	return 0
}

func (m *CMsgCraftStatue) GetSequencename() string {
	if m != nil && m.Sequencename != nil {
		return *m.Sequencename
	}
	return ""
}

func (m *CMsgCraftStatue) GetCycle() float32 {
	if m != nil && m.Cycle != nil {
		return *m.Cycle
	}
	return 0
}

func (m *CMsgCraftStatue) GetDescription() string {
	if m != nil && m.Description != nil {
		return *m.Description
	}
	return ""
}

func (m *CMsgCraftStatue) GetPedestalItemdef() uint32 {
	if m != nil && m.PedestalItemdef != nil {
		return *m.PedestalItemdef
	}
	return 0
}

func (m *CMsgCraftStatue) GetToolid() uint64 {
	if m != nil && m.Toolid != nil {
		return *m.Toolid
	}
	return 0
}

type CMsgRedeemCode struct {
	Code             *string `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgRedeemCode) Reset()                    { *m = CMsgRedeemCode{} }
func (m *CMsgRedeemCode) String() string            { return proto.CompactTextString(m) }
func (*CMsgRedeemCode) ProtoMessage()               {}
func (*CMsgRedeemCode) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{39} }

func (m *CMsgRedeemCode) GetCode() string {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return ""
}

type CMsgRedeemCodeResponse struct {
	Response         *uint32 `protobuf:"varint,1,opt,name=response" json:"response,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgRedeemCodeResponse) Reset()                    { *m = CMsgRedeemCodeResponse{} }
func (m *CMsgRedeemCodeResponse) String() string            { return proto.CompactTextString(m) }
func (*CMsgRedeemCodeResponse) ProtoMessage()               {}
func (*CMsgRedeemCodeResponse) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{40} }

func (m *CMsgRedeemCodeResponse) GetResponse() uint32 {
	if m != nil && m.Response != nil {
		return *m.Response
	}
	return 0
}

type CMsgDevNewItemRequest struct {
	ItemDefName      *string  `protobuf:"bytes,3,opt,name=item_def_name" json:"item_def_name,omitempty"`
	LootListName     *string  `protobuf:"bytes,4,opt,name=loot_list_name" json:"loot_list_name,omitempty"`
	AttrDefName      []string `protobuf:"bytes,5,rep,name=attr_def_name" json:"attr_def_name,omitempty"`
	AttrValue        []string `protobuf:"bytes,6,rep,name=attr_value" json:"attr_value,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CMsgDevNewItemRequest) Reset()                    { *m = CMsgDevNewItemRequest{} }
func (m *CMsgDevNewItemRequest) String() string            { return proto.CompactTextString(m) }
func (*CMsgDevNewItemRequest) ProtoMessage()               {}
func (*CMsgDevNewItemRequest) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{41} }

func (m *CMsgDevNewItemRequest) GetItemDefName() string {
	if m != nil && m.ItemDefName != nil {
		return *m.ItemDefName
	}
	return ""
}

func (m *CMsgDevNewItemRequest) GetLootListName() string {
	if m != nil && m.LootListName != nil {
		return *m.LootListName
	}
	return ""
}

func (m *CMsgDevNewItemRequest) GetAttrDefName() []string {
	if m != nil {
		return m.AttrDefName
	}
	return nil
}

func (m *CMsgDevNewItemRequest) GetAttrValue() []string {
	if m != nil {
		return m.AttrValue
	}
	return nil
}

type CMsgDevNewItemRequestResponse struct {
	Success          *bool  `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMsgDevNewItemRequestResponse) Reset()                    { *m = CMsgDevNewItemRequestResponse{} }
func (m *CMsgDevNewItemRequestResponse) String() string            { return proto.CompactTextString(m) }
func (*CMsgDevNewItemRequestResponse) ProtoMessage()               {}
func (*CMsgDevNewItemRequestResponse) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{42} }

func (m *CMsgDevNewItemRequestResponse) GetSuccess() bool {
	if m != nil && m.Success != nil {
		return *m.Success
	}
	return false
}

type CMsgGCAddGiftItem struct {
	AccountId        *uint32 `protobuf:"varint,1,opt,name=account_id" json:"account_id,omitempty"`
	ItemId           *uint64 `protobuf:"varint,2,opt,name=item_id" json:"item_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgGCAddGiftItem) Reset()                    { *m = CMsgGCAddGiftItem{} }
func (m *CMsgGCAddGiftItem) String() string            { return proto.CompactTextString(m) }
func (*CMsgGCAddGiftItem) ProtoMessage()               {}
func (*CMsgGCAddGiftItem) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{43} }

func (m *CMsgGCAddGiftItem) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *CMsgGCAddGiftItem) GetItemId() uint64 {
	if m != nil && m.ItemId != nil {
		return *m.ItemId
	}
	return 0
}

type CMsgClientToGCWrapAndDeliverGift struct {
	ItemId           *uint64 `protobuf:"varint,1,opt,name=item_id" json:"item_id,omitempty"`
	GiveToAccountId  *uint32 `protobuf:"varint,2,opt,name=give_to_account_id" json:"give_to_account_id,omitempty"`
	GiftMessage      *string `protobuf:"bytes,3,opt,name=gift_message" json:"gift_message,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgClientToGCWrapAndDeliverGift) Reset()         { *m = CMsgClientToGCWrapAndDeliverGift{} }
func (m *CMsgClientToGCWrapAndDeliverGift) String() string { return proto.CompactTextString(m) }
func (*CMsgClientToGCWrapAndDeliverGift) ProtoMessage()    {}
func (*CMsgClientToGCWrapAndDeliverGift) Descriptor() ([]byte, []int) {
	return fileDescriptor4, []int{44}
}

func (m *CMsgClientToGCWrapAndDeliverGift) GetItemId() uint64 {
	if m != nil && m.ItemId != nil {
		return *m.ItemId
	}
	return 0
}

func (m *CMsgClientToGCWrapAndDeliverGift) GetGiveToAccountId() uint32 {
	if m != nil && m.GiveToAccountId != nil {
		return *m.GiveToAccountId
	}
	return 0
}

func (m *CMsgClientToGCWrapAndDeliverGift) GetGiftMessage() string {
	if m != nil && m.GiftMessage != nil {
		return *m.GiftMessage
	}
	return ""
}

type CMsgClientToGCWrapAndDeliverGiftResponse struct {
	Response           *EGCMsgResponse              `protobuf:"varint,1,opt,name=response,enum=EGCMsgResponse,def=0" json:"response,omitempty"`
	GiftingChargeUses  *uint32                      `protobuf:"varint,2,opt,name=gifting_charge_uses" json:"gifting_charge_uses,omitempty"`
	GiftingChargeMax   *int32                       `protobuf:"varint,3,opt,name=gifting_charge_max" json:"gifting_charge_max,omitempty"`
	GiftingUses        *uint32                      `protobuf:"varint,4,opt,name=gifting_uses" json:"gifting_uses,omitempty"`
	GiftingMax         *int32                       `protobuf:"varint,5,opt,name=gifting_max" json:"gifting_max,omitempty"`
	GiftingWindowHours *uint32                      `protobuf:"varint,6,opt,name=gifting_window_hours" json:"gifting_window_hours,omitempty"`
	TradeRestriction   *EGCMsgInitiateTradeResponse `protobuf:"varint,7,opt,name=trade_restriction,enum=EGCMsgInitiateTradeResponse,def=0" json:"trade_restriction,omitempty"`
	XXX_unrecognized   []byte                       `json:"-"`
}

func (m *CMsgClientToGCWrapAndDeliverGiftResponse) Reset() {
	*m = CMsgClientToGCWrapAndDeliverGiftResponse{}
}
func (m *CMsgClientToGCWrapAndDeliverGiftResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgClientToGCWrapAndDeliverGiftResponse) ProtoMessage()    {}
func (*CMsgClientToGCWrapAndDeliverGiftResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor4, []int{45}
}

const Default_CMsgClientToGCWrapAndDeliverGiftResponse_Response EGCMsgResponse = EGCMsgResponse_k_EGCMsgResponseOK
const Default_CMsgClientToGCWrapAndDeliverGiftResponse_TradeRestriction EGCMsgInitiateTradeResponse = EGCMsgInitiateTradeResponse_k_EGCMsgInitiateTradeResponse_Accepted

func (m *CMsgClientToGCWrapAndDeliverGiftResponse) GetResponse() EGCMsgResponse {
	if m != nil && m.Response != nil {
		return *m.Response
	}
	return Default_CMsgClientToGCWrapAndDeliverGiftResponse_Response
}

func (m *CMsgClientToGCWrapAndDeliverGiftResponse) GetGiftingChargeUses() uint32 {
	if m != nil && m.GiftingChargeUses != nil {
		return *m.GiftingChargeUses
	}
	return 0
}

func (m *CMsgClientToGCWrapAndDeliverGiftResponse) GetGiftingChargeMax() int32 {
	if m != nil && m.GiftingChargeMax != nil {
		return *m.GiftingChargeMax
	}
	return 0
}

func (m *CMsgClientToGCWrapAndDeliverGiftResponse) GetGiftingUses() uint32 {
	if m != nil && m.GiftingUses != nil {
		return *m.GiftingUses
	}
	return 0
}

func (m *CMsgClientToGCWrapAndDeliverGiftResponse) GetGiftingMax() int32 {
	if m != nil && m.GiftingMax != nil {
		return *m.GiftingMax
	}
	return 0
}

func (m *CMsgClientToGCWrapAndDeliverGiftResponse) GetGiftingWindowHours() uint32 {
	if m != nil && m.GiftingWindowHours != nil {
		return *m.GiftingWindowHours
	}
	return 0
}

func (m *CMsgClientToGCWrapAndDeliverGiftResponse) GetTradeRestriction() EGCMsgInitiateTradeResponse {
	if m != nil && m.TradeRestriction != nil {
		return *m.TradeRestriction
	}
	return Default_CMsgClientToGCWrapAndDeliverGiftResponse_TradeRestriction
}

type CMsgClientToGCUnwrapGift struct {
	ItemId           *uint64 `protobuf:"varint,1,opt,name=item_id" json:"item_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgClientToGCUnwrapGift) Reset()                    { *m = CMsgClientToGCUnwrapGift{} }
func (m *CMsgClientToGCUnwrapGift) String() string            { return proto.CompactTextString(m) }
func (*CMsgClientToGCUnwrapGift) ProtoMessage()               {}
func (*CMsgClientToGCUnwrapGift) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{46} }

func (m *CMsgClientToGCUnwrapGift) GetItemId() uint64 {
	if m != nil && m.ItemId != nil {
		return *m.ItemId
	}
	return 0
}

type CMsgClientToGCUnpackBundle struct {
	ItemId           *uint64 `protobuf:"varint,1,opt,name=item_id" json:"item_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgClientToGCUnpackBundle) Reset()                    { *m = CMsgClientToGCUnpackBundle{} }
func (m *CMsgClientToGCUnpackBundle) String() string            { return proto.CompactTextString(m) }
func (*CMsgClientToGCUnpackBundle) ProtoMessage()               {}
func (*CMsgClientToGCUnpackBundle) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{47} }

func (m *CMsgClientToGCUnpackBundle) GetItemId() uint64 {
	if m != nil && m.ItemId != nil {
		return *m.ItemId
	}
	return 0
}

type CMsgClientToGCUnpackBundleResponse struct {
	UnpackedItemIds  []uint64                                          `protobuf:"varint,1,rep,name=unpacked_item_ids" json:"unpacked_item_ids,omitempty"`
	Response         *CMsgClientToGCUnpackBundleResponse_EUnpackBundle `protobuf:"varint,2,opt,name=response,enum=CMsgClientToGCUnpackBundleResponse_EUnpackBundle,def=0" json:"response,omitempty"`
	XXX_unrecognized []byte                                            `json:"-"`
}

func (m *CMsgClientToGCUnpackBundleResponse) Reset()         { *m = CMsgClientToGCUnpackBundleResponse{} }
func (m *CMsgClientToGCUnpackBundleResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgClientToGCUnpackBundleResponse) ProtoMessage()    {}
func (*CMsgClientToGCUnpackBundleResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor4, []int{48}
}

const Default_CMsgClientToGCUnpackBundleResponse_Response CMsgClientToGCUnpackBundleResponse_EUnpackBundle = CMsgClientToGCUnpackBundleResponse_k_UnpackBundle_Succeeded

func (m *CMsgClientToGCUnpackBundleResponse) GetUnpackedItemIds() []uint64 {
	if m != nil {
		return m.UnpackedItemIds
	}
	return nil
}

func (m *CMsgClientToGCUnpackBundleResponse) GetResponse() CMsgClientToGCUnpackBundleResponse_EUnpackBundle {
	if m != nil && m.Response != nil {
		return *m.Response
	}
	return Default_CMsgClientToGCUnpackBundleResponse_Response
}

type CMsgGCToClientStoreTransactionCompleted struct {
	TxnId            *uint64  `protobuf:"varint,1,opt,name=txn_id" json:"txn_id,omitempty"`
	ItemIds          []uint64 `protobuf:"varint,2,rep,name=item_ids" json:"item_ids,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CMsgGCToClientStoreTransactionCompleted) Reset() {
	*m = CMsgGCToClientStoreTransactionCompleted{}
}
func (m *CMsgGCToClientStoreTransactionCompleted) String() string { return proto.CompactTextString(m) }
func (*CMsgGCToClientStoreTransactionCompleted) ProtoMessage()    {}
func (*CMsgGCToClientStoreTransactionCompleted) Descriptor() ([]byte, []int) {
	return fileDescriptor4, []int{49}
}

func (m *CMsgGCToClientStoreTransactionCompleted) GetTxnId() uint64 {
	if m != nil && m.TxnId != nil {
		return *m.TxnId
	}
	return 0
}

func (m *CMsgGCToClientStoreTransactionCompleted) GetItemIds() []uint64 {
	if m != nil {
		return m.ItemIds
	}
	return nil
}

type CMsgClientToGCEquipItems struct {
	Equips           []*CMsgAdjustItemEquippedState `protobuf:"bytes,1,rep,name=equips" json:"equips,omitempty"`
	XXX_unrecognized []byte                         `json:"-"`
}

func (m *CMsgClientToGCEquipItems) Reset()                    { *m = CMsgClientToGCEquipItems{} }
func (m *CMsgClientToGCEquipItems) String() string            { return proto.CompactTextString(m) }
func (*CMsgClientToGCEquipItems) ProtoMessage()               {}
func (*CMsgClientToGCEquipItems) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{50} }

func (m *CMsgClientToGCEquipItems) GetEquips() []*CMsgAdjustItemEquippedState {
	if m != nil {
		return m.Equips
	}
	return nil
}

type CMsgClientToGCEquipItemsResponse struct {
	SoCacheVersionId *uint64 `protobuf:"fixed64,1,opt,name=so_cache_version_id" json:"so_cache_version_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgClientToGCEquipItemsResponse) Reset()         { *m = CMsgClientToGCEquipItemsResponse{} }
func (m *CMsgClientToGCEquipItemsResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgClientToGCEquipItemsResponse) ProtoMessage()    {}
func (*CMsgClientToGCEquipItemsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor4, []int{51}
}

func (m *CMsgClientToGCEquipItemsResponse) GetSoCacheVersionId() uint64 {
	if m != nil && m.SoCacheVersionId != nil {
		return *m.SoCacheVersionId
	}
	return 0
}

type CMsgClientToGCUnlockItemStyle struct {
	ItemToUnlock      *uint64  `protobuf:"varint,1,opt,name=item_to_unlock" json:"item_to_unlock,omitempty"`
	StyleIndex        *uint32  `protobuf:"varint,2,opt,name=style_index" json:"style_index,omitempty"`
	ConsumableItemIds []uint64 `protobuf:"varint,3,rep,name=consumable_item_ids" json:"consumable_item_ids,omitempty"`
	XXX_unrecognized  []byte   `json:"-"`
}

func (m *CMsgClientToGCUnlockItemStyle) Reset()                    { *m = CMsgClientToGCUnlockItemStyle{} }
func (m *CMsgClientToGCUnlockItemStyle) String() string            { return proto.CompactTextString(m) }
func (*CMsgClientToGCUnlockItemStyle) ProtoMessage()               {}
func (*CMsgClientToGCUnlockItemStyle) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{52} }

func (m *CMsgClientToGCUnlockItemStyle) GetItemToUnlock() uint64 {
	if m != nil && m.ItemToUnlock != nil {
		return *m.ItemToUnlock
	}
	return 0
}

func (m *CMsgClientToGCUnlockItemStyle) GetStyleIndex() uint32 {
	if m != nil && m.StyleIndex != nil {
		return *m.StyleIndex
	}
	return 0
}

func (m *CMsgClientToGCUnlockItemStyle) GetConsumableItemIds() []uint64 {
	if m != nil {
		return m.ConsumableItemIds
	}
	return nil
}

type CMsgClientToGCUnlockItemStyleResponse struct {
	Response         *CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle `protobuf:"varint,1,opt,name=response,enum=CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle,def=0" json:"response,omitempty"`
	ItemId           *uint64                                             `protobuf:"varint,2,opt,name=item_id" json:"item_id,omitempty"`
	StyleIndex       *uint32                                             `protobuf:"varint,3,opt,name=style_index" json:"style_index,omitempty"`
	StylePrereq      *uint32                                             `protobuf:"varint,4,opt,name=style_prereq" json:"style_prereq,omitempty"`
	XXX_unrecognized []byte                                              `json:"-"`
}

func (m *CMsgClientToGCUnlockItemStyleResponse) Reset()         { *m = CMsgClientToGCUnlockItemStyleResponse{} }
func (m *CMsgClientToGCUnlockItemStyleResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgClientToGCUnlockItemStyleResponse) ProtoMessage()    {}
func (*CMsgClientToGCUnlockItemStyleResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor4, []int{53}
}

const Default_CMsgClientToGCUnlockItemStyleResponse_Response CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle = CMsgClientToGCUnlockItemStyleResponse_k_UnlockStyle_Succeeded

func (m *CMsgClientToGCUnlockItemStyleResponse) GetResponse() CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle {
	if m != nil && m.Response != nil {
		return *m.Response
	}
	return Default_CMsgClientToGCUnlockItemStyleResponse_Response
}

func (m *CMsgClientToGCUnlockItemStyleResponse) GetItemId() uint64 {
	if m != nil && m.ItemId != nil {
		return *m.ItemId
	}
	return 0
}

func (m *CMsgClientToGCUnlockItemStyleResponse) GetStyleIndex() uint32 {
	if m != nil && m.StyleIndex != nil {
		return *m.StyleIndex
	}
	return 0
}

func (m *CMsgClientToGCUnlockItemStyleResponse) GetStylePrereq() uint32 {
	if m != nil && m.StylePrereq != nil {
		return *m.StylePrereq
	}
	return 0
}

type CMsgClientToGCSetItemInventoryCategory struct {
	ItemIds          []uint64 `protobuf:"varint,1,rep,name=item_ids" json:"item_ids,omitempty"`
	SetToValue       *uint32  `protobuf:"varint,2,opt,name=set_to_value" json:"set_to_value,omitempty"`
	RemoveCategories *uint32  `protobuf:"varint,3,opt,name=remove_categories" json:"remove_categories,omitempty"`
	AddCategories    *uint32  `protobuf:"varint,4,opt,name=add_categories" json:"add_categories,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CMsgClientToGCSetItemInventoryCategory) Reset() {
	*m = CMsgClientToGCSetItemInventoryCategory{}
}
func (m *CMsgClientToGCSetItemInventoryCategory) String() string { return proto.CompactTextString(m) }
func (*CMsgClientToGCSetItemInventoryCategory) ProtoMessage()    {}
func (*CMsgClientToGCSetItemInventoryCategory) Descriptor() ([]byte, []int) {
	return fileDescriptor4, []int{54}
}

func (m *CMsgClientToGCSetItemInventoryCategory) GetItemIds() []uint64 {
	if m != nil {
		return m.ItemIds
	}
	return nil
}

func (m *CMsgClientToGCSetItemInventoryCategory) GetSetToValue() uint32 {
	if m != nil && m.SetToValue != nil {
		return *m.SetToValue
	}
	return 0
}

func (m *CMsgClientToGCSetItemInventoryCategory) GetRemoveCategories() uint32 {
	if m != nil && m.RemoveCategories != nil {
		return *m.RemoveCategories
	}
	return 0
}

func (m *CMsgClientToGCSetItemInventoryCategory) GetAddCategories() uint32 {
	if m != nil && m.AddCategories != nil {
		return *m.AddCategories
	}
	return 0
}

type CMsgClientToGCUnlockCrate struct {
	CrateItemId      *uint64 `protobuf:"varint,1,opt,name=crate_item_id" json:"crate_item_id,omitempty"`
	KeyItemId        *uint64 `protobuf:"varint,2,opt,name=key_item_id" json:"key_item_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgClientToGCUnlockCrate) Reset()                    { *m = CMsgClientToGCUnlockCrate{} }
func (m *CMsgClientToGCUnlockCrate) String() string            { return proto.CompactTextString(m) }
func (*CMsgClientToGCUnlockCrate) ProtoMessage()               {}
func (*CMsgClientToGCUnlockCrate) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{55} }

func (m *CMsgClientToGCUnlockCrate) GetCrateItemId() uint64 {
	if m != nil && m.CrateItemId != nil {
		return *m.CrateItemId
	}
	return 0
}

func (m *CMsgClientToGCUnlockCrate) GetKeyItemId() uint64 {
	if m != nil && m.KeyItemId != nil {
		return *m.KeyItemId
	}
	return 0
}

type CMsgClientToGCUnlockCrateResponse struct {
	Result           *EGCMsgResponse                           `protobuf:"varint,1,opt,name=result,enum=EGCMsgResponse,def=0" json:"result,omitempty"`
	GrantedItems     []*CMsgClientToGCUnlockCrateResponse_Item `protobuf:"bytes,2,rep,name=granted_items" json:"granted_items,omitempty"`
	XXX_unrecognized []byte                                    `json:"-"`
}

func (m *CMsgClientToGCUnlockCrateResponse) Reset()         { *m = CMsgClientToGCUnlockCrateResponse{} }
func (m *CMsgClientToGCUnlockCrateResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgClientToGCUnlockCrateResponse) ProtoMessage()    {}
func (*CMsgClientToGCUnlockCrateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor4, []int{56}
}

const Default_CMsgClientToGCUnlockCrateResponse_Result EGCMsgResponse = EGCMsgResponse_k_EGCMsgResponseOK

func (m *CMsgClientToGCUnlockCrateResponse) GetResult() EGCMsgResponse {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return Default_CMsgClientToGCUnlockCrateResponse_Result
}

func (m *CMsgClientToGCUnlockCrateResponse) GetGrantedItems() []*CMsgClientToGCUnlockCrateResponse_Item {
	if m != nil {
		return m.GrantedItems
	}
	return nil
}

type CMsgClientToGCUnlockCrateResponse_Item struct {
	ItemId           *uint64 `protobuf:"varint,1,opt,name=item_id" json:"item_id,omitempty"`
	DefIndex         *uint32 `protobuf:"varint,2,opt,name=def_index" json:"def_index,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgClientToGCUnlockCrateResponse_Item) Reset() {
	*m = CMsgClientToGCUnlockCrateResponse_Item{}
}
func (m *CMsgClientToGCUnlockCrateResponse_Item) String() string { return proto.CompactTextString(m) }
func (*CMsgClientToGCUnlockCrateResponse_Item) ProtoMessage()    {}
func (*CMsgClientToGCUnlockCrateResponse_Item) Descriptor() ([]byte, []int) {
	return fileDescriptor4, []int{56, 0}
}

func (m *CMsgClientToGCUnlockCrateResponse_Item) GetItemId() uint64 {
	if m != nil && m.ItemId != nil {
		return *m.ItemId
	}
	return 0
}

func (m *CMsgClientToGCUnlockCrateResponse_Item) GetDefIndex() uint32 {
	if m != nil && m.DefIndex != nil {
		return *m.DefIndex
	}
	return 0
}

type CMsgGCRemoveItemAttributeMsg struct {
	ItemId           *uint64 `protobuf:"varint,1,opt,name=item_id" json:"item_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgGCRemoveItemAttributeMsg) Reset()                    { *m = CMsgGCRemoveItemAttributeMsg{} }
func (m *CMsgGCRemoveItemAttributeMsg) String() string            { return proto.CompactTextString(m) }
func (*CMsgGCRemoveItemAttributeMsg) ProtoMessage()               {}
func (*CMsgGCRemoveItemAttributeMsg) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{57} }

func (m *CMsgGCRemoveItemAttributeMsg) GetItemId() uint64 {
	if m != nil && m.ItemId != nil {
		return *m.ItemId
	}
	return 0
}

type CMsgGCNameItem struct {
	SubjectItemId    *uint64 `protobuf:"varint,1,opt,name=subject_item_id" json:"subject_item_id,omitempty"`
	ToolItemId       *uint64 `protobuf:"varint,2,opt,name=tool_item_id" json:"tool_item_id,omitempty"`
	Name             *string `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgGCNameItem) Reset()                    { *m = CMsgGCNameItem{} }
func (m *CMsgGCNameItem) String() string            { return proto.CompactTextString(m) }
func (*CMsgGCNameItem) ProtoMessage()               {}
func (*CMsgGCNameItem) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{58} }

func (m *CMsgGCNameItem) GetSubjectItemId() uint64 {
	if m != nil && m.SubjectItemId != nil {
		return *m.SubjectItemId
	}
	return 0
}

func (m *CMsgGCNameItem) GetToolItemId() uint64 {
	if m != nil && m.ToolItemId != nil {
		return *m.ToolItemId
	}
	return 0
}

func (m *CMsgGCNameItem) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

type CMsgGCSetItemPosition struct {
	ItemId           *uint64 `protobuf:"varint,1,opt,name=item_id" json:"item_id,omitempty"`
	NewPosition      *uint32 `protobuf:"varint,2,opt,name=new_position" json:"new_position,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgGCSetItemPosition) Reset()                    { *m = CMsgGCSetItemPosition{} }
func (m *CMsgGCSetItemPosition) String() string            { return proto.CompactTextString(m) }
func (*CMsgGCSetItemPosition) ProtoMessage()               {}
func (*CMsgGCSetItemPosition) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{59} }

func (m *CMsgGCSetItemPosition) GetItemId() uint64 {
	if m != nil && m.ItemId != nil {
		return *m.ItemId
	}
	return 0
}

func (m *CMsgGCSetItemPosition) GetNewPosition() uint32 {
	if m != nil && m.NewPosition != nil {
		return *m.NewPosition
	}
	return 0
}

func init() {
	proto.RegisterType((*CMsgApplyAutograph)(nil), "CMsgApplyAutograph")
	proto.RegisterType((*CMsgAdjustItemEquippedState)(nil), "CMsgAdjustItemEquippedState")
	proto.RegisterType((*CMsgEconPlayerStrangeCountAdjustment)(nil), "CMsgEconPlayerStrangeCountAdjustment")
	proto.RegisterType((*CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment)(nil), "CMsgEconPlayerStrangeCountAdjustment.CStrangeCountAdjustment")
	proto.RegisterType((*CMsgRequestItemPurgatory_FinalizePurchase)(nil), "CMsgRequestItemPurgatory_FinalizePurchase")
	proto.RegisterType((*CMsgRequestItemPurgatory_FinalizePurchaseResponse)(nil), "CMsgRequestItemPurgatory_FinalizePurchaseResponse")
	proto.RegisterType((*CMsgRequestItemPurgatory_RefundPurchase)(nil), "CMsgRequestItemPurgatory_RefundPurchase")
	proto.RegisterType((*CMsgRequestItemPurgatory_RefundPurchaseResponse)(nil), "CMsgRequestItemPurgatory_RefundPurchaseResponse")
	proto.RegisterType((*CMsgCraftingResponse)(nil), "CMsgCraftingResponse")
	proto.RegisterType((*CMsgGCRequestStoreSalesData)(nil), "CMsgGCRequestStoreSalesData")
	proto.RegisterType((*CMsgGCRequestStoreSalesDataResponse)(nil), "CMsgGCRequestStoreSalesDataResponse")
	proto.RegisterType((*CMsgGCRequestStoreSalesDataResponse_Price)(nil), "CMsgGCRequestStoreSalesDataResponse.Price")
	proto.RegisterType((*CMsgGCRequestStoreSalesDataUpToDateResponse)(nil), "CMsgGCRequestStoreSalesDataUpToDateResponse")
	proto.RegisterType((*CMsgGCToGCPingRequest)(nil), "CMsgGCToGCPingRequest")
	proto.RegisterType((*CMsgGCToGCPingResponse)(nil), "CMsgGCToGCPingResponse")
	proto.RegisterType((*CMsgGCToGCGetUserSessionServer)(nil), "CMsgGCToGCGetUserSessionServer")
	proto.RegisterType((*CMsgGCToGCGetUserSessionServerResponse)(nil), "CMsgGCToGCGetUserSessionServerResponse")
	proto.RegisterType((*CMsgGCToGCGetUserServerMembers)(nil), "CMsgGCToGCGetUserServerMembers")
	proto.RegisterType((*CMsgGCToGCGetUserServerMembersResponse)(nil), "CMsgGCToGCGetUserServerMembersResponse")
	proto.RegisterType((*CMsgLookupMultipleAccountNames)(nil), "CMsgLookupMultipleAccountNames")
	proto.RegisterType((*CMsgLookupMultipleAccountNamesResponse)(nil), "CMsgLookupMultipleAccountNamesResponse")
	proto.RegisterType((*CMsgLookupMultipleAccountNamesResponse_Account)(nil), "CMsgLookupMultipleAccountNamesResponse.Account")
	proto.RegisterType((*CMsgGCToGCGetUserPCBangNo)(nil), "CMsgGCToGCGetUserPCBangNo")
	proto.RegisterType((*CMsgGCToGCGetUserPCBangNoResponse)(nil), "CMsgGCToGCGetUserPCBangNoResponse")
	proto.RegisterType((*CMsgRequestCrateItems)(nil), "CMsgRequestCrateItems")
	proto.RegisterType((*CMsgRequestCrateItemsResponse)(nil), "CMsgRequestCrateItemsResponse")
	proto.RegisterType((*CMsgGCToGCCanUseDropRateBonus)(nil), "CMsgGCToGCCanUseDropRateBonus")
	proto.RegisterType((*CMsgSQLAddDropRateBonus)(nil), "CMsgSQLAddDropRateBonus")
	proto.RegisterType((*CMsgSQLUpgradeBattleBooster)(nil), "CMsgSQLUpgradeBattleBooster")
	proto.RegisterType((*CMsgGCToGCRefreshSOCache)(nil), "CMsgGCToGCRefreshSOCache")
	proto.RegisterType((*CMsgGCToGCCheckAccountTradeStatus)(nil), "CMsgGCToGCCheckAccountTradeStatus")
	proto.RegisterType((*CMsgGCToGCCheckAccountTradeStatusResponse)(nil), "CMsgGCToGCCheckAccountTradeStatusResponse")
	proto.RegisterType((*CMsgGCToGCGrantAccountRolledItems)(nil), "CMsgGCToGCGrantAccountRolledItems")
	proto.RegisterType((*CMsgGCToGCGrantAccountRolledItems_Item)(nil), "CMsgGCToGCGrantAccountRolledItems.Item")
	proto.RegisterType((*CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute)(nil), "CMsgGCToGCGrantAccountRolledItems.Item.DynamicAttribute")
	proto.RegisterType((*CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry)(nil), "CMsgGCToGCGrantAccountRolledItems.Item.AdditionalAuditEntry")
	proto.RegisterType((*CMsgGCToGCGrantSelfMadeItemToAccount)(nil), "CMsgGCToGCGrantSelfMadeItemToAccount")
	proto.RegisterType((*CMsgUseItem)(nil), "CMsgUseItem")
	proto.RegisterType((*CMsgServerUseItem)(nil), "CMsgServerUseItem")
	proto.RegisterType((*CMsgGCPartnerBalanceRequest)(nil), "CMsgGCPartnerBalanceRequest")
	proto.RegisterType((*CMsgGCPartnerBalanceResponse)(nil), "CMsgGCPartnerBalanceResponse")
	proto.RegisterType((*CMsgGCPartnerRechargeRedirectURLRequest)(nil), "CMsgGCPartnerRechargeRedirectURLRequest")
	proto.RegisterType((*CMsgGCPartnerRechargeRedirectURLResponse)(nil), "CMsgGCPartnerRechargeRedirectURLResponse")
	proto.RegisterType((*CMsgGCEconSQLWorkItemEmbeddedRollbackData)(nil), "CMsgGCEconSQLWorkItemEmbeddedRollbackData")
	proto.RegisterType((*CMsgCraftStatue)(nil), "CMsgCraftStatue")
	proto.RegisterType((*CMsgRedeemCode)(nil), "CMsgRedeemCode")
	proto.RegisterType((*CMsgRedeemCodeResponse)(nil), "CMsgRedeemCodeResponse")
	proto.RegisterType((*CMsgDevNewItemRequest)(nil), "CMsgDevNewItemRequest")
	proto.RegisterType((*CMsgDevNewItemRequestResponse)(nil), "CMsgDevNewItemRequestResponse")
	proto.RegisterType((*CMsgGCAddGiftItem)(nil), "CMsgGCAddGiftItem")
	proto.RegisterType((*CMsgClientToGCWrapAndDeliverGift)(nil), "CMsgClientToGCWrapAndDeliverGift")
	proto.RegisterType((*CMsgClientToGCWrapAndDeliverGiftResponse)(nil), "CMsgClientToGCWrapAndDeliverGiftResponse")
	proto.RegisterType((*CMsgClientToGCUnwrapGift)(nil), "CMsgClientToGCUnwrapGift")
	proto.RegisterType((*CMsgClientToGCUnpackBundle)(nil), "CMsgClientToGCUnpackBundle")
	proto.RegisterType((*CMsgClientToGCUnpackBundleResponse)(nil), "CMsgClientToGCUnpackBundleResponse")
	proto.RegisterType((*CMsgGCToClientStoreTransactionCompleted)(nil), "CMsgGCToClientStoreTransactionCompleted")
	proto.RegisterType((*CMsgClientToGCEquipItems)(nil), "CMsgClientToGCEquipItems")
	proto.RegisterType((*CMsgClientToGCEquipItemsResponse)(nil), "CMsgClientToGCEquipItemsResponse")
	proto.RegisterType((*CMsgClientToGCUnlockItemStyle)(nil), "CMsgClientToGCUnlockItemStyle")
	proto.RegisterType((*CMsgClientToGCUnlockItemStyleResponse)(nil), "CMsgClientToGCUnlockItemStyleResponse")
	proto.RegisterType((*CMsgClientToGCSetItemInventoryCategory)(nil), "CMsgClientToGCSetItemInventoryCategory")
	proto.RegisterType((*CMsgClientToGCUnlockCrate)(nil), "CMsgClientToGCUnlockCrate")
	proto.RegisterType((*CMsgClientToGCUnlockCrateResponse)(nil), "CMsgClientToGCUnlockCrateResponse")
	proto.RegisterType((*CMsgClientToGCUnlockCrateResponse_Item)(nil), "CMsgClientToGCUnlockCrateResponse.Item")
	proto.RegisterType((*CMsgGCRemoveItemAttributeMsg)(nil), "CMsgGCRemoveItemAttributeMsg")
	proto.RegisterType((*CMsgGCNameItem)(nil), "CMsgGCNameItem")
	proto.RegisterType((*CMsgGCSetItemPosition)(nil), "CMsgGCSetItemPosition")
	proto.RegisterEnum("EGCItemMsg", EGCItemMsg_name, EGCItemMsg_value)
	proto.RegisterEnum("EGCMsgResponse", EGCMsgResponse_name, EGCMsgResponse_value)
	proto.RegisterEnum("EItemPurgatoryResponse_Finalize", EItemPurgatoryResponse_Finalize_name, EItemPurgatoryResponse_Finalize_value)
	proto.RegisterEnum("EItemPurgatoryResponse_Refund", EItemPurgatoryResponse_Refund_name, EItemPurgatoryResponse_Refund_value)
	proto.RegisterEnum("EGCPartnerRequestResponse", EGCPartnerRequestResponse_name, EGCPartnerRequestResponse_value)
	proto.RegisterEnum("EGCMsgInitiateTradeResponse", EGCMsgInitiateTradeResponse_name, EGCMsgInitiateTradeResponse_value)
	proto.RegisterEnum("CMsgClientToGCUnpackBundleResponse_EUnpackBundle", CMsgClientToGCUnpackBundleResponse_EUnpackBundle_name, CMsgClientToGCUnpackBundleResponse_EUnpackBundle_value)
	proto.RegisterEnum("CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle", CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle_name, CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle_value)
}

var fileDescriptor4 = []byte{
	// 5149 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xac, 0x5b, 0x69, 0x70, 0x1c, 0xc7,
	0x75, 0x16, 0x2e, 0xee, 0xb2, 0x41, 0x90, 0xcd, 0xd9, 0xa5, 0x08, 0x42, 0xa4, 0x8e, 0x95, 0x44,
	0x52, 0x90, 0x08, 0x4a, 0xa4, 0x22, 0x2b, 0x8c, 0x8e, 0x00, 0x0b, 0x10, 0x46, 0x08, 0x50, 0x10,
	0x16, 0x10, 0x53, 0xa9, 0x8a, 0x27, 0x83, 0x99, 0xc6, 0x62, 0x8c, 0xd9, 0x99, 0xd5, 0xcc, 0x2c,
	0x80, 0xf5, 0x2f, 0xd9, 0x8a, 0xed, 0x5c, 0x3e, 0x72, 0x56, 0x12, 0xe7, 0x74, 0x7c, 0xc5, 0x8e,
	0x93, 0xb8, 0x72, 0x95, 0x73, 0xdb, 0x51, 0x12, 0xc7, 0xa9, 0xc4, 0x96, 0x63, 0x3b, 0x15, 0xc7,
	0x39, 0xaa, 0x12, 0x5b, 0xb6, 0x7c, 0xc9, 0x96, 0xef, 0x4b, 0x79, 0xaf, 0x7b, 0x8e, 0xee, 0x9d,
	0xd9, 0xe3, 0x47, 0xfe, 0x48, 0xd8, 0xee, 0xd7, 0xaf, 0x5f, 0xbf, 0xf3, 0xeb, 0x9e, 0x47, 0x72,
	0x8c, 0x99, 0x9e, 0xab, 0xd7, 0xcd, 0x06, 0x0b, 0x02, 0xa3, 0xce, 0x82, 0x99, 0xa6, 0xef, 0x85,
	0xde, 0x54, 0x29, 0x08, 0x99, 0xd1, 0x50, 0x07, 0x2b, 0x0b, 0x44, 0xab, 0xae, 0x04, 0xf5, 0xd9,
	0x66, 0xd3, 0x69, 0xcf, 0xb6, 0x42, 0xaf, 0xee, 0x1b, 0xcd, 0x6d, 0xed, 0x04, 0x39, 0x6a, 0xc4,
	0x3f, 0x74, 0x3b, 0x64, 0x0d, 0xdd, 0xb6, 0x26, 0x87, 0x6e, 0x1e, 0x3a, 0x3b, 0xaa, 0x95, 0xc9,
	0x21, 0x31, 0x10, 0x8d, 0x0e, 0xe3, 0x68, 0x65, 0x9b, 0xdc, 0xc0, 0xd9, 0x58, 0x2f, 0x6d, 0x05,
	0xe1, 0x12, 0x4c, 0x2d, 0x3c, 0xde, 0xb2, 0x9b, 0x4d, 0x66, 0xd5, 0x42, 0x23, 0x64, 0xda, 0x11,
	0x52, 0x50, 0xb9, 0x1c, 0x25, 0x07, 0x5d, 0xb6, 0xa7, 0x9b, 0x8e, 0x11, 0x04, 0x9c, 0xc5, 0x84,
	0x46, 0x49, 0x11, 0x87, 0x02, 0xc7, 0x0b, 0x27, 0x47, 0xf8, 0x48, 0x89, 0x8c, 0x07, 0x61, 0xdb,
	0x61, 0xba, 0xed, 0x5a, 0x6c, 0x7f, 0x72, 0x14, 0x07, 0x2b, 0xcf, 0x0d, 0x91, 0xdb, 0x70, 0xab,
	0x05, 0x38, 0xe3, 0xaa, 0x63, 0xb4, 0x99, 0x5f, 0x0b, 0x7d, 0xc3, 0xad, 0xb3, 0xaa, 0xd7, 0x72,
	0x43, 0x21, 0x40, 0x83, 0xb9, 0xa1, 0xa6, 0x11, 0x62, 0x98, 0x26, 0x0e, 0xc6, 0xdb, 0x4e, 0x68,
	0x3f, 0x42, 0x4e, 0x04, 0x82, 0x5a, 0x17, 0x33, 0x46, 0x42, 0x8f, 0x62, 0x8c, 0x9c, 0x1d, 0xbf,
	0xf0, 0xe0, 0xcc, 0x20, 0xdc, 0x67, 0xaa, 0xf9, 0xe3, 0x53, 0x6b, 0xe4, 0x78, 0xb5, 0xbb, 0x40,
	0x6c, 0x17, 0xfe, 0xd0, 0xc3, 0x76, 0x93, 0x45, 0x02, 0x49, 0x8a, 0xe1, 0x8a, 0xe4, 0x52, 0x27,
	0x4b, 0x84, 0x1e, 0x2a, 0x0f, 0x92, 0x3b, 0x50, 0xa6, 0x35, 0xf6, 0x78, 0x8b, 0x09, 0xed, 0xae,
	0xb6, 0xfc, 0xba, 0x11, 0x7a, 0x7e, 0x5b, 0xbf, 0x6c, 0xbb, 0x86, 0x63, 0xbf, 0x8c, 0xc1, 0x88,
	0xb9, 0x6d, 0x04, 0x0c, 0xd5, 0x18, 0x71, 0x0c, 0x60, 0x8f, 0x11, 0xb0, 0x4d, 0x95, 0xdc, 0x33,
	0xf0, 0xf2, 0x35, 0x16, 0x34, 0x3d, 0x17, 0xd8, 0x1c, 0x26, 0x07, 0x7c, 0x16, 0xb4, 0x9c, 0x50,
	0x08, 0x5a, 0xb9, 0x44, 0xce, 0x74, 0x65, 0xb2, 0xc6, 0xb6, 0x5a, 0xae, 0x95, 0x48, 0xd0, 0x69,
	0xec, 0xca, 0x2c, 0x39, 0x3f, 0xe0, 0xda, 0xae, 0xdb, 0x9f, 0x25, 0x65, 0x64, 0x51, 0xf5, 0x8d,
	0xad, 0xd0, 0x76, 0xeb, 0x09, 0x5d, 0xf6, 0xb4, 0xdf, 0x2f, 0x3c, 0x71, 0xb1, 0x1a, 0x6d, 0x57,
	0x83, 0x6d, 0x58, 0xcd, 0x70, 0x58, 0x30, 0x6f, 0x84, 0x06, 0x0a, 0xb7, 0xcb, 0xfc, 0xc0, 0xf6,
	0xdc, 0xc8, 0x02, 0xc0, 0xc1, 0x6c, 0xf9, 0x3e, 0x73, 0xcd, 0xb6, 0x70, 0xc4, 0xca, 0xbb, 0x87,
	0xc8, 0xad, 0x3d, 0x58, 0x24, 0x7b, 0x3f, 0x44, 0x48, 0x00, 0x83, 0x7a, 0xd3, 0xb7, 0x4d, 0xc6,
	0x77, 0x1f, 0xbf, 0x30, 0x3d, 0x33, 0xc0, 0xca, 0x99, 0x55, 0x5c, 0x21, 0x8b, 0x22, 0x22, 0xe0,
	0x38, 0x39, 0xc2, 0xf6, 0x9b, 0xb6, 0x6f, 0x84, 0x30, 0xa6, 0x87, 0x76, 0x83, 0x09, 0x07, 0x98,
	0x3a, 0x4b, 0xc6, 0xc4, 0x92, 0xf8, 0xb8, 0x16, 0xdb, 0x8a, 0xc4, 0x9f, 0x20, 0x63, 0x62, 0x7f,
	0x21, 0xfb, 0x35, 0x72, 0x67, 0x0f, 0x01, 0x36, 0x9a, 0xeb, 0x1e, 0xfc, 0x3f, 0x55, 0x73, 0x46,
	0x1b, 0x39, 0x22, 0x08, 0xc6, 0xc7, 0xc9, 0x31, 0xc1, 0x78, 0xdd, 0x5b, 0xac, 0xae, 0x72, 0x13,
	0xf0, 0x0d, 0x2a, 0x93, 0xe4, 0xfa, 0xce, 0x09, 0xc1, 0xbc, 0x72, 0x2f, 0xb9, 0x31, 0x9d, 0x59,
	0x64, 0xe1, 0x46, 0x00, 0xd1, 0x04, 0xd9, 0x07, 0x38, 0xd7, 0x98, 0x0f, 0xfb, 0xe6, 0x85, 0x28,
	0x38, 0xcb, 0xe9, 0xde, 0xab, 0x12, 0xe1, 0x41, 0xd6, 0x80, 0x8f, 0xe8, 0x3c, 0xb1, 0xc5, 0x2c,
	0x0e, 0x54, 0x96, 0x73, 0x37, 0x46, 0xca, 0x15, 0xd6, 0xd8, 0x84, 0xf3, 0xe6, 0xe6, 0x86, 0xeb,
	0xc9, 0xe1, 0x86, 0xb1, 0xaf, 0x07, 0x4d, 0x66, 0x86, 0xe8, 0x9b, 0x51, 0x5e, 0x82, 0xf0, 0x39,
	0xdd, 0x9b, 0x5b, 0x22, 0x10, 0x64, 0xcd, 0x06, 0x1f, 0xd2, 0x15, 0xe6, 0x23, 0xc0, 0xe4, 0x7e,
	0x21, 0xd2, 0xb2, 0xe7, 0xed, 0xb4, 0x9a, 0x2b, 0xe0, 0xd7, 0x76, 0xd3, 0x61, 0xb3, 0x82, 0xea,
	0xaa, 0x01, 0x39, 0x19, 0xb6, 0x8f, 0x45, 0x8a, 0x7d, 0x79, 0x62, 0x6e, 0x98, 0x0e, 0x55, 0x7e,
	0x79, 0x48, 0xec, 0xdf, 0x7d, 0x69, 0xb2, 0xff, 0x2c, 0x29, 0x46, 0x2c, 0x82, 0xc8, 0x1d, 0xcf,
	0xcf, 0x0c, 0xb6, 0x74, 0x26, 0x1a, 0x9c, 0x3a, 0x47, 0x0a, 0xd1, 0x9f, 0x98, 0xa2, 0x13, 0x81,
	0xd2, 0x6c, 0xd5, 0x84, 0x03, 0x7b, 0xae, 0xc1, 0x75, 0x73, 0xb0, 0x72, 0x9e, 0x9c, 0xc8, 0xe8,
	0x66, 0xb5, 0x3a, 0x07, 0xd9, 0xef, 0xaa, 0x97, 0x6b, 0xdd, 0x17, 0x91, 0x5b, 0xba, 0x2e, 0x48,
	0xce, 0x01, 0x0b, 0x9b, 0xa6, 0xbe, 0x09, 0x83, 0xba, 0xeb, 0x45, 0x0b, 0xcf, 0x0b, 0xff, 0x8b,
	0xbc, 0x0e, 0xf2, 0x40, 0xc8, 0x30, 0x91, 0xa0, 0xde, 0x0e, 0x9b, 0xf8, 0x4b, 0x57, 0x03, 0xa3,
	0xf2, 0x03, 0xe4, 0x54, 0xee, 0x82, 0x64, 0x97, 0x2e, 0x0b, 0xf1, 0xdc, 0xf1, 0x88, 0xa8, 0x09,
	0x13, 0x95, 0x5f, 0x1c, 0x12, 0xcc, 0x84, 0xd8, 0x55, 0xc3, 0x05, 0xb1, 0xe7, 0x7d, 0xaf, 0xb9,
	0x06, 0xcb, 0xe7, 0x3c, 0xb7, 0x95, 0xef, 0x50, 0xe0, 0x9f, 0x16, 0x10, 0xe9, 0x7c, 0x93, 0x4d,
	0x24, 0xe3, 0x5a, 0x1b, 0xc6, 0x12, 0xba, 0xe9, 0x79, 0xe0, 0xb4, 0xbe, 0x28, 0x05, 0xa2, 0xda,
	0x4d, 0x11, 0x8d, 0xed, 0x9b, 0x4e, 0x2b, 0xb0, 0x77, 0x25, 0x99, 0x78, 0xd1, 0xd3, 0x26, 0x09,
	0x35, 0x1c, 0xc7, 0xdb, 0xd3, 0xe1, 0x34, 0x86, 0xc3, 0x39, 0x4e, 0x8e, 0xc1, 0x4c, 0xb1, 0xf2,
	0xae, 0x21, 0x28, 0x38, 0x20, 0x5a, 0xed, 0xd1, 0xe5, 0x59, 0xcb, 0xea, 0x2f, 0x54, 0xa6, 0xe0,
	0xc8, 0x29, 0x65, 0xa4, 0x9b, 0xdc, 0xa3, 0xb9, 0x72, 0x8f, 0xc5, 0xb2, 0x05, 0x08, 0x38, 0xac,
	0x40, 0xb7, 0x5a, 0x22, 0x71, 0x4c, 0x1e, 0x88, 0x23, 0x8a, 0xb9, 0x16, 0xcf, 0x22, 0x10, 0xa2,
	0x46, 0xa3, 0x39, 0x59, 0xe0, 0xa6, 0xf1, 0x44, 0x8a, 0x06, 0x91, 0x37, 0x9a, 0x00, 0x31, 0x2c,
	0x36, 0x67, 0x84, 0xa1, 0x03, 0x42, 0x73, 0xde, 0xb9, 0x62, 0xcb, 0x52, 0x8a, 0x64, 0xc9, 0x85,
	0x01, 0xd9, 0xf4, 0xd0, 0x83, 0x2a, 0x6e, 0x71, 0xd9, 0xb3, 0x22, 0x0a, 0xcc, 0xf0, 0x10, 0x99,
	0x4c, 0xcd, 0x07, 0x15, 0x07, 0x4a, 0xcb, 0x76, 0xed, 0x91, 0xaa, 0x61, 0x6e, 0xb3, 0xdc, 0xdd,
	0x78, 0xf5, 0x71, 0x3c, 0x43, 0xe8, 0xa8, 0x08, 0xbe, 0x24, 0x79, 0x6d, 0x75, 0x9b, 0x99, 0x3b,
	0x51, 0x90, 0xac, 0xa3, 0xf4, 0x08, 0x71, 0xba, 0x68, 0x1b, 0x7d, 0xc9, 0xb5, 0x43, 0x1b, 0xf3,
	0x49, 0xc4, 0x6b, 0x4d, 0x14, 0xf3, 0x9e, 0xbc, 0x12, 0x1f, 0x85, 0xf5, 0xa6, 0x01, 0x79, 0x18,
	0xa7, 0x38, 0xcb, 0x22, 0x47, 0x11, 0xbe, 0xef, 0xf9, 0x00, 0x60, 0xac, 0x38, 0x39, 0x7f, 0x72,
	0x54, 0x09, 0x2b, 0x40, 0x1f, 0x61, 0xc4, 0x74, 0xcd, 0x73, 0x1c, 0x66, 0x89, 0x48, 0xc9, 0x13,
	0xf0, 0x3e, 0x32, 0x86, 0x7a, 0x8d, 0xc1, 0xcf, 0x99, 0x99, 0xbe, 0x6c, 0x66, 0xf0, 0xbf, 0xa8,
	0x67, 0xa3, 0x65, 0xd9, 0x00, 0xa0, 0x4c, 0x6e, 0x70, 0xe1, 0x39, 0xb8, 0x03, 0x1f, 0xb5, 0xa0,
	0xd8, 0x08, 0xdd, 0x4f, 0xbd, 0x7f, 0x84, 0x8c, 0xf2, 0x25, 0xd9, 0xda, 0x05, 0xe4, 0x8e, 0xe7,
	0x85, 0xba, 0x63, 0x07, 0x11, 0xfc, 0x3a, 0xc8, 0xe1, 0x65, 0xdd, 0x85, 0xa2, 0x05, 0xa3, 0x0d,
	0x5b, 0x20, 0xa0, 0x22, 0x1a, 0xc4, 0xf3, 0xed, 0xba, 0xed, 0x46, 0xf1, 0xb0, 0x4e, 0x34, 0xab,
	0xed, 0x1a, 0x0d, 0xdb, 0xd4, 0xc1, 0x75, 0x7c, 0x7b, 0xb3, 0x15, 0xb2, 0x00, 0xfc, 0x11, 0xcf,
	0x70, 0xff, 0x80, 0x67, 0x98, 0x99, 0x17, 0x1c, 0x66, 0x63, 0x06, 0xda, 0x4b, 0xc8, 0x24, 0x78,
	0x92, 0x8d, 0x07, 0x82, 0x20, 0x13, 0x27, 0x01, 0x14, 0xe6, 0xdb, 0xc0, 0xfb, 0x00, 0xe7, 0xfd,
	0xc0, 0xa0, 0xbc, 0x67, 0x13, 0x3e, 0xb3, 0xc8, 0x66, 0x01, 0xb8, 0xb4, 0x31, 0xb0, 0x6c, 0x17,
	0x11, 0x20, 0x02, 0x9f, 0xd0, 0xdb, 0x61, 0xae, 0x08, 0x88, 0xa9, 0x2b, 0x84, 0x66, 0x84, 0x39,
	0x44, 0x46, 0x61, 0x44, 0x58, 0x9d, 0xab, 0x65, 0xd7, 0x70, 0x5a, 0x4c, 0x6f, 0xd9, 0x6e, 0x78,
	0xf1, 0x42, 0x14, 0x03, 0x00, 0x90, 0xc5, 0xe8, 0x16, 0x38, 0xab, 0xd0, 0xd5, 0xf0, 0xd4, 0x0f,
	0x91, 0x72, 0xee, 0xee, 0x10, 0xa7, 0xde, 0x9e, 0xdb, 0x59, 0x9c, 0xa2, 0x50, 0x52, 0x8c, 0x39,
	0x9c, 0x63, 0x4c, 0x81, 0x44, 0x1f, 0x15, 0xd8, 0x5b, 0x52, 0x40, 0x8d, 0x39, 0x5b, 0x2b, 0xe0,
	0x9d, 0x78, 0xea, 0x75, 0x2f, 0xae, 0x1d, 0x10, 0xf9, 0xb1, 0xad, 0x23, 0xf0, 0x9e, 0xc4, 0x43,
	0x5a, 0x53, 0x84, 0xef, 0x42, 0x02, 0x1b, 0x47, 0x9e, 0x90, 0x52, 0xb9, 0x9b, 0x64, 0xae, 0x0a,
	0xa0, 0xb5, 0xd0, 0xf0, 0xeb, 0x2c, 0x4c, 0xcb, 0x3c, 0xae, 0x3c, 0xa0, 0xdd, 0x44, 0x8e, 0xd7,
	0xed, 0xad, 0x50, 0xd7, 0x9b, 0x5e, 0x08, 0x4a, 0xb5, 0xc1, 0x66, 0x82, 0x30, 0x00, 0x69, 0x47,
	0x44, 0x66, 0xb2, 0x5a, 0xcc, 0xd1, 0xc5, 0x35, 0x43, 0x77, 0x3c, 0x73, 0x27, 0xf2, 0x1f, 0xc8,
	0xb5, 0x49, 0x5c, 0xa6, 0x6c, 0xc7, 0xf8, 0x7e, 0xb7, 0x90, 0x13, 0x28, 0x40, 0xd3, 0x30, 0x77,
	0x74, 0x1d, 0xff, 0x63, 0xc3, 0x9d, 0xc9, 0x02, 0x52, 0xe6, 0xb4, 0x79, 0x62, 0x2b, 0x56, 0x36,
	0xc8, 0x51, 0x9e, 0xc0, 0x38, 0x0a, 0x88, 0x05, 0x3f, 0x49, 0xca, 0x29, 0xcf, 0x8c, 0x8e, 0x2b,
	0xe4, 0x50, 0x2b, 0x88, 0xf2, 0x7a, 0x23, 0xa8, 0xf3, 0x23, 0x8c, 0x5f, 0x38, 0x34, 0x23, 0x1d,
	0xbd, 0x72, 0x2a, 0x86, 0xae, 0xab, 0x86, 0x1f, 0x82, 0xa5, 0xe6, 0x0c, 0xc7, 0x70, 0x4d, 0x16,
	0x23, 0xad, 0x26, 0x39, 0x99, 0x3f, 0x1d, 0x25, 0x8b, 0x87, 0x15, 0xcc, 0x7c, 0xf8, 0xc2, 0xd4,
	0xcc, 0x42, 0x42, 0x1b, 0xf1, 0x88, 0x69, 0x2f, 0x95, 0x76, 0xf4, 0x05, 0x75, 0xea, 0x91, 0x2b,
	0xa8, 0xfa, 0x4d, 0xc1, 0x33, 0xb2, 0xcd, 0x03, 0x02, 0xf4, 0x4b, 0x5c, 0x00, 0xa5, 0x83, 0x86,
	0xd7, 0x40, 0x1f, 0x3e, 0xc0, 0xa4, 0x8d, 0xb5, 0xe5, 0x68, 0x35, 0x5a, 0xb6, 0xc3, 0xd8, 0x95,
	0x7d, 0x72, 0xb6, 0xff, 0xea, 0xff, 0x2f, 0xd9, 0xc7, 0xc9, 0x48, 0xcb, 0x77, 0x22, 0x58, 0xf2,
	0x83, 0x71, 0x8e, 0xc5, 0x6b, 0x1c, 0x94, 0x99, 0x6b, 0x9e, 0xbf, 0xc3, 0x2f, 0xa5, 0x00, 0xce,
	0x2c, 0x8b, 0x59, 0x18, 0xae, 0x9b, 0x60, 0x5a, 0x7e, 0x23, 0xe8, 0x56, 0xba, 0x99, 0xc3, 0x42,
	0x66, 0x75, 0xdc, 0x73, 0x5f, 0x39, 0x44, 0x8e, 0x24, 0x17, 0x11, 0x9e, 0xac, 0xf9, 0x5d, 0x65,
	0x9b, 0xf9, 0x9e, 0x1c, 0x4e, 0x01, 0xca, 0x05, 0x7a, 0xe4, 0x11, 0xcc, 0x65, 0x42, 0xa0, 0x6e,
	0xb6, 0x4d, 0x87, 0x45, 0x85, 0x0a, 0x42, 0xd7, 0x62, 0x81, 0xe9, 0xdb, 0x4d, 0x1e, 0x72, 0xa3,
	0x9c, 0x06, 0x1c, 0x16, 0xae, 0xcc, 0x70, 0x20, 0x70, 0x65, 0xdc, 0x17, 0x53, 0xe5, 0x58, 0x5c,
	0x91, 0x42, 0xcf, 0x73, 0x60, 0x8f, 0x03, 0x5c, 0x8e, 0x1b, 0xc9, 0x61, 0x81, 0x6e, 0x2c, 0xc6,
	0x1a, 0x55, 0xa8, 0x04, 0x98, 0x2f, 0x78, 0x45, 0xe0, 0xf9, 0xa2, 0x32, 0x2d, 0x50, 0x79, 0x3a,
	0x2f, 0xdf, 0x98, 0xfc, 0xe8, 0xef, 0xc8, 0x4e, 0x8f, 0x0b, 0x68, 0x35, 0xcf, 0x76, 0xaf, 0xb2,
	0x3d, 0x54, 0x53, 0x6c, 0xd3, 0x63, 0x64, 0x22, 0x89, 0x62, 0x7e, 0x92, 0x11, 0x2e, 0x25, 0x04,
	0x77, 0x92, 0xb6, 0xc5, 0xb8, 0x90, 0x1e, 0xc8, 0x31, 0x19, 0xa7, 0xe4, 0x63, 0x3c, 0xa3, 0xa3,
	0x7e, 0x71, 0x98, 0x67, 0x2a, 0x9e, 0x47, 0x0f, 0x56, 0xee, 0x16, 0x78, 0x2a, 0xb3, 0xa5, 0x7c,
	0x31, 0x09, 0x5a, 0xa6, 0x09, 0xb8, 0x5f, 0x94, 0x3d, 0x00, 0xd0, 0x47, 0x85, 0x49, 0x21, 0xb7,
	0x2d, 0x42, 0xd4, 0xf3, 0x90, 0x1b, 0x04, 0xe0, 0x54, 0x18, 0xb9, 0x99, 0x5b, 0xcc, 0xb1, 0x21,
	0x49, 0x60, 0xde, 0xba, 0xe6, 0x1b, 0xcd, 0x59, 0xd7, 0x9a, 0x67, 0x0e, 0x20, 0x2d, 0x1f, 0x99,
	0x65, 0x93, 0x0e, 0x24, 0x88, 0x3a, 0xe2, 0x30, 0x04, 0x17, 0xe9, 0x0e, 0x09, 0xf2, 0xe0, 0x79,
	0x27, 0x7a, 0x49, 0x11, 0x5a, 0xa9, 0x3c, 0x35, 0x2c, 0xdc, 0xbd, 0xd7, 0x3e, 0xc9, 0xf1, 0xbe,
	0xa7, 0xc3, 0x08, 0x87, 0x2f, 0x1c, 0x41, 0x87, 0xe7, 0x16, 0x8b, 0xbc, 0x5c, 0x03, 0x2f, 0x57,
	0x46, 0xc0, 0xc9, 0x6f, 0x20, 0x25, 0xdc, 0x19, 0x2e, 0x59, 0xba, 0x08, 0x25, 0x1d, 0x72, 0x4a,
	0xfc, 0x7e, 0xc2, 0x45, 0x56, 0x26, 0xe1, 0x3a, 0xc3, 0x85, 0x1b, 0x8b, 0x45, 0xc6, 0x39, 0xbe,
	0x62, 0x34, 0x2e, 0x1f, 0xf1, 0x28, 0x92, 0x8e, 0x71, 0x52, 0x48, 0x63, 0xf1, 0xe0, 0x1e, 0x44,
	0x33, 0x60, 0xce, 0x6d, 0xaf, 0xe5, 0x07, 0x11, 0xa4, 0xd3, 0xc9, 0x51, 0x0e, 0x46, 0x74, 0x10,
	0x1f, 0x2a, 0x95, 0xa8, 0x17, 0x05, 0x7e, 0x82, 0x93, 0xd1, 0x09, 0x96, 0x44, 0x12, 0x64, 0x1c,
	0xcf, 0x24, 0xc7, 0x39, 0x1d, 0x1f, 0x27, 0x77, 0x5a, 0x87, 0xc2, 0xc1, 0x9a, 0x10, 0x6e, 0x95,
	0x3b, 0x05, 0x54, 0x4b, 0xb5, 0xb8, 0xe1, 0xee, 0x81, 0x1e, 0x73, 0xad, 0x54, 0x39, 0x47, 0xa6,
	0x3a, 0x89, 0x31, 0x6d, 0xcf, 0xb5, 0x5c, 0xcb, 0xc9, 0x79, 0x87, 0xf8, 0xd8, 0x08, 0xa9, 0x74,
	0xa7, 0x97, 0xaf, 0x71, 0x2d, 0x3e, 0x9e, 0x46, 0x7f, 0xf4, 0xb8, 0xa0, 0xfd, 0xb0, 0x64, 0xb7,
	0x61, 0x7e, 0xea, 0x7b, 0x66, 0xfa, 0x73, 0x9c, 0x59, 0x90, 0x47, 0x2f, 0x4d, 0xee, 0xe8, 0xf2,
	0x6f, 0xbd, 0x86, 0x8e, 0x0e, 0x81, 0x6a, 0x55, 0xde, 0x3d, 0x4c, 0x26, 0x14, 0x5a, 0xb0, 0x46,
	0x57, 0x6a, 0x7a, 0x9d, 0x76, 0x07, 0xb9, 0xbd, 0x63, 0xf6, 0xb2, 0x61, 0x03, 0x10, 0xd1, 0x31,
	0x3a, 0x96, 0x82, 0xab, 0x5e, 0x28, 0x86, 0xe9, 0x10, 0x78, 0xdc, 0x3d, 0xf9, 0xa4, 0x1b, 0xae,
	0xb1, 0xe9, 0xb0, 0x75, 0xaf, 0xea, 0x33, 0xb0, 0x4a, 0xd5, 0x73, 0x43, 0xc3, 0x76, 0x05, 0x96,
	0xa1, 0xc3, 0xda, 0x69, 0x52, 0xc9, 0x5f, 0x16, 0xc1, 0xe7, 0x05, 0x84, 0xa2, 0x74, 0x44, 0x3b,
	0x43, 0x6e, 0xed, 0x25, 0xc9, 0x92, 0x0b, 0xd1, 0x6f, 0x5b, 0x74, 0xb4, 0xbb, 0xc8, 0x73, 0x06,
	0xdf, 0xf3, 0xd1, 0x16, 0x80, 0x0a, 0x3b, 0x6c, 0xd3, 0x31, 0xed, 0x2e, 0x72, 0xb6, 0xb7, 0xc8,
	0xf3, 0x3c, 0x45, 0x73, 0x49, 0x0f, 0x54, 0xae, 0xc4, 0xb5, 0x0a, 0x8e, 0xc2, 0xad, 0xc1, 0x9f,
	0x3e, 0xc0, 0xcb, 0xdc, 0x40, 0xc0, 0x9a, 0xaa, 0xd7, 0x68, 0xf2, 0x94, 0xce, 0x93, 0xe9, 0xbe,
	0x9b, 0x06, 0xbb, 0xfc, 0x88, 0x34, 0xcc, 0x1f, 0x91, 0x5e, 0xdc, 0xe9, 0x85, 0xfc, 0x39, 0x53,
	0xc0, 0xe8, 0xbb, 0xc8, 0x01, 0x86, 0xbf, 0xe2, 0x3b, 0xf6, 0xc9, 0x99, 0x1e, 0x2f, 0x9f, 0x95,
	0x87, 0x3b, 0xb3, 0x4f, 0xca, 0x29, 0x71, 0x38, 0x08, 0xeb, 0xc0, 0xd3, 0x4d, 0xd4, 0xa7, 0x1e,
	0x3d, 0xc7, 0xa4, 0x8f, 0x19, 0xb6, 0x48, 0x95, 0xb2, 0x87, 0x21, 0x90, 0x41, 0x0e, 0x35, 0x7c,
	0x1c, 0x4d, 0xb0, 0x16, 0xa4, 0xaa, 0x16, 0x9f, 0x8a, 0x4e, 0xd5, 0xf1, 0x7a, 0x2a, 0x92, 0x04,
	0x6c, 0x05, 0x25, 0x31, 0x68, 0x35, 0x50, 0x83, 0xa9, 0x77, 0x8f, 0xf0, 0x53, 0xbf, 0x73, 0x94,
	0xdc, 0xde, 0x73, 0xaf, 0x44, 0xe2, 0x97, 0x64, 0xf2, 0xd7, 0xc5, 0x99, 0x81, 0x56, 0x62, 0x28,
	0xe0, 0x04, 0x1f, 0xbc, 0x74, 0x1c, 0xed, 0x9b, 0xfc, 0x4c, 0x5d, 0x3b, 0x7b, 0x4b, 0xed, 0x38,
	0xcc, 0x48, 0x52, 0x68, 0xf9, 0x60, 0xd3, 0x67, 0x3e, 0x7b, 0x3c, 0xba, 0xec, 0x3d, 0x33, 0x4c,
	0x0e, 0xc9, 0xbb, 0xc0, 0x99, 0xbb, 0xed, 0x03, 0x21, 0x74, 0x13, 0xb9, 0x41, 0x9d, 0x8c, 0x7c,
	0x6c, 0xd5, 0x47, 0xdc, 0x05, 0x81, 0x73, 0x2b, 0xb9, 0x29, 0x97, 0xa0, 0x8a, 0xe8, 0x7f, 0x6b,
	0xcb, 0xf3, 0x2d, 0x08, 0x93, 0x5e, 0x44, 0xe0, 0x77, 0x70, 0x91, 0x81, 0x18, 0x89, 0x62, 0x29,
	0x97, 0x68, 0x19, 0x06, 0x79, 0x40, 0xa5, 0x21, 0xd2, 0x63, 0x47, 0x71, 0x4b, 0x80, 0x10, 0xe9,
	0xc5, 0x52, 0x90, 0x2e, 0x62, 0x70, 0x68, 0xd3, 0xe4, 0x74, 0x2e, 0xdd, 0x55, 0x0f, 0xa3, 0x02,
	0x2e, 0xe9, 0x76, 0xab, 0xb1, 0xcc, 0x76, 0x99, 0x43, 0x0b, 0xda, 0x59, 0x72, 0x5b, 0x2e, 0xed,
	0xac, 0x03, 0x19, 0xc2, 0x6a, 0x8b, 0x19, 0xd0, 0x5d, 0xb1, 0xf2, 0x64, 0xf4, 0x34, 0x95, 0x5a,
	0xbd, 0xc6, 0x78, 0x08, 0x2c, 0xc5, 0xb7, 0x9c, 0x2a, 0x84, 0x40, 0x1d, 0xfe, 0x9f, 0x7d, 0xa7,
	0x15, 0x28, 0x29, 0x44, 0xaf, 0x15, 0xc0, 0x40, 0xf8, 0x27, 0xe4, 0x5e, 0x9f, 0x35, 0x3c, 0xa8,
	0xbc, 0xa6, 0x58, 0x8a, 0x77, 0xaf, 0x91, 0xf8, 0x35, 0x01, 0x6e, 0x67, 0xf2, 0xb8, 0xb0, 0xf7,
	0xa2, 0x78, 0x83, 0xea, 0x74, 0x3d, 0xfe, 0xe2, 0x83, 0x98, 0x44, 0x7a, 0xe4, 0x49, 0x22, 0x1e,
	0xdc, 0x69, 0x87, 0xb5, 0x3b, 0xb0, 0xdd, 0x53, 0x43, 0xe2, 0x16, 0x9d, 0xcb, 0x29, 0x71, 0xfd,
	0x8b, 0x1d, 0x48, 0x75, 0xa0, 0xc2, 0xfd, 0x10, 0x99, 0xa8, 0xe3, 0x6d, 0x29, 0xaa, 0x28, 0xea,
	0x75, 0xbb, 0xe7, 0x7e, 0xfc, 0x3a, 0x39, 0x35, 0x1d, 0xdd, 0xa1, 0xf3, 0xbe, 0xa3, 0xa4, 0xb0,
	0x7b, 0x38, 0x7a, 0x29, 0x3b, 0x19, 0x3f, 0x01, 0xa3, 0x22, 0x71, 0x5d, 0x72, 0xab, 0x84, 0xf1,
	0x6c, 0x59, 0x5c, 0x11, 0x58, 0x72, 0xb1, 0x8a, 0x4f, 0x82, 0x7c, 0x1b, 0x7c, 0x59, 0x6d, 0x6d,
	0xbe, 0x14, 0x30, 0x7a, 0xf6, 0xe3, 0x0f, 0xc2, 0x50, 0x55, 0x71, 0xc9, 0x55, 0x55, 0x00, 0xa1,
	0x87, 0xe2, 0x97, 0xe2, 0xc8, 0x19, 0x56, 0xbd, 0x80, 0x5f, 0x46, 0xb3, 0xc2, 0x03, 0x37, 0xfc,
	0xe2, 0xd3, 0x8c, 0x08, 0x84, 0xfc, 0xd3, 0x6f, 0xba, 0x48, 0x08, 0x28, 0x10, 0x97, 0xa2, 0xb8,
	0x47, 0xc9, 0x21, 0x50, 0x28, 0x67, 0x38, 0x67, 0x04, 0x8c, 0x7e, 0xaa, 0x00, 0x45, 0xf1, 0x78,
	0x3c, 0xd4, 0xb1, 0x07, 0xfd, 0x74, 0x01, 0x40, 0xe1, 0x44, 0x3c, 0xcb, 0x51, 0x3a, 0x7d, 0xb6,
	0x00, 0xd8, 0xe8, 0x98, 0x32, 0x16, 0x6b, 0x97, 0x7e, 0xa6, 0x00, 0xbe, 0x70, 0x38, 0x9e, 0x13,
	0x05, 0x85, 0x7e, 0xb6, 0xa0, 0xdd, 0x86, 0x01, 0x2d, 0x06, 0x1f, 0x63, 0xbe, 0xbd, 0xd5, 0xe6,
	0xc1, 0x59, 0x6b, 0x6d, 0x26, 0x90, 0x9d, 0x7e, 0xae, 0x00, 0xde, 0x45, 0x63, 0xaa, 0x58, 0x77,
	0xf4, 0xf3, 0x05, 0x80, 0xf1, 0xa5, 0x78, 0x58, 0xb2, 0x28, 0xfd, 0x42, 0x41, 0xbb, 0x19, 0xb3,
	0x4d, 0x66, 0x26, 0x91, 0xe6, 0xb9, 0x02, 0x78, 0xf9, 0xd1, 0x98, 0x62, 0x15, 0x0a, 0x31, 0x3f,
	0x1d, 0xfd, 0x62, 0x41, 0xbb, 0x91, 0x9c, 0xc8, 0x8c, 0x27, 0xeb, 0xbe, 0x54, 0x80, 0xfb, 0xe5,
	0xa9, 0x78, 0x7e, 0xd1, 0x73, 0x2c, 0xe6, 0x5e, 0xc3, 0x4f, 0x1a, 0xdb, 0x73, 0xbe, 0x67, 0x58,
	0xa6, 0x11, 0x84, 0xf4, 0x79, 0x45, 0xae, 0x95, 0x47, 0xd6, 0xe7, 0x23, 0xcc, 0x4d, 0xbf, 0xac,
	0xc8, 0x25, 0xcd, 0x24, 0xfc, 0xbf, 0x52, 0x80, 0x02, 0x5f, 0x89, 0x29, 0x00, 0x81, 0x8b, 0xdb,
	0x7e, 0x0d, 0x13, 0x41, 0xa8, 0xcf, 0x2f, 0xac, 0xae, 0x2d, 0x54, 0x67, 0xd7, 0x17, 0xe6, 0xe9,
	0x57, 0x0b, 0xda, 0x79, 0x32, 0xdd, 0x85, 0x30, 0x01, 0x7b, 0xd2, 0x82, 0xaf, 0x15, 0xb4, 0x3b,
	0x31, 0x37, 0x25, 0x0b, 0x04, 0xe9, 0xba, 0x87, 0xb6, 0xc6, 0xc5, 0x32, 0xf1, 0xd7, 0x3b, 0xc5,
	0x88, 0x89, 0x3b, 0x09, 0xbf, 0xd1, 0x29, 0x86, 0x4c, 0x98, 0x27, 0xc6, 0x37, 0x0b, 0x90, 0x79,
	0xca, 0xb2, 0x2d, 0xe3, 0xfd, 0xe9, 0xb7, 0x0a, 0xda, 0x2d, 0xe4, 0x64, 0xde, 0x54, 0xa2, 0x9e,
	0x6f, 0x63, 0xd2, 0xbc, 0x35, 0x26, 0x11, 0x61, 0x27, 0x76, 0xec, 0x14, 0xec, 0x3b, 0x05, 0xed,
	0x6e, 0x72, 0x67, 0x37, 0xca, 0x3c, 0xc9, 0xbe, 0xab, 0x6c, 0x5f, 0x05, 0x8c, 0xe1, 0x35, 0xec,
	0x97, 0x89, 0xe7, 0x16, 0xb6, 0x1f, 0xb6, 0x7c, 0x46, 0x5f, 0x28, 0x40, 0xc9, 0xb8, 0xad, 0x17,
	0x49, 0x22, 0xe9, 0x13, 0x45, 0xa8, 0x86, 0xd7, 0x27, 0x2e, 0x18, 0x9f, 0x43, 0xf8, 0xc1, 0xcb,
	0x8b, 0x72, 0x64, 0x6d, 0x74, 0x1c, 0xf2, 0x15, 0x45, 0xd9, 0x7f, 0x10, 0x8f, 0x47, 0x0f, 0x5e,
	0xf4, 0x49, 0x85, 0x69, 0x9a, 0x75, 0x50, 0x57, 0xf4, 0x55, 0x0a, 0xd3, 0x74, 0x92, 0x3b, 0x31,
	0x7d, 0x75, 0x51, 0x76, 0xec, 0x14, 0xea, 0xc7, 0x22, 0xbd, 0xa6, 0x08, 0x05, 0x7a, 0x2a, 0x6f,
	0x3e, 0x92, 0xea, 0xb5, 0x45, 0xd9, 0x70, 0x51, 0x36, 0xe0, 0x65, 0x8b, 0xbe, 0x4e, 0xe5, 0x1d,
	0x30, 0xab, 0xea, 0x18, 0x36, 0xbf, 0x0c, 0x73, 0xc3, 0xbe, 0xbe, 0x28, 0x07, 0x5b, 0xcd, 0xf3,
	0x43, 0x71, 0x9c, 0x9f, 0x2e, 0x42, 0xb9, 0xbc, 0x3d, 0x1e, 0xd7, 0xd7, 0xd8, 0xae, 0xe7, 0xec,
	0xc2, 0x75, 0x68, 0x19, 0xee, 0xbc, 0xcb, 0x78, 0xe5, 0x95, 0xac, 0xf3, 0x33, 0x45, 0x39, 0xb5,
	0x88, 0xef, 0x2c, 0xd1, 0x1b, 0x18, 0xfd, 0xd9, 0xa2, 0x1c, 0x94, 0xca, 0x5c, 0x22, 0xfe, 0xcf,
	0x29, 0x32, 0x2a, 0x34, 0x5c, 0x7b, 0x3f, 0x5f, 0x84, 0x12, 0x7f, 0x4b, 0xd7, 0xf9, 0x84, 0xcf,
	0x2f, 0x14, 0xb5, 0x53, 0x78, 0x53, 0x88, 0xce, 0xda, 0xb4, 0xa2, 0xaf, 0x1d, 0x35, 0x48, 0x5a,
	0x0d, 0x83, 0xfe, 0x52, 0x51, 0x8e, 0x70, 0x61, 0x04, 0xe1, 0x27, 0xb1, 0x0f, 0xbd, 0xa1, 0x98,
	0x75, 0x61, 0x85, 0x22, 0xd9, 0xea, 0x57, 0x94, 0xad, 0x04, 0xe5, 0x8a, 0xb1, 0x03, 0xb0, 0x75,
	0xc5, 0xf0, 0x77, 0xe8, 0xaf, 0x16, 0xb5, 0xdb, 0xc9, 0xcd, 0xdd, 0xa6, 0x13, 0x2e, 0xbf, 0x56,
	0x04, 0xcc, 0x74, 0xa3, 0x4a, 0xb6, 0xe1, 0xda, 0x60, 0x75, 0x9e, 0x9f, 0x97, 0xb0, 0x9e, 0xd1,
	0x5f, 0x2f, 0xca, 0xc9, 0x21, 0x9f, 0x28, 0xe1, 0xf8, 0x1b, 0x8a, 0x17, 0xd6, 0x8c, 0xfd, 0xfd,
	0x76, 0x9a, 0xfc, 0x7e, 0xb3, 0x28, 0x47, 0xd1, 0x1c, 0xdc, 0x28, 0xf0, 0x56, 0x81, 0x36, 0xbf,
	0x6c, 0xbb, 0x76, 0xb0, 0x0d, 0x70, 0xe6, 0x8d, 0x45, 0x39, 0xe9, 0x77, 0x81, 0xf3, 0xf4, 0xb7,
	0x94, 0x28, 0xa8, 0xe2, 0xb3, 0xaf, 0x29, 0x72, 0xf4, 0x9b, 0x15, 0xbd, 0xf0, 0xaa, 0x6b, 0xee,
	0xb8, 0xde, 0x1e, 0x40, 0xa7, 0x3a, 0xb0, 0x7f, 0x4b, 0x51, 0x0e, 0x52, 0x40, 0x97, 0x00, 0x7e,
	0x02, 0xbd, 0xc6, 0x70, 0xbd, 0xf8, 0x75, 0xd9, 0xf3, 0xab, 0xf8, 0x4e, 0x49, 0xdf, 0xaa, 0x48,
	0x92, 0x92, 0xaa, 0x95, 0xee, 0x6d, 0x8a, 0xe7, 0x83, 0x9b, 0x36, 0xe1, 0x34, 0xb3, 0x9b, 0x70,
	0xbd, 0xa7, 0xbf, 0xad, 0x9c, 0x56, 0x9e, 0x4a, 0xb4, 0xf5, 0xf6, 0xa2, 0x36, 0x43, 0xee, 0x18,
	0x44, 0x1c, 0x58, 0xed, 0xb4, 0xe9, 0x3b, 0x8a, 0x9d, 0x59, 0x90, 0x47, 0xb8, 0x17, 0xda, 0x5b,
	0xb6, 0xc9, 0xbf, 0xf9, 0xd0, 0xdf, 0x51, 0x4c, 0xca, 0x1b, 0x4a, 0xaa, 0xc9, 0x55, 0x63, 0x61,
	0x6b, 0x0b, 0x38, 0x07, 0xf4, 0x9d, 0x8a, 0x27, 0x4a, 0xf3, 0xfb, 0xdb, 0x06, 0x28, 0x1c, 0x14,
	0xf5, 0xbb, 0x4a, 0x48, 0xd4, 0xb6, 0x3d, 0xfe, 0x3e, 0x14, 0xac, 0xda, 0x08, 0x3a, 0x37, 0x9a,
	0xf4, 0xf7, 0x94, 0x90, 0x10, 0xd8, 0x69, 0xde, 0x0e, 0x9a, 0x8e, 0xd1, 0x56, 0xc4, 0xf9, 0x7d,
	0xc5, 0x1e, 0x5c, 0x9c, 0xa8, 0x2f, 0x03, 0xdf, 0x0e, 0xe9, 0xbb, 0x14, 0x87, 0xd7, 0x97, 0x5c,
	0x13, 0x70, 0x27, 0xb0, 0xba, 0x62, 0x3b, 0x4e, 0x55, 0x89, 0xd1, 0x3f, 0x50, 0x44, 0xe6, 0x8c,
	0x56, 0x99, 0xeb, 0x02, 0x9a, 0x8b, 0xbe, 0x5e, 0xd1, 0x3f, 0x54, 0xb6, 0xea, 0x30, 0x54, 0x40,
	0xff, 0x48, 0x31, 0x7d, 0xe7, 0xb4, 0x8e, 0xdf, 0xeb, 0x96, 0xf1, 0x5b, 0x07, 0x1c, 0xfe, 0x7d,
	0x4a, 0xb6, 0xe4, 0x7b, 0x2d, 0xd4, 0xeb, 0x0b, 0x41, 0x80, 0x8f, 0x89, 0xf4, 0x8f, 0x15, 0x0d,
	0xa3, 0x11, 0xd2, 0xc9, 0x44, 0xdc, 0x3f, 0x51, 0xd2, 0xd7, 0xe5, 0x96, 0xb3, 0x05, 0x27, 0x8a,
	0xbe, 0x2e, 0xac, 0x31, 0xd3, 0x6e, 0x32, 0x84, 0xfc, 0x9e, 0x0b, 0x67, 0xa5, 0x7f, 0x5a, 0xd4,
	0x2e, 0x90, 0x73, 0x03, 0xd1, 0x26, 0xfc, 0xff, 0x4c, 0xf1, 0x4e, 0xa1, 0xff, 0x28, 0x5d, 0x63,
	0x84, 0xb3, 0x10, 0x1f, 0x55, 0xe9, 0x9f, 0x17, 0xe1, 0x9e, 0x7c, 0xa6, 0x0f, 0x55, 0xc2, 0xf3,
	0x2f, 0x94, 0xa8, 0x5a, 0xd8, 0x07, 0x3b, 0x99, 0xe1, 0x22, 0x26, 0xe3, 0xbf, 0x54, 0x92, 0x74,
	0x52, 0xc9, 0xe9, 0x5f, 0xa9, 0x8a, 0x52, 0x81, 0x06, 0xfd, 0xeb, 0x8e, 0x58, 0xce, 0x85, 0x21,
	0xf4, 0x3d, 0x8a, 0xa7, 0x25, 0xbc, 0x93, 0xf9, 0xf7, 0x2a, 0x3e, 0xbf, 0x86, 0x41, 0x11, 0x79,
	0xd0, 0x22, 0xbe, 0xa9, 0x62, 0x8e, 0xff, 0x1b, 0x85, 0x45, 0xe6, 0x5b, 0x33, 0x7d, 0x4a, 0x71,
	0xd6, 0xae, 0xdf, 0xa2, 0xe9, 0xdf, 0x2a, 0x3e, 0x26, 0x29, 0x20, 0xa1, 0xf8, 0x3b, 0xc5, 0x89,
	0xf2, 0x84, 0x49, 0x48, 0xff, 0x5e, 0x91, 0x5b, 0xf9, 0x48, 0x11, 0xd7, 0xd5, 0x0f, 0x28, 0x0a,
	0x97, 0x9e, 0x54, 0xe9, 0x07, 0x95, 0xaa, 0x95, 0xd6, 0x6b, 0x24, 0x58, 0x11, 0x0f, 0x9e, 0xf4,
	0x69, 0xc5, 0xc5, 0x72, 0x69, 0x12, 0x61, 0x3e, 0xd4, 0xa1, 0x01, 0x99, 0x96, 0xf9, 0x51, 0x2d,
	0x5b, 0xb2, 0xe8, 0xbf, 0x28, 0x09, 0xa9, 0x2b, 0x5d, 0xc2, 0xf7, 0xc3, 0xc5, 0x14, 0xe2, 0xa5,
	0x17, 0xa8, 0xcc, 0xba, 0xe4, 0xe3, 0x20, 0xfd, 0x88, 0x14, 0x3c, 0x79, 0x0b, 0x78, 0xbd, 0xfd,
	0xa8, 0x74, 0xb2, 0x3c, 0xa2, 0xf9, 0xf4, 0xc9, 0x9e, 0xfe, 0xab, 0xa2, 0x43, 0x7c, 0xce, 0x04,
	0x90, 0xc0, 0xaf, 0x28, 0x1f, 0x1f, 0x97, 0x6d, 0x15, 0xcd, 0xe8, 0x1d, 0x0f, 0x9f, 0xc2, 0x10,
	0xff, 0x31, 0x2e, 0xab, 0xb2, 0x0b, 0x69, 0x74, 0xe4, 0xff, 0x1c, 0x97, 0xed, 0x1a, 0xd3, 0x42,
	0x5d, 0xf2, 0xc3, 0xa8, 0x41, 0x86, 0xfe, 0xd7, 0xb8, 0x6c, 0xbd, 0x84, 0x44, 0xcc, 0x56, 0x1d,
	0x0f, 0x40, 0x10, 0xfd, 0xc4, 0xb8, 0x76, 0x0f, 0xb9, 0x6b, 0x10, 0xe9, 0x92, 0x9d, 0x9f, 0x1d,
	0x57, 0x33, 0x18, 0x7a, 0x14, 0x14, 0xd7, 0xbd, 0x80, 0xf9, 0xfa, 0x65, 0x63, 0x17, 0x6e, 0xe3,
	0x21, 0x13, 0xa3, 0xf4, 0x3d, 0x87, 0xe4, 0x03, 0xa9, 0xa4, 0x73, 0x0e, 0x14, 0x5d, 0xfc, 0x6a,
	0x10, 0xd1, 0xbe, 0xf7, 0x90, 0x92, 0xea, 0xa3, 0xee, 0x1e, 0x37, 0x34, 0x9c, 0x80, 0xeb, 0xf1,
	0x4d, 0x13, 0x72, 0xbe, 0xe3, 0x59, 0xd3, 0x67, 0xbb, 0x36, 0xdb, 0xe3, 0x9f, 0xcd, 0xc5, 0xa7,
	0x72, 0xfa, 0xe6, 0x09, 0xd9, 0xc1, 0x24, 0x22, 0xf5, 0x53, 0x3a, 0x7d, 0xcb, 0x84, 0x0c, 0x25,
	0x25, 0xba, 0xd8, 0x14, 0x6f, 0x9d, 0x90, 0x6f, 0x17, 0x59, 0x82, 0x84, 0xd3, 0xdb, 0x26, 0x64,
	0xb1, 0x25, 0xc2, 0x05, 0xec, 0x9c, 0x82, 0xf2, 0x3b, 0x21, 0xab, 0x20, 0x33, 0xaf, 0x54, 0xa9,
	0xb7, 0x4f, 0xc8, 0x6e, 0x2f, 0xd1, 0xe2, 0x9f, 0x73, 0x5e, 0xab, 0xbe, 0x1d, 0x2a, 0xf4, 0xef,
	0x50, 0x4e, 0x31, 0xcf, 0x76, 0x75, 0xf5, 0x03, 0x0a, 0x7d, 0xfa, 0x88, 0x7c, 0x8a, 0x2c, 0x41,
	0x1a, 0x98, 0x47, 0x94, 0xa2, 0x85, 0x8f, 0xa5, 0x51, 0x3f, 0x0e, 0x4f, 0xe0, 0x4f, 0x95, 0x64,
	0x1c, 0xd7, 0x39, 0x9d, 0x26, 0xae, 0x92, 0xec, 0x70, 0x9c, 0x2c, 0xee, 0xe5, 0x8b, 0x5b, 0x0b,
	0xe9, 0xfb, 0x4a, 0x8a, 0x4b, 0xe4, 0xd1, 0x24, 0xfc, 0xfe, 0xa1, 0x24, 0x27, 0x42, 0x85, 0xb6,
	0x8a, 0x1f, 0x26, 0x1d, 0xfa, 0xfe, 0x92, 0x5c, 0xb8, 0x73, 0x28, 0x12, 0x5e, 0xff, 0x58, 0x52,
	0xdc, 0x4b, 0xa6, 0x44, 0x6f, 0xa7, 0xff, 0x5c, 0x92, 0x3d, 0x27, 0x33, 0x9f, 0xf0, 0xf9, 0x80,
	0x72, 0xc6, 0x39, 0xc3, 0x75, 0x99, 0x75, 0xcd, 0xf3, 0x2d, 0xbc, 0x0c, 0xc4, 0x6a, 0xff, 0x60,
	0x49, 0x76, 0xd5, 0x4e, 0x9a, 0x88, 0xd1, 0xd3, 0x8a, 0xe8, 0x98, 0x59, 0x54, 0xc2, 0x14, 0xaf,
	0x7e, 0x48, 0x11, 0x2d, 0x4b, 0x29, 0x10, 0x3e, 0x64, 0x4d, 0xe5, 0x88, 0x48, 0x37, 0x6f, 0xfb,
	0x61, 0xbb, 0x36, 0x2f, 0x5e, 0xe7, 0xe9, 0x87, 0x33, 0x7c, 0xf8, 0x7c, 0xdc, 0x0a, 0x96, 0xd0,
	0x7d, 0x44, 0x39, 0x22, 0x7f, 0x8a, 0xe2, 0x3b, 0xd4, 0x1e, 0x5d, 0xbe, 0xc2, 0xda, 0x8f, 0xe1,
	0x03, 0x1d, 0xfd, 0x68, 0x56, 0xfa, 0x58, 0x5e, 0xc4, 0x71, 0x9e, 0x83, 0x60, 0xa1, 0x61, 0xb8,
	0x16, 0xfd, 0xb7, 0x52, 0xb6, 0x00, 0x3d, 0x26, 0xde, 0xb5, 0x63, 0xc1, 0x3f, 0x56, 0x92, 0xd1,
	0xba, 0xda, 0x7d, 0x4c, 0xff, 0x5d, 0xf1, 0x3d, 0xfe, 0x29, 0x8d, 0x6d, 0xce, 0xae, 0x2e, 0x45,
	0x55, 0xa0, 0xba, 0x8d, 0x65, 0xcf, 0xa2, 0x1f, 0x57, 0xb6, 0x11, 0xe9, 0xba, 0x63, 0x9b, 0xff,
	0x2e, 0xc9, 0x37, 0x88, 0xde, 0xad, 0xaf, 0xf4, 0x7f, 0x4a, 0xda, 0x45, 0x32, 0x33, 0x18, 0x71,
	0x62, 0xd3, 0xff, 0x2d, 0xc9, 0xa9, 0xb1, 0x57, 0x6f, 0x2b, 0xfd, 0x44, 0x49, 0x4e, 0xbc, 0x83,
	0xb4, 0xc1, 0xd2, 0x4f, 0x96, 0xe4, 0xf4, 0xc0, 0x3b, 0x2c, 0x7b, 0x34, 0x25, 0x07, 0xf4, 0x99,
	0x92, 0x5a, 0xbd, 0x73, 0x7a, 0x40, 0xe9, 0xa7, 0x4a, 0x6a, 0xf5, 0xee, 0xd1, 0xa8, 0x4a, 0x3f,
	0x5d, 0x92, 0x01, 0xe2, 0x40, 0x3d, 0xa5, 0xf4, 0xd9, 0x92, 0x0c, 0xcd, 0x3a, 0xda, 0x45, 0xe9,
	0x67, 0x4a, 0x72, 0xda, 0xe9, 0xec, 0x19, 0xa5, 0x9f, 0xcd, 0x98, 0x3e, 0xaf, 0x05, 0x94, 0x7e,
	0xae, 0xa4, 0x9d, 0xc3, 0xaf, 0x43, 0x0b, 0x03, 0x75, 0x8a, 0xd2, 0xcf, 0x77, 0xe7, 0x2a, 0xf5,
	0x71, 0xd2, 0x2f, 0x74, 0xe7, 0x9a, 0xd3, 0xee, 0x49, 0x9f, 0x53, 0x72, 0x55, 0x4e, 0x43, 0x23,
	0xfd, 0x62, 0x26, 0x64, 0xba, 0xb4, 0x3c, 0xd2, 0x2f, 0x95, 0x64, 0xc4, 0xda, 0xa5, 0xcb, 0x90,
	0x3e, 0x2f, 0x85, 0x7b, 0x4e, 0xc3, 0x1f, 0xfd, 0x72, 0x49, 0xae, 0x0e, 0xd9, 0x66, 0x37, 0xfa,
	0x95, 0x4c, 0x3e, 0xe0, 0xa1, 0xb7, 0xec, 0x99, 0xe8, 0xdd, 0xbc, 0xc4, 0xcc, 0xdb, 0x5b, 0x5b,
	0xf4, 0xab, 0x19, 0xbf, 0xcb, 0xa5, 0x4b, 0xc4, 0xff, 0x5a, 0xe6, 0xa0, 0x5d, 0x3a, 0xdb, 0xe8,
	0xd7, 0x4b, 0xf2, 0x0b, 0xd8, 0x00, 0x3d, 0x70, 0xf4, 0x1b, 0x59, 0x25, 0xe6, 0x77, 0x5e, 0xd1,
	0x6f, 0x2a, 0xd1, 0xde, 0xbb, 0x45, 0x89, 0x7e, 0x4b, 0x0a, 0x95, 0x2e, 0x9d, 0x88, 0xf4, 0xdb,
	0x4a, 0x38, 0xe5, 0x76, 0xe5, 0xd0, 0xef, 0x28, 0x99, 0x3f, 0xbf, 0x35, 0x87, 0x7e, 0x57, 0xd1,
	0x67, 0xdf, 0x6e, 0x1a, 0xfa, 0x42, 0x49, 0x7e, 0xc0, 0xec, 0xdf, 0x3f, 0x43, 0x9f, 0x28, 0xcb,
	0x60, 0x54, 0x34, 0xa6, 0x88, 0xd7, 0xef, 0x97, 0x97, 0xb5, 0xe3, 0x44, 0x4b, 0x43, 0x38, 0x6e,
	0x08, 0xa1, 0xaf, 0x28, 0xcb, 0xce, 0x92, 0xed, 0x14, 0xa1, 0x4f, 0x96, 0x3b, 0x15, 0x8f, 0x1a,
	0x14, 0x77, 0x76, 0x0e, 0x81, 0xe3, 0x36, 0x1a, 0xfa, 0xa3, 0xe5, 0x14, 0x74, 0xf4, 0xea, 0x7f,
	0xa0, 0xaf, 0x2c, 0xe7, 0xa1, 0xf6, 0xee, 0x8d, 0x12, 0xf4, 0x55, 0xe5, 0x34, 0xbd, 0xf6, 0xfe,
	0xc8, 0x4e, 0x5f, 0x5d, 0x56, 0x7d, 0xb6, 0xcf, 0x57, 0x60, 0xfa, 0x63, 0xd2, 0xf9, 0xf3, 0x3e,
	0xcf, 0xd2, 0x1f, 0xcf, 0x3d, 0x55, 0xf6, 0xfb, 0x2d, 0xfd, 0x89, 0x72, 0x1a, 0xbc, 0x5d, 0xbf,
	0x80, 0xd2, 0x9f, 0x2c, 0xa7, 0x57, 0xe2, 0xbe, 0xdf, 0x49, 0xe9, 0x4f, 0x95, 0xd3, 0x5c, 0xd4,
	0xff, 0xfb, 0x1a, 0x7d, 0x4d, 0x39, 0xcd, 0x45, 0xb9, 0xdf, 0x93, 0xe8, 0x6b, 0x25, 0x6b, 0xf6,
	0xfc, 0xe2, 0x44, 0x5f, 0x57, 0x4e, 0xeb, 0x6a, 0xbe, 0xce, 0xe9, 0xeb, 0xcb, 0xd3, 0x6f, 0x18,
	0x26, 0x87, 0xd5, 0xef, 0x5c, 0x70, 0x53, 0xcf, 0xf9, 0xf6, 0x45, 0xaf, 0xd3, 0xa6, 0x78, 0xa5,
	0x57, 0xc6, 0xe7, 0x99, 0x6b, 0x83, 0x0d, 0x86, 0xc4, 0xf7, 0x57, 0x75, 0x4e, 0x64, 0x5b, 0xd1,
	0x59, 0x30, 0x2c, 0xbe, 0xde, 0xaa, 0x04, 0xeb, 0x76, 0x83, 0x79, 0x2d, 0xfc, 0xa4, 0x9a, 0x33,
	0x99, 0xb6, 0x1a, 0xe4, 0x4c, 0x5e, 0xf5, 0x56, 0x8c, 0xd0, 0xdc, 0xa6, 0x63, 0xa0, 0xad, 0x93,
	0x9d, 0x93, 0x1b, 0x2e, 0xbe, 0xd7, 0xb9, 0x62, 0xe3, 0x03, 0x79, 0x92, 0x01, 0x14, 0x5f, 0xf6,
	0xea, 0x80, 0x3d, 0x1e, 0x71, 0x69, 0x41, 0x3e, 0x96, 0xf8, 0x44, 0x1a, 0x37, 0x51, 0xd0, 0xe2,
	0xf4, 0xf3, 0xc3, 0xe4, 0xa6, 0x05, 0xa5, 0xc4, 0x27, 0x8f, 0xfb, 0x31, 0x94, 0x00, 0x6f, 0x85,
	0x48, 0xe8, 0x4d, 0xa3, 0x7c, 0xaa, 0xbe, 0x8f, 0x5c, 0xe8, 0x4b, 0x1f, 0x77, 0x5d, 0xb8, 0x66,
	0xe4, 0xe7, 0xa0, 0xe2, 0x87, 0xc9, 0xf7, 0x0d, 0xbc, 0x0e, 0xfd, 0x1a, 0x4e, 0xb9, 0xe4, 0x26,
	0xb4, 0x60, 0x82, 0x07, 0xc9, 0xf7, 0x0e, 0xca, 0x00, 0x10, 0x89, 0x63, 0x01, 0x03, 0x18, 0x8f,
	0x92, 0xf2, 0x88, 0x68, 0x3d, 0x19, 0x6c, 0xf9, 0x55, 0x2f, 0xae, 0x54, 0xa3, 0x80, 0x95, 0xce,
	0xf5, 0x5d, 0x16, 0xbf, 0xe4, 0x5e, 0x6e, 0x39, 0x0e, 0x1d, 0x9b, 0x7e, 0x66, 0x98, 0x9c, 0xea,
	0xa2, 0x75, 0x01, 0xb0, 0x44, 0x4f, 0x49, 0x2f, 0x0a, 0x45, 0xe3, 0x0f, 0x90, 0xfb, 0xfb, 0x50,
	0x4b, 0x7a, 0xeb, 0x50, 0xdb, 0x90, 0x76, 0x89, 0xdc, 0x37, 0xd8, 0xea, 0x4e, 0xa5, 0x81, 0xca,
	0x2f, 0x92, 0xf3, 0x83, 0xad, 0x4d, 0x35, 0x36, 0x02, 0x50, 0x6d, 0x66, 0xd0, 0x45, 0xf3, 0x2c,
	0x84, 0x3f, 0x41, 0xcb, 0x3d, 0x8c, 0xd3, 0xb1, 0x86, 0xed, 0x7b, 0xae, 0xc0, 0xe1, 0xa0, 0xe9,
	0x37, 0x0e, 0x91, 0x13, 0x5d, 0x3b, 0x34, 0xa1, 0xe0, 0xe4, 0xf5, 0x68, 0x26, 0xd1, 0xae, 0x4e,
	0xcc, 0x19, 0x56, 0x5c, 0x93, 0x87, 0x01, 0xde, 0x4c, 0x65, 0x08, 0x30, 0xea, 0x6c, 0x17, 0x5b,
	0x0e, 0x46, 0xa0, 0xbe, 0x9f, 0xc9, 0xcc, 0x6f, 0x40, 0x41, 0x6a, 0xe2, 0x13, 0x37, 0xb3, 0xa2,
	0x89, 0xf5, 0x76, 0x13, 0x3c, 0x68, 0xfa, 0x9f, 0x0e, 0x92, 0x1b, 0x7a, 0x34, 0x9d, 0x89, 0xae,
	0x88, 0x41, 0xba, 0xd2, 0xc0, 0x15, 0xfa, 0xd2, 0xce, 0x33, 0xd3, 0xc1, 0xc6, 0x29, 0x38, 0x25,
	0x0f, 0xd4, 0x5e, 0xb4, 0x8f, 0xcd, 0x56, 0x75, 0x71, 0xa1, 0x8b, 0xdf, 0x5d, 0x78, 0xaa, 0xe3,
	0x46, 0x1f, 0x70, 0xdd, 0x3a, 0xef, 0x74, 0x06, 0x8d, 0xdc, 0x4f, 0xee, 0xed, 0xbd, 0x48, 0x50,
	0xc6, 0xed, 0x1b, 0x7a, 0xf4, 0xe0, 0x03, 0xa6, 0xef, 0x7f, 0x24, 0x3b, 0xc0, 0xb7, 0x79, 0x0b,
	0xd2, 0xe5, 0x39, 0x5e, 0x59, 0x7b, 0xd0, 0x26, 0xa9, 0x71, 0xc9, 0x85, 0xdc, 0xc9, 0x7b, 0x48,
	0x7a, 0x91, 0x47, 0x97, 0xf9, 0x82, 0x68, 0x76, 0xe9, 0x29, 0xbe, 0xe7, 0xd5, 0x3c, 0xcf, 0xa5,
	0x45, 0xc0, 0x8d, 0x77, 0x0d, 0x44, 0xba, 0xca, 0x20, 0x3b, 0x84, 0x6d, 0x7a, 0x70, 0x00, 0xdd,
	0xf0, 0x5e, 0xc6, 0x8c, 0x29, 0x88, 0x08, 0x8b, 0x81, 0x57, 0x46, 0xc6, 0x18, 0xd7, 0xaa, 0xe4,
	0xe1, 0xde, 0xcb, 0x2e, 0xfb, 0x8c, 0xbb, 0x15, 0xef, 0x28, 0x4d, 0x36, 0x94, 0x3f, 0x29, 0x1e,
	0x12, 0x79, 0xa3, 0x17, 0x93, 0x1a, 0xc0, 0x40, 0x6c, 0xc8, 0xe9, 0x64, 0x43, 0x27, 0xfa, 0xcb,
	0x8d, 0xc5, 0xd5, 0x36, 0x19, 0xf6, 0xd0, 0xed, 0x42, 0x60, 0xa3, 0x7d, 0xe9, 0xe1, 0x01, 0x54,
	0x2b, 0x9c, 0x68, 0x2e, 0xea, 0xfd, 0x39, 0xd2, 0xdf, 0x57, 0xaf, 0x42, 0x12, 0xe5, 0xad, 0x13,
	0x50, 0xe7, 0x17, 0x1a, 0x98, 0x6c, 0x68, 0xff, 0x6d, 0x70, 0x51, 0x0d, 0xdb, 0xf1, 0x17, 0x5b,
	0x86, 0x6f, 0xd1, 0xa3, 0xda, 0xbd, 0xe4, 0xee, 0x3e, 0xe7, 0x49, 0xa8, 0xe7, 0xa3, 0x7f, 0x7c,
	0x44, 0x35, 0x51, 0x3a, 0x7a, 0x1e, 0x67, 0x9b, 0x01, 0x76, 0x72, 0x5d, 0x4f, 0xdc, 0x38, 0x68,
	0x49, 0x7b, 0x11, 0xb9, 0xd8, 0x7b, 0x09, 0xa0, 0x6f, 0xfc, 0xb7, 0xbb, 0xab, 0x46, 0x10, 0xec,
	0x79, 0xbe, 0xa5, 0xf3, 0x27, 0x78, 0x5a, 0x16, 0x49, 0xb7, 0xd7, 0xc2, 0x8d, 0x00, 0xdf, 0x57,
	0xaf, 0xb2, 0x3d, 0x48, 0x11, 0xa8, 0x7a, 0x7a, 0x6c, 0x10, 0x2b, 0x71, 0xbb, 0x72, 0x24, 0x03,
	0xe5, 0xc1, 0xdb, 0xb1, 0x19, 0xbd, 0x7e, 0x6e, 0xec, 0xc5, 0x43, 0x4f, 0x0c, 0x5d, 0xf7, 0x7f,
	0x01, 0x00, 0x00, 0xff, 0xff, 0xbd, 0xf9, 0x86, 0x32, 0xdf, 0x3d, 0x00, 0x00,
}
