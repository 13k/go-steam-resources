// Code generated by protoc-gen-go.
// source: steammessages_video.steamclient.proto
// DO NOT EDIT!

package unified

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type CVideo_ClientGetVideoURL_Request struct {
	VideoId          *uint64 `protobuf:"varint,1,opt,name=video_id" json:"video_id,omitempty"`
	ClientCellid     *uint32 `protobuf:"varint,2,opt,name=client_cellid" json:"client_cellid,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CVideo_ClientGetVideoURL_Request) Reset()         { *m = CVideo_ClientGetVideoURL_Request{} }
func (m *CVideo_ClientGetVideoURL_Request) String() string { return proto.CompactTextString(m) }
func (*CVideo_ClientGetVideoURL_Request) ProtoMessage()    {}
func (*CVideo_ClientGetVideoURL_Request) Descriptor() ([]byte, []int) {
	return fileDescriptor17, []int{0}
}

func (m *CVideo_ClientGetVideoURL_Request) GetVideoId() uint64 {
	if m != nil && m.VideoId != nil {
		return *m.VideoId
	}
	return 0
}

func (m *CVideo_ClientGetVideoURL_Request) GetClientCellid() uint32 {
	if m != nil && m.ClientCellid != nil {
		return *m.ClientCellid
	}
	return 0
}

type CVideo_ClientGetVideoURL_Response struct {
	VideoId          *uint64 `protobuf:"varint,1,opt,name=video_id" json:"video_id,omitempty"`
	VideoUrl         *string `protobuf:"bytes,2,opt,name=video_url" json:"video_url,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CVideo_ClientGetVideoURL_Response) Reset()         { *m = CVideo_ClientGetVideoURL_Response{} }
func (m *CVideo_ClientGetVideoURL_Response) String() string { return proto.CompactTextString(m) }
func (*CVideo_ClientGetVideoURL_Response) ProtoMessage()    {}
func (*CVideo_ClientGetVideoURL_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor17, []int{1}
}

func (m *CVideo_ClientGetVideoURL_Response) GetVideoId() uint64 {
	if m != nil && m.VideoId != nil {
		return *m.VideoId
	}
	return 0
}

func (m *CVideo_ClientGetVideoURL_Response) GetVideoUrl() string {
	if m != nil && m.VideoUrl != nil {
		return *m.VideoUrl
	}
	return ""
}

type CVideo_UnlockedH264_Notification struct {
	EncryptionKey    []byte `protobuf:"bytes,1,opt,name=encryption_key" json:"encryption_key,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CVideo_UnlockedH264_Notification) Reset()         { *m = CVideo_UnlockedH264_Notification{} }
func (m *CVideo_UnlockedH264_Notification) String() string { return proto.CompactTextString(m) }
func (*CVideo_UnlockedH264_Notification) ProtoMessage()    {}
func (*CVideo_UnlockedH264_Notification) Descriptor() ([]byte, []int) {
	return fileDescriptor17, []int{2}
}

func (m *CVideo_UnlockedH264_Notification) GetEncryptionKey() []byte {
	if m != nil {
		return m.EncryptionKey
	}
	return nil
}

func init() {
	proto.RegisterType((*CVideo_ClientGetVideoURL_Request)(nil), "CVideo_ClientGetVideoURL_Request")
	proto.RegisterType((*CVideo_ClientGetVideoURL_Response)(nil), "CVideo_ClientGetVideoURL_Response")
	proto.RegisterType((*CVideo_UnlockedH264_Notification)(nil), "CVideo_UnlockedH264_Notification")
}

var fileDescriptor17 = []byte{
	// 420 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x84, 0x91, 0xc1, 0x6a, 0x14, 0x41,
	0x10, 0x86, 0xe9, 0x18, 0x21, 0xe9, 0x64, 0x85, 0xcc, 0x21, 0x2c, 0x73, 0x90, 0xca, 0x80, 0xe2,
	0x21, 0xce, 0x61, 0x10, 0x0f, 0x82, 0x1e, 0x66, 0x05, 0x15, 0x24, 0x87, 0x40, 0xbc, 0x36, 0x9d,
	0x99, 0x9a, 0x9d, 0x66, 0x67, 0xba, 0xd7, 0xee, 0x9e, 0xc8, 0x7a, 0x52, 0x4f, 0x9e, 0x7c, 0x04,
	0x5f, 0xc0, 0x73, 0xee, 0x3e, 0x9a, 0x35, 0xdd, 0xb0, 0xae, 0x2c, 0x66, 0x8f, 0x5d, 0xf5, 0x77,
	0xfd, 0xdf, 0x5f, 0xc5, 0x1f, 0x39, 0x8f, 0xb2, 0xef, 0xd1, 0x39, 0x39, 0x47, 0x27, 0x6e, 0x54,
	0x8d, 0x26, 0x0f, 0xb5, 0xaa, 0x53, 0xa8, 0x7d, 0xbe, 0xb4, 0xc6, 0x9b, 0xf4, 0xfc, 0x5f, 0xd9,
	0xa0, 0x55, 0xa3, 0xb0, 0x16, 0xd7, 0xd2, 0xe1, 0xb6, 0x3a, 0xfb, 0xca, 0x38, 0xcc, 0x3e, 0x8c,
	0xa3, 0xc4, 0x2c, 0xd4, 0xdf, 0xa0, 0x0f, 0xcf, 0xab, 0xcb, 0xf7, 0xe2, 0x12, 0x3f, 0x0e, 0xe8,
	0x7c, 0xf2, 0x90, 0x1f, 0x04, 0x37, 0xa1, 0xea, 0x29, 0x03, 0xf6, 0x64, 0xbf, 0x3c, 0xfe, 0x76,
	0x3b, 0x3d, 0x08, 0x3a, 0x78, 0xf7, 0x3a, 0x79, 0xc9, 0x27, 0x71, 0xa8, 0xa8, 0xb0, 0xeb, 0x48,
	0xb4, 0x47, 0xa2, 0x49, 0xf9, 0x98, 0x44, 0xd9, 0x8c, 0x2a, 0xa4, 0x01, 0xd3, 0x40, 0xd4, 0x9c,
	0xc3, 0x67, 0xb4, 0x06, 0x54, 0x03, 0x83, 0x5e, 0x68, 0xf3, 0x49, 0x67, 0x96, 0x9f, 0xdd, 0x81,
	0xe0, 0x96, 0x46, 0x3b, 0xdc, 0xc9, 0xf0, 0x94, 0x1f, 0xc6, 0xfe, 0x60, 0xbb, 0xe0, 0x7f, 0x58,
	0xa6, 0x24, 0x38, 0xa5, 0x21, 0xd0, 0x18, 0x0b, 0xa1, 0x09, 0xbd, 0xa4, 0x75, 0x50, 0xa4, 0xec,
	0xc5, 0x3a, 0xf6, 0x95, 0xee, 0x4c, 0xb5, 0xc0, 0xfa, 0x6d, 0xf1, 0xfc, 0x99, 0xb8, 0x30, 0x9e,
	0xd6, 0x55, 0x49, 0xaf, 0x8c, 0x4e, 0x4e, 0xf9, 0x03, 0xd4, 0x95, 0x5d, 0x2d, 0xc7, 0x97, 0x58,
	0xe0, 0x2a, 0x18, 0x1f, 0x17, 0xbf, 0x18, 0xbf, 0x1f, 0xfe, 0x26, 0x3f, 0x18, 0x3f, 0xd9, 0x62,
	0x4e, 0xce, 0xf2, 0x5d, 0x1b, 0x4d, 0xb3, 0x7c, 0x67, 0xe2, 0xac, 0x20, 0xfc, 0x9c, 0x3a, 0xe0,
	0x5b, 0x04, 0xa5, 0x95, 0x57, 0xb2, 0x83, 0x31, 0x8e, 0x37, 0x70, 0x8d, 0x73, 0xa5, 0xc1, 0x79,
	0x4b, 0xf7, 0x54, 0x7a, 0x0e, 0x32, 0xe6, 0x4b, 0x4f, 0xe8, 0xcf, 0x24, 0xee, 0xa4, 0x47, 0xdf,
	0x9a, 0xda, 0x15, 0x3f, 0x19, 0x3f, 0x0a, 0x95, 0x68, 0x95, 0x7c, 0x67, 0x3c, 0x09, 0x31, 0x57,
	0x9b, 0xc9, 0xff, 0x42, 0xff, 0x77, 0x1f, 0xe9, 0x51, 0x7e, 0x61, 0xd6, 0x74, 0x25, 0x39, 0xbd,
	0xda, 0x6c, 0x43, 0x63, 0x4d, 0x0f, 0x0e, 0xed, 0x0d, 0xda, 0x11, 0x31, 0x5e, 0x9b, 0xe0, 0xa5,
	0x87, 0x96, 0x66, 0x41, 0x2b, 0x1d, 0x71, 0xa3, 0xa6, 0xbb, 0x47, 0x87, 0x74, 0xff, 0xf7, 0xed,
	0x74, 0xaf, 0xbc, 0xf7, 0x85, 0xb1, 0x3f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x7f, 0xee, 0x0d, 0x92,
	0xdd, 0x02, 0x00, 0x00,
}
