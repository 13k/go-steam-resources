// Code generated by protoc-gen-go. DO NOT EDIT.
// source: steammessages_video.steamclient.proto

package unified

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type CVideo_ClientGetVideoURL_Request struct {
	VideoId          *uint64 `protobuf:"varint,1,opt,name=video_id,json=videoId" json:"video_id,omitempty"`
	ClientCellid     *uint32 `protobuf:"varint,2,opt,name=client_cellid,json=clientCellid" json:"client_cellid,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CVideo_ClientGetVideoURL_Request) Reset()         { *m = CVideo_ClientGetVideoURL_Request{} }
func (m *CVideo_ClientGetVideoURL_Request) String() string { return proto.CompactTextString(m) }
func (*CVideo_ClientGetVideoURL_Request) ProtoMessage()    {}
func (*CVideo_ClientGetVideoURL_Request) Descriptor() ([]byte, []int) {
	return fileDescriptor17, []int{0}
}

func (m *CVideo_ClientGetVideoURL_Request) GetVideoId() uint64 {
	if m != nil && m.VideoId != nil {
		return *m.VideoId
	}
	return 0
}

func (m *CVideo_ClientGetVideoURL_Request) GetClientCellid() uint32 {
	if m != nil && m.ClientCellid != nil {
		return *m.ClientCellid
	}
	return 0
}

type CVideo_ClientGetVideoURL_Response struct {
	VideoId          *uint64 `protobuf:"varint,1,opt,name=video_id,json=videoId" json:"video_id,omitempty"`
	VideoUrl         *string `protobuf:"bytes,2,opt,name=video_url,json=videoUrl" json:"video_url,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CVideo_ClientGetVideoURL_Response) Reset()         { *m = CVideo_ClientGetVideoURL_Response{} }
func (m *CVideo_ClientGetVideoURL_Response) String() string { return proto.CompactTextString(m) }
func (*CVideo_ClientGetVideoURL_Response) ProtoMessage()    {}
func (*CVideo_ClientGetVideoURL_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor17, []int{1}
}

func (m *CVideo_ClientGetVideoURL_Response) GetVideoId() uint64 {
	if m != nil && m.VideoId != nil {
		return *m.VideoId
	}
	return 0
}

func (m *CVideo_ClientGetVideoURL_Response) GetVideoUrl() string {
	if m != nil && m.VideoUrl != nil {
		return *m.VideoUrl
	}
	return ""
}

type CVideo_UnlockedH264_Notification struct {
	EncryptionKey    []byte `protobuf:"bytes,1,opt,name=encryption_key,json=encryptionKey" json:"encryption_key,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CVideo_UnlockedH264_Notification) Reset()         { *m = CVideo_UnlockedH264_Notification{} }
func (m *CVideo_UnlockedH264_Notification) String() string { return proto.CompactTextString(m) }
func (*CVideo_UnlockedH264_Notification) ProtoMessage()    {}
func (*CVideo_UnlockedH264_Notification) Descriptor() ([]byte, []int) {
	return fileDescriptor17, []int{2}
}

func (m *CVideo_UnlockedH264_Notification) GetEncryptionKey() []byte {
	if m != nil {
		return m.EncryptionKey
	}
	return nil
}

func init() {
	proto.RegisterType((*CVideo_ClientGetVideoURL_Request)(nil), "CVideo_ClientGetVideoURL_Request")
	proto.RegisterType((*CVideo_ClientGetVideoURL_Response)(nil), "CVideo_ClientGetVideoURL_Response")
	proto.RegisterType((*CVideo_UnlockedH264_Notification)(nil), "CVideo_UnlockedH264_Notification")
}

func init() { proto.RegisterFile("steammessages_video.steamclient.proto", fileDescriptor17) }

var fileDescriptor17 = []byte{
	// 452 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x52, 0x41, 0x6b, 0xd4, 0x40,
	0x18, 0x65, 0x6a, 0xc5, 0x76, 0xba, 0x2b, 0x34, 0x07, 0x09, 0x39, 0x7d, 0x0d, 0x54, 0x7b, 0x28,
	0x39, 0x84, 0x52, 0x6f, 0x1e, 0xb2, 0x85, 0xba, 0xb4, 0xf4, 0x10, 0x58, 0xaf, 0x61, 0x36, 0xf9,
	0xb2, 0x19, 0x76, 0x32, 0xb3, 0xce, 0x4c, 0x2a, 0xeb, 0x49, 0x02, 0x82, 0x27, 0xcf, 0x9e, 0xfc,
	0x03, 0x9e, 0x73, 0xf7, 0xa7, 0xc9, 0xce, 0x48, 0x5b, 0x29, 0xba, 0x1e, 0xbf, 0xef, 0xbd, 0xbc,
	0xef, 0xbd, 0x97, 0xa1, 0xc7, 0xc6, 0x22, 0x6b, 0x5b, 0x34, 0x86, 0x2d, 0xd0, 0x14, 0xb7, 0xbc,
	0x42, 0x95, 0xb8, 0x5d, 0x29, 0x38, 0x4a, 0x9b, 0xac, 0xb4, 0xb2, 0x2a, 0x3a, 0xfd, 0x93, 0xd6,
	0x49, 0x5e, 0x73, 0xac, 0x8a, 0x39, 0x33, 0xf8, 0x98, 0x1d, 0x7f, 0x23, 0x14, 0x26, 0xef, 0x36,
	0x52, 0xc5, 0xc4, 0xed, 0x2f, 0xd1, 0xba, 0x71, 0x96, 0x5f, 0x17, 0x39, 0xbe, 0xef, 0xd0, 0xd8,
	0xe0, 0x15, 0xdd, 0x73, 0xd7, 0x0a, 0x5e, 0x85, 0x04, 0xc8, 0xc9, 0x6e, 0x36, 0xea, 0x87, 0x70,
	0xcf, 0xf1, 0x60, 0x7a, 0x91, 0x3f, 0x73, 0xe8, 0xb4, 0x0a, 0xae, 0xe8, 0xd8, 0xab, 0x17, 0x25,
	0x0a, 0xc1, 0xab, 0x70, 0x07, 0xc8, 0xc9, 0x38, 0x7b, 0xd9, 0x0f, 0x61, 0x3c, 0x41, 0x21, 0x60,
	0x7a, 0x01, 0xaa, 0x06, 0xcf, 0x39, 0x85, 0x8f, 0xa8, 0x15, 0xf0, 0x1a, 0x3a, 0xb9, 0x94, 0xea,
	0x83, 0xcc, 0x47, 0x1e, 0x98, 0xb8, 0x6f, 0xe3, 0xcf, 0x84, 0x1e, 0xfd, 0xc3, 0x9a, 0x59, 0x29,
	0x69, 0xf0, 0xff, 0xbd, 0xbd, 0xa6, 0xfb, 0x9e, 0xd8, 0x69, 0xe1, 0x7c, 0xed, 0x67, 0x51, 0x3f,
	0x84, 0x2f, 0x66, 0xf9, 0x35, 0xd4, 0x4a, 0x83, 0x03, 0xa1, 0x65, 0x92, 0xd7, 0x68, 0x6c, 0xee,
	0x55, 0x67, 0x5a, 0xc4, 0xd3, 0xbb, 0x86, 0x66, 0x52, 0xa8, 0x72, 0x89, 0xd5, 0xdb, 0xf4, 0xfc,
	0xac, 0xb8, 0x51, 0x96, 0xd7, 0xbc, 0x64, 0x96, 0x2b, 0x19, 0x1c, 0xd3, 0xe7, 0x28, 0x4b, 0xbd,
	0x5e, 0x6d, 0xa6, 0x62, 0x89, 0x6b, 0xe7, 0x65, 0x94, 0x8f, 0xef, 0xb7, 0x57, 0xb8, 0x4e, 0x7f,
	0x10, 0xfa, 0xd4, 0x49, 0x05, 0x5f, 0x09, 0x3d, 0x7c, 0x94, 0x2a, 0x38, 0x4a, 0xb6, 0xfd, 0x8b,
	0x28, 0x4e, 0xb6, 0x76, 0x12, 0xa7, 0xfd, 0x10, 0x26, 0x97, 0x68, 0xc1, 0x36, 0x08, 0x5c, 0x72,
	0xcb, 0x99, 0x80, 0x4d, 0x4e, 0xab, 0x60, 0x8e, 0x0b, 0x2e, 0xc1, 0x58, 0x8d, 0xac, 0xe5, 0x72,
	0x01, 0xcc, 0x07, 0x8f, 0x0e, 0xfb, 0x21, 0x1c, 0xfb, 0xd6, 0x5a, 0xb4, 0x8d, 0xaa, 0x4c, 0xfa,
	0x9d, 0xd0, 0x03, 0xb7, 0xf1, 0xa7, 0x82, 0x2f, 0x84, 0x06, 0x2e, 0xf5, 0xfa, 0x61, 0x11, 0xf7,
	0xa6, 0xff, 0x5a, 0x4f, 0x74, 0x90, 0xdc, 0xa8, 0x3b, 0x77, 0x59, 0x3f, 0x84, 0x6f, 0x1e, 0xc2,
	0x50, 0x6b, 0xd5, 0x82, 0x41, 0x7d, 0x8b, 0x7a, 0x63, 0xd1, 0xbf, 0x02, 0xb0, 0x0d, 0xb3, 0xd0,
	0xa4, 0xe7, 0x67, 0xd0, 0x30, 0x03, 0x73, 0x44, 0x09, 0xdd, 0xef, 0x0b, 0xd1, 0xee, 0xcf, 0x21,
	0xdc, 0xc9, 0x9e, 0x7c, 0x22, 0xe4, 0x57, 0x00, 0x00, 0x00, 0xff, 0xff, 0x4a, 0x4c, 0x90, 0x4f,
	0x17, 0x03, 0x00, 0x00,
}
