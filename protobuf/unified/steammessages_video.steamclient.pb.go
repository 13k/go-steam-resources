// Code generated by protoc-gen-go. DO NOT EDIT.
// source: steammessages_video.steamclient.proto

package unified

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/golang/protobuf/protoc-gen-go/descriptor"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type CVideo_ClientGetVideoURL_Request struct {
	VideoId          *uint64 `protobuf:"varint,1,opt,name=video_id,json=videoId" json:"video_id,omitempty"`
	ClientCellid     *uint32 `protobuf:"varint,2,opt,name=client_cellid,json=clientCellid" json:"client_cellid,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CVideo_ClientGetVideoURL_Request) Reset()         { *m = CVideo_ClientGetVideoURL_Request{} }
func (m *CVideo_ClientGetVideoURL_Request) String() string { return proto.CompactTextString(m) }
func (*CVideo_ClientGetVideoURL_Request) ProtoMessage()    {}
func (*CVideo_ClientGetVideoURL_Request) Descriptor() ([]byte, []int) {
	return fileDescriptor18, []int{0}
}

func (m *CVideo_ClientGetVideoURL_Request) GetVideoId() uint64 {
	if m != nil && m.VideoId != nil {
		return *m.VideoId
	}
	return 0
}

func (m *CVideo_ClientGetVideoURL_Request) GetClientCellid() uint32 {
	if m != nil && m.ClientCellid != nil {
		return *m.ClientCellid
	}
	return 0
}

type CVideo_ClientGetVideoURL_Response struct {
	VideoId          *uint64 `protobuf:"varint,1,opt,name=video_id,json=videoId" json:"video_id,omitempty"`
	VideoUrl         *string `protobuf:"bytes,2,opt,name=video_url,json=videoUrl" json:"video_url,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CVideo_ClientGetVideoURL_Response) Reset()         { *m = CVideo_ClientGetVideoURL_Response{} }
func (m *CVideo_ClientGetVideoURL_Response) String() string { return proto.CompactTextString(m) }
func (*CVideo_ClientGetVideoURL_Response) ProtoMessage()    {}
func (*CVideo_ClientGetVideoURL_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor18, []int{1}
}

func (m *CVideo_ClientGetVideoURL_Response) GetVideoId() uint64 {
	if m != nil && m.VideoId != nil {
		return *m.VideoId
	}
	return 0
}

func (m *CVideo_ClientGetVideoURL_Response) GetVideoUrl() string {
	if m != nil && m.VideoUrl != nil {
		return *m.VideoUrl
	}
	return ""
}

type CVideo_UnlockedH264_Notification struct {
	EncryptionKey    []byte `protobuf:"bytes,1,opt,name=encryption_key,json=encryptionKey" json:"encryption_key,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CVideo_UnlockedH264_Notification) Reset()         { *m = CVideo_UnlockedH264_Notification{} }
func (m *CVideo_UnlockedH264_Notification) String() string { return proto.CompactTextString(m) }
func (*CVideo_UnlockedH264_Notification) ProtoMessage()    {}
func (*CVideo_UnlockedH264_Notification) Descriptor() ([]byte, []int) {
	return fileDescriptor18, []int{2}
}

func (m *CVideo_UnlockedH264_Notification) GetEncryptionKey() []byte {
	if m != nil {
		return m.EncryptionKey
	}
	return nil
}

func init() {
	proto.RegisterType((*CVideo_ClientGetVideoURL_Request)(nil), "CVideo_ClientGetVideoURL_Request")
	proto.RegisterType((*CVideo_ClientGetVideoURL_Response)(nil), "CVideo_ClientGetVideoURL_Response")
	proto.RegisterType((*CVideo_UnlockedH264_Notification)(nil), "CVideo_UnlockedH264_Notification")
}

func init() { proto.RegisterFile("steammessages_video.steamclient.proto", fileDescriptor18) }

var fileDescriptor18 = []byte{
	// 466 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x92, 0x3f, 0x6b, 0xdc, 0x40,
	0x10, 0xc5, 0x91, 0x71, 0x88, 0xbd, 0xbe, 0x0b, 0x58, 0x45, 0x10, 0xaa, 0xc6, 0x02, 0x27, 0x2e,
	0x8c, 0x0c, 0xc2, 0x38, 0x5d, 0x8a, 0x3b, 0x83, 0x73, 0xd8, 0xb8, 0x10, 0x5c, 0x5a, 0xb1, 0x27,
	0x8d, 0xa4, 0xe5, 0x56, 0x3b, 0x97, 0xdd, 0x95, 0xc3, 0xa5, 0x14, 0x04, 0x52, 0xa5, 0x4e, 0x95,
	0x2f, 0x90, 0x5a, 0x7d, 0x3e, 0x5a, 0xb8, 0x95, 0xb1, 0x1d, 0x4c, 0x62, 0x97, 0xf3, 0x47, 0x6f,
	0x7e, 0xef, 0x69, 0xd9, 0xa1, 0xb1, 0xc8, 0x9b, 0x06, 0x8d, 0xe1, 0x15, 0x9a, 0xec, 0x46, 0x14,
	0x48, 0xb1, 0xeb, 0xe5, 0x52, 0xa0, 0xb2, 0xf1, 0x4a, 0x93, 0xa5, 0x10, 0x2a, 0xa2, 0x4a, 0xe2,
	0x89, 0xab, 0x16, 0x6d, 0x79, 0x52, 0xa0, 0xc9, 0xb5, 0x58, 0x59, 0xd2, 0xb7, 0x1b, 0xc7, 0x7f,
	0x0b, 0xb5, 0x4a, 0x94, 0x02, 0x8b, 0x6c, 0xc1, 0x0d, 0x3e, 0xd6, 0x8b, 0x7e, 0x78, 0x0c, 0xa6,
	0x1f, 0x37, 0xc7, 0xb2, 0xa9, 0xeb, 0x5f, 0xa0, 0x75, 0xe5, 0x3c, 0xbd, 0xca, 0x52, 0xfc, 0xd4,
	0xa2, 0xb1, 0xfe, 0x5b, 0xb6, 0xe3, 0x78, 0x32, 0x51, 0x04, 0x1e, 0x78, 0x47, 0xdb, 0x93, 0x51,
	0xd7, 0x07, 0x3b, 0x6e, 0x0f, 0x66, 0xe7, 0xe9, 0x4b, 0x37, 0x9d, 0x15, 0xfe, 0x25, 0x1b, 0x0f,
	0xea, 0x59, 0x8e, 0x52, 0x8a, 0x22, 0xd8, 0x02, 0xef, 0x68, 0x3c, 0x79, 0xd3, 0xf5, 0x41, 0x34,
	0x45, 0x29, 0x61, 0x76, 0x0e, 0x54, 0xc2, 0xb0, 0x73, 0x0c, 0x5f, 0x50, 0x13, 0x88, 0x12, 0x5a,
	0xb5, 0x54, 0xf4, 0x59, 0xa5, 0xa3, 0x61, 0x30, 0x75, 0xdf, 0x46, 0x5f, 0x3d, 0x76, 0xf0, 0x1f,
	0x34, 0xb3, 0x22, 0x65, 0xf0, 0xf9, 0x6c, 0xef, 0xd8, 0xee, 0xb0, 0xd8, 0x6a, 0xe9, 0xb8, 0x76,
	0x27, 0x61, 0xd7, 0x07, 0xaf, 0xe7, 0xe9, 0x15, 0x94, 0xa4, 0xc1, 0x0d, 0xa1, 0xe1, 0x4a, 0x94,
	0x68, 0x6c, 0x3a, 0xa8, 0xce, 0xb5, 0x8c, 0x66, 0x77, 0x09, 0xcd, 0x95, 0xa4, 0x7c, 0x89, 0xc5,
	0x87, 0xe4, 0xec, 0x34, 0xbb, 0x26, 0x2b, 0x4a, 0x91, 0x73, 0x2b, 0x48, 0xf9, 0x87, 0xec, 0x15,
	0xaa, 0x5c, 0xaf, 0x57, 0x9b, 0x2a, 0x5b, 0xe2, 0xda, 0xb1, 0x8c, 0xd2, 0xf1, 0x7d, 0xf7, 0x12,
	0xd7, 0xc9, 0x2f, 0x8f, 0xbd, 0x70, 0x52, 0xfe, 0x77, 0x8f, 0xed, 0x3f, 0x72, 0xe5, 0x1f, 0xc4,
	0x4f, 0xfd, 0x8b, 0x30, 0x8a, 0x9f, 0xcc, 0x24, 0x4a, 0xba, 0x3e, 0x88, 0x2f, 0xd0, 0x82, 0xad,
	0x11, 0x84, 0x12, 0x56, 0x70, 0x09, 0x1b, 0x9f, 0x96, 0x60, 0x81, 0x95, 0x50, 0x60, 0xac, 0x46,
	0xde, 0x08, 0x55, 0x01, 0x1f, 0x8c, 0x87, 0xfb, 0x5d, 0x1f, 0x8c, 0x87, 0xd4, 0x1a, 0xb4, 0x35,
	0x15, 0x26, 0xf9, 0xe9, 0xb1, 0x3d, 0xd7, 0x19, 0x4e, 0xf9, 0xdf, 0x3c, 0xe6, 0x3b, 0xd7, 0xeb,
	0x87, 0x41, 0xdc, 0x43, 0xff, 0x33, 0x9e, 0x70, 0x2f, 0xbe, 0xa6, 0x3b, 0xba, 0x49, 0xd7, 0x07,
	0xef, 0x1f, 0x8e, 0xa1, 0xd4, 0xd4, 0x80, 0x41, 0x7d, 0x83, 0x7a, 0x83, 0x38, 0xbc, 0x02, 0xb0,
	0x35, 0xb7, 0x50, 0x27, 0x67, 0xa7, 0x50, 0x73, 0x03, 0x0b, 0x44, 0x05, 0xed, 0xed, 0x85, 0x70,
	0xfb, 0x77, 0x1f, 0x6c, 0xfd, 0x09, 0x00, 0x00, 0xff, 0xff, 0x3b, 0xc6, 0xa0, 0x3a, 0x34, 0x03,
	0x00, 0x00,
}
