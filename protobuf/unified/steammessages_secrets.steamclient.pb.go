// Code generated by protoc-gen-go. DO NOT EDIT.
// source: steammessages_secrets.steamclient.proto

package unified

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/golang/protobuf/protoc-gen-go/descriptor"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type EKeyEscrowUsage int32

const (
	EKeyEscrowUsage_k_EKeyEscrowUsageStreamingDevice EKeyEscrowUsage = 0
)

var EKeyEscrowUsage_name = map[int32]string{
	0: "k_EKeyEscrowUsageStreamingDevice",
}
var EKeyEscrowUsage_value = map[string]int32{
	"k_EKeyEscrowUsageStreamingDevice": 0,
}

func (x EKeyEscrowUsage) Enum() *EKeyEscrowUsage {
	p := new(EKeyEscrowUsage)
	*p = x
	return p
}
func (x EKeyEscrowUsage) String() string {
	return proto.EnumName(EKeyEscrowUsage_name, int32(x))
}
func (x *EKeyEscrowUsage) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EKeyEscrowUsage_value, data, "EKeyEscrowUsage")
	if err != nil {
		return err
	}
	*x = EKeyEscrowUsage(value)
	return nil
}
func (EKeyEscrowUsage) EnumDescriptor() ([]byte, []int) { return fileDescriptor16, []int{0} }

type CKeyEscrow_Request struct {
	RsaOaepShaTicket []byte           `protobuf:"bytes,1,opt,name=rsa_oaep_sha_ticket,json=rsaOaepShaTicket" json:"rsa_oaep_sha_ticket,omitempty"`
	Password         []byte           `protobuf:"bytes,2,opt,name=password" json:"password,omitempty"`
	Usage            *EKeyEscrowUsage `protobuf:"varint,3,opt,name=usage,enum=EKeyEscrowUsage,def=0" json:"usage,omitempty"`
	DeviceName       *string          `protobuf:"bytes,4,opt,name=device_name,json=deviceName" json:"device_name,omitempty"`
	XXX_unrecognized []byte           `json:"-"`
}

func (m *CKeyEscrow_Request) Reset()                    { *m = CKeyEscrow_Request{} }
func (m *CKeyEscrow_Request) String() string            { return proto.CompactTextString(m) }
func (*CKeyEscrow_Request) ProtoMessage()               {}
func (*CKeyEscrow_Request) Descriptor() ([]byte, []int) { return fileDescriptor16, []int{0} }

const Default_CKeyEscrow_Request_Usage EKeyEscrowUsage = EKeyEscrowUsage_k_EKeyEscrowUsageStreamingDevice

func (m *CKeyEscrow_Request) GetRsaOaepShaTicket() []byte {
	if m != nil {
		return m.RsaOaepShaTicket
	}
	return nil
}

func (m *CKeyEscrow_Request) GetPassword() []byte {
	if m != nil {
		return m.Password
	}
	return nil
}

func (m *CKeyEscrow_Request) GetUsage() EKeyEscrowUsage {
	if m != nil && m.Usage != nil {
		return *m.Usage
	}
	return Default_CKeyEscrow_Request_Usage
}

func (m *CKeyEscrow_Request) GetDeviceName() string {
	if m != nil && m.DeviceName != nil {
		return *m.DeviceName
	}
	return ""
}

type CKeyEscrow_Ticket struct {
	Password             []byte           `protobuf:"bytes,1,opt,name=password" json:"password,omitempty"`
	Identifier           *uint64          `protobuf:"varint,2,opt,name=identifier" json:"identifier,omitempty"`
	Payload              []byte           `protobuf:"bytes,3,opt,name=payload" json:"payload,omitempty"`
	Timestamp            *uint32          `protobuf:"varint,4,opt,name=timestamp" json:"timestamp,omitempty"`
	Usage                *EKeyEscrowUsage `protobuf:"varint,5,opt,name=usage,enum=EKeyEscrowUsage,def=0" json:"usage,omitempty"`
	DeviceName           *string          `protobuf:"bytes,6,opt,name=device_name,json=deviceName" json:"device_name,omitempty"`
	DeviceModel          *string          `protobuf:"bytes,7,opt,name=device_model,json=deviceModel" json:"device_model,omitempty"`
	DeviceSerial         *string          `protobuf:"bytes,8,opt,name=device_serial,json=deviceSerial" json:"device_serial,omitempty"`
	DeviceProvisioningId *uint32          `protobuf:"varint,9,opt,name=device_provisioning_id,json=deviceProvisioningId" json:"device_provisioning_id,omitempty"`
	XXX_unrecognized     []byte           `json:"-"`
}

func (m *CKeyEscrow_Ticket) Reset()                    { *m = CKeyEscrow_Ticket{} }
func (m *CKeyEscrow_Ticket) String() string            { return proto.CompactTextString(m) }
func (*CKeyEscrow_Ticket) ProtoMessage()               {}
func (*CKeyEscrow_Ticket) Descriptor() ([]byte, []int) { return fileDescriptor16, []int{1} }

const Default_CKeyEscrow_Ticket_Usage EKeyEscrowUsage = EKeyEscrowUsage_k_EKeyEscrowUsageStreamingDevice

func (m *CKeyEscrow_Ticket) GetPassword() []byte {
	if m != nil {
		return m.Password
	}
	return nil
}

func (m *CKeyEscrow_Ticket) GetIdentifier() uint64 {
	if m != nil && m.Identifier != nil {
		return *m.Identifier
	}
	return 0
}

func (m *CKeyEscrow_Ticket) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *CKeyEscrow_Ticket) GetTimestamp() uint32 {
	if m != nil && m.Timestamp != nil {
		return *m.Timestamp
	}
	return 0
}

func (m *CKeyEscrow_Ticket) GetUsage() EKeyEscrowUsage {
	if m != nil && m.Usage != nil {
		return *m.Usage
	}
	return Default_CKeyEscrow_Ticket_Usage
}

func (m *CKeyEscrow_Ticket) GetDeviceName() string {
	if m != nil && m.DeviceName != nil {
		return *m.DeviceName
	}
	return ""
}

func (m *CKeyEscrow_Ticket) GetDeviceModel() string {
	if m != nil && m.DeviceModel != nil {
		return *m.DeviceModel
	}
	return ""
}

func (m *CKeyEscrow_Ticket) GetDeviceSerial() string {
	if m != nil && m.DeviceSerial != nil {
		return *m.DeviceSerial
	}
	return ""
}

func (m *CKeyEscrow_Ticket) GetDeviceProvisioningId() uint32 {
	if m != nil && m.DeviceProvisioningId != nil {
		return *m.DeviceProvisioningId
	}
	return 0
}

type CKeyEscrow_Response struct {
	Ticket           *CKeyEscrow_Ticket `protobuf:"bytes,1,opt,name=ticket" json:"ticket,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *CKeyEscrow_Response) Reset()                    { *m = CKeyEscrow_Response{} }
func (m *CKeyEscrow_Response) String() string            { return proto.CompactTextString(m) }
func (*CKeyEscrow_Response) ProtoMessage()               {}
func (*CKeyEscrow_Response) Descriptor() ([]byte, []int) { return fileDescriptor16, []int{2} }

func (m *CKeyEscrow_Response) GetTicket() *CKeyEscrow_Ticket {
	if m != nil {
		return m.Ticket
	}
	return nil
}

func init() {
	proto.RegisterType((*CKeyEscrow_Request)(nil), "CKeyEscrow_Request")
	proto.RegisterType((*CKeyEscrow_Ticket)(nil), "CKeyEscrow_Ticket")
	proto.RegisterType((*CKeyEscrow_Response)(nil), "CKeyEscrow_Response")
	proto.RegisterEnum("EKeyEscrowUsage", EKeyEscrowUsage_name, EKeyEscrowUsage_value)
}

func init() { proto.RegisterFile("steammessages_secrets.steamclient.proto", fileDescriptor16) }

var fileDescriptor16 = []byte{
	// 533 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x93, 0xcf, 0x6e, 0xd3, 0x40,
	0x10, 0xc6, 0x71, 0x69, 0x9b, 0x66, 0x9b, 0x42, 0xd8, 0x54, 0xc8, 0x8a, 0x10, 0x2c, 0x01, 0x89,
	0xa8, 0xa2, 0xae, 0x14, 0x21, 0x90, 0x7a, 0x43, 0x6d, 0xa5, 0x22, 0xc4, 0x1f, 0xd9, 0x70, 0xb6,
	0xa6, 0xde, 0x89, 0xb3, 0x8a, 0xbd, 0x6b, 0x76, 0xd7, 0x29, 0xb9, 0xa1, 0xbe, 0x53, 0xdf, 0x01,
	0xf1, 0x34, 0x3c, 0x02, 0xf2, 0xc6, 0x4d, 0xd3, 0xa4, 0x12, 0x97, 0x1e, 0xe7, 0x9b, 0xdf, 0x8e,
	0xbf, 0x19, 0xcf, 0x90, 0x57, 0xc6, 0x22, 0xe4, 0x39, 0x1a, 0x03, 0x29, 0x9a, 0xd8, 0x60, 0xa2,
	0xd1, 0x9a, 0xc0, 0xa9, 0x49, 0x26, 0x50, 0xda, 0xa0, 0xd0, 0xca, 0xaa, 0x2e, 0x4b, 0x95, 0x4a,
	0x33, 0x3c, 0x70, 0xd1, 0x59, 0x39, 0x3c, 0xe0, 0x68, 0x12, 0x2d, 0x0a, 0xab, 0x74, 0x4d, 0xbc,
	0xbe, 0x59, 0xaa, 0x94, 0x62, 0x28, 0x90, 0xc7, 0x67, 0x60, 0x70, 0xb5, 0x5e, 0xef, 0x8f, 0x47,
	0xe8, 0xd1, 0x47, 0x9c, 0x9e, 0x98, 0x44, 0xab, 0xf3, 0x38, 0xc4, 0x1f, 0x25, 0x1a, 0x4b, 0xf7,
	0x49, 0x47, 0x1b, 0x88, 0x15, 0x60, 0x11, 0x9b, 0x11, 0xc4, 0x56, 0x24, 0x63, 0xb4, 0xbe, 0xc7,
	0xbc, 0x7e, 0x2b, 0x6c, 0x6b, 0x03, 0x5f, 0x00, 0x8b, 0x68, 0x04, 0xdf, 0x9c, 0x4e, 0xbb, 0x64,
	0xab, 0x00, 0x63, 0xce, 0x95, 0xe6, 0xfe, 0x9a, 0x63, 0xe6, 0x31, 0x3d, 0x25, 0x1b, 0x65, 0x65,
	0xc5, 0xbf, 0xcf, 0xbc, 0xfe, 0x83, 0x41, 0x3b, 0x38, 0x99, 0x7f, 0xee, 0x7b, 0xa5, 0x1f, 0xb2,
	0x71, 0xbc, 0x24, 0x45, 0x56, 0x23, 0xe4, 0x42, 0xa6, 0xc7, 0x38, 0x11, 0x09, 0x86, 0xb3, 0x02,
	0xf4, 0x19, 0xd9, 0xe6, 0x4e, 0x88, 0x25, 0xe4, 0xe8, 0xaf, 0x33, 0xaf, 0xdf, 0x0c, 0xc9, 0x4c,
	0xfa, 0x0c, 0x39, 0xf6, 0xfe, 0xae, 0x91, 0x47, 0x0b, 0xcd, 0xdc, 0x62, 0xce, 0x5b, 0x32, 0xf7,
	0x94, 0x10, 0xc1, 0x51, 0xda, 0x6a, 0x46, 0xda, 0x59, 0x5f, 0x0f, 0x17, 0x14, 0xea, 0x93, 0x46,
	0x01, 0xd3, 0x4c, 0x01, 0x77, 0xf6, 0x5b, 0xe1, 0x55, 0x48, 0x9f, 0x90, 0xa6, 0x15, 0x39, 0x1a,
	0x0b, 0x79, 0xe1, 0xac, 0xec, 0x84, 0xd7, 0xc2, 0x75, 0xd3, 0x1b, 0x77, 0xdc, 0xf4, 0xe6, 0x72,
	0xd3, 0xf4, 0x39, 0x69, 0xd5, 0x40, 0xae, 0x38, 0x66, 0x7e, 0xc3, 0x11, 0xf5, 0xa3, 0x4f, 0x95,
	0x44, 0x5f, 0x90, 0x9d, 0x1a, 0x31, 0xa8, 0x05, 0x64, 0xfe, 0x96, 0x63, 0xea, 0x77, 0x91, 0xd3,
	0xe8, 0x1b, 0xf2, 0xb8, 0x86, 0x0a, 0xad, 0x26, 0xc2, 0x08, 0x25, 0x85, 0x4c, 0x63, 0xc1, 0xfd,
	0xa6, 0xeb, 0x6e, 0x77, 0x96, 0xfd, 0xba, 0x90, 0xfc, 0xc0, 0x7b, 0xef, 0x49, 0xe7, 0xc6, 0xfa,
	0x98, 0x42, 0x49, 0x83, 0x74, 0x8f, 0x6c, 0x2e, 0xac, 0xcc, 0xf6, 0x80, 0x06, 0x2b, 0xff, 0x25,
	0xac, 0x89, 0xbd, 0x77, 0xe4, 0xe1, 0xd2, 0x28, 0xe8, 0x4b, 0xf2, 0xdf, 0xf9, 0xb4, 0xef, 0x0d,
	0x7e, 0x7b, 0xa4, 0x11, 0xcd, 0x2e, 0x85, 0xfe, 0xf2, 0x48, 0x73, 0xce, 0xd3, 0x4e, 0xb0, 0xba,
	0xd3, 0xdd, 0xdd, 0xe0, 0x16, 0xa7, 0xbd, 0xd3, 0x8b, 0x4b, 0xff, 0x38, 0x42, 0x5d, 0xd5, 0x64,
	0x56, 0xb1, 0x02, 0xf5, 0x50, 0xe9, 0x9c, 0x41, 0x69, 0x47, 0xd5, 0x1a, 0x24, 0x60, 0x91, 0xb3,
	0x31, 0x4e, 0xf7, 0xf1, 0x67, 0x32, 0x02, 0x99, 0x22, 0x13, 0x72, 0xa2, 0xb2, 0x89, 0x90, 0x29,
	0x8b, 0xaa, 0x7b, 0x62, 0x47, 0xee, 0xa0, 0xba, 0x87, 0x17, 0x97, 0xfe, 0xdb, 0xab, 0x4a, 0x43,
	0xa5, 0x19, 0x24, 0x09, 0x1a, 0x53, 0x71, 0x89, 0x46, 0xb7, 0x53, 0x90, 0x19, 0x06, 0x92, 0xb3,
	0xb4, 0x04, 0xcd, 0xab, 0x44, 0x7d, 0xe8, 0xff, 0x02, 0x00, 0x00, 0xff, 0xff, 0x2e, 0xd0, 0xd3,
	0x15, 0x00, 0x04, 0x00, 0x00,
}
