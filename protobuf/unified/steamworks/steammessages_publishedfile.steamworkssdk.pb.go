// Code generated by protoc-gen-go.
// source: steammessages_publishedfile.steamworkssdk.proto
// DO NOT EDIT!

package steamworks

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "."

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type CPublishedFile_Subscribe_Request struct {
	Publishedfileid  *uint64 `protobuf:"varint,1,opt,name=publishedfileid" json:"publishedfileid,omitempty"`
	ListType         *uint32 `protobuf:"varint,2,opt,name=list_type" json:"list_type,omitempty"`
	Appid            *int32  `protobuf:"varint,3,opt,name=appid" json:"appid,omitempty"`
	NotifyClient     *bool   `protobuf:"varint,4,opt,name=notify_client" json:"notify_client,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CPublishedFile_Subscribe_Request) Reset()         { *m = CPublishedFile_Subscribe_Request{} }
func (m *CPublishedFile_Subscribe_Request) String() string { return proto.CompactTextString(m) }
func (*CPublishedFile_Subscribe_Request) ProtoMessage()    {}
func (*CPublishedFile_Subscribe_Request) Descriptor() ([]byte, []int) {
	return fileDescriptor2, []int{0}
}

func (m *CPublishedFile_Subscribe_Request) GetPublishedfileid() uint64 {
	if m != nil && m.Publishedfileid != nil {
		return *m.Publishedfileid
	}
	return 0
}

func (m *CPublishedFile_Subscribe_Request) GetListType() uint32 {
	if m != nil && m.ListType != nil {
		return *m.ListType
	}
	return 0
}

func (m *CPublishedFile_Subscribe_Request) GetAppid() int32 {
	if m != nil && m.Appid != nil {
		return *m.Appid
	}
	return 0
}

func (m *CPublishedFile_Subscribe_Request) GetNotifyClient() bool {
	if m != nil && m.NotifyClient != nil {
		return *m.NotifyClient
	}
	return false
}

type CPublishedFile_Subscribe_Response struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CPublishedFile_Subscribe_Response) Reset()         { *m = CPublishedFile_Subscribe_Response{} }
func (m *CPublishedFile_Subscribe_Response) String() string { return proto.CompactTextString(m) }
func (*CPublishedFile_Subscribe_Response) ProtoMessage()    {}
func (*CPublishedFile_Subscribe_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor2, []int{1}
}

type CPublishedFile_Unsubscribe_Request struct {
	Publishedfileid  *uint64 `protobuf:"varint,1,opt,name=publishedfileid" json:"publishedfileid,omitempty"`
	ListType         *uint32 `protobuf:"varint,2,opt,name=list_type" json:"list_type,omitempty"`
	Appid            *int32  `protobuf:"varint,3,opt,name=appid" json:"appid,omitempty"`
	NotifyClient     *bool   `protobuf:"varint,4,opt,name=notify_client" json:"notify_client,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CPublishedFile_Unsubscribe_Request) Reset()         { *m = CPublishedFile_Unsubscribe_Request{} }
func (m *CPublishedFile_Unsubscribe_Request) String() string { return proto.CompactTextString(m) }
func (*CPublishedFile_Unsubscribe_Request) ProtoMessage()    {}
func (*CPublishedFile_Unsubscribe_Request) Descriptor() ([]byte, []int) {
	return fileDescriptor2, []int{2}
}

func (m *CPublishedFile_Unsubscribe_Request) GetPublishedfileid() uint64 {
	if m != nil && m.Publishedfileid != nil {
		return *m.Publishedfileid
	}
	return 0
}

func (m *CPublishedFile_Unsubscribe_Request) GetListType() uint32 {
	if m != nil && m.ListType != nil {
		return *m.ListType
	}
	return 0
}

func (m *CPublishedFile_Unsubscribe_Request) GetAppid() int32 {
	if m != nil && m.Appid != nil {
		return *m.Appid
	}
	return 0
}

func (m *CPublishedFile_Unsubscribe_Request) GetNotifyClient() bool {
	if m != nil && m.NotifyClient != nil {
		return *m.NotifyClient
	}
	return false
}

type CPublishedFile_Unsubscribe_Response struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CPublishedFile_Unsubscribe_Response) Reset()         { *m = CPublishedFile_Unsubscribe_Response{} }
func (m *CPublishedFile_Unsubscribe_Response) String() string { return proto.CompactTextString(m) }
func (*CPublishedFile_Unsubscribe_Response) ProtoMessage()    {}
func (*CPublishedFile_Unsubscribe_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor2, []int{3}
}

type CPublishedFile_Publish_Request struct {
	Appid                *uint32  `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	ConsumerAppid        *uint32  `protobuf:"varint,2,opt,name=consumer_appid" json:"consumer_appid,omitempty"`
	Cloudfilename        *string  `protobuf:"bytes,3,opt,name=cloudfilename" json:"cloudfilename,omitempty"`
	PreviewCloudfilename *string  `protobuf:"bytes,4,opt,name=preview_cloudfilename" json:"preview_cloudfilename,omitempty"`
	Title                *string  `protobuf:"bytes,5,opt,name=title" json:"title,omitempty"`
	FileDescription      *string  `protobuf:"bytes,6,opt,name=file_description" json:"file_description,omitempty"`
	FileType             *uint32  `protobuf:"varint,7,opt,name=file_type" json:"file_type,omitempty"`
	ConsumerShortcutName *string  `protobuf:"bytes,8,opt,name=consumer_shortcut_name" json:"consumer_shortcut_name,omitempty"`
	YoutubeUsername      *string  `protobuf:"bytes,9,opt,name=youtube_username" json:"youtube_username,omitempty"`
	YoutubeVideoid       *string  `protobuf:"bytes,10,opt,name=youtube_videoid" json:"youtube_videoid,omitempty"`
	Visibility           *uint32  `protobuf:"varint,11,opt,name=visibility" json:"visibility,omitempty"`
	RedirectUri          *string  `protobuf:"bytes,12,opt,name=redirect_uri" json:"redirect_uri,omitempty"`
	Tags                 []string `protobuf:"bytes,13,rep,name=tags" json:"tags,omitempty"`
	CollectionType       *string  `protobuf:"bytes,14,opt,name=collection_type" json:"collection_type,omitempty"`
	GameType             *string  `protobuf:"bytes,15,opt,name=game_type" json:"game_type,omitempty"`
	Url                  *string  `protobuf:"bytes,16,opt,name=url" json:"url,omitempty"`
	XXX_unrecognized     []byte   `json:"-"`
}

func (m *CPublishedFile_Publish_Request) Reset()                    { *m = CPublishedFile_Publish_Request{} }
func (m *CPublishedFile_Publish_Request) String() string            { return proto.CompactTextString(m) }
func (*CPublishedFile_Publish_Request) ProtoMessage()               {}
func (*CPublishedFile_Publish_Request) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{4} }

func (m *CPublishedFile_Publish_Request) GetAppid() uint32 {
	if m != nil && m.Appid != nil {
		return *m.Appid
	}
	return 0
}

func (m *CPublishedFile_Publish_Request) GetConsumerAppid() uint32 {
	if m != nil && m.ConsumerAppid != nil {
		return *m.ConsumerAppid
	}
	return 0
}

func (m *CPublishedFile_Publish_Request) GetCloudfilename() string {
	if m != nil && m.Cloudfilename != nil {
		return *m.Cloudfilename
	}
	return ""
}

func (m *CPublishedFile_Publish_Request) GetPreviewCloudfilename() string {
	if m != nil && m.PreviewCloudfilename != nil {
		return *m.PreviewCloudfilename
	}
	return ""
}

func (m *CPublishedFile_Publish_Request) GetTitle() string {
	if m != nil && m.Title != nil {
		return *m.Title
	}
	return ""
}

func (m *CPublishedFile_Publish_Request) GetFileDescription() string {
	if m != nil && m.FileDescription != nil {
		return *m.FileDescription
	}
	return ""
}

func (m *CPublishedFile_Publish_Request) GetFileType() uint32 {
	if m != nil && m.FileType != nil {
		return *m.FileType
	}
	return 0
}

func (m *CPublishedFile_Publish_Request) GetConsumerShortcutName() string {
	if m != nil && m.ConsumerShortcutName != nil {
		return *m.ConsumerShortcutName
	}
	return ""
}

func (m *CPublishedFile_Publish_Request) GetYoutubeUsername() string {
	if m != nil && m.YoutubeUsername != nil {
		return *m.YoutubeUsername
	}
	return ""
}

func (m *CPublishedFile_Publish_Request) GetYoutubeVideoid() string {
	if m != nil && m.YoutubeVideoid != nil {
		return *m.YoutubeVideoid
	}
	return ""
}

func (m *CPublishedFile_Publish_Request) GetVisibility() uint32 {
	if m != nil && m.Visibility != nil {
		return *m.Visibility
	}
	return 0
}

func (m *CPublishedFile_Publish_Request) GetRedirectUri() string {
	if m != nil && m.RedirectUri != nil {
		return *m.RedirectUri
	}
	return ""
}

func (m *CPublishedFile_Publish_Request) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *CPublishedFile_Publish_Request) GetCollectionType() string {
	if m != nil && m.CollectionType != nil {
		return *m.CollectionType
	}
	return ""
}

func (m *CPublishedFile_Publish_Request) GetGameType() string {
	if m != nil && m.GameType != nil {
		return *m.GameType
	}
	return ""
}

func (m *CPublishedFile_Publish_Request) GetUrl() string {
	if m != nil && m.Url != nil {
		return *m.Url
	}
	return ""
}

type CPublishedFile_Publish_Response struct {
	Publishedfileid  *uint64 `protobuf:"varint,1,opt,name=publishedfileid" json:"publishedfileid,omitempty"`
	RedirectUri      *string `protobuf:"bytes,2,opt,name=redirect_uri" json:"redirect_uri,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CPublishedFile_Publish_Response) Reset()                    { *m = CPublishedFile_Publish_Response{} }
func (m *CPublishedFile_Publish_Response) String() string            { return proto.CompactTextString(m) }
func (*CPublishedFile_Publish_Response) ProtoMessage()               {}
func (*CPublishedFile_Publish_Response) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{5} }

func (m *CPublishedFile_Publish_Response) GetPublishedfileid() uint64 {
	if m != nil && m.Publishedfileid != nil {
		return *m.Publishedfileid
	}
	return 0
}

func (m *CPublishedFile_Publish_Response) GetRedirectUri() string {
	if m != nil && m.RedirectUri != nil {
		return *m.RedirectUri
	}
	return ""
}

type CPublishedFile_GetDetails_Request struct {
	Publishedfileids          []uint64 `protobuf:"fixed64,1,rep,name=publishedfileids" json:"publishedfileids,omitempty"`
	Includetags               *bool    `protobuf:"varint,2,opt,name=includetags" json:"includetags,omitempty"`
	Includeadditionalpreviews *bool    `protobuf:"varint,3,opt,name=includeadditionalpreviews" json:"includeadditionalpreviews,omitempty"`
	Includechildren           *bool    `protobuf:"varint,4,opt,name=includechildren" json:"includechildren,omitempty"`
	Includekvtags             *bool    `protobuf:"varint,5,opt,name=includekvtags" json:"includekvtags,omitempty"`
	Includevotes              *bool    `protobuf:"varint,6,opt,name=includevotes" json:"includevotes,omitempty"`
	ShortDescription          *bool    `protobuf:"varint,8,opt,name=short_description" json:"short_description,omitempty"`
	XXX_unrecognized          []byte   `json:"-"`
}

func (m *CPublishedFile_GetDetails_Request) Reset()         { *m = CPublishedFile_GetDetails_Request{} }
func (m *CPublishedFile_GetDetails_Request) String() string { return proto.CompactTextString(m) }
func (*CPublishedFile_GetDetails_Request) ProtoMessage()    {}
func (*CPublishedFile_GetDetails_Request) Descriptor() ([]byte, []int) {
	return fileDescriptor2, []int{6}
}

func (m *CPublishedFile_GetDetails_Request) GetPublishedfileids() []uint64 {
	if m != nil {
		return m.Publishedfileids
	}
	return nil
}

func (m *CPublishedFile_GetDetails_Request) GetIncludetags() bool {
	if m != nil && m.Includetags != nil {
		return *m.Includetags
	}
	return false
}

func (m *CPublishedFile_GetDetails_Request) GetIncludeadditionalpreviews() bool {
	if m != nil && m.Includeadditionalpreviews != nil {
		return *m.Includeadditionalpreviews
	}
	return false
}

func (m *CPublishedFile_GetDetails_Request) GetIncludechildren() bool {
	if m != nil && m.Includechildren != nil {
		return *m.Includechildren
	}
	return false
}

func (m *CPublishedFile_GetDetails_Request) GetIncludekvtags() bool {
	if m != nil && m.Includekvtags != nil {
		return *m.Includekvtags
	}
	return false
}

func (m *CPublishedFile_GetDetails_Request) GetIncludevotes() bool {
	if m != nil && m.Includevotes != nil {
		return *m.Includevotes
	}
	return false
}

func (m *CPublishedFile_GetDetails_Request) GetShortDescription() bool {
	if m != nil && m.ShortDescription != nil {
		return *m.ShortDescription
	}
	return false
}

type PublishedFileDetails struct {
	Result                *uint32                         `protobuf:"varint,1,opt,name=result" json:"result,omitempty"`
	Publishedfileid       *uint64                         `protobuf:"varint,2,opt,name=publishedfileid" json:"publishedfileid,omitempty"`
	Creator               *uint64                         `protobuf:"fixed64,3,opt,name=creator" json:"creator,omitempty"`
	CreatorAppid          *uint32                         `protobuf:"varint,4,opt,name=creator_appid" json:"creator_appid,omitempty"`
	ConsumerAppid         *uint32                         `protobuf:"varint,5,opt,name=consumer_appid" json:"consumer_appid,omitempty"`
	ConsumerShortcutid    *uint32                         `protobuf:"varint,6,opt,name=consumer_shortcutid" json:"consumer_shortcutid,omitempty"`
	Filename              *string                         `protobuf:"bytes,7,opt,name=filename" json:"filename,omitempty"`
	FileSize              *uint64                         `protobuf:"varint,8,opt,name=file_size" json:"file_size,omitempty"`
	PreviewFileSize       *uint64                         `protobuf:"varint,9,opt,name=preview_file_size" json:"preview_file_size,omitempty"`
	FileUrl               *string                         `protobuf:"bytes,10,opt,name=file_url" json:"file_url,omitempty"`
	PreviewUrl            *string                         `protobuf:"bytes,11,opt,name=preview_url" json:"preview_url,omitempty"`
	Youtubevideoid        *string                         `protobuf:"bytes,12,opt,name=youtubevideoid" json:"youtubevideoid,omitempty"`
	Url                   *string                         `protobuf:"bytes,13,opt,name=url" json:"url,omitempty"`
	HcontentFile          *uint64                         `protobuf:"fixed64,14,opt,name=hcontent_file" json:"hcontent_file,omitempty"`
	HcontentPreview       *uint64                         `protobuf:"fixed64,15,opt,name=hcontent_preview" json:"hcontent_preview,omitempty"`
	Title                 *string                         `protobuf:"bytes,16,opt,name=title" json:"title,omitempty"`
	FileDescription       *string                         `protobuf:"bytes,17,opt,name=file_description" json:"file_description,omitempty"`
	ShortDescription      *string                         `protobuf:"bytes,18,opt,name=short_description" json:"short_description,omitempty"`
	TimeCreated           *uint32                         `protobuf:"varint,19,opt,name=time_created" json:"time_created,omitempty"`
	TimeUpdated           *uint32                         `protobuf:"varint,20,opt,name=time_updated" json:"time_updated,omitempty"`
	Visibility            *uint32                         `protobuf:"varint,21,opt,name=visibility" json:"visibility,omitempty"`
	Flags                 *uint32                         `protobuf:"varint,22,opt,name=flags" json:"flags,omitempty"`
	WorkshopFile          *bool                           `protobuf:"varint,23,opt,name=workshop_file" json:"workshop_file,omitempty"`
	WorkshopAccepted      *bool                           `protobuf:"varint,24,opt,name=workshop_accepted" json:"workshop_accepted,omitempty"`
	ShowSubscribeAll      *bool                           `protobuf:"varint,25,opt,name=show_subscribe_all" json:"show_subscribe_all,omitempty"`
	NumCommentsDeveloper  *int32                          `protobuf:"varint,26,opt,name=num_comments_developer" json:"num_comments_developer,omitempty"`
	NumCommentsPublic     *int32                          `protobuf:"varint,27,opt,name=num_comments_public" json:"num_comments_public,omitempty"`
	Banned                *bool                           `protobuf:"varint,28,opt,name=banned" json:"banned,omitempty"`
	BanReason             *string                         `protobuf:"bytes,29,opt,name=ban_reason" json:"ban_reason,omitempty"`
	Banner                *uint64                         `protobuf:"fixed64,30,opt,name=banner" json:"banner,omitempty"`
	CanBeDeleted          *bool                           `protobuf:"varint,31,opt,name=can_be_deleted" json:"can_be_deleted,omitempty"`
	Incompatible          *bool                           `protobuf:"varint,32,opt,name=incompatible" json:"incompatible,omitempty"`
	AppName               *string                         `protobuf:"bytes,33,opt,name=app_name" json:"app_name,omitempty"`
	FileType              *uint32                         `protobuf:"varint,34,opt,name=file_type" json:"file_type,omitempty"`
	CanSubscribe          *bool                           `protobuf:"varint,35,opt,name=can_subscribe" json:"can_subscribe,omitempty"`
	Subscriptions         *uint32                         `protobuf:"varint,36,opt,name=subscriptions" json:"subscriptions,omitempty"`
	Favorited             *uint32                         `protobuf:"varint,37,opt,name=favorited" json:"favorited,omitempty"`
	Followers             *uint32                         `protobuf:"varint,38,opt,name=followers" json:"followers,omitempty"`
	LifetimeSubscriptions *uint32                         `protobuf:"varint,39,opt,name=lifetime_subscriptions" json:"lifetime_subscriptions,omitempty"`
	LifetimeFavorited     *uint32                         `protobuf:"varint,40,opt,name=lifetime_favorited" json:"lifetime_favorited,omitempty"`
	LifetimeFollowers     *uint32                         `protobuf:"varint,41,opt,name=lifetime_followers" json:"lifetime_followers,omitempty"`
	Views                 *uint32                         `protobuf:"varint,42,opt,name=views" json:"views,omitempty"`
	ImageWidth            *uint32                         `protobuf:"varint,43,opt,name=image_width" json:"image_width,omitempty"`
	ImageHeight           *uint32                         `protobuf:"varint,44,opt,name=image_height" json:"image_height,omitempty"`
	ImageUrl              *string                         `protobuf:"bytes,45,opt,name=image_url" json:"image_url,omitempty"`
	SpoilerTag            *bool                           `protobuf:"varint,46,opt,name=spoiler_tag" json:"spoiler_tag,omitempty"`
	Shortcutid            *uint32                         `protobuf:"varint,47,opt,name=shortcutid" json:"shortcutid,omitempty"`
	Shortcutname          *string                         `protobuf:"bytes,48,opt,name=shortcutname" json:"shortcutname,omitempty"`
	NumChildren           *uint32                         `protobuf:"varint,49,opt,name=num_children" json:"num_children,omitempty"`
	NumReports            *uint32                         `protobuf:"varint,50,opt,name=num_reports" json:"num_reports,omitempty"`
	Previews              []*PublishedFileDetails_Preview `protobuf:"bytes,51,rep,name=previews" json:"previews,omitempty"`
	Tags                  []*PublishedFileDetails_Tag     `protobuf:"bytes,52,rep,name=tags" json:"tags,omitempty"`
	Children              []*PublishedFileDetails_Child   `protobuf:"bytes,53,rep,name=children" json:"children,omitempty"`
	Kvtags                []*PublishedFileDetails_KVTag   `protobuf:"bytes,54,rep,name=kvtags" json:"kvtags,omitempty"`
	VoteData              *PublishedFileDetails_VoteData  `protobuf:"bytes,55,opt,name=vote_data" json:"vote_data,omitempty"`
	TimeSubscribed        *uint32                         `protobuf:"varint,56,opt,name=time_subscribed" json:"time_subscribed,omitempty"`
	XXX_unrecognized      []byte                          `json:"-"`
}

func (m *PublishedFileDetails) Reset()                    { *m = PublishedFileDetails{} }
func (m *PublishedFileDetails) String() string            { return proto.CompactTextString(m) }
func (*PublishedFileDetails) ProtoMessage()               {}
func (*PublishedFileDetails) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{7} }

func (m *PublishedFileDetails) GetResult() uint32 {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return 0
}

func (m *PublishedFileDetails) GetPublishedfileid() uint64 {
	if m != nil && m.Publishedfileid != nil {
		return *m.Publishedfileid
	}
	return 0
}

func (m *PublishedFileDetails) GetCreator() uint64 {
	if m != nil && m.Creator != nil {
		return *m.Creator
	}
	return 0
}

func (m *PublishedFileDetails) GetCreatorAppid() uint32 {
	if m != nil && m.CreatorAppid != nil {
		return *m.CreatorAppid
	}
	return 0
}

func (m *PublishedFileDetails) GetConsumerAppid() uint32 {
	if m != nil && m.ConsumerAppid != nil {
		return *m.ConsumerAppid
	}
	return 0
}

func (m *PublishedFileDetails) GetConsumerShortcutid() uint32 {
	if m != nil && m.ConsumerShortcutid != nil {
		return *m.ConsumerShortcutid
	}
	return 0
}

func (m *PublishedFileDetails) GetFilename() string {
	if m != nil && m.Filename != nil {
		return *m.Filename
	}
	return ""
}

func (m *PublishedFileDetails) GetFileSize() uint64 {
	if m != nil && m.FileSize != nil {
		return *m.FileSize
	}
	return 0
}

func (m *PublishedFileDetails) GetPreviewFileSize() uint64 {
	if m != nil && m.PreviewFileSize != nil {
		return *m.PreviewFileSize
	}
	return 0
}

func (m *PublishedFileDetails) GetFileUrl() string {
	if m != nil && m.FileUrl != nil {
		return *m.FileUrl
	}
	return ""
}

func (m *PublishedFileDetails) GetPreviewUrl() string {
	if m != nil && m.PreviewUrl != nil {
		return *m.PreviewUrl
	}
	return ""
}

func (m *PublishedFileDetails) GetYoutubevideoid() string {
	if m != nil && m.Youtubevideoid != nil {
		return *m.Youtubevideoid
	}
	return ""
}

func (m *PublishedFileDetails) GetUrl() string {
	if m != nil && m.Url != nil {
		return *m.Url
	}
	return ""
}

func (m *PublishedFileDetails) GetHcontentFile() uint64 {
	if m != nil && m.HcontentFile != nil {
		return *m.HcontentFile
	}
	return 0
}

func (m *PublishedFileDetails) GetHcontentPreview() uint64 {
	if m != nil && m.HcontentPreview != nil {
		return *m.HcontentPreview
	}
	return 0
}

func (m *PublishedFileDetails) GetTitle() string {
	if m != nil && m.Title != nil {
		return *m.Title
	}
	return ""
}

func (m *PublishedFileDetails) GetFileDescription() string {
	if m != nil && m.FileDescription != nil {
		return *m.FileDescription
	}
	return ""
}

func (m *PublishedFileDetails) GetShortDescription() string {
	if m != nil && m.ShortDescription != nil {
		return *m.ShortDescription
	}
	return ""
}

func (m *PublishedFileDetails) GetTimeCreated() uint32 {
	if m != nil && m.TimeCreated != nil {
		return *m.TimeCreated
	}
	return 0
}

func (m *PublishedFileDetails) GetTimeUpdated() uint32 {
	if m != nil && m.TimeUpdated != nil {
		return *m.TimeUpdated
	}
	return 0
}

func (m *PublishedFileDetails) GetVisibility() uint32 {
	if m != nil && m.Visibility != nil {
		return *m.Visibility
	}
	return 0
}

func (m *PublishedFileDetails) GetFlags() uint32 {
	if m != nil && m.Flags != nil {
		return *m.Flags
	}
	return 0
}

func (m *PublishedFileDetails) GetWorkshopFile() bool {
	if m != nil && m.WorkshopFile != nil {
		return *m.WorkshopFile
	}
	return false
}

func (m *PublishedFileDetails) GetWorkshopAccepted() bool {
	if m != nil && m.WorkshopAccepted != nil {
		return *m.WorkshopAccepted
	}
	return false
}

func (m *PublishedFileDetails) GetShowSubscribeAll() bool {
	if m != nil && m.ShowSubscribeAll != nil {
		return *m.ShowSubscribeAll
	}
	return false
}

func (m *PublishedFileDetails) GetNumCommentsDeveloper() int32 {
	if m != nil && m.NumCommentsDeveloper != nil {
		return *m.NumCommentsDeveloper
	}
	return 0
}

func (m *PublishedFileDetails) GetNumCommentsPublic() int32 {
	if m != nil && m.NumCommentsPublic != nil {
		return *m.NumCommentsPublic
	}
	return 0
}

func (m *PublishedFileDetails) GetBanned() bool {
	if m != nil && m.Banned != nil {
		return *m.Banned
	}
	return false
}

func (m *PublishedFileDetails) GetBanReason() string {
	if m != nil && m.BanReason != nil {
		return *m.BanReason
	}
	return ""
}

func (m *PublishedFileDetails) GetBanner() uint64 {
	if m != nil && m.Banner != nil {
		return *m.Banner
	}
	return 0
}

func (m *PublishedFileDetails) GetCanBeDeleted() bool {
	if m != nil && m.CanBeDeleted != nil {
		return *m.CanBeDeleted
	}
	return false
}

func (m *PublishedFileDetails) GetIncompatible() bool {
	if m != nil && m.Incompatible != nil {
		return *m.Incompatible
	}
	return false
}

func (m *PublishedFileDetails) GetAppName() string {
	if m != nil && m.AppName != nil {
		return *m.AppName
	}
	return ""
}

func (m *PublishedFileDetails) GetFileType() uint32 {
	if m != nil && m.FileType != nil {
		return *m.FileType
	}
	return 0
}

func (m *PublishedFileDetails) GetCanSubscribe() bool {
	if m != nil && m.CanSubscribe != nil {
		return *m.CanSubscribe
	}
	return false
}

func (m *PublishedFileDetails) GetSubscriptions() uint32 {
	if m != nil && m.Subscriptions != nil {
		return *m.Subscriptions
	}
	return 0
}

func (m *PublishedFileDetails) GetFavorited() uint32 {
	if m != nil && m.Favorited != nil {
		return *m.Favorited
	}
	return 0
}

func (m *PublishedFileDetails) GetFollowers() uint32 {
	if m != nil && m.Followers != nil {
		return *m.Followers
	}
	return 0
}

func (m *PublishedFileDetails) GetLifetimeSubscriptions() uint32 {
	if m != nil && m.LifetimeSubscriptions != nil {
		return *m.LifetimeSubscriptions
	}
	return 0
}

func (m *PublishedFileDetails) GetLifetimeFavorited() uint32 {
	if m != nil && m.LifetimeFavorited != nil {
		return *m.LifetimeFavorited
	}
	return 0
}

func (m *PublishedFileDetails) GetLifetimeFollowers() uint32 {
	if m != nil && m.LifetimeFollowers != nil {
		return *m.LifetimeFollowers
	}
	return 0
}

func (m *PublishedFileDetails) GetViews() uint32 {
	if m != nil && m.Views != nil {
		return *m.Views
	}
	return 0
}

func (m *PublishedFileDetails) GetImageWidth() uint32 {
	if m != nil && m.ImageWidth != nil {
		return *m.ImageWidth
	}
	return 0
}

func (m *PublishedFileDetails) GetImageHeight() uint32 {
	if m != nil && m.ImageHeight != nil {
		return *m.ImageHeight
	}
	return 0
}

func (m *PublishedFileDetails) GetImageUrl() string {
	if m != nil && m.ImageUrl != nil {
		return *m.ImageUrl
	}
	return ""
}

func (m *PublishedFileDetails) GetSpoilerTag() bool {
	if m != nil && m.SpoilerTag != nil {
		return *m.SpoilerTag
	}
	return false
}

func (m *PublishedFileDetails) GetShortcutid() uint32 {
	if m != nil && m.Shortcutid != nil {
		return *m.Shortcutid
	}
	return 0
}

func (m *PublishedFileDetails) GetShortcutname() string {
	if m != nil && m.Shortcutname != nil {
		return *m.Shortcutname
	}
	return ""
}

func (m *PublishedFileDetails) GetNumChildren() uint32 {
	if m != nil && m.NumChildren != nil {
		return *m.NumChildren
	}
	return 0
}

func (m *PublishedFileDetails) GetNumReports() uint32 {
	if m != nil && m.NumReports != nil {
		return *m.NumReports
	}
	return 0
}

func (m *PublishedFileDetails) GetPreviews() []*PublishedFileDetails_Preview {
	if m != nil {
		return m.Previews
	}
	return nil
}

func (m *PublishedFileDetails) GetTags() []*PublishedFileDetails_Tag {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *PublishedFileDetails) GetChildren() []*PublishedFileDetails_Child {
	if m != nil {
		return m.Children
	}
	return nil
}

func (m *PublishedFileDetails) GetKvtags() []*PublishedFileDetails_KVTag {
	if m != nil {
		return m.Kvtags
	}
	return nil
}

func (m *PublishedFileDetails) GetVoteData() *PublishedFileDetails_VoteData {
	if m != nil {
		return m.VoteData
	}
	return nil
}

func (m *PublishedFileDetails) GetTimeSubscribed() uint32 {
	if m != nil && m.TimeSubscribed != nil {
		return *m.TimeSubscribed
	}
	return 0
}

type PublishedFileDetails_Tag struct {
	Tag              *string `protobuf:"bytes,1,opt,name=tag" json:"tag,omitempty"`
	Adminonly        *bool   `protobuf:"varint,2,opt,name=adminonly" json:"adminonly,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *PublishedFileDetails_Tag) Reset()                    { *m = PublishedFileDetails_Tag{} }
func (m *PublishedFileDetails_Tag) String() string            { return proto.CompactTextString(m) }
func (*PublishedFileDetails_Tag) ProtoMessage()               {}
func (*PublishedFileDetails_Tag) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{7, 0} }

func (m *PublishedFileDetails_Tag) GetTag() string {
	if m != nil && m.Tag != nil {
		return *m.Tag
	}
	return ""
}

func (m *PublishedFileDetails_Tag) GetAdminonly() bool {
	if m != nil && m.Adminonly != nil {
		return *m.Adminonly
	}
	return false
}

type PublishedFileDetails_Preview struct {
	Previewid        *uint64 `protobuf:"varint,1,opt,name=previewid" json:"previewid,omitempty"`
	Sortorder        *uint32 `protobuf:"varint,2,opt,name=sortorder" json:"sortorder,omitempty"`
	Url              *string `protobuf:"bytes,3,opt,name=url" json:"url,omitempty"`
	Size             *uint32 `protobuf:"varint,4,opt,name=size" json:"size,omitempty"`
	Filename         *string `protobuf:"bytes,5,opt,name=filename" json:"filename,omitempty"`
	Youtubevideoid   *string `protobuf:"bytes,6,opt,name=youtubevideoid" json:"youtubevideoid,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *PublishedFileDetails_Preview) Reset()                    { *m = PublishedFileDetails_Preview{} }
func (m *PublishedFileDetails_Preview) String() string            { return proto.CompactTextString(m) }
func (*PublishedFileDetails_Preview) ProtoMessage()               {}
func (*PublishedFileDetails_Preview) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{7, 1} }

func (m *PublishedFileDetails_Preview) GetPreviewid() uint64 {
	if m != nil && m.Previewid != nil {
		return *m.Previewid
	}
	return 0
}

func (m *PublishedFileDetails_Preview) GetSortorder() uint32 {
	if m != nil && m.Sortorder != nil {
		return *m.Sortorder
	}
	return 0
}

func (m *PublishedFileDetails_Preview) GetUrl() string {
	if m != nil && m.Url != nil {
		return *m.Url
	}
	return ""
}

func (m *PublishedFileDetails_Preview) GetSize() uint32 {
	if m != nil && m.Size != nil {
		return *m.Size
	}
	return 0
}

func (m *PublishedFileDetails_Preview) GetFilename() string {
	if m != nil && m.Filename != nil {
		return *m.Filename
	}
	return ""
}

func (m *PublishedFileDetails_Preview) GetYoutubevideoid() string {
	if m != nil && m.Youtubevideoid != nil {
		return *m.Youtubevideoid
	}
	return ""
}

type PublishedFileDetails_Child struct {
	Publishedfileid  *uint64 `protobuf:"varint,1,opt,name=publishedfileid" json:"publishedfileid,omitempty"`
	Sortorder        *uint32 `protobuf:"varint,2,opt,name=sortorder" json:"sortorder,omitempty"`
	FileType         *uint32 `protobuf:"varint,3,opt,name=file_type" json:"file_type,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *PublishedFileDetails_Child) Reset()                    { *m = PublishedFileDetails_Child{} }
func (m *PublishedFileDetails_Child) String() string            { return proto.CompactTextString(m) }
func (*PublishedFileDetails_Child) ProtoMessage()               {}
func (*PublishedFileDetails_Child) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{7, 2} }

func (m *PublishedFileDetails_Child) GetPublishedfileid() uint64 {
	if m != nil && m.Publishedfileid != nil {
		return *m.Publishedfileid
	}
	return 0
}

func (m *PublishedFileDetails_Child) GetSortorder() uint32 {
	if m != nil && m.Sortorder != nil {
		return *m.Sortorder
	}
	return 0
}

func (m *PublishedFileDetails_Child) GetFileType() uint32 {
	if m != nil && m.FileType != nil {
		return *m.FileType
	}
	return 0
}

type PublishedFileDetails_KVTag struct {
	Key              *string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Value            *string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *PublishedFileDetails_KVTag) Reset()                    { *m = PublishedFileDetails_KVTag{} }
func (m *PublishedFileDetails_KVTag) String() string            { return proto.CompactTextString(m) }
func (*PublishedFileDetails_KVTag) ProtoMessage()               {}
func (*PublishedFileDetails_KVTag) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{7, 3} }

func (m *PublishedFileDetails_KVTag) GetKey() string {
	if m != nil && m.Key != nil {
		return *m.Key
	}
	return ""
}

func (m *PublishedFileDetails_KVTag) GetValue() string {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return ""
}

type PublishedFileDetails_VoteData struct {
	Score            *float32 `protobuf:"fixed32,1,opt,name=score" json:"score,omitempty"`
	VotesUp          *uint32  `protobuf:"varint,2,opt,name=votes_up" json:"votes_up,omitempty"`
	VotesDown        *uint32  `protobuf:"varint,3,opt,name=votes_down" json:"votes_down,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *PublishedFileDetails_VoteData) Reset()         { *m = PublishedFileDetails_VoteData{} }
func (m *PublishedFileDetails_VoteData) String() string { return proto.CompactTextString(m) }
func (*PublishedFileDetails_VoteData) ProtoMessage()    {}
func (*PublishedFileDetails_VoteData) Descriptor() ([]byte, []int) {
	return fileDescriptor2, []int{7, 4}
}

func (m *PublishedFileDetails_VoteData) GetScore() float32 {
	if m != nil && m.Score != nil {
		return *m.Score
	}
	return 0
}

func (m *PublishedFileDetails_VoteData) GetVotesUp() uint32 {
	if m != nil && m.VotesUp != nil {
		return *m.VotesUp
	}
	return 0
}

func (m *PublishedFileDetails_VoteData) GetVotesDown() uint32 {
	if m != nil && m.VotesDown != nil {
		return *m.VotesDown
	}
	return 0
}

type CPublishedFile_GetDetails_Response struct {
	Publishedfiledetails []*PublishedFileDetails `protobuf:"bytes,1,rep,name=publishedfiledetails" json:"publishedfiledetails,omitempty"`
	XXX_unrecognized     []byte                  `json:"-"`
}

func (m *CPublishedFile_GetDetails_Response) Reset()         { *m = CPublishedFile_GetDetails_Response{} }
func (m *CPublishedFile_GetDetails_Response) String() string { return proto.CompactTextString(m) }
func (*CPublishedFile_GetDetails_Response) ProtoMessage()    {}
func (*CPublishedFile_GetDetails_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor2, []int{8}
}

func (m *CPublishedFile_GetDetails_Response) GetPublishedfiledetails() []*PublishedFileDetails {
	if m != nil {
		return m.Publishedfiledetails
	}
	return nil
}

type CPublishedFile_GetUserFiles_Request struct {
	Appid            *uint32  `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	Page             *uint32  `protobuf:"varint,3,opt,name=page,def=1" json:"page,omitempty"`
	Numperpage       *uint32  `protobuf:"varint,4,opt,name=numperpage,def=1" json:"numperpage,omitempty"`
	Sortmethod       *string  `protobuf:"bytes,6,opt,name=sortmethod,def=lastupdated" json:"sortmethod,omitempty"`
	Totalonly        *bool    `protobuf:"varint,7,opt,name=totalonly" json:"totalonly,omitempty"`
	Privacy          *uint32  `protobuf:"varint,9,opt,name=privacy" json:"privacy,omitempty"`
	IdsOnly          *bool    `protobuf:"varint,10,opt,name=ids_only" json:"ids_only,omitempty"`
	Requiredtags     []string `protobuf:"bytes,11,rep,name=requiredtags" json:"requiredtags,omitempty"`
	Excludedtags     []string `protobuf:"bytes,12,rep,name=excludedtags" json:"excludedtags,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CPublishedFile_GetUserFiles_Request) Reset()         { *m = CPublishedFile_GetUserFiles_Request{} }
func (m *CPublishedFile_GetUserFiles_Request) String() string { return proto.CompactTextString(m) }
func (*CPublishedFile_GetUserFiles_Request) ProtoMessage()    {}
func (*CPublishedFile_GetUserFiles_Request) Descriptor() ([]byte, []int) {
	return fileDescriptor2, []int{9}
}

const Default_CPublishedFile_GetUserFiles_Request_Page uint32 = 1
const Default_CPublishedFile_GetUserFiles_Request_Numperpage uint32 = 1
const Default_CPublishedFile_GetUserFiles_Request_Sortmethod string = "lastupdated"

func (m *CPublishedFile_GetUserFiles_Request) GetAppid() uint32 {
	if m != nil && m.Appid != nil {
		return *m.Appid
	}
	return 0
}

func (m *CPublishedFile_GetUserFiles_Request) GetPage() uint32 {
	if m != nil && m.Page != nil {
		return *m.Page
	}
	return Default_CPublishedFile_GetUserFiles_Request_Page
}

func (m *CPublishedFile_GetUserFiles_Request) GetNumperpage() uint32 {
	if m != nil && m.Numperpage != nil {
		return *m.Numperpage
	}
	return Default_CPublishedFile_GetUserFiles_Request_Numperpage
}

func (m *CPublishedFile_GetUserFiles_Request) GetSortmethod() string {
	if m != nil && m.Sortmethod != nil {
		return *m.Sortmethod
	}
	return Default_CPublishedFile_GetUserFiles_Request_Sortmethod
}

func (m *CPublishedFile_GetUserFiles_Request) GetTotalonly() bool {
	if m != nil && m.Totalonly != nil {
		return *m.Totalonly
	}
	return false
}

func (m *CPublishedFile_GetUserFiles_Request) GetPrivacy() uint32 {
	if m != nil && m.Privacy != nil {
		return *m.Privacy
	}
	return 0
}

func (m *CPublishedFile_GetUserFiles_Request) GetIdsOnly() bool {
	if m != nil && m.IdsOnly != nil {
		return *m.IdsOnly
	}
	return false
}

func (m *CPublishedFile_GetUserFiles_Request) GetRequiredtags() []string {
	if m != nil {
		return m.Requiredtags
	}
	return nil
}

func (m *CPublishedFile_GetUserFiles_Request) GetExcludedtags() []string {
	if m != nil {
		return m.Excludedtags
	}
	return nil
}

type CPublishedFile_GetUserFiles_Response struct {
	Total                *uint32                                     `protobuf:"varint,1,opt,name=total" json:"total,omitempty"`
	Startindex           *uint32                                     `protobuf:"varint,2,opt,name=startindex" json:"startindex,omitempty"`
	Publishedfiledetails []*PublishedFileDetails                     `protobuf:"bytes,3,rep,name=publishedfiledetails" json:"publishedfiledetails,omitempty"`
	Apps                 []*CPublishedFile_GetUserFiles_Response_App `protobuf:"bytes,4,rep,name=apps" json:"apps,omitempty"`
	XXX_unrecognized     []byte                                      `json:"-"`
}

func (m *CPublishedFile_GetUserFiles_Response) Reset()         { *m = CPublishedFile_GetUserFiles_Response{} }
func (m *CPublishedFile_GetUserFiles_Response) String() string { return proto.CompactTextString(m) }
func (*CPublishedFile_GetUserFiles_Response) ProtoMessage()    {}
func (*CPublishedFile_GetUserFiles_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor2, []int{10}
}

func (m *CPublishedFile_GetUserFiles_Response) GetTotal() uint32 {
	if m != nil && m.Total != nil {
		return *m.Total
	}
	return 0
}

func (m *CPublishedFile_GetUserFiles_Response) GetStartindex() uint32 {
	if m != nil && m.Startindex != nil {
		return *m.Startindex
	}
	return 0
}

func (m *CPublishedFile_GetUserFiles_Response) GetPublishedfiledetails() []*PublishedFileDetails {
	if m != nil {
		return m.Publishedfiledetails
	}
	return nil
}

func (m *CPublishedFile_GetUserFiles_Response) GetApps() []*CPublishedFile_GetUserFiles_Response_App {
	if m != nil {
		return m.Apps
	}
	return nil
}

type CPublishedFile_GetUserFiles_Response_App struct {
	Appid            *uint32 `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	Name             *string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Shortcutid       *uint32 `protobuf:"varint,3,opt,name=shortcutid" json:"shortcutid,omitempty"`
	Private          *bool   `protobuf:"varint,4,opt,name=private" json:"private,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CPublishedFile_GetUserFiles_Response_App) Reset() {
	*m = CPublishedFile_GetUserFiles_Response_App{}
}
func (m *CPublishedFile_GetUserFiles_Response_App) String() string { return proto.CompactTextString(m) }
func (*CPublishedFile_GetUserFiles_Response_App) ProtoMessage()    {}
func (*CPublishedFile_GetUserFiles_Response_App) Descriptor() ([]byte, []int) {
	return fileDescriptor2, []int{10, 0}
}

func (m *CPublishedFile_GetUserFiles_Response_App) GetAppid() uint32 {
	if m != nil && m.Appid != nil {
		return *m.Appid
	}
	return 0
}

func (m *CPublishedFile_GetUserFiles_Response_App) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *CPublishedFile_GetUserFiles_Response_App) GetShortcutid() uint32 {
	if m != nil && m.Shortcutid != nil {
		return *m.Shortcutid
	}
	return 0
}

func (m *CPublishedFile_GetUserFiles_Response_App) GetPrivate() bool {
	if m != nil && m.Private != nil {
		return *m.Private
	}
	return false
}

type CPublishedFile_Update_Request struct {
	Appid            *uint32  `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	Publishedfileid  *uint64  `protobuf:"fixed64,2,opt,name=publishedfileid" json:"publishedfileid,omitempty"`
	Title            *string  `protobuf:"bytes,3,opt,name=title" json:"title,omitempty"`
	FileDescription  *string  `protobuf:"bytes,4,opt,name=file_description" json:"file_description,omitempty"`
	Visibility       *uint32  `protobuf:"varint,5,opt,name=visibility" json:"visibility,omitempty"`
	Tags             []string `protobuf:"bytes,6,rep,name=tags" json:"tags,omitempty"`
	Filename         *string  `protobuf:"bytes,7,opt,name=filename" json:"filename,omitempty"`
	PreviewFilename  *string  `protobuf:"bytes,8,opt,name=preview_filename" json:"preview_filename,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CPublishedFile_Update_Request) Reset()                    { *m = CPublishedFile_Update_Request{} }
func (m *CPublishedFile_Update_Request) String() string            { return proto.CompactTextString(m) }
func (*CPublishedFile_Update_Request) ProtoMessage()               {}
func (*CPublishedFile_Update_Request) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{11} }

func (m *CPublishedFile_Update_Request) GetAppid() uint32 {
	if m != nil && m.Appid != nil {
		return *m.Appid
	}
	return 0
}

func (m *CPublishedFile_Update_Request) GetPublishedfileid() uint64 {
	if m != nil && m.Publishedfileid != nil {
		return *m.Publishedfileid
	}
	return 0
}

func (m *CPublishedFile_Update_Request) GetTitle() string {
	if m != nil && m.Title != nil {
		return *m.Title
	}
	return ""
}

func (m *CPublishedFile_Update_Request) GetFileDescription() string {
	if m != nil && m.FileDescription != nil {
		return *m.FileDescription
	}
	return ""
}

func (m *CPublishedFile_Update_Request) GetVisibility() uint32 {
	if m != nil && m.Visibility != nil {
		return *m.Visibility
	}
	return 0
}

func (m *CPublishedFile_Update_Request) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *CPublishedFile_Update_Request) GetFilename() string {
	if m != nil && m.Filename != nil {
		return *m.Filename
	}
	return ""
}

func (m *CPublishedFile_Update_Request) GetPreviewFilename() string {
	if m != nil && m.PreviewFilename != nil {
		return *m.PreviewFilename
	}
	return ""
}

type CPublishedFile_Update_Response struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CPublishedFile_Update_Response) Reset()                    { *m = CPublishedFile_Update_Response{} }
func (m *CPublishedFile_Update_Response) String() string            { return proto.CompactTextString(m) }
func (*CPublishedFile_Update_Response) ProtoMessage()               {}
func (*CPublishedFile_Update_Response) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{12} }

type CPublishedFile_RefreshVotingQueue_Request struct {
	Appid            *uint32  `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	MatchingFileType *uint32  `protobuf:"varint,2,opt,name=matching_file_type" json:"matching_file_type,omitempty"`
	Tags             []string `protobuf:"bytes,3,rep,name=tags" json:"tags,omitempty"`
	MatchAllTags     *bool    `protobuf:"varint,4,opt,name=match_all_tags,def=1" json:"match_all_tags,omitempty"`
	ExcludedTags     []string `protobuf:"bytes,5,rep,name=excluded_tags" json:"excluded_tags,omitempty"`
	DesiredQueueSize *uint32  `protobuf:"varint,6,opt,name=desired_queue_size" json:"desired_queue_size,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CPublishedFile_RefreshVotingQueue_Request) Reset() {
	*m = CPublishedFile_RefreshVotingQueue_Request{}
}
func (m *CPublishedFile_RefreshVotingQueue_Request) String() string { return proto.CompactTextString(m) }
func (*CPublishedFile_RefreshVotingQueue_Request) ProtoMessage()    {}
func (*CPublishedFile_RefreshVotingQueue_Request) Descriptor() ([]byte, []int) {
	return fileDescriptor2, []int{13}
}

const Default_CPublishedFile_RefreshVotingQueue_Request_MatchAllTags bool = true

func (m *CPublishedFile_RefreshVotingQueue_Request) GetAppid() uint32 {
	if m != nil && m.Appid != nil {
		return *m.Appid
	}
	return 0
}

func (m *CPublishedFile_RefreshVotingQueue_Request) GetMatchingFileType() uint32 {
	if m != nil && m.MatchingFileType != nil {
		return *m.MatchingFileType
	}
	return 0
}

func (m *CPublishedFile_RefreshVotingQueue_Request) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *CPublishedFile_RefreshVotingQueue_Request) GetMatchAllTags() bool {
	if m != nil && m.MatchAllTags != nil {
		return *m.MatchAllTags
	}
	return Default_CPublishedFile_RefreshVotingQueue_Request_MatchAllTags
}

func (m *CPublishedFile_RefreshVotingQueue_Request) GetExcludedTags() []string {
	if m != nil {
		return m.ExcludedTags
	}
	return nil
}

func (m *CPublishedFile_RefreshVotingQueue_Request) GetDesiredQueueSize() uint32 {
	if m != nil && m.DesiredQueueSize != nil {
		return *m.DesiredQueueSize
	}
	return 0
}

type CPublishedFile_RefreshVotingQueue_Response struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CPublishedFile_RefreshVotingQueue_Response) Reset() {
	*m = CPublishedFile_RefreshVotingQueue_Response{}
}
func (m *CPublishedFile_RefreshVotingQueue_Response) String() string {
	return proto.CompactTextString(m)
}
func (*CPublishedFile_RefreshVotingQueue_Response) ProtoMessage() {}
func (*CPublishedFile_RefreshVotingQueue_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor2, []int{14}
}

func init() {
	proto.RegisterType((*CPublishedFile_Subscribe_Request)(nil), "CPublishedFile_Subscribe_Request")
	proto.RegisterType((*CPublishedFile_Subscribe_Response)(nil), "CPublishedFile_Subscribe_Response")
	proto.RegisterType((*CPublishedFile_Unsubscribe_Request)(nil), "CPublishedFile_Unsubscribe_Request")
	proto.RegisterType((*CPublishedFile_Unsubscribe_Response)(nil), "CPublishedFile_Unsubscribe_Response")
	proto.RegisterType((*CPublishedFile_Publish_Request)(nil), "CPublishedFile_Publish_Request")
	proto.RegisterType((*CPublishedFile_Publish_Response)(nil), "CPublishedFile_Publish_Response")
	proto.RegisterType((*CPublishedFile_GetDetails_Request)(nil), "CPublishedFile_GetDetails_Request")
	proto.RegisterType((*PublishedFileDetails)(nil), "PublishedFileDetails")
	proto.RegisterType((*PublishedFileDetails_Tag)(nil), "PublishedFileDetails.Tag")
	proto.RegisterType((*PublishedFileDetails_Preview)(nil), "PublishedFileDetails.Preview")
	proto.RegisterType((*PublishedFileDetails_Child)(nil), "PublishedFileDetails.Child")
	proto.RegisterType((*PublishedFileDetails_KVTag)(nil), "PublishedFileDetails.KVTag")
	proto.RegisterType((*PublishedFileDetails_VoteData)(nil), "PublishedFileDetails.VoteData")
	proto.RegisterType((*CPublishedFile_GetDetails_Response)(nil), "CPublishedFile_GetDetails_Response")
	proto.RegisterType((*CPublishedFile_GetUserFiles_Request)(nil), "CPublishedFile_GetUserFiles_Request")
	proto.RegisterType((*CPublishedFile_GetUserFiles_Response)(nil), "CPublishedFile_GetUserFiles_Response")
	proto.RegisterType((*CPublishedFile_GetUserFiles_Response_App)(nil), "CPublishedFile_GetUserFiles_Response.App")
	proto.RegisterType((*CPublishedFile_Update_Request)(nil), "CPublishedFile_Update_Request")
	proto.RegisterType((*CPublishedFile_Update_Response)(nil), "CPublishedFile_Update_Response")
	proto.RegisterType((*CPublishedFile_RefreshVotingQueue_Request)(nil), "CPublishedFile_RefreshVotingQueue_Request")
	proto.RegisterType((*CPublishedFile_RefreshVotingQueue_Response)(nil), "CPublishedFile_RefreshVotingQueue_Response")
}

var fileDescriptor2 = []byte{
	// 2893 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xbc, 0x59, 0xdd, 0x73, 0xd4, 0xc8,
	0x11, 0x2f, 0xe3, 0xf5, 0xb2, 0x1e, 0x7b, 0xb1, 0x99, 0x03, 0x4e, 0xec, 0x05, 0x10, 0x6b, 0x3e,
	0x6c, 0x30, 0x02, 0xcc, 0xe7, 0x71, 0x54, 0xdd, 0x61, 0x0c, 0x17, 0xe7, 0xf8, 0x30, 0xc6, 0x90,
	0x90, 0xbb, 0x8a, 0x4a, 0xbb, 0x9a, 0xf5, 0x2a, 0xd6, 0x4a, 0x8b, 0x46, 0x5a, 0xe3, 0x7b, 0xba,
	0x7c, 0x3d, 0xa4, 0xf2, 0x92, 0x97, 0x54, 0xe5, 0x1f, 0xc9, 0xd3, 0xfd, 0x0b, 0xa9, 0xca, 0xbf,
	0x94, 0xee, 0x9e, 0x91, 0x56, 0xd2, 0xae, 0x3f, 0x2a, 0x0f, 0x79, 0xb8, 0xc3, 0x3b, 0xd3, 0xf3,
	0x9b, 0x9e, 0xee, 0x9e, 0x5f, 0x77, 0x8f, 0xd8, 0x4d, 0x19, 0x0b, 0xa7, 0xd7, 0x13, 0x52, 0x3a,
	0xdb, 0x42, 0xda, 0xfd, 0xa4, 0xe5, 0x7b, 0xb2, 0x2b, 0xdc, 0x8e, 0xe7, 0x0b, 0x8b, 0xe6, 0x76,
	0xc3, 0x68, 0x47, 0x4a, 0x77, 0xc7, 0xea, 0x47, 0x61, 0x1c, 0x36, 0xac, 0xe2, 0x82, 0x24, 0xf0,
	0x3a, 0x9e, 0x70, 0xed, 0x96, 0x23, 0xc7, 0xca, 0x37, 0x63, 0x66, 0x3e, 0xdd, 0x48, 0x51, 0x9f,
	0x03, 0xaa, 0xfd, 0x36, 0x69, 0xc9, 0x76, 0xe4, 0xb5, 0x84, 0xbd, 0x29, 0x3e, 0x26, 0x42, 0xc6,
	0xfc, 0x73, 0x36, 0x57, 0xd8, 0xd8, 0x73, 0x8d, 0x09, 0x73, 0x62, 0xb1, 0xc2, 0x4f, 0xb2, 0x69,
	0x18, 0x8d, 0xed, 0x78, 0xaf, 0x2f, 0x8c, 0x63, 0x30, 0x54, 0xe7, 0x75, 0x36, 0xe5, 0xf4, 0xfb,
	0x20, 0x31, 0x09, 0x3f, 0xa7, 0xf8, 0x69, 0x56, 0x0f, 0xc2, 0xd8, 0xeb, 0xec, 0xd9, 0x6d, 0xdf,
	0x13, 0x41, 0x6c, 0x54, 0x60, 0xb8, 0xd6, 0x5c, 0x60, 0x17, 0x0f, 0xd8, 0x55, 0xf6, 0xc3, 0x40,
	0x8a, 0xe6, 0x80, 0x35, 0x4b, 0x42, 0xef, 0x02, 0xf9, 0x7f, 0x50, 0xee, 0x32, 0x5b, 0x38, 0x70,
	0x5f, 0xad, 0xde, 0xbf, 0x19, 0x3b, 0x5f, 0x92, 0xd3, 0xbf, 0x32, 0xdd, 0x1e, 0xa7, 0xfb, 0xa1,
	0x46, 0xf5, 0xd5, 0x1b, 0x7f, 0xfc, 0x97, 0xb1, 0xf4, 0xa4, 0xdf, 0x37, 0xd7, 0x5d, 0x33, 0xee,
	0x7a, 0xd2, 0x44, 0x7d, 0x4d, 0xf8, 0xb7, 0x25, 0xbc, 0x60, 0xdb, 0xcc, 0x8e, 0x61, 0x3e, 0xdf,
	0x7c, 0xfd, 0xd2, 0xe2, 0x4f, 0xd9, 0x89, 0x36, 0xec, 0x94, 0xf4, 0x44, 0x64, 0x2b, 0x18, 0x3a,
	0xc5, 0xea, 0x75, 0x80, 0xb9, 0x7a, 0x14, 0x98, 0xad, 0xd7, 0x16, 0xff, 0x8e, 0xd5, 0xdb, 0x7e,
	0x98, 0x90, 0x69, 0x02, 0xa7, 0x27, 0xe8, 0xe8, 0xd3, 0xab, 0x77, 0x01, 0xe3, 0xd6, 0x2b, 0xf8,
	0x6d, 0x86, 0x1d, 0x00, 0x11, 0x0a, 0x23, 0x0e, 0xd3, 0xd5, 0xa6, 0x17, 0xd0, 0x70, 0x22, 0x45,
	0x74, 0x55, 0x9a, 0x04, 0x61, 0xf1, 0xef, 0xd9, 0xe9, 0x7e, 0x24, 0x06, 0x9e, 0xd8, 0xb5, 0x8b,
	0xa0, 0x15, 0x02, 0x7d, 0x0c, 0xa0, 0x0f, 0xc7, 0x81, 0x02, 0x8a, 0xe9, 0x48, 0x1a, 0x1a, 0x6a,
	0x87, 0x93, 0x00, 0xad, 0x01, 0x2d, 0x7e, 0x8f, 0x4d, 0xc5, 0x5e, 0xec, 0x0b, 0x63, 0x8a, 0xc0,
	0xae, 0x00, 0x58, 0x73, 0x4b, 0x7c, 0x8a, 0x4d, 0x1a, 0x35, 0x3b, 0x61, 0x34, 0x06, 0xc0, 0xe2,
	0xcf, 0xd9, 0x3c, 0xfe, 0x61, 0xbb, 0x02, 0x1d, 0xd4, 0x8f, 0xbd, 0x30, 0x30, 0xaa, 0x84, 0xb0,
	0x0c, 0x08, 0x8b, 0x84, 0x90, 0x9b, 0xdb, 0x17, 0xe7, 0x05, 0x9b, 0x26, 0x1c, 0x0a, 0x97, 0xe3,
	0x64, 0xe8, 0x2f, 0x01, 0xe0, 0xde, 0xe2, 0xb3, 0x5f, 0xe3, 0x8d, 0xe9, 0x86, 0x7d, 0x74, 0xf1,
	0x16, 0xcc, 0x2e, 0x99, 0xf8, 0x7f, 0x3c, 0x63, 0x3a, 0x53, 0xb6, 0x9e, 0xc5, 0xd7, 0xd9, 0x99,
	0xcc, 0x77, 0x20, 0x11, 0xc5, 0xed, 0x24, 0xb6, 0xc9, 0x54, 0x35, 0xd2, 0x6d, 0x09, 0xa0, 0x2f,
	0xbf, 0xd5, 0x13, 0x26, 0x4e, 0xec, 0xab, 0xd8, 0x3a, 0x9b, 0xdf, 0x0b, 0x93, 0x38, 0x81, 0xd8,
	0x43, 0x6f, 0x10, 0xc8, 0x34, 0x81, 0xdc, 0x04, 0x90, 0xeb, 0x8b, 0xaf, 0xe9, 0x5c, 0x8e, 0xbf,
	0x64, 0xbe, 0x53, 0xce, 0xfa, 0x10, 0x26, 0x5b, 0x20, 0x6d, 0x3a, 0xed, 0x76, 0x98, 0x04, 0xb1,
	0x99, 0xae, 0xb2, 0xf8, 0x0f, 0x6c, 0x2e, 0x85, 0x1a, 0x78, 0xae, 0x08, 0x21, 0xa4, 0x18, 0x21,
	0x3d, 0x05, 0xa4, 0xaf, 0x73, 0x48, 0xef, 0x71, 0x16, 0xe3, 0x0b, 0x0e, 0xe9, 0x64, 0x80, 0xb4,
	0x46, 0xeb, 0x09, 0xe1, 0x56, 0x56, 0xf4, 0x0f, 0x13, 0x8c, 0x0d, 0x3c, 0xe9, 0xb5, 0x3c, 0xdf,
	0x8b, 0xf7, 0x8c, 0x19, 0xb2, 0x61, 0x0f, 0x90, 0xbd, 0xc5, 0x67, 0x9b, 0xa2, 0x17, 0xc6, 0xe2,
	0x6d, 0x1c, 0x46, 0x40, 0x4b, 0x85, 0x4b, 0xf3, 0x3e, 0x5b, 0x81, 0xdb, 0xa6, 0x7f, 0xa7, 0x11,
	0x54, 0xdc, 0xc3, 0x5c, 0xec, 0x47, 0xde, 0xc0, 0x89, 0xc5, 0xb2, 0xd9, 0x89, 0xe0, 0xc6, 0xba,
	0x72, 0x59, 0x49, 0xb4, 0x97, 0x4d, 0x11, 0xb7, 0xad, 0x25, 0xbe, 0xc3, 0x66, 0x23, 0xe1, 0x7a,
	0x91, 0x68, 0xc7, 0x76, 0x12, 0x79, 0xc6, 0x2c, 0x1d, 0xef, 0x1d, 0x28, 0xf1, 0x26, 0x77, 0xbc,
	0xf5, 0x8e, 0x29, 0x93, 0x7e, 0x1f, 0x2e, 0xbd, 0xbb, 0x4c, 0xdb, 0x44, 0x42, 0x26, 0x7e, 0x5c,
	0xbc, 0x3d, 0x3a, 0x3e, 0xc1, 0x08, 0x70, 0x56, 0xb8, 0x7f, 0xb0, 0x1d, 0x8c, 0x82, 0x93, 0x71,
	0xc1, 0xbb, 0xcd, 0x75, 0x8b, 0xaf, 0xb1, 0x4a, 0xec, 0x6c, 0x4b, 0xa3, 0x6e, 0x4e, 0xc2, 0x26,
	0xf7, 0x61, 0x93, 0x95, 0x27, 0x51, 0xe4, 0x28, 0xe5, 0x29, 0x72, 0x61, 0x16, 0x57, 0xc0, 0x6a,
	0x7f, 0x2f, 0x5d, 0x5a, 0x36, 0xdb, 0x07, 0x36, 0xd7, 0x0e, 0x7d, 0x1f, 0x34, 0x06, 0xed, 0x54,
	0xf8, 0x9d, 0x20, 0xad, 0xbf, 0x01, 0xc0, 0xc7, 0x39, 0xad, 0xd3, 0xa8, 0x1b, 0x4a, 0x8f, 0x33,
	0x51, 0x24, 0xe0, 0x46, 0x49, 0x60, 0x33, 0x69, 0xf1, 0x97, 0x6c, 0x7a, 0x1b, 0x1c, 0xaf, 0x40,
	0xe7, 0x08, 0xf4, 0x11, 0x80, 0xde, 0x1f, 0x03, 0x8a, 0x72, 0x87, 0xc1, 0x7d, 0xcf, 0x26, 0x93,
	0xc8, 0x37, 0xe6, 0x09, 0xe8, 0x15, 0x00, 0xfd, 0xaa, 0x68, 0x53, 0x8a, 0x8a, 0xe1, 0x02, 0x88,
	0x1c, 0x44, 0x5d, 0x56, 0xe3, 0x9e, 0xd4, 0x86, 0x7b, 0xa1, 0x0c, 0xe1, 0xc4, 0x34, 0x8b, 0x0c,
	0x00, 0x21, 0x61, 0x35, 0x37, 0xd8, 0x85, 0x7d, 0xd9, 0x54, 0x31, 0xee, 0xfe, 0x54, 0x7f, 0xaa,
	0xe4, 0x75, 0xe4, 0xc9, 0xe9, 0xe6, 0x9f, 0xa7, 0x46, 0xb2, 0xcc, 0xb7, 0x22, 0x5e, 0x13, 0xb1,
	0xe3, 0xf9, 0x32, 0xe3, 0xe8, 0x0d, 0x36, 0x5f, 0x02, 0x95, 0x80, 0x3a, 0xb9, 0x58, 0x55, 0x0e,
	0x7d, 0x2b, 0x62, 0x34, 0x4f, 0xc9, 0x2a, 0xeb, 0x2e, 0xf9, 0x35, 0x12, 0x31, 0x84, 0xe1, 0x40,
	0x00, 0xc1, 0x10, 0x28, 0xde, 0x0d, 0x8b, 0xbf, 0x61, 0x33, 0x5e, 0xd0, 0xf6, 0x13, 0x1c, 0x84,
	0xe8, 0x40, 0x65, 0x6a, 0x8a, 0x1b, 0xd1, 0x46, 0x51, 0x02, 0x16, 0x81, 0x85, 0x49, 0x14, 0x60,
	0x7c, 0x00, 0xd1, 0xc2, 0xa2, 0x9e, 0x43, 0xee, 0xd4, 0xa4, 0xab, 0x66, 0x61, 0x2f, 0x0d, 0x6b,
	0xf1, 0x36, 0x3b, 0xab, 0x21, 0x1d, 0xd7, 0xf5, 0x94, 0xc9, 0x35, 0x71, 0x4a, 0x62, 0xf4, 0x9a,
	0x8a, 0x96, 0xf2, 0x06, 0x5a, 0xe6, 0x68, 0x9b, 0xbc, 0x62, 0x73, 0x7a, 0x93, 0x76, 0xd7, 0xf3,
	0xdd, 0x48, 0x04, 0x2a, 0x21, 0xae, 0xde, 0x03, 0xe8, 0xdb, 0x65, 0xe8, 0x54, 0x66, 0x7f, 0xbc,
	0x4d, 0x56, 0xd7, 0x78, 0x3b, 0x03, 0xb2, 0xc4, 0x14, 0xa1, 0x7d, 0x05, 0x68, 0x0f, 0xca, 0x68,
	0x3b, 0x62, 0xcf, 0x1c, 0x38, 0x7e, 0x22, 0xd4, 0x9d, 0xd9, 0x17, 0xf3, 0x05, 0x9b, 0xd5, 0x98,
	0x03, 0xe0, 0x13, 0x49, 0x4c, 0x5f, 0x53, 0x9e, 0x2a, 0x43, 0xa2, 0x80, 0xe9, 0x3a, 0xb1, 0x73,
	0x90, 0x59, 0x4f, 0x12, 0x39, 0x17, 0x92, 0x47, 0x8d, 0x20, 0x7f, 0x09, 0x90, 0x6b, 0x65, 0x48,
	0xc7, 0x24, 0xf1, 0x42, 0x3e, 0xf1, 0x02, 0x2c, 0xab, 0xdc, 0x2c, 0xe5, 0x25, 0xbe, 0x9f, 0x9f,
	0xb7, 0x9a, 0x7f, 0x3d, 0xc1, 0x4e, 0x15, 0xa2, 0x50, 0x47, 0x20, 0x3f, 0xc1, 0xaa, 0x8a, 0x77,
	0x54, 0x79, 0x30, 0x2e, 0xbc, 0x8f, 0x51, 0x78, 0xcf, 0xb1, 0xe3, 0xed, 0x48, 0x38, 0x40, 0x9e,
	0xe4, 0xeb, 0x2a, 0x16, 0x2e, 0x7a, 0x40, 0x17, 0x06, 0x15, 0x02, 0x38, 0x33, 0x52, 0x30, 0x4c,
	0xd1, 0xf8, 0x17, 0xec, 0xb3, 0x91, 0x64, 0x04, 0x93, 0x55, 0x9a, 0x9c, 0x67, 0xb5, 0x2c, 0x8d,
	0x63, 0xda, 0x9b, 0xc6, 0xc2, 0x89, 0x32, 0xa1, 0xf4, 0x7e, 0x54, 0xe9, 0xaa, 0xc2, 0xcf, 0xb2,
	0x93, 0x69, 0xe2, 0x1f, 0x4e, 0x4d, 0xd3, 0x94, 0x5e, 0x6f, 0x23, 0x33, 0x50, 0x32, 0xe1, 0x9f,
	0xb1, 0x99, 0x54, 0x18, 0x07, 0x67, 0x68, 0x10, 0x74, 0xd3, 0xa9, 0x27, 0xcd, 0x3c, 0x44, 0xcd,
	0x7c, 0x46, 0x71, 0x4a, 0x9d, 0x7e, 0xc0, 0xb9, 0xba, 0xa0, 0x69, 0x0c, 0xec, 0x41, 0xfb, 0x10,
	0x11, 0x56, 0xb9, 0xc1, 0xe6, 0xb3, 0x61, 0x8d, 0x4c, 0x6c, 0x56, 0xc5, 0x82, 0x4e, 0xd5, 0x0c,
	0xc4, 0x49, 0x28, 0x38, 0x52, 0x0b, 0x9c, 0xa4, 0x99, 0xb3, 0xe3, 0x3c, 0xcd, 0x69, 0x0a, 0xc8,
	0x23, 0xf6, 0x80, 0x24, 0xc9, 0xa2, 0xc2, 0x35, 0x3e, 0x23, 0xb3, 0xa4, 0xa3, 0x49, 0xdf, 0xa5,
	0xd1, 0x53, 0x34, 0xca, 0x0b, 0x19, 0xee, 0x74, 0x5a, 0x54, 0x76, 0x7c, 0x0c, 0xef, 0x33, 0xf4,
	0x13, 0xce, 0xb0, 0xab, 0xcb, 0x02, 0x75, 0x86, 0xcf, 0x31, 0x9e, 0x50, 0x81, 0x6c, 0x18, 0x12,
	0xb3, 0xe8, 0x23, 0xa8, 0x41, 0x53, 0x0d, 0xc6, 0x61, 0x78, 0xd7, 0x1e, 0xd6, 0x98, 0x8e, 0xef,
	0x1b, 0x67, 0x69, 0xee, 0x3c, 0x3b, 0x13, 0x24, 0x3d, 0xbb, 0x1d, 0x42, 0x49, 0x0f, 0x94, 0x0a,
	0xea, 0x0f, 0x84, 0x1f, 0xf6, 0x45, 0x64, 0x34, 0xa8, 0x84, 0x05, 0xd7, 0x16, 0xe6, 0x55, 0x36,
	0x34, 0xbe, 0xa0, 0x49, 0x08, 0xb0, 0x96, 0x13, 0x40, 0xc4, 0x1b, 0xbf, 0x20, 0x30, 0xd0, 0x1e,
	0x7e, 0xdb, 0x70, 0x4e, 0x09, 0xa7, 0x3f, 0x47, 0xa7, 0x4f, 0x65, 0x22, 0xe3, 0x3c, 0x59, 0x14,
	0x63, 0x08, 0x64, 0x5a, 0x68, 0x44, 0x5f, 0xa0, 0x92, 0x17, 0x68, 0xed, 0x29, 0xba, 0x78, 0x61,
	0xaf, 0x0f, 0x24, 0xd2, 0x82, 0x53, 0x99, 0x34, 0x0a, 0xce, 0x87, 0x40, 0x53, 0x85, 0xcd, 0xc5,
	0x42, 0xf0, 0x50, 0xca, 0x69, 0xa6, 0x16, 0x41, 0xc8, 0xec, 0x78, 0xc6, 0x02, 0xad, 0x85, 0x61,
	0x3d, 0x44, 0xde, 0x90, 0xc6, 0x25, 0x92, 0x46, 0x00, 0x67, 0x10, 0x46, 0x1e, 0xee, 0x7d, 0x39,
	0x1b, 0x82, 0x9c, 0x17, 0xee, 0x8a, 0x48, 0x1a, 0x57, 0x68, 0x08, 0xec, 0xe2, 0x7b, 0x1d, 0x41,
	0x2e, 0x2a, 0xa2, 0x5c, 0xa5, 0x79, 0xb0, 0x69, 0x36, 0x3f, 0x84, 0x5b, 0x1c, 0x9d, 0xcb, 0x70,
	0x97, 0x52, 0x67, 0x2a, 0x52, 0xbd, 0x46, 0x3f, 0x21, 0x94, 0xbd, 0x1e, 0xa4, 0x27, 0x7b, 0xd7,
	0x73, 0xe3, 0xae, 0x71, 0x3d, 0x0d, 0x0d, 0x35, 0xd8, 0x15, 0xde, 0x76, 0x37, 0x36, 0x96, 0x53,
	0x25, 0xd5, 0x28, 0x86, 0xf3, 0x8d, 0xf4, 0x22, 0x40, 0xe6, 0x02, 0x6b, 0x44, 0x36, 0xb0, 0x9a,
	0x61, 0xa5, 0x4e, 0xc8, 0xdd, 0xc1, 0x9b, 0x29, 0x62, 0x3a, 0x46, 0xa6, 0xbc, 0x95, 0x06, 0x26,
	0xf9, 0x36, 0x25, 0xe3, 0xdb, 0xa9, 0x4a, 0x38, 0x0a, 0x69, 0x16, 0x16, 0x48, 0x63, 0x85, 0x06,
	0x6f, 0xb2, 0x5a, 0x96, 0x0e, 0xee, 0x40, 0xf2, 0x9a, 0x59, 0x39, 0x67, 0x8d, 0xe3, 0x1c, 0x6b,
	0x43, 0x49, 0xf1, 0xab, 0xba, 0x74, 0xb9, 0x4b, 0xc2, 0x67, 0xc7, 0x0b, 0x6f, 0x39, 0xdb, 0xfc,
	0x06, 0xab, 0x65, 0x0a, 0xdc, 0x23, 0xe1, 0x2f, 0xc6, 0x0b, 0x3f, 0x45, 0x29, 0x7e, 0x9d, 0x55,
	0x35, 0xd9, 0xdf, 0x3f, 0x48, 0xf8, 0xbb, 0xf7, 0x88, 0x7d, 0x9b, 0x4d, 0x23, 0x49, 0xdb, 0x48,
	0xd2, 0xc6, 0x03, 0x38, 0xc8, 0xcc, 0xca, 0xf9, 0xf1, 0xf2, 0xef, 0x41, 0x6c, 0x0d, 0xa4, 0x78,
	0xc4, 0xe6, 0xf2, 0x3e, 0x6f, 0x81, 0x53, 0x1f, 0x52, 0x9d, 0xf9, 0x01, 0xf8, 0xfa, 0xdd, 0xeb,
	0xc0, 0xa7, 0x34, 0xe2, 0xb9, 0xc8, 0xf9, 0x05, 0x24, 0x0b, 0x52, 0x3f, 0xd6, 0xc7, 0xf8, 0x37,
	0x54, 0x26, 0x81, 0x6b, 0x42, 0xeb, 0x07, 0xff, 0x41, 0x56, 0xf4, 0x47, 0x25, 0xd5, 0xbe, 0x66,
	0x1b, 0x2e, 0xa2, 0x6c, 0x5c, 0x66, 0x93, 0xa8, 0x2d, 0x30, 0x15, 0x7a, 0x71, 0x22, 0x0d, 0x73,
	0xc7, 0xed, 0x79, 0x41, 0x08, 0x3b, 0xaa, 0x0c, 0xdf, 0x88, 0xd9, 0xf1, 0xd4, 0xba, 0x30, 0xab,
	0xdd, 0x91, 0xef, 0x46, 0x25, 0x38, 0x2c, 0x8c, 0x5c, 0xb8, 0x6a, 0xaa, 0x1b, 0xd5, 0xd4, 0x47,
	0x0d, 0x19, 0x9f, 0x65, 0x15, 0x22, 0xd5, 0xca, 0x08, 0x29, 0x4f, 0xed, 0xc3, 0x9f, 0xd4, 0xe4,
	0x34, 0x9e, 0xb3, 0x29, 0x65, 0xf9, 0x83, 0xfa, 0xe0, 0xf2, 0xce, 0x85, 0x4b, 0x8a, 0xfb, 0xd7,
	0x1b, 0x0b, 0x6c, 0x4a, 0x39, 0x05, 0xb4, 0x82, 0x64, 0xac, 0x8f, 0x89, 0xd7, 0x01, 0xb3, 0xb2,
	0xaa, 0xa8, 0x1a, 0x5f, 0xb3, 0x5a, 0xe6, 0x09, 0x98, 0x92, 0xed, 0x30, 0x12, 0x24, 0x79, 0x0c,
	0x35, 0xa6, 0x8c, 0x0c, 0x84, 0xa9, 0x37, 0x41, 0xae, 0xa4, 0x11, 0x37, 0xdc, 0x0d, 0xd4, 0x2e,
	0xcd, 0x0f, 0x23, 0x2d, 0x7d, 0xa1, 0x22, 0xd3, 0x75, 0xde, 0x1d, 0x76, 0xaa, 0x70, 0x14, 0x9d,
	0xaf, 0xa9, 0x2c, 0x9b, 0x59, 0x39, 0x3d, 0x36, 0x44, 0x9a, 0x3f, 0x57, 0x47, 0xda, 0xf6, 0xbc,
	0xcb, 0xb3, 0x7a, 0xef, 0xab, 0x62, 0x4f, 0x4e, 0x4d, 0x62, 0xda, 0x4c, 0xe7, 0x2a, 0xba, 0x62,
	0xc1, 0x07, 0x95, 0x5d, 0x14, 0xf6, 0x2c, 0xfe, 0x88, 0x55, 0xb0, 0x5a, 0x55, 0xa7, 0x79, 0x34,
	0x71, 0x5b, 0xf5, 0x71, 0xb9, 0x2a, 0xf8, 0x6d, 0xec, 0x44, 0xaa, 0x8f, 0x00, 0x31, 0x6a, 0x95,
	0x54, 0x8a, 0x87, 0x62, 0x63, 0x83, 0x31, 0xb8, 0xb8, 0x40, 0xdd, 0x84, 0x50, 0x49, 0x11, 0x54,
	0x93, 0x99, 0x2b, 0xc8, 0xa1, 0x88, 0x00, 0xb9, 0x96, 0x88, 0xb0, 0xa4, 0xd0, 0xab, 0xa1, 0xcd,
	0x81, 0xdf, 0x84, 0xa9, 0x94, 0x84, 0x6a, 0x04, 0x3b, 0x07, 0x86, 0x9e, 0xed, 0x89, 0xb8, 0x1b,
	0xea, 0x78, 0x78, 0x34, 0xe3, 0x3b, 0x32, 0xd6, 0x49, 0x6b, 0xf5, 0x21, 0x60, 0xdf, 0xcd, 0x6b,
	0x17, 0x2a, 0xe5, 0xd4, 0x8a, 0xb4, 0x33, 0x87, 0x22, 0x26, 0x2b, 0x8d, 0xc8, 0xdb, 0xa0, 0xac,
	0xc7, 0xa6, 0xe3, 0x30, 0x76, 0x7c, 0x8a, 0xef, 0xe3, 0x54, 0x11, 0xbd, 0x07, 0xb0, 0xcd, 0x52,
	0xc1, 0x4f, 0xc5, 0x11, 0xca, 0x64, 0x15, 0x6d, 0x17, 0x35, 0x84, 0x85, 0xb9, 0x33, 0x28, 0x03,
	0x52, 0xc5, 0x2f, 0x21, 0x7b, 0xc8, 0xce, 0x9e, 0xea, 0x08, 0xc0, 0x1f, 0xd1, 0x9e, 0x05, 0x0e,
	0x39, 0x4e, 0x5d, 0x5d, 0x7b, 0x8f, 0x2a, 0x8a, 0xfa, 0xea, 0x35, 0xd8, 0xe8, 0xca, 0x62, 0x98,
	0x6d, 0x04, 0xfe, 0x8b, 0x01, 0xa9, 0xb5, 0x67, 0x6a, 0x39, 0x53, 0x8a, 0x18, 0xcf, 0x01, 0x7a,
	0x06, 0xac, 0x06, 0x05, 0xbb, 0x4d, 0x6a, 0x32, 0x52, 0xf3, 0x07, 0x58, 0xfd, 0x9b, 0xa3, 0xa8,
	0x59, 0x2a, 0xe9, 0x01, 0xe6, 0x08, 0xca, 0x76, 0xb1, 0xd3, 0xf8, 0x98, 0x40, 0xab, 0xe1, 0x12,
	0xcb, 0xcd, 0x50, 0xeb, 0xb7, 0x09, 0x7b, 0xbe, 0xca, 0xfb, 0x90, 0xfa, 0x3e, 0xc4, 0xe8, 0x25,
	0x32, 0x36, 0xa1, 0x75, 0xd6, 0x3d, 0x11, 0xda, 0xda, 0x29, 0xef, 0x0c, 0x6e, 0x18, 0x6e, 0x25,
	0xd2, 0x9d, 0x7c, 0x36, 0x2b, 0x3e, 0x51, 0xa5, 0xab, 0x76, 0x9a, 0xa5, 0x9d, 0xca, 0x4e, 0x28,
	0xed, 0xf4, 0xea, 0xf5, 0xd6, 0xff, 0xb4, 0x5b, 0xf3, 0xa7, 0x63, 0xec, 0xd2, 0xc1, 0xb7, 0x47,
	0xdf, 0x4d, 0xac, 0xb8, 0xd0, 0xbf, 0xba, 0x66, 0xc5, 0x6c, 0xa6, 0x42, 0xde, 0x15, 0x9f, 0xf4,
	0xc5, 0xdf, 0xef, 0xfa, 0x4e, 0x1e, 0x70, 0x7d, 0xf9, 0x03, 0x56, 0x81, 0x6b, 0x29, 0xe1, 0x5e,
	0xa0, 0xd0, 0x92, 0x75, 0x14, 0x65, 0x2c, 0xb8, 0xb7, 0x8d, 0x6f, 0xd9, 0x24, 0xfc, 0x33, 0x7c,
	0xda, 0x53, 0x7a, 0x01, 0x9d, 0x12, 0x79, 0x12, 0x6f, 0x95, 0x72, 0x2e, 0x5d, 0x5e, 0x2c, 0xaa,
	0xf5, 0x63, 0x82, 0x7e, 0xf6, 0xfb, 0x4f, 0x85, 0x9d, 0x2b, 0xbf, 0xfb, 0xd1, 0x3d, 0xca, 0xa8,
	0xe3, 0xcb, 0x22, 0x75, 0x50, 0x9c, 0xe6, 0xdf, 0xe1, 0x4a, 0x96, 0x6e, 0x41, 0xa5, 0x16, 0xd0,
	0x03, 0x00, 0xf6, 0x2d, 0x63, 0x6b, 0xfb, 0xea, 0xea, 0x1d, 0x00, 0xb9, 0xb9, 0x51, 0x0e, 0xc5,
	0xc2, 0x03, 0xda, 0xae, 0xb8, 0xea, 0x9a, 0xbe, 0xb7, 0x23, 0x4c, 0x75, 0xaf, 0x91, 0x86, 0x74,
	0xd9, 0xab, 0x1e, 0xf3, 0xe8, 0x41, 0x30, 0x1f, 0x14, 0xf4, 0x60, 0x36, 0xf6, 0x05, 0x05, 0x1f,
	0x04, 0x47, 0x6b, 0x64, 0xf5, 0x7c, 0x77, 0x1b, 0x60, 0x6e, 0xe4, 0x60, 0xd6, 0x72, 0x5d, 0xce,
	0x3e, 0x60, 0x6b, 0x85, 0x7a, 0x98, 0xba, 0x8d, 0xd5, 0x5b, 0x00, 0xb3, 0x5c, 0x78, 0x4b, 0x3a,
	0xf8, 0x51, 0xc7, 0xe2, 0xdf, 0xe8, 0x62, 0xa4, 0x4a, 0x21, 0xbe, 0x02, 0xeb, 0xad, 0x3c, 0x69,
	0xa9, 0x0e, 0x9c, 0xfa, 0xc2, 0xfd, 0xde, 0xc8, 0x9e, 0x94, 0x9b, 0x98, 0x91, 0xb7, 0xb1, 0xe7,
	0x7a, 0x7a, 0x5f, 0x88, 0x37, 0x6c, 0x3e, 0xdf, 0xe2, 0xe4, 0xde, 0xea, 0x1e, 0x00, 0xd4, 0x9d,
	0x1c, 0x94, 0xce, 0xf2, 0x66, 0xe7, 0x10, 0xc8, 0xa6, 0x39, 0xf2, 0x40, 0x9c, 0x05, 0x94, 0x7e,
	0x43, 0xfe, 0xb9, 0xc2, 0x96, 0x4a, 0x22, 0x9b, 0xa2, 0x03, 0xb7, 0xb7, 0x0b, 0x79, 0x16, 0x18,
	0xee, 0x4d, 0x22, 0x92, 0x61, 0xfc, 0x95, 0x62, 0x7c, 0x95, 0x71, 0x68, 0xe9, 0xa1, 0x3a, 0x0b,
	0xb6, 0xed, 0x61, 0x3a, 0x57, 0x6f, 0xc4, 0xf4, 0x7a, 0xfa, 0xac, 0x80, 0xbc, 0x1e, 0x74, 0xc2,
	0x97, 0x5a, 0x3e, 0x7d, 0xca, 0x04, 0x96, 0x51, 0xa6, 0x9f, 0x24, 0xd3, 0xff, 0x0e, 0x56, 0xfd,
	0x76, 0x5d, 0xf5, 0xd7, 0x79, 0x26, 0xec, 0x3a, 0x90, 0x11, 0xa1, 0x16, 0x52, 0xf4, 0x8e, 0x8e,
	0x80, 0x13, 0x3b, 0x41, 0xe6, 0x50, 0xd5, 0xb3, 0x77, 0x4c, 0x52, 0x07, 0xbb, 0x17, 0x5b, 0x8d,
	0x48, 0x64, 0x6a, 0x64, 0x9c, 0x8e, 0xe3, 0xc3, 0x75, 0xe5, 0xff, 0x98, 0x60, 0x27, 0x8a, 0x32,
	0xea, 0xee, 0x3d, 0xaa, 0x20, 0x45, 0xaf, 0xee, 0xc2, 0xf6, 0x32, 0xe3, 0x6b, 0x00, 0x0e, 0xb4,
	0x12, 0xc4, 0x6d, 0xa3, 0x4a, 0xc8, 0xbe, 0x68, 0xd3, 0xe7, 0x0d, 0xcb, 0x44, 0x9a, 0xa7, 0x4d,
	0xf4, 0xba, 0xdc, 0x8a, 0xd8, 0xf4, 0xa1, 0xe1, 0x41, 0x32, 0x14, 0x05, 0x7d, 0x87, 0xab, 0xf9,
	0x3a, 0xab, 0xa7, 0x5c, 0x6b, 0xeb, 0x97, 0x8a, 0x2c, 0x12, 0x9f, 0xa9, 0x09, 0x3a, 0xee, 0x88,
	0x49, 0x32, 0x13, 0x48, 0x05, 0x6a, 0xf1, 0xdf, 0x33, 0x0e, 0x37, 0x0b, 0xf3, 0x83, 0xfd, 0x91,
	0x9c, 0x47, 0x55, 0x1d, 0xb5, 0xda, 0xea, 0xc9, 0x6c, 0x4d, 0xcd, 0xe6, 0xf2, 0x23, 0xb4, 0x26,
	0xbd, 0xec, 0xc9, 0x63, 0x40, 0x7e, 0x37, 0x69, 0x2d, 0x1c, 0xeb, 0xa5, 0xb3, 0x87, 0x84, 0xde,
	0xf6, 0x1d, 0xa8, 0x1c, 0x5c, 0xcc, 0x81, 0x28, 0x04, 0x4c, 0x38, 0x10, 0x51, 0x73, 0x99, 0x5d,
	0x3b, 0x4a, 0xf0, 0xa8, 0x58, 0x5b, 0xf9, 0x53, 0x8d, 0xd5, 0x0b, 0xd2, 0xf8, 0x60, 0x3b, 0x9d,
	0x7d, 0x77, 0xe1, 0x17, 0xad, 0xc3, 0x3e, 0x04, 0x35, 0x9a, 0xd6, 0xe1, 0x5f, 0x6d, 0xe8, 0x23,
	0x47, 0x36, 0x2e, 0xb3, 0xaf, 0x08, 0xe3, 0x9f, 0x3f, 0xf9, 0xdf, 0x26, 0xd8, 0x4c, 0xee, 0xf3,
	0x0a, 0x5f, 0xb0, 0x0e, 0xff, 0xe6, 0xd3, 0xb8, 0x64, 0x1d, 0xe5, 0x03, 0x0d, 0xf1, 0x59, 0x6e,
	0x26, 0xa7, 0x0b, 0x56, 0x73, 0xe3, 0xb4, 0xf9, 0x69, 0x02, 0x8a, 0x78, 0x35, 0xc4, 0x2f, 0x58,
	0x07, 0x7f, 0xdd, 0x69, 0x98, 0xd6, 0x21, 0x0f, 0x96, 0x4d, 0x0a, 0xa0, 0x54, 0x06, 0xdf, 0x43,
	0xe9, 0xab, 0x09, 0x6c, 0xa6, 0x94, 0xd0, 0xe9, 0x18, 0xf5, 0x48, 0xbf, 0x24, 0x58, 0xfc, 0xef,
	0x13, 0x8c, 0x0d, 0x8b, 0x62, 0xde, 0xb4, 0x0e, 0x7d, 0xc2, 0x6c, 0x2c, 0x58, 0x87, 0x17, 0xd5,
	0x4d, 0xaa, 0x33, 0x37, 0x75, 0x79, 0x2b, 0x0b, 0x2f, 0x82, 0x4e, 0x0b, 0x3a, 0x0b, 0x7c, 0xdc,
	0x1a, 0xf7, 0xd6, 0x09, 0x31, 0xfd, 0x97, 0x09, 0x36, 0x9b, 0x4f, 0xc0, 0xfc, 0x92, 0x75, 0x84,
	0x4a, 0xbb, 0x71, 0xf9, 0x48, 0x49, 0xbc, 0xb9, 0x08, 0x8a, 0x5d, 0x1a, 0x2a, 0xa6, 0xee, 0xd8,
	0x50, 0x07, 0x08, 0x79, 0x87, 0xec, 0x65, 0xf1, 0x1f, 0x59, 0x55, 0x11, 0x28, 0x3f, 0x6f, 0x1d,
	0x98, 0xa9, 0x1b, 0x17, 0xac, 0x43, 0x88, 0x97, 0xd2, 0x83, 0x1a, 0x1c, 0x6f, 0x8b, 0x72, 0x7a,
	0xf8, 0xe7, 0x04, 0xe3, 0xa3, 0xb7, 0x8b, 0x5f, 0xb3, 0x8e, 0x4c, 0xdf, 0x8d, 0xeb, 0xd6, 0xd1,
	0x6f, 0x6b, 0x93, 0x1a, 0x0b, 0x2d, 0x30, 0x42, 0x0c, 0x59, 0xc6, 0x41, 0xbb, 0x34, 0xd4, 0xf7,
	0x40, 0x22, 0x05, 0xaf, 0x4d, 0x11, 0x85, 0x0f, 0x4c, 0x72, 0xa4, 0x1e, 0xc1, 0x36, 0xfb, 0xbf,
	0x01, 0x00, 0x00, 0xff, 0xff, 0x81, 0x4d, 0x8c, 0xd2, 0x51, 0x1e, 0x00, 0x00,
}
