// Code generated by protoc-gen-go.
// source: steammessages_twofactor.steamclient.proto
// DO NOT EDIT!

package unified

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type CTwoFactor_Status_Request struct {
	Steamid          *uint64 `protobuf:"fixed64,1,opt,name=steamid" json:"steamid,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CTwoFactor_Status_Request) Reset()                    { *m = CTwoFactor_Status_Request{} }
func (m *CTwoFactor_Status_Request) String() string            { return proto.CompactTextString(m) }
func (*CTwoFactor_Status_Request) ProtoMessage()               {}
func (*CTwoFactor_Status_Request) Descriptor() ([]byte, []int) { return fileDescriptor16, []int{0} }

func (m *CTwoFactor_Status_Request) GetSteamid() uint64 {
	if m != nil && m.Steamid != nil {
		return *m.Steamid
	}
	return 0
}

type CTwoFactor_Status_Response struct {
	State                *uint32 `protobuf:"varint,1,opt,name=state" json:"state,omitempty"`
	InactivationReason   *uint32 `protobuf:"varint,2,opt,name=inactivation_reason" json:"inactivation_reason,omitempty"`
	AuthenticatorType    *uint32 `protobuf:"varint,3,opt,name=authenticator_type" json:"authenticator_type,omitempty"`
	AuthenticatorAllowed *bool   `protobuf:"varint,4,opt,name=authenticator_allowed" json:"authenticator_allowed,omitempty"`
	SteamguardScheme     *uint32 `protobuf:"varint,5,opt,name=steamguard_scheme" json:"steamguard_scheme,omitempty"`
	TokenGid             *string `protobuf:"bytes,6,opt,name=token_gid" json:"token_gid,omitempty"`
	EmailValidated       *bool   `protobuf:"varint,7,opt,name=email_validated" json:"email_validated,omitempty"`
	DeviceIdentifier     *string `protobuf:"bytes,8,opt,name=device_identifier" json:"device_identifier,omitempty"`
	TimeCreated          *uint32 `protobuf:"varint,9,opt,name=time_created" json:"time_created,omitempty"`
	XXX_unrecognized     []byte  `json:"-"`
}

func (m *CTwoFactor_Status_Response) Reset()                    { *m = CTwoFactor_Status_Response{} }
func (m *CTwoFactor_Status_Response) String() string            { return proto.CompactTextString(m) }
func (*CTwoFactor_Status_Response) ProtoMessage()               {}
func (*CTwoFactor_Status_Response) Descriptor() ([]byte, []int) { return fileDescriptor16, []int{1} }

func (m *CTwoFactor_Status_Response) GetState() uint32 {
	if m != nil && m.State != nil {
		return *m.State
	}
	return 0
}

func (m *CTwoFactor_Status_Response) GetInactivationReason() uint32 {
	if m != nil && m.InactivationReason != nil {
		return *m.InactivationReason
	}
	return 0
}

func (m *CTwoFactor_Status_Response) GetAuthenticatorType() uint32 {
	if m != nil && m.AuthenticatorType != nil {
		return *m.AuthenticatorType
	}
	return 0
}

func (m *CTwoFactor_Status_Response) GetAuthenticatorAllowed() bool {
	if m != nil && m.AuthenticatorAllowed != nil {
		return *m.AuthenticatorAllowed
	}
	return false
}

func (m *CTwoFactor_Status_Response) GetSteamguardScheme() uint32 {
	if m != nil && m.SteamguardScheme != nil {
		return *m.SteamguardScheme
	}
	return 0
}

func (m *CTwoFactor_Status_Response) GetTokenGid() string {
	if m != nil && m.TokenGid != nil {
		return *m.TokenGid
	}
	return ""
}

func (m *CTwoFactor_Status_Response) GetEmailValidated() bool {
	if m != nil && m.EmailValidated != nil {
		return *m.EmailValidated
	}
	return false
}

func (m *CTwoFactor_Status_Response) GetDeviceIdentifier() string {
	if m != nil && m.DeviceIdentifier != nil {
		return *m.DeviceIdentifier
	}
	return ""
}

func (m *CTwoFactor_Status_Response) GetTimeCreated() uint32 {
	if m != nil && m.TimeCreated != nil {
		return *m.TimeCreated
	}
	return 0
}

type CTwoFactor_AddAuthenticator_Request struct {
	Steamid           *uint64 `protobuf:"fixed64,1,opt,name=steamid" json:"steamid,omitempty"`
	AuthenticatorTime *uint64 `protobuf:"varint,2,opt,name=authenticator_time" json:"authenticator_time,omitempty"`
	SerialNumber      *uint64 `protobuf:"fixed64,3,opt,name=serial_number" json:"serial_number,omitempty"`
	AuthenticatorType *uint32 `protobuf:"varint,4,opt,name=authenticator_type" json:"authenticator_type,omitempty"`
	DeviceIdentifier  *string `protobuf:"bytes,5,opt,name=device_identifier" json:"device_identifier,omitempty"`
	SmsPhoneId        *string `protobuf:"bytes,6,opt,name=sms_phone_id" json:"sms_phone_id,omitempty"`
	XXX_unrecognized  []byte  `json:"-"`
}

func (m *CTwoFactor_AddAuthenticator_Request) Reset()         { *m = CTwoFactor_AddAuthenticator_Request{} }
func (m *CTwoFactor_AddAuthenticator_Request) String() string { return proto.CompactTextString(m) }
func (*CTwoFactor_AddAuthenticator_Request) ProtoMessage()    {}
func (*CTwoFactor_AddAuthenticator_Request) Descriptor() ([]byte, []int) {
	return fileDescriptor16, []int{2}
}

func (m *CTwoFactor_AddAuthenticator_Request) GetSteamid() uint64 {
	if m != nil && m.Steamid != nil {
		return *m.Steamid
	}
	return 0
}

func (m *CTwoFactor_AddAuthenticator_Request) GetAuthenticatorTime() uint64 {
	if m != nil && m.AuthenticatorTime != nil {
		return *m.AuthenticatorTime
	}
	return 0
}

func (m *CTwoFactor_AddAuthenticator_Request) GetSerialNumber() uint64 {
	if m != nil && m.SerialNumber != nil {
		return *m.SerialNumber
	}
	return 0
}

func (m *CTwoFactor_AddAuthenticator_Request) GetAuthenticatorType() uint32 {
	if m != nil && m.AuthenticatorType != nil {
		return *m.AuthenticatorType
	}
	return 0
}

func (m *CTwoFactor_AddAuthenticator_Request) GetDeviceIdentifier() string {
	if m != nil && m.DeviceIdentifier != nil {
		return *m.DeviceIdentifier
	}
	return ""
}

func (m *CTwoFactor_AddAuthenticator_Request) GetSmsPhoneId() string {
	if m != nil && m.SmsPhoneId != nil {
		return *m.SmsPhoneId
	}
	return ""
}

type CTwoFactor_AddAuthenticator_Response struct {
	SharedSecret     []byte  `protobuf:"bytes,1,opt,name=shared_secret" json:"shared_secret,omitempty"`
	SerialNumber     *uint64 `protobuf:"fixed64,2,opt,name=serial_number" json:"serial_number,omitempty"`
	RevocationCode   *string `protobuf:"bytes,3,opt,name=revocation_code" json:"revocation_code,omitempty"`
	Uri              *string `protobuf:"bytes,4,opt,name=uri" json:"uri,omitempty"`
	ServerTime       *uint64 `protobuf:"varint,5,opt,name=server_time" json:"server_time,omitempty"`
	AccountName      *string `protobuf:"bytes,6,opt,name=account_name" json:"account_name,omitempty"`
	TokenGid         *string `protobuf:"bytes,7,opt,name=token_gid" json:"token_gid,omitempty"`
	IdentitySecret   []byte  `protobuf:"bytes,8,opt,name=identity_secret" json:"identity_secret,omitempty"`
	Secret_1         []byte  `protobuf:"bytes,9,opt,name=secret_1" json:"secret_1,omitempty"`
	Status           *int32  `protobuf:"varint,10,opt,name=status" json:"status,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CTwoFactor_AddAuthenticator_Response) Reset()         { *m = CTwoFactor_AddAuthenticator_Response{} }
func (m *CTwoFactor_AddAuthenticator_Response) String() string { return proto.CompactTextString(m) }
func (*CTwoFactor_AddAuthenticator_Response) ProtoMessage()    {}
func (*CTwoFactor_AddAuthenticator_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor16, []int{3}
}

func (m *CTwoFactor_AddAuthenticator_Response) GetSharedSecret() []byte {
	if m != nil {
		return m.SharedSecret
	}
	return nil
}

func (m *CTwoFactor_AddAuthenticator_Response) GetSerialNumber() uint64 {
	if m != nil && m.SerialNumber != nil {
		return *m.SerialNumber
	}
	return 0
}

func (m *CTwoFactor_AddAuthenticator_Response) GetRevocationCode() string {
	if m != nil && m.RevocationCode != nil {
		return *m.RevocationCode
	}
	return ""
}

func (m *CTwoFactor_AddAuthenticator_Response) GetUri() string {
	if m != nil && m.Uri != nil {
		return *m.Uri
	}
	return ""
}

func (m *CTwoFactor_AddAuthenticator_Response) GetServerTime() uint64 {
	if m != nil && m.ServerTime != nil {
		return *m.ServerTime
	}
	return 0
}

func (m *CTwoFactor_AddAuthenticator_Response) GetAccountName() string {
	if m != nil && m.AccountName != nil {
		return *m.AccountName
	}
	return ""
}

func (m *CTwoFactor_AddAuthenticator_Response) GetTokenGid() string {
	if m != nil && m.TokenGid != nil {
		return *m.TokenGid
	}
	return ""
}

func (m *CTwoFactor_AddAuthenticator_Response) GetIdentitySecret() []byte {
	if m != nil {
		return m.IdentitySecret
	}
	return nil
}

func (m *CTwoFactor_AddAuthenticator_Response) GetSecret_1() []byte {
	if m != nil {
		return m.Secret_1
	}
	return nil
}

func (m *CTwoFactor_AddAuthenticator_Response) GetStatus() int32 {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return 0
}

type CTwoFactor_SendEmail_Request struct {
	Steamid               *uint64 `protobuf:"fixed64,1,opt,name=steamid" json:"steamid,omitempty"`
	EmailType             *uint32 `protobuf:"varint,2,opt,name=email_type" json:"email_type,omitempty"`
	IncludeActivationCode *bool   `protobuf:"varint,3,opt,name=include_activation_code" json:"include_activation_code,omitempty"`
	XXX_unrecognized      []byte  `json:"-"`
}

func (m *CTwoFactor_SendEmail_Request) Reset()                    { *m = CTwoFactor_SendEmail_Request{} }
func (m *CTwoFactor_SendEmail_Request) String() string            { return proto.CompactTextString(m) }
func (*CTwoFactor_SendEmail_Request) ProtoMessage()               {}
func (*CTwoFactor_SendEmail_Request) Descriptor() ([]byte, []int) { return fileDescriptor16, []int{4} }

func (m *CTwoFactor_SendEmail_Request) GetSteamid() uint64 {
	if m != nil && m.Steamid != nil {
		return *m.Steamid
	}
	return 0
}

func (m *CTwoFactor_SendEmail_Request) GetEmailType() uint32 {
	if m != nil && m.EmailType != nil {
		return *m.EmailType
	}
	return 0
}

func (m *CTwoFactor_SendEmail_Request) GetIncludeActivationCode() bool {
	if m != nil && m.IncludeActivationCode != nil {
		return *m.IncludeActivationCode
	}
	return false
}

type CTwoFactor_SendEmail_Response struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CTwoFactor_SendEmail_Response) Reset()                    { *m = CTwoFactor_SendEmail_Response{} }
func (m *CTwoFactor_SendEmail_Response) String() string            { return proto.CompactTextString(m) }
func (*CTwoFactor_SendEmail_Response) ProtoMessage()               {}
func (*CTwoFactor_SendEmail_Response) Descriptor() ([]byte, []int) { return fileDescriptor16, []int{5} }

type CTwoFactor_FinalizeAddAuthenticator_Request struct {
	Steamid           *uint64 `protobuf:"fixed64,1,opt,name=steamid" json:"steamid,omitempty"`
	AuthenticatorCode *string `protobuf:"bytes,2,opt,name=authenticator_code" json:"authenticator_code,omitempty"`
	AuthenticatorTime *uint64 `protobuf:"varint,3,opt,name=authenticator_time" json:"authenticator_time,omitempty"`
	ActivationCode    *string `protobuf:"bytes,4,opt,name=activation_code" json:"activation_code,omitempty"`
	XXX_unrecognized  []byte  `json:"-"`
}

func (m *CTwoFactor_FinalizeAddAuthenticator_Request) Reset() {
	*m = CTwoFactor_FinalizeAddAuthenticator_Request{}
}
func (m *CTwoFactor_FinalizeAddAuthenticator_Request) String() string {
	return proto.CompactTextString(m)
}
func (*CTwoFactor_FinalizeAddAuthenticator_Request) ProtoMessage() {}
func (*CTwoFactor_FinalizeAddAuthenticator_Request) Descriptor() ([]byte, []int) {
	return fileDescriptor16, []int{6}
}

func (m *CTwoFactor_FinalizeAddAuthenticator_Request) GetSteamid() uint64 {
	if m != nil && m.Steamid != nil {
		return *m.Steamid
	}
	return 0
}

func (m *CTwoFactor_FinalizeAddAuthenticator_Request) GetAuthenticatorCode() string {
	if m != nil && m.AuthenticatorCode != nil {
		return *m.AuthenticatorCode
	}
	return ""
}

func (m *CTwoFactor_FinalizeAddAuthenticator_Request) GetAuthenticatorTime() uint64 {
	if m != nil && m.AuthenticatorTime != nil {
		return *m.AuthenticatorTime
	}
	return 0
}

func (m *CTwoFactor_FinalizeAddAuthenticator_Request) GetActivationCode() string {
	if m != nil && m.ActivationCode != nil {
		return *m.ActivationCode
	}
	return ""
}

type CTwoFactor_FinalizeAddAuthenticator_Response struct {
	Success          *bool   `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
	WantMore         *bool   `protobuf:"varint,2,opt,name=want_more" json:"want_more,omitempty"`
	ServerTime       *uint64 `protobuf:"varint,3,opt,name=server_time" json:"server_time,omitempty"`
	Status           *int32  `protobuf:"varint,4,opt,name=status" json:"status,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CTwoFactor_FinalizeAddAuthenticator_Response) Reset() {
	*m = CTwoFactor_FinalizeAddAuthenticator_Response{}
}
func (m *CTwoFactor_FinalizeAddAuthenticator_Response) String() string {
	return proto.CompactTextString(m)
}
func (*CTwoFactor_FinalizeAddAuthenticator_Response) ProtoMessage() {}
func (*CTwoFactor_FinalizeAddAuthenticator_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor16, []int{7}
}

func (m *CTwoFactor_FinalizeAddAuthenticator_Response) GetSuccess() bool {
	if m != nil && m.Success != nil {
		return *m.Success
	}
	return false
}

func (m *CTwoFactor_FinalizeAddAuthenticator_Response) GetWantMore() bool {
	if m != nil && m.WantMore != nil {
		return *m.WantMore
	}
	return false
}

func (m *CTwoFactor_FinalizeAddAuthenticator_Response) GetServerTime() uint64 {
	if m != nil && m.ServerTime != nil {
		return *m.ServerTime
	}
	return 0
}

func (m *CTwoFactor_FinalizeAddAuthenticator_Response) GetStatus() int32 {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return 0
}

type CTwoFactor_RemoveAuthenticator_Request struct {
	Steamid                    *uint64 `protobuf:"fixed64,1,opt,name=steamid" json:"steamid,omitempty"`
	RevocationCode             *string `protobuf:"bytes,2,opt,name=revocation_code" json:"revocation_code,omitempty"`
	AuthenticatorCode          *string `protobuf:"bytes,3,opt,name=authenticator_code" json:"authenticator_code,omitempty"`
	AuthenticatorTime          *uint64 `protobuf:"varint,4,opt,name=authenticator_time" json:"authenticator_time,omitempty"`
	RevocationReason           *uint32 `protobuf:"varint,5,opt,name=revocation_reason" json:"revocation_reason,omitempty"`
	SteamguardScheme           *uint32 `protobuf:"varint,6,opt,name=steamguard_scheme" json:"steamguard_scheme,omitempty"`
	RemoveAllSteamguardCookies *bool   `protobuf:"varint,7,opt,name=remove_all_steamguard_cookies" json:"remove_all_steamguard_cookies,omitempty"`
	XXX_unrecognized           []byte  `json:"-"`
}

func (m *CTwoFactor_RemoveAuthenticator_Request) Reset() {
	*m = CTwoFactor_RemoveAuthenticator_Request{}
}
func (m *CTwoFactor_RemoveAuthenticator_Request) String() string { return proto.CompactTextString(m) }
func (*CTwoFactor_RemoveAuthenticator_Request) ProtoMessage()    {}
func (*CTwoFactor_RemoveAuthenticator_Request) Descriptor() ([]byte, []int) {
	return fileDescriptor16, []int{8}
}

func (m *CTwoFactor_RemoveAuthenticator_Request) GetSteamid() uint64 {
	if m != nil && m.Steamid != nil {
		return *m.Steamid
	}
	return 0
}

func (m *CTwoFactor_RemoveAuthenticator_Request) GetRevocationCode() string {
	if m != nil && m.RevocationCode != nil {
		return *m.RevocationCode
	}
	return ""
}

func (m *CTwoFactor_RemoveAuthenticator_Request) GetAuthenticatorCode() string {
	if m != nil && m.AuthenticatorCode != nil {
		return *m.AuthenticatorCode
	}
	return ""
}

func (m *CTwoFactor_RemoveAuthenticator_Request) GetAuthenticatorTime() uint64 {
	if m != nil && m.AuthenticatorTime != nil {
		return *m.AuthenticatorTime
	}
	return 0
}

func (m *CTwoFactor_RemoveAuthenticator_Request) GetRevocationReason() uint32 {
	if m != nil && m.RevocationReason != nil {
		return *m.RevocationReason
	}
	return 0
}

func (m *CTwoFactor_RemoveAuthenticator_Request) GetSteamguardScheme() uint32 {
	if m != nil && m.SteamguardScheme != nil {
		return *m.SteamguardScheme
	}
	return 0
}

func (m *CTwoFactor_RemoveAuthenticator_Request) GetRemoveAllSteamguardCookies() bool {
	if m != nil && m.RemoveAllSteamguardCookies != nil {
		return *m.RemoveAllSteamguardCookies
	}
	return false
}

type CTwoFactor_RemoveAuthenticator_Response struct {
	Success          *bool   `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
	WantMore         *bool   `protobuf:"varint,2,opt,name=want_more" json:"want_more,omitempty"`
	ServerTime       *uint64 `protobuf:"varint,3,opt,name=server_time" json:"server_time,omitempty"`
	Status           *int32  `protobuf:"varint,4,opt,name=status" json:"status,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CTwoFactor_RemoveAuthenticator_Response) Reset() {
	*m = CTwoFactor_RemoveAuthenticator_Response{}
}
func (m *CTwoFactor_RemoveAuthenticator_Response) String() string { return proto.CompactTextString(m) }
func (*CTwoFactor_RemoveAuthenticator_Response) ProtoMessage()    {}
func (*CTwoFactor_RemoveAuthenticator_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor16, []int{9}
}

func (m *CTwoFactor_RemoveAuthenticator_Response) GetSuccess() bool {
	if m != nil && m.Success != nil {
		return *m.Success
	}
	return false
}

func (m *CTwoFactor_RemoveAuthenticator_Response) GetWantMore() bool {
	if m != nil && m.WantMore != nil {
		return *m.WantMore
	}
	return false
}

func (m *CTwoFactor_RemoveAuthenticator_Response) GetServerTime() uint64 {
	if m != nil && m.ServerTime != nil {
		return *m.ServerTime
	}
	return 0
}

func (m *CTwoFactor_RemoveAuthenticator_Response) GetStatus() int32 {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return 0
}

type CTwoFactor_CreateEmergencyCodes_Request struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CTwoFactor_CreateEmergencyCodes_Request) Reset() {
	*m = CTwoFactor_CreateEmergencyCodes_Request{}
}
func (m *CTwoFactor_CreateEmergencyCodes_Request) String() string { return proto.CompactTextString(m) }
func (*CTwoFactor_CreateEmergencyCodes_Request) ProtoMessage()    {}
func (*CTwoFactor_CreateEmergencyCodes_Request) Descriptor() ([]byte, []int) {
	return fileDescriptor16, []int{10}
}

type CTwoFactor_CreateEmergencyCodes_Response struct {
	Codes            []string `protobuf:"bytes,1,rep,name=codes" json:"codes,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CTwoFactor_CreateEmergencyCodes_Response) Reset() {
	*m = CTwoFactor_CreateEmergencyCodes_Response{}
}
func (m *CTwoFactor_CreateEmergencyCodes_Response) String() string { return proto.CompactTextString(m) }
func (*CTwoFactor_CreateEmergencyCodes_Response) ProtoMessage()    {}
func (*CTwoFactor_CreateEmergencyCodes_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor16, []int{11}
}

func (m *CTwoFactor_CreateEmergencyCodes_Response) GetCodes() []string {
	if m != nil {
		return m.Codes
	}
	return nil
}

type CTwoFactor_DestroyEmergencyCodes_Request struct {
	Steamid          *uint64 `protobuf:"fixed64,1,opt,name=steamid" json:"steamid,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CTwoFactor_DestroyEmergencyCodes_Request) Reset() {
	*m = CTwoFactor_DestroyEmergencyCodes_Request{}
}
func (m *CTwoFactor_DestroyEmergencyCodes_Request) String() string { return proto.CompactTextString(m) }
func (*CTwoFactor_DestroyEmergencyCodes_Request) ProtoMessage()    {}
func (*CTwoFactor_DestroyEmergencyCodes_Request) Descriptor() ([]byte, []int) {
	return fileDescriptor16, []int{12}
}

func (m *CTwoFactor_DestroyEmergencyCodes_Request) GetSteamid() uint64 {
	if m != nil && m.Steamid != nil {
		return *m.Steamid
	}
	return 0
}

type CTwoFactor_DestroyEmergencyCodes_Response struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CTwoFactor_DestroyEmergencyCodes_Response) Reset() {
	*m = CTwoFactor_DestroyEmergencyCodes_Response{}
}
func (m *CTwoFactor_DestroyEmergencyCodes_Response) String() string { return proto.CompactTextString(m) }
func (*CTwoFactor_DestroyEmergencyCodes_Response) ProtoMessage()    {}
func (*CTwoFactor_DestroyEmergencyCodes_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor16, []int{13}
}

type CTwoFactor_ValidateToken_Request struct {
	Code             *string `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CTwoFactor_ValidateToken_Request) Reset()         { *m = CTwoFactor_ValidateToken_Request{} }
func (m *CTwoFactor_ValidateToken_Request) String() string { return proto.CompactTextString(m) }
func (*CTwoFactor_ValidateToken_Request) ProtoMessage()    {}
func (*CTwoFactor_ValidateToken_Request) Descriptor() ([]byte, []int) {
	return fileDescriptor16, []int{14}
}

func (m *CTwoFactor_ValidateToken_Request) GetCode() string {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return ""
}

type CTwoFactor_ValidateToken_Response struct {
	Valid            *bool  `protobuf:"varint,1,opt,name=valid" json:"valid,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CTwoFactor_ValidateToken_Response) Reset()         { *m = CTwoFactor_ValidateToken_Response{} }
func (m *CTwoFactor_ValidateToken_Response) String() string { return proto.CompactTextString(m) }
func (*CTwoFactor_ValidateToken_Response) ProtoMessage()    {}
func (*CTwoFactor_ValidateToken_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor16, []int{15}
}

func (m *CTwoFactor_ValidateToken_Response) GetValid() bool {
	if m != nil && m.Valid != nil {
		return *m.Valid
	}
	return false
}

func init() {
	proto.RegisterType((*CTwoFactor_Status_Request)(nil), "CTwoFactor_Status_Request")
	proto.RegisterType((*CTwoFactor_Status_Response)(nil), "CTwoFactor_Status_Response")
	proto.RegisterType((*CTwoFactor_AddAuthenticator_Request)(nil), "CTwoFactor_AddAuthenticator_Request")
	proto.RegisterType((*CTwoFactor_AddAuthenticator_Response)(nil), "CTwoFactor_AddAuthenticator_Response")
	proto.RegisterType((*CTwoFactor_SendEmail_Request)(nil), "CTwoFactor_SendEmail_Request")
	proto.RegisterType((*CTwoFactor_SendEmail_Response)(nil), "CTwoFactor_SendEmail_Response")
	proto.RegisterType((*CTwoFactor_FinalizeAddAuthenticator_Request)(nil), "CTwoFactor_FinalizeAddAuthenticator_Request")
	proto.RegisterType((*CTwoFactor_FinalizeAddAuthenticator_Response)(nil), "CTwoFactor_FinalizeAddAuthenticator_Response")
	proto.RegisterType((*CTwoFactor_RemoveAuthenticator_Request)(nil), "CTwoFactor_RemoveAuthenticator_Request")
	proto.RegisterType((*CTwoFactor_RemoveAuthenticator_Response)(nil), "CTwoFactor_RemoveAuthenticator_Response")
	proto.RegisterType((*CTwoFactor_CreateEmergencyCodes_Request)(nil), "CTwoFactor_CreateEmergencyCodes_Request")
	proto.RegisterType((*CTwoFactor_CreateEmergencyCodes_Response)(nil), "CTwoFactor_CreateEmergencyCodes_Response")
	proto.RegisterType((*CTwoFactor_DestroyEmergencyCodes_Request)(nil), "CTwoFactor_DestroyEmergencyCodes_Request")
	proto.RegisterType((*CTwoFactor_DestroyEmergencyCodes_Response)(nil), "CTwoFactor_DestroyEmergencyCodes_Response")
	proto.RegisterType((*CTwoFactor_ValidateToken_Request)(nil), "CTwoFactor_ValidateToken_Request")
	proto.RegisterType((*CTwoFactor_ValidateToken_Response)(nil), "CTwoFactor_ValidateToken_Response")
}

var fileDescriptor16 = []byte{
	// 1775 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xc4, 0x58, 0x4d, 0x73, 0x13, 0x47,
	0x13, 0x2e, 0x59, 0x92, 0xb1, 0x06, 0xf3, 0x1a, 0x8f, 0xf1, 0x8b, 0x10, 0x18, 0xc6, 0x8b, 0xc1,
	0x92, 0x2d, 0xef, 0xfb, 0x42, 0xa0, 0x52, 0x38, 0x21, 0x60, 0xf9, 0x0b, 0x57, 0x91, 0x00, 0x96,
	0x21, 0xc7, 0xad, 0xf5, 0xee, 0x48, 0xde, 0x42, 0xda, 0x51, 0xf6, 0x43, 0x2a, 0x71, 0x4a, 0xa5,
	0x72, 0xc8, 0x21, 0xf7, 0x54, 0xe5, 0x1f, 0xe4, 0x9a, 0xaa, 0xfc, 0x80, 0x54, 0x7e, 0x47, 0xee,
	0xc9, 0x39, 0x87, 0x1c, 0x93, 0x9e, 0x9e, 0x95, 0xbc, 0x2b, 0x24, 0x59, 0xae, 0x1c, 0x72, 0x93,
	0x77, 0xba, 0x7b, 0xfa, 0xe3, 0xe9, 0xa7, 0x7b, 0x4c, 0x4a, 0x7e, 0xc0, 0xcd, 0x66, 0x93, 0xfb,
	0xbe, 0x59, 0xe7, 0xbe, 0x11, 0x74, 0x44, 0xcd, 0xb4, 0x02, 0xe1, 0xe9, 0xf8, 0xdd, 0x6a, 0x38,
	0xdc, 0x0d, 0xf4, 0x96, 0x27, 0x02, 0x51, 0x28, 0x27, 0x45, 0x43, 0xd7, 0xa9, 0x39, 0xdc, 0x36,
	0x8e, 0x4d, 0x9f, 0xbf, 0x2f, 0xad, 0x3d, 0x25, 0xd7, 0xb6, 0x8f, 0x3a, 0x62, 0x0f, 0xad, 0x19,
	0xd5, 0xc0, 0x0c, 0x42, 0xdf, 0x38, 0xe4, 0x5f, 0x84, 0xdc, 0x0f, 0xe8, 0x6d, 0x72, 0x01, 0x35,
	0x1c, 0x3b, 0x9f, 0x62, 0xa9, 0xe2, 0x74, 0x85, 0x7e, 0xf5, 0x53, 0xfe, 0x3f, 0xd1, 0x27, 0x16,
	0x08, 0x16, 0xfa, 0x5c, 0xfb, 0x25, 0x43, 0x0a, 0xc3, 0x4c, 0xf8, 0x2d, 0xe1, 0xfa, 0x9c, 0xde,
	0x25, 0x59, 0x1f, 0x3e, 0x71, 0xb4, 0x70, 0xa9, 0x72, 0x15, 0x2c, 0x2c, 0x6c, 0x85, 0xc1, 0x09,
	0xb8, 0xe0, 0x58, 0x26, 0x68, 0x30, 0x3c, 0xa6, 0x8f, 0xc9, 0x82, 0xe3, 0x82, 0x09, 0xa7, 0x6d,
	0x06, 0x8e, 0x70, 0x0d, 0x8f, 0x9b, 0xbe, 0x70, 0xf3, 0x53, 0xa8, 0xc5, 0x40, 0xeb, 0xc6, 0x41,
	0xec, 0x98, 0xa9, 0x63, 0x56, 0x74, 0x6a, 0xcc, 0x74, 0xbb, 0x25, 0xfa, 0x90, 0x50, 0x33, 0x6e,
	0xd5, 0x08, 0xba, 0x2d, 0x9e, 0x4f, 0xa3, 0xf6, 0x35, 0xd0, 0x5e, 0x3c, 0x82, 0xbf, 0x99, 0x00,
	0xe9, 0xb8, 0x14, 0x7d, 0x4e, 0x16, 0x93, 0x6a, 0x66, 0xa3, 0x21, 0x3a, 0xdc, 0xce, 0x67, 0x40,
	0x73, 0xa6, 0xb2, 0x01, 0x9a, 0xa5, 0x2d, 0xcb, 0x12, 0xa1, 0x1b, 0xb0, 0xe8, 0x48, 0xc6, 0x7d,
	0x62, 0xb6, 0x39, 0xdc, 0x9b, 0x34, 0xf6, 0x84, 0x7e, 0x44, 0xe6, 0x31, 0x39, 0xf5, 0xd0, 0xf4,
	0x6c, 0xc3, 0xb7, 0x4e, 0x78, 0x93, 0xe7, 0xb3, 0xa7, 0x11, 0x54, 0xe5, 0x21, 0xdb, 0x97, 0xa7,
	0x4c, 0x9d, 0x32, 0xc7, 0x65, 0xbc, 0x56, 0xe3, 0x56, 0x40, 0xb7, 0x48, 0x2e, 0x10, 0x6f, 0xb9,
	0x6b, 0xd4, 0x21, 0xdd, 0xd3, 0xa0, 0x94, 0xab, 0xe8, 0xa0, 0xb4, 0x56, 0x0d, 0x3c, 0xc7, 0xad,
	0x43, 0xc0, 0x2d, 0xe9, 0x3e, 0x8a, 0xb0, 0xfd, 0x83, 0x1d, 0x66, 0xfa, 0xbe, 0x53, 0x77, 0xc1,
	0x9f, 0xe3, 0x2e, 0xf3, 0xb9, 0xd7, 0xe6, 0x1e, 0xad, 0x90, 0x39, 0xde, 0x34, 0x9d, 0x86, 0xd1,
	0x36, 0x1b, 0x8e, 0x0d, 0x59, 0xb5, 0xf3, 0x17, 0x30, 0x8e, 0x12, 0x18, 0xba, 0xd3, 0x8b, 0xe3,
	0xc4, 0xf4, 0x19, 0x48, 0x23, 0x2c, 0x18, 0xca, 0x33, 0xcb, 0x6c, 0x99, 0xc7, 0x4e, 0xc3, 0x09,
	0xba, 0xf4, 0x09, 0x99, 0xb7, 0x79, 0xdb, 0xb1, 0xb8, 0xe1, 0xd8, 0x32, 0x34, 0x90, 0xf2, 0xf2,
	0x33, 0xe8, 0xce, 0x0a, 0x58, 0x61, 0xc9, 0xda, 0x15, 0x5b, 0x27, 0xc2, 0xe5, 0x25, 0x76, 0x2a,
	0x4b, 0x1f, 0x90, 0xd9, 0xc0, 0x69, 0x72, 0xc3, 0x82, 0x12, 0x49, 0x0f, 0x72, 0x18, 0xff, 0x4d,
	0xd0, 0x2d, 0x7c, 0x0e, 0x9a, 0x0c, 0xd4, 0xa3, 0x28, 0x3a, 0xe0, 0x48, 0x24, 0xa5, 0xfd, 0x39,
	0x45, 0x6e, 0xc7, 0x50, 0xb4, 0x65, 0xdb, 0x89, 0x8b, 0xce, 0x05, 0x49, 0xba, 0xf9, 0x1e, 0x18,
	0xc0, 0x21, 0x84, 0x52, 0x46, 0x39, 0xb2, 0x1d, 0x7a, 0x1e, 0x97, 0x25, 0x4d, 0x04, 0x23, 0xa5,
	0x20, 0xfe, 0x4b, 0x90, 0x4d, 0xc7, 0x6c, 0x18, 0x6e, 0xd8, 0x3c, 0x86, 0xd8, 0xd3, 0x78, 0x4d,
	0x11, 0xd4, 0x56, 0x1a, 0xc2, 0x02, 0x10, 0x74, 0x99, 0x25, 0x9a, 0xad, 0x10, 0xbc, 0x66, 0x4a,
	0x92, 0x15, 0x6d, 0xde, 0xf2, 0xb8, 0x25, 0x03, 0x29, 0xd1, 0xfb, 0x43, 0x91, 0x98, 0xc1, 0x2c,
	0xfc, 0x17, 0xac, 0xd0, 0x64, 0x06, 0xe5, 0x29, 0xfd, 0x70, 0x58, 0xd2, 0xb3, 0x98, 0xf4, 0x1b,
	0xa0, 0x92, 0x4f, 0xaa, 0xc4, 0x92, 0xbd, 0x45, 0x66, 0xfd, 0xa6, 0x6f, 0x60, 0x15, 0x8c, 0x3e,
	0x6e, 0xd6, 0x41, 0x67, 0x15, 0x20, 0x02, 0x78, 0xc1, 0x93, 0x28, 0x2f, 0xac, 0x06, 0xca, 0xd5,
	0x4f, 0xab, 0x51, 0xf5, 0x2d, 0xec, 0x24, 0xed, 0x8f, 0x0c, 0x59, 0x19, 0x9f, 0xf9, 0xa8, 0x93,
	0x0f, 0x20, 0x33, 0x27, 0xa6, 0x07, 0x5c, 0xe2, 0x73, 0x28, 0x5b, 0x80, 0x05, 0x98, 0xad, 0xdc,
	0x87, 0xcb, 0xf4, 0x2a, 0x1e, 0x30, 0x75, 0xc0, 0x8e, 0x79, 0xd0, 0xe1, 0x50, 0x60, 0x05, 0x4b,
	0x68, 0x14, 0x7b, 0xa0, 0xed, 0x0e, 0x06, 0x93, 0x3c, 0x85, 0x49, 0x46, 0x53, 0x03, 0xe4, 0xa0,
	0x32, 0xac, 0xc4, 0x58, 0x11, 0xd8, 0x0c, 0x70, 0xc0, 0x5a, 0xf0, 0x1b, 0x31, 0x54, 0xa2, 0x9f,
	0x90, 0x39, 0x8f, 0xb7, 0x85, 0x0a, 0xc6, 0xb0, 0x84, 0xad, 0xba, 0x3e, 0x57, 0xb9, 0x03, 0xc6,
	0x96, 0xe5, 0xdf, 0x32, 0x74, 0x84, 0x86, 0x94, 0x7b, 0xcb, 0x07, 0x5c, 0x59, 0x27, 0xe9, 0xd0,
	0x73, 0xb0, 0x3e, 0x39, 0x05, 0x8e, 0xd7, 0x87, 0x07, 0x98, 0xa9, 0x57, 0x87, 0x0c, 0xd5, 0xeb,
	0xdc, 0xe5, 0x1e, 0x9a, 0xa7, 0x65, 0x72, 0x51, 0xc5, 0xa4, 0x10, 0x95, 0x45, 0x44, 0x21, 0xa5,
	0xf5, 0x10, 0x15, 0x85, 0x8c, 0x50, 0x82, 0xe2, 0x98, 0xaa, 0xe7, 0x0c, 0xd7, 0x04, 0xf1, 0x58,
	0x71, 0x7a, 0xbd, 0x28, 0xbf, 0x4b, 0xd7, 0x6c, 0xc7, 0x6f, 0x35, 0xcc, 0x2e, 0x03, 0x4a, 0x53,
	0xbd, 0xa1, 0x48, 0x9a, 0x7e, 0x10, 0x27, 0x85, 0x0b, 0xa8, 0x8f, 0x4c, 0x72, 0x34, 0x8e, 0x06,
	0xde, 0x90, 0x39, 0x05, 0x91, 0xa0, 0xdb, 0x2b, 0xd5, 0x0c, 0x96, 0xea, 0x31, 0xa8, 0x3e, 0xaa,
	0xaa, 0x1a, 0x61, 0x52, 0x6a, 0x7d, 0x34, 0x05, 0x5d, 0x66, 0x06, 0x01, 0x97, 0x5c, 0x2c, 0xe9,
	0xb5, 0xc8, 0xf5, 0xba, 0x5e, 0xc6, 0x73, 0xde, 0x96, 0xe7, 0x6e, 0xbd, 0x44, 0x4b, 0x64, 0x46,
	0x99, 0x33, 0xee, 0x61, 0x57, 0xcf, 0xaa, 0xd0, 0xab, 0x2d, 0xa8, 0x3d, 0xf3, 0xe3, 0x08, 0xa0,
	0xb7, 0xc8, 0xb4, 0x8f, 0x83, 0x20, 0x4f, 0x40, 0x30, 0x5b, 0x99, 0x03, 0xc1, 0x8b, 0x80, 0xa4,
	0xb0, 0x11, 0x60, 0x52, 0xb5, 0x5f, 0x53, 0xe4, 0x46, 0x7c, 0x6a, 0x70, 0xd7, 0xde, 0x45, 0xea,
	0x1a, 0xdf, 0xe8, 0xd5, 0x64, 0xa3, 0xef, 0x11, 0xa2, 0x08, 0x0f, 0x7b, 0x4c, 0xcd, 0x0a, 0x04,
	0x51, 0x8f, 0xed, 0x15, 0xbd, 0x81, 0xb4, 0x0f, 0x17, 0xb0, 0xe2, 0x6e, 0xff, 0x46, 0xbc, 0x4c,
	0x4a, 0x6d, 0x6e, 0xae, 0x95, 0xe8, 0x4b, 0x72, 0xd5, 0x71, 0xad, 0x46, 0x68, 0x73, 0x23, 0x36,
	0x82, 0xfa, 0x60, 0x9a, 0xa9, 0xfc, 0x0f, 0x8c, 0xae, 0x1f, 0x28, 0x11, 0x16, 0x1b, 0x43, 0x08,
	0x10, 0xc9, 0xe1, 0x78, 0x0f, 0x24, 0x02, 0xea, 0x19, 0x70, 0xcf, 0xd7, 0x6e, 0x91, 0xa5, 0x11,
	0xe1, 0xa9, 0x6e, 0xd2, 0xbe, 0x99, 0x22, 0xeb, 0x31, 0x89, 0x3d, 0x18, 0x7e, 0x0d, 0xe7, 0x1d,
	0xff, 0x67, 0xc4, 0x77, 0x6f, 0x90, 0x7b, 0x30, 0x84, 0x29, 0xc4, 0xcd, 0x22, 0xc8, 0xcf, 0xc7,
	0x89, 0x0f, 0x9d, 0x1f, 0xc1, 0x95, 0xe9, 0x89, 0xb8, 0x72, 0x97, 0xcc, 0x0d, 0xa6, 0x4b, 0xf5,
	0x51, 0x19, 0x14, 0x8b, 0x5b, 0x03, 0x69, 0xaa, 0x79, 0xa2, 0xc9, 0x44, 0x18, 0x6c, 0x88, 0xda,
	0xc6, 0xb1, 0xe4, 0x84, 0x68, 0x47, 0xd1, 0x7e, 0x4f, 0x91, 0xf2, 0x64, 0xa9, 0x88, 0x98, 0x68,
	0x13, 0x72, 0x11, 0x5a, 0x16, 0xa8, 0x63, 0x2e, 0xa2, 0xf9, 0x76, 0xe4, 0x01, 0x33, 0xc0, 0x3e,
	0x80, 0x47, 0xdc, 0xe6, 0x76, 0x99, 0x81, 0xa3, 0x1d, 0x13, 0x7c, 0x6f, 0x0a, 0x40, 0x28, 0xcc,
	0x51, 0xee, 0x53, 0x9d, 0xe4, 0xe4, 0x27, 0x43, 0x7e, 0xc2, 0xcc, 0xcc, 0x54, 0xae, 0x83, 0xf6,
	0xd5, 0x9e, 0xf6, 0xa0, 0xfc, 0x40, 0xcb, 0xa7, 0xc7, 0xb7, 0xfc, 0x29, 0xee, 0x33, 0xc3, 0x71,
	0xff, 0x5b, 0x9a, 0xdc, 0x8d, 0xc5, 0x7a, 0xc8, 0x9b, 0xa2, 0xcd, 0x87, 0x57, 0xbc, 0x3c, 0x58,
	0x71, 0xf4, 0x73, 0xa7, 0x3f, 0x6a, 0x74, 0xb6, 0x23, 0x98, 0x2b, 0xb0, 0x95, 0x75, 0xfa, 0xf1,
	0xfb, 0x3c, 0xa8, 0xea, 0x7e, 0x1b, 0xb4, 0x6e, 0xbd, 0x04, 0x9a, 0xe8, 0x08, 0x58, 0x3b, 0x5c,
	0xcc, 0x8c, 0x62, 0x43, 0x79, 0xb5, 0xa2, 0x9b, 0x11, 0xc0, 0x49, 0x9f, 0x1f, 0x38, 0x99, 0x89,
	0x80, 0xf3, 0x8c, 0xcc, 0xc7, 0x9c, 0x8d, 0x56, 0x3d, 0xb5, 0x28, 0xe1, 0xca, 0x75, 0xa8, 0xb6,
	0x3b, 0xb9, 0x2a, 0x24, 0xb5, 0x1d, 0x1f, 0x86, 0x8b, 0x5a, 0x87, 0xa4, 0xf7, 0x36, 0x7d, 0x31,
	0x6c, 0xe5, 0x9a, 0x46, 0x4b, 0x0f, 0xc0, 0xd2, 0xff, 0x7b, 0x44, 0x10, 0x5f, 0xbd, 0xa2, 0x69,
	0x28, 0x5c, 0xab, 0xb7, 0x89, 0x80, 0xd9, 0x9e, 0xc1, 0x67, 0x64, 0x49, 0xfd, 0x94, 0xab, 0xa0,
	0x11, 0xb3, 0x6d, 0x09, 0xf1, 0x16, 0x00, 0x11, 0x6d, 0x54, 0xcb, 0x60, 0x7c, 0x49, 0x55, 0x4f,
	0x2e, 0x86, 0xec, 0x54, 0x90, 0x45, 0x82, 0xda, 0x5f, 0x29, 0xb2, 0x7a, 0x66, 0xa9, 0x23, 0x44,
	0xbf, 0x1e, 0x44, 0xf4, 0x0e, 0xd8, 0x7f, 0x3a, 0x11, 0xa2, 0x59, 0xc7, 0x81, 0x92, 0x0c, 0x2e,
	0xa3, 0x58, 0xc0, 0x7f, 0x1b, 0xec, 0xa5, 0x44, 0x02, 0xb6, 0x71, 0xd5, 0xdb, 0x6d, 0x72, 0x0f,
	0x26, 0xaa, 0xd5, 0xdd, 0x06, 0x89, 0xfe, 0x53, 0x43, 0xfb, 0x8c, 0x14, 0xcf, 0x16, 0x8d, 0x92,
	0xa5, 0x91, 0xac, 0x34, 0x2f, 0x53, 0x95, 0x06, 0x7c, 0x2e, 0xc0, 0xb5, 0x73, 0x7d, 0x59, 0xbc,
	0xd9, 0xd7, 0x5e, 0x24, 0xec, 0xed, 0xc0, 0x15, 0x9e, 0xe8, 0x0e, 0xbf, 0x7b, 0xb2, 0x67, 0xce,
	0x3a, 0x29, 0x4d, 0x60, 0x30, 0x22, 0xf7, 0x3d, 0xc2, 0x62, 0xc2, 0x6f, 0xa2, 0x6d, 0x1c, 0x87,
	0x76, 0xff, 0x56, 0x8d, 0x64, 0xb0, 0xc9, 0x52, 0xd8, 0x64, 0x57, 0xe0, 0xca, 0xcb, 0x48, 0x93,
	0x70, 0x5f, 0x6f, 0x7d, 0xd7, 0x9e, 0x93, 0xe5, 0x31, 0x76, 0xa2, 0x74, 0xac, 0x92, 0x2c, 0x2a,
	0x44, 0xc8, 0xc9, 0x83, 0xa5, 0x2b, 0x9e, 0xaa, 0x02, 0x00, 0x3f, 0xb2, 0x05, 0x7d, 0x76, 0xff,
	0x6b, 0x42, 0x72, 0x7d, 0x6b, 0xf4, 0xdb, 0x14, 0xb9, 0xf8, 0x2a, 0xe4, 0x5e, 0x57, 0xbd, 0xd8,
	0x68, 0x41, 0x1f, 0xf9, 0x10, 0x2c, 0x5c, 0xd7, 0x47, 0xbf, 0xf0, 0x34, 0x84, 0xea, 0x3e, 0xac,
	0x14, 0xf0, 0x2a, 0xdd, 0x50, 0xcf, 0xd2, 0x38, 0x16, 0x25, 0xff, 0xfb, 0x3c, 0x90, 0x2b, 0x84,
	0x8f, 0x0b, 0x85, 0xec, 0xea, 0x86, 0xa8, 0xd7, 0xb9, 0xbd, 0x01, 0x93, 0x33, 0xda, 0x90, 0xe8,
	0xf7, 0x29, 0x72, 0x79, 0x90, 0xf1, 0xe9, 0x8a, 0x3e, 0xc1, 0x9b, 0xa0, 0x70, 0x47, 0x9f, 0x64,
	0x7f, 0xd5, 0x1e, 0x81, 0x9f, 0x0f, 0xe1, 0x78, 0x84, 0x9f, 0xd2, 0x33, 0x31, 0xc2, 0x39, 0x87,
	0xe4, 0xfa, 0x23, 0x9c, 0x2e, 0xe9, 0xe3, 0x16, 0x97, 0xc2, 0x4d, 0x7d, 0xfc, 0xe0, 0x5f, 0x02,
	0x37, 0xae, 0xc9, 0xef, 0xa7, 0xcb, 0x09, 0xf2, 0x5c, 0x74, 0xd5, 0xcf, 0x29, 0x92, 0x1f, 0x35,
	0x01, 0x69, 0x59, 0x3f, 0xc7, 0xca, 0x50, 0xd8, 0xd0, 0xcf, 0x33, 0x55, 0xb5, 0x67, 0xe0, 0xd8,
	0x4e, 0x4f, 0x6c, 0x4c, 0x31, 0x4d, 0xdb, 0x76, 0xf0, 0xc7, 0xc8, 0x74, 0xfd, 0x98, 0x22, 0x0b,
	0x43, 0xe8, 0x8e, 0xae, 0xea, 0x93, 0x8d, 0xbe, 0x42, 0x51, 0x9f, 0x90, 0x38, 0x95, 0xd3, 0x11,
	0x0f, 0x4f, 0xe0, 0x32, 0xee, 0x20, 0xc3, 0x9d, 0xfe, 0x2e, 0x45, 0xae, 0x0c, 0xe3, 0x1d, 0x9a,
	0x70, 0x66, 0x1c, 0x89, 0x15, 0x4a, 0xfa, 0xa4, 0x1c, 0xa6, 0xad, 0x81, 0xdf, 0x77, 0xf7, 0xd5,
	0xcb, 0x82, 0x03, 0x12, 0x7a, 0xec, 0x95, 0x04, 0x24, 0x72, 0x19, 0xfd, 0x21, 0x45, 0x16, 0x87,
	0x12, 0x0e, 0x4d, 0x5c, 0x38, 0x96, 0xe4, 0x0a, 0x6b, 0xfa, 0xe4, 0xf4, 0x85, 0x9d, 0x12, 0xc9,
	0x8c, 0xf7, 0xad, 0xdf, 0xd0, 0xbd, 0x2c, 0xbe, 0x23, 0x97, 0x12, 0x34, 0x45, 0x97, 0xf5, 0xb3,
	0x98, 0xb0, 0xa0, 0xe9, 0x67, 0x92, 0x9c, 0xa6, 0x81, 0x4b, 0x37, 0x7b, 0x67, 0xac, 0x28, 0xd7,
	0x47, 0x0b, 0x0e, 0xc2, 0x26, 0x2f, 0x31, 0x53, 0x4d, 0xf1, 0x02, 0xbe, 0xf8, 0xc0, 0x12, 0x53,
	0xa6, 0xe2, 0xff, 0xaa, 0x90, 0xb5, 0xaf, 0xc2, 0xe8, 0x82, 0x27, 0x76, 0x25, 0xfd, 0x65, 0x2a,
	0xf5, 0x77, 0x00, 0x00, 0x00, 0xff, 0xff, 0xb9, 0xf9, 0x11, 0x56, 0x51, 0x13, 0x00, 0x00,
}
