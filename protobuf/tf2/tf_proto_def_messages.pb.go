// Code generated by protoc-gen-go. DO NOT EDIT.
// source: tf_proto_def_messages.proto

package tf2 // import "github.com/13k/go-steam-resources/protobuf/tf2"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import descriptor "github.com/golang/protobuf/protoc-gen-go/descriptor"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type LogicalOperation int32

const (
	LogicalOperation_AND LogicalOperation = 0
	LogicalOperation_OR  LogicalOperation = 1
	LogicalOperation_NOT LogicalOperation = 2
)

var LogicalOperation_name = map[int32]string{
	0: "AND",
	1: "OR",
	2: "NOT",
}
var LogicalOperation_value = map[string]int32{
	"AND": 0,
	"OR":  1,
	"NOT": 2,
}

func (x LogicalOperation) Enum() *LogicalOperation {
	p := new(LogicalOperation)
	*p = x
	return p
}
func (x LogicalOperation) String() string {
	return proto.EnumName(LogicalOperation_name, int32(x))
}
func (x *LogicalOperation) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(LogicalOperation_value, data, "LogicalOperation")
	if err != nil {
		return err
	}
	*x = LogicalOperation(value)
	return nil
}
func (LogicalOperation) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_tf_proto_def_messages_a921922ea643aecb, []int{0}
}

type EValueDefinitionSource int32

const (
	EValueDefinitionSource_REFERENCE_DEFINES EValueDefinitionSource = 0
	EValueDefinitionSource_PARENT_DEFINES    EValueDefinitionSource = 1
	EValueDefinitionSource_THIS_DEFINES      EValueDefinitionSource = 2
	EValueDefinitionSource_VARIABLE_DEFINES  EValueDefinitionSource = 3
	EValueDefinitionSource_NOT_DEFINED       EValueDefinitionSource = 4
)

var EValueDefinitionSource_name = map[int32]string{
	0: "REFERENCE_DEFINES",
	1: "PARENT_DEFINES",
	2: "THIS_DEFINES",
	3: "VARIABLE_DEFINES",
	4: "NOT_DEFINED",
}
var EValueDefinitionSource_value = map[string]int32{
	"REFERENCE_DEFINES": 0,
	"PARENT_DEFINES":    1,
	"THIS_DEFINES":      2,
	"VARIABLE_DEFINES":  3,
	"NOT_DEFINED":       4,
}

func (x EValueDefinitionSource) Enum() *EValueDefinitionSource {
	p := new(EValueDefinitionSource)
	*p = x
	return p
}
func (x EValueDefinitionSource) String() string {
	return proto.EnumName(EValueDefinitionSource_name, int32(x))
}
func (x *EValueDefinitionSource) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EValueDefinitionSource_value, data, "EValueDefinitionSource")
	if err != nil {
		return err
	}
	*x = EValueDefinitionSource(value)
	return nil
}
func (EValueDefinitionSource) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_tf_proto_def_messages_a921922ea643aecb, []int{1}
}

type ProtoDefTypes int32

const (
	ProtoDefTypes_DEF_TYPE_QUEST_MAP_NODE           ProtoDefTypes = 0
	ProtoDefTypes_DEF_TYPE_QUEST_THEME              ProtoDefTypes = 2
	ProtoDefTypes_DEF_TYPE_QUEST_MAP_REGION         ProtoDefTypes = 3
	ProtoDefTypes_DEF_TYPE_QUEST                    ProtoDefTypes = 4
	ProtoDefTypes_DEF_TYPE_QUEST_OBJECTIVE          ProtoDefTypes = 5
	ProtoDefTypes_DEF_TYPE_PAINTKIT_VARIABLES       ProtoDefTypes = 6
	ProtoDefTypes_DEF_TYPE_PAINTKIT_OPERATION       ProtoDefTypes = 7
	ProtoDefTypes_DEF_TYPE_PAINTKIT_ITEM_DEFINITION ProtoDefTypes = 8
	ProtoDefTypes_DEF_TYPE_PAINTKIT_DEFINITION      ProtoDefTypes = 9
	ProtoDefTypes_DEF_TYPE_HEADER_ONLY              ProtoDefTypes = 10
	ProtoDefTypes_DEF_TYPE_QUEST_MAP_STORE_ITEM     ProtoDefTypes = 11
	ProtoDefTypes_DEF_TYPE_QUEST_MAP_STAR_TYPE      ProtoDefTypes = 12
)

var ProtoDefTypes_name = map[int32]string{
	0:  "DEF_TYPE_QUEST_MAP_NODE",
	2:  "DEF_TYPE_QUEST_THEME",
	3:  "DEF_TYPE_QUEST_MAP_REGION",
	4:  "DEF_TYPE_QUEST",
	5:  "DEF_TYPE_QUEST_OBJECTIVE",
	6:  "DEF_TYPE_PAINTKIT_VARIABLES",
	7:  "DEF_TYPE_PAINTKIT_OPERATION",
	8:  "DEF_TYPE_PAINTKIT_ITEM_DEFINITION",
	9:  "DEF_TYPE_PAINTKIT_DEFINITION",
	10: "DEF_TYPE_HEADER_ONLY",
	11: "DEF_TYPE_QUEST_MAP_STORE_ITEM",
	12: "DEF_TYPE_QUEST_MAP_STAR_TYPE",
}
var ProtoDefTypes_value = map[string]int32{
	"DEF_TYPE_QUEST_MAP_NODE":           0,
	"DEF_TYPE_QUEST_THEME":              2,
	"DEF_TYPE_QUEST_MAP_REGION":         3,
	"DEF_TYPE_QUEST":                    4,
	"DEF_TYPE_QUEST_OBJECTIVE":          5,
	"DEF_TYPE_PAINTKIT_VARIABLES":       6,
	"DEF_TYPE_PAINTKIT_OPERATION":       7,
	"DEF_TYPE_PAINTKIT_ITEM_DEFINITION": 8,
	"DEF_TYPE_PAINTKIT_DEFINITION":      9,
	"DEF_TYPE_HEADER_ONLY":              10,
	"DEF_TYPE_QUEST_MAP_STORE_ITEM":     11,
	"DEF_TYPE_QUEST_MAP_STAR_TYPE":      12,
}

func (x ProtoDefTypes) Enum() *ProtoDefTypes {
	p := new(ProtoDefTypes)
	*p = x
	return p
}
func (x ProtoDefTypes) String() string {
	return proto.EnumName(ProtoDefTypes_name, int32(x))
}
func (x *ProtoDefTypes) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ProtoDefTypes_value, data, "ProtoDefTypes")
	if err != nil {
		return err
	}
	*x = ProtoDefTypes(value)
	return nil
}
func (ProtoDefTypes) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_tf_proto_def_messages_a921922ea643aecb, []int{2}
}

type EQuestPoints int32

const (
	EQuestPoints_QUEST_POINTS_NOVICE   EQuestPoints = 0
	EQuestPoints_QUEST_POINTS_ADVANCED EQuestPoints = 1
	EQuestPoints_QUEST_POINTS_EXPERT   EQuestPoints = 2
)

var EQuestPoints_name = map[int32]string{
	0: "QUEST_POINTS_NOVICE",
	1: "QUEST_POINTS_ADVANCED",
	2: "QUEST_POINTS_EXPERT",
}
var EQuestPoints_value = map[string]int32{
	"QUEST_POINTS_NOVICE":   0,
	"QUEST_POINTS_ADVANCED": 1,
	"QUEST_POINTS_EXPERT":   2,
}

func (x EQuestPoints) Enum() *EQuestPoints {
	p := new(EQuestPoints)
	*p = x
	return p
}
func (x EQuestPoints) String() string {
	return proto.EnumName(EQuestPoints_name, int32(x))
}
func (x *EQuestPoints) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EQuestPoints_value, data, "EQuestPoints")
	if err != nil {
		return err
	}
	*x = EQuestPoints(value)
	return nil
}
func (EQuestPoints) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_tf_proto_def_messages_a921922ea643aecb, []int{3}
}

type EVarFieldType int32

const (
	EVarFieldType_VAR_TYPE_INVALID EVarFieldType = 1
	EVarFieldType_VAR_TYPE_FLOAT   EVarFieldType = 2
	EVarFieldType_VAR_TYPE_DOUBLE  EVarFieldType = 3
	EVarFieldType_VAR_TYPE_UINT32  EVarFieldType = 4
	EVarFieldType_VAR_TYPE_UINT64  EVarFieldType = 5
	EVarFieldType_VAR_TYPE_SINT32  EVarFieldType = 6
	EVarFieldType_VAR_TYPE_SINT64  EVarFieldType = 7
	EVarFieldType_VAR_TYPE_BOOL    EVarFieldType = 8
	EVarFieldType_VAR_TYPE_STRING  EVarFieldType = 9
)

var EVarFieldType_name = map[int32]string{
	1: "VAR_TYPE_INVALID",
	2: "VAR_TYPE_FLOAT",
	3: "VAR_TYPE_DOUBLE",
	4: "VAR_TYPE_UINT32",
	5: "VAR_TYPE_UINT64",
	6: "VAR_TYPE_SINT32",
	7: "VAR_TYPE_SINT64",
	8: "VAR_TYPE_BOOL",
	9: "VAR_TYPE_STRING",
}
var EVarFieldType_value = map[string]int32{
	"VAR_TYPE_INVALID": 1,
	"VAR_TYPE_FLOAT":   2,
	"VAR_TYPE_DOUBLE":  3,
	"VAR_TYPE_UINT32":  4,
	"VAR_TYPE_UINT64":  5,
	"VAR_TYPE_SINT32":  6,
	"VAR_TYPE_SINT64":  7,
	"VAR_TYPE_BOOL":    8,
	"VAR_TYPE_STRING":  9,
}

func (x EVarFieldType) Enum() *EVarFieldType {
	p := new(EVarFieldType)
	*p = x
	return p
}
func (x EVarFieldType) String() string {
	return proto.EnumName(EVarFieldType_name, int32(x))
}
func (x *EVarFieldType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EVarFieldType_value, data, "EVarFieldType")
	if err != nil {
		return err
	}
	*x = EVarFieldType(value)
	return nil
}
func (EVarFieldType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_tf_proto_def_messages_a921922ea643aecb, []int{4}
}

type ENodeCashReward int32

const (
	ENodeCashReward_CASH_REWARD_NONE   ENodeCashReward = 1
	ENodeCashReward_CASH_REWARD_SMALL  ENodeCashReward = 2
	ENodeCashReward_CASH_REWARD_MEDIUM ENodeCashReward = 3
	ENodeCashReward_CASH_REWARD_LARGE  ENodeCashReward = 4
)

var ENodeCashReward_name = map[int32]string{
	1: "CASH_REWARD_NONE",
	2: "CASH_REWARD_SMALL",
	3: "CASH_REWARD_MEDIUM",
	4: "CASH_REWARD_LARGE",
}
var ENodeCashReward_value = map[string]int32{
	"CASH_REWARD_NONE":   1,
	"CASH_REWARD_SMALL":  2,
	"CASH_REWARD_MEDIUM": 3,
	"CASH_REWARD_LARGE":  4,
}

func (x ENodeCashReward) Enum() *ENodeCashReward {
	p := new(ENodeCashReward)
	*p = x
	return p
}
func (x ENodeCashReward) String() string {
	return proto.EnumName(ENodeCashReward_name, int32(x))
}
func (x *ENodeCashReward) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ENodeCashReward_value, data, "ENodeCashReward")
	if err != nil {
		return err
	}
	*x = ENodeCashReward(value)
	return nil
}
func (ENodeCashReward) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_tf_proto_def_messages_a921922ea643aecb, []int{5}
}

type CMsgQuestObjectiveDef_ETF2GameModes int32

const (
	CMsgQuestObjectiveDef_kGameCategory_Escort           CMsgQuestObjectiveDef_ETF2GameModes = 0
	CMsgQuestObjectiveDef_kGameCategory_CTF              CMsgQuestObjectiveDef_ETF2GameModes = 1
	CMsgQuestObjectiveDef_kGameCategory_AttackDefense    CMsgQuestObjectiveDef_ETF2GameModes = 2
	CMsgQuestObjectiveDef_kGameCategory_Koth             CMsgQuestObjectiveDef_ETF2GameModes = 3
	CMsgQuestObjectiveDef_kGameCategory_CP               CMsgQuestObjectiveDef_ETF2GameModes = 4
	CMsgQuestObjectiveDef_kGameCategory_EscortRace       CMsgQuestObjectiveDef_ETF2GameModes = 5
	CMsgQuestObjectiveDef_kGameCategory_EventMix         CMsgQuestObjectiveDef_ETF2GameModes = 6
	CMsgQuestObjectiveDef_kGameCategory_SD               CMsgQuestObjectiveDef_ETF2GameModes = 7
	CMsgQuestObjectiveDef_kGameCategory_Quickplay        CMsgQuestObjectiveDef_ETF2GameModes = 8
	CMsgQuestObjectiveDef_kGameCategory_Event247         CMsgQuestObjectiveDef_ETF2GameModes = 9
	CMsgQuestObjectiveDef_kGameCategory_Arena            CMsgQuestObjectiveDef_ETF2GameModes = 10
	CMsgQuestObjectiveDef_kGameCategory_RobotDestruction CMsgQuestObjectiveDef_ETF2GameModes = 11
	CMsgQuestObjectiveDef_kGameCategory_Powerup          CMsgQuestObjectiveDef_ETF2GameModes = 12
	CMsgQuestObjectiveDef_kGameCategory_Featured         CMsgQuestObjectiveDef_ETF2GameModes = 13
	CMsgQuestObjectiveDef_kGameCategory_Passtime         CMsgQuestObjectiveDef_ETF2GameModes = 14
	CMsgQuestObjectiveDef_kGameCategory_Community_Update CMsgQuestObjectiveDef_ETF2GameModes = 15
	CMsgQuestObjectiveDef_kGameCategory_Misc             CMsgQuestObjectiveDef_ETF2GameModes = 16
	CMsgQuestObjectiveDef_kGameCategory_Competitive_6v6  CMsgQuestObjectiveDef_ETF2GameModes = 17
	CMsgQuestObjectiveDef_kGameCategory_Other            CMsgQuestObjectiveDef_ETF2GameModes = 18
	CMsgQuestObjectiveDef_kGameCategory_Halloween        CMsgQuestObjectiveDef_ETF2GameModes = 19
)

var CMsgQuestObjectiveDef_ETF2GameModes_name = map[int32]string{
	0:  "kGameCategory_Escort",
	1:  "kGameCategory_CTF",
	2:  "kGameCategory_AttackDefense",
	3:  "kGameCategory_Koth",
	4:  "kGameCategory_CP",
	5:  "kGameCategory_EscortRace",
	6:  "kGameCategory_EventMix",
	7:  "kGameCategory_SD",
	8:  "kGameCategory_Quickplay",
	9:  "kGameCategory_Event247",
	10: "kGameCategory_Arena",
	11: "kGameCategory_RobotDestruction",
	12: "kGameCategory_Powerup",
	13: "kGameCategory_Featured",
	14: "kGameCategory_Passtime",
	15: "kGameCategory_Community_Update",
	16: "kGameCategory_Misc",
	17: "kGameCategory_Competitive_6v6",
	18: "kGameCategory_Other",
	19: "kGameCategory_Halloween",
}
var CMsgQuestObjectiveDef_ETF2GameModes_value = map[string]int32{
	"kGameCategory_Escort":           0,
	"kGameCategory_CTF":              1,
	"kGameCategory_AttackDefense":    2,
	"kGameCategory_Koth":             3,
	"kGameCategory_CP":               4,
	"kGameCategory_EscortRace":       5,
	"kGameCategory_EventMix":         6,
	"kGameCategory_SD":               7,
	"kGameCategory_Quickplay":        8,
	"kGameCategory_Event247":         9,
	"kGameCategory_Arena":            10,
	"kGameCategory_RobotDestruction": 11,
	"kGameCategory_Powerup":          12,
	"kGameCategory_Featured":         13,
	"kGameCategory_Passtime":         14,
	"kGameCategory_Community_Update": 15,
	"kGameCategory_Misc":             16,
	"kGameCategory_Competitive_6v6":  17,
	"kGameCategory_Other":            18,
	"kGameCategory_Halloween":        19,
}

func (x CMsgQuestObjectiveDef_ETF2GameModes) Enum() *CMsgQuestObjectiveDef_ETF2GameModes {
	p := new(CMsgQuestObjectiveDef_ETF2GameModes)
	*p = x
	return p
}
func (x CMsgQuestObjectiveDef_ETF2GameModes) String() string {
	return proto.EnumName(CMsgQuestObjectiveDef_ETF2GameModes_name, int32(x))
}
func (x *CMsgQuestObjectiveDef_ETF2GameModes) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgQuestObjectiveDef_ETF2GameModes_value, data, "CMsgQuestObjectiveDef_ETF2GameModes")
	if err != nil {
		return err
	}
	*x = CMsgQuestObjectiveDef_ETF2GameModes(value)
	return nil
}
func (CMsgQuestObjectiveDef_ETF2GameModes) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_tf_proto_def_messages_a921922ea643aecb, []int{6, 0}
}

type CMsgQuestObjectiveDef_ETF2Conditions int32

const (
	CMsgQuestObjectiveDef_TF_COND_AIMING                           CMsgQuestObjectiveDef_ETF2Conditions = 0
	CMsgQuestObjectiveDef_TF_COND_ZOOMED                           CMsgQuestObjectiveDef_ETF2Conditions = 1
	CMsgQuestObjectiveDef_TF_COND_DISGUISING                       CMsgQuestObjectiveDef_ETF2Conditions = 2
	CMsgQuestObjectiveDef_TF_COND_DISGUISED                        CMsgQuestObjectiveDef_ETF2Conditions = 3
	CMsgQuestObjectiveDef_TF_COND_STEALTHED                        CMsgQuestObjectiveDef_ETF2Conditions = 4
	CMsgQuestObjectiveDef_TF_COND_INVULNERABLE                     CMsgQuestObjectiveDef_ETF2Conditions = 5
	CMsgQuestObjectiveDef_TF_COND_TELEPORTED                       CMsgQuestObjectiveDef_ETF2Conditions = 6
	CMsgQuestObjectiveDef_TF_COND_TAUNTING                         CMsgQuestObjectiveDef_ETF2Conditions = 7
	CMsgQuestObjectiveDef_TF_COND_INVULNERABLE_WEARINGOFF          CMsgQuestObjectiveDef_ETF2Conditions = 8
	CMsgQuestObjectiveDef_TF_COND_STEALTHED_BLINK                  CMsgQuestObjectiveDef_ETF2Conditions = 9
	CMsgQuestObjectiveDef_TF_COND_SELECTED_TO_TELEPORT             CMsgQuestObjectiveDef_ETF2Conditions = 10
	CMsgQuestObjectiveDef_TF_COND_CRITBOOSTED                      CMsgQuestObjectiveDef_ETF2Conditions = 11
	CMsgQuestObjectiveDef_TF_COND_TMPDAMAGEBONUS                   CMsgQuestObjectiveDef_ETF2Conditions = 12
	CMsgQuestObjectiveDef_TF_COND_FEIGN_DEATH                      CMsgQuestObjectiveDef_ETF2Conditions = 13
	CMsgQuestObjectiveDef_TF_COND_PHASE                            CMsgQuestObjectiveDef_ETF2Conditions = 14
	CMsgQuestObjectiveDef_TF_COND_STUNNED                          CMsgQuestObjectiveDef_ETF2Conditions = 15
	CMsgQuestObjectiveDef_TF_COND_OFFENSEBUFF                      CMsgQuestObjectiveDef_ETF2Conditions = 16
	CMsgQuestObjectiveDef_TF_COND_SHIELD_CHARGE                    CMsgQuestObjectiveDef_ETF2Conditions = 17
	CMsgQuestObjectiveDef_TF_COND_DEMO_BUFF                        CMsgQuestObjectiveDef_ETF2Conditions = 18
	CMsgQuestObjectiveDef_TF_COND_ENERGY_BUFF                      CMsgQuestObjectiveDef_ETF2Conditions = 19
	CMsgQuestObjectiveDef_TF_COND_RADIUSHEAL                       CMsgQuestObjectiveDef_ETF2Conditions = 20
	CMsgQuestObjectiveDef_TF_COND_HEALTH_BUFF                      CMsgQuestObjectiveDef_ETF2Conditions = 21
	CMsgQuestObjectiveDef_TF_COND_BURNING                          CMsgQuestObjectiveDef_ETF2Conditions = 22
	CMsgQuestObjectiveDef_TF_COND_HEALTH_OVERHEALED                CMsgQuestObjectiveDef_ETF2Conditions = 23
	CMsgQuestObjectiveDef_TF_COND_URINE                            CMsgQuestObjectiveDef_ETF2Conditions = 24
	CMsgQuestObjectiveDef_TF_COND_BLEEDING                         CMsgQuestObjectiveDef_ETF2Conditions = 25
	CMsgQuestObjectiveDef_TF_COND_DEFENSEBUFF                      CMsgQuestObjectiveDef_ETF2Conditions = 26
	CMsgQuestObjectiveDef_TF_COND_MAD_MILK                         CMsgQuestObjectiveDef_ETF2Conditions = 27
	CMsgQuestObjectiveDef_TF_COND_MEGAHEAL                         CMsgQuestObjectiveDef_ETF2Conditions = 28
	CMsgQuestObjectiveDef_TF_COND_REGENONDAMAGEBUFF                CMsgQuestObjectiveDef_ETF2Conditions = 29
	CMsgQuestObjectiveDef_TF_COND_MARKEDFORDEATH                   CMsgQuestObjectiveDef_ETF2Conditions = 30
	CMsgQuestObjectiveDef_TF_COND_NOHEALINGDAMAGEBUFF              CMsgQuestObjectiveDef_ETF2Conditions = 31
	CMsgQuestObjectiveDef_TF_COND_SPEED_BOOST                      CMsgQuestObjectiveDef_ETF2Conditions = 32
	CMsgQuestObjectiveDef_TF_COND_CRITBOOSTED_PUMPKIN              CMsgQuestObjectiveDef_ETF2Conditions = 33
	CMsgQuestObjectiveDef_TF_COND_CRITBOOSTED_USER_BUFF            CMsgQuestObjectiveDef_ETF2Conditions = 34
	CMsgQuestObjectiveDef_TF_COND_CRITBOOSTED_DEMO_CHARGE          CMsgQuestObjectiveDef_ETF2Conditions = 35
	CMsgQuestObjectiveDef_TF_COND_SODAPOPPER_HYPE                  CMsgQuestObjectiveDef_ETF2Conditions = 36
	CMsgQuestObjectiveDef_TF_COND_CRITBOOSTED_FIRST_BLOOD          CMsgQuestObjectiveDef_ETF2Conditions = 37
	CMsgQuestObjectiveDef_TF_COND_CRITBOOSTED_BONUS_TIME           CMsgQuestObjectiveDef_ETF2Conditions = 38
	CMsgQuestObjectiveDef_TF_COND_CRITBOOSTED_CTF_CAPTURE          CMsgQuestObjectiveDef_ETF2Conditions = 39
	CMsgQuestObjectiveDef_TF_COND_CRITBOOSTED_ON_KILL              CMsgQuestObjectiveDef_ETF2Conditions = 40
	CMsgQuestObjectiveDef_TF_COND_CANNOT_SWITCH_FROM_MELEE         CMsgQuestObjectiveDef_ETF2Conditions = 41
	CMsgQuestObjectiveDef_TF_COND_DEFENSEBUFF_NO_CRIT_BLOCK        CMsgQuestObjectiveDef_ETF2Conditions = 42
	CMsgQuestObjectiveDef_TF_COND_REPROGRAMMED                     CMsgQuestObjectiveDef_ETF2Conditions = 43
	CMsgQuestObjectiveDef_TF_COND_CRITBOOSTED_RAGE_BUFF            CMsgQuestObjectiveDef_ETF2Conditions = 44
	CMsgQuestObjectiveDef_TF_COND_DEFENSEBUFF_HIGH                 CMsgQuestObjectiveDef_ETF2Conditions = 45
	CMsgQuestObjectiveDef_TF_COND_SNIPERCHARGE_RAGE_BUFF           CMsgQuestObjectiveDef_ETF2Conditions = 46
	CMsgQuestObjectiveDef_TF_COND_DISGUISE_WEARINGOFF              CMsgQuestObjectiveDef_ETF2Conditions = 47
	CMsgQuestObjectiveDef_TF_COND_MARKEDFORDEATH_SILENT            CMsgQuestObjectiveDef_ETF2Conditions = 48
	CMsgQuestObjectiveDef_TF_COND_DISGUISED_AS_DISPENSER           CMsgQuestObjectiveDef_ETF2Conditions = 49
	CMsgQuestObjectiveDef_TF_COND_SAPPED                           CMsgQuestObjectiveDef_ETF2Conditions = 50
	CMsgQuestObjectiveDef_TF_COND_INVULNERABLE_HIDE_UNLESS_DAMAGED CMsgQuestObjectiveDef_ETF2Conditions = 51
	CMsgQuestObjectiveDef_TF_COND_INVULNERABLE_USER_BUFF           CMsgQuestObjectiveDef_ETF2Conditions = 52
	CMsgQuestObjectiveDef_TF_COND_HALLOWEEN_BOMB_HEAD              CMsgQuestObjectiveDef_ETF2Conditions = 53
	CMsgQuestObjectiveDef_TF_COND_HALLOWEEN_THRILLER               CMsgQuestObjectiveDef_ETF2Conditions = 54
	CMsgQuestObjectiveDef_TF_COND_RADIUSHEAL_ON_DAMAGE             CMsgQuestObjectiveDef_ETF2Conditions = 55
	CMsgQuestObjectiveDef_TF_COND_CRITBOOSTED_CARD_EFFECT          CMsgQuestObjectiveDef_ETF2Conditions = 56
	CMsgQuestObjectiveDef_TF_COND_INVULNERABLE_CARD_EFFECT         CMsgQuestObjectiveDef_ETF2Conditions = 57
	CMsgQuestObjectiveDef_TF_COND_MEDIGUN_UBER_BULLET_RESIST       CMsgQuestObjectiveDef_ETF2Conditions = 58
	CMsgQuestObjectiveDef_TF_COND_MEDIGUN_UBER_BLAST_RESIST        CMsgQuestObjectiveDef_ETF2Conditions = 59
	CMsgQuestObjectiveDef_TF_COND_MEDIGUN_UBER_FIRE_RESIST         CMsgQuestObjectiveDef_ETF2Conditions = 60
	CMsgQuestObjectiveDef_TF_COND_MEDIGUN_SMALL_BULLET_RESIST      CMsgQuestObjectiveDef_ETF2Conditions = 61
	CMsgQuestObjectiveDef_TF_COND_MEDIGUN_SMALL_BLAST_RESIST       CMsgQuestObjectiveDef_ETF2Conditions = 62
	CMsgQuestObjectiveDef_TF_COND_MEDIGUN_SMALL_FIRE_RESIST        CMsgQuestObjectiveDef_ETF2Conditions = 63
	CMsgQuestObjectiveDef_TF_COND_STEALTHED_USER_BUFF              CMsgQuestObjectiveDef_ETF2Conditions = 64
	CMsgQuestObjectiveDef_TF_COND_MEDIGUN_DEBUFF                   CMsgQuestObjectiveDef_ETF2Conditions = 65
	CMsgQuestObjectiveDef_TF_COND_STEALTHED_USER_BUFF_FADING       CMsgQuestObjectiveDef_ETF2Conditions = 66
	CMsgQuestObjectiveDef_TF_COND_BULLET_IMMUNE                    CMsgQuestObjectiveDef_ETF2Conditions = 67
	CMsgQuestObjectiveDef_TF_COND_BLAST_IMMUNE                     CMsgQuestObjectiveDef_ETF2Conditions = 68
	CMsgQuestObjectiveDef_TF_COND_FIRE_IMMUNE                      CMsgQuestObjectiveDef_ETF2Conditions = 69
	CMsgQuestObjectiveDef_TF_COND_PREVENT_DEATH                    CMsgQuestObjectiveDef_ETF2Conditions = 70
	CMsgQuestObjectiveDef_TF_COND_MVM_BOT_STUN_RADIOWAVE           CMsgQuestObjectiveDef_ETF2Conditions = 71
	CMsgQuestObjectiveDef_TF_COND_HALLOWEEN_SPEED_BOOST            CMsgQuestObjectiveDef_ETF2Conditions = 72
	CMsgQuestObjectiveDef_TF_COND_HALLOWEEN_QUICK_HEAL             CMsgQuestObjectiveDef_ETF2Conditions = 73
	CMsgQuestObjectiveDef_TF_COND_HALLOWEEN_GIANT                  CMsgQuestObjectiveDef_ETF2Conditions = 74
	CMsgQuestObjectiveDef_TF_COND_HALLOWEEN_TINY                   CMsgQuestObjectiveDef_ETF2Conditions = 75
	CMsgQuestObjectiveDef_TF_COND_HALLOWEEN_IN_HELL                CMsgQuestObjectiveDef_ETF2Conditions = 76
	CMsgQuestObjectiveDef_TF_COND_HALLOWEEN_GHOST_MODE             CMsgQuestObjectiveDef_ETF2Conditions = 77
	CMsgQuestObjectiveDef_TF_COND_MINICRITBOOSTED_ON_KILL          CMsgQuestObjectiveDef_ETF2Conditions = 78
	CMsgQuestObjectiveDef_TF_COND_OBSCURED_SMOKE                   CMsgQuestObjectiveDef_ETF2Conditions = 79
	CMsgQuestObjectiveDef_TF_COND_PARACHUTE_ACTIVE                 CMsgQuestObjectiveDef_ETF2Conditions = 80
	CMsgQuestObjectiveDef_TF_COND_BLASTJUMPING                     CMsgQuestObjectiveDef_ETF2Conditions = 81
	CMsgQuestObjectiveDef_TF_COND_HALLOWEEN_KART                   CMsgQuestObjectiveDef_ETF2Conditions = 82
	CMsgQuestObjectiveDef_TF_COND_HALLOWEEN_KART_DASH              CMsgQuestObjectiveDef_ETF2Conditions = 83
	CMsgQuestObjectiveDef_TF_COND_BALLOON_HEAD                     CMsgQuestObjectiveDef_ETF2Conditions = 84
	CMsgQuestObjectiveDef_TF_COND_MELEE_ONLY                       CMsgQuestObjectiveDef_ETF2Conditions = 85
	CMsgQuestObjectiveDef_TF_COND_SWIMMING_CURSE                   CMsgQuestObjectiveDef_ETF2Conditions = 86
	CMsgQuestObjectiveDef_TF_COND_FREEZE_INPUT                     CMsgQuestObjectiveDef_ETF2Conditions = 87
	CMsgQuestObjectiveDef_TF_COND_HALLOWEEN_KART_CAGE              CMsgQuestObjectiveDef_ETF2Conditions = 88
	CMsgQuestObjectiveDef_TF_COND_DONOTUSE_0                       CMsgQuestObjectiveDef_ETF2Conditions = 89
	CMsgQuestObjectiveDef_TF_COND_RUNE_STRENGTH                    CMsgQuestObjectiveDef_ETF2Conditions = 90
	CMsgQuestObjectiveDef_TF_COND_RUNE_HASTE                       CMsgQuestObjectiveDef_ETF2Conditions = 91
	CMsgQuestObjectiveDef_TF_COND_RUNE_REGEN                       CMsgQuestObjectiveDef_ETF2Conditions = 92
	CMsgQuestObjectiveDef_TF_COND_RUNE_RESIST                      CMsgQuestObjectiveDef_ETF2Conditions = 93
	CMsgQuestObjectiveDef_TF_COND_RUNE_VAMPIRE                     CMsgQuestObjectiveDef_ETF2Conditions = 94
	CMsgQuestObjectiveDef_TF_COND_RUNE_REFLECT                     CMsgQuestObjectiveDef_ETF2Conditions = 95
	CMsgQuestObjectiveDef_TF_COND_RUNE_PRECISION                   CMsgQuestObjectiveDef_ETF2Conditions = 96
	CMsgQuestObjectiveDef_TF_COND_RUNE_AGILITY                     CMsgQuestObjectiveDef_ETF2Conditions = 97
	CMsgQuestObjectiveDef_TF_COND_GRAPPLINGHOOK                    CMsgQuestObjectiveDef_ETF2Conditions = 98
	CMsgQuestObjectiveDef_TF_COND_GRAPPLINGHOOK_SAFEFALL           CMsgQuestObjectiveDef_ETF2Conditions = 99
	CMsgQuestObjectiveDef_TF_COND_GRAPPLINGHOOK_LATCHED            CMsgQuestObjectiveDef_ETF2Conditions = 100
	CMsgQuestObjectiveDef_TF_COND_GRAPPLINGHOOK_BLEEDING           CMsgQuestObjectiveDef_ETF2Conditions = 101
	CMsgQuestObjectiveDef_TF_COND_AFTERBURN_IMMUNE                 CMsgQuestObjectiveDef_ETF2Conditions = 102
	CMsgQuestObjectiveDef_TF_COND_RUNE_KNOCKOUT                    CMsgQuestObjectiveDef_ETF2Conditions = 103
	CMsgQuestObjectiveDef_TF_COND_RUNE_IMBALANCE                   CMsgQuestObjectiveDef_ETF2Conditions = 104
	CMsgQuestObjectiveDef_TF_COND_CRITBOOSTED_RUNE_TEMP            CMsgQuestObjectiveDef_ETF2Conditions = 105
	CMsgQuestObjectiveDef_TF_COND_PASSTIME_INTERCEPTION            CMsgQuestObjectiveDef_ETF2Conditions = 106
	CMsgQuestObjectiveDef_TF_COND_SWIMMING_NO_EFFECTS              CMsgQuestObjectiveDef_ETF2Conditions = 107
	CMsgQuestObjectiveDef_TF_COND_PURGATORY                        CMsgQuestObjectiveDef_ETF2Conditions = 108
	CMsgQuestObjectiveDef_TF_COND_RUNE_KING                        CMsgQuestObjectiveDef_ETF2Conditions = 109
	CMsgQuestObjectiveDef_TF_COND_RUNE_PLAGUE                      CMsgQuestObjectiveDef_ETF2Conditions = 110
	CMsgQuestObjectiveDef_TF_COND_RUNE_SUPERNOVA                   CMsgQuestObjectiveDef_ETF2Conditions = 111
	CMsgQuestObjectiveDef_TF_COND_PLAGUE                           CMsgQuestObjectiveDef_ETF2Conditions = 112
	CMsgQuestObjectiveDef_TF_COND_KING_BUFFED                      CMsgQuestObjectiveDef_ETF2Conditions = 113
	CMsgQuestObjectiveDef_TF_COND_TEAM_GLOWS                       CMsgQuestObjectiveDef_ETF2Conditions = 114
	CMsgQuestObjectiveDef_TF_COND_KNOCKED_INTO_AIR                 CMsgQuestObjectiveDef_ETF2Conditions = 115
	CMsgQuestObjectiveDef_TF_COND_COMPETITIVE_WINNER               CMsgQuestObjectiveDef_ETF2Conditions = 116
	CMsgQuestObjectiveDef_TF_COND_COMPETITIVE_LOSER                CMsgQuestObjectiveDef_ETF2Conditions = 117
	CMsgQuestObjectiveDef_TF_COND_HEALING_DEBUFF                   CMsgQuestObjectiveDef_ETF2Conditions = 118
	CMsgQuestObjectiveDef_TF_COND_PASSTIME_PENALTY_DEBUFF          CMsgQuestObjectiveDef_ETF2Conditions = 119
	CMsgQuestObjectiveDef_TF_COND_PARACHUTE_DEPLOYED               CMsgQuestObjectiveDef_ETF2Conditions = 120
	CMsgQuestObjectiveDef_TF_COND_NO_COMBAT_SPEED_BOOST            CMsgQuestObjectiveDef_ETF2Conditions = 121
	CMsgQuestObjectiveDef_TF_COND_TRANQ_SPY_BOOST                  CMsgQuestObjectiveDef_ETF2Conditions = 122
	CMsgQuestObjectiveDef_TF_COND_TRANQ_MARKED                     CMsgQuestObjectiveDef_ETF2Conditions = 123
	CMsgQuestObjectiveDef_TF_COND_ROCKETPACK                       CMsgQuestObjectiveDef_ETF2Conditions = 126
	CMsgQuestObjectiveDef_TF_COND_ROCKETPACK_PASSENGER             CMsgQuestObjectiveDef_ETF2Conditions = 127
	CMsgQuestObjectiveDef_TF_COND_STEALTHED_PHASE                  CMsgQuestObjectiveDef_ETF2Conditions = 128
	CMsgQuestObjectiveDef_TF_COND_CLIP_OVERLOAD                    CMsgQuestObjectiveDef_ETF2Conditions = 129
	CMsgQuestObjectiveDef_TF_COND_SPY_CLASS_STEAL                  CMsgQuestObjectiveDef_ETF2Conditions = 130
	CMsgQuestObjectiveDef_TF_COND_GAS                              CMsgQuestObjectiveDef_ETF2Conditions = 131
)

var CMsgQuestObjectiveDef_ETF2Conditions_name = map[int32]string{
	0:   "TF_COND_AIMING",
	1:   "TF_COND_ZOOMED",
	2:   "TF_COND_DISGUISING",
	3:   "TF_COND_DISGUISED",
	4:   "TF_COND_STEALTHED",
	5:   "TF_COND_INVULNERABLE",
	6:   "TF_COND_TELEPORTED",
	7:   "TF_COND_TAUNTING",
	8:   "TF_COND_INVULNERABLE_WEARINGOFF",
	9:   "TF_COND_STEALTHED_BLINK",
	10:  "TF_COND_SELECTED_TO_TELEPORT",
	11:  "TF_COND_CRITBOOSTED",
	12:  "TF_COND_TMPDAMAGEBONUS",
	13:  "TF_COND_FEIGN_DEATH",
	14:  "TF_COND_PHASE",
	15:  "TF_COND_STUNNED",
	16:  "TF_COND_OFFENSEBUFF",
	17:  "TF_COND_SHIELD_CHARGE",
	18:  "TF_COND_DEMO_BUFF",
	19:  "TF_COND_ENERGY_BUFF",
	20:  "TF_COND_RADIUSHEAL",
	21:  "TF_COND_HEALTH_BUFF",
	22:  "TF_COND_BURNING",
	23:  "TF_COND_HEALTH_OVERHEALED",
	24:  "TF_COND_URINE",
	25:  "TF_COND_BLEEDING",
	26:  "TF_COND_DEFENSEBUFF",
	27:  "TF_COND_MAD_MILK",
	28:  "TF_COND_MEGAHEAL",
	29:  "TF_COND_REGENONDAMAGEBUFF",
	30:  "TF_COND_MARKEDFORDEATH",
	31:  "TF_COND_NOHEALINGDAMAGEBUFF",
	32:  "TF_COND_SPEED_BOOST",
	33:  "TF_COND_CRITBOOSTED_PUMPKIN",
	34:  "TF_COND_CRITBOOSTED_USER_BUFF",
	35:  "TF_COND_CRITBOOSTED_DEMO_CHARGE",
	36:  "TF_COND_SODAPOPPER_HYPE",
	37:  "TF_COND_CRITBOOSTED_FIRST_BLOOD",
	38:  "TF_COND_CRITBOOSTED_BONUS_TIME",
	39:  "TF_COND_CRITBOOSTED_CTF_CAPTURE",
	40:  "TF_COND_CRITBOOSTED_ON_KILL",
	41:  "TF_COND_CANNOT_SWITCH_FROM_MELEE",
	42:  "TF_COND_DEFENSEBUFF_NO_CRIT_BLOCK",
	43:  "TF_COND_REPROGRAMMED",
	44:  "TF_COND_CRITBOOSTED_RAGE_BUFF",
	45:  "TF_COND_DEFENSEBUFF_HIGH",
	46:  "TF_COND_SNIPERCHARGE_RAGE_BUFF",
	47:  "TF_COND_DISGUISE_WEARINGOFF",
	48:  "TF_COND_MARKEDFORDEATH_SILENT",
	49:  "TF_COND_DISGUISED_AS_DISPENSER",
	50:  "TF_COND_SAPPED",
	51:  "TF_COND_INVULNERABLE_HIDE_UNLESS_DAMAGED",
	52:  "TF_COND_INVULNERABLE_USER_BUFF",
	53:  "TF_COND_HALLOWEEN_BOMB_HEAD",
	54:  "TF_COND_HALLOWEEN_THRILLER",
	55:  "TF_COND_RADIUSHEAL_ON_DAMAGE",
	56:  "TF_COND_CRITBOOSTED_CARD_EFFECT",
	57:  "TF_COND_INVULNERABLE_CARD_EFFECT",
	58:  "TF_COND_MEDIGUN_UBER_BULLET_RESIST",
	59:  "TF_COND_MEDIGUN_UBER_BLAST_RESIST",
	60:  "TF_COND_MEDIGUN_UBER_FIRE_RESIST",
	61:  "TF_COND_MEDIGUN_SMALL_BULLET_RESIST",
	62:  "TF_COND_MEDIGUN_SMALL_BLAST_RESIST",
	63:  "TF_COND_MEDIGUN_SMALL_FIRE_RESIST",
	64:  "TF_COND_STEALTHED_USER_BUFF",
	65:  "TF_COND_MEDIGUN_DEBUFF",
	66:  "TF_COND_STEALTHED_USER_BUFF_FADING",
	67:  "TF_COND_BULLET_IMMUNE",
	68:  "TF_COND_BLAST_IMMUNE",
	69:  "TF_COND_FIRE_IMMUNE",
	70:  "TF_COND_PREVENT_DEATH",
	71:  "TF_COND_MVM_BOT_STUN_RADIOWAVE",
	72:  "TF_COND_HALLOWEEN_SPEED_BOOST",
	73:  "TF_COND_HALLOWEEN_QUICK_HEAL",
	74:  "TF_COND_HALLOWEEN_GIANT",
	75:  "TF_COND_HALLOWEEN_TINY",
	76:  "TF_COND_HALLOWEEN_IN_HELL",
	77:  "TF_COND_HALLOWEEN_GHOST_MODE",
	78:  "TF_COND_MINICRITBOOSTED_ON_KILL",
	79:  "TF_COND_OBSCURED_SMOKE",
	80:  "TF_COND_PARACHUTE_ACTIVE",
	81:  "TF_COND_BLASTJUMPING",
	82:  "TF_COND_HALLOWEEN_KART",
	83:  "TF_COND_HALLOWEEN_KART_DASH",
	84:  "TF_COND_BALLOON_HEAD",
	85:  "TF_COND_MELEE_ONLY",
	86:  "TF_COND_SWIMMING_CURSE",
	87:  "TF_COND_FREEZE_INPUT",
	88:  "TF_COND_HALLOWEEN_KART_CAGE",
	89:  "TF_COND_DONOTUSE_0",
	90:  "TF_COND_RUNE_STRENGTH",
	91:  "TF_COND_RUNE_HASTE",
	92:  "TF_COND_RUNE_REGEN",
	93:  "TF_COND_RUNE_RESIST",
	94:  "TF_COND_RUNE_VAMPIRE",
	95:  "TF_COND_RUNE_REFLECT",
	96:  "TF_COND_RUNE_PRECISION",
	97:  "TF_COND_RUNE_AGILITY",
	98:  "TF_COND_GRAPPLINGHOOK",
	99:  "TF_COND_GRAPPLINGHOOK_SAFEFALL",
	100: "TF_COND_GRAPPLINGHOOK_LATCHED",
	101: "TF_COND_GRAPPLINGHOOK_BLEEDING",
	102: "TF_COND_AFTERBURN_IMMUNE",
	103: "TF_COND_RUNE_KNOCKOUT",
	104: "TF_COND_RUNE_IMBALANCE",
	105: "TF_COND_CRITBOOSTED_RUNE_TEMP",
	106: "TF_COND_PASSTIME_INTERCEPTION",
	107: "TF_COND_SWIMMING_NO_EFFECTS",
	108: "TF_COND_PURGATORY",
	109: "TF_COND_RUNE_KING",
	110: "TF_COND_RUNE_PLAGUE",
	111: "TF_COND_RUNE_SUPERNOVA",
	112: "TF_COND_PLAGUE",
	113: "TF_COND_KING_BUFFED",
	114: "TF_COND_TEAM_GLOWS",
	115: "TF_COND_KNOCKED_INTO_AIR",
	116: "TF_COND_COMPETITIVE_WINNER",
	117: "TF_COND_COMPETITIVE_LOSER",
	118: "TF_COND_HEALING_DEBUFF",
	119: "TF_COND_PASSTIME_PENALTY_DEBUFF",
	120: "TF_COND_PARACHUTE_DEPLOYED",
	121: "TF_COND_NO_COMBAT_SPEED_BOOST",
	122: "TF_COND_TRANQ_SPY_BOOST",
	123: "TF_COND_TRANQ_MARKED",
	126: "TF_COND_ROCKETPACK",
	127: "TF_COND_ROCKETPACK_PASSENGER",
	128: "TF_COND_STEALTHED_PHASE",
	129: "TF_COND_CLIP_OVERLOAD",
	130: "TF_COND_SPY_CLASS_STEAL",
	131: "TF_COND_GAS",
}
var CMsgQuestObjectiveDef_ETF2Conditions_value = map[string]int32{
	"TF_COND_AIMING":                           0,
	"TF_COND_ZOOMED":                           1,
	"TF_COND_DISGUISING":                       2,
	"TF_COND_DISGUISED":                        3,
	"TF_COND_STEALTHED":                        4,
	"TF_COND_INVULNERABLE":                     5,
	"TF_COND_TELEPORTED":                       6,
	"TF_COND_TAUNTING":                         7,
	"TF_COND_INVULNERABLE_WEARINGOFF":          8,
	"TF_COND_STEALTHED_BLINK":                  9,
	"TF_COND_SELECTED_TO_TELEPORT":             10,
	"TF_COND_CRITBOOSTED":                      11,
	"TF_COND_TMPDAMAGEBONUS":                   12,
	"TF_COND_FEIGN_DEATH":                      13,
	"TF_COND_PHASE":                            14,
	"TF_COND_STUNNED":                          15,
	"TF_COND_OFFENSEBUFF":                      16,
	"TF_COND_SHIELD_CHARGE":                    17,
	"TF_COND_DEMO_BUFF":                        18,
	"TF_COND_ENERGY_BUFF":                      19,
	"TF_COND_RADIUSHEAL":                       20,
	"TF_COND_HEALTH_BUFF":                      21,
	"TF_COND_BURNING":                          22,
	"TF_COND_HEALTH_OVERHEALED":                23,
	"TF_COND_URINE":                            24,
	"TF_COND_BLEEDING":                         25,
	"TF_COND_DEFENSEBUFF":                      26,
	"TF_COND_MAD_MILK":                         27,
	"TF_COND_MEGAHEAL":                         28,
	"TF_COND_REGENONDAMAGEBUFF":                29,
	"TF_COND_MARKEDFORDEATH":                   30,
	"TF_COND_NOHEALINGDAMAGEBUFF":              31,
	"TF_COND_SPEED_BOOST":                      32,
	"TF_COND_CRITBOOSTED_PUMPKIN":              33,
	"TF_COND_CRITBOOSTED_USER_BUFF":            34,
	"TF_COND_CRITBOOSTED_DEMO_CHARGE":          35,
	"TF_COND_SODAPOPPER_HYPE":                  36,
	"TF_COND_CRITBOOSTED_FIRST_BLOOD":          37,
	"TF_COND_CRITBOOSTED_BONUS_TIME":           38,
	"TF_COND_CRITBOOSTED_CTF_CAPTURE":          39,
	"TF_COND_CRITBOOSTED_ON_KILL":              40,
	"TF_COND_CANNOT_SWITCH_FROM_MELEE":         41,
	"TF_COND_DEFENSEBUFF_NO_CRIT_BLOCK":        42,
	"TF_COND_REPROGRAMMED":                     43,
	"TF_COND_CRITBOOSTED_RAGE_BUFF":            44,
	"TF_COND_DEFENSEBUFF_HIGH":                 45,
	"TF_COND_SNIPERCHARGE_RAGE_BUFF":           46,
	"TF_COND_DISGUISE_WEARINGOFF":              47,
	"TF_COND_MARKEDFORDEATH_SILENT":            48,
	"TF_COND_DISGUISED_AS_DISPENSER":           49,
	"TF_COND_SAPPED":                           50,
	"TF_COND_INVULNERABLE_HIDE_UNLESS_DAMAGED": 51,
	"TF_COND_INVULNERABLE_USER_BUFF":           52,
	"TF_COND_HALLOWEEN_BOMB_HEAD":              53,
	"TF_COND_HALLOWEEN_THRILLER":               54,
	"TF_COND_RADIUSHEAL_ON_DAMAGE":             55,
	"TF_COND_CRITBOOSTED_CARD_EFFECT":          56,
	"TF_COND_INVULNERABLE_CARD_EFFECT":         57,
	"TF_COND_MEDIGUN_UBER_BULLET_RESIST":       58,
	"TF_COND_MEDIGUN_UBER_BLAST_RESIST":        59,
	"TF_COND_MEDIGUN_UBER_FIRE_RESIST":         60,
	"TF_COND_MEDIGUN_SMALL_BULLET_RESIST":      61,
	"TF_COND_MEDIGUN_SMALL_BLAST_RESIST":       62,
	"TF_COND_MEDIGUN_SMALL_FIRE_RESIST":        63,
	"TF_COND_STEALTHED_USER_BUFF":              64,
	"TF_COND_MEDIGUN_DEBUFF":                   65,
	"TF_COND_STEALTHED_USER_BUFF_FADING":       66,
	"TF_COND_BULLET_IMMUNE":                    67,
	"TF_COND_BLAST_IMMUNE":                     68,
	"TF_COND_FIRE_IMMUNE":                      69,
	"TF_COND_PREVENT_DEATH":                    70,
	"TF_COND_MVM_BOT_STUN_RADIOWAVE":           71,
	"TF_COND_HALLOWEEN_SPEED_BOOST":            72,
	"TF_COND_HALLOWEEN_QUICK_HEAL":             73,
	"TF_COND_HALLOWEEN_GIANT":                  74,
	"TF_COND_HALLOWEEN_TINY":                   75,
	"TF_COND_HALLOWEEN_IN_HELL":                76,
	"TF_COND_HALLOWEEN_GHOST_MODE":             77,
	"TF_COND_MINICRITBOOSTED_ON_KILL":          78,
	"TF_COND_OBSCURED_SMOKE":                   79,
	"TF_COND_PARACHUTE_ACTIVE":                 80,
	"TF_COND_BLASTJUMPING":                     81,
	"TF_COND_HALLOWEEN_KART":                   82,
	"TF_COND_HALLOWEEN_KART_DASH":              83,
	"TF_COND_BALLOON_HEAD":                     84,
	"TF_COND_MELEE_ONLY":                       85,
	"TF_COND_SWIMMING_CURSE":                   86,
	"TF_COND_FREEZE_INPUT":                     87,
	"TF_COND_HALLOWEEN_KART_CAGE":              88,
	"TF_COND_DONOTUSE_0":                       89,
	"TF_COND_RUNE_STRENGTH":                    90,
	"TF_COND_RUNE_HASTE":                       91,
	"TF_COND_RUNE_REGEN":                       92,
	"TF_COND_RUNE_RESIST":                      93,
	"TF_COND_RUNE_VAMPIRE":                     94,
	"TF_COND_RUNE_REFLECT":                     95,
	"TF_COND_RUNE_PRECISION":                   96,
	"TF_COND_RUNE_AGILITY":                     97,
	"TF_COND_GRAPPLINGHOOK":                    98,
	"TF_COND_GRAPPLINGHOOK_SAFEFALL":           99,
	"TF_COND_GRAPPLINGHOOK_LATCHED":            100,
	"TF_COND_GRAPPLINGHOOK_BLEEDING":           101,
	"TF_COND_AFTERBURN_IMMUNE":                 102,
	"TF_COND_RUNE_KNOCKOUT":                    103,
	"TF_COND_RUNE_IMBALANCE":                   104,
	"TF_COND_CRITBOOSTED_RUNE_TEMP":            105,
	"TF_COND_PASSTIME_INTERCEPTION":            106,
	"TF_COND_SWIMMING_NO_EFFECTS":              107,
	"TF_COND_PURGATORY":                        108,
	"TF_COND_RUNE_KING":                        109,
	"TF_COND_RUNE_PLAGUE":                      110,
	"TF_COND_RUNE_SUPERNOVA":                   111,
	"TF_COND_PLAGUE":                           112,
	"TF_COND_KING_BUFFED":                      113,
	"TF_COND_TEAM_GLOWS":                       114,
	"TF_COND_KNOCKED_INTO_AIR":                 115,
	"TF_COND_COMPETITIVE_WINNER":               116,
	"TF_COND_COMPETITIVE_LOSER":                117,
	"TF_COND_HEALING_DEBUFF":                   118,
	"TF_COND_PASSTIME_PENALTY_DEBUFF":          119,
	"TF_COND_PARACHUTE_DEPLOYED":               120,
	"TF_COND_NO_COMBAT_SPEED_BOOST":            121,
	"TF_COND_TRANQ_SPY_BOOST":                  122,
	"TF_COND_TRANQ_MARKED":                     123,
	"TF_COND_ROCKETPACK":                       126,
	"TF_COND_ROCKETPACK_PASSENGER":             127,
	"TF_COND_STEALTHED_PHASE":                  128,
	"TF_COND_CLIP_OVERLOAD":                    129,
	"TF_COND_SPY_CLASS_STEAL":                  130,
	"TF_COND_GAS":                              131,
}

func (x CMsgQuestObjectiveDef_ETF2Conditions) Enum() *CMsgQuestObjectiveDef_ETF2Conditions {
	p := new(CMsgQuestObjectiveDef_ETF2Conditions)
	*p = x
	return p
}
func (x CMsgQuestObjectiveDef_ETF2Conditions) String() string {
	return proto.EnumName(CMsgQuestObjectiveDef_ETF2Conditions_name, int32(x))
}
func (x *CMsgQuestObjectiveDef_ETF2Conditions) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgQuestObjectiveDef_ETF2Conditions_value, data, "CMsgQuestObjectiveDef_ETF2Conditions")
	if err != nil {
		return err
	}
	*x = CMsgQuestObjectiveDef_ETF2Conditions(value)
	return nil
}
func (CMsgQuestObjectiveDef_ETF2Conditions) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_tf_proto_def_messages_a921922ea643aecb, []int{6, 1}
}

type CMsgQuestObjectiveDef_ETF2Team int32

const (
	CMsgQuestObjectiveDef_TF_TEAM_RED  CMsgQuestObjectiveDef_ETF2Team = 2
	CMsgQuestObjectiveDef_TF_TEAM_BLUE CMsgQuestObjectiveDef_ETF2Team = 3
)

var CMsgQuestObjectiveDef_ETF2Team_name = map[int32]string{
	2: "TF_TEAM_RED",
	3: "TF_TEAM_BLUE",
}
var CMsgQuestObjectiveDef_ETF2Team_value = map[string]int32{
	"TF_TEAM_RED":  2,
	"TF_TEAM_BLUE": 3,
}

func (x CMsgQuestObjectiveDef_ETF2Team) Enum() *CMsgQuestObjectiveDef_ETF2Team {
	p := new(CMsgQuestObjectiveDef_ETF2Team)
	*p = x
	return p
}
func (x CMsgQuestObjectiveDef_ETF2Team) String() string {
	return proto.EnumName(CMsgQuestObjectiveDef_ETF2Team_name, int32(x))
}
func (x *CMsgQuestObjectiveDef_ETF2Team) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgQuestObjectiveDef_ETF2Team_value, data, "CMsgQuestObjectiveDef_ETF2Team")
	if err != nil {
		return err
	}
	*x = CMsgQuestObjectiveDef_ETF2Team(value)
	return nil
}
func (CMsgQuestObjectiveDef_ETF2Team) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_tf_proto_def_messages_a921922ea643aecb, []int{6, 2}
}

type CMsgFieldID struct {
	Field                []*CMsgFieldID_CMsgField `protobuf:"bytes,1,rep,name=field" json:"field,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *CMsgFieldID) Reset()         { *m = CMsgFieldID{} }
func (m *CMsgFieldID) String() string { return proto.CompactTextString(m) }
func (*CMsgFieldID) ProtoMessage()    {}
func (*CMsgFieldID) Descriptor() ([]byte, []int) {
	return fileDescriptor_tf_proto_def_messages_a921922ea643aecb, []int{0}
}
func (m *CMsgFieldID) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgFieldID.Unmarshal(m, b)
}
func (m *CMsgFieldID) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgFieldID.Marshal(b, m, deterministic)
}
func (dst *CMsgFieldID) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgFieldID.Merge(dst, src)
}
func (m *CMsgFieldID) XXX_Size() int {
	return xxx_messageInfo_CMsgFieldID.Size(m)
}
func (m *CMsgFieldID) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgFieldID.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgFieldID proto.InternalMessageInfo

func (m *CMsgFieldID) GetField() []*CMsgFieldID_CMsgField {
	if m != nil {
		return m.Field
	}
	return nil
}

type CMsgFieldID_CMsgField struct {
	FieldNumber          *uint32  `protobuf:"varint,1,opt,name=field_number,json=fieldNumber" json:"field_number,omitempty"`
	RepeatedIndex        *uint32  `protobuf:"varint,2,opt,name=repeated_index,json=repeatedIndex" json:"repeated_index,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgFieldID_CMsgField) Reset()         { *m = CMsgFieldID_CMsgField{} }
func (m *CMsgFieldID_CMsgField) String() string { return proto.CompactTextString(m) }
func (*CMsgFieldID_CMsgField) ProtoMessage()    {}
func (*CMsgFieldID_CMsgField) Descriptor() ([]byte, []int) {
	return fileDescriptor_tf_proto_def_messages_a921922ea643aecb, []int{0, 0}
}
func (m *CMsgFieldID_CMsgField) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgFieldID_CMsgField.Unmarshal(m, b)
}
func (m *CMsgFieldID_CMsgField) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgFieldID_CMsgField.Marshal(b, m, deterministic)
}
func (dst *CMsgFieldID_CMsgField) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgFieldID_CMsgField.Merge(dst, src)
}
func (m *CMsgFieldID_CMsgField) XXX_Size() int {
	return xxx_messageInfo_CMsgFieldID_CMsgField.Size(m)
}
func (m *CMsgFieldID_CMsgField) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgFieldID_CMsgField.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgFieldID_CMsgField proto.InternalMessageInfo

func (m *CMsgFieldID_CMsgField) GetFieldNumber() uint32 {
	if m != nil && m.FieldNumber != nil {
		return *m.FieldNumber
	}
	return 0
}

func (m *CMsgFieldID_CMsgField) GetRepeatedIndex() uint32 {
	if m != nil && m.RepeatedIndex != nil {
		return *m.RepeatedIndex
	}
	return 0
}

type CMsgUniversalFieldID struct {
	SourceType           *EValueDefinitionSource `protobuf:"varint,1,opt,name=source_type,json=sourceType,enum=EValueDefinitionSource,def=0" json:"source_type,omitempty"`
	DefiningObjId        *CMsgProtoDefID         `protobuf:"bytes,2,opt,name=defining_obj_id,json=definingObjId" json:"defining_obj_id,omitempty"`
	FieldId              *CMsgFieldID            `protobuf:"bytes,3,opt,name=field_id,json=fieldId" json:"field_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *CMsgUniversalFieldID) Reset()         { *m = CMsgUniversalFieldID{} }
func (m *CMsgUniversalFieldID) String() string { return proto.CompactTextString(m) }
func (*CMsgUniversalFieldID) ProtoMessage()    {}
func (*CMsgUniversalFieldID) Descriptor() ([]byte, []int) {
	return fileDescriptor_tf_proto_def_messages_a921922ea643aecb, []int{1}
}
func (m *CMsgUniversalFieldID) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgUniversalFieldID.Unmarshal(m, b)
}
func (m *CMsgUniversalFieldID) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgUniversalFieldID.Marshal(b, m, deterministic)
}
func (dst *CMsgUniversalFieldID) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgUniversalFieldID.Merge(dst, src)
}
func (m *CMsgUniversalFieldID) XXX_Size() int {
	return xxx_messageInfo_CMsgUniversalFieldID.Size(m)
}
func (m *CMsgUniversalFieldID) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgUniversalFieldID.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgUniversalFieldID proto.InternalMessageInfo

const Default_CMsgUniversalFieldID_SourceType EValueDefinitionSource = EValueDefinitionSource_REFERENCE_DEFINES

func (m *CMsgUniversalFieldID) GetSourceType() EValueDefinitionSource {
	if m != nil && m.SourceType != nil {
		return *m.SourceType
	}
	return Default_CMsgUniversalFieldID_SourceType
}

func (m *CMsgUniversalFieldID) GetDefiningObjId() *CMsgProtoDefID {
	if m != nil {
		return m.DefiningObjId
	}
	return nil
}

func (m *CMsgUniversalFieldID) GetFieldId() *CMsgFieldID {
	if m != nil {
		return m.FieldId
	}
	return nil
}

type CMsgVariableDefinition struct {
	Name                 *string  `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Inherit              *bool    `protobuf:"varint,2,opt,name=inherit,def=1" json:"inherit,omitempty"`
	Value                *string  `protobuf:"bytes,3,opt,name=value" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgVariableDefinition) Reset()         { *m = CMsgVariableDefinition{} }
func (m *CMsgVariableDefinition) String() string { return proto.CompactTextString(m) }
func (*CMsgVariableDefinition) ProtoMessage()    {}
func (*CMsgVariableDefinition) Descriptor() ([]byte, []int) {
	return fileDescriptor_tf_proto_def_messages_a921922ea643aecb, []int{2}
}
func (m *CMsgVariableDefinition) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgVariableDefinition.Unmarshal(m, b)
}
func (m *CMsgVariableDefinition) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgVariableDefinition.Marshal(b, m, deterministic)
}
func (dst *CMsgVariableDefinition) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgVariableDefinition.Merge(dst, src)
}
func (m *CMsgVariableDefinition) XXX_Size() int {
	return xxx_messageInfo_CMsgVariableDefinition.Size(m)
}
func (m *CMsgVariableDefinition) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgVariableDefinition.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgVariableDefinition proto.InternalMessageInfo

const Default_CMsgVariableDefinition_Inherit bool = true

func (m *CMsgVariableDefinition) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *CMsgVariableDefinition) GetInherit() bool {
	if m != nil && m.Inherit != nil {
		return *m.Inherit
	}
	return Default_CMsgVariableDefinition_Inherit
}

func (m *CMsgVariableDefinition) GetValue() string {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return ""
}

type CMsgProtoDefHeader struct {
	Defindex             *uint32                   `protobuf:"varint,1,req,name=defindex" json:"defindex,omitempty"`
	Name                 *string                   `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Prefabs              []*CMsgProtoDefID         `protobuf:"bytes,3,rep,name=prefabs" json:"prefabs,omitempty"`
	Tags                 []string                  `protobuf:"bytes,4,rep,name=tags" json:"tags,omitempty"`
	PrefabOnly           *bool                     `protobuf:"varint,5,opt,name=prefab_only,json=prefabOnly,def=0" json:"prefab_only,omitempty"`
	Variables            []*CMsgVariableDefinition `protobuf:"bytes,6,rep,name=variables" json:"variables,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *CMsgProtoDefHeader) Reset()         { *m = CMsgProtoDefHeader{} }
func (m *CMsgProtoDefHeader) String() string { return proto.CompactTextString(m) }
func (*CMsgProtoDefHeader) ProtoMessage()    {}
func (*CMsgProtoDefHeader) Descriptor() ([]byte, []int) {
	return fileDescriptor_tf_proto_def_messages_a921922ea643aecb, []int{3}
}
func (m *CMsgProtoDefHeader) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgProtoDefHeader.Unmarshal(m, b)
}
func (m *CMsgProtoDefHeader) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgProtoDefHeader.Marshal(b, m, deterministic)
}
func (dst *CMsgProtoDefHeader) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgProtoDefHeader.Merge(dst, src)
}
func (m *CMsgProtoDefHeader) XXX_Size() int {
	return xxx_messageInfo_CMsgProtoDefHeader.Size(m)
}
func (m *CMsgProtoDefHeader) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgProtoDefHeader.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgProtoDefHeader proto.InternalMessageInfo

const Default_CMsgProtoDefHeader_PrefabOnly bool = false

func (m *CMsgProtoDefHeader) GetDefindex() uint32 {
	if m != nil && m.Defindex != nil {
		return *m.Defindex
	}
	return 0
}

func (m *CMsgProtoDefHeader) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *CMsgProtoDefHeader) GetPrefabs() []*CMsgProtoDefID {
	if m != nil {
		return m.Prefabs
	}
	return nil
}

func (m *CMsgProtoDefHeader) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *CMsgProtoDefHeader) GetPrefabOnly() bool {
	if m != nil && m.PrefabOnly != nil {
		return *m.PrefabOnly
	}
	return Default_CMsgProtoDefHeader_PrefabOnly
}

func (m *CMsgProtoDefHeader) GetVariables() []*CMsgVariableDefinition {
	if m != nil {
		return m.Variables
	}
	return nil
}

type CMsgValidTypes struct {
	Types                []ProtoDefTypes `protobuf:"varint,1,rep,name=types,enum=ProtoDefTypes" json:"types,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *CMsgValidTypes) Reset()         { *m = CMsgValidTypes{} }
func (m *CMsgValidTypes) String() string { return proto.CompactTextString(m) }
func (*CMsgValidTypes) ProtoMessage()    {}
func (*CMsgValidTypes) Descriptor() ([]byte, []int) {
	return fileDescriptor_tf_proto_def_messages_a921922ea643aecb, []int{4}
}
func (m *CMsgValidTypes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgValidTypes.Unmarshal(m, b)
}
func (m *CMsgValidTypes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgValidTypes.Marshal(b, m, deterministic)
}
func (dst *CMsgValidTypes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgValidTypes.Merge(dst, src)
}
func (m *CMsgValidTypes) XXX_Size() int {
	return xxx_messageInfo_CMsgValidTypes.Size(m)
}
func (m *CMsgValidTypes) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgValidTypes.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgValidTypes proto.InternalMessageInfo

func (m *CMsgValidTypes) GetTypes() []ProtoDefTypes {
	if m != nil {
		return m.Types
	}
	return nil
}

type CMsgProtoDefID struct {
	Defindex *uint32        `protobuf:"varint,1,opt,name=defindex" json:"defindex,omitempty"`
	Type     *ProtoDefTypes `protobuf:"varint,2,opt,name=type,enum=ProtoDefTypes,def=0" json:"type,omitempty"`
	// Types that are valid to be assigned to Instance:
	//	*CMsgProtoDefID_InstanceDefTypeQuestMapNode
	//	*CMsgProtoDefID_InstanceDefTypeQuestTheme
	//	*CMsgProtoDefID_InstanceDefTypeQuestMapRegion
	//	*CMsgProtoDefID_InstanceDefTypeQuest
	//	*CMsgProtoDefID_InstanceDefTypeQuestObjective
	//	*CMsgProtoDefID_InstanceDefTypePaintkitVariables
	//	*CMsgProtoDefID_InstanceDefTypePaintkitOperation
	//	*CMsgProtoDefID_InstanceDefTypePaintkitItemDefinition
	//	*CMsgProtoDefID_InstanceDefTypePaintkitDefinition
	//	*CMsgProtoDefID_InstanceDefTypeHeaderOnly
	Instance             isCMsgProtoDefID_Instance `protobuf_oneof:"instance"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *CMsgProtoDefID) Reset()         { *m = CMsgProtoDefID{} }
func (m *CMsgProtoDefID) String() string { return proto.CompactTextString(m) }
func (*CMsgProtoDefID) ProtoMessage()    {}
func (*CMsgProtoDefID) Descriptor() ([]byte, []int) {
	return fileDescriptor_tf_proto_def_messages_a921922ea643aecb, []int{5}
}
func (m *CMsgProtoDefID) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgProtoDefID.Unmarshal(m, b)
}
func (m *CMsgProtoDefID) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgProtoDefID.Marshal(b, m, deterministic)
}
func (dst *CMsgProtoDefID) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgProtoDefID.Merge(dst, src)
}
func (m *CMsgProtoDefID) XXX_Size() int {
	return xxx_messageInfo_CMsgProtoDefID.Size(m)
}
func (m *CMsgProtoDefID) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgProtoDefID.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgProtoDefID proto.InternalMessageInfo

const Default_CMsgProtoDefID_Type ProtoDefTypes = ProtoDefTypes_DEF_TYPE_QUEST_MAP_NODE

type isCMsgProtoDefID_Instance interface {
	isCMsgProtoDefID_Instance()
}

type CMsgProtoDefID_InstanceDefTypeQuestMapNode struct {
	InstanceDefTypeQuestMapNode *CMsgQuestMapNodeDef `protobuf:"bytes,3,opt,name=instance_def_type_quest_map_node,json=instanceDefTypeQuestMapNode,oneof"`
}
type CMsgProtoDefID_InstanceDefTypeQuestTheme struct {
	InstanceDefTypeQuestTheme *CMsgQuestTheme `protobuf:"bytes,5,opt,name=instance_def_type_quest_theme,json=instanceDefTypeQuestTheme,oneof"`
}
type CMsgProtoDefID_InstanceDefTypeQuestMapRegion struct {
	InstanceDefTypeQuestMapRegion *CMsgQuestMapRegionDef `protobuf:"bytes,6,opt,name=instance_def_type_quest_map_region,json=instanceDefTypeQuestMapRegion,oneof"`
}
type CMsgProtoDefID_InstanceDefTypeQuest struct {
	InstanceDefTypeQuest *CMsgQuestDef `protobuf:"bytes,7,opt,name=instance_def_type_quest,json=instanceDefTypeQuest,oneof"`
}
type CMsgProtoDefID_InstanceDefTypeQuestObjective struct {
	InstanceDefTypeQuestObjective *CMsgQuestObjectiveDef `protobuf:"bytes,8,opt,name=instance_def_type_quest_objective,json=instanceDefTypeQuestObjective,oneof"`
}
type CMsgProtoDefID_InstanceDefTypePaintkitVariables struct {
	InstanceDefTypePaintkitVariables *CMsgPaintKit_Variables `protobuf:"bytes,9,opt,name=instance_def_type_paintkit_variables,json=instanceDefTypePaintkitVariables,oneof"`
}
type CMsgProtoDefID_InstanceDefTypePaintkitOperation struct {
	InstanceDefTypePaintkitOperation *CMsgPaintKit_Operation `protobuf:"bytes,10,opt,name=instance_def_type_paintkit_operation,json=instanceDefTypePaintkitOperation,oneof"`
}
type CMsgProtoDefID_InstanceDefTypePaintkitItemDefinition struct {
	InstanceDefTypePaintkitItemDefinition *CMsgPaintKit_ItemDefinition `protobuf:"bytes,11,opt,name=instance_def_type_paintkit_item_definition,json=instanceDefTypePaintkitItemDefinition,oneof"`
}
type CMsgProtoDefID_InstanceDefTypePaintkitDefinition struct {
	InstanceDefTypePaintkitDefinition *CMsgPaintKit_Definition `protobuf:"bytes,12,opt,name=instance_def_type_paintkit_definition,json=instanceDefTypePaintkitDefinition,oneof"`
}
type CMsgProtoDefID_InstanceDefTypeHeaderOnly struct {
	InstanceDefTypeHeaderOnly *CMsgHeaderOnly `protobuf:"bytes,13,opt,name=instance_def_type_header_only,json=instanceDefTypeHeaderOnly,oneof"`
}

func (*CMsgProtoDefID_InstanceDefTypeQuestMapNode) isCMsgProtoDefID_Instance()           {}
func (*CMsgProtoDefID_InstanceDefTypeQuestTheme) isCMsgProtoDefID_Instance()             {}
func (*CMsgProtoDefID_InstanceDefTypeQuestMapRegion) isCMsgProtoDefID_Instance()         {}
func (*CMsgProtoDefID_InstanceDefTypeQuest) isCMsgProtoDefID_Instance()                  {}
func (*CMsgProtoDefID_InstanceDefTypeQuestObjective) isCMsgProtoDefID_Instance()         {}
func (*CMsgProtoDefID_InstanceDefTypePaintkitVariables) isCMsgProtoDefID_Instance()      {}
func (*CMsgProtoDefID_InstanceDefTypePaintkitOperation) isCMsgProtoDefID_Instance()      {}
func (*CMsgProtoDefID_InstanceDefTypePaintkitItemDefinition) isCMsgProtoDefID_Instance() {}
func (*CMsgProtoDefID_InstanceDefTypePaintkitDefinition) isCMsgProtoDefID_Instance()     {}
func (*CMsgProtoDefID_InstanceDefTypeHeaderOnly) isCMsgProtoDefID_Instance()             {}

func (m *CMsgProtoDefID) GetInstance() isCMsgProtoDefID_Instance {
	if m != nil {
		return m.Instance
	}
	return nil
}

func (m *CMsgProtoDefID) GetDefindex() uint32 {
	if m != nil && m.Defindex != nil {
		return *m.Defindex
	}
	return 0
}

func (m *CMsgProtoDefID) GetType() ProtoDefTypes {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return Default_CMsgProtoDefID_Type
}

func (m *CMsgProtoDefID) GetInstanceDefTypeQuestMapNode() *CMsgQuestMapNodeDef {
	if x, ok := m.GetInstance().(*CMsgProtoDefID_InstanceDefTypeQuestMapNode); ok {
		return x.InstanceDefTypeQuestMapNode
	}
	return nil
}

func (m *CMsgProtoDefID) GetInstanceDefTypeQuestTheme() *CMsgQuestTheme {
	if x, ok := m.GetInstance().(*CMsgProtoDefID_InstanceDefTypeQuestTheme); ok {
		return x.InstanceDefTypeQuestTheme
	}
	return nil
}

func (m *CMsgProtoDefID) GetInstanceDefTypeQuestMapRegion() *CMsgQuestMapRegionDef {
	if x, ok := m.GetInstance().(*CMsgProtoDefID_InstanceDefTypeQuestMapRegion); ok {
		return x.InstanceDefTypeQuestMapRegion
	}
	return nil
}

func (m *CMsgProtoDefID) GetInstanceDefTypeQuest() *CMsgQuestDef {
	if x, ok := m.GetInstance().(*CMsgProtoDefID_InstanceDefTypeQuest); ok {
		return x.InstanceDefTypeQuest
	}
	return nil
}

func (m *CMsgProtoDefID) GetInstanceDefTypeQuestObjective() *CMsgQuestObjectiveDef {
	if x, ok := m.GetInstance().(*CMsgProtoDefID_InstanceDefTypeQuestObjective); ok {
		return x.InstanceDefTypeQuestObjective
	}
	return nil
}

func (m *CMsgProtoDefID) GetInstanceDefTypePaintkitVariables() *CMsgPaintKit_Variables {
	if x, ok := m.GetInstance().(*CMsgProtoDefID_InstanceDefTypePaintkitVariables); ok {
		return x.InstanceDefTypePaintkitVariables
	}
	return nil
}

func (m *CMsgProtoDefID) GetInstanceDefTypePaintkitOperation() *CMsgPaintKit_Operation {
	if x, ok := m.GetInstance().(*CMsgProtoDefID_InstanceDefTypePaintkitOperation); ok {
		return x.InstanceDefTypePaintkitOperation
	}
	return nil
}

func (m *CMsgProtoDefID) GetInstanceDefTypePaintkitItemDefinition() *CMsgPaintKit_ItemDefinition {
	if x, ok := m.GetInstance().(*CMsgProtoDefID_InstanceDefTypePaintkitItemDefinition); ok {
		return x.InstanceDefTypePaintkitItemDefinition
	}
	return nil
}

func (m *CMsgProtoDefID) GetInstanceDefTypePaintkitDefinition() *CMsgPaintKit_Definition {
	if x, ok := m.GetInstance().(*CMsgProtoDefID_InstanceDefTypePaintkitDefinition); ok {
		return x.InstanceDefTypePaintkitDefinition
	}
	return nil
}

func (m *CMsgProtoDefID) GetInstanceDefTypeHeaderOnly() *CMsgHeaderOnly {
	if x, ok := m.GetInstance().(*CMsgProtoDefID_InstanceDefTypeHeaderOnly); ok {
		return x.InstanceDefTypeHeaderOnly
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*CMsgProtoDefID) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _CMsgProtoDefID_OneofMarshaler, _CMsgProtoDefID_OneofUnmarshaler, _CMsgProtoDefID_OneofSizer, []interface{}{
		(*CMsgProtoDefID_InstanceDefTypeQuestMapNode)(nil),
		(*CMsgProtoDefID_InstanceDefTypeQuestTheme)(nil),
		(*CMsgProtoDefID_InstanceDefTypeQuestMapRegion)(nil),
		(*CMsgProtoDefID_InstanceDefTypeQuest)(nil),
		(*CMsgProtoDefID_InstanceDefTypeQuestObjective)(nil),
		(*CMsgProtoDefID_InstanceDefTypePaintkitVariables)(nil),
		(*CMsgProtoDefID_InstanceDefTypePaintkitOperation)(nil),
		(*CMsgProtoDefID_InstanceDefTypePaintkitItemDefinition)(nil),
		(*CMsgProtoDefID_InstanceDefTypePaintkitDefinition)(nil),
		(*CMsgProtoDefID_InstanceDefTypeHeaderOnly)(nil),
	}
}

func _CMsgProtoDefID_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*CMsgProtoDefID)
	// instance
	switch x := m.Instance.(type) {
	case *CMsgProtoDefID_InstanceDefTypeQuestMapNode:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.InstanceDefTypeQuestMapNode); err != nil {
			return err
		}
	case *CMsgProtoDefID_InstanceDefTypeQuestTheme:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.InstanceDefTypeQuestTheme); err != nil {
			return err
		}
	case *CMsgProtoDefID_InstanceDefTypeQuestMapRegion:
		b.EncodeVarint(6<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.InstanceDefTypeQuestMapRegion); err != nil {
			return err
		}
	case *CMsgProtoDefID_InstanceDefTypeQuest:
		b.EncodeVarint(7<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.InstanceDefTypeQuest); err != nil {
			return err
		}
	case *CMsgProtoDefID_InstanceDefTypeQuestObjective:
		b.EncodeVarint(8<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.InstanceDefTypeQuestObjective); err != nil {
			return err
		}
	case *CMsgProtoDefID_InstanceDefTypePaintkitVariables:
		b.EncodeVarint(9<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.InstanceDefTypePaintkitVariables); err != nil {
			return err
		}
	case *CMsgProtoDefID_InstanceDefTypePaintkitOperation:
		b.EncodeVarint(10<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.InstanceDefTypePaintkitOperation); err != nil {
			return err
		}
	case *CMsgProtoDefID_InstanceDefTypePaintkitItemDefinition:
		b.EncodeVarint(11<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.InstanceDefTypePaintkitItemDefinition); err != nil {
			return err
		}
	case *CMsgProtoDefID_InstanceDefTypePaintkitDefinition:
		b.EncodeVarint(12<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.InstanceDefTypePaintkitDefinition); err != nil {
			return err
		}
	case *CMsgProtoDefID_InstanceDefTypeHeaderOnly:
		b.EncodeVarint(13<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.InstanceDefTypeHeaderOnly); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("CMsgProtoDefID.Instance has unexpected type %T", x)
	}
	return nil
}

func _CMsgProtoDefID_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*CMsgProtoDefID)
	switch tag {
	case 3: // instance.instance_def_type_quest_map_node
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CMsgQuestMapNodeDef)
		err := b.DecodeMessage(msg)
		m.Instance = &CMsgProtoDefID_InstanceDefTypeQuestMapNode{msg}
		return true, err
	case 5: // instance.instance_def_type_quest_theme
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CMsgQuestTheme)
		err := b.DecodeMessage(msg)
		m.Instance = &CMsgProtoDefID_InstanceDefTypeQuestTheme{msg}
		return true, err
	case 6: // instance.instance_def_type_quest_map_region
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CMsgQuestMapRegionDef)
		err := b.DecodeMessage(msg)
		m.Instance = &CMsgProtoDefID_InstanceDefTypeQuestMapRegion{msg}
		return true, err
	case 7: // instance.instance_def_type_quest
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CMsgQuestDef)
		err := b.DecodeMessage(msg)
		m.Instance = &CMsgProtoDefID_InstanceDefTypeQuest{msg}
		return true, err
	case 8: // instance.instance_def_type_quest_objective
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CMsgQuestObjectiveDef)
		err := b.DecodeMessage(msg)
		m.Instance = &CMsgProtoDefID_InstanceDefTypeQuestObjective{msg}
		return true, err
	case 9: // instance.instance_def_type_paintkit_variables
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CMsgPaintKit_Variables)
		err := b.DecodeMessage(msg)
		m.Instance = &CMsgProtoDefID_InstanceDefTypePaintkitVariables{msg}
		return true, err
	case 10: // instance.instance_def_type_paintkit_operation
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CMsgPaintKit_Operation)
		err := b.DecodeMessage(msg)
		m.Instance = &CMsgProtoDefID_InstanceDefTypePaintkitOperation{msg}
		return true, err
	case 11: // instance.instance_def_type_paintkit_item_definition
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CMsgPaintKit_ItemDefinition)
		err := b.DecodeMessage(msg)
		m.Instance = &CMsgProtoDefID_InstanceDefTypePaintkitItemDefinition{msg}
		return true, err
	case 12: // instance.instance_def_type_paintkit_definition
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CMsgPaintKit_Definition)
		err := b.DecodeMessage(msg)
		m.Instance = &CMsgProtoDefID_InstanceDefTypePaintkitDefinition{msg}
		return true, err
	case 13: // instance.instance_def_type_header_only
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CMsgHeaderOnly)
		err := b.DecodeMessage(msg)
		m.Instance = &CMsgProtoDefID_InstanceDefTypeHeaderOnly{msg}
		return true, err
	default:
		return false, nil
	}
}

func _CMsgProtoDefID_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*CMsgProtoDefID)
	// instance
	switch x := m.Instance.(type) {
	case *CMsgProtoDefID_InstanceDefTypeQuestMapNode:
		s := proto.Size(x.InstanceDefTypeQuestMapNode)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *CMsgProtoDefID_InstanceDefTypeQuestTheme:
		s := proto.Size(x.InstanceDefTypeQuestTheme)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *CMsgProtoDefID_InstanceDefTypeQuestMapRegion:
		s := proto.Size(x.InstanceDefTypeQuestMapRegion)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *CMsgProtoDefID_InstanceDefTypeQuest:
		s := proto.Size(x.InstanceDefTypeQuest)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *CMsgProtoDefID_InstanceDefTypeQuestObjective:
		s := proto.Size(x.InstanceDefTypeQuestObjective)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *CMsgProtoDefID_InstanceDefTypePaintkitVariables:
		s := proto.Size(x.InstanceDefTypePaintkitVariables)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *CMsgProtoDefID_InstanceDefTypePaintkitOperation:
		s := proto.Size(x.InstanceDefTypePaintkitOperation)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *CMsgProtoDefID_InstanceDefTypePaintkitItemDefinition:
		s := proto.Size(x.InstanceDefTypePaintkitItemDefinition)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *CMsgProtoDefID_InstanceDefTypePaintkitDefinition:
		s := proto.Size(x.InstanceDefTypePaintkitDefinition)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *CMsgProtoDefID_InstanceDefTypeHeaderOnly:
		s := proto.Size(x.InstanceDefTypeHeaderOnly)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type CMsgQuestObjectiveDef struct {
	Header               *CMsgProtoDefHeader                    `protobuf:"bytes,1,req,name=header" json:"header,omitempty"`
	LocDesctoken         *string                                `protobuf:"bytes,2,opt,name=loc_desctoken,json=locDesctoken" json:"loc_desctoken,omitempty"`
	Points               *uint32                                `protobuf:"varint,3,opt,name=points" json:"points,omitempty"`
	ConditionsDefindex   *uint32                                `protobuf:"varint,5,opt,name=conditions_defindex,json=conditionsDefindex" json:"conditions_defindex,omitempty"`
	Map                  []string                               `protobuf:"bytes,8,rep,name=map" json:"map,omitempty"`
	GameMode             []CMsgQuestObjectiveDef_ETF2GameModes  `protobuf:"varint,9,rep,name=game_mode,json=gameMode,enum=CMsgQuestObjectiveDef_ETF2GameModes" json:"game_mode,omitempty"`
	Team                 *CMsgQuestObjectiveDef_ETF2Team        `protobuf:"varint,10,opt,name=team,enum=CMsgQuestObjectiveDef_ETF2Team,def=2" json:"team,omitempty"`
	ConditionVars        []*CMsgVarField                        `protobuf:"bytes,11,rep,name=condition_vars,json=conditionVars" json:"condition_vars,omitempty"`
	ClassesVars          []*CMsgVarField                        `protobuf:"bytes,12,rep,name=classes_vars,json=classesVars" json:"classes_vars,omitempty"`
	Conditions           []CMsgQuestObjectiveDef_ETF2Conditions `protobuf:"varint,13,rep,name=conditions,enum=CMsgQuestObjectiveDef_ETF2Conditions" json:"conditions,omitempty"`
	ConditionLogic       *LogicalOperation                      `protobuf:"varint,14,opt,name=condition_logic,json=conditionLogic,enum=LogicalOperation,def=0" json:"condition_logic,omitempty"`
	ItemName             []string                               `protobuf:"bytes,15,rep,name=item_name,json=itemName" json:"item_name,omitempty"`
	ItemLogic            *LogicalOperation                      `protobuf:"varint,16,opt,name=item_logic,json=itemLogic,enum=LogicalOperation,def=0" json:"item_logic,omitempty"`
	JumpState            *uint32                                `protobuf:"varint,17,opt,name=jump_state,json=jumpState" json:"jump_state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                               `json:"-"`
	XXX_unrecognized     []byte                                 `json:"-"`
	XXX_sizecache        int32                                  `json:"-"`
}

func (m *CMsgQuestObjectiveDef) Reset()         { *m = CMsgQuestObjectiveDef{} }
func (m *CMsgQuestObjectiveDef) String() string { return proto.CompactTextString(m) }
func (*CMsgQuestObjectiveDef) ProtoMessage()    {}
func (*CMsgQuestObjectiveDef) Descriptor() ([]byte, []int) {
	return fileDescriptor_tf_proto_def_messages_a921922ea643aecb, []int{6}
}
func (m *CMsgQuestObjectiveDef) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgQuestObjectiveDef.Unmarshal(m, b)
}
func (m *CMsgQuestObjectiveDef) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgQuestObjectiveDef.Marshal(b, m, deterministic)
}
func (dst *CMsgQuestObjectiveDef) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgQuestObjectiveDef.Merge(dst, src)
}
func (m *CMsgQuestObjectiveDef) XXX_Size() int {
	return xxx_messageInfo_CMsgQuestObjectiveDef.Size(m)
}
func (m *CMsgQuestObjectiveDef) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgQuestObjectiveDef.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgQuestObjectiveDef proto.InternalMessageInfo

const Default_CMsgQuestObjectiveDef_Team CMsgQuestObjectiveDef_ETF2Team = CMsgQuestObjectiveDef_TF_TEAM_RED
const Default_CMsgQuestObjectiveDef_ConditionLogic LogicalOperation = LogicalOperation_AND
const Default_CMsgQuestObjectiveDef_ItemLogic LogicalOperation = LogicalOperation_AND

func (m *CMsgQuestObjectiveDef) GetHeader() *CMsgProtoDefHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *CMsgQuestObjectiveDef) GetLocDesctoken() string {
	if m != nil && m.LocDesctoken != nil {
		return *m.LocDesctoken
	}
	return ""
}

func (m *CMsgQuestObjectiveDef) GetPoints() uint32 {
	if m != nil && m.Points != nil {
		return *m.Points
	}
	return 0
}

func (m *CMsgQuestObjectiveDef) GetConditionsDefindex() uint32 {
	if m != nil && m.ConditionsDefindex != nil {
		return *m.ConditionsDefindex
	}
	return 0
}

func (m *CMsgQuestObjectiveDef) GetMap() []string {
	if m != nil {
		return m.Map
	}
	return nil
}

func (m *CMsgQuestObjectiveDef) GetGameMode() []CMsgQuestObjectiveDef_ETF2GameModes {
	if m != nil {
		return m.GameMode
	}
	return nil
}

func (m *CMsgQuestObjectiveDef) GetTeam() CMsgQuestObjectiveDef_ETF2Team {
	if m != nil && m.Team != nil {
		return *m.Team
	}
	return Default_CMsgQuestObjectiveDef_Team
}

func (m *CMsgQuestObjectiveDef) GetConditionVars() []*CMsgVarField {
	if m != nil {
		return m.ConditionVars
	}
	return nil
}

func (m *CMsgQuestObjectiveDef) GetClassesVars() []*CMsgVarField {
	if m != nil {
		return m.ClassesVars
	}
	return nil
}

func (m *CMsgQuestObjectiveDef) GetConditions() []CMsgQuestObjectiveDef_ETF2Conditions {
	if m != nil {
		return m.Conditions
	}
	return nil
}

func (m *CMsgQuestObjectiveDef) GetConditionLogic() LogicalOperation {
	if m != nil && m.ConditionLogic != nil {
		return *m.ConditionLogic
	}
	return Default_CMsgQuestObjectiveDef_ConditionLogic
}

func (m *CMsgQuestObjectiveDef) GetItemName() []string {
	if m != nil {
		return m.ItemName
	}
	return nil
}

func (m *CMsgQuestObjectiveDef) GetItemLogic() LogicalOperation {
	if m != nil && m.ItemLogic != nil {
		return *m.ItemLogic
	}
	return Default_CMsgQuestObjectiveDef_ItemLogic
}

func (m *CMsgQuestObjectiveDef) GetJumpState() uint32 {
	if m != nil && m.JumpState != nil {
		return *m.JumpState
	}
	return 0
}

type CMsgQuestDef struct {
	Header               *CMsgProtoDefHeader               `protobuf:"bytes,1,req,name=header" json:"header,omitempty"`
	MaxPoints_0          *uint32                           `protobuf:"varint,2,opt,name=max_points_0,json=maxPoints0" json:"max_points_0,omitempty"`
	MaxPoints_1          *uint32                           `protobuf:"varint,3,opt,name=max_points_1,json=maxPoints1" json:"max_points_1,omitempty"`
	MaxPoints_2          *uint32                           `protobuf:"varint,4,opt,name=max_points_2,json=maxPoints2" json:"max_points_2,omitempty"`
	NameLoctoken         *string                           `protobuf:"bytes,5,opt,name=name_loctoken,json=nameLoctoken" json:"name_loctoken,omitempty"`
	Operation            *string                           `protobuf:"bytes,7,opt,name=operation" json:"operation,omitempty"`
	MmCriteria           *CMsgQuestDef_MMCriteria          `protobuf:"bytes,8,opt,name=mm_criteria,json=mmCriteria" json:"mm_criteria,omitempty"`
	NodeImage            *string                           `protobuf:"bytes,12,opt,name=node_image,json=nodeImage" json:"node_image,omitempty"`
	IconImage            *string                           `protobuf:"bytes,13,opt,name=icon_image,json=iconImage" json:"icon_image,omitempty"`
	Theme                *CMsgProtoDefID                   `protobuf:"bytes,14,opt,name=theme" json:"theme,omitempty"`
	LoanerNames          []string                          `protobuf:"bytes,15,rep,name=loaner_names,json=loanerNames" json:"loaner_names,omitempty"`
	Objectives           []*CMsgQuestDef_ObjectiveInstance `protobuf:"bytes,16,rep,name=objectives" json:"objectives,omitempty"`
	Map                  []string                          `protobuf:"bytes,17,rep,name=map" json:"map,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                          `json:"-"`
	XXX_unrecognized     []byte                            `json:"-"`
	XXX_sizecache        int32                             `json:"-"`
}

func (m *CMsgQuestDef) Reset()         { *m = CMsgQuestDef{} }
func (m *CMsgQuestDef) String() string { return proto.CompactTextString(m) }
func (*CMsgQuestDef) ProtoMessage()    {}
func (*CMsgQuestDef) Descriptor() ([]byte, []int) {
	return fileDescriptor_tf_proto_def_messages_a921922ea643aecb, []int{7}
}
func (m *CMsgQuestDef) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgQuestDef.Unmarshal(m, b)
}
func (m *CMsgQuestDef) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgQuestDef.Marshal(b, m, deterministic)
}
func (dst *CMsgQuestDef) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgQuestDef.Merge(dst, src)
}
func (m *CMsgQuestDef) XXX_Size() int {
	return xxx_messageInfo_CMsgQuestDef.Size(m)
}
func (m *CMsgQuestDef) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgQuestDef.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgQuestDef proto.InternalMessageInfo

func (m *CMsgQuestDef) GetHeader() *CMsgProtoDefHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *CMsgQuestDef) GetMaxPoints_0() uint32 {
	if m != nil && m.MaxPoints_0 != nil {
		return *m.MaxPoints_0
	}
	return 0
}

func (m *CMsgQuestDef) GetMaxPoints_1() uint32 {
	if m != nil && m.MaxPoints_1 != nil {
		return *m.MaxPoints_1
	}
	return 0
}

func (m *CMsgQuestDef) GetMaxPoints_2() uint32 {
	if m != nil && m.MaxPoints_2 != nil {
		return *m.MaxPoints_2
	}
	return 0
}

func (m *CMsgQuestDef) GetNameLoctoken() string {
	if m != nil && m.NameLoctoken != nil {
		return *m.NameLoctoken
	}
	return ""
}

func (m *CMsgQuestDef) GetOperation() string {
	if m != nil && m.Operation != nil {
		return *m.Operation
	}
	return ""
}

func (m *CMsgQuestDef) GetMmCriteria() *CMsgQuestDef_MMCriteria {
	if m != nil {
		return m.MmCriteria
	}
	return nil
}

func (m *CMsgQuestDef) GetNodeImage() string {
	if m != nil && m.NodeImage != nil {
		return *m.NodeImage
	}
	return ""
}

func (m *CMsgQuestDef) GetIconImage() string {
	if m != nil && m.IconImage != nil {
		return *m.IconImage
	}
	return ""
}

func (m *CMsgQuestDef) GetTheme() *CMsgProtoDefID {
	if m != nil {
		return m.Theme
	}
	return nil
}

func (m *CMsgQuestDef) GetLoanerNames() []string {
	if m != nil {
		return m.LoanerNames
	}
	return nil
}

func (m *CMsgQuestDef) GetObjectives() []*CMsgQuestDef_ObjectiveInstance {
	if m != nil {
		return m.Objectives
	}
	return nil
}

func (m *CMsgQuestDef) GetMap() []string {
	if m != nil {
		return m.Map
	}
	return nil
}

type CMsgQuestDef_MMCriteria struct {
	GroupName            *string  `protobuf:"bytes,1,opt,name=group_name,json=groupName" json:"group_name,omitempty"`
	CategoryName         *string  `protobuf:"bytes,2,opt,name=category_name,json=categoryName" json:"category_name,omitempty"`
	MapName              *string  `protobuf:"bytes,3,opt,name=map_name,json=mapName" json:"map_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgQuestDef_MMCriteria) Reset()         { *m = CMsgQuestDef_MMCriteria{} }
func (m *CMsgQuestDef_MMCriteria) String() string { return proto.CompactTextString(m) }
func (*CMsgQuestDef_MMCriteria) ProtoMessage()    {}
func (*CMsgQuestDef_MMCriteria) Descriptor() ([]byte, []int) {
	return fileDescriptor_tf_proto_def_messages_a921922ea643aecb, []int{7, 0}
}
func (m *CMsgQuestDef_MMCriteria) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgQuestDef_MMCriteria.Unmarshal(m, b)
}
func (m *CMsgQuestDef_MMCriteria) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgQuestDef_MMCriteria.Marshal(b, m, deterministic)
}
func (dst *CMsgQuestDef_MMCriteria) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgQuestDef_MMCriteria.Merge(dst, src)
}
func (m *CMsgQuestDef_MMCriteria) XXX_Size() int {
	return xxx_messageInfo_CMsgQuestDef_MMCriteria.Size(m)
}
func (m *CMsgQuestDef_MMCriteria) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgQuestDef_MMCriteria.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgQuestDef_MMCriteria proto.InternalMessageInfo

func (m *CMsgQuestDef_MMCriteria) GetGroupName() string {
	if m != nil && m.GroupName != nil {
		return *m.GroupName
	}
	return ""
}

func (m *CMsgQuestDef_MMCriteria) GetCategoryName() string {
	if m != nil && m.CategoryName != nil {
		return *m.CategoryName
	}
	return ""
}

func (m *CMsgQuestDef_MMCriteria) GetMapName() string {
	if m != nil && m.MapName != nil {
		return *m.MapName
	}
	return ""
}

type CMsgQuestDef_ObjectiveInstance struct {
	Objective            *CMsgProtoDefID `protobuf:"bytes,1,opt,name=objective" json:"objective,omitempty"`
	PointType            *EQuestPoints   `protobuf:"varint,2,opt,name=point_type,json=pointType,enum=EQuestPoints,def=0" json:"point_type,omitempty"`
	PointValue           *uint32         `protobuf:"varint,3,opt,name=point_value,json=pointValue" json:"point_value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *CMsgQuestDef_ObjectiveInstance) Reset()         { *m = CMsgQuestDef_ObjectiveInstance{} }
func (m *CMsgQuestDef_ObjectiveInstance) String() string { return proto.CompactTextString(m) }
func (*CMsgQuestDef_ObjectiveInstance) ProtoMessage()    {}
func (*CMsgQuestDef_ObjectiveInstance) Descriptor() ([]byte, []int) {
	return fileDescriptor_tf_proto_def_messages_a921922ea643aecb, []int{7, 1}
}
func (m *CMsgQuestDef_ObjectiveInstance) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgQuestDef_ObjectiveInstance.Unmarshal(m, b)
}
func (m *CMsgQuestDef_ObjectiveInstance) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgQuestDef_ObjectiveInstance.Marshal(b, m, deterministic)
}
func (dst *CMsgQuestDef_ObjectiveInstance) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgQuestDef_ObjectiveInstance.Merge(dst, src)
}
func (m *CMsgQuestDef_ObjectiveInstance) XXX_Size() int {
	return xxx_messageInfo_CMsgQuestDef_ObjectiveInstance.Size(m)
}
func (m *CMsgQuestDef_ObjectiveInstance) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgQuestDef_ObjectiveInstance.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgQuestDef_ObjectiveInstance proto.InternalMessageInfo

const Default_CMsgQuestDef_ObjectiveInstance_PointType EQuestPoints = EQuestPoints_QUEST_POINTS_NOVICE

func (m *CMsgQuestDef_ObjectiveInstance) GetObjective() *CMsgProtoDefID {
	if m != nil {
		return m.Objective
	}
	return nil
}

func (m *CMsgQuestDef_ObjectiveInstance) GetPointType() EQuestPoints {
	if m != nil && m.PointType != nil {
		return *m.PointType
	}
	return Default_CMsgQuestDef_ObjectiveInstance_PointType
}

func (m *CMsgQuestDef_ObjectiveInstance) GetPointValue() uint32 {
	if m != nil && m.PointValue != nil {
		return *m.PointValue
	}
	return 0
}

type CMsgQuestMapStoreItem struct {
	Header               *CMsgProtoDefHeader `protobuf:"bytes,1,req,name=header" json:"header,omitempty"`
	ItemName             *string             `protobuf:"bytes,2,opt,name=item_name,json=itemName" json:"item_name,omitempty"`
	RewardLootlistName   *string             `protobuf:"bytes,6,opt,name=reward_lootlist_name,json=rewardLootlistName" json:"reward_lootlist_name,omitempty"`
	Price                *CMsgVarField       `protobuf:"bytes,3,opt,name=price" json:"price,omitempty"`
	PurchaseLimit        *uint32             `protobuf:"varint,4,opt,name=purchase_limit,json=purchaseLimit" json:"purchase_limit,omitempty"`
	SortGroup            *uint32             `protobuf:"varint,5,opt,name=sort_group,json=sortGroup" json:"sort_group,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *CMsgQuestMapStoreItem) Reset()         { *m = CMsgQuestMapStoreItem{} }
func (m *CMsgQuestMapStoreItem) String() string { return proto.CompactTextString(m) }
func (*CMsgQuestMapStoreItem) ProtoMessage()    {}
func (*CMsgQuestMapStoreItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_tf_proto_def_messages_a921922ea643aecb, []int{8}
}
func (m *CMsgQuestMapStoreItem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgQuestMapStoreItem.Unmarshal(m, b)
}
func (m *CMsgQuestMapStoreItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgQuestMapStoreItem.Marshal(b, m, deterministic)
}
func (dst *CMsgQuestMapStoreItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgQuestMapStoreItem.Merge(dst, src)
}
func (m *CMsgQuestMapStoreItem) XXX_Size() int {
	return xxx_messageInfo_CMsgQuestMapStoreItem.Size(m)
}
func (m *CMsgQuestMapStoreItem) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgQuestMapStoreItem.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgQuestMapStoreItem proto.InternalMessageInfo

func (m *CMsgQuestMapStoreItem) GetHeader() *CMsgProtoDefHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *CMsgQuestMapStoreItem) GetItemName() string {
	if m != nil && m.ItemName != nil {
		return *m.ItemName
	}
	return ""
}

func (m *CMsgQuestMapStoreItem) GetRewardLootlistName() string {
	if m != nil && m.RewardLootlistName != nil {
		return *m.RewardLootlistName
	}
	return ""
}

func (m *CMsgQuestMapStoreItem) GetPrice() *CMsgVarField {
	if m != nil {
		return m.Price
	}
	return nil
}

func (m *CMsgQuestMapStoreItem) GetPurchaseLimit() uint32 {
	if m != nil && m.PurchaseLimit != nil {
		return *m.PurchaseLimit
	}
	return 0
}

func (m *CMsgQuestMapStoreItem) GetSortGroup() uint32 {
	if m != nil && m.SortGroup != nil {
		return *m.SortGroup
	}
	return 0
}

type CMsgQuestMapRegionDef struct {
	Header               *CMsgProtoDefHeader                 `protobuf:"bytes,1,req,name=header" json:"header,omitempty"`
	Name                 *string                             `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Resfile              *string                             `protobuf:"bytes,3,opt,name=resfile" json:"resfile,omitempty"`
	Links                []*CMsgQuestMapRegionDef_RegionLink `protobuf:"bytes,4,rep,name=links" json:"links,omitempty"`
	ReturnLink           *CMsgProtoDefID                     `protobuf:"bytes,5,opt,name=return_link,json=returnLink" json:"return_link,omitempty"`
	RadioFreq            *float32                            `protobuf:"fixed32,6,opt,name=radio_freq,json=radioFreq" json:"radio_freq,omitempty"`
	ZoomScale            *float32                            `protobuf:"fixed32,7,opt,name=zoom_scale,json=zoomScale" json:"zoom_scale,omitempty"`
	StarType             *CMsgProtoDefID                     `protobuf:"bytes,8,opt,name=star_type,json=starType" json:"star_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                            `json:"-"`
	XXX_unrecognized     []byte                              `json:"-"`
	XXX_sizecache        int32                               `json:"-"`
}

func (m *CMsgQuestMapRegionDef) Reset()         { *m = CMsgQuestMapRegionDef{} }
func (m *CMsgQuestMapRegionDef) String() string { return proto.CompactTextString(m) }
func (*CMsgQuestMapRegionDef) ProtoMessage()    {}
func (*CMsgQuestMapRegionDef) Descriptor() ([]byte, []int) {
	return fileDescriptor_tf_proto_def_messages_a921922ea643aecb, []int{9}
}
func (m *CMsgQuestMapRegionDef) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgQuestMapRegionDef.Unmarshal(m, b)
}
func (m *CMsgQuestMapRegionDef) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgQuestMapRegionDef.Marshal(b, m, deterministic)
}
func (dst *CMsgQuestMapRegionDef) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgQuestMapRegionDef.Merge(dst, src)
}
func (m *CMsgQuestMapRegionDef) XXX_Size() int {
	return xxx_messageInfo_CMsgQuestMapRegionDef.Size(m)
}
func (m *CMsgQuestMapRegionDef) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgQuestMapRegionDef.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgQuestMapRegionDef proto.InternalMessageInfo

func (m *CMsgQuestMapRegionDef) GetHeader() *CMsgProtoDefHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *CMsgQuestMapRegionDef) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *CMsgQuestMapRegionDef) GetResfile() string {
	if m != nil && m.Resfile != nil {
		return *m.Resfile
	}
	return ""
}

func (m *CMsgQuestMapRegionDef) GetLinks() []*CMsgQuestMapRegionDef_RegionLink {
	if m != nil {
		return m.Links
	}
	return nil
}

func (m *CMsgQuestMapRegionDef) GetReturnLink() *CMsgProtoDefID {
	if m != nil {
		return m.ReturnLink
	}
	return nil
}

func (m *CMsgQuestMapRegionDef) GetRadioFreq() float32 {
	if m != nil && m.RadioFreq != nil {
		return *m.RadioFreq
	}
	return 0
}

func (m *CMsgQuestMapRegionDef) GetZoomScale() float32 {
	if m != nil && m.ZoomScale != nil {
		return *m.ZoomScale
	}
	return 0
}

func (m *CMsgQuestMapRegionDef) GetStarType() *CMsgProtoDefID {
	if m != nil {
		return m.StarType
	}
	return nil
}

type CMsgQuestMapRegionDef_RegionLink struct {
	TargetRegionDefid    *CMsgProtoDefID `protobuf:"bytes,1,req,name=target_region_defid,json=targetRegionDefid" json:"target_region_defid,omitempty"`
	Xpos                 *uint32         `protobuf:"varint,2,opt,name=xpos" json:"xpos,omitempty"`
	Ypos                 *uint32         `protobuf:"varint,3,opt,name=ypos" json:"ypos,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *CMsgQuestMapRegionDef_RegionLink) Reset()         { *m = CMsgQuestMapRegionDef_RegionLink{} }
func (m *CMsgQuestMapRegionDef_RegionLink) String() string { return proto.CompactTextString(m) }
func (*CMsgQuestMapRegionDef_RegionLink) ProtoMessage()    {}
func (*CMsgQuestMapRegionDef_RegionLink) Descriptor() ([]byte, []int) {
	return fileDescriptor_tf_proto_def_messages_a921922ea643aecb, []int{9, 0}
}
func (m *CMsgQuestMapRegionDef_RegionLink) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgQuestMapRegionDef_RegionLink.Unmarshal(m, b)
}
func (m *CMsgQuestMapRegionDef_RegionLink) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgQuestMapRegionDef_RegionLink.Marshal(b, m, deterministic)
}
func (dst *CMsgQuestMapRegionDef_RegionLink) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgQuestMapRegionDef_RegionLink.Merge(dst, src)
}
func (m *CMsgQuestMapRegionDef_RegionLink) XXX_Size() int {
	return xxx_messageInfo_CMsgQuestMapRegionDef_RegionLink.Size(m)
}
func (m *CMsgQuestMapRegionDef_RegionLink) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgQuestMapRegionDef_RegionLink.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgQuestMapRegionDef_RegionLink proto.InternalMessageInfo

func (m *CMsgQuestMapRegionDef_RegionLink) GetTargetRegionDefid() *CMsgProtoDefID {
	if m != nil {
		return m.TargetRegionDefid
	}
	return nil
}

func (m *CMsgQuestMapRegionDef_RegionLink) GetXpos() uint32 {
	if m != nil && m.Xpos != nil {
		return *m.Xpos
	}
	return 0
}

func (m *CMsgQuestMapRegionDef_RegionLink) GetYpos() uint32 {
	if m != nil && m.Ypos != nil {
		return *m.Ypos
	}
	return 0
}

type CMsgVarField struct {
	Variable *string `protobuf:"bytes,1,opt,name=variable" json:"variable,omitempty"`
	// Types that are valid to be assigned to Value:
	//	*CMsgVarField_Float
	//	*CMsgVarField_Double
	//	*CMsgVarField_Uint32
	//	*CMsgVarField_Uint64
	//	*CMsgVarField_Sint32
	//	*CMsgVarField_Sint64
	//	*CMsgVarField_Bool
	//	*CMsgVarField_String_
	Value                isCMsgVarField_Value `protobuf_oneof:"value"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *CMsgVarField) Reset()         { *m = CMsgVarField{} }
func (m *CMsgVarField) String() string { return proto.CompactTextString(m) }
func (*CMsgVarField) ProtoMessage()    {}
func (*CMsgVarField) Descriptor() ([]byte, []int) {
	return fileDescriptor_tf_proto_def_messages_a921922ea643aecb, []int{10}
}
func (m *CMsgVarField) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgVarField.Unmarshal(m, b)
}
func (m *CMsgVarField) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgVarField.Marshal(b, m, deterministic)
}
func (dst *CMsgVarField) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgVarField.Merge(dst, src)
}
func (m *CMsgVarField) XXX_Size() int {
	return xxx_messageInfo_CMsgVarField.Size(m)
}
func (m *CMsgVarField) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgVarField.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgVarField proto.InternalMessageInfo

type isCMsgVarField_Value interface {
	isCMsgVarField_Value()
}

type CMsgVarField_Float struct {
	Float float32 `protobuf:"fixed32,2,opt,name=float,oneof"`
}
type CMsgVarField_Double struct {
	Double float64 `protobuf:"fixed64,3,opt,name=double,oneof"`
}
type CMsgVarField_Uint32 struct {
	Uint32 uint32 `protobuf:"varint,4,opt,name=uint32,oneof"`
}
type CMsgVarField_Uint64 struct {
	Uint64 uint64 `protobuf:"varint,5,opt,name=uint64,oneof"`
}
type CMsgVarField_Sint32 struct {
	Sint32 int32 `protobuf:"zigzag32,6,opt,name=sint32,oneof"`
}
type CMsgVarField_Sint64 struct {
	Sint64 int64 `protobuf:"zigzag64,7,opt,name=sint64,oneof"`
}
type CMsgVarField_Bool struct {
	Bool bool `protobuf:"varint,8,opt,name=bool,oneof"`
}
type CMsgVarField_String_ struct {
	String_ string `protobuf:"bytes,9,opt,name=string,oneof"`
}

func (*CMsgVarField_Float) isCMsgVarField_Value()   {}
func (*CMsgVarField_Double) isCMsgVarField_Value()  {}
func (*CMsgVarField_Uint32) isCMsgVarField_Value()  {}
func (*CMsgVarField_Uint64) isCMsgVarField_Value()  {}
func (*CMsgVarField_Sint32) isCMsgVarField_Value()  {}
func (*CMsgVarField_Sint64) isCMsgVarField_Value()  {}
func (*CMsgVarField_Bool) isCMsgVarField_Value()    {}
func (*CMsgVarField_String_) isCMsgVarField_Value() {}

func (m *CMsgVarField) GetValue() isCMsgVarField_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *CMsgVarField) GetVariable() string {
	if m != nil && m.Variable != nil {
		return *m.Variable
	}
	return ""
}

func (m *CMsgVarField) GetFloat() float32 {
	if x, ok := m.GetValue().(*CMsgVarField_Float); ok {
		return x.Float
	}
	return 0
}

func (m *CMsgVarField) GetDouble() float64 {
	if x, ok := m.GetValue().(*CMsgVarField_Double); ok {
		return x.Double
	}
	return 0
}

func (m *CMsgVarField) GetUint32() uint32 {
	if x, ok := m.GetValue().(*CMsgVarField_Uint32); ok {
		return x.Uint32
	}
	return 0
}

func (m *CMsgVarField) GetUint64() uint64 {
	if x, ok := m.GetValue().(*CMsgVarField_Uint64); ok {
		return x.Uint64
	}
	return 0
}

func (m *CMsgVarField) GetSint32() int32 {
	if x, ok := m.GetValue().(*CMsgVarField_Sint32); ok {
		return x.Sint32
	}
	return 0
}

func (m *CMsgVarField) GetSint64() int64 {
	if x, ok := m.GetValue().(*CMsgVarField_Sint64); ok {
		return x.Sint64
	}
	return 0
}

func (m *CMsgVarField) GetBool() bool {
	if x, ok := m.GetValue().(*CMsgVarField_Bool); ok {
		return x.Bool
	}
	return false
}

func (m *CMsgVarField) GetString_() string {
	if x, ok := m.GetValue().(*CMsgVarField_String_); ok {
		return x.String_
	}
	return ""
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*CMsgVarField) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _CMsgVarField_OneofMarshaler, _CMsgVarField_OneofUnmarshaler, _CMsgVarField_OneofSizer, []interface{}{
		(*CMsgVarField_Float)(nil),
		(*CMsgVarField_Double)(nil),
		(*CMsgVarField_Uint32)(nil),
		(*CMsgVarField_Uint64)(nil),
		(*CMsgVarField_Sint32)(nil),
		(*CMsgVarField_Sint64)(nil),
		(*CMsgVarField_Bool)(nil),
		(*CMsgVarField_String_)(nil),
	}
}

func _CMsgVarField_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*CMsgVarField)
	// value
	switch x := m.Value.(type) {
	case *CMsgVarField_Float:
		b.EncodeVarint(2<<3 | proto.WireFixed32)
		b.EncodeFixed32(uint64(math.Float32bits(x.Float)))
	case *CMsgVarField_Double:
		b.EncodeVarint(3<<3 | proto.WireFixed64)
		b.EncodeFixed64(math.Float64bits(x.Double))
	case *CMsgVarField_Uint32:
		b.EncodeVarint(4<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.Uint32))
	case *CMsgVarField_Uint64:
		b.EncodeVarint(5<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.Uint64))
	case *CMsgVarField_Sint32:
		b.EncodeVarint(6<<3 | proto.WireVarint)
		b.EncodeZigzag32(uint64(x.Sint32))
	case *CMsgVarField_Sint64:
		b.EncodeVarint(7<<3 | proto.WireVarint)
		b.EncodeZigzag64(uint64(x.Sint64))
	case *CMsgVarField_Bool:
		t := uint64(0)
		if x.Bool {
			t = 1
		}
		b.EncodeVarint(8<<3 | proto.WireVarint)
		b.EncodeVarint(t)
	case *CMsgVarField_String_:
		b.EncodeVarint(9<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.String_)
	case nil:
	default:
		return fmt.Errorf("CMsgVarField.Value has unexpected type %T", x)
	}
	return nil
}

func _CMsgVarField_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*CMsgVarField)
	switch tag {
	case 2: // value.float
		if wire != proto.WireFixed32 {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeFixed32()
		m.Value = &CMsgVarField_Float{math.Float32frombits(uint32(x))}
		return true, err
	case 3: // value.double
		if wire != proto.WireFixed64 {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeFixed64()
		m.Value = &CMsgVarField_Double{math.Float64frombits(x)}
		return true, err
	case 4: // value.uint32
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Value = &CMsgVarField_Uint32{uint32(x)}
		return true, err
	case 5: // value.uint64
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Value = &CMsgVarField_Uint64{x}
		return true, err
	case 6: // value.sint32
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeZigzag32()
		m.Value = &CMsgVarField_Sint32{int32(x)}
		return true, err
	case 7: // value.sint64
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeZigzag64()
		m.Value = &CMsgVarField_Sint64{int64(x)}
		return true, err
	case 8: // value.bool
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Value = &CMsgVarField_Bool{x != 0}
		return true, err
	case 9: // value.string
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Value = &CMsgVarField_String_{x}
		return true, err
	default:
		return false, nil
	}
}

func _CMsgVarField_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*CMsgVarField)
	// value
	switch x := m.Value.(type) {
	case *CMsgVarField_Float:
		n += 1 // tag and wire
		n += 4
	case *CMsgVarField_Double:
		n += 1 // tag and wire
		n += 8
	case *CMsgVarField_Uint32:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(x.Uint32))
	case *CMsgVarField_Uint64:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(x.Uint64))
	case *CMsgVarField_Sint32:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64((uint32(x.Sint32) << 1) ^ uint32((int32(x.Sint32) >> 31))))
	case *CMsgVarField_Sint64:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(uint64(x.Sint64<<1) ^ uint64((int64(x.Sint64) >> 63))))
	case *CMsgVarField_Bool:
		n += 1 // tag and wire
		n += 1
	case *CMsgVarField_String_:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(len(x.String_)))
		n += len(x.String_)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type CMsgQuestMapStarType struct {
	Header               *CMsgProtoDefHeader `protobuf:"bytes,1,req,name=header" json:"header,omitempty"`
	Name                 *string             `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *CMsgQuestMapStarType) Reset()         { *m = CMsgQuestMapStarType{} }
func (m *CMsgQuestMapStarType) String() string { return proto.CompactTextString(m) }
func (*CMsgQuestMapStarType) ProtoMessage()    {}
func (*CMsgQuestMapStarType) Descriptor() ([]byte, []int) {
	return fileDescriptor_tf_proto_def_messages_a921922ea643aecb, []int{11}
}
func (m *CMsgQuestMapStarType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgQuestMapStarType.Unmarshal(m, b)
}
func (m *CMsgQuestMapStarType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgQuestMapStarType.Marshal(b, m, deterministic)
}
func (dst *CMsgQuestMapStarType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgQuestMapStarType.Merge(dst, src)
}
func (m *CMsgQuestMapStarType) XXX_Size() int {
	return xxx_messageInfo_CMsgQuestMapStarType.Size(m)
}
func (m *CMsgQuestMapStarType) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgQuestMapStarType.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgQuestMapStarType proto.InternalMessageInfo

func (m *CMsgQuestMapStarType) GetHeader() *CMsgProtoDefHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *CMsgQuestMapStarType) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

type CMsgQuestMapNodeDef struct {
	Header               *CMsgProtoDefHeader        `protobuf:"bytes,1,req,name=header" json:"header,omitempty"`
	NameLoctoken         *string                    `protobuf:"bytes,4,opt,name=name_loctoken,json=nameLoctoken" json:"name_loctoken,omitempty"`
	XPos                 *float32                   `protobuf:"fixed32,6,opt,name=x_pos,json=xPos" json:"x_pos,omitempty"`
	YPos                 *float32                   `protobuf:"fixed32,7,opt,name=y_pos,json=yPos" json:"y_pos,omitempty"`
	Condition            *CMsgQuestMapNodeCondition `protobuf:"bytes,9,opt,name=condition" json:"condition,omitempty"`
	OwningRegion         *CMsgProtoDefID            `protobuf:"bytes,10,opt,name=owning_region,json=owningRegion" json:"owning_region,omitempty"`
	QuestOptions         []*CMsgProtoDefID          `protobuf:"bytes,11,rep,name=quest_options,json=questOptions" json:"quest_options,omitempty"`
	AssociatedOperation  *string                    `protobuf:"bytes,16,opt,name=associated_operation,json=associatedOperation" json:"associated_operation,omitempty"`
	RewardItemName       *string                    `protobuf:"bytes,18,opt,name=reward_item_name,json=rewardItemName" json:"reward_item_name,omitempty"`
	RewardLootlistName   *string                    `protobuf:"bytes,22,opt,name=reward_lootlist_name,json=rewardLootlistName" json:"reward_lootlist_name,omitempty"`
	CashReward           *ENodeCashReward           `protobuf:"varint,19,opt,name=cash_reward,json=cashReward,enum=ENodeCashReward,def=1" json:"cash_reward,omitempty"`
	StarType             *CMsgProtoDefID            `protobuf:"bytes,20,opt,name=star_type,json=starType" json:"star_type,omitempty"`
	StarsToUnlock        *uint32                    `protobuf:"varint,21,opt,name=stars_to_unlock,json=starsToUnlock,def=1" json:"stars_to_unlock,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *CMsgQuestMapNodeDef) Reset()         { *m = CMsgQuestMapNodeDef{} }
func (m *CMsgQuestMapNodeDef) String() string { return proto.CompactTextString(m) }
func (*CMsgQuestMapNodeDef) ProtoMessage()    {}
func (*CMsgQuestMapNodeDef) Descriptor() ([]byte, []int) {
	return fileDescriptor_tf_proto_def_messages_a921922ea643aecb, []int{12}
}
func (m *CMsgQuestMapNodeDef) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgQuestMapNodeDef.Unmarshal(m, b)
}
func (m *CMsgQuestMapNodeDef) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgQuestMapNodeDef.Marshal(b, m, deterministic)
}
func (dst *CMsgQuestMapNodeDef) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgQuestMapNodeDef.Merge(dst, src)
}
func (m *CMsgQuestMapNodeDef) XXX_Size() int {
	return xxx_messageInfo_CMsgQuestMapNodeDef.Size(m)
}
func (m *CMsgQuestMapNodeDef) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgQuestMapNodeDef.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgQuestMapNodeDef proto.InternalMessageInfo

const Default_CMsgQuestMapNodeDef_CashReward ENodeCashReward = ENodeCashReward_CASH_REWARD_NONE
const Default_CMsgQuestMapNodeDef_StarsToUnlock uint32 = 1

func (m *CMsgQuestMapNodeDef) GetHeader() *CMsgProtoDefHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *CMsgQuestMapNodeDef) GetNameLoctoken() string {
	if m != nil && m.NameLoctoken != nil {
		return *m.NameLoctoken
	}
	return ""
}

func (m *CMsgQuestMapNodeDef) GetXPos() float32 {
	if m != nil && m.XPos != nil {
		return *m.XPos
	}
	return 0
}

func (m *CMsgQuestMapNodeDef) GetYPos() float32 {
	if m != nil && m.YPos != nil {
		return *m.YPos
	}
	return 0
}

func (m *CMsgQuestMapNodeDef) GetCondition() *CMsgQuestMapNodeCondition {
	if m != nil {
		return m.Condition
	}
	return nil
}

func (m *CMsgQuestMapNodeDef) GetOwningRegion() *CMsgProtoDefID {
	if m != nil {
		return m.OwningRegion
	}
	return nil
}

func (m *CMsgQuestMapNodeDef) GetQuestOptions() []*CMsgProtoDefID {
	if m != nil {
		return m.QuestOptions
	}
	return nil
}

func (m *CMsgQuestMapNodeDef) GetAssociatedOperation() string {
	if m != nil && m.AssociatedOperation != nil {
		return *m.AssociatedOperation
	}
	return ""
}

func (m *CMsgQuestMapNodeDef) GetRewardItemName() string {
	if m != nil && m.RewardItemName != nil {
		return *m.RewardItemName
	}
	return ""
}

func (m *CMsgQuestMapNodeDef) GetRewardLootlistName() string {
	if m != nil && m.RewardLootlistName != nil {
		return *m.RewardLootlistName
	}
	return ""
}

func (m *CMsgQuestMapNodeDef) GetCashReward() ENodeCashReward {
	if m != nil && m.CashReward != nil {
		return *m.CashReward
	}
	return Default_CMsgQuestMapNodeDef_CashReward
}

func (m *CMsgQuestMapNodeDef) GetStarType() *CMsgProtoDefID {
	if m != nil {
		return m.StarType
	}
	return nil
}

func (m *CMsgQuestMapNodeDef) GetStarsToUnlock() uint32 {
	if m != nil && m.StarsToUnlock != nil {
		return *m.StarsToUnlock
	}
	return Default_CMsgQuestMapNodeDef_StarsToUnlock
}

type CMsgPaintKit_Variables struct {
	Header               *CMsgProtoDefHeader `protobuf:"bytes,1,req,name=header" json:"header,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *CMsgPaintKit_Variables) Reset()         { *m = CMsgPaintKit_Variables{} }
func (m *CMsgPaintKit_Variables) String() string { return proto.CompactTextString(m) }
func (*CMsgPaintKit_Variables) ProtoMessage()    {}
func (*CMsgPaintKit_Variables) Descriptor() ([]byte, []int) {
	return fileDescriptor_tf_proto_def_messages_a921922ea643aecb, []int{13}
}
func (m *CMsgPaintKit_Variables) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgPaintKit_Variables.Unmarshal(m, b)
}
func (m *CMsgPaintKit_Variables) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgPaintKit_Variables.Marshal(b, m, deterministic)
}
func (dst *CMsgPaintKit_Variables) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgPaintKit_Variables.Merge(dst, src)
}
func (m *CMsgPaintKit_Variables) XXX_Size() int {
	return xxx_messageInfo_CMsgPaintKit_Variables.Size(m)
}
func (m *CMsgPaintKit_Variables) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgPaintKit_Variables.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgPaintKit_Variables proto.InternalMessageInfo

func (m *CMsgPaintKit_Variables) GetHeader() *CMsgProtoDefHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

type CMsgPaintKit_Operation_TextureStage struct {
	Texture              *CMsgVarField `protobuf:"bytes,1,opt,name=texture" json:"texture,omitempty"`
	TextureRed           *CMsgVarField `protobuf:"bytes,2,opt,name=texture_red,json=textureRed" json:"texture_red,omitempty"`
	TextureBlue          *CMsgVarField `protobuf:"bytes,3,opt,name=texture_blue,json=textureBlue" json:"texture_blue,omitempty"`
	AdjustBlack          *CMsgVarField `protobuf:"bytes,4,opt,name=adjust_black,json=adjustBlack" json:"adjust_black,omitempty"`
	AdjustOffset         *CMsgVarField `protobuf:"bytes,5,opt,name=adjust_offset,json=adjustOffset" json:"adjust_offset,omitempty"`
	AdjustGamma          *CMsgVarField `protobuf:"bytes,6,opt,name=adjust_gamma,json=adjustGamma" json:"adjust_gamma,omitempty"`
	Rotation             *CMsgVarField `protobuf:"bytes,7,opt,name=rotation" json:"rotation,omitempty"`
	TranslateU           *CMsgVarField `protobuf:"bytes,8,opt,name=translate_u,json=translateU" json:"translate_u,omitempty"`
	TranslateV           *CMsgVarField `protobuf:"bytes,9,opt,name=translate_v,json=translateV" json:"translate_v,omitempty"`
	ScaleUv              *CMsgVarField `protobuf:"bytes,10,opt,name=scale_uv,json=scaleUv" json:"scale_uv,omitempty"`
	FlipU                *CMsgVarField `protobuf:"bytes,11,opt,name=flip_u,json=flipU" json:"flip_u,omitempty"`
	FlipV                *CMsgVarField `protobuf:"bytes,12,opt,name=flip_v,json=flipV" json:"flip_v,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *CMsgPaintKit_Operation_TextureStage) Reset()         { *m = CMsgPaintKit_Operation_TextureStage{} }
func (m *CMsgPaintKit_Operation_TextureStage) String() string { return proto.CompactTextString(m) }
func (*CMsgPaintKit_Operation_TextureStage) ProtoMessage()    {}
func (*CMsgPaintKit_Operation_TextureStage) Descriptor() ([]byte, []int) {
	return fileDescriptor_tf_proto_def_messages_a921922ea643aecb, []int{14}
}
func (m *CMsgPaintKit_Operation_TextureStage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgPaintKit_Operation_TextureStage.Unmarshal(m, b)
}
func (m *CMsgPaintKit_Operation_TextureStage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgPaintKit_Operation_TextureStage.Marshal(b, m, deterministic)
}
func (dst *CMsgPaintKit_Operation_TextureStage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgPaintKit_Operation_TextureStage.Merge(dst, src)
}
func (m *CMsgPaintKit_Operation_TextureStage) XXX_Size() int {
	return xxx_messageInfo_CMsgPaintKit_Operation_TextureStage.Size(m)
}
func (m *CMsgPaintKit_Operation_TextureStage) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgPaintKit_Operation_TextureStage.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgPaintKit_Operation_TextureStage proto.InternalMessageInfo

func (m *CMsgPaintKit_Operation_TextureStage) GetTexture() *CMsgVarField {
	if m != nil {
		return m.Texture
	}
	return nil
}

func (m *CMsgPaintKit_Operation_TextureStage) GetTextureRed() *CMsgVarField {
	if m != nil {
		return m.TextureRed
	}
	return nil
}

func (m *CMsgPaintKit_Operation_TextureStage) GetTextureBlue() *CMsgVarField {
	if m != nil {
		return m.TextureBlue
	}
	return nil
}

func (m *CMsgPaintKit_Operation_TextureStage) GetAdjustBlack() *CMsgVarField {
	if m != nil {
		return m.AdjustBlack
	}
	return nil
}

func (m *CMsgPaintKit_Operation_TextureStage) GetAdjustOffset() *CMsgVarField {
	if m != nil {
		return m.AdjustOffset
	}
	return nil
}

func (m *CMsgPaintKit_Operation_TextureStage) GetAdjustGamma() *CMsgVarField {
	if m != nil {
		return m.AdjustGamma
	}
	return nil
}

func (m *CMsgPaintKit_Operation_TextureStage) GetRotation() *CMsgVarField {
	if m != nil {
		return m.Rotation
	}
	return nil
}

func (m *CMsgPaintKit_Operation_TextureStage) GetTranslateU() *CMsgVarField {
	if m != nil {
		return m.TranslateU
	}
	return nil
}

func (m *CMsgPaintKit_Operation_TextureStage) GetTranslateV() *CMsgVarField {
	if m != nil {
		return m.TranslateV
	}
	return nil
}

func (m *CMsgPaintKit_Operation_TextureStage) GetScaleUv() *CMsgVarField {
	if m != nil {
		return m.ScaleUv
	}
	return nil
}

func (m *CMsgPaintKit_Operation_TextureStage) GetFlipU() *CMsgVarField {
	if m != nil {
		return m.FlipU
	}
	return nil
}

func (m *CMsgPaintKit_Operation_TextureStage) GetFlipV() *CMsgVarField {
	if m != nil {
		return m.FlipV
	}
	return nil
}

type CMsgPaintKit_Operation_CombineStage struct {
	AdjustBlack          *CMsgVarField                 `protobuf:"bytes,1,opt,name=adjust_black,json=adjustBlack" json:"adjust_black,omitempty"`
	AdjustOffset         *CMsgVarField                 `protobuf:"bytes,2,opt,name=adjust_offset,json=adjustOffset" json:"adjust_offset,omitempty"`
	AdjustGamma          *CMsgVarField                 `protobuf:"bytes,3,opt,name=adjust_gamma,json=adjustGamma" json:"adjust_gamma,omitempty"`
	Rotation             *CMsgVarField                 `protobuf:"bytes,4,opt,name=rotation" json:"rotation,omitempty"`
	TranslateU           *CMsgVarField                 `protobuf:"bytes,5,opt,name=translate_u,json=translateU" json:"translate_u,omitempty"`
	TranslateV           *CMsgVarField                 `protobuf:"bytes,6,opt,name=translate_v,json=translateV" json:"translate_v,omitempty"`
	ScaleUv              *CMsgVarField                 `protobuf:"bytes,7,opt,name=scale_uv,json=scaleUv" json:"scale_uv,omitempty"`
	FlipU                *CMsgVarField                 `protobuf:"bytes,8,opt,name=flip_u,json=flipU" json:"flip_u,omitempty"`
	FlipV                *CMsgVarField                 `protobuf:"bytes,9,opt,name=flip_v,json=flipV" json:"flip_v,omitempty"`
	OperationNode        []*CMsgPaintKit_OperationNode `protobuf:"bytes,11,rep,name=operation_node,json=operationNode" json:"operation_node,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *CMsgPaintKit_Operation_CombineStage) Reset()         { *m = CMsgPaintKit_Operation_CombineStage{} }
func (m *CMsgPaintKit_Operation_CombineStage) String() string { return proto.CompactTextString(m) }
func (*CMsgPaintKit_Operation_CombineStage) ProtoMessage()    {}
func (*CMsgPaintKit_Operation_CombineStage) Descriptor() ([]byte, []int) {
	return fileDescriptor_tf_proto_def_messages_a921922ea643aecb, []int{15}
}
func (m *CMsgPaintKit_Operation_CombineStage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgPaintKit_Operation_CombineStage.Unmarshal(m, b)
}
func (m *CMsgPaintKit_Operation_CombineStage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgPaintKit_Operation_CombineStage.Marshal(b, m, deterministic)
}
func (dst *CMsgPaintKit_Operation_CombineStage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgPaintKit_Operation_CombineStage.Merge(dst, src)
}
func (m *CMsgPaintKit_Operation_CombineStage) XXX_Size() int {
	return xxx_messageInfo_CMsgPaintKit_Operation_CombineStage.Size(m)
}
func (m *CMsgPaintKit_Operation_CombineStage) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgPaintKit_Operation_CombineStage.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgPaintKit_Operation_CombineStage proto.InternalMessageInfo

func (m *CMsgPaintKit_Operation_CombineStage) GetAdjustBlack() *CMsgVarField {
	if m != nil {
		return m.AdjustBlack
	}
	return nil
}

func (m *CMsgPaintKit_Operation_CombineStage) GetAdjustOffset() *CMsgVarField {
	if m != nil {
		return m.AdjustOffset
	}
	return nil
}

func (m *CMsgPaintKit_Operation_CombineStage) GetAdjustGamma() *CMsgVarField {
	if m != nil {
		return m.AdjustGamma
	}
	return nil
}

func (m *CMsgPaintKit_Operation_CombineStage) GetRotation() *CMsgVarField {
	if m != nil {
		return m.Rotation
	}
	return nil
}

func (m *CMsgPaintKit_Operation_CombineStage) GetTranslateU() *CMsgVarField {
	if m != nil {
		return m.TranslateU
	}
	return nil
}

func (m *CMsgPaintKit_Operation_CombineStage) GetTranslateV() *CMsgVarField {
	if m != nil {
		return m.TranslateV
	}
	return nil
}

func (m *CMsgPaintKit_Operation_CombineStage) GetScaleUv() *CMsgVarField {
	if m != nil {
		return m.ScaleUv
	}
	return nil
}

func (m *CMsgPaintKit_Operation_CombineStage) GetFlipU() *CMsgVarField {
	if m != nil {
		return m.FlipU
	}
	return nil
}

func (m *CMsgPaintKit_Operation_CombineStage) GetFlipV() *CMsgVarField {
	if m != nil {
		return m.FlipV
	}
	return nil
}

func (m *CMsgPaintKit_Operation_CombineStage) GetOperationNode() []*CMsgPaintKit_OperationNode {
	if m != nil {
		return m.OperationNode
	}
	return nil
}

type CMsgPaintKit_Operation_SelectStage struct {
	Groups               *CMsgVarField   `protobuf:"bytes,1,opt,name=groups" json:"groups,omitempty"`
	Select               []*CMsgVarField `protobuf:"bytes,2,rep,name=select" json:"select,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *CMsgPaintKit_Operation_SelectStage) Reset()         { *m = CMsgPaintKit_Operation_SelectStage{} }
func (m *CMsgPaintKit_Operation_SelectStage) String() string { return proto.CompactTextString(m) }
func (*CMsgPaintKit_Operation_SelectStage) ProtoMessage()    {}
func (*CMsgPaintKit_Operation_SelectStage) Descriptor() ([]byte, []int) {
	return fileDescriptor_tf_proto_def_messages_a921922ea643aecb, []int{16}
}
func (m *CMsgPaintKit_Operation_SelectStage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgPaintKit_Operation_SelectStage.Unmarshal(m, b)
}
func (m *CMsgPaintKit_Operation_SelectStage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgPaintKit_Operation_SelectStage.Marshal(b, m, deterministic)
}
func (dst *CMsgPaintKit_Operation_SelectStage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgPaintKit_Operation_SelectStage.Merge(dst, src)
}
func (m *CMsgPaintKit_Operation_SelectStage) XXX_Size() int {
	return xxx_messageInfo_CMsgPaintKit_Operation_SelectStage.Size(m)
}
func (m *CMsgPaintKit_Operation_SelectStage) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgPaintKit_Operation_SelectStage.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgPaintKit_Operation_SelectStage proto.InternalMessageInfo

func (m *CMsgPaintKit_Operation_SelectStage) GetGroups() *CMsgVarField {
	if m != nil {
		return m.Groups
	}
	return nil
}

func (m *CMsgPaintKit_Operation_SelectStage) GetSelect() []*CMsgVarField {
	if m != nil {
		return m.Select
	}
	return nil
}

type CMsgPaintKit_Operation_Sticker struct {
	Base                 *CMsgVarField `protobuf:"bytes,1,opt,name=base" json:"base,omitempty"`
	Weight               *CMsgVarField `protobuf:"bytes,2,opt,name=weight" json:"weight,omitempty"`
	Spec                 *CMsgVarField `protobuf:"bytes,3,opt,name=spec" json:"spec,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *CMsgPaintKit_Operation_Sticker) Reset()         { *m = CMsgPaintKit_Operation_Sticker{} }
func (m *CMsgPaintKit_Operation_Sticker) String() string { return proto.CompactTextString(m) }
func (*CMsgPaintKit_Operation_Sticker) ProtoMessage()    {}
func (*CMsgPaintKit_Operation_Sticker) Descriptor() ([]byte, []int) {
	return fileDescriptor_tf_proto_def_messages_a921922ea643aecb, []int{17}
}
func (m *CMsgPaintKit_Operation_Sticker) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgPaintKit_Operation_Sticker.Unmarshal(m, b)
}
func (m *CMsgPaintKit_Operation_Sticker) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgPaintKit_Operation_Sticker.Marshal(b, m, deterministic)
}
func (dst *CMsgPaintKit_Operation_Sticker) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgPaintKit_Operation_Sticker.Merge(dst, src)
}
func (m *CMsgPaintKit_Operation_Sticker) XXX_Size() int {
	return xxx_messageInfo_CMsgPaintKit_Operation_Sticker.Size(m)
}
func (m *CMsgPaintKit_Operation_Sticker) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgPaintKit_Operation_Sticker.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgPaintKit_Operation_Sticker proto.InternalMessageInfo

func (m *CMsgPaintKit_Operation_Sticker) GetBase() *CMsgVarField {
	if m != nil {
		return m.Base
	}
	return nil
}

func (m *CMsgPaintKit_Operation_Sticker) GetWeight() *CMsgVarField {
	if m != nil {
		return m.Weight
	}
	return nil
}

func (m *CMsgPaintKit_Operation_Sticker) GetSpec() *CMsgVarField {
	if m != nil {
		return m.Spec
	}
	return nil
}

type CMsgPaintKit_Operation_StickerStage struct {
	Sticker              []*CMsgPaintKit_Operation_Sticker `protobuf:"bytes,1,rep,name=sticker" json:"sticker,omitempty"`
	DestTl               *CMsgVarField                     `protobuf:"bytes,2,opt,name=dest_tl,json=destTl" json:"dest_tl,omitempty"`
	DestTr               *CMsgVarField                     `protobuf:"bytes,3,opt,name=dest_tr,json=destTr" json:"dest_tr,omitempty"`
	DestBl               *CMsgVarField                     `protobuf:"bytes,4,opt,name=dest_bl,json=destBl" json:"dest_bl,omitempty"`
	AdjustBlack          *CMsgVarField                     `protobuf:"bytes,5,opt,name=adjust_black,json=adjustBlack" json:"adjust_black,omitempty"`
	AdjustOffset         *CMsgVarField                     `protobuf:"bytes,6,opt,name=adjust_offset,json=adjustOffset" json:"adjust_offset,omitempty"`
	AdjustGamma          *CMsgVarField                     `protobuf:"bytes,7,opt,name=adjust_gamma,json=adjustGamma" json:"adjust_gamma,omitempty"`
	OperationNode        []*CMsgPaintKit_OperationNode     `protobuf:"bytes,9,rep,name=operation_node,json=operationNode" json:"operation_node,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                          `json:"-"`
	XXX_unrecognized     []byte                            `json:"-"`
	XXX_sizecache        int32                             `json:"-"`
}

func (m *CMsgPaintKit_Operation_StickerStage) Reset()         { *m = CMsgPaintKit_Operation_StickerStage{} }
func (m *CMsgPaintKit_Operation_StickerStage) String() string { return proto.CompactTextString(m) }
func (*CMsgPaintKit_Operation_StickerStage) ProtoMessage()    {}
func (*CMsgPaintKit_Operation_StickerStage) Descriptor() ([]byte, []int) {
	return fileDescriptor_tf_proto_def_messages_a921922ea643aecb, []int{18}
}
func (m *CMsgPaintKit_Operation_StickerStage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgPaintKit_Operation_StickerStage.Unmarshal(m, b)
}
func (m *CMsgPaintKit_Operation_StickerStage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgPaintKit_Operation_StickerStage.Marshal(b, m, deterministic)
}
func (dst *CMsgPaintKit_Operation_StickerStage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgPaintKit_Operation_StickerStage.Merge(dst, src)
}
func (m *CMsgPaintKit_Operation_StickerStage) XXX_Size() int {
	return xxx_messageInfo_CMsgPaintKit_Operation_StickerStage.Size(m)
}
func (m *CMsgPaintKit_Operation_StickerStage) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgPaintKit_Operation_StickerStage.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgPaintKit_Operation_StickerStage proto.InternalMessageInfo

func (m *CMsgPaintKit_Operation_StickerStage) GetSticker() []*CMsgPaintKit_Operation_Sticker {
	if m != nil {
		return m.Sticker
	}
	return nil
}

func (m *CMsgPaintKit_Operation_StickerStage) GetDestTl() *CMsgVarField {
	if m != nil {
		return m.DestTl
	}
	return nil
}

func (m *CMsgPaintKit_Operation_StickerStage) GetDestTr() *CMsgVarField {
	if m != nil {
		return m.DestTr
	}
	return nil
}

func (m *CMsgPaintKit_Operation_StickerStage) GetDestBl() *CMsgVarField {
	if m != nil {
		return m.DestBl
	}
	return nil
}

func (m *CMsgPaintKit_Operation_StickerStage) GetAdjustBlack() *CMsgVarField {
	if m != nil {
		return m.AdjustBlack
	}
	return nil
}

func (m *CMsgPaintKit_Operation_StickerStage) GetAdjustOffset() *CMsgVarField {
	if m != nil {
		return m.AdjustOffset
	}
	return nil
}

func (m *CMsgPaintKit_Operation_StickerStage) GetAdjustGamma() *CMsgVarField {
	if m != nil {
		return m.AdjustGamma
	}
	return nil
}

func (m *CMsgPaintKit_Operation_StickerStage) GetOperationNode() []*CMsgPaintKit_OperationNode {
	if m != nil {
		return m.OperationNode
	}
	return nil
}

type CMsgPaintKit_OperationStage struct {
	// Types that are valid to be assigned to Stage:
	//	*CMsgPaintKit_OperationStage_TextureLookup
	//	*CMsgPaintKit_OperationStage_CombineAdd
	//	*CMsgPaintKit_OperationStage_CombineLerp
	//	*CMsgPaintKit_OperationStage_CombineMultiply
	//	*CMsgPaintKit_OperationStage_Select
	//	*CMsgPaintKit_OperationStage_ApplySticker
	Stage                isCMsgPaintKit_OperationStage_Stage `protobuf_oneof:"stage"`
	XXX_NoUnkeyedLiteral struct{}                            `json:"-"`
	XXX_unrecognized     []byte                              `json:"-"`
	XXX_sizecache        int32                               `json:"-"`
}

func (m *CMsgPaintKit_OperationStage) Reset()         { *m = CMsgPaintKit_OperationStage{} }
func (m *CMsgPaintKit_OperationStage) String() string { return proto.CompactTextString(m) }
func (*CMsgPaintKit_OperationStage) ProtoMessage()    {}
func (*CMsgPaintKit_OperationStage) Descriptor() ([]byte, []int) {
	return fileDescriptor_tf_proto_def_messages_a921922ea643aecb, []int{19}
}
func (m *CMsgPaintKit_OperationStage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgPaintKit_OperationStage.Unmarshal(m, b)
}
func (m *CMsgPaintKit_OperationStage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgPaintKit_OperationStage.Marshal(b, m, deterministic)
}
func (dst *CMsgPaintKit_OperationStage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgPaintKit_OperationStage.Merge(dst, src)
}
func (m *CMsgPaintKit_OperationStage) XXX_Size() int {
	return xxx_messageInfo_CMsgPaintKit_OperationStage.Size(m)
}
func (m *CMsgPaintKit_OperationStage) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgPaintKit_OperationStage.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgPaintKit_OperationStage proto.InternalMessageInfo

type isCMsgPaintKit_OperationStage_Stage interface {
	isCMsgPaintKit_OperationStage_Stage()
}

type CMsgPaintKit_OperationStage_TextureLookup struct {
	TextureLookup *CMsgPaintKit_Operation_TextureStage `protobuf:"bytes,1,opt,name=texture_lookup,json=textureLookup,oneof"`
}
type CMsgPaintKit_OperationStage_CombineAdd struct {
	CombineAdd *CMsgPaintKit_Operation_CombineStage `protobuf:"bytes,2,opt,name=combine_add,json=combineAdd,oneof"`
}
type CMsgPaintKit_OperationStage_CombineLerp struct {
	CombineLerp *CMsgPaintKit_Operation_CombineStage `protobuf:"bytes,3,opt,name=combine_lerp,json=combineLerp,oneof"`
}
type CMsgPaintKit_OperationStage_CombineMultiply struct {
	CombineMultiply *CMsgPaintKit_Operation_CombineStage `protobuf:"bytes,4,opt,name=combine_multiply,json=combineMultiply,oneof"`
}
type CMsgPaintKit_OperationStage_Select struct {
	Select *CMsgPaintKit_Operation_SelectStage `protobuf:"bytes,5,opt,name=select,oneof"`
}
type CMsgPaintKit_OperationStage_ApplySticker struct {
	ApplySticker *CMsgPaintKit_Operation_StickerStage `protobuf:"bytes,6,opt,name=apply_sticker,json=applySticker,oneof"`
}

func (*CMsgPaintKit_OperationStage_TextureLookup) isCMsgPaintKit_OperationStage_Stage()   {}
func (*CMsgPaintKit_OperationStage_CombineAdd) isCMsgPaintKit_OperationStage_Stage()      {}
func (*CMsgPaintKit_OperationStage_CombineLerp) isCMsgPaintKit_OperationStage_Stage()     {}
func (*CMsgPaintKit_OperationStage_CombineMultiply) isCMsgPaintKit_OperationStage_Stage() {}
func (*CMsgPaintKit_OperationStage_Select) isCMsgPaintKit_OperationStage_Stage()          {}
func (*CMsgPaintKit_OperationStage_ApplySticker) isCMsgPaintKit_OperationStage_Stage()    {}

func (m *CMsgPaintKit_OperationStage) GetStage() isCMsgPaintKit_OperationStage_Stage {
	if m != nil {
		return m.Stage
	}
	return nil
}

func (m *CMsgPaintKit_OperationStage) GetTextureLookup() *CMsgPaintKit_Operation_TextureStage {
	if x, ok := m.GetStage().(*CMsgPaintKit_OperationStage_TextureLookup); ok {
		return x.TextureLookup
	}
	return nil
}

func (m *CMsgPaintKit_OperationStage) GetCombineAdd() *CMsgPaintKit_Operation_CombineStage {
	if x, ok := m.GetStage().(*CMsgPaintKit_OperationStage_CombineAdd); ok {
		return x.CombineAdd
	}
	return nil
}

func (m *CMsgPaintKit_OperationStage) GetCombineLerp() *CMsgPaintKit_Operation_CombineStage {
	if x, ok := m.GetStage().(*CMsgPaintKit_OperationStage_CombineLerp); ok {
		return x.CombineLerp
	}
	return nil
}

func (m *CMsgPaintKit_OperationStage) GetCombineMultiply() *CMsgPaintKit_Operation_CombineStage {
	if x, ok := m.GetStage().(*CMsgPaintKit_OperationStage_CombineMultiply); ok {
		return x.CombineMultiply
	}
	return nil
}

func (m *CMsgPaintKit_OperationStage) GetSelect() *CMsgPaintKit_Operation_SelectStage {
	if x, ok := m.GetStage().(*CMsgPaintKit_OperationStage_Select); ok {
		return x.Select
	}
	return nil
}

func (m *CMsgPaintKit_OperationStage) GetApplySticker() *CMsgPaintKit_Operation_StickerStage {
	if x, ok := m.GetStage().(*CMsgPaintKit_OperationStage_ApplySticker); ok {
		return x.ApplySticker
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*CMsgPaintKit_OperationStage) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _CMsgPaintKit_OperationStage_OneofMarshaler, _CMsgPaintKit_OperationStage_OneofUnmarshaler, _CMsgPaintKit_OperationStage_OneofSizer, []interface{}{
		(*CMsgPaintKit_OperationStage_TextureLookup)(nil),
		(*CMsgPaintKit_OperationStage_CombineAdd)(nil),
		(*CMsgPaintKit_OperationStage_CombineLerp)(nil),
		(*CMsgPaintKit_OperationStage_CombineMultiply)(nil),
		(*CMsgPaintKit_OperationStage_Select)(nil),
		(*CMsgPaintKit_OperationStage_ApplySticker)(nil),
	}
}

func _CMsgPaintKit_OperationStage_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*CMsgPaintKit_OperationStage)
	// stage
	switch x := m.Stage.(type) {
	case *CMsgPaintKit_OperationStage_TextureLookup:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.TextureLookup); err != nil {
			return err
		}
	case *CMsgPaintKit_OperationStage_CombineAdd:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CombineAdd); err != nil {
			return err
		}
	case *CMsgPaintKit_OperationStage_CombineLerp:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CombineLerp); err != nil {
			return err
		}
	case *CMsgPaintKit_OperationStage_CombineMultiply:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CombineMultiply); err != nil {
			return err
		}
	case *CMsgPaintKit_OperationStage_Select:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Select); err != nil {
			return err
		}
	case *CMsgPaintKit_OperationStage_ApplySticker:
		b.EncodeVarint(6<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ApplySticker); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("CMsgPaintKit_OperationStage.Stage has unexpected type %T", x)
	}
	return nil
}

func _CMsgPaintKit_OperationStage_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*CMsgPaintKit_OperationStage)
	switch tag {
	case 1: // stage.texture_lookup
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CMsgPaintKit_Operation_TextureStage)
		err := b.DecodeMessage(msg)
		m.Stage = &CMsgPaintKit_OperationStage_TextureLookup{msg}
		return true, err
	case 2: // stage.combine_add
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CMsgPaintKit_Operation_CombineStage)
		err := b.DecodeMessage(msg)
		m.Stage = &CMsgPaintKit_OperationStage_CombineAdd{msg}
		return true, err
	case 3: // stage.combine_lerp
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CMsgPaintKit_Operation_CombineStage)
		err := b.DecodeMessage(msg)
		m.Stage = &CMsgPaintKit_OperationStage_CombineLerp{msg}
		return true, err
	case 4: // stage.combine_multiply
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CMsgPaintKit_Operation_CombineStage)
		err := b.DecodeMessage(msg)
		m.Stage = &CMsgPaintKit_OperationStage_CombineMultiply{msg}
		return true, err
	case 5: // stage.select
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CMsgPaintKit_Operation_SelectStage)
		err := b.DecodeMessage(msg)
		m.Stage = &CMsgPaintKit_OperationStage_Select{msg}
		return true, err
	case 6: // stage.apply_sticker
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CMsgPaintKit_Operation_StickerStage)
		err := b.DecodeMessage(msg)
		m.Stage = &CMsgPaintKit_OperationStage_ApplySticker{msg}
		return true, err
	default:
		return false, nil
	}
}

func _CMsgPaintKit_OperationStage_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*CMsgPaintKit_OperationStage)
	// stage
	switch x := m.Stage.(type) {
	case *CMsgPaintKit_OperationStage_TextureLookup:
		s := proto.Size(x.TextureLookup)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *CMsgPaintKit_OperationStage_CombineAdd:
		s := proto.Size(x.CombineAdd)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *CMsgPaintKit_OperationStage_CombineLerp:
		s := proto.Size(x.CombineLerp)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *CMsgPaintKit_OperationStage_CombineMultiply:
		s := proto.Size(x.CombineMultiply)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *CMsgPaintKit_OperationStage_Select:
		s := proto.Size(x.Select)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *CMsgPaintKit_OperationStage_ApplySticker:
		s := proto.Size(x.ApplySticker)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type CMsgPaintKit_OperationNode struct {
	// Types that are valid to be assigned to Node:
	//	*CMsgPaintKit_OperationNode_Stage
	//	*CMsgPaintKit_OperationNode_OperationTemplate
	Node                 isCMsgPaintKit_OperationNode_Node `protobuf_oneof:"node"`
	XXX_NoUnkeyedLiteral struct{}                          `json:"-"`
	XXX_unrecognized     []byte                            `json:"-"`
	XXX_sizecache        int32                             `json:"-"`
}

func (m *CMsgPaintKit_OperationNode) Reset()         { *m = CMsgPaintKit_OperationNode{} }
func (m *CMsgPaintKit_OperationNode) String() string { return proto.CompactTextString(m) }
func (*CMsgPaintKit_OperationNode) ProtoMessage()    {}
func (*CMsgPaintKit_OperationNode) Descriptor() ([]byte, []int) {
	return fileDescriptor_tf_proto_def_messages_a921922ea643aecb, []int{20}
}
func (m *CMsgPaintKit_OperationNode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgPaintKit_OperationNode.Unmarshal(m, b)
}
func (m *CMsgPaintKit_OperationNode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgPaintKit_OperationNode.Marshal(b, m, deterministic)
}
func (dst *CMsgPaintKit_OperationNode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgPaintKit_OperationNode.Merge(dst, src)
}
func (m *CMsgPaintKit_OperationNode) XXX_Size() int {
	return xxx_messageInfo_CMsgPaintKit_OperationNode.Size(m)
}
func (m *CMsgPaintKit_OperationNode) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgPaintKit_OperationNode.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgPaintKit_OperationNode proto.InternalMessageInfo

type isCMsgPaintKit_OperationNode_Node interface {
	isCMsgPaintKit_OperationNode_Node()
}

type CMsgPaintKit_OperationNode_Stage struct {
	Stage *CMsgPaintKit_OperationStage `protobuf:"bytes,1,opt,name=stage,oneof"`
}
type CMsgPaintKit_OperationNode_OperationTemplate struct {
	OperationTemplate *CMsgProtoDefID `protobuf:"bytes,2,opt,name=operation_template,json=operationTemplate,oneof"`
}

func (*CMsgPaintKit_OperationNode_Stage) isCMsgPaintKit_OperationNode_Node()             {}
func (*CMsgPaintKit_OperationNode_OperationTemplate) isCMsgPaintKit_OperationNode_Node() {}

func (m *CMsgPaintKit_OperationNode) GetNode() isCMsgPaintKit_OperationNode_Node {
	if m != nil {
		return m.Node
	}
	return nil
}

func (m *CMsgPaintKit_OperationNode) GetStage() *CMsgPaintKit_OperationStage {
	if x, ok := m.GetNode().(*CMsgPaintKit_OperationNode_Stage); ok {
		return x.Stage
	}
	return nil
}

func (m *CMsgPaintKit_OperationNode) GetOperationTemplate() *CMsgProtoDefID {
	if x, ok := m.GetNode().(*CMsgPaintKit_OperationNode_OperationTemplate); ok {
		return x.OperationTemplate
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*CMsgPaintKit_OperationNode) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _CMsgPaintKit_OperationNode_OneofMarshaler, _CMsgPaintKit_OperationNode_OneofUnmarshaler, _CMsgPaintKit_OperationNode_OneofSizer, []interface{}{
		(*CMsgPaintKit_OperationNode_Stage)(nil),
		(*CMsgPaintKit_OperationNode_OperationTemplate)(nil),
	}
}

func _CMsgPaintKit_OperationNode_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*CMsgPaintKit_OperationNode)
	// node
	switch x := m.Node.(type) {
	case *CMsgPaintKit_OperationNode_Stage:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Stage); err != nil {
			return err
		}
	case *CMsgPaintKit_OperationNode_OperationTemplate:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.OperationTemplate); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("CMsgPaintKit_OperationNode.Node has unexpected type %T", x)
	}
	return nil
}

func _CMsgPaintKit_OperationNode_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*CMsgPaintKit_OperationNode)
	switch tag {
	case 1: // node.stage
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CMsgPaintKit_OperationStage)
		err := b.DecodeMessage(msg)
		m.Node = &CMsgPaintKit_OperationNode_Stage{msg}
		return true, err
	case 2: // node.operation_template
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CMsgProtoDefID)
		err := b.DecodeMessage(msg)
		m.Node = &CMsgPaintKit_OperationNode_OperationTemplate{msg}
		return true, err
	default:
		return false, nil
	}
}

func _CMsgPaintKit_OperationNode_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*CMsgPaintKit_OperationNode)
	// node
	switch x := m.Node.(type) {
	case *CMsgPaintKit_OperationNode_Stage:
		s := proto.Size(x.Stage)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *CMsgPaintKit_OperationNode_OperationTemplate:
		s := proto.Size(x.OperationTemplate)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type CMsgPaintKit_Operation struct {
	Header               *CMsgProtoDefHeader           `protobuf:"bytes,1,req,name=header" json:"header,omitempty"`
	OperationNode        []*CMsgPaintKit_OperationNode `protobuf:"bytes,2,rep,name=operation_node,json=operationNode" json:"operation_node,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *CMsgPaintKit_Operation) Reset()         { *m = CMsgPaintKit_Operation{} }
func (m *CMsgPaintKit_Operation) String() string { return proto.CompactTextString(m) }
func (*CMsgPaintKit_Operation) ProtoMessage()    {}
func (*CMsgPaintKit_Operation) Descriptor() ([]byte, []int) {
	return fileDescriptor_tf_proto_def_messages_a921922ea643aecb, []int{21}
}
func (m *CMsgPaintKit_Operation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgPaintKit_Operation.Unmarshal(m, b)
}
func (m *CMsgPaintKit_Operation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgPaintKit_Operation.Marshal(b, m, deterministic)
}
func (dst *CMsgPaintKit_Operation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgPaintKit_Operation.Merge(dst, src)
}
func (m *CMsgPaintKit_Operation) XXX_Size() int {
	return xxx_messageInfo_CMsgPaintKit_Operation.Size(m)
}
func (m *CMsgPaintKit_Operation) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgPaintKit_Operation.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgPaintKit_Operation proto.InternalMessageInfo

func (m *CMsgPaintKit_Operation) GetHeader() *CMsgProtoDefHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *CMsgPaintKit_Operation) GetOperationNode() []*CMsgPaintKit_OperationNode {
	if m != nil {
		return m.OperationNode
	}
	return nil
}

type CMsgPaintKit_ItemDefinition struct {
	Header               *CMsgProtoDefHeader                       `protobuf:"bytes,1,req,name=header" json:"header,omitempty"`
	ItemDefinitionIndex  *uint32                                   `protobuf:"varint,2,req,name=item_definition_index,json=itemDefinitionIndex" json:"item_definition_index,omitempty"`
	VariableTemplate     *CMsgProtoDefID                           `protobuf:"bytes,3,opt,name=variable_template,json=variableTemplate" json:"variable_template,omitempty"`
	Definition           []*CMsgPaintKit_ItemDefinition_Definition `protobuf:"bytes,4,rep,name=definition" json:"definition,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                  `json:"-"`
	XXX_unrecognized     []byte                                    `json:"-"`
	XXX_sizecache        int32                                     `json:"-"`
}

func (m *CMsgPaintKit_ItemDefinition) Reset()         { *m = CMsgPaintKit_ItemDefinition{} }
func (m *CMsgPaintKit_ItemDefinition) String() string { return proto.CompactTextString(m) }
func (*CMsgPaintKit_ItemDefinition) ProtoMessage()    {}
func (*CMsgPaintKit_ItemDefinition) Descriptor() ([]byte, []int) {
	return fileDescriptor_tf_proto_def_messages_a921922ea643aecb, []int{22}
}
func (m *CMsgPaintKit_ItemDefinition) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgPaintKit_ItemDefinition.Unmarshal(m, b)
}
func (m *CMsgPaintKit_ItemDefinition) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgPaintKit_ItemDefinition.Marshal(b, m, deterministic)
}
func (dst *CMsgPaintKit_ItemDefinition) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgPaintKit_ItemDefinition.Merge(dst, src)
}
func (m *CMsgPaintKit_ItemDefinition) XXX_Size() int {
	return xxx_messageInfo_CMsgPaintKit_ItemDefinition.Size(m)
}
func (m *CMsgPaintKit_ItemDefinition) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgPaintKit_ItemDefinition.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgPaintKit_ItemDefinition proto.InternalMessageInfo

func (m *CMsgPaintKit_ItemDefinition) GetHeader() *CMsgProtoDefHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *CMsgPaintKit_ItemDefinition) GetItemDefinitionIndex() uint32 {
	if m != nil && m.ItemDefinitionIndex != nil {
		return *m.ItemDefinitionIndex
	}
	return 0
}

func (m *CMsgPaintKit_ItemDefinition) GetVariableTemplate() *CMsgProtoDefID {
	if m != nil {
		return m.VariableTemplate
	}
	return nil
}

func (m *CMsgPaintKit_ItemDefinition) GetDefinition() []*CMsgPaintKit_ItemDefinition_Definition {
	if m != nil {
		return m.Definition
	}
	return nil
}

type CMsgPaintKit_ItemDefinition_Definition struct {
	OperationTemplate    *CMsgProtoDefID `protobuf:"bytes,1,opt,name=operation_template,json=operationTemplate" json:"operation_template,omitempty"`
	Variable             []*CMsgVarField `protobuf:"bytes,2,rep,name=variable" json:"variable,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *CMsgPaintKit_ItemDefinition_Definition) Reset() {
	*m = CMsgPaintKit_ItemDefinition_Definition{}
}
func (m *CMsgPaintKit_ItemDefinition_Definition) String() string { return proto.CompactTextString(m) }
func (*CMsgPaintKit_ItemDefinition_Definition) ProtoMessage()    {}
func (*CMsgPaintKit_ItemDefinition_Definition) Descriptor() ([]byte, []int) {
	return fileDescriptor_tf_proto_def_messages_a921922ea643aecb, []int{22, 0}
}
func (m *CMsgPaintKit_ItemDefinition_Definition) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgPaintKit_ItemDefinition_Definition.Unmarshal(m, b)
}
func (m *CMsgPaintKit_ItemDefinition_Definition) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgPaintKit_ItemDefinition_Definition.Marshal(b, m, deterministic)
}
func (dst *CMsgPaintKit_ItemDefinition_Definition) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgPaintKit_ItemDefinition_Definition.Merge(dst, src)
}
func (m *CMsgPaintKit_ItemDefinition_Definition) XXX_Size() int {
	return xxx_messageInfo_CMsgPaintKit_ItemDefinition_Definition.Size(m)
}
func (m *CMsgPaintKit_ItemDefinition_Definition) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgPaintKit_ItemDefinition_Definition.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgPaintKit_ItemDefinition_Definition proto.InternalMessageInfo

func (m *CMsgPaintKit_ItemDefinition_Definition) GetOperationTemplate() *CMsgProtoDefID {
	if m != nil {
		return m.OperationTemplate
	}
	return nil
}

func (m *CMsgPaintKit_ItemDefinition_Definition) GetVariable() []*CMsgVarField {
	if m != nil {
		return m.Variable
	}
	return nil
}

type CMsgPaintKit_Definition struct {
	Header               *CMsgProtoDefHeader             `protobuf:"bytes,1,req,name=header" json:"header,omitempty"`
	LocDesctoken         *string                         `protobuf:"bytes,2,opt,name=loc_desctoken,json=locDesctoken" json:"loc_desctoken,omitempty"`
	OperationTemplate    *CMsgProtoDefID                 `protobuf:"bytes,3,opt,name=operation_template,json=operationTemplate" json:"operation_template,omitempty"`
	HasTeamTextures      *bool                           `protobuf:"varint,4,opt,name=has_team_textures,json=hasTeamTextures" json:"has_team_textures,omitempty"`
	Item                 []*CMsgPaintKit_Definition_Item `protobuf:"bytes,5,rep,name=item" json:"item,omitempty"`
	PaintkitTool         *CMsgPaintKit_Definition_Item   `protobuf:"bytes,6,opt,name=paintkit_tool,json=paintkitTool" json:"paintkit_tool,omitempty"`
	Flamethrower         *CMsgPaintKit_Definition_Item   `protobuf:"bytes,7,opt,name=flamethrower" json:"flamethrower,omitempty"`
	Grenadelauncher      *CMsgPaintKit_Definition_Item   `protobuf:"bytes,8,opt,name=grenadelauncher" json:"grenadelauncher,omitempty"`
	Knife                *CMsgPaintKit_Definition_Item   `protobuf:"bytes,9,opt,name=knife" json:"knife,omitempty"`
	Medigun              *CMsgPaintKit_Definition_Item   `protobuf:"bytes,10,opt,name=medigun" json:"medigun,omitempty"`
	Minigun              *CMsgPaintKit_Definition_Item   `protobuf:"bytes,11,opt,name=minigun" json:"minigun,omitempty"`
	Pistol               *CMsgPaintKit_Definition_Item   `protobuf:"bytes,12,opt,name=pistol" json:"pistol,omitempty"`
	Revolver             *CMsgPaintKit_Definition_Item   `protobuf:"bytes,13,opt,name=revolver" json:"revolver,omitempty"`
	Rocketlauncher       *CMsgPaintKit_Definition_Item   `protobuf:"bytes,14,opt,name=rocketlauncher" json:"rocketlauncher,omitempty"`
	Scattergun           *CMsgPaintKit_Definition_Item   `protobuf:"bytes,15,opt,name=scattergun" json:"scattergun,omitempty"`
	Shotgun              *CMsgPaintKit_Definition_Item   `protobuf:"bytes,16,opt,name=shotgun" json:"shotgun,omitempty"`
	Smg                  *CMsgPaintKit_Definition_Item   `protobuf:"bytes,17,opt,name=smg" json:"smg,omitempty"`
	Sniperrifle          *CMsgPaintKit_Definition_Item   `protobuf:"bytes,18,opt,name=sniperrifle" json:"sniperrifle,omitempty"`
	StickybombLauncher   *CMsgPaintKit_Definition_Item   `protobuf:"bytes,19,opt,name=stickybomb_launcher,json=stickybombLauncher" json:"stickybomb_launcher,omitempty"`
	Ubersaw              *CMsgPaintKit_Definition_Item   `protobuf:"bytes,20,opt,name=ubersaw" json:"ubersaw,omitempty"`
	Wrench               *CMsgPaintKit_Definition_Item   `protobuf:"bytes,21,opt,name=wrench" json:"wrench,omitempty"`
	Amputator            *CMsgPaintKit_Definition_Item   `protobuf:"bytes,22,opt,name=amputator" json:"amputator,omitempty"`
	AtomLauncher         *CMsgPaintKit_Definition_Item   `protobuf:"bytes,23,opt,name=atom_launcher,json=atomLauncher" json:"atom_launcher,omitempty"`
	BackScratcher        *CMsgPaintKit_Definition_Item   `protobuf:"bytes,24,opt,name=back_scratcher,json=backScratcher" json:"back_scratcher,omitempty"`
	Battleaxe            *CMsgPaintKit_Definition_Item   `protobuf:"bytes,25,opt,name=battleaxe" json:"battleaxe,omitempty"`
	BazaarSniper         *CMsgPaintKit_Definition_Item   `protobuf:"bytes,26,opt,name=bazaar_sniper,json=bazaarSniper" json:"bazaar_sniper,omitempty"`
	Blackbox             *CMsgPaintKit_Definition_Item   `protobuf:"bytes,27,opt,name=blackbox" json:"blackbox,omitempty"`
	Claidheamohmor       *CMsgPaintKit_Definition_Item   `protobuf:"bytes,28,opt,name=claidheamohmor" json:"claidheamohmor,omitempty"`
	CrusadersCrossbow    *CMsgPaintKit_Definition_Item   `protobuf:"bytes,29,opt,name=crusaders_crossbow,json=crusadersCrossbow" json:"crusaders_crossbow,omitempty"`
	Degreaser            *CMsgPaintKit_Definition_Item   `protobuf:"bytes,30,opt,name=degreaser" json:"degreaser,omitempty"`
	DemoCannon           *CMsgPaintKit_Definition_Item   `protobuf:"bytes,31,opt,name=demo_cannon,json=demoCannon" json:"demo_cannon,omitempty"`
	DemoSultanSword      *CMsgPaintKit_Definition_Item   `protobuf:"bytes,32,opt,name=demo_sultan_sword,json=demoSultanSword" json:"demo_sultan_sword,omitempty"`
	Detonator            *CMsgPaintKit_Definition_Item   `protobuf:"bytes,33,opt,name=detonator" json:"detonator,omitempty"`
	GatlingGun           *CMsgPaintKit_Definition_Item   `protobuf:"bytes,34,opt,name=gatling_gun,json=gatlingGun" json:"gatling_gun,omitempty"`
	Holymackerel         *CMsgPaintKit_Definition_Item   `protobuf:"bytes,35,opt,name=holymackerel" json:"holymackerel,omitempty"`
	Jag                  *CMsgPaintKit_Definition_Item   `protobuf:"bytes,36,opt,name=jag" json:"jag,omitempty"`
	Lochnload            *CMsgPaintKit_Definition_Item   `protobuf:"bytes,37,opt,name=lochnload" json:"lochnload,omitempty"`
	Powerjack            *CMsgPaintKit_Definition_Item   `protobuf:"bytes,38,opt,name=powerjack" json:"powerjack,omitempty"`
	Quadball             *CMsgPaintKit_Definition_Item   `protobuf:"bytes,39,opt,name=quadball" json:"quadball,omitempty"`
	ReserveShooter       *CMsgPaintKit_Definition_Item   `protobuf:"bytes,40,opt,name=reserve_shooter,json=reserveShooter" json:"reserve_shooter,omitempty"`
	RidingCrop           *CMsgPaintKit_Definition_Item   `protobuf:"bytes,41,opt,name=riding_crop,json=ridingCrop" json:"riding_crop,omitempty"`
	RussianRiot          *CMsgPaintKit_Definition_Item   `protobuf:"bytes,42,opt,name=russian_riot,json=russianRiot" json:"russian_riot,omitempty"`
	Scimitar             *CMsgPaintKit_Definition_Item   `protobuf:"bytes,43,opt,name=scimitar" json:"scimitar,omitempty"`
	ScorchShot           *CMsgPaintKit_Definition_Item   `protobuf:"bytes,44,opt,name=scorch_shot,json=scorchShot" json:"scorch_shot,omitempty"`
	Shortstop            *CMsgPaintKit_Definition_Item   `protobuf:"bytes,45,opt,name=shortstop" json:"shortstop,omitempty"`
	SodaPopper           *CMsgPaintKit_Definition_Item   `protobuf:"bytes,46,opt,name=soda_popper,json=sodaPopper" json:"soda_popper,omitempty"`
	TeleShotgun          *CMsgPaintKit_Definition_Item   `protobuf:"bytes,47,opt,name=tele_shotgun,json=teleShotgun" json:"tele_shotgun,omitempty"`
	Tomislav             *CMsgPaintKit_Definition_Item   `protobuf:"bytes,48,opt,name=tomislav" json:"tomislav,omitempty"`
	Trenchgun            *CMsgPaintKit_Definition_Item   `protobuf:"bytes,49,opt,name=trenchgun" json:"trenchgun,omitempty"`
	WingerPistol         *CMsgPaintKit_Definition_Item   `protobuf:"bytes,50,opt,name=winger_pistol,json=wingerPistol" json:"winger_pistol,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *CMsgPaintKit_Definition) Reset()         { *m = CMsgPaintKit_Definition{} }
func (m *CMsgPaintKit_Definition) String() string { return proto.CompactTextString(m) }
func (*CMsgPaintKit_Definition) ProtoMessage()    {}
func (*CMsgPaintKit_Definition) Descriptor() ([]byte, []int) {
	return fileDescriptor_tf_proto_def_messages_a921922ea643aecb, []int{23}
}
func (m *CMsgPaintKit_Definition) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgPaintKit_Definition.Unmarshal(m, b)
}
func (m *CMsgPaintKit_Definition) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgPaintKit_Definition.Marshal(b, m, deterministic)
}
func (dst *CMsgPaintKit_Definition) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgPaintKit_Definition.Merge(dst, src)
}
func (m *CMsgPaintKit_Definition) XXX_Size() int {
	return xxx_messageInfo_CMsgPaintKit_Definition.Size(m)
}
func (m *CMsgPaintKit_Definition) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgPaintKit_Definition.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgPaintKit_Definition proto.InternalMessageInfo

func (m *CMsgPaintKit_Definition) GetHeader() *CMsgProtoDefHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *CMsgPaintKit_Definition) GetLocDesctoken() string {
	if m != nil && m.LocDesctoken != nil {
		return *m.LocDesctoken
	}
	return ""
}

func (m *CMsgPaintKit_Definition) GetOperationTemplate() *CMsgProtoDefID {
	if m != nil {
		return m.OperationTemplate
	}
	return nil
}

func (m *CMsgPaintKit_Definition) GetHasTeamTextures() bool {
	if m != nil && m.HasTeamTextures != nil {
		return *m.HasTeamTextures
	}
	return false
}

func (m *CMsgPaintKit_Definition) GetItem() []*CMsgPaintKit_Definition_Item {
	if m != nil {
		return m.Item
	}
	return nil
}

func (m *CMsgPaintKit_Definition) GetPaintkitTool() *CMsgPaintKit_Definition_Item {
	if m != nil {
		return m.PaintkitTool
	}
	return nil
}

func (m *CMsgPaintKit_Definition) GetFlamethrower() *CMsgPaintKit_Definition_Item {
	if m != nil {
		return m.Flamethrower
	}
	return nil
}

func (m *CMsgPaintKit_Definition) GetGrenadelauncher() *CMsgPaintKit_Definition_Item {
	if m != nil {
		return m.Grenadelauncher
	}
	return nil
}

func (m *CMsgPaintKit_Definition) GetKnife() *CMsgPaintKit_Definition_Item {
	if m != nil {
		return m.Knife
	}
	return nil
}

func (m *CMsgPaintKit_Definition) GetMedigun() *CMsgPaintKit_Definition_Item {
	if m != nil {
		return m.Medigun
	}
	return nil
}

func (m *CMsgPaintKit_Definition) GetMinigun() *CMsgPaintKit_Definition_Item {
	if m != nil {
		return m.Minigun
	}
	return nil
}

func (m *CMsgPaintKit_Definition) GetPistol() *CMsgPaintKit_Definition_Item {
	if m != nil {
		return m.Pistol
	}
	return nil
}

func (m *CMsgPaintKit_Definition) GetRevolver() *CMsgPaintKit_Definition_Item {
	if m != nil {
		return m.Revolver
	}
	return nil
}

func (m *CMsgPaintKit_Definition) GetRocketlauncher() *CMsgPaintKit_Definition_Item {
	if m != nil {
		return m.Rocketlauncher
	}
	return nil
}

func (m *CMsgPaintKit_Definition) GetScattergun() *CMsgPaintKit_Definition_Item {
	if m != nil {
		return m.Scattergun
	}
	return nil
}

func (m *CMsgPaintKit_Definition) GetShotgun() *CMsgPaintKit_Definition_Item {
	if m != nil {
		return m.Shotgun
	}
	return nil
}

func (m *CMsgPaintKit_Definition) GetSmg() *CMsgPaintKit_Definition_Item {
	if m != nil {
		return m.Smg
	}
	return nil
}

func (m *CMsgPaintKit_Definition) GetSniperrifle() *CMsgPaintKit_Definition_Item {
	if m != nil {
		return m.Sniperrifle
	}
	return nil
}

func (m *CMsgPaintKit_Definition) GetStickybombLauncher() *CMsgPaintKit_Definition_Item {
	if m != nil {
		return m.StickybombLauncher
	}
	return nil
}

func (m *CMsgPaintKit_Definition) GetUbersaw() *CMsgPaintKit_Definition_Item {
	if m != nil {
		return m.Ubersaw
	}
	return nil
}

func (m *CMsgPaintKit_Definition) GetWrench() *CMsgPaintKit_Definition_Item {
	if m != nil {
		return m.Wrench
	}
	return nil
}

func (m *CMsgPaintKit_Definition) GetAmputator() *CMsgPaintKit_Definition_Item {
	if m != nil {
		return m.Amputator
	}
	return nil
}

func (m *CMsgPaintKit_Definition) GetAtomLauncher() *CMsgPaintKit_Definition_Item {
	if m != nil {
		return m.AtomLauncher
	}
	return nil
}

func (m *CMsgPaintKit_Definition) GetBackScratcher() *CMsgPaintKit_Definition_Item {
	if m != nil {
		return m.BackScratcher
	}
	return nil
}

func (m *CMsgPaintKit_Definition) GetBattleaxe() *CMsgPaintKit_Definition_Item {
	if m != nil {
		return m.Battleaxe
	}
	return nil
}

func (m *CMsgPaintKit_Definition) GetBazaarSniper() *CMsgPaintKit_Definition_Item {
	if m != nil {
		return m.BazaarSniper
	}
	return nil
}

func (m *CMsgPaintKit_Definition) GetBlackbox() *CMsgPaintKit_Definition_Item {
	if m != nil {
		return m.Blackbox
	}
	return nil
}

func (m *CMsgPaintKit_Definition) GetClaidheamohmor() *CMsgPaintKit_Definition_Item {
	if m != nil {
		return m.Claidheamohmor
	}
	return nil
}

func (m *CMsgPaintKit_Definition) GetCrusadersCrossbow() *CMsgPaintKit_Definition_Item {
	if m != nil {
		return m.CrusadersCrossbow
	}
	return nil
}

func (m *CMsgPaintKit_Definition) GetDegreaser() *CMsgPaintKit_Definition_Item {
	if m != nil {
		return m.Degreaser
	}
	return nil
}

func (m *CMsgPaintKit_Definition) GetDemoCannon() *CMsgPaintKit_Definition_Item {
	if m != nil {
		return m.DemoCannon
	}
	return nil
}

func (m *CMsgPaintKit_Definition) GetDemoSultanSword() *CMsgPaintKit_Definition_Item {
	if m != nil {
		return m.DemoSultanSword
	}
	return nil
}

func (m *CMsgPaintKit_Definition) GetDetonator() *CMsgPaintKit_Definition_Item {
	if m != nil {
		return m.Detonator
	}
	return nil
}

func (m *CMsgPaintKit_Definition) GetGatlingGun() *CMsgPaintKit_Definition_Item {
	if m != nil {
		return m.GatlingGun
	}
	return nil
}

func (m *CMsgPaintKit_Definition) GetHolymackerel() *CMsgPaintKit_Definition_Item {
	if m != nil {
		return m.Holymackerel
	}
	return nil
}

func (m *CMsgPaintKit_Definition) GetJag() *CMsgPaintKit_Definition_Item {
	if m != nil {
		return m.Jag
	}
	return nil
}

func (m *CMsgPaintKit_Definition) GetLochnload() *CMsgPaintKit_Definition_Item {
	if m != nil {
		return m.Lochnload
	}
	return nil
}

func (m *CMsgPaintKit_Definition) GetPowerjack() *CMsgPaintKit_Definition_Item {
	if m != nil {
		return m.Powerjack
	}
	return nil
}

func (m *CMsgPaintKit_Definition) GetQuadball() *CMsgPaintKit_Definition_Item {
	if m != nil {
		return m.Quadball
	}
	return nil
}

func (m *CMsgPaintKit_Definition) GetReserveShooter() *CMsgPaintKit_Definition_Item {
	if m != nil {
		return m.ReserveShooter
	}
	return nil
}

func (m *CMsgPaintKit_Definition) GetRidingCrop() *CMsgPaintKit_Definition_Item {
	if m != nil {
		return m.RidingCrop
	}
	return nil
}

func (m *CMsgPaintKit_Definition) GetRussianRiot() *CMsgPaintKit_Definition_Item {
	if m != nil {
		return m.RussianRiot
	}
	return nil
}

func (m *CMsgPaintKit_Definition) GetScimitar() *CMsgPaintKit_Definition_Item {
	if m != nil {
		return m.Scimitar
	}
	return nil
}

func (m *CMsgPaintKit_Definition) GetScorchShot() *CMsgPaintKit_Definition_Item {
	if m != nil {
		return m.ScorchShot
	}
	return nil
}

func (m *CMsgPaintKit_Definition) GetShortstop() *CMsgPaintKit_Definition_Item {
	if m != nil {
		return m.Shortstop
	}
	return nil
}

func (m *CMsgPaintKit_Definition) GetSodaPopper() *CMsgPaintKit_Definition_Item {
	if m != nil {
		return m.SodaPopper
	}
	return nil
}

func (m *CMsgPaintKit_Definition) GetTeleShotgun() *CMsgPaintKit_Definition_Item {
	if m != nil {
		return m.TeleShotgun
	}
	return nil
}

func (m *CMsgPaintKit_Definition) GetTomislav() *CMsgPaintKit_Definition_Item {
	if m != nil {
		return m.Tomislav
	}
	return nil
}

func (m *CMsgPaintKit_Definition) GetTrenchgun() *CMsgPaintKit_Definition_Item {
	if m != nil {
		return m.Trenchgun
	}
	return nil
}

func (m *CMsgPaintKit_Definition) GetWingerPistol() *CMsgPaintKit_Definition_Item {
	if m != nil {
		return m.WingerPistol
	}
	return nil
}

type CMsgPaintKit_Definition_Item struct {
	ItemDefinitionTemplate *CMsgProtoDefID                        `protobuf:"bytes,1,req,name=item_definition_template,json=itemDefinitionTemplate" json:"item_definition_template,omitempty"`
	Data                   *CMsgPaintKit_Definition_Item_ItemData `protobuf:"bytes,5,opt,name=data" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}                               `json:"-"`
	XXX_unrecognized       []byte                                 `json:"-"`
	XXX_sizecache          int32                                  `json:"-"`
}

func (m *CMsgPaintKit_Definition_Item) Reset()         { *m = CMsgPaintKit_Definition_Item{} }
func (m *CMsgPaintKit_Definition_Item) String() string { return proto.CompactTextString(m) }
func (*CMsgPaintKit_Definition_Item) ProtoMessage()    {}
func (*CMsgPaintKit_Definition_Item) Descriptor() ([]byte, []int) {
	return fileDescriptor_tf_proto_def_messages_a921922ea643aecb, []int{23, 0}
}
func (m *CMsgPaintKit_Definition_Item) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgPaintKit_Definition_Item.Unmarshal(m, b)
}
func (m *CMsgPaintKit_Definition_Item) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgPaintKit_Definition_Item.Marshal(b, m, deterministic)
}
func (dst *CMsgPaintKit_Definition_Item) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgPaintKit_Definition_Item.Merge(dst, src)
}
func (m *CMsgPaintKit_Definition_Item) XXX_Size() int {
	return xxx_messageInfo_CMsgPaintKit_Definition_Item.Size(m)
}
func (m *CMsgPaintKit_Definition_Item) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgPaintKit_Definition_Item.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgPaintKit_Definition_Item proto.InternalMessageInfo

func (m *CMsgPaintKit_Definition_Item) GetItemDefinitionTemplate() *CMsgProtoDefID {
	if m != nil {
		return m.ItemDefinitionTemplate
	}
	return nil
}

func (m *CMsgPaintKit_Definition_Item) GetData() *CMsgPaintKit_Definition_Item_ItemData {
	if m != nil {
		return m.Data
	}
	return nil
}

type CMsgPaintKit_Definition_Item_ItemData struct {
	CanApplyPaintkit     *bool           `protobuf:"varint,2,opt,name=can_apply_paintkit,json=canApplyPaintkit,def=1" json:"can_apply_paintkit,omitempty"`
	MaterialOverride     *string         `protobuf:"bytes,3,opt,name=material_override,json=materialOverride" json:"material_override,omitempty"`
	Variable             []*CMsgVarField `protobuf:"bytes,4,rep,name=variable" json:"variable,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *CMsgPaintKit_Definition_Item_ItemData) Reset()         { *m = CMsgPaintKit_Definition_Item_ItemData{} }
func (m *CMsgPaintKit_Definition_Item_ItemData) String() string { return proto.CompactTextString(m) }
func (*CMsgPaintKit_Definition_Item_ItemData) ProtoMessage()    {}
func (*CMsgPaintKit_Definition_Item_ItemData) Descriptor() ([]byte, []int) {
	return fileDescriptor_tf_proto_def_messages_a921922ea643aecb, []int{23, 0, 0}
}
func (m *CMsgPaintKit_Definition_Item_ItemData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgPaintKit_Definition_Item_ItemData.Unmarshal(m, b)
}
func (m *CMsgPaintKit_Definition_Item_ItemData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgPaintKit_Definition_Item_ItemData.Marshal(b, m, deterministic)
}
func (dst *CMsgPaintKit_Definition_Item_ItemData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgPaintKit_Definition_Item_ItemData.Merge(dst, src)
}
func (m *CMsgPaintKit_Definition_Item_ItemData) XXX_Size() int {
	return xxx_messageInfo_CMsgPaintKit_Definition_Item_ItemData.Size(m)
}
func (m *CMsgPaintKit_Definition_Item_ItemData) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgPaintKit_Definition_Item_ItemData.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgPaintKit_Definition_Item_ItemData proto.InternalMessageInfo

const Default_CMsgPaintKit_Definition_Item_ItemData_CanApplyPaintkit bool = true

func (m *CMsgPaintKit_Definition_Item_ItemData) GetCanApplyPaintkit() bool {
	if m != nil && m.CanApplyPaintkit != nil {
		return *m.CanApplyPaintkit
	}
	return Default_CMsgPaintKit_Definition_Item_ItemData_CanApplyPaintkit
}

func (m *CMsgPaintKit_Definition_Item_ItemData) GetMaterialOverride() string {
	if m != nil && m.MaterialOverride != nil {
		return *m.MaterialOverride
	}
	return ""
}

func (m *CMsgPaintKit_Definition_Item_ItemData) GetVariable() []*CMsgVarField {
	if m != nil {
		return m.Variable
	}
	return nil
}

type CMsgQuestTheme struct {
	Header               *CMsgProtoDefHeader                 `protobuf:"bytes,1,req,name=header" json:"header,omitempty"`
	NotificationRes      *string                             `protobuf:"bytes,2,opt,name=notification_res,json=notificationRes" json:"notification_res,omitempty"`
	QuestItemRes         *string                             `protobuf:"bytes,3,opt,name=quest_item_res,json=questItemRes" json:"quest_item_res,omitempty"`
	InGameTrackerRes     *string                             `protobuf:"bytes,4,opt,name=in_game_tracker_res,json=inGameTrackerRes" json:"in_game_tracker_res,omitempty"`
	GiveSounds           []*CMsgQuestTheme_WeightedStringSet `protobuf:"bytes,5,rep,name=give_sounds,json=giveSounds" json:"give_sounds,omitempty"`
	CompleteSounds       []*CMsgQuestTheme_WeightedStringSet `protobuf:"bytes,6,rep,name=complete_sounds,json=completeSounds" json:"complete_sounds,omitempty"`
	FullyCompleteSounds  []*CMsgQuestTheme_WeightedStringSet `protobuf:"bytes,7,rep,name=fully_complete_sounds,json=fullyCompleteSounds" json:"fully_complete_sounds,omitempty"`
	RewardSound          *string                             `protobuf:"bytes,8,opt,name=reward_sound,json=rewardSound" json:"reward_sound,omitempty"`
	DiscardSound         *string                             `protobuf:"bytes,9,opt,name=discard_sound,json=discardSound" json:"discard_sound,omitempty"`
	RevealSound          *string                             `protobuf:"bytes,10,opt,name=reveal_sound,json=revealSound" json:"reveal_sound,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                            `json:"-"`
	XXX_unrecognized     []byte                              `json:"-"`
	XXX_sizecache        int32                               `json:"-"`
}

func (m *CMsgQuestTheme) Reset()         { *m = CMsgQuestTheme{} }
func (m *CMsgQuestTheme) String() string { return proto.CompactTextString(m) }
func (*CMsgQuestTheme) ProtoMessage()    {}
func (*CMsgQuestTheme) Descriptor() ([]byte, []int) {
	return fileDescriptor_tf_proto_def_messages_a921922ea643aecb, []int{24}
}
func (m *CMsgQuestTheme) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgQuestTheme.Unmarshal(m, b)
}
func (m *CMsgQuestTheme) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgQuestTheme.Marshal(b, m, deterministic)
}
func (dst *CMsgQuestTheme) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgQuestTheme.Merge(dst, src)
}
func (m *CMsgQuestTheme) XXX_Size() int {
	return xxx_messageInfo_CMsgQuestTheme.Size(m)
}
func (m *CMsgQuestTheme) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgQuestTheme.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgQuestTheme proto.InternalMessageInfo

func (m *CMsgQuestTheme) GetHeader() *CMsgProtoDefHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *CMsgQuestTheme) GetNotificationRes() string {
	if m != nil && m.NotificationRes != nil {
		return *m.NotificationRes
	}
	return ""
}

func (m *CMsgQuestTheme) GetQuestItemRes() string {
	if m != nil && m.QuestItemRes != nil {
		return *m.QuestItemRes
	}
	return ""
}

func (m *CMsgQuestTheme) GetInGameTrackerRes() string {
	if m != nil && m.InGameTrackerRes != nil {
		return *m.InGameTrackerRes
	}
	return ""
}

func (m *CMsgQuestTheme) GetGiveSounds() []*CMsgQuestTheme_WeightedStringSet {
	if m != nil {
		return m.GiveSounds
	}
	return nil
}

func (m *CMsgQuestTheme) GetCompleteSounds() []*CMsgQuestTheme_WeightedStringSet {
	if m != nil {
		return m.CompleteSounds
	}
	return nil
}

func (m *CMsgQuestTheme) GetFullyCompleteSounds() []*CMsgQuestTheme_WeightedStringSet {
	if m != nil {
		return m.FullyCompleteSounds
	}
	return nil
}

func (m *CMsgQuestTheme) GetRewardSound() string {
	if m != nil && m.RewardSound != nil {
		return *m.RewardSound
	}
	return ""
}

func (m *CMsgQuestTheme) GetDiscardSound() string {
	if m != nil && m.DiscardSound != nil {
		return *m.DiscardSound
	}
	return ""
}

func (m *CMsgQuestTheme) GetRevealSound() string {
	if m != nil && m.RevealSound != nil {
		return *m.RevealSound
	}
	return ""
}

type CMsgQuestTheme_WeightedString struct {
	String_              *string  `protobuf:"bytes,1,opt,name=string" json:"string,omitempty"`
	Weight               *uint32  `protobuf:"varint,2,opt,name=weight" json:"weight,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgQuestTheme_WeightedString) Reset()         { *m = CMsgQuestTheme_WeightedString{} }
func (m *CMsgQuestTheme_WeightedString) String() string { return proto.CompactTextString(m) }
func (*CMsgQuestTheme_WeightedString) ProtoMessage()    {}
func (*CMsgQuestTheme_WeightedString) Descriptor() ([]byte, []int) {
	return fileDescriptor_tf_proto_def_messages_a921922ea643aecb, []int{24, 0}
}
func (m *CMsgQuestTheme_WeightedString) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgQuestTheme_WeightedString.Unmarshal(m, b)
}
func (m *CMsgQuestTheme_WeightedString) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgQuestTheme_WeightedString.Marshal(b, m, deterministic)
}
func (dst *CMsgQuestTheme_WeightedString) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgQuestTheme_WeightedString.Merge(dst, src)
}
func (m *CMsgQuestTheme_WeightedString) XXX_Size() int {
	return xxx_messageInfo_CMsgQuestTheme_WeightedString.Size(m)
}
func (m *CMsgQuestTheme_WeightedString) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgQuestTheme_WeightedString.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgQuestTheme_WeightedString proto.InternalMessageInfo

func (m *CMsgQuestTheme_WeightedString) GetString_() string {
	if m != nil && m.String_ != nil {
		return *m.String_
	}
	return ""
}

func (m *CMsgQuestTheme_WeightedString) GetWeight() uint32 {
	if m != nil && m.Weight != nil {
		return *m.Weight
	}
	return 0
}

type CMsgQuestTheme_WeightedStringSet struct {
	WeightedStrings      []*CMsgQuestTheme_WeightedString `protobuf:"bytes,1,rep,name=weighted_strings,json=weightedStrings" json:"weighted_strings,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                         `json:"-"`
	XXX_unrecognized     []byte                           `json:"-"`
	XXX_sizecache        int32                            `json:"-"`
}

func (m *CMsgQuestTheme_WeightedStringSet) Reset()         { *m = CMsgQuestTheme_WeightedStringSet{} }
func (m *CMsgQuestTheme_WeightedStringSet) String() string { return proto.CompactTextString(m) }
func (*CMsgQuestTheme_WeightedStringSet) ProtoMessage()    {}
func (*CMsgQuestTheme_WeightedStringSet) Descriptor() ([]byte, []int) {
	return fileDescriptor_tf_proto_def_messages_a921922ea643aecb, []int{24, 1}
}
func (m *CMsgQuestTheme_WeightedStringSet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgQuestTheme_WeightedStringSet.Unmarshal(m, b)
}
func (m *CMsgQuestTheme_WeightedStringSet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgQuestTheme_WeightedStringSet.Marshal(b, m, deterministic)
}
func (dst *CMsgQuestTheme_WeightedStringSet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgQuestTheme_WeightedStringSet.Merge(dst, src)
}
func (m *CMsgQuestTheme_WeightedStringSet) XXX_Size() int {
	return xxx_messageInfo_CMsgQuestTheme_WeightedStringSet.Size(m)
}
func (m *CMsgQuestTheme_WeightedStringSet) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgQuestTheme_WeightedStringSet.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgQuestTheme_WeightedStringSet proto.InternalMessageInfo

func (m *CMsgQuestTheme_WeightedStringSet) GetWeightedStrings() []*CMsgQuestTheme_WeightedString {
	if m != nil {
		return m.WeightedStrings
	}
	return nil
}

type CMsgQuestMapNodeCondition struct {
	// Types that are valid to be assigned to Operation:
	//	*CMsgQuestMapNodeCondition_State
	//	*CMsgQuestMapNodeCondition_Logical
	Operation            isCMsgQuestMapNodeCondition_Operation `protobuf_oneof:"operation"`
	XXX_NoUnkeyedLiteral struct{}                              `json:"-"`
	XXX_unrecognized     []byte                                `json:"-"`
	XXX_sizecache        int32                                 `json:"-"`
}

func (m *CMsgQuestMapNodeCondition) Reset()         { *m = CMsgQuestMapNodeCondition{} }
func (m *CMsgQuestMapNodeCondition) String() string { return proto.CompactTextString(m) }
func (*CMsgQuestMapNodeCondition) ProtoMessage()    {}
func (*CMsgQuestMapNodeCondition) Descriptor() ([]byte, []int) {
	return fileDescriptor_tf_proto_def_messages_a921922ea643aecb, []int{25}
}
func (m *CMsgQuestMapNodeCondition) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgQuestMapNodeCondition.Unmarshal(m, b)
}
func (m *CMsgQuestMapNodeCondition) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgQuestMapNodeCondition.Marshal(b, m, deterministic)
}
func (dst *CMsgQuestMapNodeCondition) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgQuestMapNodeCondition.Merge(dst, src)
}
func (m *CMsgQuestMapNodeCondition) XXX_Size() int {
	return xxx_messageInfo_CMsgQuestMapNodeCondition.Size(m)
}
func (m *CMsgQuestMapNodeCondition) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgQuestMapNodeCondition.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgQuestMapNodeCondition proto.InternalMessageInfo

type isCMsgQuestMapNodeCondition_Operation interface {
	isCMsgQuestMapNodeCondition_Operation()
}

type CMsgQuestMapNodeCondition_State struct {
	State *CMsgQuestMapNodeCondition_NodeState `protobuf:"bytes,1,opt,name=state,oneof"`
}
type CMsgQuestMapNodeCondition_Logical struct {
	Logical *CMsgQuestMapNodeCondition_Logic `protobuf:"bytes,2,opt,name=logical,oneof"`
}

func (*CMsgQuestMapNodeCondition_State) isCMsgQuestMapNodeCondition_Operation()   {}
func (*CMsgQuestMapNodeCondition_Logical) isCMsgQuestMapNodeCondition_Operation() {}

func (m *CMsgQuestMapNodeCondition) GetOperation() isCMsgQuestMapNodeCondition_Operation {
	if m != nil {
		return m.Operation
	}
	return nil
}

func (m *CMsgQuestMapNodeCondition) GetState() *CMsgQuestMapNodeCondition_NodeState {
	if x, ok := m.GetOperation().(*CMsgQuestMapNodeCondition_State); ok {
		return x.State
	}
	return nil
}

func (m *CMsgQuestMapNodeCondition) GetLogical() *CMsgQuestMapNodeCondition_Logic {
	if x, ok := m.GetOperation().(*CMsgQuestMapNodeCondition_Logical); ok {
		return x.Logical
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*CMsgQuestMapNodeCondition) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _CMsgQuestMapNodeCondition_OneofMarshaler, _CMsgQuestMapNodeCondition_OneofUnmarshaler, _CMsgQuestMapNodeCondition_OneofSizer, []interface{}{
		(*CMsgQuestMapNodeCondition_State)(nil),
		(*CMsgQuestMapNodeCondition_Logical)(nil),
	}
}

func _CMsgQuestMapNodeCondition_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*CMsgQuestMapNodeCondition)
	// operation
	switch x := m.Operation.(type) {
	case *CMsgQuestMapNodeCondition_State:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.State); err != nil {
			return err
		}
	case *CMsgQuestMapNodeCondition_Logical:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Logical); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("CMsgQuestMapNodeCondition.Operation has unexpected type %T", x)
	}
	return nil
}

func _CMsgQuestMapNodeCondition_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*CMsgQuestMapNodeCondition)
	switch tag {
	case 1: // operation.state
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CMsgQuestMapNodeCondition_NodeState)
		err := b.DecodeMessage(msg)
		m.Operation = &CMsgQuestMapNodeCondition_State{msg}
		return true, err
	case 2: // operation.logical
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CMsgQuestMapNodeCondition_Logic)
		err := b.DecodeMessage(msg)
		m.Operation = &CMsgQuestMapNodeCondition_Logical{msg}
		return true, err
	default:
		return false, nil
	}
}

func _CMsgQuestMapNodeCondition_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*CMsgQuestMapNodeCondition)
	// operation
	switch x := m.Operation.(type) {
	case *CMsgQuestMapNodeCondition_State:
		s := proto.Size(x.State)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *CMsgQuestMapNodeCondition_Logical:
		s := proto.Size(x.Logical)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type CMsgQuestMapNodeCondition_NodeState struct {
	BonusObjectivesRequired *uint32         `protobuf:"varint,1,opt,name=bonus_objectives_required,json=bonusObjectivesRequired,def=0" json:"bonus_objectives_required,omitempty"`
	TargetNodeDefid         *CMsgProtoDefID `protobuf:"bytes,2,req,name=target_node_defid,json=targetNodeDefid" json:"target_node_defid,omitempty"`
	XXX_NoUnkeyedLiteral    struct{}        `json:"-"`
	XXX_unrecognized        []byte          `json:"-"`
	XXX_sizecache           int32           `json:"-"`
}

func (m *CMsgQuestMapNodeCondition_NodeState) Reset()         { *m = CMsgQuestMapNodeCondition_NodeState{} }
func (m *CMsgQuestMapNodeCondition_NodeState) String() string { return proto.CompactTextString(m) }
func (*CMsgQuestMapNodeCondition_NodeState) ProtoMessage()    {}
func (*CMsgQuestMapNodeCondition_NodeState) Descriptor() ([]byte, []int) {
	return fileDescriptor_tf_proto_def_messages_a921922ea643aecb, []int{25, 0}
}
func (m *CMsgQuestMapNodeCondition_NodeState) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgQuestMapNodeCondition_NodeState.Unmarshal(m, b)
}
func (m *CMsgQuestMapNodeCondition_NodeState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgQuestMapNodeCondition_NodeState.Marshal(b, m, deterministic)
}
func (dst *CMsgQuestMapNodeCondition_NodeState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgQuestMapNodeCondition_NodeState.Merge(dst, src)
}
func (m *CMsgQuestMapNodeCondition_NodeState) XXX_Size() int {
	return xxx_messageInfo_CMsgQuestMapNodeCondition_NodeState.Size(m)
}
func (m *CMsgQuestMapNodeCondition_NodeState) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgQuestMapNodeCondition_NodeState.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgQuestMapNodeCondition_NodeState proto.InternalMessageInfo

const Default_CMsgQuestMapNodeCondition_NodeState_BonusObjectivesRequired uint32 = 0

func (m *CMsgQuestMapNodeCondition_NodeState) GetBonusObjectivesRequired() uint32 {
	if m != nil && m.BonusObjectivesRequired != nil {
		return *m.BonusObjectivesRequired
	}
	return Default_CMsgQuestMapNodeCondition_NodeState_BonusObjectivesRequired
}

func (m *CMsgQuestMapNodeCondition_NodeState) GetTargetNodeDefid() *CMsgProtoDefID {
	if m != nil {
		return m.TargetNodeDefid
	}
	return nil
}

type CMsgQuestMapNodeCondition_Logic struct {
	Operation            *LogicalOperation            `protobuf:"varint,1,req,name=operation,enum=LogicalOperation,def=0" json:"operation,omitempty"`
	SubConditions        []*CMsgQuestMapNodeCondition `protobuf:"bytes,2,rep,name=sub_conditions,json=subConditions" json:"sub_conditions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *CMsgQuestMapNodeCondition_Logic) Reset()         { *m = CMsgQuestMapNodeCondition_Logic{} }
func (m *CMsgQuestMapNodeCondition_Logic) String() string { return proto.CompactTextString(m) }
func (*CMsgQuestMapNodeCondition_Logic) ProtoMessage()    {}
func (*CMsgQuestMapNodeCondition_Logic) Descriptor() ([]byte, []int) {
	return fileDescriptor_tf_proto_def_messages_a921922ea643aecb, []int{25, 1}
}
func (m *CMsgQuestMapNodeCondition_Logic) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgQuestMapNodeCondition_Logic.Unmarshal(m, b)
}
func (m *CMsgQuestMapNodeCondition_Logic) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgQuestMapNodeCondition_Logic.Marshal(b, m, deterministic)
}
func (dst *CMsgQuestMapNodeCondition_Logic) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgQuestMapNodeCondition_Logic.Merge(dst, src)
}
func (m *CMsgQuestMapNodeCondition_Logic) XXX_Size() int {
	return xxx_messageInfo_CMsgQuestMapNodeCondition_Logic.Size(m)
}
func (m *CMsgQuestMapNodeCondition_Logic) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgQuestMapNodeCondition_Logic.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgQuestMapNodeCondition_Logic proto.InternalMessageInfo

const Default_CMsgQuestMapNodeCondition_Logic_Operation LogicalOperation = LogicalOperation_AND

func (m *CMsgQuestMapNodeCondition_Logic) GetOperation() LogicalOperation {
	if m != nil && m.Operation != nil {
		return *m.Operation
	}
	return Default_CMsgQuestMapNodeCondition_Logic_Operation
}

func (m *CMsgQuestMapNodeCondition_Logic) GetSubConditions() []*CMsgQuestMapNodeCondition {
	if m != nil {
		return m.SubConditions
	}
	return nil
}

type CMsgHeaderOnly struct {
	Header               *CMsgProtoDefHeader `protobuf:"bytes,1,req,name=header" json:"header,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *CMsgHeaderOnly) Reset()         { *m = CMsgHeaderOnly{} }
func (m *CMsgHeaderOnly) String() string { return proto.CompactTextString(m) }
func (*CMsgHeaderOnly) ProtoMessage()    {}
func (*CMsgHeaderOnly) Descriptor() ([]byte, []int) {
	return fileDescriptor_tf_proto_def_messages_a921922ea643aecb, []int{26}
}
func (m *CMsgHeaderOnly) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgHeaderOnly.Unmarshal(m, b)
}
func (m *CMsgHeaderOnly) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgHeaderOnly.Marshal(b, m, deterministic)
}
func (dst *CMsgHeaderOnly) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgHeaderOnly.Merge(dst, src)
}
func (m *CMsgHeaderOnly) XXX_Size() int {
	return xxx_messageInfo_CMsgHeaderOnly.Size(m)
}
func (m *CMsgHeaderOnly) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgHeaderOnly.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgHeaderOnly proto.InternalMessageInfo

func (m *CMsgHeaderOnly) GetHeader() *CMsgProtoDefHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

var E_StartExpanded = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.MessageOptions)(nil),
	ExtensionType: (*bool)(nil),
	Field:         80000,
	Name:          "start_expanded",
	Tag:           "varint,80000,opt,name=start_expanded,json=startExpanded,def=1",
	Filename:      "tf_proto_def_messages.proto",
}

var E_ValidType = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.FieldOptions)(nil),
	ExtensionType: (*ProtoDefTypes)(nil),
	Field:         70000,
	Name:          "valid_type",
	Tag:           "varint,70000,opt,name=valid_type,json=validType,enum=ProtoDefTypes,def=0",
	Filename:      "tf_proto_def_messages.proto",
}

var E_Editable = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.FieldOptions)(nil),
	ExtensionType: (*bool)(nil),
	Field:         70001,
	Name:          "editable",
	Tag:           "varint,70001,opt,name=editable,def=1",
	Filename:      "tf_proto_def_messages.proto",
}

var E_Localized = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.FieldOptions)(nil),
	ExtensionType: (*bool)(nil),
	Field:         70002,
	Name:          "localized",
	Tag:           "varint,70002,opt,name=localized,def=0",
	Filename:      "tf_proto_def_messages.proto",
}

var E_DoNotInherit = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.FieldOptions)(nil),
	ExtensionType: (*bool)(nil),
	Field:         70003,
	Name:          "do_not_inherit",
	Tag:           "varint,70003,opt,name=do_not_inherit,json=doNotInherit,def=0",
	Filename:      "tf_proto_def_messages.proto",
}

var E_DisplayName = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.FieldOptions)(nil),
	ExtensionType: (*string)(nil),
	Field:         70004,
	Name:          "display_name",
	Tag:           "bytes,70004,opt,name=display_name,json=displayName",
	Filename:      "tf_proto_def_messages.proto",
}

var E_Comment = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.FieldOptions)(nil),
	ExtensionType: (*string)(nil),
	Field:         70005,
	Name:          "comment",
	Tag:           "bytes,70005,opt,name=comment",
	Filename:      "tf_proto_def_messages.proto",
}

var E_MaxCount = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.FieldOptions)(nil),
	ExtensionType: (*uint32)(nil),
	Field:         70007,
	Name:          "max_count",
	Tag:           "varint,70007,opt,name=max_count,json=maxCount",
	Filename:      "tf_proto_def_messages.proto",
}

var E_AllowAdd = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.FieldOptions)(nil),
	ExtensionType: (*bool)(nil),
	Field:         70008,
	Name:          "allow_add",
	Tag:           "varint,70008,opt,name=allow_add,json=allowAdd,def=1",
	Filename:      "tf_proto_def_messages.proto",
}

var E_AllowDelete = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.FieldOptions)(nil),
	ExtensionType: (*bool)(nil),
	Field:         70009,
	Name:          "allow_delete",
	Tag:           "varint,70009,opt,name=allow_delete,json=allowDelete,def=1",
	Filename:      "tf_proto_def_messages.proto",
}

var E_PanelClassOverride = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.FieldOptions)(nil),
	ExtensionType: (*string)(nil),
	Field:         70010,
	Name:          "panel_class_override",
	Tag:           "bytes,70010,opt,name=panel_class_override,json=panelClassOverride",
	Filename:      "tf_proto_def_messages.proto",
}

var E_MessageInherhitanceKeyFieldName = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.FieldOptions)(nil),
	ExtensionType: (*string)(nil),
	Field:         70011,
	Name:          "message_inherhitance_key_field_name",
	Tag:           "bytes,70011,opt,name=message_inherhitance_key_field_name,json=messageInherhitanceKeyFieldName",
	Filename:      "tf_proto_def_messages.proto",
}

var E_InheritReferenceVariables = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.FieldOptions)(nil),
	ExtensionType: (*bool)(nil),
	Field:         70012,
	Name:          "inherit_reference_variables",
	Tag:           "varint,70012,opt,name=inherit_reference_variables,json=inheritReferenceVariables,def=0",
	Filename:      "tf_proto_def_messages.proto",
}

var E_SelfInheritOnly = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.FieldOptions)(nil),
	ExtensionType: (*bool)(nil),
	Field:         70013,
	Name:          "self_inherit_only",
	Tag:           "varint,70013,opt,name=self_inherit_only,json=selfInheritOnly,def=0",
	Filename:      "tf_proto_def_messages.proto",
}

var E_VarFieldType = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.FieldOptions)(nil),
	ExtensionType: (*EVarFieldType)(nil),
	Field:         70014,
	Name:          "var_field_type",
	Tag:           "varint,70014,opt,name=var_field_type,json=varFieldType,enum=EVarFieldType,def=1",
	Filename:      "tf_proto_def_messages.proto",
}

var E_MergingKeyField = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.FieldOptions)(nil),
	ExtensionType: (*bool)(nil),
	Field:         70015,
	Name:          "merging_key_field",
	Tag:           "varint,70015,opt,name=merging_key_field,json=mergingKeyField,def=0",
	Filename:      "tf_proto_def_messages.proto",
}

func init() {
	proto.RegisterType((*CMsgFieldID)(nil), "CMsgFieldID")
	proto.RegisterType((*CMsgFieldID_CMsgField)(nil), "CMsgFieldID.CMsgField")
	proto.RegisterType((*CMsgUniversalFieldID)(nil), "CMsgUniversalFieldID")
	proto.RegisterType((*CMsgVariableDefinition)(nil), "CMsgVariableDefinition")
	proto.RegisterType((*CMsgProtoDefHeader)(nil), "CMsgProtoDefHeader")
	proto.RegisterType((*CMsgValidTypes)(nil), "CMsgValidTypes")
	proto.RegisterType((*CMsgProtoDefID)(nil), "CMsgProtoDefID")
	proto.RegisterType((*CMsgQuestObjectiveDef)(nil), "CMsgQuestObjectiveDef")
	proto.RegisterType((*CMsgQuestDef)(nil), "CMsgQuestDef")
	proto.RegisterType((*CMsgQuestDef_MMCriteria)(nil), "CMsgQuestDef.MMCriteria")
	proto.RegisterType((*CMsgQuestDef_ObjectiveInstance)(nil), "CMsgQuestDef.ObjectiveInstance")
	proto.RegisterType((*CMsgQuestMapStoreItem)(nil), "CMsgQuestMapStoreItem")
	proto.RegisterType((*CMsgQuestMapRegionDef)(nil), "CMsgQuestMapRegionDef")
	proto.RegisterType((*CMsgQuestMapRegionDef_RegionLink)(nil), "CMsgQuestMapRegionDef.RegionLink")
	proto.RegisterType((*CMsgVarField)(nil), "CMsgVarField")
	proto.RegisterType((*CMsgQuestMapStarType)(nil), "CMsgQuestMapStarType")
	proto.RegisterType((*CMsgQuestMapNodeDef)(nil), "CMsgQuestMapNodeDef")
	proto.RegisterType((*CMsgPaintKit_Variables)(nil), "CMsgPaintKit_Variables")
	proto.RegisterType((*CMsgPaintKit_Operation_TextureStage)(nil), "CMsgPaintKit_Operation_TextureStage")
	proto.RegisterType((*CMsgPaintKit_Operation_CombineStage)(nil), "CMsgPaintKit_Operation_CombineStage")
	proto.RegisterType((*CMsgPaintKit_Operation_SelectStage)(nil), "CMsgPaintKit_Operation_SelectStage")
	proto.RegisterType((*CMsgPaintKit_Operation_Sticker)(nil), "CMsgPaintKit_Operation_Sticker")
	proto.RegisterType((*CMsgPaintKit_Operation_StickerStage)(nil), "CMsgPaintKit_Operation_StickerStage")
	proto.RegisterType((*CMsgPaintKit_OperationStage)(nil), "CMsgPaintKit_OperationStage")
	proto.RegisterType((*CMsgPaintKit_OperationNode)(nil), "CMsgPaintKit_OperationNode")
	proto.RegisterType((*CMsgPaintKit_Operation)(nil), "CMsgPaintKit_Operation")
	proto.RegisterType((*CMsgPaintKit_ItemDefinition)(nil), "CMsgPaintKit_ItemDefinition")
	proto.RegisterType((*CMsgPaintKit_ItemDefinition_Definition)(nil), "CMsgPaintKit_ItemDefinition.Definition")
	proto.RegisterType((*CMsgPaintKit_Definition)(nil), "CMsgPaintKit_Definition")
	proto.RegisterType((*CMsgPaintKit_Definition_Item)(nil), "CMsgPaintKit_Definition.Item")
	proto.RegisterType((*CMsgPaintKit_Definition_Item_ItemData)(nil), "CMsgPaintKit_Definition.Item.ItemData")
	proto.RegisterType((*CMsgQuestTheme)(nil), "CMsgQuestTheme")
	proto.RegisterType((*CMsgQuestTheme_WeightedString)(nil), "CMsgQuestTheme.WeightedString")
	proto.RegisterType((*CMsgQuestTheme_WeightedStringSet)(nil), "CMsgQuestTheme.WeightedStringSet")
	proto.RegisterType((*CMsgQuestMapNodeCondition)(nil), "CMsgQuestMapNodeCondition")
	proto.RegisterType((*CMsgQuestMapNodeCondition_NodeState)(nil), "CMsgQuestMapNodeCondition.NodeState")
	proto.RegisterType((*CMsgQuestMapNodeCondition_Logic)(nil), "CMsgQuestMapNodeCondition.Logic")
	proto.RegisterType((*CMsgHeaderOnly)(nil), "CMsgHeaderOnly")
	proto.RegisterEnum("LogicalOperation", LogicalOperation_name, LogicalOperation_value)
	proto.RegisterEnum("EValueDefinitionSource", EValueDefinitionSource_name, EValueDefinitionSource_value)
	proto.RegisterEnum("ProtoDefTypes", ProtoDefTypes_name, ProtoDefTypes_value)
	proto.RegisterEnum("EQuestPoints", EQuestPoints_name, EQuestPoints_value)
	proto.RegisterEnum("EVarFieldType", EVarFieldType_name, EVarFieldType_value)
	proto.RegisterEnum("ENodeCashReward", ENodeCashReward_name, ENodeCashReward_value)
	proto.RegisterEnum("CMsgQuestObjectiveDef_ETF2GameModes", CMsgQuestObjectiveDef_ETF2GameModes_name, CMsgQuestObjectiveDef_ETF2GameModes_value)
	proto.RegisterEnum("CMsgQuestObjectiveDef_ETF2Conditions", CMsgQuestObjectiveDef_ETF2Conditions_name, CMsgQuestObjectiveDef_ETF2Conditions_value)
	proto.RegisterEnum("CMsgQuestObjectiveDef_ETF2Team", CMsgQuestObjectiveDef_ETF2Team_name, CMsgQuestObjectiveDef_ETF2Team_value)
	proto.RegisterExtension(E_StartExpanded)
	proto.RegisterExtension(E_ValidType)
	proto.RegisterExtension(E_Editable)
	proto.RegisterExtension(E_Localized)
	proto.RegisterExtension(E_DoNotInherit)
	proto.RegisterExtension(E_DisplayName)
	proto.RegisterExtension(E_Comment)
	proto.RegisterExtension(E_MaxCount)
	proto.RegisterExtension(E_AllowAdd)
	proto.RegisterExtension(E_AllowDelete)
	proto.RegisterExtension(E_PanelClassOverride)
	proto.RegisterExtension(E_MessageInherhitanceKeyFieldName)
	proto.RegisterExtension(E_InheritReferenceVariables)
	proto.RegisterExtension(E_SelfInheritOnly)
	proto.RegisterExtension(E_VarFieldType)
	proto.RegisterExtension(E_MergingKeyField)
}

func init() {
	proto.RegisterFile("tf_proto_def_messages.proto", fileDescriptor_tf_proto_def_messages_a921922ea643aecb)
}

var fileDescriptor_tf_proto_def_messages_a921922ea643aecb = []byte{
	// 8690 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x7d, 0x4b, 0x70, 0x23, 0x47,
	0x96, 0x18, 0xc1, 0x3f, 0x93, 0x04, 0x59, 0xcc, 0xfe, 0xa1, 0xd9, 0xbf, 0xea, 0xea, 0xd6, 0x74,
	0x4f, 0xab, 0x45, 0x49, 0x2d, 0xa9, 0x35, 0xa2, 0x46, 0x2b, 0x15, 0x80, 0x22, 0x51, 0x22, 0x50,
	0x40, 0x17, 0x80, 0x6e, 0x51, 0xe3, 0xdd, 0x9a, 0x02, 0x2a, 0x01, 0x94, 0x58, 0x1f, 0xa8, 0xaa,
	0x40, 0x36, 0xc7, 0x8e, 0xdd, 0x9e, 0xb5, 0xd7, 0x5e, 0xef, 0x86, 0xc3, 0xf6, 0x44, 0x38, 0x10,
	0x61, 0x1f, 0xd6, 0x56, 0x78, 0xed, 0x0d, 0xde, 0xbc, 0xa7, 0xf5, 0xc1, 0x11, 0xf6, 0xc1, 0x11,
	0x0e, 0xaf, 0xc3, 0xe1, 0x98, 0x83, 0x0f, 0x3e, 0xf9, 0x38, 0xc7, 0x59, 0x7f, 0xc7, 0x9f, 0xb5,
	0x37, 0xf2, 0x53, 0x3f, 0x02, 0x20, 0xd1, 0x33, 0x13, 0x73, 0x69, 0xa2, 0x32, 0xdf, 0x2f, 0x5f,
	0xbe, 0x7c, 0x2f, 0x3f, 0x2f, 0xb3, 0xc1, 0x8d, 0xa0, 0xa3, 0xf5, 0x3d, 0x37, 0x70, 0x35, 0x03,
	0x75, 0x34, 0x1b, 0xf9, 0xbe, 0xde, 0x45, 0xfe, 0x36, 0x29, 0xda, 0xe2, 0xbb, 0xae, 0xdb, 0xb5,
	0xd0, 0xdb, 0xe4, 0xab, 0x35, 0xe8, 0xbc, 0x6d, 0x20, 0xbf, 0xed, 0x99, 0xfd, 0xc0, 0xf5, 0x28,
	0x84, 0xf0, 0xa3, 0x0c, 0x58, 0x2d, 0x54, 0xfc, 0xee, 0xae, 0x89, 0x2c, 0x43, 0x2e, 0xc2, 0xc7,
	0x60, 0xa1, 0x83, 0x7f, 0xe6, 0x32, 0xfc, 0xdc, 0xc3, 0xd5, 0x27, 0x57, 0xb7, 0x13, 0x95, 0xf1,
	0x6f, 0x95, 0x02, 0x6d, 0x35, 0xc1, 0x4a, 0x54, 0x06, 0xef, 0x82, 0x35, 0x52, 0xaa, 0x39, 0x03,
	0xbb, 0x85, 0xbc, 0x5c, 0x86, 0xcf, 0x3c, 0xcc, 0xaa, 0xab, 0xa4, 0x4c, 0x21, 0x45, 0xf0, 0x0d,
	0xb0, 0xee, 0xa1, 0x3e, 0xd2, 0x03, 0x64, 0x68, 0xa6, 0x63, 0xa0, 0x97, 0xb9, 0x59, 0x02, 0x94,
	0x0d, 0x4b, 0x65, 0x5c, 0x28, 0xfc, 0xeb, 0x0c, 0xb8, 0x8c, 0xe9, 0x36, 0x1d, 0xf3, 0x08, 0x79,
	0xbe, 0x6e, 0x85, 0xd2, 0xed, 0x83, 0x55, 0xdf, 0x1d, 0x78, 0x6d, 0xa4, 0x05, 0x27, 0x7d, 0x44,
	0x38, 0xac, 0x3f, 0xb9, 0xb6, 0x2d, 0x3d, 0xd7, 0xad, 0x01, 0x2a, 0xa2, 0x8e, 0xe9, 0x98, 0x81,
	0xe9, 0x3a, 0x75, 0x02, 0xb3, 0xb3, 0xa9, 0x4a, 0xbb, 0x92, 0x2a, 0x29, 0x05, 0x49, 0x2b, 0x4a,
	0xbb, 0xb2, 0x22, 0xd5, 0x55, 0x40, 0xd1, 0x1b, 0x27, 0x7d, 0x04, 0x3f, 0x04, 0x1b, 0x06, 0x41,
	0x71, 0xba, 0x9a, 0xdb, 0xfa, 0x4a, 0x33, 0x0d, 0x22, 0xcd, 0xea, 0x93, 0x0d, 0xd2, 0xd0, 0x1a,
	0xd6, 0x4f, 0x11, 0x75, 0xe4, 0xa2, 0x9a, 0x0d, 0xe1, 0xaa, 0xad, 0xaf, 0x64, 0x03, 0x3e, 0x00,
	0xcb, 0xb4, 0xa1, 0xa6, 0x91, 0x9b, 0x23, 0x18, 0x6b, 0x49, 0x35, 0xa9, 0x4b, 0xa4, 0x56, 0x36,
	0x84, 0x00, 0x5c, 0xc5, 0xe5, 0xcf, 0x75, 0xcf, 0xd4, 0x5b, 0x56, 0x42, 0x40, 0x78, 0x1f, 0xcc,
	0x3b, 0xba, 0x4d, 0x5b, 0xb0, 0x92, 0xe7, 0x7e, 0x77, 0x28, 0xcc, 0xfc, 0xcb, 0xa1, 0x30, 0xf3,
	0x6f, 0x86, 0xc2, 0xcc, 0xcf, 0x86, 0x42, 0x46, 0x25, 0xb5, 0xf0, 0x36, 0x58, 0x32, 0x9d, 0x1e,
	0xf2, 0xcc, 0x80, 0x48, 0xb6, 0xbc, 0x33, 0x1f, 0x78, 0x03, 0xa4, 0x86, 0x85, 0xf0, 0x32, 0x58,
	0x38, 0xc2, 0x2d, 0x27, 0x52, 0xac, 0xa8, 0xf4, 0x43, 0xf8, 0xc9, 0x02, 0x80, 0xc9, 0x06, 0x94,
	0x90, 0x6e, 0x20, 0x0f, 0xca, 0x60, 0x99, 0x34, 0x03, 0x6b, 0x3d, 0xc3, 0xcf, 0x3e, 0xcc, 0xe6,
	0xdf, 0xc2, 0x6c, 0xbf, 0x19, 0x0a, 0xcb, 0x45, 0x56, 0x7e, 0x3a, 0x14, 0xb2, 0xe2, 0x20, 0x70,
	0xbb, 0xc8, 0x41, 0x1e, 0xee, 0x8e, 0x50, 0xa6, 0x9f, 0x60, 0x99, 0x22, 0x74, 0xf8, 0x39, 0x93,
	0x7e, 0x96, 0x48, 0xff, 0x94, 0x91, 0x99, 0x57, 0x74, 0x1b, 0x9d, 0x0e, 0x85, 0x2d, 0xfc, 0x97,
	0x0f, 0x5c, 0xde, 0xef, 0xb9, 0xc7, 0xbc, 0xe9, 0xf0, 0x41, 0x0f, 0xf1, 0xc8, 0x30, 0x03, 0xd7,
	0x4b, 0xd1, 0xa3, 0x6d, 0x3c, 0xcd, 0x80, 0xa5, 0xbe, 0x87, 0x3a, 0x7a, 0xcb, 0xcf, 0xcd, 0x11,
	0x9b, 0x3b, 0xab, 0xfe, 0xfc, 0x6f, 0x31, 0x06, 0x8b, 0x35, 0x02, 0x77, 0x3a, 0x14, 0x24, 0x99,
	0x6a, 0x80, 0x90, 0x26, 0xad, 0xf6, 0x79, 0xb7, 0x83, 0xbf, 0x7c, 0xc4, 0x1b, 0x91, 0x9a, 0xfd,
	0xc7, 0x98, 0xbd, 0xeb, 0x19, 0xc8, 0xe3, 0x3b, 0x9e, 0x6b, 0xf3, 0x81, 0xdb, 0xc7, 0x82, 0xb5,
	0xdc, 0x20, 0x70, 0xed, 0xed, 0x50, 0x9a, 0x1f, 0x0f, 0x85, 0x5c, 0x81, 0xd2, 0x26, 0x5d, 0x28,
	0x19, 0x66, 0x60, 0x3a, 0xdd, 0x9a, 0xee, 0x20, 0x8b, 0x48, 0x1a, 0x0a, 0x08, 0x7f, 0x27, 0x03,
	0xe6, 0x03, 0xbd, 0xeb, 0xe7, 0xe6, 0xf9, 0xb9, 0x87, 0x2b, 0xf9, 0xaf, 0xc3, 0x96, 0x37, 0xf4,
	0xae, 0x7f, 0x3a, 0x14, 0x0e, 0xea, 0x81, 0x67, 0x3a, 0x5d, 0x9f, 0x1f, 0xf8, 0xc8, 0xc0, 0x8c,
	0xe8, 0x70, 0x6b, 0x21, 0x3e, 0xe8, 0x99, 0x7e, 0x42, 0x30, 0xfe, 0xb8, 0x67, 0x5a, 0x88, 0xf7,
	0x91, 0xee, 0xb5, 0x7b, 0xa6, 0xd3, 0xdd, 0xe6, 0x79, 0x13, 0x6d, 0xf3, 0x0f, 0xda, 0x96, 0xee,
	0xfb, 0x0f, 0x1e, 0xf3, 0x0f, 0xfc, 0x9e, 0x1b, 0x74, 0x07, 0x0e, 0xfe, 0x89, 0x74, 0xff, 0xe4,
	0x41, 0x28, 0xaa, 0x4a, 0xd8, 0xc3, 0xbf, 0x95, 0x01, 0xab, 0x54, 0x26, 0xcd, 0x75, 0xac, 0x93,
	0xdc, 0x02, 0xb1, 0x8e, 0x85, 0x8e, 0x6e, 0xf9, 0x28, 0x8f, 0x98, 0x54, 0xab, 0xb5, 0x81, 0x87,
	0xf8, 0x48, 0x67, 0x79, 0xb9, 0xc3, 0x63, 0xf3, 0x79, 0x4c, 0x85, 0x31, 0x7d, 0x1e, 0xa3, 0xf2,
	0x3a, 0x4f, 0x09, 0xf1, 0xba, 0x63, 0xf0, 0xc7, 0xa6, 0x65, 0xf1, 0x8e, 0x1b, 0xf0, 0x2d, 0xc4,
	0xdb, 0xba, 0x81, 0x78, 0xd3, 0x09, 0x5c, 0x5e, 0x77, 0x78, 0xb7, 0xf5, 0x15, 0x6a, 0x07, 0xa9,
	0xee, 0x03, 0x14, 0xaf, 0xea, 0x58, 0x27, 0xf0, 0x08, 0xac, 0x1c, 0x31, 0x23, 0xf7, 0x73, 0x8b,
	0xa4, 0x17, 0xaf, 0x6d, 0x8f, 0x37, 0xfd, 0xfc, 0xa7, 0x4c, 0xbc, 0x95, 0xb0, 0x0e, 0x6b, 0x6e,
	0x2b, 0xfc, 0xa0, 0xbd, 0x99, 0xec, 0xc3, 0x90, 0xe9, 0x7f, 0x1a, 0x0a, 0xc4, 0x62, 0xd4, 0x98,
	0x95, 0xf0, 0x14, 0xac, 0x53, 0x2e, 0x96, 0x69, 0xe0, 0x31, 0xed, 0xc3, 0xfb, 0x60, 0x01, 0xbb,
	0x06, 0x9f, 0xf8, 0xaf, 0xf5, 0x27, 0xeb, 0xdb, 0xa1, 0x1d, 0x91, 0x6a, 0x95, 0x56, 0x0a, 0xff,
	0x7e, 0x99, 0x22, 0xc6, 0x46, 0x06, 0xb7, 0x52, 0xc3, 0x03, 0x3b, 0xa5, 0xd8, 0xde, 0x3f, 0x06,
	0xf3, 0xc4, 0xdf, 0xcc, 0x12, 0x7f, 0x73, 0x86, 0xe6, 0xce, 0xb5, 0xa2, 0xb4, 0xab, 0x35, 0x0e,
	0x6a, 0x92, 0xf6, 0xac, 0x29, 0xd5, 0x1b, 0x5a, 0x45, 0xac, 0x69, 0x4a, 0xb5, 0x28, 0xa9, 0x04,
	0x09, 0xfe, 0x3a, 0xe0, 0x4d, 0xc7, 0x0f, 0x74, 0xa7, 0x8d, 0x88, 0x8b, 0xc6, 0x85, 0xda, 0xd7,
	0x03, 0xe4, 0x07, 0x9a, 0xad, 0xf7, 0x35, 0xc7, 0x35, 0x10, 0xf3, 0x22, 0x97, 0x89, 0xca, 0x9e,
	0xe1, 0xaa, 0x8a, 0xde, 0x57, 0x5c, 0x03, 0xab, 0xad, 0x34, 0xa3, 0xde, 0x08, 0xf1, 0x19, 0xcb,
	0x24, 0x04, 0xac, 0x83, 0x5b, 0x93, 0xc8, 0x07, 0x3d, 0x64, 0x23, 0x62, 0x1b, 0xe1, 0xa0, 0x22,
	0x98, 0x0d, 0x5c, 0x5c, 0x9a, 0x51, 0xaf, 0x8f, 0x23, 0x4b, 0x2a, 0x61, 0x1b, 0x08, 0xe7, 0xc9,
	0xec, 0xa1, 0xae, 0xe9, 0x3a, 0xb9, 0x45, 0x42, 0xf9, 0x6a, 0x4a, 0x6a, 0x95, 0x54, 0x51, 0xb9,
	0x6f, 0x4d, 0x90, 0x9b, 0xc2, 0xc0, 0x5d, 0x70, 0x6d, 0x02, 0x93, 0xdc, 0x12, 0xa1, 0x9c, 0x8d,
	0x29, 0x53, 0x82, 0x97, 0xc7, 0x11, 0x84, 0x2d, 0x70, 0x77, 0x92, 0xb0, 0xd4, 0x6c, 0xcd, 0x23,
	0x94, 0x5b, 0x3e, 0x2b, 0x6b, 0x35, 0xac, 0x3a, 0x47, 0xd6, 0x08, 0x06, 0x9a, 0xe0, 0xfe, 0x28,
	0x8f, 0xbe, 0x6e, 0x3a, 0xc1, 0xa1, 0x19, 0x68, 0xb1, 0xed, 0xaf, 0x10, 0x36, 0xd4, 0xf6, 0x6b,
	0xb8, 0x7a, 0xdf, 0x0c, 0xb4, 0xc8, 0xd0, 0x4b, 0x33, 0x2a, 0x7f, 0x86, 0x4f, 0x8d, 0xd1, 0x88,
	0x60, 0x2e, 0x60, 0xe5, 0xf6, 0xb1, 0x67, 0xc6, 0xda, 0x07, 0xe3, 0x58, 0x55, 0xc3, 0xea, 0x73,
	0x58, 0x45, 0x30, 0xf0, 0x04, 0x3c, 0x3a, 0x87, 0x95, 0x19, 0x20, 0x5b, 0x8b, 0x07, 0x62, 0x6e,
	0x95, 0x30, 0xbc, 0x99, 0x66, 0x28, 0x07, 0xc8, 0x8e, 0x07, 0x77, 0x69, 0x46, 0x7d, 0x63, 0x02,
	0xd7, 0x34, 0x20, 0xb4, 0xc0, 0x1b, 0xe7, 0xb0, 0x4e, 0x70, 0x5d, 0x23, 0x5c, 0x73, 0x69, 0xae,
	0x29, 0x8e, 0x77, 0x27, 0x70, 0x4c, 0x70, 0x1b, 0x3b, 0x48, 0x7a, 0x24, 0x2e, 0x52, 0x07, 0x9a,
	0x4d, 0x0c, 0x12, 0x1a, 0x2f, 0xb1, 0x5f, 0x1b, 0x33, 0x48, 0xe2, 0xca, 0x3c, 0x00, 0xcb, 0x61,
	0xa5, 0xf0, 0x1f, 0xb7, 0xc1, 0x95, 0xb1, 0xa6, 0x05, 0xdf, 0x04, 0x8b, 0x94, 0x11, 0x09, 0xba,
	0xab, 0x4f, 0x2e, 0x6d, 0x8f, 0xc6, 0x66, 0x95, 0x81, 0xc0, 0x0f, 0x40, 0xd6, 0x72, 0xdb, 0x1a,
	0x0e, 0x1b, 0x81, 0x7b, 0x88, 0x1c, 0x16, 0x61, 0xc9, 0xfc, 0xe0, 0xef, 0x0c, 0x85, 0x4c, 0x14,
	0x06, 0xd6, 0x2c, 0xb7, 0x5d, 0x0c, 0xa1, 0xe0, 0x55, 0xb0, 0xd8, 0x77, 0x4d, 0x27, 0xf0, 0x89,
	0x23, 0xc9, 0xaa, 0xec, 0x0b, 0xbe, 0x0d, 0x2e, 0xb5, 0x5d, 0xc7, 0xa0, 0x7e, 0x54, 0x8b, 0xdc,
	0xdb, 0x02, 0x01, 0x82, 0x71, 0x55, 0x18, 0xff, 0xe1, 0x11, 0x98, 0xb3, 0xf5, 0x7e, 0x6e, 0x99,
	0x44, 0x37, 0x83, 0x39, 0xea, 0x6c, 0x45, 0xef, 0xfb, 0x7c, 0xc5, 0x35, 0xcc, 0x8e, 0x89, 0xbc,
	0xd3, 0xa1, 0x50, 0x90, 0x3b, 0xbc, 0x8f, 0x82, 0xc7, 0x24, 0xfa, 0xf6, 0x2d, 0xfd, 0x04, 0x79,
	0xbc, 0x3d, 0xf0, 0x49, 0xd4, 0x70, 0x1d, 0xde, 0x75, 0x10, 0x0b, 0xc6, 0xbc, 0x65, 0xfa, 0x01,
	0x32, 0x78, 0x1b, 0x13, 0x08, 0x5c, 0xbe, 0x8b, 0x02, 0xbe, 0xed, 0xe1, 0xa9, 0x40, 0x14, 0x7b,
	0x55, 0xcc, 0x10, 0xfe, 0x71, 0x06, 0xac, 0x74, 0x75, 0x1b, 0x69, 0x36, 0xf6, 0x86, 0x2b, 0xc4,
	0x75, 0xdf, 0x1f, 0x3f, 0x56, 0xb7, 0xa5, 0xc6, 0xee, 0x93, 0x3d, 0xdd, 0x46, 0x15, 0xd7, 0x40,
	0x7e, 0xde, 0x65, 0x42, 0x42, 0x5c, 0x84, 0x85, 0x44, 0x49, 0x49, 0xe5, 0x73, 0x24, 0x35, 0xc7,
	0x49, 0x8a, 0x85, 0xe0, 0xb1, 0x10, 0x13, 0xe5, 0x5d, 0xee, 0x32, 0xde, 0xf0, 0x1b, 0x3c, 0x19,
	0x40, 0xba, 0x4d, 0x46, 0xe2, 0xfa, 0x93, 0x3b, 0xe7, 0xc8, 0xdb, 0x40, 0xba, 0xbd, 0xb3, 0xda,
	0xd8, 0xd5, 0x1a, 0x92, 0x58, 0xd1, 0x54, 0xa9, 0x98, 0xff, 0x7e, 0xa8, 0x5c, 0x5c, 0x95, 0x14,
	0xf9, 0xd3, 0xf3, 0x95, 0x8b, 0x4b, 0xfd, 0x3e, 0x6a, 0x63, 0x70, 0x83, 0xc7, 0xec, 0x27, 0x09,
	0x4a, 0x64, 0x83, 0x5f, 0x80, 0xf5, 0xa8, 0x9f, 0xb1, 0x9f, 0xf2, 0x73, 0xab, 0x24, 0x3c, 0x67,
	0xc3, 0xf0, 0x4c, 0x66, 0x3c, 0x79, 0x81, 0x89, 0xb3, 0x1e, 0x89, 0xce, 0x3f, 0xd7, 0xbd, 0x28,
	0xf6, 0xfe, 0x74, 0x28, 0xac, 0xa8, 0xd9, 0x88, 0x10, 0xae, 0x82, 0x0d, 0xb0, 0x46, 0xa6, 0x2b,
	0xc8, 0xa7, 0x74, 0xd7, 0xce, 0xa5, 0x5b, 0xc0, 0xa0, 0x51, 0x3b, 0x53, 0x74, 0x57, 0x19, 0x19,
	0x42, 0x15, 0x01, 0x10, 0xdb, 0x65, 0x2e, 0x4b, 0x2c, 0xe1, 0x8d, 0x73, 0x34, 0x5b, 0x88, 0x80,
	0xf3, 0xb7, 0x43, 0x5e, 0x2a, 0xfa, 0x7a, 0x60, 0x7a, 0xc8, 0xe0, 0x71, 0x65, 0xd4, 0x06, 0x35,
	0x41, 0x18, 0xfe, 0x93, 0x0c, 0xd8, 0x88, 0xf5, 0x62, 0xb9, 0x5d, 0xb3, 0x9d, 0x5b, 0x27, 0xdd,
	0xb8, 0xb9, 0x5d, 0xc6, 0x5f, 0xba, 0x15, 0xb9, 0xc9, 0x9d, 0x39, 0x51, 0x29, 0x46, 0xb3, 0xaa,
	0x8d, 0x88, 0x23, 0x4f, 0x00, 0xf1, 0xcc, 0xea, 0x45, 0x4f, 0x0f, 0xf8, 0x43, 0xd3, 0x31, 0xb0,
	0x35, 0x11, 0x62, 0xb8, 0x53, 0x06, 0x3e, 0xe2, 0x8f, 0x7b, 0xc8, 0xe1, 0x11, 0x9e, 0xd3, 0xe8,
	0x78, 0x4a, 0x99, 0xe8, 0xd4, 0x07, 0x3e, 0x1f, 0xcb, 0x13, 0xf7, 0x5a, 0xdc, 0x5b, 0x84, 0x3a,
	0x9e, 0x59, 0x11, 0x3f, 0x4c, 0xe6, 0xdb, 0x1b, 0x64, 0x5c, 0x1e, 0x30, 0x49, 0xae, 0x46, 0xed,
	0xc4, 0x7f, 0xfb, 0x7d, 0x64, 0xf0, 0x18, 0xf4, 0x74, 0x28, 0xbc, 0xcd, 0x6a, 0xf8, 0x00, 0x0b,
	0x46, 0xa7, 0x7b, 0x01, 0xb2, 0xb1, 0x09, 0xc5, 0xa0, 0x0e, 0xaf, 0x3b, 0x27, 0xbc, 0x6f, 0xb9,
	0x49, 0xe3, 0xc6, 0x60, 0x78, 0xfa, 0x0e, 0x7f, 0x94, 0x01, 0x80, 0x30, 0xa6, 0xba, 0xe1, 0xce,
	0xd5, 0xcd, 0xf7, 0x98, 0x44, 0x00, 0x3b, 0x79, 0xaa, 0x80, 0xd3, 0xa1, 0xf0, 0xc9, 0xcf, 0xa9,
	0x16, 0xcc, 0x36, 0xa1, 0x11, 0xd2, 0x7e, 0xaa, 0x0c, 0x1b, 0x80, 0xaf, 0x06, 0x76, 0x5f, 0xf3,
	0x03, 0x3d, 0x40, 0xb9, 0x4d, 0xec, 0xc6, 0xf2, 0x4a, 0xc8, 0xfb, 0xf3, 0x81, 0xdd, 0x8f, 0x78,
	0xbf, 0x43, 0x78, 0x13, 0x38, 0xcc, 0x1c, 0x63, 0xa5, 0xf9, 0xf0, 0x0e, 0x42, 0x06, 0x19, 0xe4,
	0xc4, 0x15, 0x24, 0xd8, 0x61, 0xd8, 0x3a, 0x46, 0x14, 0xfe, 0xc5, 0x3c, 0xc8, 0xa6, 0xbc, 0x0d,
	0xcc, 0x81, 0xcb, 0x87, 0xf8, 0xab, 0xa0, 0x07, 0xa8, 0xeb, 0x7a, 0x27, 0x9a, 0xe4, 0xb7, 0x5d,
	0x2f, 0xe0, 0x66, 0xe0, 0x15, 0xb0, 0x99, 0xae, 0x29, 0x34, 0x76, 0xb9, 0x0c, 0xbc, 0x03, 0x6e,
	0xa4, 0x8b, 0xc5, 0x20, 0xd0, 0xdb, 0x87, 0x45, 0xd4, 0x41, 0x8e, 0x8f, 0xb8, 0x59, 0x78, 0x15,
	0xc0, 0x34, 0xc0, 0xbe, 0x1b, 0xf4, 0xb8, 0x39, 0x78, 0x19, 0x70, 0x67, 0xe8, 0xd5, 0xb8, 0x79,
	0x78, 0x13, 0xe4, 0xc6, 0xf1, 0x57, 0xf5, 0x36, 0xe2, 0x16, 0xe0, 0x16, 0xb8, 0x7a, 0xa6, 0xf6,
	0x08, 0x39, 0x41, 0xc5, 0x7c, 0xc9, 0x2d, 0x8e, 0xd2, 0xab, 0x17, 0xb9, 0x25, 0x78, 0x03, 0x5c,
	0x4b, 0x97, 0x3e, 0x1b, 0x98, 0xed, 0x43, 0xac, 0x21, 0x6e, 0x79, 0x02, 0xb9, 0x27, 0xef, 0x7f,
	0xc8, 0xad, 0xc0, 0x6b, 0xe0, 0xd2, 0x99, 0x76, 0x79, 0xc8, 0xd1, 0x39, 0x00, 0x05, 0x70, 0x3b,
	0x5d, 0xa1, 0xba, 0x2d, 0x37, 0x28, 0x22, 0x3f, 0xf0, 0x06, 0x6d, 0x6c, 0x31, 0xdc, 0x2a, 0xbc,
	0x0e, 0xae, 0xa4, 0x61, 0x6a, 0xee, 0x31, 0xf2, 0x06, 0x7d, 0x6e, 0x6d, 0x94, 0xe7, 0x2e, 0xd2,
	0x83, 0x81, 0x87, 0x0c, 0x2e, 0x3b, 0x5a, 0x57, 0xd3, 0x7d, 0x3f, 0x30, 0x6d, 0xc4, 0xad, 0x8f,
	0xb2, 0x2d, 0xb8, 0xb6, 0x3d, 0x70, 0xcc, 0xe0, 0x44, 0x6b, 0xf6, 0x0d, 0x3d, 0x40, 0xdc, 0xc6,
	0xa8, 0xaa, 0x2b, 0xa6, 0xdf, 0xe6, 0x38, 0x78, 0x17, 0xdc, 0x1a, 0xc1, 0xed, 0xa3, 0xc0, 0xc4,
	0x6e, 0x46, 0x7b, 0x7a, 0xf4, 0x94, 0xdb, 0x1c, 0x6d, 0x6e, 0x35, 0xe8, 0x21, 0x8f, 0x83, 0xa3,
	0x0a, 0x2c, 0xe9, 0x96, 0xe5, 0x1e, 0x23, 0xe4, 0x70, 0x97, 0x84, 0x1f, 0xdd, 0x06, 0xeb, 0x69,
	0x1f, 0x05, 0x21, 0x58, 0x6f, 0xec, 0x6a, 0x85, 0xaa, 0x52, 0xd4, 0x44, 0xb9, 0x22, 0x2b, 0x7b,
	0xdc, 0x4c, 0xb2, 0xec, 0xcb, 0x6a, 0xb5, 0x22, 0x15, 0xb9, 0x0c, 0x96, 0x35, 0x2c, 0x2b, 0xca,
	0xf5, 0xbd, 0xa6, 0x5c, 0xc7, 0xb0, 0xb3, 0xd8, 0xcc, 0xce, 0x94, 0x4b, 0x45, 0x6e, 0x2e, 0x59,
	0x5c, 0x6f, 0x48, 0x62, 0xb9, 0x51, 0x92, 0x8a, 0xdc, 0x3c, 0x36, 0xd7, 0xb0, 0x58, 0x56, 0x9e,
	0x37, 0xcb, 0x8a, 0xa4, 0x8a, 0xf9, 0xb2, 0xc4, 0x2d, 0x24, 0xe9, 0x37, 0xa4, 0xb2, 0x54, 0xab,
	0xaa, 0x0d, 0xa9, 0x48, 0xcd, 0x24, 0x2a, 0x17, 0x9b, 0x4a, 0x03, 0x73, 0x5d, 0x82, 0xf7, 0xc0,
	0x9d, 0x71, 0x74, 0xb4, 0x17, 0x92, 0xa8, 0xca, 0xca, 0x5e, 0x75, 0x77, 0x97, 0x5b, 0xc6, 0xaa,
	0x18, 0x91, 0x41, 0xcb, 0x97, 0x65, 0x65, 0x9f, 0x5b, 0x81, 0x3c, 0xb8, 0x19, 0x55, 0x4a, 0x65,
	0xa9, 0xd0, 0x90, 0x8a, 0x5a, 0xa3, 0x1a, 0xf1, 0xe6, 0x00, 0x56, 0x71, 0x08, 0x51, 0x50, 0xe5,
	0x46, 0xbe, 0x5a, 0xad, 0x63, 0x91, 0x56, 0x71, 0xb7, 0x47, 0x22, 0x55, 0x6a, 0x45, 0xb1, 0x22,
	0xee, 0x49, 0xf9, 0xaa, 0xd2, 0xac, 0x73, 0x6b, 0x49, 0xa4, 0x5d, 0x49, 0xde, 0x53, 0xb4, 0xa2,
	0x24, 0x36, 0x4a, 0x5c, 0x16, 0x6e, 0x82, 0x6c, 0x58, 0x51, 0x2b, 0x89, 0x75, 0x89, 0x5b, 0x87,
	0x97, 0xc0, 0x46, 0x2c, 0x5f, 0x53, 0x51, 0xa4, 0x22, 0xb7, 0x91, 0x24, 0x50, 0xdd, 0xdd, 0x95,
	0x94, 0xba, 0x94, 0x6f, 0xee, 0xee, 0x72, 0x1c, 0xb6, 0xd1, 0x08, 0xba, 0x24, 0x4b, 0xe5, 0xa2,
	0x56, 0x28, 0x89, 0xea, 0x9e, 0xc4, 0x6d, 0xa6, 0xfa, 0x40, 0xaa, 0x54, 0x35, 0x82, 0x01, 0x93,
	0xa4, 0x24, 0x45, 0x52, 0xf7, 0x0e, 0x68, 0xc5, 0xa5, 0xa4, 0xae, 0x55, 0xb1, 0x28, 0x37, 0xeb,
	0x25, 0x49, 0x2c, 0x73, 0x97, 0x93, 0x08, 0x25, 0xa2, 0x2f, 0x8a, 0x70, 0x25, 0x29, 0x69, 0xbe,
	0xa9, 0x2a, 0xb8, 0x0f, 0xae, 0xc2, 0x5b, 0xe0, 0xfa, 0x19, 0xe8, 0xea, 0x73, 0x49, 0xc5, 0x3f,
	0xa5, 0x22, 0x77, 0x2d, 0xd9, 0xe0, 0xa6, 0x2a, 0x2b, 0x12, 0x97, 0x4b, 0xf6, 0x65, 0xbe, 0x2c,
	0x49, 0x45, 0x4c, 0xe7, 0x7a, 0x92, 0x6b, 0x51, 0x8a, 0x5b, 0xbc, 0x95, 0x04, 0xaf, 0x88, 0x45,
	0xad, 0x22, 0x97, 0xf7, 0xb9, 0x1b, 0xa9, 0x52, 0x69, 0x4f, 0x24, 0xa2, 0xdf, 0x4c, 0x0a, 0xa3,
	0x4a, 0x7b, 0x92, 0x52, 0x55, 0x58, 0xbf, 0x60, 0x52, 0xb7, 0x92, 0x5d, 0x56, 0x11, 0xd5, 0x7d,
	0xa9, 0xb8, 0x5b, 0x55, 0x69, 0xcf, 0xdc, 0xc6, 0x1e, 0x31, 0xac, 0x53, 0xaa, 0x98, 0x9c, 0xac,
	0xec, 0x25, 0x90, 0xef, 0x24, 0x05, 0xac, 0xd7, 0x24, 0x6c, 0x43, 0xd8, 0x14, 0x38, 0x3e, 0x89,
	0x99, 0xb0, 0x10, 0xad, 0xd6, 0xac, 0xd4, 0xf6, 0x65, 0x85, 0xbb, 0x8b, 0x07, 0xf2, 0x38, 0x80,
	0x66, 0x5d, 0x52, 0xa9, 0x6a, 0x85, 0xa4, 0x25, 0x27, 0x41, 0x48, 0x3f, 0xb2, 0x0e, 0xbe, 0x97,
	0xb2, 0xe4, 0x6a, 0x51, 0xac, 0x55, 0x6b, 0x35, 0x49, 0xd5, 0x4a, 0x07, 0x35, 0x89, 0xbb, 0x3f,
	0x89, 0xc2, 0xae, 0xac, 0xd6, 0x1b, 0x5a, 0xbe, 0x5c, 0xad, 0x16, 0xb9, 0x37, 0xb0, 0x3b, 0x1a,
	0x07, 0x44, 0xcc, 0x56, 0x6b, 0xc8, 0x15, 0x89, 0xfb, 0xd6, 0x24, 0x42, 0x05, 0x5c, 0x28, 0xd6,
	0x1a, 0x4d, 0x55, 0xe2, 0x1e, 0x4c, 0x6a, 0x73, 0x55, 0xd1, 0xf6, 0xe5, 0x72, 0x99, 0x7b, 0x08,
	0xef, 0x03, 0x3e, 0x02, 0x10, 0x15, 0xa5, 0xda, 0xd0, 0xea, 0x2f, 0xe4, 0x46, 0xa1, 0xa4, 0xed,
	0xaa, 0xd5, 0x8a, 0x56, 0x91, 0xca, 0x92, 0xc4, 0x7d, 0x1b, 0xbe, 0x01, 0xee, 0x8e, 0xe9, 0x74,
	0x4d, 0xa9, 0x12, 0xaa, 0x58, 0xec, 0xc2, 0x3e, 0xf7, 0x28, 0xe9, 0x2f, 0x54, 0xa9, 0xa6, 0x56,
	0xf7, 0x54, 0xb1, 0x82, 0xfd, 0xd1, 0x9b, 0x93, 0x54, 0xab, 0x8a, 0x7b, 0x12, 0x55, 0xed, 0x63,
	0x1c, 0x9b, 0xc6, 0xf1, 0x28, 0xc9, 0x7b, 0x25, 0xee, 0xad, 0xa4, 0x46, 0xea, 0x8a, 0x5c, 0x93,
	0x54, 0xaa, 0xed, 0x04, 0x85, 0xed, 0x64, 0x63, 0x43, 0xe7, 0x96, 0x74, 0x31, 0x6f, 0x27, 0xa5,
	0x48, 0xdb, 0x95, 0x56, 0x97, 0xcb, 0x92, 0xd2, 0xe0, 0xde, 0x49, 0xf2, 0x89, 0x1c, 0xa4, 0x26,
	0xd6, 0xf1, 0x47, 0x0d, 0xcb, 0xa4, 0x72, 0xef, 0x26, 0x1d, 0x6e, 0x5d, 0xac, 0xd5, 0xa4, 0x22,
	0xf7, 0x04, 0x3e, 0x06, 0x0f, 0xc7, 0xba, 0xb8, 0x92, 0x5c, 0x94, 0xb4, 0xa6, 0x52, 0x96, 0xea,
	0x75, 0x8d, 0x9a, 0x69, 0x91, 0x7b, 0x2f, 0xc9, 0x25, 0x05, 0x1d, 0x9b, 0xda, 0xfb, 0xc9, 0xd6,
	0x94, 0xc4, 0x72, 0xb9, 0xfa, 0x42, 0x92, 0x14, 0x2d, 0x5f, 0xad, 0xe4, 0xf1, 0xf8, 0x2d, 0x72,
	0x1f, 0xc0, 0xdb, 0x60, 0x6b, 0x14, 0xa0, 0x51, 0x52, 0xe5, 0x72, 0x59, 0x52, 0xb9, 0xa7, 0x49,
	0x9f, 0x19, 0xfb, 0x0d, 0xdc, 0xf5, 0x54, 0x0e, 0xee, 0xc3, 0x89, 0x26, 0x24, 0xaa, 0x45, 0x4d,
	0xda, 0xdd, 0x95, 0x0a, 0x0d, 0xee, 0x3b, 0x49, 0x0b, 0x49, 0xc9, 0x9a, 0x84, 0xfa, 0x08, 0x7e,
	0x0b, 0x08, 0xf1, 0x38, 0x2f, 0xca, 0x7b, 0x4d, 0x45, 0x6b, 0xe6, 0x49, 0x63, 0xca, 0x65, 0xa9,
	0xa1, 0xa9, 0x52, 0x5d, 0xae, 0x37, 0xb8, 0x9d, 0xa4, 0x25, 0xa5, 0xe1, 0xca, 0x62, 0x3d, 0x02,
	0xfb, 0x38, 0xc9, 0x34, 0x05, 0xb6, 0x2b, 0xab, 0x52, 0x08, 0xf5, 0x5d, 0xf8, 0x00, 0xdc, 0x3b,
	0x0b, 0x55, 0xaf, 0x88, 0xe5, 0xf2, 0x19, 0xae, 0x9f, 0x8c, 0x93, 0x8e, 0x01, 0x26, 0xd9, 0xfe,
	0xda, 0x38, 0xe9, 0x28, 0x5c, 0x92, 0xef, 0xa7, 0xc9, 0xae, 0x89, 0x43, 0x55, 0xdc, 0x77, 0x9f,
	0xa5, 0x1c, 0x18, 0xa3, 0x53, 0xa4, 0xfe, 0x49, 0x4c, 0xca, 0x32, 0x06, 0x59, 0xdb, 0x15, 0x89,
	0xa3, 0xcd, 0x27, 0x23, 0x08, 0x6b, 0x8e, 0x5c, 0xa9, 0x34, 0x15, 0x89, 0x2b, 0x24, 0xc7, 0x19,
	0x6d, 0x00, 0xab, 0x29, 0xa6, 0x02, 0x1a, 0x16, 0x99, 0x55, 0x48, 0x49, 0x6a, 0x35, 0x55, 0x7a,
	0x2e, 0x29, 0x0d, 0x16, 0xeb, 0x76, 0x93, 0xc6, 0x58, 0x79, 0x5e, 0xd1, 0xf2, 0xd8, 0x07, 0x34,
	0x9a, 0x0a, 0x31, 0x9a, 0xea, 0x0b, 0xf1, 0xb9, 0xc4, 0xed, 0x25, 0x47, 0x4e, 0x6c, 0x6b, 0x49,
	0xf7, 0x5a, 0x4a, 0x9a, 0x5b, 0x0c, 0xf2, 0xac, 0x29, 0x17, 0xf6, 0x49, 0xc0, 0xe1, 0xe4, 0xa4,
	0x5f, 0x8c, 0x21, 0xf6, 0x64, 0x51, 0x69, 0x70, 0x9f, 0x27, 0x55, 0x96, 0xb0, 0x66, 0x59, 0x39,
	0xe0, 0xf6, 0x53, 0xb1, 0x2b, 0xaa, 0x93, 0x15, 0xad, 0x24, 0x95, 0xcb, 0x5c, 0x79, 0x3c, 0xe7,
	0xbd, 0x52, 0xb5, 0xde, 0xd0, 0x2a, 0xd5, 0xa2, 0xc4, 0x55, 0x92, 0x86, 0x5e, 0x91, 0x15, 0x79,
	0x9c, 0x2b, 0x54, 0x92, 0x12, 0x54, 0xf3, 0xf5, 0x42, 0x53, 0x95, 0x8a, 0x5a, 0xbd, 0x52, 0xdd,
	0x97, 0xb8, 0x6a, 0xd2, 0x39, 0xd5, 0x44, 0x55, 0x2c, 0x94, 0x9a, 0x0d, 0x49, 0x13, 0x0b, 0x0d,
	0xf9, 0xb9, 0xc4, 0xd5, 0x46, 0xfa, 0xe3, 0xf3, 0x66, 0xa5, 0x86, 0x3b, 0xf1, 0xd9, 0xf8, 0x56,
	0xed, 0x8b, 0x6a, 0x83, 0x53, 0xc7, 0x0f, 0x70, 0x5c, 0xa7, 0x15, 0xc5, 0x7a, 0x89, 0xab, 0xa7,
	0xc8, 0x62, 0x80, 0xaa, 0x42, 0x87, 0x7e, 0x23, 0x39, 0x25, 0x20, 0x2e, 0x5a, 0xab, 0x2a, 0xe5,
	0x03, 0xae, 0x99, 0x64, 0x57, 0x7f, 0x21, 0x57, 0xf0, 0x04, 0x51, 0x2b, 0x34, 0xd5, 0xba, 0xc4,
	0x3d, 0x4f, 0x52, 0xdb, 0x55, 0x25, 0xe9, 0x4b, 0x49, 0x93, 0x95, 0x5a, 0xb3, 0xc1, 0xbd, 0x38,
	0x47, 0x90, 0x02, 0xf6, 0x13, 0x5f, 0xa4, 0x66, 0x93, 0x55, 0xa5, 0xda, 0x68, 0xd6, 0x25, 0xed,
	0x1d, 0xee, 0x20, 0x69, 0x54, 0x6a, 0x53, 0x91, 0xb4, 0x7a, 0x43, 0x95, 0x94, 0xbd, 0x46, 0x89,
	0xfb, 0x32, 0x35, 0x69, 0xc1, 0x55, 0x25, 0xb1, 0xde, 0x90, 0xb8, 0xef, 0x8d, 0x94, 0x93, 0xf0,
	0xcf, 0xfd, 0xa5, 0xa4, 0xe1, 0xb2, 0x72, 0x32, 0xd6, 0x7e, 0x3d, 0x15, 0x53, 0x70, 0xc5, 0x73,
	0xb1, 0x52, 0x93, 0x55, 0x89, 0xfb, 0x8d, 0x91, 0x1a, 0x55, 0xda, 0xc5, 0x33, 0x43, 0x4e, 0x4b,
	0xaa, 0x81, 0xd4, 0xd4, 0x54, 0xa9, 0x20, 0xd7, 0xe5, 0xaa, 0xc2, 0x7d, 0x7f, 0x04, 0x4b, 0xdc,
	0x93, 0xcb, 0x72, 0xe3, 0x80, 0xd3, 0x93, 0xad, 0xd9, 0x53, 0xc5, 0x5a, 0x0d, 0xcf, 0x2c, 0x4a,
	0xd5, 0xea, 0x3e, 0xd7, 0x4a, 0x0e, 0x91, 0x54, 0x95, 0x56, 0x17, 0x77, 0xa5, 0x5d, 0xb1, 0x5c,
	0xe6, 0xda, 0xc9, 0x21, 0x92, 0x86, 0x29, 0x8b, 0x8d, 0x02, 0x9e, 0x4f, 0x1b, 0x93, 0xc9, 0x44,
	0xf3, 0x2b, 0x94, 0xb4, 0x34, 0x71, 0xb7, 0x21, 0xa9, 0x78, 0x06, 0x17, 0x0e, 0xe3, 0xce, 0x88,
	0xc6, 0xf7, 0x95, 0x6a, 0x61, 0xbf, 0xda, 0x6c, 0x70, 0xdd, 0x91, 0x46, 0xcb, 0x95, 0xbc, 0x58,
	0x16, 0x95, 0x82, 0xc4, 0xf5, 0x26, 0x86, 0x5f, 0x0c, 0xd7, 0x90, 0x2a, 0x35, 0xce, 0x4c, 0x82,
	0xd4, 0xc4, 0x7a, 0x1d, 0x4f, 0x32, 0x34, 0x59, 0x69, 0x48, 0x6a, 0x41, 0xaa, 0x35, 0xb0, 0xea,
	0xbe, 0x4a, 0xb9, 0xbd, 0xd0, 0xba, 0x94, 0x2a, 0x8b, 0x01, 0x75, 0xee, 0x30, 0x39, 0xb3, 0xad,
	0x35, 0xd5, 0x3d, 0xb1, 0x51, 0x55, 0x0f, 0x38, 0x2b, 0x59, 0x4c, 0x85, 0xc6, 0x2d, 0xb5, 0x47,
	0xba, 0xbc, 0x56, 0x16, 0xf7, 0x9a, 0x12, 0xe7, 0x8c, 0xb4, 0xa4, 0xde, 0xac, 0x49, 0xaa, 0x52,
	0x7d, 0x2e, 0x72, 0x6e, 0x32, 0xf6, 0x32, 0xf8, 0x7e, 0x92, 0x10, 0x26, 0x4d, 0xfc, 0xa8, 0x54,
	0xe4, 0xbe, 0x4e, 0xaf, 0x52, 0xc4, 0x8a, 0xb6, 0x57, 0xae, 0xbe, 0xa8, 0x73, 0x5e, 0x52, 0xc7,
	0x44, 0x81, 0x12, 0x0e, 0x6d, 0x8d, 0xaa, 0x26, 0xca, 0x2a, 0xe7, 0x27, 0xe3, 0x6a, 0xa1, 0x5a,
	0xa9, 0x49, 0x0d, 0x19, 0x0f, 0x73, 0xed, 0x85, 0xac, 0x28, 0x92, 0xca, 0x05, 0x49, 0x6f, 0x94,
	0xac, 0x2f, 0x57, 0xf1, 0xec, 0x60, 0x90, 0x1a, 0xf2, 0x74, 0x7a, 0x1a, 0xfa, 0xfe, 0xa3, 0xa4,
	0x1f, 0x8a, 0x94, 0x5c, 0x93, 0x14, 0xb1, 0xdc, 0x38, 0x08, 0x81, 0x8e, 0x93, 0xfc, 0x63, 0x5f,
	0x53, 0x94, 0x6a, 0xe5, 0xea, 0x81, 0x54, 0xe4, 0x5e, 0x26, 0x7b, 0x0a, 0x4f, 0xc0, 0xaa, 0x95,
	0xbc, 0xd8, 0x48, 0xf9, 0xe2, 0x93, 0xa4, 0xa7, 0x6d, 0xa8, 0xa2, 0xf2, 0x4c, 0xab, 0xd7, 0x0e,
	0x58, 0xe5, 0x0f, 0x92, 0x23, 0x80, 0x56, 0xd2, 0xb9, 0x10, 0xf7, 0x97, 0x53, 0x83, 0x13, 0xab,
	0xa5, 0x51, 0x13, 0x0b, 0xfb, 0xdc, 0x6f, 0xa6, 0x66, 0x12, 0x51, 0x39, 0x69, 0x81, 0xa4, 0xec,
	0x49, 0x2a, 0xf7, 0x5b, 0xf0, 0xe6, 0xb8, 0xc5, 0x1b, 0x5d, 0x39, 0xbd, 0xca, 0xc0, 0xad, 0xd8,
	0x6a, 0x0b, 0x65, 0xb9, 0x46, 0x56, 0x1e, 0xe5, 0xaa, 0x58, 0xe4, 0x7e, 0x98, 0x49, 0x61, 0xd6,
	0x0e, 0xb4, 0x42, 0x59, 0xac, 0xd7, 0x29, 0x0d, 0xee, 0xb7, 0x33, 0x90, 0x03, 0xab, 0xd1, 0x88,
	0x11, 0xeb, 0xdc, 0x5f, 0xcd, 0x08, 0x6f, 0x81, 0xe5, 0x70, 0x47, 0x14, 0x6e, 0x80, 0xe4, 0x9e,
	0x28, 0x37, 0x0b, 0x39, 0xb0, 0x16, 0x16, 0xe4, 0xcb, 0x4d, 0x89, 0x9b, 0x13, 0xfe, 0x7c, 0x05,
	0xac, 0x25, 0x4f, 0x81, 0x5e, 0x6f, 0x3f, 0x9d, 0x07, 0x6b, 0xb6, 0xfe, 0x52, 0xa3, 0xdb, 0xe1,
	0xda, 0x3b, 0x2c, 0xdb, 0x00, 0xd8, 0xfa, 0xcb, 0x1a, 0x29, 0x7a, 0xe7, 0x0c, 0xc4, 0xbb, 0x6c,
	0x03, 0x3d, 0x86, 0x78, 0xf7, 0x0c, 0xc4, 0x93, 0xdc, 0xfc, 0x19, 0x88, 0x27, 0xf0, 0x03, 0x90,
	0x75, 0x74, 0x1b, 0x69, 0x96, 0xcb, 0x76, 0xed, 0x17, 0x26, 0xed, 0xda, 0x63, 0xb0, 0x32, 0x83,
	0x82, 0x37, 0xc1, 0x4a, 0x7c, 0x9a, 0xb3, 0x44, 0x4e, 0xf0, 0xe3, 0x02, 0xf8, 0x11, 0x58, 0xb5,
	0x6d, 0xad, 0xed, 0x99, 0x01, 0xf2, 0x4c, 0x9d, 0x9d, 0x5f, 0xe5, 0x52, 0x27, 0x62, 0xdb, 0x95,
	0x4a, 0x81, 0xd5, 0xab, 0xc0, 0xb6, 0xc3, 0xdf, 0xf0, 0x10, 0x00, 0xc7, 0x35, 0x90, 0x66, 0xda,
	0x7a, 0x17, 0x91, 0x03, 0x94, 0x95, 0x7c, 0x39, 0xdc, 0x26, 0x53, 0x5c, 0x03, 0xf1, 0x32, 0xae,
	0x39, 0x1d, 0x0a, 0xdb, 0xbb, 0xa6, 0x85, 0xb0, 0x50, 0xe1, 0x36, 0x38, 0x41, 0x89, 0xce, 0xee,
	0xd9, 0x7e, 0x33, 0x26, 0xc6, 0x1f, 0x99, 0xe8, 0x38, 0xde, 0x24, 0xc3, 0x45, 0x84, 0x08, 0x3c,
	0x00, 0xc0, 0x6c, 0xbb, 0x0e, 0x63, 0x96, 0x25, 0xcc, 0x76, 0xc2, 0x23, 0x5e, 0xca, 0xac, 0xed,
	0x3a, 0xa7, 0x43, 0xe1, 0xd6, 0x8b, 0x9e, 0xd9, 0xee, 0xf1, 0x18, 0xf8, 0x2c, 0x03, 0x5b, 0xef,
	0x27, 0xb6, 0xfb, 0xda, 0xae, 0x43, 0x49, 0x7f, 0x08, 0x16, 0xe8, 0x11, 0xe6, 0xfa, 0xd8, 0xb4,
	0x8c, 0x3c, 0xf7, 0x6a, 0x28, 0xcc, 0x26, 0x53, 0x27, 0x54, 0x0a, 0x0f, 0x35, 0xb0, 0x66, 0xb9,
	0xba, 0x83, 0x3c, 0xb2, 0x6d, 0xea, 0xb3, 0x7d, 0xd3, 0xef, 0x32, 0xa9, 0x96, 0xca, 0xa4, 0xce,
	0x3f, 0x1d, 0x0a, 0x77, 0x15, 0x5c, 0x8f, 0x1b, 0x4f, 0x36, 0x1d, 0xc9, 0x56, 0xba, 0x79, 0x84,
	0x78, 0xdd, 0xe7, 0x29, 0x81, 0x78, 0xf7, 0x78, 0x95, 0x16, 0x10, 0x04, 0xf8, 0x29, 0x00, 0xd1,
	0xd1, 0xa2, 0x9f, 0xe3, 0xc8, 0xce, 0xf7, 0x9d, 0x74, 0xdf, 0x44, 0x3b, 0xd5, 0x32, 0x3b, 0x23,
	0x52, 0x13, 0x28, 0xe1, 0x41, 0xcb, 0xe6, 0xaf, 0xf8, 0xa0, 0x65, 0xeb, 0x10, 0x80, 0xd8, 0x68,
	0xe0, 0x2d, 0x00, 0xba, 0x9e, 0x3b, 0xe8, 0x6b, 0x71, 0x2e, 0x8a, 0xba, 0x42, 0x4a, 0xc8, 0x1e,
	0xf0, 0x3d, 0x90, 0x6d, 0x87, 0xfb, 0x5a, 0x71, 0xbe, 0x87, 0xba, 0x16, 0x16, 0x12, 0xa0, 0xeb,
	0x60, 0x99, 0x1c, 0x63, 0xe3, 0x7a, 0x9a, 0x86, 0xb2, 0x64, 0xeb, 0x04, 0x7f, 0xeb, 0x5f, 0xcd,
	0x82, 0xcd, 0x11, 0x35, 0xc0, 0x4f, 0xc1, 0x4a, 0x7c, 0x2c, 0x9b, 0x99, 0xdc, 0xb3, 0x0b, 0xa9,
	0x9e, 0x8d, 0x71, 0xa0, 0x08, 0x00, 0x19, 0x8c, 0x5a, 0xe2, 0x4c, 0x3e, 0xbb, 0x2d, 0x11, 0xcd,
	0xd3, 0x21, 0xb9, 0x73, 0x89, 0x9e, 0xc4, 0xd7, 0xaa, 0xb2, 0xd2, 0xa8, 0x6b, 0x4a, 0xf5, 0xb9,
	0x5c, 0x90, 0xd4, 0x15, 0x82, 0x45, 0x52, 0x7f, 0xfe, 0x69, 0x06, 0xac, 0x52, 0x1a, 0x71, 0xfe,
	0x4c, 0x36, 0xff, 0x3b, 0x99, 0x70, 0x8f, 0x9f, 0x92, 0xe1, 0xab, 0x47, 0xc8, 0xf3, 0x4c, 0x03,
	0x8f, 0x94, 0x56, 0xf8, 0x9b, 0x25, 0x28, 0x74, 0x5c, 0x8f, 0xf6, 0x0a, 0x86, 0x64, 0x65, 0xac,
	0x2f, 0x22, 0x49, 0xb7, 0x79, 0x5e, 0xee, 0x90, 0x74, 0x0a, 0xd2, 0x89, 0x03, 0x1f, 0xf9, 0x69,
	0x80, 0x07, 0x7e, 0x12, 0x3f, 0x3e, 0xa8, 0x20, 0x85, 0x24, 0xa7, 0x49, 0xf8, 0xd9, 0x5c, 0xe2,
	0x60, 0xb1, 0xa2, 0xf7, 0xeb, 0x81, 0xeb, 0x21, 0x39, 0x40, 0xf6, 0xeb, 0x39, 0xc2, 0x1b, 0xc9,
	0x63, 0x04, 0xda, 0x8d, 0xf1, 0x5e, 0xff, 0x0f, 0x33, 0xe0, 0xb2, 0x87, 0x8e, 0x75, 0xcf, 0xd0,
	0x2c, 0xd7, 0x0d, 0xb0, 0x2d, 0x51, 0xc0, 0x45, 0x32, 0x9a, 0xab, 0xa1, 0x56, 0x54, 0x02, 0xc3,
	0x97, 0x19, 0xcc, 0xe9, 0x50, 0x78, 0xdc, 0xc0, 0xee, 0x21, 0xe1, 0x3f, 0x42, 0x7c, 0x6c, 0x84,
	0x9e, 0x6b, 0x59, 0x78, 0x24, 0xe9, 0x3c, 0x25, 0x1e, 0xb5, 0x0f, 0xd2, 0xef, 0x90, 0x0e, 0x91,
	0xe1, 0x03, 0xb0, 0xd0, 0xf7, 0xcc, 0x76, 0x98, 0x0a, 0x71, 0xe6, 0x18, 0x29, 0x95, 0x20, 0xf5,
	0xd3, 0xa1, 0xb0, 0xa8, 0x52, 0x68, 0x18, 0x80, 0xf5, 0xfe, 0xc0, 0x6b, 0xf7, 0x74, 0x1f, 0x69,
	0x96, 0x69, 0x9b, 0x01, 0x75, 0xcf, 0xf9, 0x4a, 0x78, 0x16, 0x54, 0x63, 0xb5, 0x7c, 0x19, 0xd7,
	0x9e, 0x0e, 0x85, 0x37, 0x4b, 0xee, 0x31, 0x6f, 0xeb, 0xce, 0x09, 0x1f, 0x98, 0x36, 0xe9, 0x10,
	0xd3, 0x67, 0x02, 0xf2, 0x6d, 0xdd, 0xc1, 0x43, 0x2b, 0xa4, 0x18, 0x4b, 0x9c, 0x0d, 0x8b, 0x08,
	0x15, 0x68, 0x00, 0xe0, 0xbb, 0x5e, 0xa0, 0x91, 0xa1, 0x42, 0x8f, 0x53, 0xf3, 0x52, 0xe8, 0x60,
	0xeb, 0xae, 0x17, 0xf0, 0xa4, 0xe6, 0x74, 0x28, 0x3c, 0x20, 0x5f, 0xad, 0x13, 0xca, 0x86, 0x94,
	0x92, 0xd1, 0xec, 0xf0, 0xba, 0xd5, 0xeb, 0xeb, 0x2d, 0x14, 0x98, 0x6d, 0xdd, 0xb2, 0x4e, 0x62,
	0x3b, 0xc7, 0x84, 0xf7, 0x30, 0x9c, 0xf0, 0x7b, 0x4b, 0xe9, 0xae, 0x8f, 0x52, 0x2b, 0x5e, 0xaf,
	0xeb, 0xef, 0xa7, 0x92, 0xb5, 0x46, 0x83, 0x12, 0x4d, 0xc3, 0xca, 0x81, 0x25, 0x0f, 0xf9, 0x1d,
	0xd3, 0x8a, 0x46, 0x31, 0xfb, 0xc4, 0x5e, 0xd8, 0x32, 0x9d, 0x43, 0x9a, 0xf3, 0xb4, 0xfa, 0xe4,
	0xee, 0xf8, 0x74, 0x8f, 0x6d, 0xfa, 0xab, 0x6c, 0x3a, 0x87, 0x2a, 0x85, 0x87, 0xbf, 0x9f, 0x01,
	0xab, 0x1e, 0x0a, 0x06, 0x9e, 0xa3, 0xe1, 0x82, 0x54, 0x22, 0x4a, 0x62, 0xac, 0x1f, 0xbc, 0x1a,
	0x0a, 0x73, 0x61, 0xca, 0x92, 0x4a, 0xe0, 0x79, 0x4c, 0xe6, 0x74, 0x28, 0x3c, 0xa5, 0x21, 0x03,
	0x63, 0xf3, 0xc7, 0x88, 0xef, 0xba, 0xd8, 0xac, 0xc8, 0xd9, 0x91, 0x67, 0x76, 0x7b, 0xc1, 0x5b,
	0x6d, 0xcb, 0x6c, 0x1f, 0x9a, 0x4e, 0x97, 0x26, 0x99, 0x91, 0x7e, 0xc4, 0x42, 0xc4, 0x03, 0x89,
	0xb2, 0xc7, 0xd4, 0xe0, 0x5f, 0xcf, 0x00, 0xe0, 0xe9, 0x86, 0xe9, 0x6a, 0x1d, 0x0f, 0x7d, 0x4d,
	0x4c, 0x7b, 0x36, 0xdf, 0x8d, 0xf8, 0xe2, 0x1a, 0x7e, 0xd7, 0x43, 0x5f, 0x6f, 0x9f, 0x0e, 0x85,
	0xd2, 0x8b, 0x1e, 0x22, 0xa7, 0x67, 0x88, 0x27, 0x28, 0x7c, 0x30, 0x70, 0x90, 0xc7, 0x77, 0x5d,
	0x1c, 0x2b, 0x68, 0xc8, 0x2a, 0x1c, 0x54, 0x45, 0xbe, 0x56, 0x14, 0xa9, 0x38, 0x09, 0xe6, 0xbc,
	0xe9, 0xf3, 0x3e, 0xb2, 0x10, 0x39, 0xec, 0x88, 0xbb, 0x95, 0xd0, 0xc1, 0xf4, 0xe1, 0x1f, 0x66,
	0x00, 0xf8, 0x81, 0xeb, 0xda, 0x9a, 0xdf, 0xd6, 0x2d, 0x44, 0x02, 0xff, 0x6c, 0xec, 0x7a, 0xc0,
	0x97, 0xae, 0x6b, 0xf3, 0x75, 0x5c, 0x75, 0x3a, 0x14, 0xba, 0xd8, 0x58, 0x31, 0x30, 0x3d, 0xb0,
	0x23, 0x6c, 0xfa, 0xba, 0x83, 0x2c, 0x1c, 0x3e, 0x07, 0x96, 0xc1, 0xb7, 0xb0, 0x93, 0x11, 0x3b,
	0x1d, 0xd4, 0x0e, 0xa8, 0x6f, 0x21, 0x44, 0xc3, 0xd1, 0x68, 0xeb, 0x7d, 0xbe, 0xeb, 0x99, 0x06,
	0xd6, 0x20, 0xf2, 0x49, 0x86, 0x17, 0x89, 0xe5, 0x44, 0xa1, 0x86, 0xee, 0xf7, 0x10, 0xab, 0x8a,
	0xe5, 0xc4, 0xcc, 0x08, 0x77, 0xec, 0x15, 0x56, 0xfc, 0x40, 0xf7, 0xa8, 0x9b, 0x5d, 0x1e, 0xdf,
	0x79, 0xf5, 0x57, 0x43, 0x61, 0x2d, 0x8c, 0xf6, 0xf5, 0x40, 0xf7, 0x78, 0xec, 0x5f, 0x4f, 0x87,
	0xc2, 0x93, 0xf0, 0x00, 0xce, 0xf3, 0xf9, 0x87, 0x66, 0x87, 0xd7, 0x9d, 0x93, 0x6f, 0x47, 0x93,
	0x09, 0x9f, 0x3f, 0x36, 0x83, 0x9e, 0xe9, 0x90, 0xb3, 0xc0, 0xc0, 0xe5, 0x07, 0x8e, 0xe5, 0xb6,
	0x0f, 0xe3, 0x53, 0x48, 0x8c, 0x86, 0xe9, 0x6c, 0xfd, 0x8d, 0x0c, 0x00, 0xb1, 0x61, 0xc1, 0x67,
	0xe0, 0x52, 0xa0, 0x7b, 0x5d, 0x14, 0xb0, 0x0c, 0x24, 0x92, 0xd2, 0x60, 0xb0, 0x41, 0x30, 0x36,
	0x88, 0xcc, 0xa5, 0x82, 0xc8, 0x26, 0xc5, 0x8e, 0x8c, 0xd6, 0x34, 0x20, 0x04, 0xf3, 0x2f, 0xfb,
	0xae, 0xcf, 0x66, 0x86, 0xe4, 0x37, 0x2e, 0x3b, 0xc1, 0x65, 0x74, 0x2e, 0x48, 0x7e, 0x0b, 0x7f,
	0x7b, 0x96, 0xce, 0x43, 0x43, 0x97, 0x04, 0x1f, 0x83, 0xe5, 0x30, 0xed, 0x67, 0x62, 0x16, 0x67,
	0x04, 0x01, 0xaf, 0x82, 0x85, 0x8e, 0xe5, 0xea, 0x34, 0x8f, 0x73, 0xb6, 0x34, 0xa3, 0xd2, 0x4f,
	0x98, 0x03, 0x8b, 0x86, 0x3b, 0x68, 0xb1, 0x51, 0x97, 0x29, 0xcd, 0xa8, 0xec, 0x1b, 0xd7, 0x0c,
	0x4c, 0x27, 0x78, 0x8f, 0x4d, 0x38, 0x71, 0x0d, 0xfd, 0x0e, 0x6b, 0x9e, 0xbe, 0x4f, 0x46, 0xd4,
	0x7c, 0x58, 0xf3, 0xf4, 0x7d, 0x5c, 0xe3, 0x53, 0x1c, 0x6c, 0xde, 0x9b, 0xb8, 0xc6, 0x8f, 0x70,
	0x7c, 0x8a, 0x83, 0xed, 0x0d, 0x86, 0x35, 0x4f, 0xdf, 0x87, 0x97, 0xc1, 0x7c, 0xcb, 0x75, 0x2d,
	0xd2, 0xc1, 0xcb, 0xa5, 0x19, 0x95, 0x7c, 0x11, 0x78, 0x92, 0xcb, 0x48, 0x32, 0x9a, 0x56, 0x08,
	0x3c, 0xf9, 0xce, 0x2f, 0xb1, 0x9c, 0x53, 0xe1, 0x88, 0xe6, 0xe8, 0xc6, 0x81, 0x89, 0xf6, 0xd9,
	0xeb, 0x39, 0xa7, 0x77, 0x53, 0xce, 0xe9, 0x56, 0xe8, 0x9c, 0xb0, 0x35, 0x61, 0x62, 0x3c, 0x8e,
	0x0d, 0x69, 0x4f, 0x25, 0xfc, 0x87, 0x55, 0x70, 0x69, 0x4c, 0x9e, 0xdc, 0xeb, 0xf1, 0xfd, 0xde,
	0xd9, 0x29, 0xfb, 0x7c, 0x9c, 0xca, 0x1a, 0x0a, 0x40, 0x26, 0xaf, 0x2c, 0xa7, 0xf5, 0x4a, 0x3a,
	0xd0, 0x99, 0x3e, 0xb1, 0xe3, 0x09, 0x13, 0xfb, 0x0a, 0x58, 0xc0, 0xeb, 0x05, 0x9f, 0x39, 0x99,
	0xef, 0x84, 0xe3, 0xa3, 0xa2, 0xf7, 0xf9, 0x2f, 0xf8, 0x9a, 0x8b, 0x67, 0x9e, 0x37, 0xbe, 0xe0,
	0xfb, 0xae, 0x4f, 0xf3, 0x08, 0x98, 0x4b, 0x21, 0x29, 0x6b, 0xa9, 0xb9, 0xf0, 0xfc, 0xcb, 0x9a,
	0xeb, 0x63, 0x72, 0x27, 0x84, 0xdc, 0xd2, 0x28, 0xb9, 0x83, 0x90, 0xdc, 0xc1, 0x34, 0xe4, 0x4e,
	0x30, 0xb9, 0xdf, 0xcf, 0x80, 0x95, 0x28, 0xc9, 0x80, 0x25, 0xac, 0x6d, 0x8d, 0x64, 0x1e, 0x46,
	0x67, 0x96, 0xf9, 0x67, 0xa1, 0x67, 0x8a, 0x8f, 0x31, 0x4f, 0x87, 0xc2, 0x7b, 0xe5, 0xe8, 0x3c,
	0x9f, 0x0c, 0xde, 0x58, 0x29, 0xdb, 0x7c, 0x81, 0x86, 0x51, 0x07, 0x91, 0x39, 0x29, 0x1e, 0xea,
	0xf4, 0x5c, 0x3e, 0xf6, 0x32, 0x11, 0x7f, 0xec, 0x65, 0xb2, 0xee, 0x31, 0xc9, 0xc1, 0x66, 0x59,
	0x85, 0x60, 0xbc, 0xa7, 0xd9, 0x4f, 0x84, 0x89, 0x45, 0x3a, 0x82, 0x4f, 0x87, 0xc2, 0x5b, 0x34,
	0x42, 0x84, 0xae, 0x37, 0x5a, 0x4e, 0xc4, 0xe2, 0x90, 0x85, 0x86, 0xcf, 0x0f, 0xfa, 0xbc, 0x19,
	0xbb, 0xe3, 0x35, 0xca, 0x92, 0x25, 0x22, 0xfe, 0x26, 0xc8, 0xb2, 0x74, 0xc1, 0x3e, 0x4d, 0x3b,
	0x59, 0x1d, 0x9f, 0x87, 0x5c, 0x7a, 0x35, 0x14, 0xe6, 0xa3, 0x44, 0x99, 0x4e, 0x07, 0x79, 0xc8,
	0xe0, 0x89, 0xd2, 0xb0, 0x46, 0x6e, 0x53, 0x51, 0x08, 0x25, 0x3f, 0xc1, 0xdf, 0xc5, 0x80, 0xfe,
	0xf6, 0x9f, 0x0c, 0x85, 0xb9, 0x98, 0x3f, 0x81, 0xaa, 0x52, 0x76, 0x64, 0xfe, 0xa5, 0xfb, 0xbe,
	0xdb, 0x36, 0x49, 0x62, 0x7c, 0xbc, 0x28, 0xe4, 0x88, 0x51, 0x86, 0x19, 0x0e, 0x97, 0xc5, 0x08,
	0x86, 0x8f, 0x12, 0x30, 0x4e, 0x87, 0xc2, 0xb7, 0xa2, 0x8f, 0x04, 0x57, 0xd3, 0xe7, 0x63, 0x92,
	0xa4, 0x0f, 0x22, 0xe6, 0x97, 0xe2, 0x8a, 0x38, 0x15, 0xb0, 0x0f, 0x38, 0x36, 0x05, 0x8c, 0xe7,
	0x89, 0x90, 0xb0, 0xdf, 0x8d, 0x63, 0x33, 0x99, 0x24, 0xc9, 0x34, 0xc7, 0xe4, 0x41, 0x72, 0x44,
	0xe8, 0x0e, 0x4d, 0x30, 0x49, 0xac, 0x9f, 0x46, 0x66, 0x7d, 0xeb, 0xf4, 0x5b, 0xbe, 0x70, 0xd6,
	0x79, 0xf5, 0x57, 0x37, 0xeb, 0xfc, 0x83, 0x0c, 0x58, 0x6d, 0xeb, 0x7e, 0x4f, 0xa3, 0x75, 0xb9,
	0x4b, 0x64, 0x31, 0xc1, 0x6d, 0x4b, 0x64, 0x08, 0xe8, 0x7e, 0x8f, 0x32, 0xdf, 0xe1, 0x0a, 0x62,
	0xbd, 0xa4, 0xa9, 0xd2, 0x0b, 0x51, 0x2d, 0x6a, 0x4a, 0x55, 0x91, 0xf2, 0x5f, 0x86, 0x5a, 0xc1,
	0x50, 0x3c, 0x05, 0x3b, 0x1d, 0x0a, 0x1f, 0x93, 0xd9, 0xe5, 0xa0, 0xdd, 0xe3, 0x31, 0xd9, 0x48,
	0x1f, 0x64, 0x92, 0xd0, 0x76, 0xed, 0xbe, 0x85, 0xe2, 0x7c, 0x17, 0xcf, 0xb4, 0x75, 0xef, 0x24,
	0x5e, 0x0d, 0x24, 0x12, 0x95, 0x22, 0xce, 0xb0, 0x9f, 0x0c, 0xc2, 0x97, 0xc7, 0x0f, 0x8d, 0xfc,
	0xa4, 0x20, 0x7c, 0x97, 0x9a, 0x24, 0xc6, 0xc5, 0xaa, 0xc2, 0x84, 0x12, 0x26, 0x82, 0xd7, 0x23,
	0xa3, 0x31, 0x17, 0x7e, 0x0d, 0x36, 0x48, 0xd8, 0xd6, 0x02, 0x57, 0xa3, 0x63, 0x3b, 0x77, 0x05,
	0x47, 0xa0, 0x9d, 0xcc, 0xbb, 0x91, 0x2d, 0x6c, 0xd4, 0x49, 0x60, 0x0f, 0x5c, 0xbe, 0x49, 0x20,
	0x4e, 0x87, 0xc2, 0x3d, 0x7a, 0xc5, 0xc3, 0x0f, 0x19, 0xf9, 0xbc, 0x19, 0xf0, 0x6d, 0x97, 0x8c,
	0x85, 0x91, 0x08, 0x9f, 0x25, 0x10, 0x0d, 0x97, 0x62, 0x0b, 0x12, 0xbd, 0x27, 0x31, 0x9a, 0x30,
	0xfb, 0x5a, 0x4e, 0x5d, 0xf8, 0x47, 0x8b, 0xe0, 0xde, 0xf8, 0x6c, 0x58, 0xad, 0x81, 0x5e, 0x06,
	0x03, 0x0f, 0xd5, 0x03, 0xbd, 0x8b, 0xe0, 0x47, 0x60, 0x29, 0xa0, 0xdf, 0x6c, 0xfd, 0x79, 0xc1,
	0x6a, 0x63, 0x45, 0x0d, 0xe1, 0xe1, 0x67, 0x60, 0x95, 0xfd, 0xd4, 0x3c, 0x14, 0xde, 0x17, 0xb9,
	0x10, 0x1d, 0x30, 0x1c, 0x15, 0x19, 0x30, 0x0f, 0xd6, 0x42, 0x0a, 0xad, 0x70, 0xe9, 0x39, 0x05,
	0x89, 0x90, 0x6d, 0xde, 0x1a, 0x20, 0x4c, 0x43, 0x37, 0xbe, 0x1a, 0xf8, 0x81, 0xd6, 0xb2, 0xf4,
	0xf6, 0x21, 0x09, 0x5e, 0xd3, 0xd0, 0xa0, 0x48, 0x79, 0x8c, 0x03, 0x8b, 0x20, 0xcb, 0x68, 0xb8,
	0x9d, 0x8e, 0x8f, 0x02, 0x36, 0x3d, 0xbf, 0x90, 0x08, 0xe3, 0x5c, 0x25, 0x48, 0x09, 0x49, 0xba,
	0xba, 0x6d, 0xeb, 0x2c, 0x25, 0x7c, 0x5a, 0x49, 0xf6, 0x30, 0x0e, 0xfc, 0x18, 0x2c, 0x7b, 0x6e,
	0x10, 0x6f, 0x83, 0x4d, 0x81, 0x1f, 0x21, 0x90, 0x0e, 0xf1, 0x74, 0xc7, 0xb7, 0xf4, 0x00, 0x69,
	0x03, 0x36, 0x4d, 0x9d, 0xa2, 0x43, 0x42, 0x9c, 0x66, 0x9a, 0xc2, 0x11, 0x0b, 0x88, 0xaf, 0x41,
	0xe1, 0x39, 0xdc, 0x01, 0xcb, 0x64, 0xda, 0xad, 0x0d, 0x8e, 0x58, 0xf4, 0xba, 0xd8, 0xa0, 0x08,
	0x42, 0xf3, 0x08, 0x3e, 0x05, 0x8b, 0x1d, 0xcb, 0xec, 0x6b, 0x03, 0x96, 0x5e, 0x7d, 0x21, 0xe6,
	0x02, 0x06, 0x6f, 0x46, 0x78, 0x47, 0x2c, 0x41, 0x7a, 0x3a, 0xbc, 0xe7, 0xc2, 0x3f, 0x5e, 0x98,
	0x38, 0x46, 0x0a, 0xae, 0xdd, 0x32, 0x1d, 0x36, 0x46, 0xce, 0x9a, 0x58, 0xe6, 0x97, 0x61, 0x62,
	0xb3, 0xbf, 0x0c, 0x13, 0x9b, 0xfb, 0x05, 0x4d, 0x6c, 0xfe, 0x17, 0x34, 0xb1, 0x85, 0x5f, 0xd8,
	0xc4, 0x16, 0x7f, 0x31, 0x13, 0x5b, 0xfa, 0xb9, 0x4d, 0x6c, 0xf9, 0xe7, 0x34, 0xb1, 0x95, 0xd7,
	0x31, 0x31, 0x98, 0x07, 0xeb, 0xd1, 0x14, 0x86, 0x5e, 0x6f, 0xa1, 0xf3, 0xa9, 0x1b, 0x13, 0xae,
	0x2a, 0xe0, 0x58, 0xab, 0x66, 0xdd, 0xe4, 0xa7, 0xf0, 0xf7, 0x33, 0x40, 0x98, 0x60, 0xa6, 0x75,
	0xb2, 0xb8, 0xa6, 0x56, 0xfa, 0x21, 0x58, 0x24, 0x7b, 0x2a, 0xfe, 0xb4, 0xf6, 0xc9, 0xc0, 0xe1,
	0xc7, 0x60, 0x91, 0x2e, 0xd2, 0x73, 0xb3, 0xe3, 0xd2, 0x96, 0x2f, 0x63, 0xc4, 0x3f, 0x19, 0x0a,
	0x5c, 0x1a, 0x99, 0xa2, 0x08, 0x7f, 0x30, 0x07, 0x6e, 0x4f, 0x12, 0x2e, 0x30, 0xdb, 0x87, 0xc8,
	0x83, 0x26, 0x98, 0x6f, 0xe9, 0xfe, 0x84, 0xf8, 0x42, 0xa2, 0x28, 0x5e, 0x23, 0x2b, 0x89, 0x39,
	0x0c, 0x06, 0xe7, 0x3b, 0xa6, 0x15, 0x6f, 0x2d, 0xfa, 0x94, 0x16, 0xff, 0x10, 0x7f, 0xe8, 0x56,
	0x0b, 0x19, 0xee, 0xb7, 0x53, 0xf2, 0x10, 0x16, 0xb0, 0x0b, 0x16, 0x8f, 0x91, 0xd9, 0xed, 0x4d,
	0x18, 0x5e, 0x9f, 0x31, 0x66, 0x8f, 0x55, 0xdd, 0x31, 0x5c, 0x9b, 0xb7, 0xcc, 0x43, 0x64, 0x99,
	0x3d, 0xd7, 0x35, 0xe8, 0x54, 0xc0, 0x75, 0xc8, 0x64, 0x91, 0x26, 0xc2, 0xd2, 0x06, 0xc6, 0x1b,
	0x5f, 0xb4, 0xd9, 0x94, 0x3c, 0xfc, 0xa3, 0x0c, 0x98, 0xf7, 0xfb, 0xa8, 0x3d, 0x7e, 0x04, 0xfe,
	0xb5, 0x0c, 0x63, 0xd4, 0x4f, 0xb6, 0x0a, 0xc3, 0x0f, 0x2c, 0xdd, 0x1b, 0xdb, 0xb2, 0xc7, 0xbc,
	0xeb, 0xf1, 0x66, 0x87, 0x6f, 0x59, 0x3a, 0xdd, 0xe0, 0x21, 0xd7, 0xcf, 0x74, 0xdf, 0x1f, 0xd8,
	0x08, 0xcf, 0x1e, 0x4c, 0x9f, 0x68, 0x25, 0x3a, 0xa3, 0x78, 0x93, 0xd7, 0x30, 0x3d, 0xfe, 0x4d,
	0x52, 0x2c, 0xbd, 0x0c, 0x90, 0xe3, 0x27, 0x36, 0x59, 0xa8, 0x4e, 0x30, 0x84, 0xf0, 0x0f, 0xe7,
	0x27, 0x7a, 0x39, 0xd6, 0x43, 0xd1, 0x4c, 0x80, 0xc9, 0xc2, 0xee, 0xbb, 0xde, 0xd9, 0x3e, 0x1f,
	0x4d, 0x0d, 0xe1, 0xe1, 0x77, 0xc0, 0x92, 0x41, 0x2e, 0x59, 0x59, 0xd3, 0xba, 0xb5, 0x45, 0x0c,
	0xdf, 0xb0, 0x62, 0x4c, 0x6f, 0x5a, 0x5f, 0x46, 0x31, 0x63, 0x9e, 0x2d, 0x6b, 0x5a, 0x2f, 0x46,
	0x30, 0xf3, 0xd6, 0x88, 0x3b, 0x5f, 0xf8, 0x65, 0xb8, 0xf3, 0xc5, 0x5f, 0x86, 0x3b, 0x5f, 0xfa,
	0x39, 0xdc, 0xf9, 0xa8, 0x87, 0x59, 0x79, 0x6d, 0x0f, 0xf3, 0x93, 0x39, 0x70, 0x63, 0x3c, 0x34,
	0x35, 0x8d, 0x0a, 0x58, 0x0f, 0xe7, 0x69, 0x96, 0xeb, 0x1e, 0x0e, 0xfa, 0x6c, 0x2c, 0xdf, 0xdf,
	0x9e, 0x62, 0x8a, 0x59, 0x9a, 0x51, 0xb3, 0x0c, 0xbb, 0x4c, 0x90, 0xe1, 0x1e, 0x58, 0x6d, 0xd3,
	0xf8, 0xaa, 0xe9, 0x46, 0x38, 0x71, 0x9c, 0x48, 0x2b, 0x19, 0x8a, 0x4b, 0xe4, 0xe6, 0x02, 0xf9,
	0x16, 0x0d, 0x03, 0xca, 0x60, 0x2d, 0x24, 0x64, 0x21, 0xaf, 0xcf, 0x4c, 0x68, 0x5a, 0x4a, 0xa1,
	0x10, 0x65, 0xe4, 0xf5, 0xe1, 0x33, 0xc0, 0x85, 0xa4, 0xec, 0x81, 0x15, 0x98, 0x7d, 0xeb, 0x84,
	0xd9, 0xd5, 0xb4, 0xe4, 0x36, 0x18, 0x7e, 0x85, 0xa1, 0xc3, 0x4f, 0x22, 0xbf, 0x4a, 0x2d, 0xec,
	0xde, 0xf6, 0xc5, 0x5e, 0x9c, 0x6c, 0x2e, 0x91, 0x4f, 0xb8, 0x0f, 0xb2, 0x7a, 0xbf, 0x6f, 0x9d,
	0x68, 0xe1, 0xa8, 0x5c, 0x3c, 0x5f, 0x9c, 0xe4, 0x60, 0x2e, 0xcd, 0xa8, 0x6b, 0x04, 0x99, 0x15,
	0xe6, 0x97, 0xc0, 0x82, 0x8f, 0x2b, 0x84, 0x3f, 0xce, 0x80, 0xad, 0xc9, 0x86, 0x01, 0xdf, 0x67,
	0x70, 0xac, 0x83, 0x6f, 0x6e, 0x9f, 0x63, 0x16, 0xa5, 0x19, 0x95, 0x02, 0xc3, 0xe7, 0x00, 0xc6,
	0x36, 0x18, 0x20, 0xbb, 0x8f, 0x03, 0xf5, 0x84, 0x0b, 0xe4, 0xf9, 0xcb, 0xaf, 0x86, 0xc2, 0x52,
	0xd2, 0xa6, 0xff, 0xf3, 0x50, 0xc8, 0x94, 0x66, 0xd4, 0xcd, 0x88, 0x44, 0x83, 0x51, 0xc8, 0x2f,
	0x82, 0x79, 0x6c, 0xd1, 0xc2, 0xdf, 0xcc, 0x9c, 0x59, 0x14, 0xc5, 0x6b, 0xf5, 0xd7, 0xda, 0xe9,
	0x1a, 0x1d, 0x2b, 0xb3, 0xaf, 0x3d, 0x56, 0xfe, 0xf4, 0xec, 0x58, 0x39, 0x73, 0x99, 0xef, 0xb5,
	0x04, 0x7a, 0x02, 0xae, 0x9c, 0xb9, 0x59, 0x18, 0x3d, 0x05, 0x30, 0xfb, 0x30, 0xab, 0x5e, 0x32,
	0x53, 0xb4, 0xc9, 0x83, 0x00, 0x50, 0x05, 0x9b, 0xe1, 0x56, 0x6a, 0xac, 0xeb, 0xb9, 0xc9, 0xba,
	0x5e, 0x3c, 0xab, 0x6b, 0x95, 0x0b, 0xf1, 0x43, 0x45, 0xc3, 0x03, 0x00, 0x12, 0xd7, 0x0c, 0xe9,
	0xe1, 0xc6, 0x83, 0xf3, 0x2e, 0x37, 0x6e, 0x27, 0x2e, 0x31, 0x73, 0x6c, 0x82, 0xb0, 0x10, 0x2f,
	0xda, 0x63, 0x62, 0x5b, 0xff, 0x20, 0x03, 0x40, 0x42, 0x3d, 0xb5, 0xb1, 0xa6, 0x72, 0xce, 0xd1,
	0xe7, 0x52, 0x7a, 0xd7, 0x7a, 0xc4, 0x48, 0xf0, 0x7c, 0x36, 0xda, 0x7c, 0x1e, 0x3b, 0x81, 0x19,
	0x33, 0x9f, 0x0d, 0x11, 0x84, 0x7f, 0x77, 0x13, 0x5c, 0x9b, 0x70, 0x9b, 0xf2, 0x57, 0x72, 0x5b,
	0xf1, 0xc7, 0x99, 0xb1, 0xfa, 0x98, 0xd0, 0x9d, 0x7f, 0x37, 0x13, 0x2a, 0xe4, 0x74, 0x28, 0x9c,
	0xb8, 0xf1, 0x56, 0x17, 0xc3, 0xe3, 0x8f, 0xc9, 0x1e, 0x87, 0x6e, 0x59, 0xec, 0x0c, 0x9f, 0x6d,
	0x02, 0x92, 0xfd, 0x20, 0x32, 0xa1, 0x18, 0xf8, 0x88, 0x1f, 0x38, 0x16, 0xf2, 0xc9, 0x09, 0x89,
	0x87, 0x1e, 0xf8, 0xfc, 0x28, 0xfb, 0xc4, 0xa5, 0x3a, 0x72, 0x33, 0x8a, 0x3f, 0x63, 0xa3, 0x29,
	0x63, 0x1a, 0xd3, 0x23, 0x8f, 0xc0, 0x66, 0x4f, 0xf7, 0xb5, 0x00, 0xe9, 0xb6, 0xc6, 0x3c, 0xbf,
	0x4f, 0x9c, 0xe9, 0xb2, 0xba, 0xd1, 0xd3, 0xfd, 0x06, 0xd2, 0x6d, 0x16, 0x20, 0x7c, 0xf8, 0x2e,
	0x98, 0xc7, 0xd4, 0x73, 0x0b, 0xa4, 0xe7, 0x6e, 0x4d, 0xba, 0xda, 0xba, 0x8d, 0xcd, 0x4f, 0x25,
	0xa0, 0x30, 0x0f, 0xb2, 0xd1, 0xe5, 0xd8, 0xc0, 0x75, 0x2d, 0xe6, 0x18, 0x2f, 0xc0, 0x5d, 0x0b,
	0x71, 0x1a, 0xae, 0x6b, 0x41, 0x11, 0xac, 0x75, 0x2c, 0xdd, 0x46, 0x41, 0xcf, 0x73, 0x8f, 0x91,
	0xc7, 0x22, 0xef, 0x45, 0x24, 0x92, 0x28, 0x70, 0x0f, 0x6c, 0x74, 0x3d, 0xe4, 0xe8, 0x06, 0xb2,
	0xf4, 0x81, 0xd3, 0xee, 0x21, 0x8f, 0xad, 0x29, 0x2e, 0xa0, 0x72, 0x16, 0x0b, 0xbe, 0x07, 0x16,
	0x0e, 0x1d, 0xb3, 0x83, 0xd8, 0xd2, 0xe2, 0x02, 0x74, 0x0a, 0x0b, 0x3f, 0x04, 0x4b, 0x36, 0x32,
	0xcc, 0xee, 0x20, 0xdc, 0x24, 0xbe, 0x00, 0x2d, 0x84, 0x26, 0x88, 0xa6, 0x43, 0x10, 0x57, 0xa7,
	0x43, 0xa4, 0xd0, 0xf0, 0x03, 0xb0, 0xd8, 0x37, 0xfd, 0xc0, 0xb5, 0xd8, 0x2a, 0xfb, 0x02, 0x3c,
	0x06, 0x0c, 0x3f, 0x02, 0xcb, 0x1e, 0x3a, 0x72, 0xad, 0x23, 0xe4, 0xb1, 0x9b, 0xc5, 0x17, 0x20,
	0x46, 0xe0, 0x50, 0x02, 0xeb, 0x9e, 0xdb, 0x3e, 0x44, 0x41, 0xa4, 0xe0, 0xf5, 0x69, 0x08, 0x9c,
	0x41, 0x82, 0x9f, 0x00, 0xe0, 0xb7, 0xf5, 0x20, 0x40, 0x1e, 0x6e, 0xf4, 0xc6, 0x34, 0x24, 0x12,
	0x08, 0x58, 0x61, 0xec, 0x05, 0x0a, 0xb2, 0x07, 0x7d, 0xb1, 0xc2, 0x18, 0x34, 0x7c, 0x1b, 0xcc,
	0xf9, 0x76, 0x97, 0x5c, 0xcd, 0xbb, 0x10, 0x09, 0x43, 0xc2, 0x4f, 0xc1, 0xaa, 0xef, 0x98, 0x7d,
	0xe4, 0x79, 0x66, 0xc7, 0xa2, 0x5b, 0xce, 0x17, 0x22, 0x26, 0x31, 0xa0, 0x02, 0x2e, 0x91, 0xc9,
	0xc2, 0x49, 0xcb, 0xb5, 0x5b, 0x5a, 0xa4, 0xb5, 0x4b, 0xd3, 0x10, 0x82, 0x31, 0x66, 0x39, 0xd4,
	0xdc, 0x87, 0x60, 0x69, 0xd0, 0x42, 0x9e, 0xaf, 0x1f, 0xb3, 0xed, 0xd6, 0x8b, 0x9a, 0xce, 0xa0,
	0xb1, 0xad, 0x1c, 0x7b, 0xc8, 0x69, 0xf7, 0xc8, 0x76, 0xe9, 0xc5, 0xb6, 0x42, 0x81, 0xe1, 0xc7,
	0x60, 0x45, 0xb7, 0xfb, 0x83, 0x40, 0x0f, 0x5c, 0x8f, 0x6c, 0x7d, 0x5f, 0x88, 0x19, 0xc3, 0x63,
	0xb7, 0xa0, 0x07, 0xae, 0x1d, 0x37, 0xfb, 0xda, 0x54, 0x63, 0x1a, 0xe3, 0x44, 0x0d, 0x2e, 0x82,
	0xf5, 0x96, 0xde, 0x3e, 0xd4, 0xfc, 0xb6, 0xa7, 0x07, 0x84, 0x48, 0x6e, 0x1a, 0x22, 0x59, 0x8c,
	0x54, 0x0f, 0x71, 0x70, 0x33, 0x5a, 0x7a, 0x10, 0x58, 0x48, 0x7f, 0x89, 0x72, 0xd7, 0xa7, 0x6a,
	0x46, 0x04, 0x8f, 0x9b, 0xd1, 0xd2, 0x7f, 0xa0, 0xeb, 0x9e, 0x46, 0x7b, 0x36, 0xb7, 0x35, 0x55,
	0x33, 0x28, 0x4e, 0x9d, 0xa0, 0xe0, 0x31, 0x47, 0x96, 0x36, 0x2d, 0xf7, 0x65, 0xee, 0xc6, 0x54,
	0x63, 0x2e, 0x04, 0xc7, 0x63, 0xae, 0x6d, 0xe9, 0xa6, 0xd1, 0x43, 0xba, 0xed, 0xf6, 0x6c, 0xd7,
	0xcb, 0xdd, 0x9c, 0x6a, 0xcc, 0xa5, 0x91, 0x60, 0x19, 0xc0, 0xb6, 0x37, 0xf0, 0x71, 0x68, 0xf4,
	0xb5, 0xb6, 0xe7, 0xfa, 0x7e, 0xcb, 0x3d, 0xce, 0xdd, 0x9a, 0x86, 0xd4, 0x66, 0x84, 0x58, 0x60,
	0x78, 0x58, 0xa1, 0x06, 0xea, 0x7a, 0x48, 0xf7, 0x91, 0x97, 0xbb, 0x3d, 0x95, 0x42, 0x23, 0x78,
	0xf8, 0x6b, 0x60, 0xd5, 0x40, 0xb6, 0xab, 0xb5, 0x75, 0xc7, 0x71, 0x9d, 0xdc, 0x9d, 0xa9, 0xc6,
	0x3f, 0xc6, 0x28, 0x10, 0x04, 0x28, 0x83, 0x4d, 0x82, 0xef, 0x0f, 0xac, 0x40, 0x77, 0x34, 0xff,
	0xd8, 0xf5, 0x8c, 0x1c, 0x3f, 0x95, 0xa7, 0xc7, 0x78, 0x75, 0x82, 0x56, 0xc7, 0x58, 0xb4, 0x1d,
	0x81, 0xeb, 0x10, 0xfb, 0xbe, 0x3b, 0x65, 0x3b, 0x18, 0x3c, 0x6e, 0x47, 0x57, 0x0f, 0x2c, 0xd3,
	0xe9, 0x6a, 0xd8, 0x17, 0x09, 0x53, 0xb5, 0x83, 0x61, 0xec, 0x0d, 0x1c, 0x1c, 0xf2, 0x7a, 0xae,
	0x75, 0x62, 0xeb, 0x78, 0x41, 0x80, 0xac, 0xdc, 0xbd, 0xa9, 0xec, 0x2a, 0x89, 0x82, 0x3d, 0xda,
	0x57, 0x7a, 0x37, 0x77, 0x7f, 0x2a, 0x8f, 0xf6, 0x95, 0xde, 0xc5, 0x0d, 0xb6, 0xdc, 0x76, 0xcf,
	0xb1, 0x5c, 0xdd, 0xc8, 0xbd, 0x31, 0x55, 0x83, 0x23, 0x78, 0x8c, 0xdc, 0xc7, 0x91, 0xf6, 0x2b,
	0xbc, 0x48, 0xff, 0xd6, 0x54, 0xc8, 0x11, 0x3c, 0x1e, 0x02, 0x5f, 0x0f, 0x74, 0xa3, 0xa5, 0x5b,
	0x56, 0xee, 0xc1, 0x54, 0x43, 0x20, 0x04, 0x87, 0xbb, 0x60, 0xc3, 0x43, 0x3e, 0xf2, 0x8e, 0x90,
	0xe6, 0xf7, 0x5c, 0x37, 0x40, 0x5e, 0xee, 0xe1, 0x74, 0x71, 0x87, 0x62, 0xd5, 0x29, 0x12, 0xee,
	0x30, 0xcf, 0x34, 0x70, 0x7f, 0xb5, 0x3d, 0xb7, 0x9f, 0xfb, 0xf6, 0x54, 0x1d, 0x46, 0x31, 0x0a,
	0x9e, 0xdb, 0x87, 0x9f, 0x81, 0x35, 0x6f, 0xe0, 0xfb, 0xa6, 0xee, 0x68, 0x9e, 0xe9, 0x06, 0xb9,
	0x47, 0x53, 0xc5, 0x03, 0x86, 0xa2, 0x9a, 0x6e, 0x80, 0x95, 0xe0, 0xb7, 0x4d, 0xdb, 0x0c, 0x74,
	0x2f, 0xf7, 0xe6, 0x54, 0x4a, 0x08, 0xc1, 0xb1, 0xf0, 0x7e, 0xdb, 0xf5, 0xda, 0x3d, 0xac, 0x83,
	0x20, 0xf7, 0x78, 0xca, 0xa8, 0x89, 0x31, 0xea, 0x3d, 0x37, 0xc0, 0x9d, 0xe7, 0xf7, 0x5c, 0x2f,
	0xf0, 0x03, 0xb7, 0x9f, 0x7b, 0x6b, 0xaa, 0xce, 0x8b, 0xe0, 0x09, 0x73, 0xd7, 0xd0, 0xb5, 0xbe,
	0xdb, 0xc7, 0x1e, 0x70, 0x7b, 0x3a, 0xe6, 0xae, 0xa1, 0xd7, 0x08, 0x02, 0xd6, 0x5c, 0x80, 0x2c,
	0xd2, 0x7d, 0x24, 0x6e, 0xbf, 0x3d, 0x95, 0xe6, 0x30, 0x4a, 0x9d, 0xc5, 0xee, 0x8f, 0xc0, 0x72,
	0xe0, 0xda, 0xa6, 0x6f, 0xe9, 0x47, 0xb9, 0x77, 0xa6, 0xd2, 0x5c, 0x08, 0x8e, 0x5b, 0x1e, 0x90,
	0x70, 0x86, 0x39, 0xbf, 0x3b, 0x55, 0xcb, 0x23, 0x78, 0xec, 0xfd, 0x8f, 0x4d, 0xa7, 0x8b, 0x3c,
	0x8d, 0xcd, 0xb5, 0x9e, 0x4c, 0x35, 0x4a, 0x29, 0x4e, 0x8d, 0xa0, 0x6c, 0xfd, 0x6c, 0x16, 0xcc,
	0x93, 0xac, 0xc8, 0xdf, 0xce, 0x80, 0xdc, 0xd9, 0xe5, 0x65, 0x62, 0xc9, 0x35, 0x36, 0x51, 0xe8,
	0xc3, 0x57, 0x43, 0x61, 0x39, 0xb9, 0x60, 0xfa, 0xf1, 0x50, 0xb8, 0x57, 0x08, 0x39, 0x63, 0x18,
	0x83, 0xac, 0xaa, 0x08, 0x8a, 0x44, 0x1e, 0x32, 0xa3, 0xaf, 0xe0, 0x5d, 0x4d, 0xaf, 0x55, 0xa3,
	0xc5, 0xc0, 0x0e, 0x98, 0x37, 0xf4, 0x40, 0x67, 0x7b, 0x20, 0xdf, 0x3a, 0xb7, 0x21, 0xe4, 0x9f,
	0xa2, 0x1e, 0xe8, 0x2a, 0xc1, 0xd9, 0xfa, 0xa3, 0x0c, 0x58, 0x0e, 0x8b, 0xe0, 0x13, 0x00, 0xdb,
	0xba, 0xa3, 0xd1, 0x3d, 0x91, 0x70, 0x32, 0x9f, 0x7a, 0x0b, 0x8e, 0x6b, 0xeb, 0x8e, 0x88, 0xab,
	0xc3, 0x57, 0x6f, 0xe0, 0x9b, 0x60, 0xd3, 0xd6, 0x49, 0x7e, 0xaf, 0xa5, 0xb9, 0x2c, 0x69, 0x95,
	0xe5, 0xf4, 0x71, 0x61, 0x45, 0x98, 0xcc, 0x9a, 0x5a, 0x48, 0xce, 0xbf, 0xe6, 0x42, 0x72, 0x67,
	0xfe, 0xd5, 0xef, 0x3e, 0x98, 0x11, 0xfe, 0xd9, 0x02, 0x7d, 0x4b, 0x2b, 0xf1, 0x7c, 0xd4, 0x6b,
	0xad, 0x22, 0xbf, 0x0d, 0x38, 0xc7, 0x0d, 0xcc, 0x8e, 0xd9, 0xa6, 0x2b, 0x32, 0xbc, 0x70, 0xa2,
	0x19, 0xaa, 0x1b, 0xc9, 0x72, 0x95, 0x3c, 0xee, 0xb5, 0x4e, 0x13, 0x35, 0x48, 0x0f, 0x63, 0x40,
	0xda, 0x2e, 0x9a, 0x4e, 0x41, 0xcc, 0x02, 0xf9, 0xf0, 0x2d, 0x70, 0xc9, 0x74, 0x34, 0xf2, 0x9c,
	0x4c, 0xe0, 0x11, 0x37, 0xae, 0x85, 0x8b, 0xb1, 0x15, 0x95, 0x33, 0x9d, 0x3d, 0xdd, 0x46, 0x0d,
	0x5a, 0x81, 0xc1, 0xf3, 0x60, 0xb5, 0x6b, 0x62, 0xbf, 0xe7, 0x0e, 0x1c, 0xc3, 0x67, 0x8b, 0xb2,
	0xbb, 0x67, 0x9e, 0xcb, 0xda, 0x7e, 0x41, 0xf6, 0xc0, 0x91, 0x41, 0x5f, 0x78, 0xab, 0xa3, 0x40,
	0x05, 0x18, 0xab, 0x4e, 0x90, 0xe0, 0xe7, 0x60, 0x83, 0x9d, 0xee, 0x47, 0x74, 0x16, 0xa7, 0xa5,
	0xb3, 0x1e, 0x62, 0x32, 0x5a, 0x4d, 0x70, 0xa5, 0x33, 0xb0, 0xac, 0x13, 0xed, 0x2c, 0xc5, 0xa5,
	0x69, 0x29, 0x5e, 0x22, 0xf8, 0x85, 0x34, 0xd9, 0xbb, 0x60, 0x8d, 0x65, 0x5b, 0x10, 0x72, 0x64,
	0xdd, 0xb6, 0xa2, 0xae, 0xd2, 0x32, 0x02, 0x03, 0xef, 0x81, 0xac, 0x61, 0xfa, 0xed, 0x18, 0x66,
	0x85, 0x6a, 0x97, 0x15, 0x52, 0x20, 0x42, 0xe7, 0x08, 0xe9, 0x16, 0x83, 0x01, 0x21, 0x1d, 0x5c,
	0x46, 0x40, 0xb6, 0x3e, 0x03, 0xeb, 0x69, 0xa1, 0xe0, 0xd5, 0x28, 0x9d, 0x8c, 0x26, 0x99, 0xb3,
	0x2f, 0x5c, 0x9e, 0x38, 0xbb, 0xc8, 0x86, 0x47, 0x0d, 0x5b, 0xbf, 0x01, 0x36, 0x47, 0x9a, 0x05,
	0x65, 0xc0, 0x1d, 0xb3, 0x42, 0x8d, 0xe2, 0xfb, 0x6c, 0xd7, 0xfe, 0xf6, 0xf9, 0x3a, 0x51, 0x37,
	0x8e, 0x53, 0xdf, 0xbe, 0xf0, 0xcf, 0x97, 0xc0, 0xf5, 0x89, 0x19, 0x4f, 0xf0, 0x0f, 0x33, 0x64,
	0x47, 0x30, 0xda, 0xa3, 0xb9, 0x3f, 0x39, 0x3b, 0x6a, 0x1b, 0x7f, 0x91, 0xd7, 0x42, 0xa2, 0x5c,
	0xd2, 0xcb, 0x24, 0x6f, 0x8c, 0x94, 0xf1, 0x11, 0xdc, 0xe9, 0x50, 0xf8, 0x94, 0xe6, 0xb6, 0xfa,
	0xe4, 0x11, 0x3e, 0xde, 0xec, 0xf0, 0x7a, 0xb8, 0xe7, 0xd0, 0xa6, 0xf9, 0x18, 0x3d, 0x96, 0xb5,
	0xc2, 0x1e, 0x75, 0xa1, 0xaf, 0x68, 0xf2, 0x6e, 0x87, 0xb7, 0x91, 0xa1, 0x5b, 0x51, 0xaa, 0x06,
	0xdb, 0x82, 0x0c, 0x48, 0xf6, 0xca, 0x92, 0x45, 0x1f, 0x64, 0x61, 0x1b, 0x8f, 0xfc, 0x39, 0x92,
	0x92, 0x84, 0xad, 0xbc, 0xce, 0xa4, 0xdc, 0x64, 0x2f, 0xb9, 0xa4, 0x44, 0xfc, 0x6e, 0x0d, 0x79,
	0x1d, 0xd7, 0xb3, 0xfd, 0x58, 0x36, 0x64, 0xf0, 0x8c, 0x05, 0x9f, 0xd8, 0x7b, 0x71, 0xc9, 0x7e,
	0x8b, 0x3f, 0x68, 0x25, 0xde, 0xb0, 0x49, 0xc8, 0x17, 0x4a, 0xb5, 0xf5, 0xa7, 0xb3, 0x60, 0x25,
	0xd2, 0x10, 0xd6, 0xeb, 0xf5, 0x96, 0xeb, 0x0c, 0xfc, 0xf8, 0x5d, 0x36, 0x5f, 0x0b, 0xdb, 0x4b,
	0x1f, 0xdd, 0xdb, 0xc9, 0xbc, 0x93, 0xef, 0x84, 0x29, 0x56, 0x79, 0x0c, 0xcb, 0x87, 0xaf, 0xdc,
	0x9c, 0x0e, 0x85, 0xa2, 0x12, 0xe9, 0x84, 0xd0, 0x89, 0x73, 0x67, 0xfc, 0x48, 0x6f, 0x8f, 0x49,
	0xfe, 0x9b, 0xdb, 0x0f, 0x4f, 0xa0, 0x26, 0xa7, 0xd9, 0x5c, 0x23, 0x34, 0xa2, 0x0b, 0x0a, 0x7e,
	0xc8, 0x08, 0xfe, 0xbd, 0x0c, 0x60, 0x99, 0xa2, 0x64, 0xc3, 0x94, 0x65, 0x99, 0xce, 0x8e, 0x0f,
	0x1e, 0x5f, 0x84, 0x89, 0x40, 0x0d, 0x82, 0xc1, 0xe3, 0xe6, 0x9e, 0x0e, 0x85, 0x8f, 0x68, 0xea,
	0x4d, 0x98, 0x8b, 0x15, 0xf5, 0x6a, 0xe0, 0xf2, 0x3d, 0xfd, 0x88, 0xe6, 0x16, 0xeb, 0x2d, 0xf7,
	0x08, 0x4d, 0xec, 0x67, 0x75, 0x83, 0xca, 0xc0, 0xf2, 0x1b, 0x4d, 0x63, 0xeb, 0x7f, 0x64, 0xc0,
	0x02, 0x7d, 0x08, 0xe7, 0xfb, 0xc9, 0xab, 0x43, 0xd8, 0xc7, 0x4e, 0x7e, 0x9b, 0xe7, 0x11, 0x93,
	0x6f, 0x21, 0x7c, 0xad, 0x28, 0xea, 0xf9, 0x88, 0x42, 0xe2, 0x92, 0x45, 0xb4, 0xc7, 0xfc, 0x7b,
	0x19, 0xb0, 0xee, 0x0f, 0x5a, 0x5a, 0xe2, 0x31, 0x26, 0xba, 0xd1, 0x78, 0x5e, 0xaa, 0xe0, 0x5e,
	0xf8, 0xa0, 0x28, 0x91, 0xc1, 0x31, 0xfc, 0xd3, 0xa1, 0xf0, 0x66, 0x1c, 0xef, 0xfc, 0xf0, 0xf9,
	0x9f, 0x70, 0x8b, 0x6e, 0xa2, 0x20, 0x59, 0x7f, 0xd0, 0x4a, 0xbc, 0xec, 0xb4, 0x9a, 0x68, 0xae,
	0xf0, 0x09, 0x0d, 0x37, 0xf1, 0x43, 0x6c, 0xaf, 0x15, 0x6e, 0x1e, 0x3d, 0x06, 0xdc, 0x59, 0x45,
	0xc1, 0x25, 0x80, 0x55, 0xc5, 0xcd, 0xc0, 0x45, 0x30, 0x5b, 0x55, 0xb9, 0x0c, 0x2e, 0x50, 0xaa,
	0x0d, 0x6e, 0xf6, 0xd1, 0x5f, 0x01, 0x57, 0xc7, 0x3f, 0x2e, 0x0b, 0xaf, 0x80, 0xd1, 0xe7, 0x65,
	0xe9, 0x63, 0x2e, 0x35, 0x51, 0xa5, 0xd7, 0xb3, 0x69, 0x59, 0x86, 0xdc, 0x6a, 0x2b, 0xc9, 0xf5,
	0xa8, 0x64, 0x16, 0x5e, 0x06, 0xdc, 0x73, 0x51, 0x95, 0xc9, 0x3d, 0xfc, 0xb0, 0x74, 0x0e, 0x6e,
	0x80, 0x55, 0xa5, 0x1a, 0x22, 0x16, 0xb9, 0xf9, 0x47, 0x3f, 0x9c, 0x03, 0xd9, 0xd4, 0x5b, 0x93,
	0xf0, 0x06, 0x98, 0xf4, 0xda, 0x24, 0x37, 0x03, 0x73, 0xe0, 0xf2, 0x99, 0xca, 0x46, 0x49, 0xaa,
	0x48, 0xdc, 0x2c, 0xbc, 0x05, 0xae, 0x8f, 0x41, 0x53, 0xa5, 0x3d, 0xb9, 0xaa, 0x70, 0x73, 0x58,
	0xe8, 0x74, 0x35, 0x7d, 0x6a, 0xe8, 0x0c, 0x4a, 0x35, 0xff, 0xb9, 0x44, 0x6f, 0x4c, 0x2f, 0xc0,
	0x3b, 0xe0, 0x46, 0x54, 0x5b, 0x13, 0x65, 0xa5, 0xb1, 0x2f, 0x37, 0xb4, 0xb0, 0x49, 0x75, 0x6e,
	0x71, 0x3c, 0x40, 0xb5, 0x26, 0xa9, 0x22, 0xb9, 0x8c, 0xba, 0x04, 0xdf, 0x00, 0x77, 0x47, 0x01,
	0xe4, 0x86, 0x54, 0xa1, 0xed, 0x97, 0x09, 0xd8, 0x32, 0xe4, 0xc1, 0xcd, 0x51, 0xb0, 0x04, 0xc4,
	0x4a, 0xaa, 0xd5, 0x25, 0x49, 0x2c, 0x4a, 0x2a, 0xbd, 0x4d, 0x0d, 0xe0, 0x5d, 0x70, 0x6b, 0x4c,
	0xab, 0xeb, 0x8d, 0xaa, 0x2a, 0x11, 0x4e, 0xdc, 0x6a, 0x8a, 0x7c, 0x12, 0x44, 0x54, 0x49, 0x19,
	0xb7, 0xf6, 0xe8, 0x7b, 0x60, 0x2d, 0x79, 0xb5, 0x08, 0x5e, 0x03, 0xe3, 0x2e, 0x17, 0x71, 0x33,
	0xf0, 0x3a, 0xb8, 0x92, 0xaa, 0x10, 0x8b, 0xcf, 0x45, 0xa5, 0x40, 0x5e, 0xf3, 0x39, 0x8b, 0x23,
	0x7d, 0x51, 0x93, 0x54, 0x6c, 0x5e, 0xff, 0x36, 0x03, 0xb2, 0x52, 0x38, 0xd7, 0x22, 0xd9, 0x77,
	0xd4, 0x32, 0xa8, 0x40, 0xb2, 0xf2, 0x5c, 0x2c, 0xcb, 0x98, 0x00, 0x04, 0xeb, 0x51, 0xe9, 0x6e,
	0xb9, 0x2a, 0x36, 0xb8, 0x59, 0x78, 0x09, 0x6c, 0x44, 0x65, 0xc5, 0x6a, 0x33, 0x5f, 0x96, 0xb8,
	0xb9, 0x54, 0x61, 0x53, 0x56, 0x1a, 0xef, 0x3d, 0xe1, 0xe6, 0x47, 0x0a, 0x9f, 0xbe, 0xcf, 0x2d,
	0xa4, 0x0a, 0xeb, 0x14, 0x72, 0x71, 0xa4, 0xf0, 0xe9, 0xfb, 0xdc, 0x12, 0xdc, 0x04, 0xd9, 0xa8,
	0x30, 0x5f, 0xad, 0x96, 0xb9, 0xe5, 0x34, 0x5c, 0x43, 0x95, 0x95, 0x3d, 0x6e, 0xe5, 0x91, 0x0d,
	0x36, 0xce, 0xe4, 0x4d, 0xe2, 0xd6, 0x9c, 0xcd, 0x9c, 0xe4, 0x32, 0x78, 0xe8, 0x24, 0x4b, 0xc9,
	0x0b, 0x0d, 0xf4, 0x29, 0xac, 0x64, 0x71, 0x45, 0x2a, 0xca, 0xcd, 0x0a, 0x7d, 0xdc, 0x28, 0x59,
	0x5e, 0x26, 0xaf, 0xb4, 0xcc, 0xef, 0x28, 0x60, 0xdd, 0x0f, 0x74, 0x2f, 0xd0, 0xd0, 0xcb, 0xbe,
	0xee, 0x18, 0xc8, 0x80, 0x77, 0xb6, 0xe9, 0x73, 0xd7, 0xdb, 0xe1, 0x73, 0xd7, 0xdb, 0x15, 0xfa,
	0x1c, 0x36, 0x4b, 0xb4, 0xcd, 0xbd, 0xfa, 0xb3, 0xf9, 0xc4, 0xd4, 0x99, 0x24, 0x21, 0x06, 0x12,
	0xc3, 0xde, 0xe9, 0x02, 0x70, 0xa4, 0x5b, 0xa6, 0x41, 0x52, 0x2d, 0xe1, 0xad, 0x11, 0x5a, 0xa4,
	0x8f, 0x42, 0x4a, 0x3f, 0xfd, 0x66, 0xfe, 0xf5, 0xde, 0x82, 0x5d, 0x39, 0x0a, 0xdf, 0xa8, 0xdd,
	0x11, 0xc1, 0x32, 0x32, 0xcc, 0x80, 0xdc, 0x0b, 0xb8, 0x80, 0xcd, 0x9f, 0x7d, 0x93, 0x14, 0x38,
	0x42, 0xdb, 0x29, 0x92, 0x3d, 0x06, 0xdd, 0x32, 0x7f, 0x80, 0x8c, 0x8b, 0x68, 0xfc, 0x17, 0x46,
	0x83, 0xbe, 0x0e, 0xac, 0xc6, 0x88, 0x3b, 0x65, 0xb0, 0x6e, 0xb8, 0x9a, 0xe3, 0x06, 0x5a, 0xf8,
	0xa0, 0xf4, 0x05, 0xa4, 0xfe, 0x6b, 0x9a, 0xd4, 0x9a, 0xe1, 0x2a, 0x6e, 0xc0, 0x9e, 0x62, 0xde,
	0xc9, 0x03, 0x3c, 0x51, 0xec, 0x5b, 0x3a, 0xbd, 0x2c, 0x78, 0x11, 0xad, 0xff, 0xf6, 0x0d, 0x9d,
	0x90, 0xaf, 0x32, 0x24, 0x45, 0xb7, 0xd1, 0xce, 0x47, 0x60, 0xa9, 0xed, 0xda, 0x36, 0x72, 0x2e,
	0x14, 0xe5, 0xbf, 0x33, 0xf4, 0x10, 0x7e, 0xe7, 0xbb, 0x60, 0xc5, 0xd6, 0x5f, 0x6a, 0x6d, 0x77,
	0x70, 0x31, 0xf2, 0xff, 0xfc, 0x86, 0x5e, 0xe2, 0x5d, 0xb6, 0xf5, 0x97, 0x05, 0x8c, 0xb0, 0x93,
	0x07, 0x2b, 0xe4, 0xe1, 0x2e, 0x4d, 0x37, 0x2e, 0x54, 0xe8, 0xcf, 0xd2, 0x9d, 0x42, 0xf0, 0x44,
	0xc3, 0xd8, 0x29, 0x81, 0x35, 0x4a, 0xc3, 0x40, 0x78, 0xde, 0x7d, 0x11, 0x99, 0xff, 0x95, 0x22,
	0xb3, 0x4a, 0x50, 0x8b, 0x04, 0x73, 0xe7, 0x19, 0xb8, 0x4c, 0x6e, 0xf9, 0x68, 0xe4, 0x65, 0xc4,
	0x68, 0x15, 0x77, 0x11, 0xc5, 0xff, 0xcd, 0x74, 0x02, 0x09, 0x32, 0x79, 0x71, 0x31, 0x5c, 0xe8,
	0xed, 0xd8, 0xe0, 0x1e, 0x7b, 0x1b, 0x9e, 0x76, 0x76, 0xcf, 0xa4, 0xaf, 0xa1, 0x1e, 0xa2, 0x13,
	0x8d, 0xbd, 0xda, 0x3e, 0x45, 0xa7, 0xfd, 0x1f, 0xc6, 0xe1, 0x0e, 0xa3, 0x25, 0x27, 0x48, 0xed,
	0xa3, 0x13, 0x02, 0x4b, 0x3a, 0xb2, 0x03, 0x6e, 0x30, 0x9b, 0xd2, 0x3c, 0xd4, 0x41, 0x78, 0xad,
	0x8f, 0xe2, 0x67, 0x72, 0x2f, 0x62, 0xf3, 0x7f, 0xd3, 0x76, 0x76, 0x9d, 0x91, 0x52, 0x43, 0x4a,
	0x51, 0x7e, 0xf0, 0x8e, 0x0a, 0x36, 0x7d, 0x64, 0x75, 0x42, 0x03, 0x26, 0x8f, 0xb9, 0x5e, 0x44,
	0xfd, 0xcf, 0xd3, 0xd4, 0x37, 0x30, 0x01, 0x66, 0xc4, 0x78, 0x3a, 0xb1, 0xd3, 0x05, 0xeb, 0x47,
	0xba, 0xc7, 0xb4, 0x32, 0x8d, 0x33, 0xf8, 0x7f, 0x91, 0x33, 0x48, 0xf9, 0xf2, 0x9d, 0x11, 0x4f,
	0xae, 0xae, 0x1d, 0x25, 0xeb, 0x55, 0xb0, 0x69, 0x23, 0xaf, 0x6b, 0x3a, 0xdd, 0xb8, 0x1b, 0x2e,
	0xe2, 0xf5, 0xff, 0xcf, 0x08, 0xcf, 0x08, 0x84, 0xca, 0xcf, 0x7f, 0x50, 0xca, 0x7c, 0xb9, 0xdd,
	0x35, 0x83, 0xde, 0xa0, 0xb5, 0xdd, 0x76, 0xed, 0xb7, 0xdf, 0x7d, 0xef, 0xf0, 0xed, 0xae, 0xfb,
	0x96, 0x1f, 0x20, 0xdd, 0x7e, 0xcb, 0x43, 0xf4, 0xf9, 0x7b, 0x3f, 0xfe, 0x0f, 0x01, 0x82, 0xce,
	0x93, 0x57, 0x99, 0x99, 0xbf, 0x08, 0x00, 0x00, 0xff, 0xff, 0x87, 0x7f, 0x28, 0x02, 0x46, 0x60,
	0x00, 0x00,
}
