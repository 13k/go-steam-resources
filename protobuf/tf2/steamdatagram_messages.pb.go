// Code generated by protoc-gen-go. DO NOT EDIT.
// source: steamdatagram_messages.proto

package tf2 // import "github.com/13k/go-steam-resources/protobuf/tf2"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ESteamDatagramMsgID int32

const (
	ESteamDatagramMsgID_k_ESteamDatagramMsg_Invalid                       ESteamDatagramMsgID = 0
	ESteamDatagramMsgID_k_ESteamDatagramMsg_RouterPingRequest             ESteamDatagramMsgID = 1
	ESteamDatagramMsgID_k_ESteamDatagramMsg_RouterPingReply               ESteamDatagramMsgID = 2
	ESteamDatagramMsgID_k_ESteamDatagramMsg_GameserverPingRequest         ESteamDatagramMsgID = 3
	ESteamDatagramMsgID_k_ESteamDatagramMsg_GameserverPingReply           ESteamDatagramMsgID = 4
	ESteamDatagramMsgID_k_ESteamDatagramMsg_GameserverSessionRequest      ESteamDatagramMsgID = 5
	ESteamDatagramMsgID_k_ESteamDatagramMsg_GameserverSessionEstablished  ESteamDatagramMsgID = 6
	ESteamDatagramMsgID_k_ESteamDatagramMsg_NoSession                     ESteamDatagramMsgID = 7
	ESteamDatagramMsgID_k_ESteamDatagramMsg_Diagnostic                    ESteamDatagramMsgID = 8
	ESteamDatagramMsgID_k_ESteamDatagramMsg_DataClientToRouter            ESteamDatagramMsgID = 9
	ESteamDatagramMsgID_k_ESteamDatagramMsg_DataRouterToServer            ESteamDatagramMsgID = 10
	ESteamDatagramMsgID_k_ESteamDatagramMsg_DataServerToRouter            ESteamDatagramMsgID = 11
	ESteamDatagramMsgID_k_ESteamDatagramMsg_DataRouterToClient            ESteamDatagramMsgID = 12
	ESteamDatagramMsgID_k_ESteamDatagramMsg_Stats                         ESteamDatagramMsgID = 13
	ESteamDatagramMsgID_k_ESteamDatagramMsg_ClientPingSampleRequest       ESteamDatagramMsgID = 14
	ESteamDatagramMsgID_k_ESteamDatagramMsg_ClientPingSampleReply         ESteamDatagramMsgID = 15
	ESteamDatagramMsgID_k_ESteamDatagramMsg_ClientToRouterSwitchedPrimary ESteamDatagramMsgID = 16
	ESteamDatagramMsgID_k_ESteamDatagramMsg_RelayHealth                   ESteamDatagramMsgID = 17
	ESteamDatagramMsgID_k_ESteamDatagramMsg_ConnectRequest                ESteamDatagramMsgID = 18
	ESteamDatagramMsgID_k_ESteamDatagramMsg_ConnectOK                     ESteamDatagramMsgID = 19
	ESteamDatagramMsgID_k_ESteamDatagramMsg_ConnectionClosed              ESteamDatagramMsgID = 20
	ESteamDatagramMsgID_k_ESteamDatagramMsg_NoConnection                  ESteamDatagramMsgID = 21
	ESteamDatagramMsgID_k_ESteamDatagramMsg_RelayToRelayPingRequest       ESteamDatagramMsgID = 22
	ESteamDatagramMsgID_k_ESteamDatagramMsg_RelayToRelayPingReply         ESteamDatagramMsgID = 23
	ESteamDatagramMsgID_k_ESteamDatagramMsg_P2PSessionRequest             ESteamDatagramMsgID = 24
	ESteamDatagramMsgID_k_ESteamDatagramMsg_P2PSessionEstablished         ESteamDatagramMsgID = 25
)

var ESteamDatagramMsgID_name = map[int32]string{
	0:  "k_ESteamDatagramMsg_Invalid",
	1:  "k_ESteamDatagramMsg_RouterPingRequest",
	2:  "k_ESteamDatagramMsg_RouterPingReply",
	3:  "k_ESteamDatagramMsg_GameserverPingRequest",
	4:  "k_ESteamDatagramMsg_GameserverPingReply",
	5:  "k_ESteamDatagramMsg_GameserverSessionRequest",
	6:  "k_ESteamDatagramMsg_GameserverSessionEstablished",
	7:  "k_ESteamDatagramMsg_NoSession",
	8:  "k_ESteamDatagramMsg_Diagnostic",
	9:  "k_ESteamDatagramMsg_DataClientToRouter",
	10: "k_ESteamDatagramMsg_DataRouterToServer",
	11: "k_ESteamDatagramMsg_DataServerToRouter",
	12: "k_ESteamDatagramMsg_DataRouterToClient",
	13: "k_ESteamDatagramMsg_Stats",
	14: "k_ESteamDatagramMsg_ClientPingSampleRequest",
	15: "k_ESteamDatagramMsg_ClientPingSampleReply",
	16: "k_ESteamDatagramMsg_ClientToRouterSwitchedPrimary",
	17: "k_ESteamDatagramMsg_RelayHealth",
	18: "k_ESteamDatagramMsg_ConnectRequest",
	19: "k_ESteamDatagramMsg_ConnectOK",
	20: "k_ESteamDatagramMsg_ConnectionClosed",
	21: "k_ESteamDatagramMsg_NoConnection",
	22: "k_ESteamDatagramMsg_RelayToRelayPingRequest",
	23: "k_ESteamDatagramMsg_RelayToRelayPingReply",
	24: "k_ESteamDatagramMsg_P2PSessionRequest",
	25: "k_ESteamDatagramMsg_P2PSessionEstablished",
}
var ESteamDatagramMsgID_value = map[string]int32{
	"k_ESteamDatagramMsg_Invalid":                       0,
	"k_ESteamDatagramMsg_RouterPingRequest":             1,
	"k_ESteamDatagramMsg_RouterPingReply":               2,
	"k_ESteamDatagramMsg_GameserverPingRequest":         3,
	"k_ESteamDatagramMsg_GameserverPingReply":           4,
	"k_ESteamDatagramMsg_GameserverSessionRequest":      5,
	"k_ESteamDatagramMsg_GameserverSessionEstablished":  6,
	"k_ESteamDatagramMsg_NoSession":                     7,
	"k_ESteamDatagramMsg_Diagnostic":                    8,
	"k_ESteamDatagramMsg_DataClientToRouter":            9,
	"k_ESteamDatagramMsg_DataRouterToServer":            10,
	"k_ESteamDatagramMsg_DataServerToRouter":            11,
	"k_ESteamDatagramMsg_DataRouterToClient":            12,
	"k_ESteamDatagramMsg_Stats":                         13,
	"k_ESteamDatagramMsg_ClientPingSampleRequest":       14,
	"k_ESteamDatagramMsg_ClientPingSampleReply":         15,
	"k_ESteamDatagramMsg_ClientToRouterSwitchedPrimary": 16,
	"k_ESteamDatagramMsg_RelayHealth":                   17,
	"k_ESteamDatagramMsg_ConnectRequest":                18,
	"k_ESteamDatagramMsg_ConnectOK":                     19,
	"k_ESteamDatagramMsg_ConnectionClosed":              20,
	"k_ESteamDatagramMsg_NoConnection":                  21,
	"k_ESteamDatagramMsg_RelayToRelayPingRequest":       22,
	"k_ESteamDatagramMsg_RelayToRelayPingReply":         23,
	"k_ESteamDatagramMsg_P2PSessionRequest":             24,
	"k_ESteamDatagramMsg_P2PSessionEstablished":         25,
}

func (x ESteamDatagramMsgID) Enum() *ESteamDatagramMsgID {
	p := new(ESteamDatagramMsgID)
	*p = x
	return p
}
func (x ESteamDatagramMsgID) String() string {
	return proto.EnumName(ESteamDatagramMsgID_name, int32(x))
}
func (x *ESteamDatagramMsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ESteamDatagramMsgID_value, data, "ESteamDatagramMsgID")
	if err != nil {
		return err
	}
	*x = ESteamDatagramMsgID(value)
	return nil
}
func (ESteamDatagramMsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_steamdatagram_messages_89793dc68acee3d1, []int{0}
}

type ESteamNetworkingUDPMsgID int32

const (
	ESteamNetworkingUDPMsgID_k_ESteamNetworkingUDPMsg_ChallengeRequest ESteamNetworkingUDPMsgID = 32
	ESteamNetworkingUDPMsgID_k_ESteamNetworkingUDPMsg_ChallengeReply   ESteamNetworkingUDPMsgID = 33
	ESteamNetworkingUDPMsgID_k_ESteamNetworkingUDPMsg_ConnectRequest   ESteamNetworkingUDPMsgID = 34
	ESteamNetworkingUDPMsgID_k_ESteamNetworkingUDPMsg_ConnectOK        ESteamNetworkingUDPMsgID = 35
	ESteamNetworkingUDPMsgID_k_ESteamNetworkingUDPMsg_ConnectionClosed ESteamNetworkingUDPMsgID = 36
	ESteamNetworkingUDPMsgID_k_ESteamNetworkingUDPMsg_NoConnection     ESteamNetworkingUDPMsgID = 37
	ESteamNetworkingUDPMsgID_k_ESteamNetworkingUDPMsg_Stats            ESteamNetworkingUDPMsgID = 38
)

var ESteamNetworkingUDPMsgID_name = map[int32]string{
	32: "k_ESteamNetworkingUDPMsg_ChallengeRequest",
	33: "k_ESteamNetworkingUDPMsg_ChallengeReply",
	34: "k_ESteamNetworkingUDPMsg_ConnectRequest",
	35: "k_ESteamNetworkingUDPMsg_ConnectOK",
	36: "k_ESteamNetworkingUDPMsg_ConnectionClosed",
	37: "k_ESteamNetworkingUDPMsg_NoConnection",
	38: "k_ESteamNetworkingUDPMsg_Stats",
}
var ESteamNetworkingUDPMsgID_value = map[string]int32{
	"k_ESteamNetworkingUDPMsg_ChallengeRequest": 32,
	"k_ESteamNetworkingUDPMsg_ChallengeReply":   33,
	"k_ESteamNetworkingUDPMsg_ConnectRequest":   34,
	"k_ESteamNetworkingUDPMsg_ConnectOK":        35,
	"k_ESteamNetworkingUDPMsg_ConnectionClosed": 36,
	"k_ESteamNetworkingUDPMsg_NoConnection":     37,
	"k_ESteamNetworkingUDPMsg_Stats":            38,
}

func (x ESteamNetworkingUDPMsgID) Enum() *ESteamNetworkingUDPMsgID {
	p := new(ESteamNetworkingUDPMsgID)
	*p = x
	return p
}
func (x ESteamNetworkingUDPMsgID) String() string {
	return proto.EnumName(ESteamNetworkingUDPMsgID_name, int32(x))
}
func (x *ESteamNetworkingUDPMsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ESteamNetworkingUDPMsgID_value, data, "ESteamNetworkingUDPMsgID")
	if err != nil {
		return err
	}
	*x = ESteamNetworkingUDPMsgID(value)
	return nil
}
func (ESteamNetworkingUDPMsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_steamdatagram_messages_89793dc68acee3d1, []int{1}
}

type CMsgSteamDatagramSessionCryptInfo_EKeyType int32

const (
	CMsgSteamDatagramSessionCryptInfo_INVALID    CMsgSteamDatagramSessionCryptInfo_EKeyType = 0
	CMsgSteamDatagramSessionCryptInfo_CURVE25519 CMsgSteamDatagramSessionCryptInfo_EKeyType = 1
)

var CMsgSteamDatagramSessionCryptInfo_EKeyType_name = map[int32]string{
	0: "INVALID",
	1: "CURVE25519",
}
var CMsgSteamDatagramSessionCryptInfo_EKeyType_value = map[string]int32{
	"INVALID":    0,
	"CURVE25519": 1,
}

func (x CMsgSteamDatagramSessionCryptInfo_EKeyType) Enum() *CMsgSteamDatagramSessionCryptInfo_EKeyType {
	p := new(CMsgSteamDatagramSessionCryptInfo_EKeyType)
	*p = x
	return p
}
func (x CMsgSteamDatagramSessionCryptInfo_EKeyType) String() string {
	return proto.EnumName(CMsgSteamDatagramSessionCryptInfo_EKeyType_name, int32(x))
}
func (x *CMsgSteamDatagramSessionCryptInfo_EKeyType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgSteamDatagramSessionCryptInfo_EKeyType_value, data, "CMsgSteamDatagramSessionCryptInfo_EKeyType")
	if err != nil {
		return err
	}
	*x = CMsgSteamDatagramSessionCryptInfo_EKeyType(value)
	return nil
}
func (CMsgSteamDatagramSessionCryptInfo_EKeyType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_steamdatagram_messages_89793dc68acee3d1, []int{3, 0}
}

type CMsgSteamDatagramConnectionStatsClientToRouter_Flags int32

const (
	CMsgSteamDatagramConnectionStatsClientToRouter_ACK_REQUEST_RELAY     CMsgSteamDatagramConnectionStatsClientToRouter_Flags = 1
	CMsgSteamDatagramConnectionStatsClientToRouter_ACK_REQUEST_E2E       CMsgSteamDatagramConnectionStatsClientToRouter_Flags = 2
	CMsgSteamDatagramConnectionStatsClientToRouter_ACK_REQUEST_IMMEDIATE CMsgSteamDatagramConnectionStatsClientToRouter_Flags = 4
)

var CMsgSteamDatagramConnectionStatsClientToRouter_Flags_name = map[int32]string{
	1: "ACK_REQUEST_RELAY",
	2: "ACK_REQUEST_E2E",
	4: "ACK_REQUEST_IMMEDIATE",
}
var CMsgSteamDatagramConnectionStatsClientToRouter_Flags_value = map[string]int32{
	"ACK_REQUEST_RELAY":     1,
	"ACK_REQUEST_E2E":       2,
	"ACK_REQUEST_IMMEDIATE": 4,
}

func (x CMsgSteamDatagramConnectionStatsClientToRouter_Flags) Enum() *CMsgSteamDatagramConnectionStatsClientToRouter_Flags {
	p := new(CMsgSteamDatagramConnectionStatsClientToRouter_Flags)
	*p = x
	return p
}
func (x CMsgSteamDatagramConnectionStatsClientToRouter_Flags) String() string {
	return proto.EnumName(CMsgSteamDatagramConnectionStatsClientToRouter_Flags_name, int32(x))
}
func (x *CMsgSteamDatagramConnectionStatsClientToRouter_Flags) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgSteamDatagramConnectionStatsClientToRouter_Flags_value, data, "CMsgSteamDatagramConnectionStatsClientToRouter_Flags")
	if err != nil {
		return err
	}
	*x = CMsgSteamDatagramConnectionStatsClientToRouter_Flags(value)
	return nil
}
func (CMsgSteamDatagramConnectionStatsClientToRouter_Flags) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_steamdatagram_messages_89793dc68acee3d1, []int{14, 0}
}

type CMsgSteamDatagramConnectionStatsRouterToClient_Flags int32

const (
	CMsgSteamDatagramConnectionStatsRouterToClient_ACK_REQUEST_RELAY     CMsgSteamDatagramConnectionStatsRouterToClient_Flags = 1
	CMsgSteamDatagramConnectionStatsRouterToClient_ACK_REQUEST_E2E       CMsgSteamDatagramConnectionStatsRouterToClient_Flags = 2
	CMsgSteamDatagramConnectionStatsRouterToClient_ACK_REQUEST_IMMEDIATE CMsgSteamDatagramConnectionStatsRouterToClient_Flags = 4
)

var CMsgSteamDatagramConnectionStatsRouterToClient_Flags_name = map[int32]string{
	1: "ACK_REQUEST_RELAY",
	2: "ACK_REQUEST_E2E",
	4: "ACK_REQUEST_IMMEDIATE",
}
var CMsgSteamDatagramConnectionStatsRouterToClient_Flags_value = map[string]int32{
	"ACK_REQUEST_RELAY":     1,
	"ACK_REQUEST_E2E":       2,
	"ACK_REQUEST_IMMEDIATE": 4,
}

func (x CMsgSteamDatagramConnectionStatsRouterToClient_Flags) Enum() *CMsgSteamDatagramConnectionStatsRouterToClient_Flags {
	p := new(CMsgSteamDatagramConnectionStatsRouterToClient_Flags)
	*p = x
	return p
}
func (x CMsgSteamDatagramConnectionStatsRouterToClient_Flags) String() string {
	return proto.EnumName(CMsgSteamDatagramConnectionStatsRouterToClient_Flags_name, int32(x))
}
func (x *CMsgSteamDatagramConnectionStatsRouterToClient_Flags) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgSteamDatagramConnectionStatsRouterToClient_Flags_value, data, "CMsgSteamDatagramConnectionStatsRouterToClient_Flags")
	if err != nil {
		return err
	}
	*x = CMsgSteamDatagramConnectionStatsRouterToClient_Flags(value)
	return nil
}
func (CMsgSteamDatagramConnectionStatsRouterToClient_Flags) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_steamdatagram_messages_89793dc68acee3d1, []int{15, 0}
}

type CMsgSteamDatagramConnectionStatsRouterToServer_Flags int32

const (
	CMsgSteamDatagramConnectionStatsRouterToServer_ACK_REQUEST_RELAY     CMsgSteamDatagramConnectionStatsRouterToServer_Flags = 1
	CMsgSteamDatagramConnectionStatsRouterToServer_ACK_REQUEST_E2E       CMsgSteamDatagramConnectionStatsRouterToServer_Flags = 2
	CMsgSteamDatagramConnectionStatsRouterToServer_ACK_REQUEST_IMMEDIATE CMsgSteamDatagramConnectionStatsRouterToServer_Flags = 4
)

var CMsgSteamDatagramConnectionStatsRouterToServer_Flags_name = map[int32]string{
	1: "ACK_REQUEST_RELAY",
	2: "ACK_REQUEST_E2E",
	4: "ACK_REQUEST_IMMEDIATE",
}
var CMsgSteamDatagramConnectionStatsRouterToServer_Flags_value = map[string]int32{
	"ACK_REQUEST_RELAY":     1,
	"ACK_REQUEST_E2E":       2,
	"ACK_REQUEST_IMMEDIATE": 4,
}

func (x CMsgSteamDatagramConnectionStatsRouterToServer_Flags) Enum() *CMsgSteamDatagramConnectionStatsRouterToServer_Flags {
	p := new(CMsgSteamDatagramConnectionStatsRouterToServer_Flags)
	*p = x
	return p
}
func (x CMsgSteamDatagramConnectionStatsRouterToServer_Flags) String() string {
	return proto.EnumName(CMsgSteamDatagramConnectionStatsRouterToServer_Flags_name, int32(x))
}
func (x *CMsgSteamDatagramConnectionStatsRouterToServer_Flags) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgSteamDatagramConnectionStatsRouterToServer_Flags_value, data, "CMsgSteamDatagramConnectionStatsRouterToServer_Flags")
	if err != nil {
		return err
	}
	*x = CMsgSteamDatagramConnectionStatsRouterToServer_Flags(value)
	return nil
}
func (CMsgSteamDatagramConnectionStatsRouterToServer_Flags) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_steamdatagram_messages_89793dc68acee3d1, []int{16, 0}
}

type CMsgSteamDatagramConnectionStatsServerToRouter_Flags int32

const (
	CMsgSteamDatagramConnectionStatsServerToRouter_ACK_REQUEST_RELAY     CMsgSteamDatagramConnectionStatsServerToRouter_Flags = 1
	CMsgSteamDatagramConnectionStatsServerToRouter_ACK_REQUEST_E2E       CMsgSteamDatagramConnectionStatsServerToRouter_Flags = 2
	CMsgSteamDatagramConnectionStatsServerToRouter_ACK_REQUEST_IMMEDIATE CMsgSteamDatagramConnectionStatsServerToRouter_Flags = 4
)

var CMsgSteamDatagramConnectionStatsServerToRouter_Flags_name = map[int32]string{
	1: "ACK_REQUEST_RELAY",
	2: "ACK_REQUEST_E2E",
	4: "ACK_REQUEST_IMMEDIATE",
}
var CMsgSteamDatagramConnectionStatsServerToRouter_Flags_value = map[string]int32{
	"ACK_REQUEST_RELAY":     1,
	"ACK_REQUEST_E2E":       2,
	"ACK_REQUEST_IMMEDIATE": 4,
}

func (x CMsgSteamDatagramConnectionStatsServerToRouter_Flags) Enum() *CMsgSteamDatagramConnectionStatsServerToRouter_Flags {
	p := new(CMsgSteamDatagramConnectionStatsServerToRouter_Flags)
	*p = x
	return p
}
func (x CMsgSteamDatagramConnectionStatsServerToRouter_Flags) String() string {
	return proto.EnumName(CMsgSteamDatagramConnectionStatsServerToRouter_Flags_name, int32(x))
}
func (x *CMsgSteamDatagramConnectionStatsServerToRouter_Flags) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgSteamDatagramConnectionStatsServerToRouter_Flags_value, data, "CMsgSteamDatagramConnectionStatsServerToRouter_Flags")
	if err != nil {
		return err
	}
	*x = CMsgSteamDatagramConnectionStatsServerToRouter_Flags(value)
	return nil
}
func (CMsgSteamDatagramConnectionStatsServerToRouter_Flags) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_steamdatagram_messages_89793dc68acee3d1, []int{17, 0}
}

type CMsgSteamDatagramConnectionClosed_ERelayMode int32

const (
	CMsgSteamDatagramConnectionClosed_None         CMsgSteamDatagramConnectionClosed_ERelayMode = 0
	CMsgSteamDatagramConnectionClosed_EndToEnd     CMsgSteamDatagramConnectionClosed_ERelayMode = 1
	CMsgSteamDatagramConnectionClosed_ClosedByPeer CMsgSteamDatagramConnectionClosed_ERelayMode = 2
)

var CMsgSteamDatagramConnectionClosed_ERelayMode_name = map[int32]string{
	0: "None",
	1: "EndToEnd",
	2: "ClosedByPeer",
}
var CMsgSteamDatagramConnectionClosed_ERelayMode_value = map[string]int32{
	"None":         0,
	"EndToEnd":     1,
	"ClosedByPeer": 2,
}

func (x CMsgSteamDatagramConnectionClosed_ERelayMode) Enum() *CMsgSteamDatagramConnectionClosed_ERelayMode {
	p := new(CMsgSteamDatagramConnectionClosed_ERelayMode)
	*p = x
	return p
}
func (x CMsgSteamDatagramConnectionClosed_ERelayMode) String() string {
	return proto.EnumName(CMsgSteamDatagramConnectionClosed_ERelayMode_name, int32(x))
}
func (x *CMsgSteamDatagramConnectionClosed_ERelayMode) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgSteamDatagramConnectionClosed_ERelayMode_value, data, "CMsgSteamDatagramConnectionClosed_ERelayMode")
	if err != nil {
		return err
	}
	*x = CMsgSteamDatagramConnectionClosed_ERelayMode(value)
	return nil
}
func (CMsgSteamDatagramConnectionClosed_ERelayMode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_steamdatagram_messages_89793dc68acee3d1, []int{24, 0}
}

type CMsgSteamDatagramConnectionStatsP2PClientToRouter_Flags int32

const (
	CMsgSteamDatagramConnectionStatsP2PClientToRouter_ACK_REQUEST_RELAY     CMsgSteamDatagramConnectionStatsP2PClientToRouter_Flags = 1
	CMsgSteamDatagramConnectionStatsP2PClientToRouter_ACK_REQUEST_E2E       CMsgSteamDatagramConnectionStatsP2PClientToRouter_Flags = 2
	CMsgSteamDatagramConnectionStatsP2PClientToRouter_ACK_REQUEST_IMMEDIATE CMsgSteamDatagramConnectionStatsP2PClientToRouter_Flags = 4
)

var CMsgSteamDatagramConnectionStatsP2PClientToRouter_Flags_name = map[int32]string{
	1: "ACK_REQUEST_RELAY",
	2: "ACK_REQUEST_E2E",
	4: "ACK_REQUEST_IMMEDIATE",
}
var CMsgSteamDatagramConnectionStatsP2PClientToRouter_Flags_value = map[string]int32{
	"ACK_REQUEST_RELAY":     1,
	"ACK_REQUEST_E2E":       2,
	"ACK_REQUEST_IMMEDIATE": 4,
}

func (x CMsgSteamDatagramConnectionStatsP2PClientToRouter_Flags) Enum() *CMsgSteamDatagramConnectionStatsP2PClientToRouter_Flags {
	p := new(CMsgSteamDatagramConnectionStatsP2PClientToRouter_Flags)
	*p = x
	return p
}
func (x CMsgSteamDatagramConnectionStatsP2PClientToRouter_Flags) String() string {
	return proto.EnumName(CMsgSteamDatagramConnectionStatsP2PClientToRouter_Flags_name, int32(x))
}
func (x *CMsgSteamDatagramConnectionStatsP2PClientToRouter_Flags) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgSteamDatagramConnectionStatsP2PClientToRouter_Flags_value, data, "CMsgSteamDatagramConnectionStatsP2PClientToRouter_Flags")
	if err != nil {
		return err
	}
	*x = CMsgSteamDatagramConnectionStatsP2PClientToRouter_Flags(value)
	return nil
}
func (CMsgSteamDatagramConnectionStatsP2PClientToRouter_Flags) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_steamdatagram_messages_89793dc68acee3d1, []int{31, 0}
}

type CMsgSteamDatagramConnectionStatsP2PRouterToClient_Flags int32

const (
	CMsgSteamDatagramConnectionStatsP2PRouterToClient_ACK_REQUEST_RELAY     CMsgSteamDatagramConnectionStatsP2PRouterToClient_Flags = 1
	CMsgSteamDatagramConnectionStatsP2PRouterToClient_ACK_REQUEST_E2E       CMsgSteamDatagramConnectionStatsP2PRouterToClient_Flags = 2
	CMsgSteamDatagramConnectionStatsP2PRouterToClient_ACK_REQUEST_IMMEDIATE CMsgSteamDatagramConnectionStatsP2PRouterToClient_Flags = 4
)

var CMsgSteamDatagramConnectionStatsP2PRouterToClient_Flags_name = map[int32]string{
	1: "ACK_REQUEST_RELAY",
	2: "ACK_REQUEST_E2E",
	4: "ACK_REQUEST_IMMEDIATE",
}
var CMsgSteamDatagramConnectionStatsP2PRouterToClient_Flags_value = map[string]int32{
	"ACK_REQUEST_RELAY":     1,
	"ACK_REQUEST_E2E":       2,
	"ACK_REQUEST_IMMEDIATE": 4,
}

func (x CMsgSteamDatagramConnectionStatsP2PRouterToClient_Flags) Enum() *CMsgSteamDatagramConnectionStatsP2PRouterToClient_Flags {
	p := new(CMsgSteamDatagramConnectionStatsP2PRouterToClient_Flags)
	*p = x
	return p
}
func (x CMsgSteamDatagramConnectionStatsP2PRouterToClient_Flags) String() string {
	return proto.EnumName(CMsgSteamDatagramConnectionStatsP2PRouterToClient_Flags_name, int32(x))
}
func (x *CMsgSteamDatagramConnectionStatsP2PRouterToClient_Flags) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgSteamDatagramConnectionStatsP2PRouterToClient_Flags_value, data, "CMsgSteamDatagramConnectionStatsP2PRouterToClient_Flags")
	if err != nil {
		return err
	}
	*x = CMsgSteamDatagramConnectionStatsP2PRouterToClient_Flags(value)
	return nil
}
func (CMsgSteamDatagramConnectionStatsP2PRouterToClient_Flags) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_steamdatagram_messages_89793dc68acee3d1, []int{32, 0}
}

type CMsgSteamSockets_UDP_Stats_Flags int32

const (
	CMsgSteamSockets_UDP_Stats_ACK_REQUEST_E2E       CMsgSteamSockets_UDP_Stats_Flags = 2
	CMsgSteamSockets_UDP_Stats_ACK_REQUEST_IMMEDIATE CMsgSteamSockets_UDP_Stats_Flags = 4
)

var CMsgSteamSockets_UDP_Stats_Flags_name = map[int32]string{
	2: "ACK_REQUEST_E2E",
	4: "ACK_REQUEST_IMMEDIATE",
}
var CMsgSteamSockets_UDP_Stats_Flags_value = map[string]int32{
	"ACK_REQUEST_E2E":       2,
	"ACK_REQUEST_IMMEDIATE": 4,
}

func (x CMsgSteamSockets_UDP_Stats_Flags) Enum() *CMsgSteamSockets_UDP_Stats_Flags {
	p := new(CMsgSteamSockets_UDP_Stats_Flags)
	*p = x
	return p
}
func (x CMsgSteamSockets_UDP_Stats_Flags) String() string {
	return proto.EnumName(CMsgSteamSockets_UDP_Stats_Flags_name, int32(x))
}
func (x *CMsgSteamSockets_UDP_Stats_Flags) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgSteamSockets_UDP_Stats_Flags_value, data, "CMsgSteamSockets_UDP_Stats_Flags")
	if err != nil {
		return err
	}
	*x = CMsgSteamSockets_UDP_Stats_Flags(value)
	return nil
}
func (CMsgSteamSockets_UDP_Stats_Flags) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_steamdatagram_messages_89793dc68acee3d1, []int{39, 0}
}

type CMsgSteamDatagramRouterPingReply struct {
	ClientTimestamp            *uint32                                            `protobuf:"fixed32,1,opt,name=client_timestamp,json=clientTimestamp" json:"client_timestamp,omitempty"`
	LatencyDatacenterIds       []uint32                                           `protobuf:"fixed32,2,rep,packed,name=latency_datacenter_ids,json=latencyDatacenterIds" json:"latency_datacenter_ids,omitempty"`
	LatencyPingMs              []uint32                                           `protobuf:"varint,3,rep,packed,name=latency_ping_ms,json=latencyPingMs" json:"latency_ping_ms,omitempty"`
	YourPublicIp               *uint32                                            `protobuf:"fixed32,4,opt,name=your_public_ip,json=yourPublicIp" json:"your_public_ip,omitempty"`
	ServerTime                 *uint32                                            `protobuf:"fixed32,5,opt,name=server_time,json=serverTime" json:"server_time,omitempty"`
	Challenge                  *uint64                                            `protobuf:"fixed64,6,opt,name=challenge" json:"challenge,omitempty"`
	SecondsUntilShutdown       *uint32                                            `protobuf:"varint,7,opt,name=seconds_until_shutdown,json=secondsUntilShutdown" json:"seconds_until_shutdown,omitempty"`
	ClientCookie               *uint32                                            `protobuf:"fixed32,8,opt,name=client_cookie,json=clientCookie" json:"client_cookie,omitempty"`
	ScoringPenaltyRelayCluster *uint32                                            `protobuf:"varint,9,opt,name=scoring_penalty_relay_cluster,json=scoringPenaltyRelayCluster" json:"scoring_penalty_relay_cluster,omitempty"`
	RouteExceptions            []*CMsgSteamDatagramRouterPingReply_RouteException `protobuf:"bytes,10,rep,name=route_exceptions,json=routeExceptions" json:"route_exceptions,omitempty"`
	XXX_NoUnkeyedLiteral       struct{}                                           `json:"-"`
	XXX_unrecognized           []byte                                             `json:"-"`
	XXX_sizecache              int32                                              `json:"-"`
}

func (m *CMsgSteamDatagramRouterPingReply) Reset()         { *m = CMsgSteamDatagramRouterPingReply{} }
func (m *CMsgSteamDatagramRouterPingReply) String() string { return proto.CompactTextString(m) }
func (*CMsgSteamDatagramRouterPingReply) ProtoMessage()    {}
func (*CMsgSteamDatagramRouterPingReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_steamdatagram_messages_89793dc68acee3d1, []int{0}
}
func (m *CMsgSteamDatagramRouterPingReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgSteamDatagramRouterPingReply.Unmarshal(m, b)
}
func (m *CMsgSteamDatagramRouterPingReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgSteamDatagramRouterPingReply.Marshal(b, m, deterministic)
}
func (dst *CMsgSteamDatagramRouterPingReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgSteamDatagramRouterPingReply.Merge(dst, src)
}
func (m *CMsgSteamDatagramRouterPingReply) XXX_Size() int {
	return xxx_messageInfo_CMsgSteamDatagramRouterPingReply.Size(m)
}
func (m *CMsgSteamDatagramRouterPingReply) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgSteamDatagramRouterPingReply.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgSteamDatagramRouterPingReply proto.InternalMessageInfo

func (m *CMsgSteamDatagramRouterPingReply) GetClientTimestamp() uint32 {
	if m != nil && m.ClientTimestamp != nil {
		return *m.ClientTimestamp
	}
	return 0
}

func (m *CMsgSteamDatagramRouterPingReply) GetLatencyDatacenterIds() []uint32 {
	if m != nil {
		return m.LatencyDatacenterIds
	}
	return nil
}

func (m *CMsgSteamDatagramRouterPingReply) GetLatencyPingMs() []uint32 {
	if m != nil {
		return m.LatencyPingMs
	}
	return nil
}

func (m *CMsgSteamDatagramRouterPingReply) GetYourPublicIp() uint32 {
	if m != nil && m.YourPublicIp != nil {
		return *m.YourPublicIp
	}
	return 0
}

func (m *CMsgSteamDatagramRouterPingReply) GetServerTime() uint32 {
	if m != nil && m.ServerTime != nil {
		return *m.ServerTime
	}
	return 0
}

func (m *CMsgSteamDatagramRouterPingReply) GetChallenge() uint64 {
	if m != nil && m.Challenge != nil {
		return *m.Challenge
	}
	return 0
}

func (m *CMsgSteamDatagramRouterPingReply) GetSecondsUntilShutdown() uint32 {
	if m != nil && m.SecondsUntilShutdown != nil {
		return *m.SecondsUntilShutdown
	}
	return 0
}

func (m *CMsgSteamDatagramRouterPingReply) GetClientCookie() uint32 {
	if m != nil && m.ClientCookie != nil {
		return *m.ClientCookie
	}
	return 0
}

func (m *CMsgSteamDatagramRouterPingReply) GetScoringPenaltyRelayCluster() uint32 {
	if m != nil && m.ScoringPenaltyRelayCluster != nil {
		return *m.ScoringPenaltyRelayCluster
	}
	return 0
}

func (m *CMsgSteamDatagramRouterPingReply) GetRouteExceptions() []*CMsgSteamDatagramRouterPingReply_RouteException {
	if m != nil {
		return m.RouteExceptions
	}
	return nil
}

type CMsgSteamDatagramRouterPingReply_RouteException struct {
	DataCenterId         *uint32  `protobuf:"fixed32,1,opt,name=data_center_id,json=dataCenterId" json:"data_center_id,omitempty"`
	Flags                *uint32  `protobuf:"varint,2,opt,name=flags" json:"flags,omitempty"`
	Penalty              *uint32  `protobuf:"varint,3,opt,name=penalty" json:"penalty,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgSteamDatagramRouterPingReply_RouteException) Reset() {
	*m = CMsgSteamDatagramRouterPingReply_RouteException{}
}
func (m *CMsgSteamDatagramRouterPingReply_RouteException) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgSteamDatagramRouterPingReply_RouteException) ProtoMessage() {}
func (*CMsgSteamDatagramRouterPingReply_RouteException) Descriptor() ([]byte, []int) {
	return fileDescriptor_steamdatagram_messages_89793dc68acee3d1, []int{0, 0}
}
func (m *CMsgSteamDatagramRouterPingReply_RouteException) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgSteamDatagramRouterPingReply_RouteException.Unmarshal(m, b)
}
func (m *CMsgSteamDatagramRouterPingReply_RouteException) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgSteamDatagramRouterPingReply_RouteException.Marshal(b, m, deterministic)
}
func (dst *CMsgSteamDatagramRouterPingReply_RouteException) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgSteamDatagramRouterPingReply_RouteException.Merge(dst, src)
}
func (m *CMsgSteamDatagramRouterPingReply_RouteException) XXX_Size() int {
	return xxx_messageInfo_CMsgSteamDatagramRouterPingReply_RouteException.Size(m)
}
func (m *CMsgSteamDatagramRouterPingReply_RouteException) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgSteamDatagramRouterPingReply_RouteException.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgSteamDatagramRouterPingReply_RouteException proto.InternalMessageInfo

func (m *CMsgSteamDatagramRouterPingReply_RouteException) GetDataCenterId() uint32 {
	if m != nil && m.DataCenterId != nil {
		return *m.DataCenterId
	}
	return 0
}

func (m *CMsgSteamDatagramRouterPingReply_RouteException) GetFlags() uint32 {
	if m != nil && m.Flags != nil {
		return *m.Flags
	}
	return 0
}

func (m *CMsgSteamDatagramRouterPingReply_RouteException) GetPenalty() uint32 {
	if m != nil && m.Penalty != nil {
		return *m.Penalty
	}
	return 0
}

type CMsgSteamDatagramGameserverPing struct {
	LegacyClientSession     *uint32  `protobuf:"varint,1,opt,name=legacy_client_session,json=legacyClientSession" json:"legacy_client_session,omitempty"`
	ClientSteamId           *uint64  `protobuf:"fixed64,2,opt,name=client_steam_id,json=clientSteamId" json:"client_steam_id,omitempty"`
	ClientTimestamp         *uint32  `protobuf:"fixed32,3,opt,name=client_timestamp,json=clientTimestamp" json:"client_timestamp,omitempty"`
	RouterTimestamp         *uint32  `protobuf:"fixed32,4,opt,name=router_timestamp,json=routerTimestamp" json:"router_timestamp,omitempty"`
	RouterGameserverLatency *uint32  `protobuf:"varint,5,opt,name=router_gameserver_latency,json=routerGameserverLatency" json:"router_gameserver_latency,omitempty"`
	SeqNumberRouter         *uint32  `protobuf:"varint,6,opt,name=seq_number_router,json=seqNumberRouter" json:"seq_number_router,omitempty"`
	SeqNumberE2E            *uint32  `protobuf:"varint,7,opt,name=seq_number_e2e,json=seqNumberE2e" json:"seq_number_e2e,omitempty"`
	RelaySessionId          *uint32  `protobuf:"varint,8,opt,name=relay_session_id,json=relaySessionId" json:"relay_session_id,omitempty"`
	ConnectionId            *uint32  `protobuf:"fixed32,9,opt,name=connection_id,json=connectionId" json:"connection_id,omitempty"`
	XXX_NoUnkeyedLiteral    struct{} `json:"-"`
	XXX_unrecognized        []byte   `json:"-"`
	XXX_sizecache           int32    `json:"-"`
}

func (m *CMsgSteamDatagramGameserverPing) Reset()         { *m = CMsgSteamDatagramGameserverPing{} }
func (m *CMsgSteamDatagramGameserverPing) String() string { return proto.CompactTextString(m) }
func (*CMsgSteamDatagramGameserverPing) ProtoMessage()    {}
func (*CMsgSteamDatagramGameserverPing) Descriptor() ([]byte, []int) {
	return fileDescriptor_steamdatagram_messages_89793dc68acee3d1, []int{1}
}
func (m *CMsgSteamDatagramGameserverPing) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgSteamDatagramGameserverPing.Unmarshal(m, b)
}
func (m *CMsgSteamDatagramGameserverPing) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgSteamDatagramGameserverPing.Marshal(b, m, deterministic)
}
func (dst *CMsgSteamDatagramGameserverPing) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgSteamDatagramGameserverPing.Merge(dst, src)
}
func (m *CMsgSteamDatagramGameserverPing) XXX_Size() int {
	return xxx_messageInfo_CMsgSteamDatagramGameserverPing.Size(m)
}
func (m *CMsgSteamDatagramGameserverPing) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgSteamDatagramGameserverPing.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgSteamDatagramGameserverPing proto.InternalMessageInfo

func (m *CMsgSteamDatagramGameserverPing) GetLegacyClientSession() uint32 {
	if m != nil && m.LegacyClientSession != nil {
		return *m.LegacyClientSession
	}
	return 0
}

func (m *CMsgSteamDatagramGameserverPing) GetClientSteamId() uint64 {
	if m != nil && m.ClientSteamId != nil {
		return *m.ClientSteamId
	}
	return 0
}

func (m *CMsgSteamDatagramGameserverPing) GetClientTimestamp() uint32 {
	if m != nil && m.ClientTimestamp != nil {
		return *m.ClientTimestamp
	}
	return 0
}

func (m *CMsgSteamDatagramGameserverPing) GetRouterTimestamp() uint32 {
	if m != nil && m.RouterTimestamp != nil {
		return *m.RouterTimestamp
	}
	return 0
}

func (m *CMsgSteamDatagramGameserverPing) GetRouterGameserverLatency() uint32 {
	if m != nil && m.RouterGameserverLatency != nil {
		return *m.RouterGameserverLatency
	}
	return 0
}

func (m *CMsgSteamDatagramGameserverPing) GetSeqNumberRouter() uint32 {
	if m != nil && m.SeqNumberRouter != nil {
		return *m.SeqNumberRouter
	}
	return 0
}

func (m *CMsgSteamDatagramGameserverPing) GetSeqNumberE2E() uint32 {
	if m != nil && m.SeqNumberE2E != nil {
		return *m.SeqNumberE2E
	}
	return 0
}

func (m *CMsgSteamDatagramGameserverPing) GetRelaySessionId() uint32 {
	if m != nil && m.RelaySessionId != nil {
		return *m.RelaySessionId
	}
	return 0
}

func (m *CMsgSteamDatagramGameserverPing) GetConnectionId() uint32 {
	if m != nil && m.ConnectionId != nil {
		return *m.ConnectionId
	}
	return 0
}

type CMsgSteamDatagramRelayToRelayPing struct {
	RequestTimestamp     *uint32  `protobuf:"fixed32,1,opt,name=request_timestamp,json=requestTimestamp" json:"request_timestamp,omitempty"`
	RequestDate          *uint32  `protobuf:"fixed32,2,opt,name=request_date,json=requestDate" json:"request_date,omitempty"`
	MyPopId              *uint32  `protobuf:"fixed32,3,opt,name=my_pop_id,json=myPopId" json:"my_pop_id,omitempty"`
	YourPopId            *uint32  `protobuf:"fixed32,4,opt,name=your_pop_id,json=yourPopId" json:"your_pop_id,omitempty"`
	Checksum             *uint32  `protobuf:"fixed32,5,opt,name=checksum" json:"checksum,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgSteamDatagramRelayToRelayPing) Reset()         { *m = CMsgSteamDatagramRelayToRelayPing{} }
func (m *CMsgSteamDatagramRelayToRelayPing) String() string { return proto.CompactTextString(m) }
func (*CMsgSteamDatagramRelayToRelayPing) ProtoMessage()    {}
func (*CMsgSteamDatagramRelayToRelayPing) Descriptor() ([]byte, []int) {
	return fileDescriptor_steamdatagram_messages_89793dc68acee3d1, []int{2}
}
func (m *CMsgSteamDatagramRelayToRelayPing) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgSteamDatagramRelayToRelayPing.Unmarshal(m, b)
}
func (m *CMsgSteamDatagramRelayToRelayPing) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgSteamDatagramRelayToRelayPing.Marshal(b, m, deterministic)
}
func (dst *CMsgSteamDatagramRelayToRelayPing) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgSteamDatagramRelayToRelayPing.Merge(dst, src)
}
func (m *CMsgSteamDatagramRelayToRelayPing) XXX_Size() int {
	return xxx_messageInfo_CMsgSteamDatagramRelayToRelayPing.Size(m)
}
func (m *CMsgSteamDatagramRelayToRelayPing) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgSteamDatagramRelayToRelayPing.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgSteamDatagramRelayToRelayPing proto.InternalMessageInfo

func (m *CMsgSteamDatagramRelayToRelayPing) GetRequestTimestamp() uint32 {
	if m != nil && m.RequestTimestamp != nil {
		return *m.RequestTimestamp
	}
	return 0
}

func (m *CMsgSteamDatagramRelayToRelayPing) GetRequestDate() uint32 {
	if m != nil && m.RequestDate != nil {
		return *m.RequestDate
	}
	return 0
}

func (m *CMsgSteamDatagramRelayToRelayPing) GetMyPopId() uint32 {
	if m != nil && m.MyPopId != nil {
		return *m.MyPopId
	}
	return 0
}

func (m *CMsgSteamDatagramRelayToRelayPing) GetYourPopId() uint32 {
	if m != nil && m.YourPopId != nil {
		return *m.YourPopId
	}
	return 0
}

func (m *CMsgSteamDatagramRelayToRelayPing) GetChecksum() uint32 {
	if m != nil && m.Checksum != nil {
		return *m.Checksum
	}
	return 0
}

type CMsgSteamDatagramSessionCryptInfo struct {
	KeyType              *CMsgSteamDatagramSessionCryptInfo_EKeyType `protobuf:"varint,1,opt,name=key_type,json=keyType,enum=CMsgSteamDatagramSessionCryptInfo_EKeyType,def=0" json:"key_type,omitempty"`
	KeyData              []byte                                      `protobuf:"bytes,2,opt,name=key_data,json=keyData" json:"key_data,omitempty"`
	Nonce                *uint64                                     `protobuf:"fixed64,3,opt,name=nonce" json:"nonce,omitempty"`
	IsSnp                *bool                                       `protobuf:"varint,4,opt,name=is_snp,json=isSnp" json:"is_snp,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                    `json:"-"`
	XXX_unrecognized     []byte                                      `json:"-"`
	XXX_sizecache        int32                                       `json:"-"`
}

func (m *CMsgSteamDatagramSessionCryptInfo) Reset()         { *m = CMsgSteamDatagramSessionCryptInfo{} }
func (m *CMsgSteamDatagramSessionCryptInfo) String() string { return proto.CompactTextString(m) }
func (*CMsgSteamDatagramSessionCryptInfo) ProtoMessage()    {}
func (*CMsgSteamDatagramSessionCryptInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_steamdatagram_messages_89793dc68acee3d1, []int{3}
}
func (m *CMsgSteamDatagramSessionCryptInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgSteamDatagramSessionCryptInfo.Unmarshal(m, b)
}
func (m *CMsgSteamDatagramSessionCryptInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgSteamDatagramSessionCryptInfo.Marshal(b, m, deterministic)
}
func (dst *CMsgSteamDatagramSessionCryptInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgSteamDatagramSessionCryptInfo.Merge(dst, src)
}
func (m *CMsgSteamDatagramSessionCryptInfo) XXX_Size() int {
	return xxx_messageInfo_CMsgSteamDatagramSessionCryptInfo.Size(m)
}
func (m *CMsgSteamDatagramSessionCryptInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgSteamDatagramSessionCryptInfo.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgSteamDatagramSessionCryptInfo proto.InternalMessageInfo

const Default_CMsgSteamDatagramSessionCryptInfo_KeyType CMsgSteamDatagramSessionCryptInfo_EKeyType = CMsgSteamDatagramSessionCryptInfo_INVALID

func (m *CMsgSteamDatagramSessionCryptInfo) GetKeyType() CMsgSteamDatagramSessionCryptInfo_EKeyType {
	if m != nil && m.KeyType != nil {
		return *m.KeyType
	}
	return Default_CMsgSteamDatagramSessionCryptInfo_KeyType
}

func (m *CMsgSteamDatagramSessionCryptInfo) GetKeyData() []byte {
	if m != nil {
		return m.KeyData
	}
	return nil
}

func (m *CMsgSteamDatagramSessionCryptInfo) GetNonce() uint64 {
	if m != nil && m.Nonce != nil {
		return *m.Nonce
	}
	return 0
}

func (m *CMsgSteamDatagramSessionCryptInfo) GetIsSnp() bool {
	if m != nil && m.IsSnp != nil {
		return *m.IsSnp
	}
	return false
}

type CMsgSteamDatagramSessionCryptInfoSigned struct {
	Info                 []byte   `protobuf:"bytes,1,opt,name=info" json:"info,omitempty"`
	Signature            []byte   `protobuf:"bytes,2,opt,name=signature" json:"signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgSteamDatagramSessionCryptInfoSigned) Reset() {
	*m = CMsgSteamDatagramSessionCryptInfoSigned{}
}
func (m *CMsgSteamDatagramSessionCryptInfoSigned) String() string { return proto.CompactTextString(m) }
func (*CMsgSteamDatagramSessionCryptInfoSigned) ProtoMessage()    {}
func (*CMsgSteamDatagramSessionCryptInfoSigned) Descriptor() ([]byte, []int) {
	return fileDescriptor_steamdatagram_messages_89793dc68acee3d1, []int{4}
}
func (m *CMsgSteamDatagramSessionCryptInfoSigned) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgSteamDatagramSessionCryptInfoSigned.Unmarshal(m, b)
}
func (m *CMsgSteamDatagramSessionCryptInfoSigned) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgSteamDatagramSessionCryptInfoSigned.Marshal(b, m, deterministic)
}
func (dst *CMsgSteamDatagramSessionCryptInfoSigned) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgSteamDatagramSessionCryptInfoSigned.Merge(dst, src)
}
func (m *CMsgSteamDatagramSessionCryptInfoSigned) XXX_Size() int {
	return xxx_messageInfo_CMsgSteamDatagramSessionCryptInfoSigned.Size(m)
}
func (m *CMsgSteamDatagramSessionCryptInfoSigned) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgSteamDatagramSessionCryptInfoSigned.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgSteamDatagramSessionCryptInfoSigned proto.InternalMessageInfo

func (m *CMsgSteamDatagramSessionCryptInfoSigned) GetInfo() []byte {
	if m != nil {
		return m.Info
	}
	return nil
}

func (m *CMsgSteamDatagramSessionCryptInfoSigned) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

type CMsgSteamDatagramGameserverSessionRequest struct {
	Ticket               []byte   `protobuf:"bytes,1,opt,name=ticket" json:"ticket,omitempty"`
	ChallengeTime        *uint32  `protobuf:"fixed32,3,opt,name=challenge_time,json=challengeTime" json:"challenge_time,omitempty"`
	Challenge            *uint64  `protobuf:"fixed64,4,opt,name=challenge" json:"challenge,omitempty"`
	ClientConnectionId   *uint32  `protobuf:"fixed32,5,opt,name=client_connection_id,json=clientConnectionId" json:"client_connection_id,omitempty"`
	ServerConnectionId   *uint32  `protobuf:"fixed32,8,opt,name=server_connection_id,json=serverConnectionId" json:"server_connection_id,omitempty"`
	NetworkConfigVersion *uint32  `protobuf:"varint,6,opt,name=network_config_version,json=networkConfigVersion" json:"network_config_version,omitempty"`
	ProtocolVersion      *uint32  `protobuf:"varint,7,opt,name=protocol_version,json=protocolVersion" json:"protocol_version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgSteamDatagramGameserverSessionRequest) Reset() {
	*m = CMsgSteamDatagramGameserverSessionRequest{}
}
func (m *CMsgSteamDatagramGameserverSessionRequest) String() string { return proto.CompactTextString(m) }
func (*CMsgSteamDatagramGameserverSessionRequest) ProtoMessage()    {}
func (*CMsgSteamDatagramGameserverSessionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_steamdatagram_messages_89793dc68acee3d1, []int{5}
}
func (m *CMsgSteamDatagramGameserverSessionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgSteamDatagramGameserverSessionRequest.Unmarshal(m, b)
}
func (m *CMsgSteamDatagramGameserverSessionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgSteamDatagramGameserverSessionRequest.Marshal(b, m, deterministic)
}
func (dst *CMsgSteamDatagramGameserverSessionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgSteamDatagramGameserverSessionRequest.Merge(dst, src)
}
func (m *CMsgSteamDatagramGameserverSessionRequest) XXX_Size() int {
	return xxx_messageInfo_CMsgSteamDatagramGameserverSessionRequest.Size(m)
}
func (m *CMsgSteamDatagramGameserverSessionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgSteamDatagramGameserverSessionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgSteamDatagramGameserverSessionRequest proto.InternalMessageInfo

func (m *CMsgSteamDatagramGameserverSessionRequest) GetTicket() []byte {
	if m != nil {
		return m.Ticket
	}
	return nil
}

func (m *CMsgSteamDatagramGameserverSessionRequest) GetChallengeTime() uint32 {
	if m != nil && m.ChallengeTime != nil {
		return *m.ChallengeTime
	}
	return 0
}

func (m *CMsgSteamDatagramGameserverSessionRequest) GetChallenge() uint64 {
	if m != nil && m.Challenge != nil {
		return *m.Challenge
	}
	return 0
}

func (m *CMsgSteamDatagramGameserverSessionRequest) GetClientConnectionId() uint32 {
	if m != nil && m.ClientConnectionId != nil {
		return *m.ClientConnectionId
	}
	return 0
}

func (m *CMsgSteamDatagramGameserverSessionRequest) GetServerConnectionId() uint32 {
	if m != nil && m.ServerConnectionId != nil {
		return *m.ServerConnectionId
	}
	return 0
}

func (m *CMsgSteamDatagramGameserverSessionRequest) GetNetworkConfigVersion() uint32 {
	if m != nil && m.NetworkConfigVersion != nil {
		return *m.NetworkConfigVersion
	}
	return 0
}

func (m *CMsgSteamDatagramGameserverSessionRequest) GetProtocolVersion() uint32 {
	if m != nil && m.ProtocolVersion != nil {
		return *m.ProtocolVersion
	}
	return 0
}

type CMsgSteamDatagramGameserverSessionEstablished struct {
	ConnectionId         *uint32  `protobuf:"fixed32,1,opt,name=connection_id,json=connectionId" json:"connection_id,omitempty"`
	GameserverSteamId    *uint64  `protobuf:"fixed64,3,opt,name=gameserver_steam_id,json=gameserverSteamId" json:"gameserver_steam_id,omitempty"`
	SecondsUntilShutdown *uint32  `protobuf:"varint,4,opt,name=seconds_until_shutdown,json=secondsUntilShutdown" json:"seconds_until_shutdown,omitempty"`
	LegacyRelaySessionId *uint32  `protobuf:"varint,5,opt,name=legacy_relay_session_id,json=legacyRelaySessionId" json:"legacy_relay_session_id,omitempty"`
	SeqNumR2C            *uint32  `protobuf:"varint,6,opt,name=seq_num_r2c,json=seqNumR2c" json:"seq_num_r2c,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgSteamDatagramGameserverSessionEstablished) Reset() {
	*m = CMsgSteamDatagramGameserverSessionEstablished{}
}
func (m *CMsgSteamDatagramGameserverSessionEstablished) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgSteamDatagramGameserverSessionEstablished) ProtoMessage() {}
func (*CMsgSteamDatagramGameserverSessionEstablished) Descriptor() ([]byte, []int) {
	return fileDescriptor_steamdatagram_messages_89793dc68acee3d1, []int{6}
}
func (m *CMsgSteamDatagramGameserverSessionEstablished) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgSteamDatagramGameserverSessionEstablished.Unmarshal(m, b)
}
func (m *CMsgSteamDatagramGameserverSessionEstablished) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgSteamDatagramGameserverSessionEstablished.Marshal(b, m, deterministic)
}
func (dst *CMsgSteamDatagramGameserverSessionEstablished) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgSteamDatagramGameserverSessionEstablished.Merge(dst, src)
}
func (m *CMsgSteamDatagramGameserverSessionEstablished) XXX_Size() int {
	return xxx_messageInfo_CMsgSteamDatagramGameserverSessionEstablished.Size(m)
}
func (m *CMsgSteamDatagramGameserverSessionEstablished) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgSteamDatagramGameserverSessionEstablished.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgSteamDatagramGameserverSessionEstablished proto.InternalMessageInfo

func (m *CMsgSteamDatagramGameserverSessionEstablished) GetConnectionId() uint32 {
	if m != nil && m.ConnectionId != nil {
		return *m.ConnectionId
	}
	return 0
}

func (m *CMsgSteamDatagramGameserverSessionEstablished) GetGameserverSteamId() uint64 {
	if m != nil && m.GameserverSteamId != nil {
		return *m.GameserverSteamId
	}
	return 0
}

func (m *CMsgSteamDatagramGameserverSessionEstablished) GetSecondsUntilShutdown() uint32 {
	if m != nil && m.SecondsUntilShutdown != nil {
		return *m.SecondsUntilShutdown
	}
	return 0
}

func (m *CMsgSteamDatagramGameserverSessionEstablished) GetLegacyRelaySessionId() uint32 {
	if m != nil && m.LegacyRelaySessionId != nil {
		return *m.LegacyRelaySessionId
	}
	return 0
}

func (m *CMsgSteamDatagramGameserverSessionEstablished) GetSeqNumR2C() uint32 {
	if m != nil && m.SeqNumR2C != nil {
		return *m.SeqNumR2C
	}
	return 0
}

type CMsgSteamDatagramNoSessionRelayToClient struct {
	LegacyRelaySessionId *uint32  `protobuf:"varint,1,opt,name=legacy_relay_session_id,json=legacyRelaySessionId" json:"legacy_relay_session_id,omitempty"`
	ConnectionId         *uint32  `protobuf:"fixed32,7,opt,name=connection_id,json=connectionId" json:"connection_id,omitempty"`
	YourPublicIp         *uint32  `protobuf:"fixed32,2,opt,name=your_public_ip,json=yourPublicIp" json:"your_public_ip,omitempty"`
	ServerTime           *uint32  `protobuf:"fixed32,3,opt,name=server_time,json=serverTime" json:"server_time,omitempty"`
	Challenge            *uint64  `protobuf:"fixed64,4,opt,name=challenge" json:"challenge,omitempty"`
	SecondsUntilShutdown *uint32  `protobuf:"varint,5,opt,name=seconds_until_shutdown,json=secondsUntilShutdown" json:"seconds_until_shutdown,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgSteamDatagramNoSessionRelayToClient) Reset() {
	*m = CMsgSteamDatagramNoSessionRelayToClient{}
}
func (m *CMsgSteamDatagramNoSessionRelayToClient) String() string { return proto.CompactTextString(m) }
func (*CMsgSteamDatagramNoSessionRelayToClient) ProtoMessage()    {}
func (*CMsgSteamDatagramNoSessionRelayToClient) Descriptor() ([]byte, []int) {
	return fileDescriptor_steamdatagram_messages_89793dc68acee3d1, []int{7}
}
func (m *CMsgSteamDatagramNoSessionRelayToClient) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgSteamDatagramNoSessionRelayToClient.Unmarshal(m, b)
}
func (m *CMsgSteamDatagramNoSessionRelayToClient) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgSteamDatagramNoSessionRelayToClient.Marshal(b, m, deterministic)
}
func (dst *CMsgSteamDatagramNoSessionRelayToClient) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgSteamDatagramNoSessionRelayToClient.Merge(dst, src)
}
func (m *CMsgSteamDatagramNoSessionRelayToClient) XXX_Size() int {
	return xxx_messageInfo_CMsgSteamDatagramNoSessionRelayToClient.Size(m)
}
func (m *CMsgSteamDatagramNoSessionRelayToClient) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgSteamDatagramNoSessionRelayToClient.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgSteamDatagramNoSessionRelayToClient proto.InternalMessageInfo

func (m *CMsgSteamDatagramNoSessionRelayToClient) GetLegacyRelaySessionId() uint32 {
	if m != nil && m.LegacyRelaySessionId != nil {
		return *m.LegacyRelaySessionId
	}
	return 0
}

func (m *CMsgSteamDatagramNoSessionRelayToClient) GetConnectionId() uint32 {
	if m != nil && m.ConnectionId != nil {
		return *m.ConnectionId
	}
	return 0
}

func (m *CMsgSteamDatagramNoSessionRelayToClient) GetYourPublicIp() uint32 {
	if m != nil && m.YourPublicIp != nil {
		return *m.YourPublicIp
	}
	return 0
}

func (m *CMsgSteamDatagramNoSessionRelayToClient) GetServerTime() uint32 {
	if m != nil && m.ServerTime != nil {
		return *m.ServerTime
	}
	return 0
}

func (m *CMsgSteamDatagramNoSessionRelayToClient) GetChallenge() uint64 {
	if m != nil && m.Challenge != nil {
		return *m.Challenge
	}
	return 0
}

func (m *CMsgSteamDatagramNoSessionRelayToClient) GetSecondsUntilShutdown() uint32 {
	if m != nil && m.SecondsUntilShutdown != nil {
		return *m.SecondsUntilShutdown
	}
	return 0
}

type CMsgSteamDatagramNoSessionRelayToServer struct {
	RelaySessionId       *uint32  `protobuf:"varint,1,opt,name=relay_session_id,json=relaySessionId" json:"relay_session_id,omitempty"`
	ClientConnectionId   *uint32  `protobuf:"fixed32,7,opt,name=client_connection_id,json=clientConnectionId" json:"client_connection_id,omitempty"`
	ServerConnectionId   *uint32  `protobuf:"fixed32,8,opt,name=server_connection_id,json=serverConnectionId" json:"server_connection_id,omitempty"`
	KludgePad            *uint64  `protobuf:"fixed64,99,opt,name=kludge_pad,json=kludgePad" json:"kludge_pad,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgSteamDatagramNoSessionRelayToServer) Reset() {
	*m = CMsgSteamDatagramNoSessionRelayToServer{}
}
func (m *CMsgSteamDatagramNoSessionRelayToServer) String() string { return proto.CompactTextString(m) }
func (*CMsgSteamDatagramNoSessionRelayToServer) ProtoMessage()    {}
func (*CMsgSteamDatagramNoSessionRelayToServer) Descriptor() ([]byte, []int) {
	return fileDescriptor_steamdatagram_messages_89793dc68acee3d1, []int{8}
}
func (m *CMsgSteamDatagramNoSessionRelayToServer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgSteamDatagramNoSessionRelayToServer.Unmarshal(m, b)
}
func (m *CMsgSteamDatagramNoSessionRelayToServer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgSteamDatagramNoSessionRelayToServer.Marshal(b, m, deterministic)
}
func (dst *CMsgSteamDatagramNoSessionRelayToServer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgSteamDatagramNoSessionRelayToServer.Merge(dst, src)
}
func (m *CMsgSteamDatagramNoSessionRelayToServer) XXX_Size() int {
	return xxx_messageInfo_CMsgSteamDatagramNoSessionRelayToServer.Size(m)
}
func (m *CMsgSteamDatagramNoSessionRelayToServer) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgSteamDatagramNoSessionRelayToServer.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgSteamDatagramNoSessionRelayToServer proto.InternalMessageInfo

func (m *CMsgSteamDatagramNoSessionRelayToServer) GetRelaySessionId() uint32 {
	if m != nil && m.RelaySessionId != nil {
		return *m.RelaySessionId
	}
	return 0
}

func (m *CMsgSteamDatagramNoSessionRelayToServer) GetClientConnectionId() uint32 {
	if m != nil && m.ClientConnectionId != nil {
		return *m.ClientConnectionId
	}
	return 0
}

func (m *CMsgSteamDatagramNoSessionRelayToServer) GetServerConnectionId() uint32 {
	if m != nil && m.ServerConnectionId != nil {
		return *m.ServerConnectionId
	}
	return 0
}

func (m *CMsgSteamDatagramNoSessionRelayToServer) GetKludgePad() uint64 {
	if m != nil && m.KludgePad != nil {
		return *m.KludgePad
	}
	return 0
}

type CMsgSteamDatagramDiagnostic struct {
	Severity             *uint32  `protobuf:"varint,1,opt,name=severity" json:"severity,omitempty"`
	Text                 *string  `protobuf:"bytes,2,opt,name=text" json:"text,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgSteamDatagramDiagnostic) Reset()         { *m = CMsgSteamDatagramDiagnostic{} }
func (m *CMsgSteamDatagramDiagnostic) String() string { return proto.CompactTextString(m) }
func (*CMsgSteamDatagramDiagnostic) ProtoMessage()    {}
func (*CMsgSteamDatagramDiagnostic) Descriptor() ([]byte, []int) {
	return fileDescriptor_steamdatagram_messages_89793dc68acee3d1, []int{9}
}
func (m *CMsgSteamDatagramDiagnostic) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgSteamDatagramDiagnostic.Unmarshal(m, b)
}
func (m *CMsgSteamDatagramDiagnostic) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgSteamDatagramDiagnostic.Marshal(b, m, deterministic)
}
func (dst *CMsgSteamDatagramDiagnostic) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgSteamDatagramDiagnostic.Merge(dst, src)
}
func (m *CMsgSteamDatagramDiagnostic) XXX_Size() int {
	return xxx_messageInfo_CMsgSteamDatagramDiagnostic.Size(m)
}
func (m *CMsgSteamDatagramDiagnostic) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgSteamDatagramDiagnostic.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgSteamDatagramDiagnostic proto.InternalMessageInfo

func (m *CMsgSteamDatagramDiagnostic) GetSeverity() uint32 {
	if m != nil && m.Severity != nil {
		return *m.Severity
	}
	return 0
}

func (m *CMsgSteamDatagramDiagnostic) GetText() string {
	if m != nil && m.Text != nil {
		return *m.Text
	}
	return ""
}

type CMsgSteamDatagramDataCenterState struct {
	DataCenters          []*CMsgSteamDatagramDataCenterState_DataCenter `protobuf:"bytes,1,rep,name=data_centers,json=dataCenters" json:"data_centers,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                       `json:"-"`
	XXX_unrecognized     []byte                                         `json:"-"`
	XXX_sizecache        int32                                          `json:"-"`
}

func (m *CMsgSteamDatagramDataCenterState) Reset()         { *m = CMsgSteamDatagramDataCenterState{} }
func (m *CMsgSteamDatagramDataCenterState) String() string { return proto.CompactTextString(m) }
func (*CMsgSteamDatagramDataCenterState) ProtoMessage()    {}
func (*CMsgSteamDatagramDataCenterState) Descriptor() ([]byte, []int) {
	return fileDescriptor_steamdatagram_messages_89793dc68acee3d1, []int{10}
}
func (m *CMsgSteamDatagramDataCenterState) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgSteamDatagramDataCenterState.Unmarshal(m, b)
}
func (m *CMsgSteamDatagramDataCenterState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgSteamDatagramDataCenterState.Marshal(b, m, deterministic)
}
func (dst *CMsgSteamDatagramDataCenterState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgSteamDatagramDataCenterState.Merge(dst, src)
}
func (m *CMsgSteamDatagramDataCenterState) XXX_Size() int {
	return xxx_messageInfo_CMsgSteamDatagramDataCenterState.Size(m)
}
func (m *CMsgSteamDatagramDataCenterState) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgSteamDatagramDataCenterState.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgSteamDatagramDataCenterState proto.InternalMessageInfo

func (m *CMsgSteamDatagramDataCenterState) GetDataCenters() []*CMsgSteamDatagramDataCenterState_DataCenter {
	if m != nil {
		return m.DataCenters
	}
	return nil
}

type CMsgSteamDatagramDataCenterState_Server struct {
	Address              *string  `protobuf:"bytes,1,opt,name=address" json:"address,omitempty"`
	PingMs               *uint32  `protobuf:"varint,2,opt,name=ping_ms,json=pingMs" json:"ping_ms,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgSteamDatagramDataCenterState_Server) Reset() {
	*m = CMsgSteamDatagramDataCenterState_Server{}
}
func (m *CMsgSteamDatagramDataCenterState_Server) String() string { return proto.CompactTextString(m) }
func (*CMsgSteamDatagramDataCenterState_Server) ProtoMessage()    {}
func (*CMsgSteamDatagramDataCenterState_Server) Descriptor() ([]byte, []int) {
	return fileDescriptor_steamdatagram_messages_89793dc68acee3d1, []int{10, 0}
}
func (m *CMsgSteamDatagramDataCenterState_Server) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgSteamDatagramDataCenterState_Server.Unmarshal(m, b)
}
func (m *CMsgSteamDatagramDataCenterState_Server) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgSteamDatagramDataCenterState_Server.Marshal(b, m, deterministic)
}
func (dst *CMsgSteamDatagramDataCenterState_Server) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgSteamDatagramDataCenterState_Server.Merge(dst, src)
}
func (m *CMsgSteamDatagramDataCenterState_Server) XXX_Size() int {
	return xxx_messageInfo_CMsgSteamDatagramDataCenterState_Server.Size(m)
}
func (m *CMsgSteamDatagramDataCenterState_Server) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgSteamDatagramDataCenterState_Server.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgSteamDatagramDataCenterState_Server proto.InternalMessageInfo

func (m *CMsgSteamDatagramDataCenterState_Server) GetAddress() string {
	if m != nil && m.Address != nil {
		return *m.Address
	}
	return ""
}

func (m *CMsgSteamDatagramDataCenterState_Server) GetPingMs() uint32 {
	if m != nil && m.PingMs != nil {
		return *m.PingMs
	}
	return 0
}

type CMsgSteamDatagramDataCenterState_DataCenter struct {
	Code                 *string                                    `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	ServerSample         []*CMsgSteamDatagramDataCenterState_Server `protobuf:"bytes,2,rep,name=server_sample,json=serverSample" json:"server_sample,omitempty"`
	RelaySample          []*CMsgSteamDatagramDataCenterState_Server `protobuf:"bytes,3,rep,name=relay_sample,json=relaySample" json:"relay_sample,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                   `json:"-"`
	XXX_unrecognized     []byte                                     `json:"-"`
	XXX_sizecache        int32                                      `json:"-"`
}

func (m *CMsgSteamDatagramDataCenterState_DataCenter) Reset() {
	*m = CMsgSteamDatagramDataCenterState_DataCenter{}
}
func (m *CMsgSteamDatagramDataCenterState_DataCenter) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgSteamDatagramDataCenterState_DataCenter) ProtoMessage() {}
func (*CMsgSteamDatagramDataCenterState_DataCenter) Descriptor() ([]byte, []int) {
	return fileDescriptor_steamdatagram_messages_89793dc68acee3d1, []int{10, 1}
}
func (m *CMsgSteamDatagramDataCenterState_DataCenter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgSteamDatagramDataCenterState_DataCenter.Unmarshal(m, b)
}
func (m *CMsgSteamDatagramDataCenterState_DataCenter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgSteamDatagramDataCenterState_DataCenter.Marshal(b, m, deterministic)
}
func (dst *CMsgSteamDatagramDataCenterState_DataCenter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgSteamDatagramDataCenterState_DataCenter.Merge(dst, src)
}
func (m *CMsgSteamDatagramDataCenterState_DataCenter) XXX_Size() int {
	return xxx_messageInfo_CMsgSteamDatagramDataCenterState_DataCenter.Size(m)
}
func (m *CMsgSteamDatagramDataCenterState_DataCenter) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgSteamDatagramDataCenterState_DataCenter.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgSteamDatagramDataCenterState_DataCenter proto.InternalMessageInfo

func (m *CMsgSteamDatagramDataCenterState_DataCenter) GetCode() string {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return ""
}

func (m *CMsgSteamDatagramDataCenterState_DataCenter) GetServerSample() []*CMsgSteamDatagramDataCenterState_Server {
	if m != nil {
		return m.ServerSample
	}
	return nil
}

func (m *CMsgSteamDatagramDataCenterState_DataCenter) GetRelaySample() []*CMsgSteamDatagramDataCenterState_Server {
	if m != nil {
		return m.RelaySample
	}
	return nil
}

type CMsgSteamDatagramLinkInstantaneousStats struct {
	OutPacketsPerSecX10     *uint32  `protobuf:"varint,1,opt,name=out_packets_per_sec_x10,json=outPacketsPerSecX10" json:"out_packets_per_sec_x10,omitempty"`
	OutBytesPerSec          *uint32  `protobuf:"varint,2,opt,name=out_bytes_per_sec,json=outBytesPerSec" json:"out_bytes_per_sec,omitempty"`
	InPacketsPerSecX10      *uint32  `protobuf:"varint,3,opt,name=in_packets_per_sec_x10,json=inPacketsPerSecX10" json:"in_packets_per_sec_x10,omitempty"`
	InBytesPerSec           *uint32  `protobuf:"varint,4,opt,name=in_bytes_per_sec,json=inBytesPerSec" json:"in_bytes_per_sec,omitempty"`
	PingMs                  *uint32  `protobuf:"varint,5,opt,name=ping_ms,json=pingMs" json:"ping_ms,omitempty"`
	PacketsDroppedPct       *uint32  `protobuf:"varint,6,opt,name=packets_dropped_pct,json=packetsDroppedPct" json:"packets_dropped_pct,omitempty"`
	PacketsWeirdSequencePct *uint32  `protobuf:"varint,7,opt,name=packets_weird_sequence_pct,json=packetsWeirdSequencePct" json:"packets_weird_sequence_pct,omitempty"`
	PeakJitterUsec          *uint32  `protobuf:"varint,8,opt,name=peak_jitter_usec,json=peakJitterUsec" json:"peak_jitter_usec,omitempty"`
	XXX_NoUnkeyedLiteral    struct{} `json:"-"`
	XXX_unrecognized        []byte   `json:"-"`
	XXX_sizecache           int32    `json:"-"`
}

func (m *CMsgSteamDatagramLinkInstantaneousStats) Reset() {
	*m = CMsgSteamDatagramLinkInstantaneousStats{}
}
func (m *CMsgSteamDatagramLinkInstantaneousStats) String() string { return proto.CompactTextString(m) }
func (*CMsgSteamDatagramLinkInstantaneousStats) ProtoMessage()    {}
func (*CMsgSteamDatagramLinkInstantaneousStats) Descriptor() ([]byte, []int) {
	return fileDescriptor_steamdatagram_messages_89793dc68acee3d1, []int{11}
}
func (m *CMsgSteamDatagramLinkInstantaneousStats) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgSteamDatagramLinkInstantaneousStats.Unmarshal(m, b)
}
func (m *CMsgSteamDatagramLinkInstantaneousStats) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgSteamDatagramLinkInstantaneousStats.Marshal(b, m, deterministic)
}
func (dst *CMsgSteamDatagramLinkInstantaneousStats) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgSteamDatagramLinkInstantaneousStats.Merge(dst, src)
}
func (m *CMsgSteamDatagramLinkInstantaneousStats) XXX_Size() int {
	return xxx_messageInfo_CMsgSteamDatagramLinkInstantaneousStats.Size(m)
}
func (m *CMsgSteamDatagramLinkInstantaneousStats) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgSteamDatagramLinkInstantaneousStats.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgSteamDatagramLinkInstantaneousStats proto.InternalMessageInfo

func (m *CMsgSteamDatagramLinkInstantaneousStats) GetOutPacketsPerSecX10() uint32 {
	if m != nil && m.OutPacketsPerSecX10 != nil {
		return *m.OutPacketsPerSecX10
	}
	return 0
}

func (m *CMsgSteamDatagramLinkInstantaneousStats) GetOutBytesPerSec() uint32 {
	if m != nil && m.OutBytesPerSec != nil {
		return *m.OutBytesPerSec
	}
	return 0
}

func (m *CMsgSteamDatagramLinkInstantaneousStats) GetInPacketsPerSecX10() uint32 {
	if m != nil && m.InPacketsPerSecX10 != nil {
		return *m.InPacketsPerSecX10
	}
	return 0
}

func (m *CMsgSteamDatagramLinkInstantaneousStats) GetInBytesPerSec() uint32 {
	if m != nil && m.InBytesPerSec != nil {
		return *m.InBytesPerSec
	}
	return 0
}

func (m *CMsgSteamDatagramLinkInstantaneousStats) GetPingMs() uint32 {
	if m != nil && m.PingMs != nil {
		return *m.PingMs
	}
	return 0
}

func (m *CMsgSteamDatagramLinkInstantaneousStats) GetPacketsDroppedPct() uint32 {
	if m != nil && m.PacketsDroppedPct != nil {
		return *m.PacketsDroppedPct
	}
	return 0
}

func (m *CMsgSteamDatagramLinkInstantaneousStats) GetPacketsWeirdSequencePct() uint32 {
	if m != nil && m.PacketsWeirdSequencePct != nil {
		return *m.PacketsWeirdSequencePct
	}
	return 0
}

func (m *CMsgSteamDatagramLinkInstantaneousStats) GetPeakJitterUsec() uint32 {
	if m != nil && m.PeakJitterUsec != nil {
		return *m.PeakJitterUsec
	}
	return 0
}

type CMsgSteamDatagramLinkLifetimeStats struct {
	PacketsSent               *uint64  `protobuf:"varint,3,opt,name=packets_sent,json=packetsSent" json:"packets_sent,omitempty"`
	KbSent                    *uint64  `protobuf:"varint,4,opt,name=kb_sent,json=kbSent" json:"kb_sent,omitempty"`
	PacketsRecv               *uint64  `protobuf:"varint,5,opt,name=packets_recv,json=packetsRecv" json:"packets_recv,omitempty"`
	KbRecv                    *uint64  `protobuf:"varint,6,opt,name=kb_recv,json=kbRecv" json:"kb_recv,omitempty"`
	PacketsRecvSequenced      *uint64  `protobuf:"varint,7,opt,name=packets_recv_sequenced,json=packetsRecvSequenced" json:"packets_recv_sequenced,omitempty"`
	PacketsRecvDropped        *uint64  `protobuf:"varint,8,opt,name=packets_recv_dropped,json=packetsRecvDropped" json:"packets_recv_dropped,omitempty"`
	PacketsRecvOutOfOrder     *uint64  `protobuf:"varint,9,opt,name=packets_recv_out_of_order,json=packetsRecvOutOfOrder" json:"packets_recv_out_of_order,omitempty"`
	PacketsRecvDuplicate      *uint64  `protobuf:"varint,10,opt,name=packets_recv_duplicate,json=packetsRecvDuplicate" json:"packets_recv_duplicate,omitempty"`
	PacketsRecvLurch          *uint64  `protobuf:"varint,11,opt,name=packets_recv_lurch,json=packetsRecvLurch" json:"packets_recv_lurch,omitempty"`
	QualityHistogram_100      *uint32  `protobuf:"varint,21,opt,name=quality_histogram_100,json=qualityHistogram100" json:"quality_histogram_100,omitempty"`
	QualityHistogram_99       *uint32  `protobuf:"varint,22,opt,name=quality_histogram_99,json=qualityHistogram99" json:"quality_histogram_99,omitempty"`
	QualityHistogram_97       *uint32  `protobuf:"varint,23,opt,name=quality_histogram_97,json=qualityHistogram97" json:"quality_histogram_97,omitempty"`
	QualityHistogram_95       *uint32  `protobuf:"varint,24,opt,name=quality_histogram_95,json=qualityHistogram95" json:"quality_histogram_95,omitempty"`
	QualityHistogram_90       *uint32  `protobuf:"varint,25,opt,name=quality_histogram_90,json=qualityHistogram90" json:"quality_histogram_90,omitempty"`
	QualityHistogram_75       *uint32  `protobuf:"varint,26,opt,name=quality_histogram_75,json=qualityHistogram75" json:"quality_histogram_75,omitempty"`
	QualityHistogram_50       *uint32  `protobuf:"varint,27,opt,name=quality_histogram_50,json=qualityHistogram50" json:"quality_histogram_50,omitempty"`
	QualityHistogram_1        *uint32  `protobuf:"varint,28,opt,name=quality_histogram_1,json=qualityHistogram1" json:"quality_histogram_1,omitempty"`
	QualityHistogramDead      *uint32  `protobuf:"varint,29,opt,name=quality_histogram_dead,json=qualityHistogramDead" json:"quality_histogram_dead,omitempty"`
	QualityNtile_2Nd          *uint32  `protobuf:"varint,30,opt,name=quality_ntile_2nd,json=qualityNtile2nd" json:"quality_ntile_2nd,omitempty"`
	QualityNtile_5Th          *uint32  `protobuf:"varint,31,opt,name=quality_ntile_5th,json=qualityNtile5th" json:"quality_ntile_5th,omitempty"`
	QualityNtile_25Th         *uint32  `protobuf:"varint,32,opt,name=quality_ntile_25th,json=qualityNtile25th" json:"quality_ntile_25th,omitempty"`
	QualityNtile_50Th         *uint32  `protobuf:"varint,33,opt,name=quality_ntile_50th,json=qualityNtile50th" json:"quality_ntile_50th,omitempty"`
	PingHistogram_25          *uint32  `protobuf:"varint,41,opt,name=ping_histogram_25,json=pingHistogram25" json:"ping_histogram_25,omitempty"`
	PingHistogram_50          *uint32  `protobuf:"varint,42,opt,name=ping_histogram_50,json=pingHistogram50" json:"ping_histogram_50,omitempty"`
	PingHistogram_75          *uint32  `protobuf:"varint,43,opt,name=ping_histogram_75,json=pingHistogram75" json:"ping_histogram_75,omitempty"`
	PingHistogram_100         *uint32  `protobuf:"varint,44,opt,name=ping_histogram_100,json=pingHistogram100" json:"ping_histogram_100,omitempty"`
	PingHistogram_125         *uint32  `protobuf:"varint,45,opt,name=ping_histogram_125,json=pingHistogram125" json:"ping_histogram_125,omitempty"`
	PingHistogram_150         *uint32  `protobuf:"varint,46,opt,name=ping_histogram_150,json=pingHistogram150" json:"ping_histogram_150,omitempty"`
	PingHistogram_200         *uint32  `protobuf:"varint,47,opt,name=ping_histogram_200,json=pingHistogram200" json:"ping_histogram_200,omitempty"`
	PingHistogram_300         *uint32  `protobuf:"varint,48,opt,name=ping_histogram_300,json=pingHistogram300" json:"ping_histogram_300,omitempty"`
	PingHistogramMax          *uint32  `protobuf:"varint,49,opt,name=ping_histogram_max,json=pingHistogramMax" json:"ping_histogram_max,omitempty"`
	PingNtile_5Th             *uint32  `protobuf:"varint,50,opt,name=ping_ntile_5th,json=pingNtile5th" json:"ping_ntile_5th,omitempty"`
	PingNtile_50Th            *uint32  `protobuf:"varint,51,opt,name=ping_ntile_50th,json=pingNtile50th" json:"ping_ntile_50th,omitempty"`
	PingNtile_75Th            *uint32  `protobuf:"varint,52,opt,name=ping_ntile_75th,json=pingNtile75th" json:"ping_ntile_75th,omitempty"`
	PingNtile_95Th            *uint32  `protobuf:"varint,53,opt,name=ping_ntile_95th,json=pingNtile95th" json:"ping_ntile_95th,omitempty"`
	PingNtile_98Th            *uint32  `protobuf:"varint,54,opt,name=ping_ntile_98th,json=pingNtile98th" json:"ping_ntile_98th,omitempty"`
	JitterHistogramNegligible *uint32  `protobuf:"varint,61,opt,name=jitter_histogram_negligible,json=jitterHistogramNegligible" json:"jitter_histogram_negligible,omitempty"`
	JitterHistogram_1         *uint32  `protobuf:"varint,62,opt,name=jitter_histogram_1,json=jitterHistogram1" json:"jitter_histogram_1,omitempty"`
	JitterHistogram_2         *uint32  `protobuf:"varint,63,opt,name=jitter_histogram_2,json=jitterHistogram2" json:"jitter_histogram_2,omitempty"`
	JitterHistogram_5         *uint32  `protobuf:"varint,64,opt,name=jitter_histogram_5,json=jitterHistogram5" json:"jitter_histogram_5,omitempty"`
	JitterHistogram_10        *uint32  `protobuf:"varint,65,opt,name=jitter_histogram_10,json=jitterHistogram10" json:"jitter_histogram_10,omitempty"`
	JitterHistogram_20        *uint32  `protobuf:"varint,66,opt,name=jitter_histogram_20,json=jitterHistogram20" json:"jitter_histogram_20,omitempty"`
	TxspeedMax                *uint32  `protobuf:"varint,67,opt,name=txspeed_max,json=txspeedMax" json:"txspeed_max,omitempty"`
	TxspeedHistogram_16       *uint32  `protobuf:"varint,68,opt,name=txspeed_histogram_16,json=txspeedHistogram16" json:"txspeed_histogram_16,omitempty"`
	TxspeedHistogram_32       *uint32  `protobuf:"varint,69,opt,name=txspeed_histogram_32,json=txspeedHistogram32" json:"txspeed_histogram_32,omitempty"`
	TxspeedHistogram_64       *uint32  `protobuf:"varint,70,opt,name=txspeed_histogram_64,json=txspeedHistogram64" json:"txspeed_histogram_64,omitempty"`
	TxspeedHistogram_128      *uint32  `protobuf:"varint,71,opt,name=txspeed_histogram_128,json=txspeedHistogram128" json:"txspeed_histogram_128,omitempty"`
	TxspeedHistogram_256      *uint32  `protobuf:"varint,72,opt,name=txspeed_histogram_256,json=txspeedHistogram256" json:"txspeed_histogram_256,omitempty"`
	TxspeedHistogram_512      *uint32  `protobuf:"varint,73,opt,name=txspeed_histogram_512,json=txspeedHistogram512" json:"txspeed_histogram_512,omitempty"`
	TxspeedHistogram_1024     *uint32  `protobuf:"varint,74,opt,name=txspeed_histogram_1024,json=txspeedHistogram1024" json:"txspeed_histogram_1024,omitempty"`
	TxspeedHistogramMax       *uint32  `protobuf:"varint,75,opt,name=txspeed_histogram_max,json=txspeedHistogramMax" json:"txspeed_histogram_max,omitempty"`
	TxspeedNtile_5Th          *uint32  `protobuf:"varint,76,opt,name=txspeed_ntile_5th,json=txspeedNtile5th" json:"txspeed_ntile_5th,omitempty"`
	TxspeedNtile_50Th         *uint32  `protobuf:"varint,77,opt,name=txspeed_ntile_50th,json=txspeedNtile50th" json:"txspeed_ntile_50th,omitempty"`
	TxspeedNtile_75Th         *uint32  `protobuf:"varint,78,opt,name=txspeed_ntile_75th,json=txspeedNtile75th" json:"txspeed_ntile_75th,omitempty"`
	TxspeedNtile_95Th         *uint32  `protobuf:"varint,79,opt,name=txspeed_ntile_95th,json=txspeedNtile95th" json:"txspeed_ntile_95th,omitempty"`
	TxspeedNtile_98Th         *uint32  `protobuf:"varint,80,opt,name=txspeed_ntile_98th,json=txspeedNtile98th" json:"txspeed_ntile_98th,omitempty"`
	RxspeedMax                *uint32  `protobuf:"varint,81,opt,name=rxspeed_max,json=rxspeedMax" json:"rxspeed_max,omitempty"`
	RxspeedHistogram_16       *uint32  `protobuf:"varint,82,opt,name=rxspeed_histogram_16,json=rxspeedHistogram16" json:"rxspeed_histogram_16,omitempty"`
	RxspeedHistogram_32       *uint32  `protobuf:"varint,83,opt,name=rxspeed_histogram_32,json=rxspeedHistogram32" json:"rxspeed_histogram_32,omitempty"`
	RxspeedHistogram_64       *uint32  `protobuf:"varint,84,opt,name=rxspeed_histogram_64,json=rxspeedHistogram64" json:"rxspeed_histogram_64,omitempty"`
	RxspeedHistogram_128      *uint32  `protobuf:"varint,85,opt,name=rxspeed_histogram_128,json=rxspeedHistogram128" json:"rxspeed_histogram_128,omitempty"`
	RxspeedHistogram_256      *uint32  `protobuf:"varint,86,opt,name=rxspeed_histogram_256,json=rxspeedHistogram256" json:"rxspeed_histogram_256,omitempty"`
	RxspeedHistogram_512      *uint32  `protobuf:"varint,87,opt,name=rxspeed_histogram_512,json=rxspeedHistogram512" json:"rxspeed_histogram_512,omitempty"`
	RxspeedHistogram_1024     *uint32  `protobuf:"varint,88,opt,name=rxspeed_histogram_1024,json=rxspeedHistogram1024" json:"rxspeed_histogram_1024,omitempty"`
	RxspeedHistogramMax       *uint32  `protobuf:"varint,89,opt,name=rxspeed_histogram_max,json=rxspeedHistogramMax" json:"rxspeed_histogram_max,omitempty"`
	RxspeedNtile_5Th          *uint32  `protobuf:"varint,90,opt,name=rxspeed_ntile_5th,json=rxspeedNtile5th" json:"rxspeed_ntile_5th,omitempty"`
	RxspeedNtile_50Th         *uint32  `protobuf:"varint,91,opt,name=rxspeed_ntile_50th,json=rxspeedNtile50th" json:"rxspeed_ntile_50th,omitempty"`
	RxspeedNtile_75Th         *uint32  `protobuf:"varint,92,opt,name=rxspeed_ntile_75th,json=rxspeedNtile75th" json:"rxspeed_ntile_75th,omitempty"`
	RxspeedNtile_95Th         *uint32  `protobuf:"varint,93,opt,name=rxspeed_ntile_95th,json=rxspeedNtile95th" json:"rxspeed_ntile_95th,omitempty"`
	RxspeedNtile_98Th         *uint32  `protobuf:"varint,94,opt,name=rxspeed_ntile_98th,json=rxspeedNtile98th" json:"rxspeed_ntile_98th,omitempty"`
	XXX_NoUnkeyedLiteral      struct{} `json:"-"`
	XXX_unrecognized          []byte   `json:"-"`
	XXX_sizecache             int32    `json:"-"`
}

func (m *CMsgSteamDatagramLinkLifetimeStats) Reset()         { *m = CMsgSteamDatagramLinkLifetimeStats{} }
func (m *CMsgSteamDatagramLinkLifetimeStats) String() string { return proto.CompactTextString(m) }
func (*CMsgSteamDatagramLinkLifetimeStats) ProtoMessage()    {}
func (*CMsgSteamDatagramLinkLifetimeStats) Descriptor() ([]byte, []int) {
	return fileDescriptor_steamdatagram_messages_89793dc68acee3d1, []int{12}
}
func (m *CMsgSteamDatagramLinkLifetimeStats) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgSteamDatagramLinkLifetimeStats.Unmarshal(m, b)
}
func (m *CMsgSteamDatagramLinkLifetimeStats) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgSteamDatagramLinkLifetimeStats.Marshal(b, m, deterministic)
}
func (dst *CMsgSteamDatagramLinkLifetimeStats) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgSteamDatagramLinkLifetimeStats.Merge(dst, src)
}
func (m *CMsgSteamDatagramLinkLifetimeStats) XXX_Size() int {
	return xxx_messageInfo_CMsgSteamDatagramLinkLifetimeStats.Size(m)
}
func (m *CMsgSteamDatagramLinkLifetimeStats) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgSteamDatagramLinkLifetimeStats.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgSteamDatagramLinkLifetimeStats proto.InternalMessageInfo

func (m *CMsgSteamDatagramLinkLifetimeStats) GetPacketsSent() uint64 {
	if m != nil && m.PacketsSent != nil {
		return *m.PacketsSent
	}
	return 0
}

func (m *CMsgSteamDatagramLinkLifetimeStats) GetKbSent() uint64 {
	if m != nil && m.KbSent != nil {
		return *m.KbSent
	}
	return 0
}

func (m *CMsgSteamDatagramLinkLifetimeStats) GetPacketsRecv() uint64 {
	if m != nil && m.PacketsRecv != nil {
		return *m.PacketsRecv
	}
	return 0
}

func (m *CMsgSteamDatagramLinkLifetimeStats) GetKbRecv() uint64 {
	if m != nil && m.KbRecv != nil {
		return *m.KbRecv
	}
	return 0
}

func (m *CMsgSteamDatagramLinkLifetimeStats) GetPacketsRecvSequenced() uint64 {
	if m != nil && m.PacketsRecvSequenced != nil {
		return *m.PacketsRecvSequenced
	}
	return 0
}

func (m *CMsgSteamDatagramLinkLifetimeStats) GetPacketsRecvDropped() uint64 {
	if m != nil && m.PacketsRecvDropped != nil {
		return *m.PacketsRecvDropped
	}
	return 0
}

func (m *CMsgSteamDatagramLinkLifetimeStats) GetPacketsRecvOutOfOrder() uint64 {
	if m != nil && m.PacketsRecvOutOfOrder != nil {
		return *m.PacketsRecvOutOfOrder
	}
	return 0
}

func (m *CMsgSteamDatagramLinkLifetimeStats) GetPacketsRecvDuplicate() uint64 {
	if m != nil && m.PacketsRecvDuplicate != nil {
		return *m.PacketsRecvDuplicate
	}
	return 0
}

func (m *CMsgSteamDatagramLinkLifetimeStats) GetPacketsRecvLurch() uint64 {
	if m != nil && m.PacketsRecvLurch != nil {
		return *m.PacketsRecvLurch
	}
	return 0
}

func (m *CMsgSteamDatagramLinkLifetimeStats) GetQualityHistogram_100() uint32 {
	if m != nil && m.QualityHistogram_100 != nil {
		return *m.QualityHistogram_100
	}
	return 0
}

func (m *CMsgSteamDatagramLinkLifetimeStats) GetQualityHistogram_99() uint32 {
	if m != nil && m.QualityHistogram_99 != nil {
		return *m.QualityHistogram_99
	}
	return 0
}

func (m *CMsgSteamDatagramLinkLifetimeStats) GetQualityHistogram_97() uint32 {
	if m != nil && m.QualityHistogram_97 != nil {
		return *m.QualityHistogram_97
	}
	return 0
}

func (m *CMsgSteamDatagramLinkLifetimeStats) GetQualityHistogram_95() uint32 {
	if m != nil && m.QualityHistogram_95 != nil {
		return *m.QualityHistogram_95
	}
	return 0
}

func (m *CMsgSteamDatagramLinkLifetimeStats) GetQualityHistogram_90() uint32 {
	if m != nil && m.QualityHistogram_90 != nil {
		return *m.QualityHistogram_90
	}
	return 0
}

func (m *CMsgSteamDatagramLinkLifetimeStats) GetQualityHistogram_75() uint32 {
	if m != nil && m.QualityHistogram_75 != nil {
		return *m.QualityHistogram_75
	}
	return 0
}

func (m *CMsgSteamDatagramLinkLifetimeStats) GetQualityHistogram_50() uint32 {
	if m != nil && m.QualityHistogram_50 != nil {
		return *m.QualityHistogram_50
	}
	return 0
}

func (m *CMsgSteamDatagramLinkLifetimeStats) GetQualityHistogram_1() uint32 {
	if m != nil && m.QualityHistogram_1 != nil {
		return *m.QualityHistogram_1
	}
	return 0
}

func (m *CMsgSteamDatagramLinkLifetimeStats) GetQualityHistogramDead() uint32 {
	if m != nil && m.QualityHistogramDead != nil {
		return *m.QualityHistogramDead
	}
	return 0
}

func (m *CMsgSteamDatagramLinkLifetimeStats) GetQualityNtile_2Nd() uint32 {
	if m != nil && m.QualityNtile_2Nd != nil {
		return *m.QualityNtile_2Nd
	}
	return 0
}

func (m *CMsgSteamDatagramLinkLifetimeStats) GetQualityNtile_5Th() uint32 {
	if m != nil && m.QualityNtile_5Th != nil {
		return *m.QualityNtile_5Th
	}
	return 0
}

func (m *CMsgSteamDatagramLinkLifetimeStats) GetQualityNtile_25Th() uint32 {
	if m != nil && m.QualityNtile_25Th != nil {
		return *m.QualityNtile_25Th
	}
	return 0
}

func (m *CMsgSteamDatagramLinkLifetimeStats) GetQualityNtile_50Th() uint32 {
	if m != nil && m.QualityNtile_50Th != nil {
		return *m.QualityNtile_50Th
	}
	return 0
}

func (m *CMsgSteamDatagramLinkLifetimeStats) GetPingHistogram_25() uint32 {
	if m != nil && m.PingHistogram_25 != nil {
		return *m.PingHistogram_25
	}
	return 0
}

func (m *CMsgSteamDatagramLinkLifetimeStats) GetPingHistogram_50() uint32 {
	if m != nil && m.PingHistogram_50 != nil {
		return *m.PingHistogram_50
	}
	return 0
}

func (m *CMsgSteamDatagramLinkLifetimeStats) GetPingHistogram_75() uint32 {
	if m != nil && m.PingHistogram_75 != nil {
		return *m.PingHistogram_75
	}
	return 0
}

func (m *CMsgSteamDatagramLinkLifetimeStats) GetPingHistogram_100() uint32 {
	if m != nil && m.PingHistogram_100 != nil {
		return *m.PingHistogram_100
	}
	return 0
}

func (m *CMsgSteamDatagramLinkLifetimeStats) GetPingHistogram_125() uint32 {
	if m != nil && m.PingHistogram_125 != nil {
		return *m.PingHistogram_125
	}
	return 0
}

func (m *CMsgSteamDatagramLinkLifetimeStats) GetPingHistogram_150() uint32 {
	if m != nil && m.PingHistogram_150 != nil {
		return *m.PingHistogram_150
	}
	return 0
}

func (m *CMsgSteamDatagramLinkLifetimeStats) GetPingHistogram_200() uint32 {
	if m != nil && m.PingHistogram_200 != nil {
		return *m.PingHistogram_200
	}
	return 0
}

func (m *CMsgSteamDatagramLinkLifetimeStats) GetPingHistogram_300() uint32 {
	if m != nil && m.PingHistogram_300 != nil {
		return *m.PingHistogram_300
	}
	return 0
}

func (m *CMsgSteamDatagramLinkLifetimeStats) GetPingHistogramMax() uint32 {
	if m != nil && m.PingHistogramMax != nil {
		return *m.PingHistogramMax
	}
	return 0
}

func (m *CMsgSteamDatagramLinkLifetimeStats) GetPingNtile_5Th() uint32 {
	if m != nil && m.PingNtile_5Th != nil {
		return *m.PingNtile_5Th
	}
	return 0
}

func (m *CMsgSteamDatagramLinkLifetimeStats) GetPingNtile_50Th() uint32 {
	if m != nil && m.PingNtile_50Th != nil {
		return *m.PingNtile_50Th
	}
	return 0
}

func (m *CMsgSteamDatagramLinkLifetimeStats) GetPingNtile_75Th() uint32 {
	if m != nil && m.PingNtile_75Th != nil {
		return *m.PingNtile_75Th
	}
	return 0
}

func (m *CMsgSteamDatagramLinkLifetimeStats) GetPingNtile_95Th() uint32 {
	if m != nil && m.PingNtile_95Th != nil {
		return *m.PingNtile_95Th
	}
	return 0
}

func (m *CMsgSteamDatagramLinkLifetimeStats) GetPingNtile_98Th() uint32 {
	if m != nil && m.PingNtile_98Th != nil {
		return *m.PingNtile_98Th
	}
	return 0
}

func (m *CMsgSteamDatagramLinkLifetimeStats) GetJitterHistogramNegligible() uint32 {
	if m != nil && m.JitterHistogramNegligible != nil {
		return *m.JitterHistogramNegligible
	}
	return 0
}

func (m *CMsgSteamDatagramLinkLifetimeStats) GetJitterHistogram_1() uint32 {
	if m != nil && m.JitterHistogram_1 != nil {
		return *m.JitterHistogram_1
	}
	return 0
}

func (m *CMsgSteamDatagramLinkLifetimeStats) GetJitterHistogram_2() uint32 {
	if m != nil && m.JitterHistogram_2 != nil {
		return *m.JitterHistogram_2
	}
	return 0
}

func (m *CMsgSteamDatagramLinkLifetimeStats) GetJitterHistogram_5() uint32 {
	if m != nil && m.JitterHistogram_5 != nil {
		return *m.JitterHistogram_5
	}
	return 0
}

func (m *CMsgSteamDatagramLinkLifetimeStats) GetJitterHistogram_10() uint32 {
	if m != nil && m.JitterHistogram_10 != nil {
		return *m.JitterHistogram_10
	}
	return 0
}

func (m *CMsgSteamDatagramLinkLifetimeStats) GetJitterHistogram_20() uint32 {
	if m != nil && m.JitterHistogram_20 != nil {
		return *m.JitterHistogram_20
	}
	return 0
}

func (m *CMsgSteamDatagramLinkLifetimeStats) GetTxspeedMax() uint32 {
	if m != nil && m.TxspeedMax != nil {
		return *m.TxspeedMax
	}
	return 0
}

func (m *CMsgSteamDatagramLinkLifetimeStats) GetTxspeedHistogram_16() uint32 {
	if m != nil && m.TxspeedHistogram_16 != nil {
		return *m.TxspeedHistogram_16
	}
	return 0
}

func (m *CMsgSteamDatagramLinkLifetimeStats) GetTxspeedHistogram_32() uint32 {
	if m != nil && m.TxspeedHistogram_32 != nil {
		return *m.TxspeedHistogram_32
	}
	return 0
}

func (m *CMsgSteamDatagramLinkLifetimeStats) GetTxspeedHistogram_64() uint32 {
	if m != nil && m.TxspeedHistogram_64 != nil {
		return *m.TxspeedHistogram_64
	}
	return 0
}

func (m *CMsgSteamDatagramLinkLifetimeStats) GetTxspeedHistogram_128() uint32 {
	if m != nil && m.TxspeedHistogram_128 != nil {
		return *m.TxspeedHistogram_128
	}
	return 0
}

func (m *CMsgSteamDatagramLinkLifetimeStats) GetTxspeedHistogram_256() uint32 {
	if m != nil && m.TxspeedHistogram_256 != nil {
		return *m.TxspeedHistogram_256
	}
	return 0
}

func (m *CMsgSteamDatagramLinkLifetimeStats) GetTxspeedHistogram_512() uint32 {
	if m != nil && m.TxspeedHistogram_512 != nil {
		return *m.TxspeedHistogram_512
	}
	return 0
}

func (m *CMsgSteamDatagramLinkLifetimeStats) GetTxspeedHistogram_1024() uint32 {
	if m != nil && m.TxspeedHistogram_1024 != nil {
		return *m.TxspeedHistogram_1024
	}
	return 0
}

func (m *CMsgSteamDatagramLinkLifetimeStats) GetTxspeedHistogramMax() uint32 {
	if m != nil && m.TxspeedHistogramMax != nil {
		return *m.TxspeedHistogramMax
	}
	return 0
}

func (m *CMsgSteamDatagramLinkLifetimeStats) GetTxspeedNtile_5Th() uint32 {
	if m != nil && m.TxspeedNtile_5Th != nil {
		return *m.TxspeedNtile_5Th
	}
	return 0
}

func (m *CMsgSteamDatagramLinkLifetimeStats) GetTxspeedNtile_50Th() uint32 {
	if m != nil && m.TxspeedNtile_50Th != nil {
		return *m.TxspeedNtile_50Th
	}
	return 0
}

func (m *CMsgSteamDatagramLinkLifetimeStats) GetTxspeedNtile_75Th() uint32 {
	if m != nil && m.TxspeedNtile_75Th != nil {
		return *m.TxspeedNtile_75Th
	}
	return 0
}

func (m *CMsgSteamDatagramLinkLifetimeStats) GetTxspeedNtile_95Th() uint32 {
	if m != nil && m.TxspeedNtile_95Th != nil {
		return *m.TxspeedNtile_95Th
	}
	return 0
}

func (m *CMsgSteamDatagramLinkLifetimeStats) GetTxspeedNtile_98Th() uint32 {
	if m != nil && m.TxspeedNtile_98Th != nil {
		return *m.TxspeedNtile_98Th
	}
	return 0
}

func (m *CMsgSteamDatagramLinkLifetimeStats) GetRxspeedMax() uint32 {
	if m != nil && m.RxspeedMax != nil {
		return *m.RxspeedMax
	}
	return 0
}

func (m *CMsgSteamDatagramLinkLifetimeStats) GetRxspeedHistogram_16() uint32 {
	if m != nil && m.RxspeedHistogram_16 != nil {
		return *m.RxspeedHistogram_16
	}
	return 0
}

func (m *CMsgSteamDatagramLinkLifetimeStats) GetRxspeedHistogram_32() uint32 {
	if m != nil && m.RxspeedHistogram_32 != nil {
		return *m.RxspeedHistogram_32
	}
	return 0
}

func (m *CMsgSteamDatagramLinkLifetimeStats) GetRxspeedHistogram_64() uint32 {
	if m != nil && m.RxspeedHistogram_64 != nil {
		return *m.RxspeedHistogram_64
	}
	return 0
}

func (m *CMsgSteamDatagramLinkLifetimeStats) GetRxspeedHistogram_128() uint32 {
	if m != nil && m.RxspeedHistogram_128 != nil {
		return *m.RxspeedHistogram_128
	}
	return 0
}

func (m *CMsgSteamDatagramLinkLifetimeStats) GetRxspeedHistogram_256() uint32 {
	if m != nil && m.RxspeedHistogram_256 != nil {
		return *m.RxspeedHistogram_256
	}
	return 0
}

func (m *CMsgSteamDatagramLinkLifetimeStats) GetRxspeedHistogram_512() uint32 {
	if m != nil && m.RxspeedHistogram_512 != nil {
		return *m.RxspeedHistogram_512
	}
	return 0
}

func (m *CMsgSteamDatagramLinkLifetimeStats) GetRxspeedHistogram_1024() uint32 {
	if m != nil && m.RxspeedHistogram_1024 != nil {
		return *m.RxspeedHistogram_1024
	}
	return 0
}

func (m *CMsgSteamDatagramLinkLifetimeStats) GetRxspeedHistogramMax() uint32 {
	if m != nil && m.RxspeedHistogramMax != nil {
		return *m.RxspeedHistogramMax
	}
	return 0
}

func (m *CMsgSteamDatagramLinkLifetimeStats) GetRxspeedNtile_5Th() uint32 {
	if m != nil && m.RxspeedNtile_5Th != nil {
		return *m.RxspeedNtile_5Th
	}
	return 0
}

func (m *CMsgSteamDatagramLinkLifetimeStats) GetRxspeedNtile_50Th() uint32 {
	if m != nil && m.RxspeedNtile_50Th != nil {
		return *m.RxspeedNtile_50Th
	}
	return 0
}

func (m *CMsgSteamDatagramLinkLifetimeStats) GetRxspeedNtile_75Th() uint32 {
	if m != nil && m.RxspeedNtile_75Th != nil {
		return *m.RxspeedNtile_75Th
	}
	return 0
}

func (m *CMsgSteamDatagramLinkLifetimeStats) GetRxspeedNtile_95Th() uint32 {
	if m != nil && m.RxspeedNtile_95Th != nil {
		return *m.RxspeedNtile_95Th
	}
	return 0
}

func (m *CMsgSteamDatagramLinkLifetimeStats) GetRxspeedNtile_98Th() uint32 {
	if m != nil && m.RxspeedNtile_98Th != nil {
		return *m.RxspeedNtile_98Th
	}
	return 0
}

type CMsgSteamDatagramConnectionQuality struct {
	Instantaneous        *CMsgSteamDatagramLinkInstantaneousStats `protobuf:"bytes,1,opt,name=instantaneous" json:"instantaneous,omitempty"`
	Lifetime             *CMsgSteamDatagramLinkLifetimeStats      `protobuf:"bytes,2,opt,name=lifetime" json:"lifetime,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                 `json:"-"`
	XXX_unrecognized     []byte                                   `json:"-"`
	XXX_sizecache        int32                                    `json:"-"`
}

func (m *CMsgSteamDatagramConnectionQuality) Reset()         { *m = CMsgSteamDatagramConnectionQuality{} }
func (m *CMsgSteamDatagramConnectionQuality) String() string { return proto.CompactTextString(m) }
func (*CMsgSteamDatagramConnectionQuality) ProtoMessage()    {}
func (*CMsgSteamDatagramConnectionQuality) Descriptor() ([]byte, []int) {
	return fileDescriptor_steamdatagram_messages_89793dc68acee3d1, []int{13}
}
func (m *CMsgSteamDatagramConnectionQuality) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgSteamDatagramConnectionQuality.Unmarshal(m, b)
}
func (m *CMsgSteamDatagramConnectionQuality) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgSteamDatagramConnectionQuality.Marshal(b, m, deterministic)
}
func (dst *CMsgSteamDatagramConnectionQuality) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgSteamDatagramConnectionQuality.Merge(dst, src)
}
func (m *CMsgSteamDatagramConnectionQuality) XXX_Size() int {
	return xxx_messageInfo_CMsgSteamDatagramConnectionQuality.Size(m)
}
func (m *CMsgSteamDatagramConnectionQuality) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgSteamDatagramConnectionQuality.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgSteamDatagramConnectionQuality proto.InternalMessageInfo

func (m *CMsgSteamDatagramConnectionQuality) GetInstantaneous() *CMsgSteamDatagramLinkInstantaneousStats {
	if m != nil {
		return m.Instantaneous
	}
	return nil
}

func (m *CMsgSteamDatagramConnectionQuality) GetLifetime() *CMsgSteamDatagramLinkLifetimeStats {
	if m != nil {
		return m.Lifetime
	}
	return nil
}

type CMsgSteamDatagramConnectionStatsClientToRouter struct {
	C2R                   *CMsgSteamDatagramConnectionQuality `protobuf:"bytes,1,opt,name=c2r" json:"c2r,omitempty"`
	C2S                   *CMsgSteamDatagramConnectionQuality `protobuf:"bytes,2,opt,name=c2s" json:"c2s,omitempty"`
	LegacyClientTimestamp *uint32                             `protobuf:"fixed32,3,opt,name=legacy_client_timestamp,json=legacyClientTimestamp" json:"legacy_client_timestamp,omitempty"`
	AckRelay              []uint32                            `protobuf:"fixed32,4,rep,name=ack_relay,json=ackRelay" json:"ack_relay,omitempty"`
	AckE2E                []uint32                            `protobuf:"fixed32,5,rep,name=ack_e2e,json=ackE2e" json:"ack_e2e,omitempty"`
	Flags                 *uint32                             `protobuf:"varint,6,opt,name=flags" json:"flags,omitempty"`
	ClientConnectionId    *uint32                             `protobuf:"fixed32,8,opt,name=client_connection_id,json=clientConnectionId" json:"client_connection_id,omitempty"`
	SeqNumC2R             *uint32                             `protobuf:"varint,9,opt,name=seq_num_c2r,json=seqNumC2r" json:"seq_num_c2r,omitempty"`
	SeqNumC2S             *uint32                             `protobuf:"varint,10,opt,name=seq_num_c2s,json=seqNumC2s" json:"seq_num_c2s,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}                            `json:"-"`
	XXX_unrecognized      []byte                              `json:"-"`
	XXX_sizecache         int32                               `json:"-"`
}

func (m *CMsgSteamDatagramConnectionStatsClientToRouter) Reset() {
	*m = CMsgSteamDatagramConnectionStatsClientToRouter{}
}
func (m *CMsgSteamDatagramConnectionStatsClientToRouter) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgSteamDatagramConnectionStatsClientToRouter) ProtoMessage() {}
func (*CMsgSteamDatagramConnectionStatsClientToRouter) Descriptor() ([]byte, []int) {
	return fileDescriptor_steamdatagram_messages_89793dc68acee3d1, []int{14}
}
func (m *CMsgSteamDatagramConnectionStatsClientToRouter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgSteamDatagramConnectionStatsClientToRouter.Unmarshal(m, b)
}
func (m *CMsgSteamDatagramConnectionStatsClientToRouter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgSteamDatagramConnectionStatsClientToRouter.Marshal(b, m, deterministic)
}
func (dst *CMsgSteamDatagramConnectionStatsClientToRouter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgSteamDatagramConnectionStatsClientToRouter.Merge(dst, src)
}
func (m *CMsgSteamDatagramConnectionStatsClientToRouter) XXX_Size() int {
	return xxx_messageInfo_CMsgSteamDatagramConnectionStatsClientToRouter.Size(m)
}
func (m *CMsgSteamDatagramConnectionStatsClientToRouter) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgSteamDatagramConnectionStatsClientToRouter.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgSteamDatagramConnectionStatsClientToRouter proto.InternalMessageInfo

func (m *CMsgSteamDatagramConnectionStatsClientToRouter) GetC2R() *CMsgSteamDatagramConnectionQuality {
	if m != nil {
		return m.C2R
	}
	return nil
}

func (m *CMsgSteamDatagramConnectionStatsClientToRouter) GetC2S() *CMsgSteamDatagramConnectionQuality {
	if m != nil {
		return m.C2S
	}
	return nil
}

func (m *CMsgSteamDatagramConnectionStatsClientToRouter) GetLegacyClientTimestamp() uint32 {
	if m != nil && m.LegacyClientTimestamp != nil {
		return *m.LegacyClientTimestamp
	}
	return 0
}

func (m *CMsgSteamDatagramConnectionStatsClientToRouter) GetAckRelay() []uint32 {
	if m != nil {
		return m.AckRelay
	}
	return nil
}

func (m *CMsgSteamDatagramConnectionStatsClientToRouter) GetAckE2E() []uint32 {
	if m != nil {
		return m.AckE2E
	}
	return nil
}

func (m *CMsgSteamDatagramConnectionStatsClientToRouter) GetFlags() uint32 {
	if m != nil && m.Flags != nil {
		return *m.Flags
	}
	return 0
}

func (m *CMsgSteamDatagramConnectionStatsClientToRouter) GetClientConnectionId() uint32 {
	if m != nil && m.ClientConnectionId != nil {
		return *m.ClientConnectionId
	}
	return 0
}

func (m *CMsgSteamDatagramConnectionStatsClientToRouter) GetSeqNumC2R() uint32 {
	if m != nil && m.SeqNumC2R != nil {
		return *m.SeqNumC2R
	}
	return 0
}

func (m *CMsgSteamDatagramConnectionStatsClientToRouter) GetSeqNumC2S() uint32 {
	if m != nil && m.SeqNumC2S != nil {
		return *m.SeqNumC2S
	}
	return 0
}

type CMsgSteamDatagramConnectionStatsRouterToClient struct {
	R2C                             *CMsgSteamDatagramConnectionQuality `protobuf:"bytes,1,opt,name=r2c" json:"r2c,omitempty"`
	S2C                             *CMsgSteamDatagramConnectionQuality `protobuf:"bytes,2,opt,name=s2c" json:"s2c,omitempty"`
	LegacyClientTimestampFromRouter *uint32                             `protobuf:"fixed32,3,opt,name=legacy_client_timestamp_from_router,json=legacyClientTimestampFromRouter" json:"legacy_client_timestamp_from_router,omitempty"`
	LegacyClientTimestampFromServer *uint32                             `protobuf:"fixed32,4,opt,name=legacy_client_timestamp_from_server,json=legacyClientTimestampFromServer" json:"legacy_client_timestamp_from_server,omitempty"`
	RouterGameserverLatency         *uint32                             `protobuf:"varint,5,opt,name=router_gameserver_latency,json=routerGameserverLatency" json:"router_gameserver_latency,omitempty"`
	SecondsUntilShutdown            *uint32                             `protobuf:"varint,6,opt,name=seconds_until_shutdown,json=secondsUntilShutdown" json:"seconds_until_shutdown,omitempty"`
	MigrateRequestIp                *uint32                             `protobuf:"fixed32,10,opt,name=migrate_request_ip,json=migrateRequestIp" json:"migrate_request_ip,omitempty"`
	MigrateRequestPort              *uint32                             `protobuf:"varint,11,opt,name=migrate_request_port,json=migrateRequestPort" json:"migrate_request_port,omitempty"`
	ScoringPenaltyRelayCluster      *uint32                             `protobuf:"varint,12,opt,name=scoring_penalty_relay_cluster,json=scoringPenaltyRelayCluster" json:"scoring_penalty_relay_cluster,omitempty"`
	AckRelay                        []uint32                            `protobuf:"fixed32,13,rep,name=ack_relay,json=ackRelay" json:"ack_relay,omitempty"`
	AckE2E                          []uint32                            `protobuf:"fixed32,14,rep,name=ack_e2e,json=ackE2e" json:"ack_e2e,omitempty"`
	Flags                           *uint32                             `protobuf:"varint,15,opt,name=flags" json:"flags,omitempty"`
	ClientConnectionId              *uint32                             `protobuf:"fixed32,7,opt,name=client_connection_id,json=clientConnectionId" json:"client_connection_id,omitempty"`
	SeqNumR2C                       *uint32                             `protobuf:"varint,8,opt,name=seq_num_r2c,json=seqNumR2c" json:"seq_num_r2c,omitempty"`
	SeqNumS2C                       *uint32                             `protobuf:"varint,9,opt,name=seq_num_s2c,json=seqNumS2c" json:"seq_num_s2c,omitempty"`
	XXX_NoUnkeyedLiteral            struct{}                            `json:"-"`
	XXX_unrecognized                []byte                              `json:"-"`
	XXX_sizecache                   int32                               `json:"-"`
}

func (m *CMsgSteamDatagramConnectionStatsRouterToClient) Reset() {
	*m = CMsgSteamDatagramConnectionStatsRouterToClient{}
}
func (m *CMsgSteamDatagramConnectionStatsRouterToClient) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgSteamDatagramConnectionStatsRouterToClient) ProtoMessage() {}
func (*CMsgSteamDatagramConnectionStatsRouterToClient) Descriptor() ([]byte, []int) {
	return fileDescriptor_steamdatagram_messages_89793dc68acee3d1, []int{15}
}
func (m *CMsgSteamDatagramConnectionStatsRouterToClient) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgSteamDatagramConnectionStatsRouterToClient.Unmarshal(m, b)
}
func (m *CMsgSteamDatagramConnectionStatsRouterToClient) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgSteamDatagramConnectionStatsRouterToClient.Marshal(b, m, deterministic)
}
func (dst *CMsgSteamDatagramConnectionStatsRouterToClient) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgSteamDatagramConnectionStatsRouterToClient.Merge(dst, src)
}
func (m *CMsgSteamDatagramConnectionStatsRouterToClient) XXX_Size() int {
	return xxx_messageInfo_CMsgSteamDatagramConnectionStatsRouterToClient.Size(m)
}
func (m *CMsgSteamDatagramConnectionStatsRouterToClient) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgSteamDatagramConnectionStatsRouterToClient.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgSteamDatagramConnectionStatsRouterToClient proto.InternalMessageInfo

func (m *CMsgSteamDatagramConnectionStatsRouterToClient) GetR2C() *CMsgSteamDatagramConnectionQuality {
	if m != nil {
		return m.R2C
	}
	return nil
}

func (m *CMsgSteamDatagramConnectionStatsRouterToClient) GetS2C() *CMsgSteamDatagramConnectionQuality {
	if m != nil {
		return m.S2C
	}
	return nil
}

func (m *CMsgSteamDatagramConnectionStatsRouterToClient) GetLegacyClientTimestampFromRouter() uint32 {
	if m != nil && m.LegacyClientTimestampFromRouter != nil {
		return *m.LegacyClientTimestampFromRouter
	}
	return 0
}

func (m *CMsgSteamDatagramConnectionStatsRouterToClient) GetLegacyClientTimestampFromServer() uint32 {
	if m != nil && m.LegacyClientTimestampFromServer != nil {
		return *m.LegacyClientTimestampFromServer
	}
	return 0
}

func (m *CMsgSteamDatagramConnectionStatsRouterToClient) GetRouterGameserverLatency() uint32 {
	if m != nil && m.RouterGameserverLatency != nil {
		return *m.RouterGameserverLatency
	}
	return 0
}

func (m *CMsgSteamDatagramConnectionStatsRouterToClient) GetSecondsUntilShutdown() uint32 {
	if m != nil && m.SecondsUntilShutdown != nil {
		return *m.SecondsUntilShutdown
	}
	return 0
}

func (m *CMsgSteamDatagramConnectionStatsRouterToClient) GetMigrateRequestIp() uint32 {
	if m != nil && m.MigrateRequestIp != nil {
		return *m.MigrateRequestIp
	}
	return 0
}

func (m *CMsgSteamDatagramConnectionStatsRouterToClient) GetMigrateRequestPort() uint32 {
	if m != nil && m.MigrateRequestPort != nil {
		return *m.MigrateRequestPort
	}
	return 0
}

func (m *CMsgSteamDatagramConnectionStatsRouterToClient) GetScoringPenaltyRelayCluster() uint32 {
	if m != nil && m.ScoringPenaltyRelayCluster != nil {
		return *m.ScoringPenaltyRelayCluster
	}
	return 0
}

func (m *CMsgSteamDatagramConnectionStatsRouterToClient) GetAckRelay() []uint32 {
	if m != nil {
		return m.AckRelay
	}
	return nil
}

func (m *CMsgSteamDatagramConnectionStatsRouterToClient) GetAckE2E() []uint32 {
	if m != nil {
		return m.AckE2E
	}
	return nil
}

func (m *CMsgSteamDatagramConnectionStatsRouterToClient) GetFlags() uint32 {
	if m != nil && m.Flags != nil {
		return *m.Flags
	}
	return 0
}

func (m *CMsgSteamDatagramConnectionStatsRouterToClient) GetClientConnectionId() uint32 {
	if m != nil && m.ClientConnectionId != nil {
		return *m.ClientConnectionId
	}
	return 0
}

func (m *CMsgSteamDatagramConnectionStatsRouterToClient) GetSeqNumR2C() uint32 {
	if m != nil && m.SeqNumR2C != nil {
		return *m.SeqNumR2C
	}
	return 0
}

func (m *CMsgSteamDatagramConnectionStatsRouterToClient) GetSeqNumS2C() uint32 {
	if m != nil && m.SeqNumS2C != nil {
		return *m.SeqNumS2C
	}
	return 0
}

type CMsgSteamDatagramConnectionStatsRouterToServer struct {
	R2S                   *CMsgSteamDatagramConnectionQuality `protobuf:"bytes,1,opt,name=r2s" json:"r2s,omitempty"`
	C2S                   *CMsgSteamDatagramConnectionQuality `protobuf:"bytes,2,opt,name=c2s" json:"c2s,omitempty"`
	LegacyClientTimestamp *uint32                             `protobuf:"fixed32,3,opt,name=legacy_client_timestamp,json=legacyClientTimestamp" json:"legacy_client_timestamp,omitempty"`
	LegacyRouterTimestamp *uint32                             `protobuf:"fixed32,4,opt,name=legacy_router_timestamp,json=legacyRouterTimestamp" json:"legacy_router_timestamp,omitempty"`
	AckRelay              []uint32                            `protobuf:"fixed32,10,rep,name=ack_relay,json=ackRelay" json:"ack_relay,omitempty"`
	AckE2E                []uint32                            `protobuf:"fixed32,11,rep,name=ack_e2e,json=ackE2e" json:"ack_e2e,omitempty"`
	Flags                 *uint32                             `protobuf:"varint,12,opt,name=flags" json:"flags,omitempty"`
	SeqNumR2S             *uint32                             `protobuf:"varint,5,opt,name=seq_num_r2s,json=seqNumR2s" json:"seq_num_r2s,omitempty"`
	SeqNumC2S             *uint32                             `protobuf:"varint,6,opt,name=seq_num_c2s,json=seqNumC2s" json:"seq_num_c2s,omitempty"`
	ClientSteamId         *uint64                             `protobuf:"fixed64,7,opt,name=client_steam_id,json=clientSteamId" json:"client_steam_id,omitempty"`
	RelaySessionId        *uint32                             `protobuf:"varint,8,opt,name=relay_session_id,json=relaySessionId" json:"relay_session_id,omitempty"`
	ClientConnectionId    *uint32                             `protobuf:"fixed32,9,opt,name=client_connection_id,json=clientConnectionId" json:"client_connection_id,omitempty"`
	ServerConnectionId    *uint32                             `protobuf:"fixed32,13,opt,name=server_connection_id,json=serverConnectionId" json:"server_connection_id,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}                            `json:"-"`
	XXX_unrecognized      []byte                              `json:"-"`
	XXX_sizecache         int32                               `json:"-"`
}

func (m *CMsgSteamDatagramConnectionStatsRouterToServer) Reset() {
	*m = CMsgSteamDatagramConnectionStatsRouterToServer{}
}
func (m *CMsgSteamDatagramConnectionStatsRouterToServer) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgSteamDatagramConnectionStatsRouterToServer) ProtoMessage() {}
func (*CMsgSteamDatagramConnectionStatsRouterToServer) Descriptor() ([]byte, []int) {
	return fileDescriptor_steamdatagram_messages_89793dc68acee3d1, []int{16}
}
func (m *CMsgSteamDatagramConnectionStatsRouterToServer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgSteamDatagramConnectionStatsRouterToServer.Unmarshal(m, b)
}
func (m *CMsgSteamDatagramConnectionStatsRouterToServer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgSteamDatagramConnectionStatsRouterToServer.Marshal(b, m, deterministic)
}
func (dst *CMsgSteamDatagramConnectionStatsRouterToServer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgSteamDatagramConnectionStatsRouterToServer.Merge(dst, src)
}
func (m *CMsgSteamDatagramConnectionStatsRouterToServer) XXX_Size() int {
	return xxx_messageInfo_CMsgSteamDatagramConnectionStatsRouterToServer.Size(m)
}
func (m *CMsgSteamDatagramConnectionStatsRouterToServer) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgSteamDatagramConnectionStatsRouterToServer.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgSteamDatagramConnectionStatsRouterToServer proto.InternalMessageInfo

func (m *CMsgSteamDatagramConnectionStatsRouterToServer) GetR2S() *CMsgSteamDatagramConnectionQuality {
	if m != nil {
		return m.R2S
	}
	return nil
}

func (m *CMsgSteamDatagramConnectionStatsRouterToServer) GetC2S() *CMsgSteamDatagramConnectionQuality {
	if m != nil {
		return m.C2S
	}
	return nil
}

func (m *CMsgSteamDatagramConnectionStatsRouterToServer) GetLegacyClientTimestamp() uint32 {
	if m != nil && m.LegacyClientTimestamp != nil {
		return *m.LegacyClientTimestamp
	}
	return 0
}

func (m *CMsgSteamDatagramConnectionStatsRouterToServer) GetLegacyRouterTimestamp() uint32 {
	if m != nil && m.LegacyRouterTimestamp != nil {
		return *m.LegacyRouterTimestamp
	}
	return 0
}

func (m *CMsgSteamDatagramConnectionStatsRouterToServer) GetAckRelay() []uint32 {
	if m != nil {
		return m.AckRelay
	}
	return nil
}

func (m *CMsgSteamDatagramConnectionStatsRouterToServer) GetAckE2E() []uint32 {
	if m != nil {
		return m.AckE2E
	}
	return nil
}

func (m *CMsgSteamDatagramConnectionStatsRouterToServer) GetFlags() uint32 {
	if m != nil && m.Flags != nil {
		return *m.Flags
	}
	return 0
}

func (m *CMsgSteamDatagramConnectionStatsRouterToServer) GetSeqNumR2S() uint32 {
	if m != nil && m.SeqNumR2S != nil {
		return *m.SeqNumR2S
	}
	return 0
}

func (m *CMsgSteamDatagramConnectionStatsRouterToServer) GetSeqNumC2S() uint32 {
	if m != nil && m.SeqNumC2S != nil {
		return *m.SeqNumC2S
	}
	return 0
}

func (m *CMsgSteamDatagramConnectionStatsRouterToServer) GetClientSteamId() uint64 {
	if m != nil && m.ClientSteamId != nil {
		return *m.ClientSteamId
	}
	return 0
}

func (m *CMsgSteamDatagramConnectionStatsRouterToServer) GetRelaySessionId() uint32 {
	if m != nil && m.RelaySessionId != nil {
		return *m.RelaySessionId
	}
	return 0
}

func (m *CMsgSteamDatagramConnectionStatsRouterToServer) GetClientConnectionId() uint32 {
	if m != nil && m.ClientConnectionId != nil {
		return *m.ClientConnectionId
	}
	return 0
}

func (m *CMsgSteamDatagramConnectionStatsRouterToServer) GetServerConnectionId() uint32 {
	if m != nil && m.ServerConnectionId != nil {
		return *m.ServerConnectionId
	}
	return 0
}

type CMsgSteamDatagramConnectionStatsServerToRouter struct {
	S2R                  *CMsgSteamDatagramConnectionQuality `protobuf:"bytes,1,opt,name=s2r" json:"s2r,omitempty"`
	S2C                  *CMsgSteamDatagramConnectionQuality `protobuf:"bytes,2,opt,name=s2c" json:"s2c,omitempty"`
	AckRelay             []uint32                            `protobuf:"fixed32,8,rep,name=ack_relay,json=ackRelay" json:"ack_relay,omitempty"`
	AckE2E               []uint32                            `protobuf:"fixed32,9,rep,name=ack_e2e,json=ackE2e" json:"ack_e2e,omitempty"`
	Flags                *uint32                             `protobuf:"varint,10,opt,name=flags" json:"flags,omitempty"`
	SeqNumS2R            *uint32                             `protobuf:"varint,3,opt,name=seq_num_s2r,json=seqNumS2r" json:"seq_num_s2r,omitempty"`
	SeqNumS2C            *uint32                             `protobuf:"varint,4,opt,name=seq_num_s2c,json=seqNumS2c" json:"seq_num_s2c,omitempty"`
	ClientSteamId        *uint64                             `protobuf:"fixed64,5,opt,name=client_steam_id,json=clientSteamId" json:"client_steam_id,omitempty"`
	RelaySessionId       *uint32                             `protobuf:"varint,6,opt,name=relay_session_id,json=relaySessionId" json:"relay_session_id,omitempty"`
	ClientConnectionId   *uint32                             `protobuf:"fixed32,7,opt,name=client_connection_id,json=clientConnectionId" json:"client_connection_id,omitempty"`
	ServerConnectionId   *uint32                             `protobuf:"fixed32,11,opt,name=server_connection_id,json=serverConnectionId" json:"server_connection_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                            `json:"-"`
	XXX_unrecognized     []byte                              `json:"-"`
	XXX_sizecache        int32                               `json:"-"`
}

func (m *CMsgSteamDatagramConnectionStatsServerToRouter) Reset() {
	*m = CMsgSteamDatagramConnectionStatsServerToRouter{}
}
func (m *CMsgSteamDatagramConnectionStatsServerToRouter) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgSteamDatagramConnectionStatsServerToRouter) ProtoMessage() {}
func (*CMsgSteamDatagramConnectionStatsServerToRouter) Descriptor() ([]byte, []int) {
	return fileDescriptor_steamdatagram_messages_89793dc68acee3d1, []int{17}
}
func (m *CMsgSteamDatagramConnectionStatsServerToRouter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgSteamDatagramConnectionStatsServerToRouter.Unmarshal(m, b)
}
func (m *CMsgSteamDatagramConnectionStatsServerToRouter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgSteamDatagramConnectionStatsServerToRouter.Marshal(b, m, deterministic)
}
func (dst *CMsgSteamDatagramConnectionStatsServerToRouter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgSteamDatagramConnectionStatsServerToRouter.Merge(dst, src)
}
func (m *CMsgSteamDatagramConnectionStatsServerToRouter) XXX_Size() int {
	return xxx_messageInfo_CMsgSteamDatagramConnectionStatsServerToRouter.Size(m)
}
func (m *CMsgSteamDatagramConnectionStatsServerToRouter) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgSteamDatagramConnectionStatsServerToRouter.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgSteamDatagramConnectionStatsServerToRouter proto.InternalMessageInfo

func (m *CMsgSteamDatagramConnectionStatsServerToRouter) GetS2R() *CMsgSteamDatagramConnectionQuality {
	if m != nil {
		return m.S2R
	}
	return nil
}

func (m *CMsgSteamDatagramConnectionStatsServerToRouter) GetS2C() *CMsgSteamDatagramConnectionQuality {
	if m != nil {
		return m.S2C
	}
	return nil
}

func (m *CMsgSteamDatagramConnectionStatsServerToRouter) GetAckRelay() []uint32 {
	if m != nil {
		return m.AckRelay
	}
	return nil
}

func (m *CMsgSteamDatagramConnectionStatsServerToRouter) GetAckE2E() []uint32 {
	if m != nil {
		return m.AckE2E
	}
	return nil
}

func (m *CMsgSteamDatagramConnectionStatsServerToRouter) GetFlags() uint32 {
	if m != nil && m.Flags != nil {
		return *m.Flags
	}
	return 0
}

func (m *CMsgSteamDatagramConnectionStatsServerToRouter) GetSeqNumS2R() uint32 {
	if m != nil && m.SeqNumS2R != nil {
		return *m.SeqNumS2R
	}
	return 0
}

func (m *CMsgSteamDatagramConnectionStatsServerToRouter) GetSeqNumS2C() uint32 {
	if m != nil && m.SeqNumS2C != nil {
		return *m.SeqNumS2C
	}
	return 0
}

func (m *CMsgSteamDatagramConnectionStatsServerToRouter) GetClientSteamId() uint64 {
	if m != nil && m.ClientSteamId != nil {
		return *m.ClientSteamId
	}
	return 0
}

func (m *CMsgSteamDatagramConnectionStatsServerToRouter) GetRelaySessionId() uint32 {
	if m != nil && m.RelaySessionId != nil {
		return *m.RelaySessionId
	}
	return 0
}

func (m *CMsgSteamDatagramConnectionStatsServerToRouter) GetClientConnectionId() uint32 {
	if m != nil && m.ClientConnectionId != nil {
		return *m.ClientConnectionId
	}
	return 0
}

func (m *CMsgSteamDatagramConnectionStatsServerToRouter) GetServerConnectionId() uint32 {
	if m != nil && m.ServerConnectionId != nil {
		return *m.ServerConnectionId
	}
	return 0
}

type CMsgSteamDatagramClientPingSampleRequest struct {
	ConnectionId         *uint32  `protobuf:"fixed32,1,opt,name=connection_id,json=connectionId" json:"connection_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgSteamDatagramClientPingSampleRequest) Reset() {
	*m = CMsgSteamDatagramClientPingSampleRequest{}
}
func (m *CMsgSteamDatagramClientPingSampleRequest) String() string { return proto.CompactTextString(m) }
func (*CMsgSteamDatagramClientPingSampleRequest) ProtoMessage()    {}
func (*CMsgSteamDatagramClientPingSampleRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_steamdatagram_messages_89793dc68acee3d1, []int{18}
}
func (m *CMsgSteamDatagramClientPingSampleRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgSteamDatagramClientPingSampleRequest.Unmarshal(m, b)
}
func (m *CMsgSteamDatagramClientPingSampleRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgSteamDatagramClientPingSampleRequest.Marshal(b, m, deterministic)
}
func (dst *CMsgSteamDatagramClientPingSampleRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgSteamDatagramClientPingSampleRequest.Merge(dst, src)
}
func (m *CMsgSteamDatagramClientPingSampleRequest) XXX_Size() int {
	return xxx_messageInfo_CMsgSteamDatagramClientPingSampleRequest.Size(m)
}
func (m *CMsgSteamDatagramClientPingSampleRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgSteamDatagramClientPingSampleRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgSteamDatagramClientPingSampleRequest proto.InternalMessageInfo

func (m *CMsgSteamDatagramClientPingSampleRequest) GetConnectionId() uint32 {
	if m != nil && m.ConnectionId != nil {
		return *m.ConnectionId
	}
	return 0
}

type CMsgSteamDatagramClientPingSampleReply struct {
	ConnectionId         *uint32                                                  `protobuf:"fixed32,1,opt,name=connection_id,json=connectionId" json:"connection_id,omitempty"`
	RoutingClusters      []*CMsgSteamDatagramClientPingSampleReply_RoutingCluster `protobuf:"bytes,2,rep,name=routing_clusters,json=routingClusters" json:"routing_clusters,omitempty"`
	DataCenters          []*CMsgSteamDatagramClientPingSampleReply_DataCenter     `protobuf:"bytes,3,rep,name=data_centers,json=dataCenters" json:"data_centers,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                 `json:"-"`
	XXX_unrecognized     []byte                                                   `json:"-"`
	XXX_sizecache        int32                                                    `json:"-"`
}

func (m *CMsgSteamDatagramClientPingSampleReply) Reset() {
	*m = CMsgSteamDatagramClientPingSampleReply{}
}
func (m *CMsgSteamDatagramClientPingSampleReply) String() string { return proto.CompactTextString(m) }
func (*CMsgSteamDatagramClientPingSampleReply) ProtoMessage()    {}
func (*CMsgSteamDatagramClientPingSampleReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_steamdatagram_messages_89793dc68acee3d1, []int{19}
}
func (m *CMsgSteamDatagramClientPingSampleReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgSteamDatagramClientPingSampleReply.Unmarshal(m, b)
}
func (m *CMsgSteamDatagramClientPingSampleReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgSteamDatagramClientPingSampleReply.Marshal(b, m, deterministic)
}
func (dst *CMsgSteamDatagramClientPingSampleReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgSteamDatagramClientPingSampleReply.Merge(dst, src)
}
func (m *CMsgSteamDatagramClientPingSampleReply) XXX_Size() int {
	return xxx_messageInfo_CMsgSteamDatagramClientPingSampleReply.Size(m)
}
func (m *CMsgSteamDatagramClientPingSampleReply) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgSteamDatagramClientPingSampleReply.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgSteamDatagramClientPingSampleReply proto.InternalMessageInfo

func (m *CMsgSteamDatagramClientPingSampleReply) GetConnectionId() uint32 {
	if m != nil && m.ConnectionId != nil {
		return *m.ConnectionId
	}
	return 0
}

func (m *CMsgSteamDatagramClientPingSampleReply) GetRoutingClusters() []*CMsgSteamDatagramClientPingSampleReply_RoutingCluster {
	if m != nil {
		return m.RoutingClusters
	}
	return nil
}

func (m *CMsgSteamDatagramClientPingSampleReply) GetDataCenters() []*CMsgSteamDatagramClientPingSampleReply_DataCenter {
	if m != nil {
		return m.DataCenters
	}
	return nil
}

type CMsgSteamDatagramClientPingSampleReply_RoutingCluster struct {
	Id                   *uint32  `protobuf:"fixed32,1,opt,name=id" json:"id,omitempty"`
	FrontPingMs          *uint32  `protobuf:"varint,2,opt,name=front_ping_ms,json=frontPingMs" json:"front_ping_ms,omitempty"`
	E2EPingMs            *uint32  `protobuf:"varint,3,opt,name=e2e_ping_ms,json=e2ePingMs" json:"e2e_ping_ms,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgSteamDatagramClientPingSampleReply_RoutingCluster) Reset() {
	*m = CMsgSteamDatagramClientPingSampleReply_RoutingCluster{}
}
func (m *CMsgSteamDatagramClientPingSampleReply_RoutingCluster) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgSteamDatagramClientPingSampleReply_RoutingCluster) ProtoMessage() {}
func (*CMsgSteamDatagramClientPingSampleReply_RoutingCluster) Descriptor() ([]byte, []int) {
	return fileDescriptor_steamdatagram_messages_89793dc68acee3d1, []int{19, 0}
}
func (m *CMsgSteamDatagramClientPingSampleReply_RoutingCluster) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgSteamDatagramClientPingSampleReply_RoutingCluster.Unmarshal(m, b)
}
func (m *CMsgSteamDatagramClientPingSampleReply_RoutingCluster) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgSteamDatagramClientPingSampleReply_RoutingCluster.Marshal(b, m, deterministic)
}
func (dst *CMsgSteamDatagramClientPingSampleReply_RoutingCluster) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgSteamDatagramClientPingSampleReply_RoutingCluster.Merge(dst, src)
}
func (m *CMsgSteamDatagramClientPingSampleReply_RoutingCluster) XXX_Size() int {
	return xxx_messageInfo_CMsgSteamDatagramClientPingSampleReply_RoutingCluster.Size(m)
}
func (m *CMsgSteamDatagramClientPingSampleReply_RoutingCluster) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgSteamDatagramClientPingSampleReply_RoutingCluster.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgSteamDatagramClientPingSampleReply_RoutingCluster proto.InternalMessageInfo

func (m *CMsgSteamDatagramClientPingSampleReply_RoutingCluster) GetId() uint32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *CMsgSteamDatagramClientPingSampleReply_RoutingCluster) GetFrontPingMs() uint32 {
	if m != nil && m.FrontPingMs != nil {
		return *m.FrontPingMs
	}
	return 0
}

func (m *CMsgSteamDatagramClientPingSampleReply_RoutingCluster) GetE2EPingMs() uint32 {
	if m != nil && m.E2EPingMs != nil {
		return *m.E2EPingMs
	}
	return 0
}

type CMsgSteamDatagramClientPingSampleReply_DataCenter struct {
	DataCenterId         *uint32  `protobuf:"fixed32,1,opt,name=data_center_id,json=dataCenterId" json:"data_center_id,omitempty"`
	ViaRelayId           *uint32  `protobuf:"fixed32,2,opt,name=via_relay_id,json=viaRelayId" json:"via_relay_id,omitempty"`
	E2EPingMs            *uint32  `protobuf:"varint,3,opt,name=e2e_ping_ms,json=e2ePingMs" json:"e2e_ping_ms,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgSteamDatagramClientPingSampleReply_DataCenter) Reset() {
	*m = CMsgSteamDatagramClientPingSampleReply_DataCenter{}
}
func (m *CMsgSteamDatagramClientPingSampleReply_DataCenter) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgSteamDatagramClientPingSampleReply_DataCenter) ProtoMessage() {}
func (*CMsgSteamDatagramClientPingSampleReply_DataCenter) Descriptor() ([]byte, []int) {
	return fileDescriptor_steamdatagram_messages_89793dc68acee3d1, []int{19, 1}
}
func (m *CMsgSteamDatagramClientPingSampleReply_DataCenter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgSteamDatagramClientPingSampleReply_DataCenter.Unmarshal(m, b)
}
func (m *CMsgSteamDatagramClientPingSampleReply_DataCenter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgSteamDatagramClientPingSampleReply_DataCenter.Marshal(b, m, deterministic)
}
func (dst *CMsgSteamDatagramClientPingSampleReply_DataCenter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgSteamDatagramClientPingSampleReply_DataCenter.Merge(dst, src)
}
func (m *CMsgSteamDatagramClientPingSampleReply_DataCenter) XXX_Size() int {
	return xxx_messageInfo_CMsgSteamDatagramClientPingSampleReply_DataCenter.Size(m)
}
func (m *CMsgSteamDatagramClientPingSampleReply_DataCenter) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgSteamDatagramClientPingSampleReply_DataCenter.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgSteamDatagramClientPingSampleReply_DataCenter proto.InternalMessageInfo

func (m *CMsgSteamDatagramClientPingSampleReply_DataCenter) GetDataCenterId() uint32 {
	if m != nil && m.DataCenterId != nil {
		return *m.DataCenterId
	}
	return 0
}

func (m *CMsgSteamDatagramClientPingSampleReply_DataCenter) GetViaRelayId() uint32 {
	if m != nil && m.ViaRelayId != nil {
		return *m.ViaRelayId
	}
	return 0
}

func (m *CMsgSteamDatagramClientPingSampleReply_DataCenter) GetE2EPingMs() uint32 {
	if m != nil && m.E2EPingMs != nil {
		return *m.E2EPingMs
	}
	return 0
}

type CMsgSteamDatagramClientSwitchedPrimary struct {
	ConnectionId          *uint32                                               `protobuf:"fixed32,1,opt,name=connection_id,json=connectionId" json:"connection_id,omitempty"`
	FromIp                *uint32                                               `protobuf:"fixed32,2,opt,name=from_ip,json=fromIp" json:"from_ip,omitempty"`
	FromPort              *uint32                                               `protobuf:"varint,3,opt,name=from_port,json=fromPort" json:"from_port,omitempty"`
	FromRouterCluster     *uint32                                               `protobuf:"fixed32,4,opt,name=from_router_cluster,json=fromRouterCluster" json:"from_router_cluster,omitempty"`
	FromActiveTime        *uint32                                               `protobuf:"varint,5,opt,name=from_active_time,json=fromActiveTime" json:"from_active_time,omitempty"`
	FromActivePacketsRecv *uint32                                               `protobuf:"varint,6,opt,name=from_active_packets_recv,json=fromActivePacketsRecv" json:"from_active_packets_recv,omitempty"`
	FromDroppedReason     *string                                               `protobuf:"bytes,7,opt,name=from_dropped_reason,json=fromDroppedReason" json:"from_dropped_reason,omitempty"`
	GapMs                 *uint32                                               `protobuf:"varint,8,opt,name=gap_ms,json=gapMs" json:"gap_ms,omitempty"`
	FromQualityNow        *CMsgSteamDatagramClientSwitchedPrimary_RouterQuality `protobuf:"bytes,9,opt,name=from_quality_now,json=fromQualityNow" json:"from_quality_now,omitempty"`
	ToQualityNow          *CMsgSteamDatagramClientSwitchedPrimary_RouterQuality `protobuf:"bytes,10,opt,name=to_quality_now,json=toQualityNow" json:"to_quality_now,omitempty"`
	FromQualityThen       *CMsgSteamDatagramClientSwitchedPrimary_RouterQuality `protobuf:"bytes,11,opt,name=from_quality_then,json=fromQualityThen" json:"from_quality_then,omitempty"`
	ToQualityThen         *CMsgSteamDatagramClientSwitchedPrimary_RouterQuality `protobuf:"bytes,12,opt,name=to_quality_then,json=toQualityThen" json:"to_quality_then,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}                                              `json:"-"`
	XXX_unrecognized      []byte                                                `json:"-"`
	XXX_sizecache         int32                                                 `json:"-"`
}

func (m *CMsgSteamDatagramClientSwitchedPrimary) Reset() {
	*m = CMsgSteamDatagramClientSwitchedPrimary{}
}
func (m *CMsgSteamDatagramClientSwitchedPrimary) String() string { return proto.CompactTextString(m) }
func (*CMsgSteamDatagramClientSwitchedPrimary) ProtoMessage()    {}
func (*CMsgSteamDatagramClientSwitchedPrimary) Descriptor() ([]byte, []int) {
	return fileDescriptor_steamdatagram_messages_89793dc68acee3d1, []int{20}
}
func (m *CMsgSteamDatagramClientSwitchedPrimary) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgSteamDatagramClientSwitchedPrimary.Unmarshal(m, b)
}
func (m *CMsgSteamDatagramClientSwitchedPrimary) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgSteamDatagramClientSwitchedPrimary.Marshal(b, m, deterministic)
}
func (dst *CMsgSteamDatagramClientSwitchedPrimary) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgSteamDatagramClientSwitchedPrimary.Merge(dst, src)
}
func (m *CMsgSteamDatagramClientSwitchedPrimary) XXX_Size() int {
	return xxx_messageInfo_CMsgSteamDatagramClientSwitchedPrimary.Size(m)
}
func (m *CMsgSteamDatagramClientSwitchedPrimary) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgSteamDatagramClientSwitchedPrimary.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgSteamDatagramClientSwitchedPrimary proto.InternalMessageInfo

func (m *CMsgSteamDatagramClientSwitchedPrimary) GetConnectionId() uint32 {
	if m != nil && m.ConnectionId != nil {
		return *m.ConnectionId
	}
	return 0
}

func (m *CMsgSteamDatagramClientSwitchedPrimary) GetFromIp() uint32 {
	if m != nil && m.FromIp != nil {
		return *m.FromIp
	}
	return 0
}

func (m *CMsgSteamDatagramClientSwitchedPrimary) GetFromPort() uint32 {
	if m != nil && m.FromPort != nil {
		return *m.FromPort
	}
	return 0
}

func (m *CMsgSteamDatagramClientSwitchedPrimary) GetFromRouterCluster() uint32 {
	if m != nil && m.FromRouterCluster != nil {
		return *m.FromRouterCluster
	}
	return 0
}

func (m *CMsgSteamDatagramClientSwitchedPrimary) GetFromActiveTime() uint32 {
	if m != nil && m.FromActiveTime != nil {
		return *m.FromActiveTime
	}
	return 0
}

func (m *CMsgSteamDatagramClientSwitchedPrimary) GetFromActivePacketsRecv() uint32 {
	if m != nil && m.FromActivePacketsRecv != nil {
		return *m.FromActivePacketsRecv
	}
	return 0
}

func (m *CMsgSteamDatagramClientSwitchedPrimary) GetFromDroppedReason() string {
	if m != nil && m.FromDroppedReason != nil {
		return *m.FromDroppedReason
	}
	return ""
}

func (m *CMsgSteamDatagramClientSwitchedPrimary) GetGapMs() uint32 {
	if m != nil && m.GapMs != nil {
		return *m.GapMs
	}
	return 0
}

func (m *CMsgSteamDatagramClientSwitchedPrimary) GetFromQualityNow() *CMsgSteamDatagramClientSwitchedPrimary_RouterQuality {
	if m != nil {
		return m.FromQualityNow
	}
	return nil
}

func (m *CMsgSteamDatagramClientSwitchedPrimary) GetToQualityNow() *CMsgSteamDatagramClientSwitchedPrimary_RouterQuality {
	if m != nil {
		return m.ToQualityNow
	}
	return nil
}

func (m *CMsgSteamDatagramClientSwitchedPrimary) GetFromQualityThen() *CMsgSteamDatagramClientSwitchedPrimary_RouterQuality {
	if m != nil {
		return m.FromQualityThen
	}
	return nil
}

func (m *CMsgSteamDatagramClientSwitchedPrimary) GetToQualityThen() *CMsgSteamDatagramClientSwitchedPrimary_RouterQuality {
	if m != nil {
		return m.ToQualityThen
	}
	return nil
}

type CMsgSteamDatagramClientSwitchedPrimary_RouterQuality struct {
	Score                *uint32  `protobuf:"varint,1,opt,name=score" json:"score,omitempty"`
	FrontPing            *uint32  `protobuf:"varint,2,opt,name=front_ping,json=frontPing" json:"front_ping,omitempty"`
	BackPing             *uint32  `protobuf:"varint,3,opt,name=back_ping,json=backPing" json:"back_ping,omitempty"`
	SecondsUntilDown     *uint32  `protobuf:"varint,4,opt,name=seconds_until_down,json=secondsUntilDown" json:"seconds_until_down,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgSteamDatagramClientSwitchedPrimary_RouterQuality) Reset() {
	*m = CMsgSteamDatagramClientSwitchedPrimary_RouterQuality{}
}
func (m *CMsgSteamDatagramClientSwitchedPrimary_RouterQuality) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgSteamDatagramClientSwitchedPrimary_RouterQuality) ProtoMessage() {}
func (*CMsgSteamDatagramClientSwitchedPrimary_RouterQuality) Descriptor() ([]byte, []int) {
	return fileDescriptor_steamdatagram_messages_89793dc68acee3d1, []int{20, 0}
}
func (m *CMsgSteamDatagramClientSwitchedPrimary_RouterQuality) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgSteamDatagramClientSwitchedPrimary_RouterQuality.Unmarshal(m, b)
}
func (m *CMsgSteamDatagramClientSwitchedPrimary_RouterQuality) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgSteamDatagramClientSwitchedPrimary_RouterQuality.Marshal(b, m, deterministic)
}
func (dst *CMsgSteamDatagramClientSwitchedPrimary_RouterQuality) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgSteamDatagramClientSwitchedPrimary_RouterQuality.Merge(dst, src)
}
func (m *CMsgSteamDatagramClientSwitchedPrimary_RouterQuality) XXX_Size() int {
	return xxx_messageInfo_CMsgSteamDatagramClientSwitchedPrimary_RouterQuality.Size(m)
}
func (m *CMsgSteamDatagramClientSwitchedPrimary_RouterQuality) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgSteamDatagramClientSwitchedPrimary_RouterQuality.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgSteamDatagramClientSwitchedPrimary_RouterQuality proto.InternalMessageInfo

func (m *CMsgSteamDatagramClientSwitchedPrimary_RouterQuality) GetScore() uint32 {
	if m != nil && m.Score != nil {
		return *m.Score
	}
	return 0
}

func (m *CMsgSteamDatagramClientSwitchedPrimary_RouterQuality) GetFrontPing() uint32 {
	if m != nil && m.FrontPing != nil {
		return *m.FrontPing
	}
	return 0
}

func (m *CMsgSteamDatagramClientSwitchedPrimary_RouterQuality) GetBackPing() uint32 {
	if m != nil && m.BackPing != nil {
		return *m.BackPing
	}
	return 0
}

func (m *CMsgSteamDatagramClientSwitchedPrimary_RouterQuality) GetSecondsUntilDown() uint32 {
	if m != nil && m.SecondsUntilDown != nil {
		return *m.SecondsUntilDown
	}
	return 0
}

type CMsgSteamDatagramRouterHealth struct {
	CpuLoad              *float32                                    `protobuf:"fixed32,1,opt,name=cpu_load,json=cpuLoad" json:"cpu_load,omitempty"`
	ActiveSessions       *uint32                                     `protobuf:"varint,2,opt,name=active_sessions,json=activeSessions" json:"active_sessions,omitempty"`
	DataPktsSec          *uint32                                     `protobuf:"varint,3,opt,name=data_pkts_sec,json=dataPktsSec" json:"data_pkts_sec,omitempty"`
	OtherPktsSec         *uint32                                     `protobuf:"varint,4,opt,name=other_pkts_sec,json=otherPktsSec" json:"other_pkts_sec,omitempty"`
	SecondsUntilShutdown *uint32                                     `protobuf:"varint,5,opt,name=seconds_until_shutdown,json=secondsUntilShutdown" json:"seconds_until_shutdown,omitempty"`
	CpuCostPerUser       *float32                                    `protobuf:"fixed32,8,opt,name=cpu_cost_per_user,json=cpuCostPerUser" json:"cpu_cost_per_user,omitempty"`
	CpuCostPerPacket     *float32                                    `protobuf:"fixed32,9,opt,name=cpu_cost_per_packet,json=cpuCostPerPacket" json:"cpu_cost_per_packet,omitempty"`
	DataCenters          []*CMsgSteamDatagramRouterHealth_DataCenter `protobuf:"bytes,6,rep,name=data_centers,json=dataCenters" json:"data_centers,omitempty"`
	Magic                *uint64                                     `protobuf:"fixed64,7,opt,name=magic" json:"magic,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                    `json:"-"`
	XXX_unrecognized     []byte                                      `json:"-"`
	XXX_sizecache        int32                                       `json:"-"`
}

func (m *CMsgSteamDatagramRouterHealth) Reset()         { *m = CMsgSteamDatagramRouterHealth{} }
func (m *CMsgSteamDatagramRouterHealth) String() string { return proto.CompactTextString(m) }
func (*CMsgSteamDatagramRouterHealth) ProtoMessage()    {}
func (*CMsgSteamDatagramRouterHealth) Descriptor() ([]byte, []int) {
	return fileDescriptor_steamdatagram_messages_89793dc68acee3d1, []int{21}
}
func (m *CMsgSteamDatagramRouterHealth) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgSteamDatagramRouterHealth.Unmarshal(m, b)
}
func (m *CMsgSteamDatagramRouterHealth) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgSteamDatagramRouterHealth.Marshal(b, m, deterministic)
}
func (dst *CMsgSteamDatagramRouterHealth) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgSteamDatagramRouterHealth.Merge(dst, src)
}
func (m *CMsgSteamDatagramRouterHealth) XXX_Size() int {
	return xxx_messageInfo_CMsgSteamDatagramRouterHealth.Size(m)
}
func (m *CMsgSteamDatagramRouterHealth) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgSteamDatagramRouterHealth.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgSteamDatagramRouterHealth proto.InternalMessageInfo

func (m *CMsgSteamDatagramRouterHealth) GetCpuLoad() float32 {
	if m != nil && m.CpuLoad != nil {
		return *m.CpuLoad
	}
	return 0
}

func (m *CMsgSteamDatagramRouterHealth) GetActiveSessions() uint32 {
	if m != nil && m.ActiveSessions != nil {
		return *m.ActiveSessions
	}
	return 0
}

func (m *CMsgSteamDatagramRouterHealth) GetDataPktsSec() uint32 {
	if m != nil && m.DataPktsSec != nil {
		return *m.DataPktsSec
	}
	return 0
}

func (m *CMsgSteamDatagramRouterHealth) GetOtherPktsSec() uint32 {
	if m != nil && m.OtherPktsSec != nil {
		return *m.OtherPktsSec
	}
	return 0
}

func (m *CMsgSteamDatagramRouterHealth) GetSecondsUntilShutdown() uint32 {
	if m != nil && m.SecondsUntilShutdown != nil {
		return *m.SecondsUntilShutdown
	}
	return 0
}

func (m *CMsgSteamDatagramRouterHealth) GetCpuCostPerUser() float32 {
	if m != nil && m.CpuCostPerUser != nil {
		return *m.CpuCostPerUser
	}
	return 0
}

func (m *CMsgSteamDatagramRouterHealth) GetCpuCostPerPacket() float32 {
	if m != nil && m.CpuCostPerPacket != nil {
		return *m.CpuCostPerPacket
	}
	return 0
}

func (m *CMsgSteamDatagramRouterHealth) GetDataCenters() []*CMsgSteamDatagramRouterHealth_DataCenter {
	if m != nil {
		return m.DataCenters
	}
	return nil
}

func (m *CMsgSteamDatagramRouterHealth) GetMagic() uint64 {
	if m != nil && m.Magic != nil {
		return *m.Magic
	}
	return 0
}

type CMsgSteamDatagramRouterHealth_DataCenter struct {
	DatacenterId         *uint32  `protobuf:"fixed32,1,opt,name=datacenter_id,json=datacenterId" json:"datacenter_id,omitempty"`
	State                *uint32  `protobuf:"varint,2,opt,name=state" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgSteamDatagramRouterHealth_DataCenter) Reset() {
	*m = CMsgSteamDatagramRouterHealth_DataCenter{}
}
func (m *CMsgSteamDatagramRouterHealth_DataCenter) String() string { return proto.CompactTextString(m) }
func (*CMsgSteamDatagramRouterHealth_DataCenter) ProtoMessage()    {}
func (*CMsgSteamDatagramRouterHealth_DataCenter) Descriptor() ([]byte, []int) {
	return fileDescriptor_steamdatagram_messages_89793dc68acee3d1, []int{21, 0}
}
func (m *CMsgSteamDatagramRouterHealth_DataCenter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgSteamDatagramRouterHealth_DataCenter.Unmarshal(m, b)
}
func (m *CMsgSteamDatagramRouterHealth_DataCenter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgSteamDatagramRouterHealth_DataCenter.Marshal(b, m, deterministic)
}
func (dst *CMsgSteamDatagramRouterHealth_DataCenter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgSteamDatagramRouterHealth_DataCenter.Merge(dst, src)
}
func (m *CMsgSteamDatagramRouterHealth_DataCenter) XXX_Size() int {
	return xxx_messageInfo_CMsgSteamDatagramRouterHealth_DataCenter.Size(m)
}
func (m *CMsgSteamDatagramRouterHealth_DataCenter) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgSteamDatagramRouterHealth_DataCenter.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgSteamDatagramRouterHealth_DataCenter proto.InternalMessageInfo

func (m *CMsgSteamDatagramRouterHealth_DataCenter) GetDatacenterId() uint32 {
	if m != nil && m.DatacenterId != nil {
		return *m.DatacenterId
	}
	return 0
}

func (m *CMsgSteamDatagramRouterHealth_DataCenter) GetState() uint32 {
	if m != nil && m.State != nil {
		return *m.State
	}
	return 0
}

type CMsgSteamDatagramConnectRequest struct {
	ConnectionId             *uint32                                  `protobuf:"fixed32,1,opt,name=connection_id,json=connectionId" json:"connection_id,omitempty"`
	ClientSteamId            *uint64                                  `protobuf:"fixed64,3,opt,name=client_steam_id,json=clientSteamId" json:"client_steam_id,omitempty"`
	MyTimestamp              *uint64                                  `protobuf:"fixed64,4,opt,name=my_timestamp,json=myTimestamp" json:"my_timestamp,omitempty"`
	PingEstMs                *uint32                                  `protobuf:"varint,5,opt,name=ping_est_ms,json=pingEstMs" json:"ping_est_ms,omitempty"`
	VirtualPort              *uint32                                  `protobuf:"varint,9,opt,name=virtual_port,json=virtualPort" json:"virtual_port,omitempty"`
	GameserverRelaySessionId *uint32                                  `protobuf:"varint,2,opt,name=gameserver_relay_session_id,json=gameserverRelaySessionId" json:"gameserver_relay_session_id,omitempty"`
	Crypt                    *CMsgSteamDatagramSessionCryptInfoSigned `protobuf:"bytes,6,opt,name=crypt" json:"crypt,omitempty"`
	Cert                     *CMsgSteamDatagramCertificateSigned      `protobuf:"bytes,7,opt,name=cert" json:"cert,omitempty"`
	ProtocolVersion          *uint32                                  `protobuf:"varint,8,opt,name=protocol_version,json=protocolVersion" json:"protocol_version,omitempty"`
	XXX_NoUnkeyedLiteral     struct{}                                 `json:"-"`
	XXX_unrecognized         []byte                                   `json:"-"`
	XXX_sizecache            int32                                    `json:"-"`
}

func (m *CMsgSteamDatagramConnectRequest) Reset()         { *m = CMsgSteamDatagramConnectRequest{} }
func (m *CMsgSteamDatagramConnectRequest) String() string { return proto.CompactTextString(m) }
func (*CMsgSteamDatagramConnectRequest) ProtoMessage()    {}
func (*CMsgSteamDatagramConnectRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_steamdatagram_messages_89793dc68acee3d1, []int{22}
}
func (m *CMsgSteamDatagramConnectRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgSteamDatagramConnectRequest.Unmarshal(m, b)
}
func (m *CMsgSteamDatagramConnectRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgSteamDatagramConnectRequest.Marshal(b, m, deterministic)
}
func (dst *CMsgSteamDatagramConnectRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgSteamDatagramConnectRequest.Merge(dst, src)
}
func (m *CMsgSteamDatagramConnectRequest) XXX_Size() int {
	return xxx_messageInfo_CMsgSteamDatagramConnectRequest.Size(m)
}
func (m *CMsgSteamDatagramConnectRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgSteamDatagramConnectRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgSteamDatagramConnectRequest proto.InternalMessageInfo

func (m *CMsgSteamDatagramConnectRequest) GetConnectionId() uint32 {
	if m != nil && m.ConnectionId != nil {
		return *m.ConnectionId
	}
	return 0
}

func (m *CMsgSteamDatagramConnectRequest) GetClientSteamId() uint64 {
	if m != nil && m.ClientSteamId != nil {
		return *m.ClientSteamId
	}
	return 0
}

func (m *CMsgSteamDatagramConnectRequest) GetMyTimestamp() uint64 {
	if m != nil && m.MyTimestamp != nil {
		return *m.MyTimestamp
	}
	return 0
}

func (m *CMsgSteamDatagramConnectRequest) GetPingEstMs() uint32 {
	if m != nil && m.PingEstMs != nil {
		return *m.PingEstMs
	}
	return 0
}

func (m *CMsgSteamDatagramConnectRequest) GetVirtualPort() uint32 {
	if m != nil && m.VirtualPort != nil {
		return *m.VirtualPort
	}
	return 0
}

func (m *CMsgSteamDatagramConnectRequest) GetGameserverRelaySessionId() uint32 {
	if m != nil && m.GameserverRelaySessionId != nil {
		return *m.GameserverRelaySessionId
	}
	return 0
}

func (m *CMsgSteamDatagramConnectRequest) GetCrypt() *CMsgSteamDatagramSessionCryptInfoSigned {
	if m != nil {
		return m.Crypt
	}
	return nil
}

func (m *CMsgSteamDatagramConnectRequest) GetCert() *CMsgSteamDatagramCertificateSigned {
	if m != nil {
		return m.Cert
	}
	return nil
}

func (m *CMsgSteamDatagramConnectRequest) GetProtocolVersion() uint32 {
	if m != nil && m.ProtocolVersion != nil {
		return *m.ProtocolVersion
	}
	return 0
}

type CMsgSteamDatagramConnectOK struct {
	ClientConnectionId       *uint32                                  `protobuf:"fixed32,1,opt,name=client_connection_id,json=clientConnectionId" json:"client_connection_id,omitempty"`
	ServerConnectionId       *uint32                                  `protobuf:"fixed32,7,opt,name=server_connection_id,json=serverConnectionId" json:"server_connection_id,omitempty"`
	YourTimestamp            *uint64                                  `protobuf:"fixed64,3,opt,name=your_timestamp,json=yourTimestamp" json:"your_timestamp,omitempty"`
	DelayTimeUsec            *uint32                                  `protobuf:"varint,4,opt,name=delay_time_usec,json=delayTimeUsec" json:"delay_time_usec,omitempty"`
	GameserverRelaySessionId *uint32                                  `protobuf:"varint,2,opt,name=gameserver_relay_session_id,json=gameserverRelaySessionId" json:"gameserver_relay_session_id,omitempty"`
	Crypt                    *CMsgSteamDatagramSessionCryptInfoSigned `protobuf:"bytes,5,opt,name=crypt" json:"crypt,omitempty"`
	Cert                     *CMsgSteamDatagramCertificateSigned      `protobuf:"bytes,6,opt,name=cert" json:"cert,omitempty"`
	ProtocolVersion          *uint32                                  `protobuf:"varint,8,opt,name=protocol_version,json=protocolVersion" json:"protocol_version,omitempty"`
	XXX_NoUnkeyedLiteral     struct{}                                 `json:"-"`
	XXX_unrecognized         []byte                                   `json:"-"`
	XXX_sizecache            int32                                    `json:"-"`
}

func (m *CMsgSteamDatagramConnectOK) Reset()         { *m = CMsgSteamDatagramConnectOK{} }
func (m *CMsgSteamDatagramConnectOK) String() string { return proto.CompactTextString(m) }
func (*CMsgSteamDatagramConnectOK) ProtoMessage()    {}
func (*CMsgSteamDatagramConnectOK) Descriptor() ([]byte, []int) {
	return fileDescriptor_steamdatagram_messages_89793dc68acee3d1, []int{23}
}
func (m *CMsgSteamDatagramConnectOK) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgSteamDatagramConnectOK.Unmarshal(m, b)
}
func (m *CMsgSteamDatagramConnectOK) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgSteamDatagramConnectOK.Marshal(b, m, deterministic)
}
func (dst *CMsgSteamDatagramConnectOK) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgSteamDatagramConnectOK.Merge(dst, src)
}
func (m *CMsgSteamDatagramConnectOK) XXX_Size() int {
	return xxx_messageInfo_CMsgSteamDatagramConnectOK.Size(m)
}
func (m *CMsgSteamDatagramConnectOK) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgSteamDatagramConnectOK.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgSteamDatagramConnectOK proto.InternalMessageInfo

func (m *CMsgSteamDatagramConnectOK) GetClientConnectionId() uint32 {
	if m != nil && m.ClientConnectionId != nil {
		return *m.ClientConnectionId
	}
	return 0
}

func (m *CMsgSteamDatagramConnectOK) GetServerConnectionId() uint32 {
	if m != nil && m.ServerConnectionId != nil {
		return *m.ServerConnectionId
	}
	return 0
}

func (m *CMsgSteamDatagramConnectOK) GetYourTimestamp() uint64 {
	if m != nil && m.YourTimestamp != nil {
		return *m.YourTimestamp
	}
	return 0
}

func (m *CMsgSteamDatagramConnectOK) GetDelayTimeUsec() uint32 {
	if m != nil && m.DelayTimeUsec != nil {
		return *m.DelayTimeUsec
	}
	return 0
}

func (m *CMsgSteamDatagramConnectOK) GetGameserverRelaySessionId() uint32 {
	if m != nil && m.GameserverRelaySessionId != nil {
		return *m.GameserverRelaySessionId
	}
	return 0
}

func (m *CMsgSteamDatagramConnectOK) GetCrypt() *CMsgSteamDatagramSessionCryptInfoSigned {
	if m != nil {
		return m.Crypt
	}
	return nil
}

func (m *CMsgSteamDatagramConnectOK) GetCert() *CMsgSteamDatagramCertificateSigned {
	if m != nil {
		return m.Cert
	}
	return nil
}

func (m *CMsgSteamDatagramConnectOK) GetProtocolVersion() uint32 {
	if m != nil && m.ProtocolVersion != nil {
		return *m.ProtocolVersion
	}
	return 0
}

type CMsgSteamDatagramConnectionClosed struct {
	LegacyClientConnectionId *uint32                                       `protobuf:"fixed32,1,opt,name=legacy_client_connection_id,json=legacyClientConnectionId" json:"legacy_client_connection_id,omitempty"`
	ToConnectionId           *uint32                                       `protobuf:"fixed32,7,opt,name=to_connection_id,json=toConnectionId" json:"to_connection_id,omitempty"`
	FromConnectionId         *uint32                                       `protobuf:"fixed32,8,opt,name=from_connection_id,json=fromConnectionId" json:"from_connection_id,omitempty"`
	PeerSteamId              *uint64                                       `protobuf:"fixed64,3,opt,name=peer_steam_id,json=peerSteamId" json:"peer_steam_id,omitempty"`
	GameserverRelaySessionId *uint32                                       `protobuf:"varint,2,opt,name=gameserver_relay_session_id,json=gameserverRelaySessionId" json:"gameserver_relay_session_id,omitempty"`
	RelayMode                *CMsgSteamDatagramConnectionClosed_ERelayMode `protobuf:"varint,4,opt,name=relay_mode,json=relayMode,enum=CMsgSteamDatagramConnectionClosed_ERelayMode,def=0" json:"relay_mode,omitempty"`
	Debug                    *string                                       `protobuf:"bytes,5,opt,name=debug" json:"debug,omitempty"`
	ReasonCode               *uint32                                       `protobuf:"varint,6,opt,name=reason_code,json=reasonCode" json:"reason_code,omitempty"`
	XXX_NoUnkeyedLiteral     struct{}                                      `json:"-"`
	XXX_unrecognized         []byte                                        `json:"-"`
	XXX_sizecache            int32                                         `json:"-"`
}

func (m *CMsgSteamDatagramConnectionClosed) Reset()         { *m = CMsgSteamDatagramConnectionClosed{} }
func (m *CMsgSteamDatagramConnectionClosed) String() string { return proto.CompactTextString(m) }
func (*CMsgSteamDatagramConnectionClosed) ProtoMessage()    {}
func (*CMsgSteamDatagramConnectionClosed) Descriptor() ([]byte, []int) {
	return fileDescriptor_steamdatagram_messages_89793dc68acee3d1, []int{24}
}
func (m *CMsgSteamDatagramConnectionClosed) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgSteamDatagramConnectionClosed.Unmarshal(m, b)
}
func (m *CMsgSteamDatagramConnectionClosed) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgSteamDatagramConnectionClosed.Marshal(b, m, deterministic)
}
func (dst *CMsgSteamDatagramConnectionClosed) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgSteamDatagramConnectionClosed.Merge(dst, src)
}
func (m *CMsgSteamDatagramConnectionClosed) XXX_Size() int {
	return xxx_messageInfo_CMsgSteamDatagramConnectionClosed.Size(m)
}
func (m *CMsgSteamDatagramConnectionClosed) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgSteamDatagramConnectionClosed.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgSteamDatagramConnectionClosed proto.InternalMessageInfo

const Default_CMsgSteamDatagramConnectionClosed_RelayMode CMsgSteamDatagramConnectionClosed_ERelayMode = CMsgSteamDatagramConnectionClosed_None

func (m *CMsgSteamDatagramConnectionClosed) GetLegacyClientConnectionId() uint32 {
	if m != nil && m.LegacyClientConnectionId != nil {
		return *m.LegacyClientConnectionId
	}
	return 0
}

func (m *CMsgSteamDatagramConnectionClosed) GetToConnectionId() uint32 {
	if m != nil && m.ToConnectionId != nil {
		return *m.ToConnectionId
	}
	return 0
}

func (m *CMsgSteamDatagramConnectionClosed) GetFromConnectionId() uint32 {
	if m != nil && m.FromConnectionId != nil {
		return *m.FromConnectionId
	}
	return 0
}

func (m *CMsgSteamDatagramConnectionClosed) GetPeerSteamId() uint64 {
	if m != nil && m.PeerSteamId != nil {
		return *m.PeerSteamId
	}
	return 0
}

func (m *CMsgSteamDatagramConnectionClosed) GetGameserverRelaySessionId() uint32 {
	if m != nil && m.GameserverRelaySessionId != nil {
		return *m.GameserverRelaySessionId
	}
	return 0
}

func (m *CMsgSteamDatagramConnectionClosed) GetRelayMode() CMsgSteamDatagramConnectionClosed_ERelayMode {
	if m != nil && m.RelayMode != nil {
		return *m.RelayMode
	}
	return Default_CMsgSteamDatagramConnectionClosed_RelayMode
}

func (m *CMsgSteamDatagramConnectionClosed) GetDebug() string {
	if m != nil && m.Debug != nil {
		return *m.Debug
	}
	return ""
}

func (m *CMsgSteamDatagramConnectionClosed) GetReasonCode() uint32 {
	if m != nil && m.ReasonCode != nil {
		return *m.ReasonCode
	}
	return 0
}

type CMsgSteamDatagramNoConnection struct {
	LegacyClientConnectionId *uint32  `protobuf:"fixed32,1,opt,name=legacy_client_connection_id,json=legacyClientConnectionId" json:"legacy_client_connection_id,omitempty"`
	ToConnectionId           *uint32  `protobuf:"fixed32,5,opt,name=to_connection_id,json=toConnectionId" json:"to_connection_id,omitempty"`
	FromConnectionId         *uint32  `protobuf:"fixed32,6,opt,name=from_connection_id,json=fromConnectionId" json:"from_connection_id,omitempty"`
	GameserverRelaySessionId *uint32  `protobuf:"varint,2,opt,name=gameserver_relay_session_id,json=gameserverRelaySessionId" json:"gameserver_relay_session_id,omitempty"`
	PeerSteamId              *uint64  `protobuf:"fixed64,3,opt,name=peer_steam_id,json=peerSteamId" json:"peer_steam_id,omitempty"`
	EndToEnd                 *bool    `protobuf:"varint,4,opt,name=end_to_end,json=endToEnd" json:"end_to_end,omitempty"`
	DummyPad                 *uint32  `protobuf:"fixed32,1023,opt,name=dummy_pad,json=dummyPad" json:"dummy_pad,omitempty"`
	XXX_NoUnkeyedLiteral     struct{} `json:"-"`
	XXX_unrecognized         []byte   `json:"-"`
	XXX_sizecache            int32    `json:"-"`
}

func (m *CMsgSteamDatagramNoConnection) Reset()         { *m = CMsgSteamDatagramNoConnection{} }
func (m *CMsgSteamDatagramNoConnection) String() string { return proto.CompactTextString(m) }
func (*CMsgSteamDatagramNoConnection) ProtoMessage()    {}
func (*CMsgSteamDatagramNoConnection) Descriptor() ([]byte, []int) {
	return fileDescriptor_steamdatagram_messages_89793dc68acee3d1, []int{25}
}
func (m *CMsgSteamDatagramNoConnection) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgSteamDatagramNoConnection.Unmarshal(m, b)
}
func (m *CMsgSteamDatagramNoConnection) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgSteamDatagramNoConnection.Marshal(b, m, deterministic)
}
func (dst *CMsgSteamDatagramNoConnection) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgSteamDatagramNoConnection.Merge(dst, src)
}
func (m *CMsgSteamDatagramNoConnection) XXX_Size() int {
	return xxx_messageInfo_CMsgSteamDatagramNoConnection.Size(m)
}
func (m *CMsgSteamDatagramNoConnection) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgSteamDatagramNoConnection.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgSteamDatagramNoConnection proto.InternalMessageInfo

func (m *CMsgSteamDatagramNoConnection) GetLegacyClientConnectionId() uint32 {
	if m != nil && m.LegacyClientConnectionId != nil {
		return *m.LegacyClientConnectionId
	}
	return 0
}

func (m *CMsgSteamDatagramNoConnection) GetToConnectionId() uint32 {
	if m != nil && m.ToConnectionId != nil {
		return *m.ToConnectionId
	}
	return 0
}

func (m *CMsgSteamDatagramNoConnection) GetFromConnectionId() uint32 {
	if m != nil && m.FromConnectionId != nil {
		return *m.FromConnectionId
	}
	return 0
}

func (m *CMsgSteamDatagramNoConnection) GetGameserverRelaySessionId() uint32 {
	if m != nil && m.GameserverRelaySessionId != nil {
		return *m.GameserverRelaySessionId
	}
	return 0
}

func (m *CMsgSteamDatagramNoConnection) GetPeerSteamId() uint64 {
	if m != nil && m.PeerSteamId != nil {
		return *m.PeerSteamId
	}
	return 0
}

func (m *CMsgSteamDatagramNoConnection) GetEndToEnd() bool {
	if m != nil && m.EndToEnd != nil {
		return *m.EndToEnd
	}
	return false
}

func (m *CMsgSteamDatagramNoConnection) GetDummyPad() uint32 {
	if m != nil && m.DummyPad != nil {
		return *m.DummyPad
	}
	return 0
}

type CMsgSteamDatagramP2PSessionRequestBody struct {
	ChallengeTime        *uint32  `protobuf:"fixed32,1,opt,name=challenge_time,json=challengeTime" json:"challenge_time,omitempty"`
	Challenge            *uint64  `protobuf:"fixed64,2,opt,name=challenge" json:"challenge,omitempty"`
	MyConnectionId       *uint32  `protobuf:"fixed32,3,opt,name=my_connection_id,json=myConnectionId" json:"my_connection_id,omitempty"`
	PeerSteamId          *uint64  `protobuf:"fixed64,4,opt,name=peer_steam_id,json=peerSteamId" json:"peer_steam_id,omitempty"`
	PeerConnectionId     *uint32  `protobuf:"fixed32,5,opt,name=peer_connection_id,json=peerConnectionId" json:"peer_connection_id,omitempty"`
	ProtocolVersion      *uint32  `protobuf:"varint,8,opt,name=protocol_version,json=protocolVersion" json:"protocol_version,omitempty"`
	NetworkConfigVersion *uint32  `protobuf:"varint,9,opt,name=network_config_version,json=networkConfigVersion" json:"network_config_version,omitempty"`
	PublicIp             *uint32  `protobuf:"fixed32,10,opt,name=public_ip,json=publicIp" json:"public_ip,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgSteamDatagramP2PSessionRequestBody) Reset() {
	*m = CMsgSteamDatagramP2PSessionRequestBody{}
}
func (m *CMsgSteamDatagramP2PSessionRequestBody) String() string { return proto.CompactTextString(m) }
func (*CMsgSteamDatagramP2PSessionRequestBody) ProtoMessage()    {}
func (*CMsgSteamDatagramP2PSessionRequestBody) Descriptor() ([]byte, []int) {
	return fileDescriptor_steamdatagram_messages_89793dc68acee3d1, []int{26}
}
func (m *CMsgSteamDatagramP2PSessionRequestBody) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgSteamDatagramP2PSessionRequestBody.Unmarshal(m, b)
}
func (m *CMsgSteamDatagramP2PSessionRequestBody) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgSteamDatagramP2PSessionRequestBody.Marshal(b, m, deterministic)
}
func (dst *CMsgSteamDatagramP2PSessionRequestBody) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgSteamDatagramP2PSessionRequestBody.Merge(dst, src)
}
func (m *CMsgSteamDatagramP2PSessionRequestBody) XXX_Size() int {
	return xxx_messageInfo_CMsgSteamDatagramP2PSessionRequestBody.Size(m)
}
func (m *CMsgSteamDatagramP2PSessionRequestBody) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgSteamDatagramP2PSessionRequestBody.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgSteamDatagramP2PSessionRequestBody proto.InternalMessageInfo

func (m *CMsgSteamDatagramP2PSessionRequestBody) GetChallengeTime() uint32 {
	if m != nil && m.ChallengeTime != nil {
		return *m.ChallengeTime
	}
	return 0
}

func (m *CMsgSteamDatagramP2PSessionRequestBody) GetChallenge() uint64 {
	if m != nil && m.Challenge != nil {
		return *m.Challenge
	}
	return 0
}

func (m *CMsgSteamDatagramP2PSessionRequestBody) GetMyConnectionId() uint32 {
	if m != nil && m.MyConnectionId != nil {
		return *m.MyConnectionId
	}
	return 0
}

func (m *CMsgSteamDatagramP2PSessionRequestBody) GetPeerSteamId() uint64 {
	if m != nil && m.PeerSteamId != nil {
		return *m.PeerSteamId
	}
	return 0
}

func (m *CMsgSteamDatagramP2PSessionRequestBody) GetPeerConnectionId() uint32 {
	if m != nil && m.PeerConnectionId != nil {
		return *m.PeerConnectionId
	}
	return 0
}

func (m *CMsgSteamDatagramP2PSessionRequestBody) GetProtocolVersion() uint32 {
	if m != nil && m.ProtocolVersion != nil {
		return *m.ProtocolVersion
	}
	return 0
}

func (m *CMsgSteamDatagramP2PSessionRequestBody) GetNetworkConfigVersion() uint32 {
	if m != nil && m.NetworkConfigVersion != nil {
		return *m.NetworkConfigVersion
	}
	return 0
}

func (m *CMsgSteamDatagramP2PSessionRequestBody) GetPublicIp() uint32 {
	if m != nil && m.PublicIp != nil {
		return *m.PublicIp
	}
	return 0
}

type CMsgSteamDatagramP2PSessionRequest struct {
	Cert                 *CMsgSteamDatagramCertificateSigned `protobuf:"bytes,1,opt,name=cert" json:"cert,omitempty"`
	Body                 []byte                              `protobuf:"bytes,2,opt,name=body" json:"body,omitempty"`
	Signature            []byte                              `protobuf:"bytes,3,opt,name=signature" json:"signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                            `json:"-"`
	XXX_unrecognized     []byte                              `json:"-"`
	XXX_sizecache        int32                               `json:"-"`
}

func (m *CMsgSteamDatagramP2PSessionRequest) Reset()         { *m = CMsgSteamDatagramP2PSessionRequest{} }
func (m *CMsgSteamDatagramP2PSessionRequest) String() string { return proto.CompactTextString(m) }
func (*CMsgSteamDatagramP2PSessionRequest) ProtoMessage()    {}
func (*CMsgSteamDatagramP2PSessionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_steamdatagram_messages_89793dc68acee3d1, []int{27}
}
func (m *CMsgSteamDatagramP2PSessionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgSteamDatagramP2PSessionRequest.Unmarshal(m, b)
}
func (m *CMsgSteamDatagramP2PSessionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgSteamDatagramP2PSessionRequest.Marshal(b, m, deterministic)
}
func (dst *CMsgSteamDatagramP2PSessionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgSteamDatagramP2PSessionRequest.Merge(dst, src)
}
func (m *CMsgSteamDatagramP2PSessionRequest) XXX_Size() int {
	return xxx_messageInfo_CMsgSteamDatagramP2PSessionRequest.Size(m)
}
func (m *CMsgSteamDatagramP2PSessionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgSteamDatagramP2PSessionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgSteamDatagramP2PSessionRequest proto.InternalMessageInfo

func (m *CMsgSteamDatagramP2PSessionRequest) GetCert() *CMsgSteamDatagramCertificateSigned {
	if m != nil {
		return m.Cert
	}
	return nil
}

func (m *CMsgSteamDatagramP2PSessionRequest) GetBody() []byte {
	if m != nil {
		return m.Body
	}
	return nil
}

func (m *CMsgSteamDatagramP2PSessionRequest) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

type CMsgSteamDatagramP2PSessionEstablished struct {
	ConnectionId         *uint32  `protobuf:"fixed32,1,opt,name=connection_id,json=connectionId" json:"connection_id,omitempty"`
	SecondsUntilShutdown *uint32  `protobuf:"varint,3,opt,name=seconds_until_shutdown,json=secondsUntilShutdown" json:"seconds_until_shutdown,omitempty"`
	RelayRoutingId       *uint64  `protobuf:"fixed64,4,opt,name=relay_routing_id,json=relayRoutingId" json:"relay_routing_id,omitempty"`
	SeqNumR2C            *uint32  `protobuf:"varint,5,opt,name=seq_num_r2c,json=seqNumR2c" json:"seq_num_r2c,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgSteamDatagramP2PSessionEstablished) Reset() {
	*m = CMsgSteamDatagramP2PSessionEstablished{}
}
func (m *CMsgSteamDatagramP2PSessionEstablished) String() string { return proto.CompactTextString(m) }
func (*CMsgSteamDatagramP2PSessionEstablished) ProtoMessage()    {}
func (*CMsgSteamDatagramP2PSessionEstablished) Descriptor() ([]byte, []int) {
	return fileDescriptor_steamdatagram_messages_89793dc68acee3d1, []int{28}
}
func (m *CMsgSteamDatagramP2PSessionEstablished) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgSteamDatagramP2PSessionEstablished.Unmarshal(m, b)
}
func (m *CMsgSteamDatagramP2PSessionEstablished) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgSteamDatagramP2PSessionEstablished.Marshal(b, m, deterministic)
}
func (dst *CMsgSteamDatagramP2PSessionEstablished) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgSteamDatagramP2PSessionEstablished.Merge(dst, src)
}
func (m *CMsgSteamDatagramP2PSessionEstablished) XXX_Size() int {
	return xxx_messageInfo_CMsgSteamDatagramP2PSessionEstablished.Size(m)
}
func (m *CMsgSteamDatagramP2PSessionEstablished) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgSteamDatagramP2PSessionEstablished.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgSteamDatagramP2PSessionEstablished proto.InternalMessageInfo

func (m *CMsgSteamDatagramP2PSessionEstablished) GetConnectionId() uint32 {
	if m != nil && m.ConnectionId != nil {
		return *m.ConnectionId
	}
	return 0
}

func (m *CMsgSteamDatagramP2PSessionEstablished) GetSecondsUntilShutdown() uint32 {
	if m != nil && m.SecondsUntilShutdown != nil {
		return *m.SecondsUntilShutdown
	}
	return 0
}

func (m *CMsgSteamDatagramP2PSessionEstablished) GetRelayRoutingId() uint64 {
	if m != nil && m.RelayRoutingId != nil {
		return *m.RelayRoutingId
	}
	return 0
}

func (m *CMsgSteamDatagramP2PSessionEstablished) GetSeqNumR2C() uint32 {
	if m != nil && m.SeqNumR2C != nil {
		return *m.SeqNumR2C
	}
	return 0
}

type CMsgSteamDatagramP2PRoutes struct {
	RelayClusters        []*CMsgSteamDatagramP2PRoutes_RelayCluster `protobuf:"bytes,1,rep,name=relay_clusters,json=relayClusters" json:"relay_clusters,omitempty"`
	Routes               []*CMsgSteamDatagramP2PRoutes_Route        `protobuf:"bytes,2,rep,name=routes" json:"routes,omitempty"`
	Revision             *uint32                                    `protobuf:"varint,3,opt,name=revision" json:"revision,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                   `json:"-"`
	XXX_unrecognized     []byte                                     `json:"-"`
	XXX_sizecache        int32                                      `json:"-"`
}

func (m *CMsgSteamDatagramP2PRoutes) Reset()         { *m = CMsgSteamDatagramP2PRoutes{} }
func (m *CMsgSteamDatagramP2PRoutes) String() string { return proto.CompactTextString(m) }
func (*CMsgSteamDatagramP2PRoutes) ProtoMessage()    {}
func (*CMsgSteamDatagramP2PRoutes) Descriptor() ([]byte, []int) {
	return fileDescriptor_steamdatagram_messages_89793dc68acee3d1, []int{29}
}
func (m *CMsgSteamDatagramP2PRoutes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgSteamDatagramP2PRoutes.Unmarshal(m, b)
}
func (m *CMsgSteamDatagramP2PRoutes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgSteamDatagramP2PRoutes.Marshal(b, m, deterministic)
}
func (dst *CMsgSteamDatagramP2PRoutes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgSteamDatagramP2PRoutes.Merge(dst, src)
}
func (m *CMsgSteamDatagramP2PRoutes) XXX_Size() int {
	return xxx_messageInfo_CMsgSteamDatagramP2PRoutes.Size(m)
}
func (m *CMsgSteamDatagramP2PRoutes) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgSteamDatagramP2PRoutes.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgSteamDatagramP2PRoutes proto.InternalMessageInfo

func (m *CMsgSteamDatagramP2PRoutes) GetRelayClusters() []*CMsgSteamDatagramP2PRoutes_RelayCluster {
	if m != nil {
		return m.RelayClusters
	}
	return nil
}

func (m *CMsgSteamDatagramP2PRoutes) GetRoutes() []*CMsgSteamDatagramP2PRoutes_Route {
	if m != nil {
		return m.Routes
	}
	return nil
}

func (m *CMsgSteamDatagramP2PRoutes) GetRevision() uint32 {
	if m != nil && m.Revision != nil {
		return *m.Revision
	}
	return 0
}

type CMsgSteamDatagramP2PRoutes_RelayCluster struct {
	PopId                 *uint32  `protobuf:"fixed32,1,opt,name=pop_id,json=popId" json:"pop_id,omitempty"`
	PingMs                *uint32  `protobuf:"varint,2,opt,name=ping_ms,json=pingMs" json:"ping_ms,omitempty"`
	ScorePenalty          *uint32  `protobuf:"varint,3,opt,name=score_penalty,json=scorePenalty" json:"score_penalty,omitempty"`
	SessionRelayRoutingId *uint64  `protobuf:"fixed64,4,opt,name=session_relay_routing_id,json=sessionRelayRoutingId" json:"session_relay_routing_id,omitempty"`
	XXX_NoUnkeyedLiteral  struct{} `json:"-"`
	XXX_unrecognized      []byte   `json:"-"`
	XXX_sizecache         int32    `json:"-"`
}

func (m *CMsgSteamDatagramP2PRoutes_RelayCluster) Reset() {
	*m = CMsgSteamDatagramP2PRoutes_RelayCluster{}
}
func (m *CMsgSteamDatagramP2PRoutes_RelayCluster) String() string { return proto.CompactTextString(m) }
func (*CMsgSteamDatagramP2PRoutes_RelayCluster) ProtoMessage()    {}
func (*CMsgSteamDatagramP2PRoutes_RelayCluster) Descriptor() ([]byte, []int) {
	return fileDescriptor_steamdatagram_messages_89793dc68acee3d1, []int{29, 0}
}
func (m *CMsgSteamDatagramP2PRoutes_RelayCluster) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgSteamDatagramP2PRoutes_RelayCluster.Unmarshal(m, b)
}
func (m *CMsgSteamDatagramP2PRoutes_RelayCluster) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgSteamDatagramP2PRoutes_RelayCluster.Marshal(b, m, deterministic)
}
func (dst *CMsgSteamDatagramP2PRoutes_RelayCluster) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgSteamDatagramP2PRoutes_RelayCluster.Merge(dst, src)
}
func (m *CMsgSteamDatagramP2PRoutes_RelayCluster) XXX_Size() int {
	return xxx_messageInfo_CMsgSteamDatagramP2PRoutes_RelayCluster.Size(m)
}
func (m *CMsgSteamDatagramP2PRoutes_RelayCluster) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgSteamDatagramP2PRoutes_RelayCluster.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgSteamDatagramP2PRoutes_RelayCluster proto.InternalMessageInfo

func (m *CMsgSteamDatagramP2PRoutes_RelayCluster) GetPopId() uint32 {
	if m != nil && m.PopId != nil {
		return *m.PopId
	}
	return 0
}

func (m *CMsgSteamDatagramP2PRoutes_RelayCluster) GetPingMs() uint32 {
	if m != nil && m.PingMs != nil {
		return *m.PingMs
	}
	return 0
}

func (m *CMsgSteamDatagramP2PRoutes_RelayCluster) GetScorePenalty() uint32 {
	if m != nil && m.ScorePenalty != nil {
		return *m.ScorePenalty
	}
	return 0
}

func (m *CMsgSteamDatagramP2PRoutes_RelayCluster) GetSessionRelayRoutingId() uint64 {
	if m != nil && m.SessionRelayRoutingId != nil {
		return *m.SessionRelayRoutingId
	}
	return 0
}

type CMsgSteamDatagramP2PRoutes_Route struct {
	MyPopId              *uint32  `protobuf:"fixed32,1,opt,name=my_pop_id,json=myPopId" json:"my_pop_id,omitempty"`
	YourPopId            *uint32  `protobuf:"fixed32,2,opt,name=your_pop_id,json=yourPopId" json:"your_pop_id,omitempty"`
	Score                *uint32  `protobuf:"varint,3,opt,name=score" json:"score,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgSteamDatagramP2PRoutes_Route) Reset()         { *m = CMsgSteamDatagramP2PRoutes_Route{} }
func (m *CMsgSteamDatagramP2PRoutes_Route) String() string { return proto.CompactTextString(m) }
func (*CMsgSteamDatagramP2PRoutes_Route) ProtoMessage()    {}
func (*CMsgSteamDatagramP2PRoutes_Route) Descriptor() ([]byte, []int) {
	return fileDescriptor_steamdatagram_messages_89793dc68acee3d1, []int{29, 1}
}
func (m *CMsgSteamDatagramP2PRoutes_Route) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgSteamDatagramP2PRoutes_Route.Unmarshal(m, b)
}
func (m *CMsgSteamDatagramP2PRoutes_Route) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgSteamDatagramP2PRoutes_Route.Marshal(b, m, deterministic)
}
func (dst *CMsgSteamDatagramP2PRoutes_Route) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgSteamDatagramP2PRoutes_Route.Merge(dst, src)
}
func (m *CMsgSteamDatagramP2PRoutes_Route) XXX_Size() int {
	return xxx_messageInfo_CMsgSteamDatagramP2PRoutes_Route.Size(m)
}
func (m *CMsgSteamDatagramP2PRoutes_Route) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgSteamDatagramP2PRoutes_Route.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgSteamDatagramP2PRoutes_Route proto.InternalMessageInfo

func (m *CMsgSteamDatagramP2PRoutes_Route) GetMyPopId() uint32 {
	if m != nil && m.MyPopId != nil {
		return *m.MyPopId
	}
	return 0
}

func (m *CMsgSteamDatagramP2PRoutes_Route) GetYourPopId() uint32 {
	if m != nil && m.YourPopId != nil {
		return *m.YourPopId
	}
	return 0
}

func (m *CMsgSteamDatagramP2PRoutes_Route) GetScore() uint32 {
	if m != nil && m.Score != nil {
		return *m.Score
	}
	return 0
}

type CMsgSteamDatagramP2PRendezvous struct {
	ToConnectionId        *uint32                            `protobuf:"fixed32,1,opt,name=to_connection_id,json=toConnectionId" json:"to_connection_id,omitempty"`
	Routes                *CMsgSteamDatagramP2PRoutes        `protobuf:"bytes,2,opt,name=routes" json:"routes,omitempty"`
	AckPeerRoutesRevision *uint32                            `protobuf:"varint,3,opt,name=ack_peer_routes_revision,json=ackPeerRoutesRevision" json:"ack_peer_routes_revision,omitempty"`
	ConnectRequest        *CMsgSteamDatagramConnectRequest   `protobuf:"bytes,4,opt,name=connect_request,json=connectRequest" json:"connect_request,omitempty"`
	ConnectOk             *CMsgSteamDatagramConnectOK        `protobuf:"bytes,5,opt,name=connect_ok,json=connectOk" json:"connect_ok,omitempty"`
	ConnectionClosed      *CMsgSteamDatagramConnectionClosed `protobuf:"bytes,6,opt,name=connection_closed,json=connectionClosed" json:"connection_closed,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}                           `json:"-"`
	XXX_unrecognized      []byte                             `json:"-"`
	XXX_sizecache         int32                              `json:"-"`
}

func (m *CMsgSteamDatagramP2PRendezvous) Reset()         { *m = CMsgSteamDatagramP2PRendezvous{} }
func (m *CMsgSteamDatagramP2PRendezvous) String() string { return proto.CompactTextString(m) }
func (*CMsgSteamDatagramP2PRendezvous) ProtoMessage()    {}
func (*CMsgSteamDatagramP2PRendezvous) Descriptor() ([]byte, []int) {
	return fileDescriptor_steamdatagram_messages_89793dc68acee3d1, []int{30}
}
func (m *CMsgSteamDatagramP2PRendezvous) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgSteamDatagramP2PRendezvous.Unmarshal(m, b)
}
func (m *CMsgSteamDatagramP2PRendezvous) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgSteamDatagramP2PRendezvous.Marshal(b, m, deterministic)
}
func (dst *CMsgSteamDatagramP2PRendezvous) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgSteamDatagramP2PRendezvous.Merge(dst, src)
}
func (m *CMsgSteamDatagramP2PRendezvous) XXX_Size() int {
	return xxx_messageInfo_CMsgSteamDatagramP2PRendezvous.Size(m)
}
func (m *CMsgSteamDatagramP2PRendezvous) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgSteamDatagramP2PRendezvous.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgSteamDatagramP2PRendezvous proto.InternalMessageInfo

func (m *CMsgSteamDatagramP2PRendezvous) GetToConnectionId() uint32 {
	if m != nil && m.ToConnectionId != nil {
		return *m.ToConnectionId
	}
	return 0
}

func (m *CMsgSteamDatagramP2PRendezvous) GetRoutes() *CMsgSteamDatagramP2PRoutes {
	if m != nil {
		return m.Routes
	}
	return nil
}

func (m *CMsgSteamDatagramP2PRendezvous) GetAckPeerRoutesRevision() uint32 {
	if m != nil && m.AckPeerRoutesRevision != nil {
		return *m.AckPeerRoutesRevision
	}
	return 0
}

func (m *CMsgSteamDatagramP2PRendezvous) GetConnectRequest() *CMsgSteamDatagramConnectRequest {
	if m != nil {
		return m.ConnectRequest
	}
	return nil
}

func (m *CMsgSteamDatagramP2PRendezvous) GetConnectOk() *CMsgSteamDatagramConnectOK {
	if m != nil {
		return m.ConnectOk
	}
	return nil
}

func (m *CMsgSteamDatagramP2PRendezvous) GetConnectionClosed() *CMsgSteamDatagramConnectionClosed {
	if m != nil {
		return m.ConnectionClosed
	}
	return nil
}

type CMsgSteamDatagramConnectionStatsP2PClientToRouter struct {
	C2R                         *CMsgSteamDatagramConnectionQuality `protobuf:"bytes,1,opt,name=c2r" json:"c2r,omitempty"`
	C2S                         *CMsgSteamDatagramConnectionQuality `protobuf:"bytes,2,opt,name=c2s" json:"c2s,omitempty"`
	AckRelay                    []uint32                            `protobuf:"fixed32,3,rep,name=ack_relay,json=ackRelay" json:"ack_relay,omitempty"`
	AckE2E                      []uint32                            `protobuf:"fixed32,4,rep,name=ack_e2e,json=ackE2e" json:"ack_e2e,omitempty"`
	Flags                       *uint32                             `protobuf:"varint,5,opt,name=flags" json:"flags,omitempty"`
	ForwardTargetRelayRoutingId *uint64                             `protobuf:"fixed64,6,opt,name=forward_target_relay_routing_id,json=forwardTargetRelayRoutingId" json:"forward_target_relay_routing_id,omitempty"`
	ForwardTargetRevision       *uint32                             `protobuf:"varint,7,opt,name=forward_target_revision,json=forwardTargetRevision" json:"forward_target_revision,omitempty"`
	Routes                      *CMsgSteamDatagramP2PRoutes         `protobuf:"bytes,8,opt,name=routes" json:"routes,omitempty"`
	AckPeerRoutesRevision       *uint32                             `protobuf:"varint,9,opt,name=ack_peer_routes_revision,json=ackPeerRoutesRevision" json:"ack_peer_routes_revision,omitempty"`
	ConnectionId                *uint32                             `protobuf:"fixed32,10,opt,name=connection_id,json=connectionId" json:"connection_id,omitempty"`
	SeqNumC2R                   *uint32                             `protobuf:"varint,11,opt,name=seq_num_c2r,json=seqNumC2r" json:"seq_num_c2r,omitempty"`
	SeqNumC2S                   *uint32                             `protobuf:"varint,12,opt,name=seq_num_c2s,json=seqNumC2s" json:"seq_num_c2s,omitempty"`
	XXX_NoUnkeyedLiteral        struct{}                            `json:"-"`
	XXX_unrecognized            []byte                              `json:"-"`
	XXX_sizecache               int32                               `json:"-"`
}

func (m *CMsgSteamDatagramConnectionStatsP2PClientToRouter) Reset() {
	*m = CMsgSteamDatagramConnectionStatsP2PClientToRouter{}
}
func (m *CMsgSteamDatagramConnectionStatsP2PClientToRouter) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgSteamDatagramConnectionStatsP2PClientToRouter) ProtoMessage() {}
func (*CMsgSteamDatagramConnectionStatsP2PClientToRouter) Descriptor() ([]byte, []int) {
	return fileDescriptor_steamdatagram_messages_89793dc68acee3d1, []int{31}
}
func (m *CMsgSteamDatagramConnectionStatsP2PClientToRouter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgSteamDatagramConnectionStatsP2PClientToRouter.Unmarshal(m, b)
}
func (m *CMsgSteamDatagramConnectionStatsP2PClientToRouter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgSteamDatagramConnectionStatsP2PClientToRouter.Marshal(b, m, deterministic)
}
func (dst *CMsgSteamDatagramConnectionStatsP2PClientToRouter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgSteamDatagramConnectionStatsP2PClientToRouter.Merge(dst, src)
}
func (m *CMsgSteamDatagramConnectionStatsP2PClientToRouter) XXX_Size() int {
	return xxx_messageInfo_CMsgSteamDatagramConnectionStatsP2PClientToRouter.Size(m)
}
func (m *CMsgSteamDatagramConnectionStatsP2PClientToRouter) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgSteamDatagramConnectionStatsP2PClientToRouter.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgSteamDatagramConnectionStatsP2PClientToRouter proto.InternalMessageInfo

func (m *CMsgSteamDatagramConnectionStatsP2PClientToRouter) GetC2R() *CMsgSteamDatagramConnectionQuality {
	if m != nil {
		return m.C2R
	}
	return nil
}

func (m *CMsgSteamDatagramConnectionStatsP2PClientToRouter) GetC2S() *CMsgSteamDatagramConnectionQuality {
	if m != nil {
		return m.C2S
	}
	return nil
}

func (m *CMsgSteamDatagramConnectionStatsP2PClientToRouter) GetAckRelay() []uint32 {
	if m != nil {
		return m.AckRelay
	}
	return nil
}

func (m *CMsgSteamDatagramConnectionStatsP2PClientToRouter) GetAckE2E() []uint32 {
	if m != nil {
		return m.AckE2E
	}
	return nil
}

func (m *CMsgSteamDatagramConnectionStatsP2PClientToRouter) GetFlags() uint32 {
	if m != nil && m.Flags != nil {
		return *m.Flags
	}
	return 0
}

func (m *CMsgSteamDatagramConnectionStatsP2PClientToRouter) GetForwardTargetRelayRoutingId() uint64 {
	if m != nil && m.ForwardTargetRelayRoutingId != nil {
		return *m.ForwardTargetRelayRoutingId
	}
	return 0
}

func (m *CMsgSteamDatagramConnectionStatsP2PClientToRouter) GetForwardTargetRevision() uint32 {
	if m != nil && m.ForwardTargetRevision != nil {
		return *m.ForwardTargetRevision
	}
	return 0
}

func (m *CMsgSteamDatagramConnectionStatsP2PClientToRouter) GetRoutes() *CMsgSteamDatagramP2PRoutes {
	if m != nil {
		return m.Routes
	}
	return nil
}

func (m *CMsgSteamDatagramConnectionStatsP2PClientToRouter) GetAckPeerRoutesRevision() uint32 {
	if m != nil && m.AckPeerRoutesRevision != nil {
		return *m.AckPeerRoutesRevision
	}
	return 0
}

func (m *CMsgSteamDatagramConnectionStatsP2PClientToRouter) GetConnectionId() uint32 {
	if m != nil && m.ConnectionId != nil {
		return *m.ConnectionId
	}
	return 0
}

func (m *CMsgSteamDatagramConnectionStatsP2PClientToRouter) GetSeqNumC2R() uint32 {
	if m != nil && m.SeqNumC2R != nil {
		return *m.SeqNumC2R
	}
	return 0
}

func (m *CMsgSteamDatagramConnectionStatsP2PClientToRouter) GetSeqNumC2S() uint32 {
	if m != nil && m.SeqNumC2S != nil {
		return *m.SeqNumC2S
	}
	return 0
}

type CMsgSteamDatagramConnectionStatsP2PRouterToClient struct {
	R2C                        *CMsgSteamDatagramConnectionQuality `protobuf:"bytes,1,opt,name=r2c" json:"r2c,omitempty"`
	P2C                        *CMsgSteamDatagramConnectionQuality `protobuf:"bytes,2,opt,name=p2c" json:"p2c,omitempty"`
	SecondsUntilShutdown       *uint32                             `protobuf:"varint,3,opt,name=seconds_until_shutdown,json=secondsUntilShutdown" json:"seconds_until_shutdown,omitempty"`
	MigrateRequestIp           *uint32                             `protobuf:"fixed32,4,opt,name=migrate_request_ip,json=migrateRequestIp" json:"migrate_request_ip,omitempty"`
	MigrateRequestPort         *uint32                             `protobuf:"varint,5,opt,name=migrate_request_port,json=migrateRequestPort" json:"migrate_request_port,omitempty"`
	ScoringPenaltyRelayCluster *uint32                             `protobuf:"varint,6,opt,name=scoring_penalty_relay_cluster,json=scoringPenaltyRelayCluster" json:"scoring_penalty_relay_cluster,omitempty"`
	AckRelay                   []uint32                            `protobuf:"fixed32,7,rep,name=ack_relay,json=ackRelay" json:"ack_relay,omitempty"`
	AckE2E                     []uint32                            `protobuf:"fixed32,8,rep,name=ack_e2e,json=ackE2e" json:"ack_e2e,omitempty"`
	Flags                      *uint32                             `protobuf:"varint,9,opt,name=flags" json:"flags,omitempty"`
	AckForwardTargetRevision   *uint32                             `protobuf:"varint,10,opt,name=ack_forward_target_revision,json=ackForwardTargetRevision" json:"ack_forward_target_revision,omitempty"`
	Routes                     *CMsgSteamDatagramP2PRoutes         `protobuf:"bytes,11,opt,name=routes" json:"routes,omitempty"`
	AckPeerRoutesRevision      *uint32                             `protobuf:"varint,12,opt,name=ack_peer_routes_revision,json=ackPeerRoutesRevision" json:"ack_peer_routes_revision,omitempty"`
	ConnectionId               *uint32                             `protobuf:"fixed32,13,opt,name=connection_id,json=connectionId" json:"connection_id,omitempty"`
	SeqNumR2C                  *uint32                             `protobuf:"varint,14,opt,name=seq_num_r2c,json=seqNumR2c" json:"seq_num_r2c,omitempty"`
	SeqNumP2C                  *uint32                             `protobuf:"varint,15,opt,name=seq_num_p2c,json=seqNumP2c" json:"seq_num_p2c,omitempty"`
	XXX_NoUnkeyedLiteral       struct{}                            `json:"-"`
	XXX_unrecognized           []byte                              `json:"-"`
	XXX_sizecache              int32                               `json:"-"`
}

func (m *CMsgSteamDatagramConnectionStatsP2PRouterToClient) Reset() {
	*m = CMsgSteamDatagramConnectionStatsP2PRouterToClient{}
}
func (m *CMsgSteamDatagramConnectionStatsP2PRouterToClient) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgSteamDatagramConnectionStatsP2PRouterToClient) ProtoMessage() {}
func (*CMsgSteamDatagramConnectionStatsP2PRouterToClient) Descriptor() ([]byte, []int) {
	return fileDescriptor_steamdatagram_messages_89793dc68acee3d1, []int{32}
}
func (m *CMsgSteamDatagramConnectionStatsP2PRouterToClient) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgSteamDatagramConnectionStatsP2PRouterToClient.Unmarshal(m, b)
}
func (m *CMsgSteamDatagramConnectionStatsP2PRouterToClient) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgSteamDatagramConnectionStatsP2PRouterToClient.Marshal(b, m, deterministic)
}
func (dst *CMsgSteamDatagramConnectionStatsP2PRouterToClient) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgSteamDatagramConnectionStatsP2PRouterToClient.Merge(dst, src)
}
func (m *CMsgSteamDatagramConnectionStatsP2PRouterToClient) XXX_Size() int {
	return xxx_messageInfo_CMsgSteamDatagramConnectionStatsP2PRouterToClient.Size(m)
}
func (m *CMsgSteamDatagramConnectionStatsP2PRouterToClient) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgSteamDatagramConnectionStatsP2PRouterToClient.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgSteamDatagramConnectionStatsP2PRouterToClient proto.InternalMessageInfo

func (m *CMsgSteamDatagramConnectionStatsP2PRouterToClient) GetR2C() *CMsgSteamDatagramConnectionQuality {
	if m != nil {
		return m.R2C
	}
	return nil
}

func (m *CMsgSteamDatagramConnectionStatsP2PRouterToClient) GetP2C() *CMsgSteamDatagramConnectionQuality {
	if m != nil {
		return m.P2C
	}
	return nil
}

func (m *CMsgSteamDatagramConnectionStatsP2PRouterToClient) GetSecondsUntilShutdown() uint32 {
	if m != nil && m.SecondsUntilShutdown != nil {
		return *m.SecondsUntilShutdown
	}
	return 0
}

func (m *CMsgSteamDatagramConnectionStatsP2PRouterToClient) GetMigrateRequestIp() uint32 {
	if m != nil && m.MigrateRequestIp != nil {
		return *m.MigrateRequestIp
	}
	return 0
}

func (m *CMsgSteamDatagramConnectionStatsP2PRouterToClient) GetMigrateRequestPort() uint32 {
	if m != nil && m.MigrateRequestPort != nil {
		return *m.MigrateRequestPort
	}
	return 0
}

func (m *CMsgSteamDatagramConnectionStatsP2PRouterToClient) GetScoringPenaltyRelayCluster() uint32 {
	if m != nil && m.ScoringPenaltyRelayCluster != nil {
		return *m.ScoringPenaltyRelayCluster
	}
	return 0
}

func (m *CMsgSteamDatagramConnectionStatsP2PRouterToClient) GetAckRelay() []uint32 {
	if m != nil {
		return m.AckRelay
	}
	return nil
}

func (m *CMsgSteamDatagramConnectionStatsP2PRouterToClient) GetAckE2E() []uint32 {
	if m != nil {
		return m.AckE2E
	}
	return nil
}

func (m *CMsgSteamDatagramConnectionStatsP2PRouterToClient) GetFlags() uint32 {
	if m != nil && m.Flags != nil {
		return *m.Flags
	}
	return 0
}

func (m *CMsgSteamDatagramConnectionStatsP2PRouterToClient) GetAckForwardTargetRevision() uint32 {
	if m != nil && m.AckForwardTargetRevision != nil {
		return *m.AckForwardTargetRevision
	}
	return 0
}

func (m *CMsgSteamDatagramConnectionStatsP2PRouterToClient) GetRoutes() *CMsgSteamDatagramP2PRoutes {
	if m != nil {
		return m.Routes
	}
	return nil
}

func (m *CMsgSteamDatagramConnectionStatsP2PRouterToClient) GetAckPeerRoutesRevision() uint32 {
	if m != nil && m.AckPeerRoutesRevision != nil {
		return *m.AckPeerRoutesRevision
	}
	return 0
}

func (m *CMsgSteamDatagramConnectionStatsP2PRouterToClient) GetConnectionId() uint32 {
	if m != nil && m.ConnectionId != nil {
		return *m.ConnectionId
	}
	return 0
}

func (m *CMsgSteamDatagramConnectionStatsP2PRouterToClient) GetSeqNumR2C() uint32 {
	if m != nil && m.SeqNumR2C != nil {
		return *m.SeqNumR2C
	}
	return 0
}

func (m *CMsgSteamDatagramConnectionStatsP2PRouterToClient) GetSeqNumP2C() uint32 {
	if m != nil && m.SeqNumP2C != nil {
		return *m.SeqNumP2C
	}
	return 0
}

type CMsgSteamSockets_UDP_ChallengeRequest struct {
	ConnectionId         *uint32  `protobuf:"fixed32,1,opt,name=connection_id,json=connectionId" json:"connection_id,omitempty"`
	MyTimestamp          *uint64  `protobuf:"fixed64,3,opt,name=my_timestamp,json=myTimestamp" json:"my_timestamp,omitempty"`
	ProtocolVersion      *uint32  `protobuf:"varint,4,opt,name=protocol_version,json=protocolVersion" json:"protocol_version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgSteamSockets_UDP_ChallengeRequest) Reset()         { *m = CMsgSteamSockets_UDP_ChallengeRequest{} }
func (m *CMsgSteamSockets_UDP_ChallengeRequest) String() string { return proto.CompactTextString(m) }
func (*CMsgSteamSockets_UDP_ChallengeRequest) ProtoMessage()    {}
func (*CMsgSteamSockets_UDP_ChallengeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_steamdatagram_messages_89793dc68acee3d1, []int{33}
}
func (m *CMsgSteamSockets_UDP_ChallengeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgSteamSockets_UDP_ChallengeRequest.Unmarshal(m, b)
}
func (m *CMsgSteamSockets_UDP_ChallengeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgSteamSockets_UDP_ChallengeRequest.Marshal(b, m, deterministic)
}
func (dst *CMsgSteamSockets_UDP_ChallengeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgSteamSockets_UDP_ChallengeRequest.Merge(dst, src)
}
func (m *CMsgSteamSockets_UDP_ChallengeRequest) XXX_Size() int {
	return xxx_messageInfo_CMsgSteamSockets_UDP_ChallengeRequest.Size(m)
}
func (m *CMsgSteamSockets_UDP_ChallengeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgSteamSockets_UDP_ChallengeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgSteamSockets_UDP_ChallengeRequest proto.InternalMessageInfo

func (m *CMsgSteamSockets_UDP_ChallengeRequest) GetConnectionId() uint32 {
	if m != nil && m.ConnectionId != nil {
		return *m.ConnectionId
	}
	return 0
}

func (m *CMsgSteamSockets_UDP_ChallengeRequest) GetMyTimestamp() uint64 {
	if m != nil && m.MyTimestamp != nil {
		return *m.MyTimestamp
	}
	return 0
}

func (m *CMsgSteamSockets_UDP_ChallengeRequest) GetProtocolVersion() uint32 {
	if m != nil && m.ProtocolVersion != nil {
		return *m.ProtocolVersion
	}
	return 0
}

type CMsgSteamSockets_UDP_ChallengeReply struct {
	ConnectionId         *uint32  `protobuf:"fixed32,1,opt,name=connection_id,json=connectionId" json:"connection_id,omitempty"`
	Challenge            *uint64  `protobuf:"fixed64,2,opt,name=challenge" json:"challenge,omitempty"`
	YourTimestamp        *uint64  `protobuf:"fixed64,3,opt,name=your_timestamp,json=yourTimestamp" json:"your_timestamp,omitempty"`
	ProtocolVersion      *uint32  `protobuf:"varint,4,opt,name=protocol_version,json=protocolVersion" json:"protocol_version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgSteamSockets_UDP_ChallengeReply) Reset()         { *m = CMsgSteamSockets_UDP_ChallengeReply{} }
func (m *CMsgSteamSockets_UDP_ChallengeReply) String() string { return proto.CompactTextString(m) }
func (*CMsgSteamSockets_UDP_ChallengeReply) ProtoMessage()    {}
func (*CMsgSteamSockets_UDP_ChallengeReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_steamdatagram_messages_89793dc68acee3d1, []int{34}
}
func (m *CMsgSteamSockets_UDP_ChallengeReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgSteamSockets_UDP_ChallengeReply.Unmarshal(m, b)
}
func (m *CMsgSteamSockets_UDP_ChallengeReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgSteamSockets_UDP_ChallengeReply.Marshal(b, m, deterministic)
}
func (dst *CMsgSteamSockets_UDP_ChallengeReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgSteamSockets_UDP_ChallengeReply.Merge(dst, src)
}
func (m *CMsgSteamSockets_UDP_ChallengeReply) XXX_Size() int {
	return xxx_messageInfo_CMsgSteamSockets_UDP_ChallengeReply.Size(m)
}
func (m *CMsgSteamSockets_UDP_ChallengeReply) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgSteamSockets_UDP_ChallengeReply.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgSteamSockets_UDP_ChallengeReply proto.InternalMessageInfo

func (m *CMsgSteamSockets_UDP_ChallengeReply) GetConnectionId() uint32 {
	if m != nil && m.ConnectionId != nil {
		return *m.ConnectionId
	}
	return 0
}

func (m *CMsgSteamSockets_UDP_ChallengeReply) GetChallenge() uint64 {
	if m != nil && m.Challenge != nil {
		return *m.Challenge
	}
	return 0
}

func (m *CMsgSteamSockets_UDP_ChallengeReply) GetYourTimestamp() uint64 {
	if m != nil && m.YourTimestamp != nil {
		return *m.YourTimestamp
	}
	return 0
}

func (m *CMsgSteamSockets_UDP_ChallengeReply) GetProtocolVersion() uint32 {
	if m != nil && m.ProtocolVersion != nil {
		return *m.ProtocolVersion
	}
	return 0
}

type CMsgSteamSockets_UDP_ConnectRequest struct {
	ClientConnectionId   *uint32                                  `protobuf:"fixed32,1,opt,name=client_connection_id,json=clientConnectionId" json:"client_connection_id,omitempty"`
	Challenge            *uint64                                  `protobuf:"fixed64,2,opt,name=challenge" json:"challenge,omitempty"`
	ClientSteamId        *uint64                                  `protobuf:"fixed64,3,opt,name=client_steam_id,json=clientSteamId" json:"client_steam_id,omitempty"`
	MyTimestamp          *uint64                                  `protobuf:"fixed64,5,opt,name=my_timestamp,json=myTimestamp" json:"my_timestamp,omitempty"`
	PingEstMs            *uint32                                  `protobuf:"varint,6,opt,name=ping_est_ms,json=pingEstMs" json:"ping_est_ms,omitempty"`
	Crypt                *CMsgSteamDatagramSessionCryptInfoSigned `protobuf:"bytes,7,opt,name=crypt" json:"crypt,omitempty"`
	Cert                 *CMsgSteamDatagramCertificateSigned      `protobuf:"bytes,4,opt,name=cert" json:"cert,omitempty"`
	ProtocolVersion      *uint32                                  `protobuf:"varint,8,opt,name=protocol_version,json=protocolVersion" json:"protocol_version,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                 `json:"-"`
	XXX_unrecognized     []byte                                   `json:"-"`
	XXX_sizecache        int32                                    `json:"-"`
}

func (m *CMsgSteamSockets_UDP_ConnectRequest) Reset()         { *m = CMsgSteamSockets_UDP_ConnectRequest{} }
func (m *CMsgSteamSockets_UDP_ConnectRequest) String() string { return proto.CompactTextString(m) }
func (*CMsgSteamSockets_UDP_ConnectRequest) ProtoMessage()    {}
func (*CMsgSteamSockets_UDP_ConnectRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_steamdatagram_messages_89793dc68acee3d1, []int{35}
}
func (m *CMsgSteamSockets_UDP_ConnectRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgSteamSockets_UDP_ConnectRequest.Unmarshal(m, b)
}
func (m *CMsgSteamSockets_UDP_ConnectRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgSteamSockets_UDP_ConnectRequest.Marshal(b, m, deterministic)
}
func (dst *CMsgSteamSockets_UDP_ConnectRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgSteamSockets_UDP_ConnectRequest.Merge(dst, src)
}
func (m *CMsgSteamSockets_UDP_ConnectRequest) XXX_Size() int {
	return xxx_messageInfo_CMsgSteamSockets_UDP_ConnectRequest.Size(m)
}
func (m *CMsgSteamSockets_UDP_ConnectRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgSteamSockets_UDP_ConnectRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgSteamSockets_UDP_ConnectRequest proto.InternalMessageInfo

func (m *CMsgSteamSockets_UDP_ConnectRequest) GetClientConnectionId() uint32 {
	if m != nil && m.ClientConnectionId != nil {
		return *m.ClientConnectionId
	}
	return 0
}

func (m *CMsgSteamSockets_UDP_ConnectRequest) GetChallenge() uint64 {
	if m != nil && m.Challenge != nil {
		return *m.Challenge
	}
	return 0
}

func (m *CMsgSteamSockets_UDP_ConnectRequest) GetClientSteamId() uint64 {
	if m != nil && m.ClientSteamId != nil {
		return *m.ClientSteamId
	}
	return 0
}

func (m *CMsgSteamSockets_UDP_ConnectRequest) GetMyTimestamp() uint64 {
	if m != nil && m.MyTimestamp != nil {
		return *m.MyTimestamp
	}
	return 0
}

func (m *CMsgSteamSockets_UDP_ConnectRequest) GetPingEstMs() uint32 {
	if m != nil && m.PingEstMs != nil {
		return *m.PingEstMs
	}
	return 0
}

func (m *CMsgSteamSockets_UDP_ConnectRequest) GetCrypt() *CMsgSteamDatagramSessionCryptInfoSigned {
	if m != nil {
		return m.Crypt
	}
	return nil
}

func (m *CMsgSteamSockets_UDP_ConnectRequest) GetCert() *CMsgSteamDatagramCertificateSigned {
	if m != nil {
		return m.Cert
	}
	return nil
}

func (m *CMsgSteamSockets_UDP_ConnectRequest) GetProtocolVersion() uint32 {
	if m != nil && m.ProtocolVersion != nil {
		return *m.ProtocolVersion
	}
	return 0
}

type CMsgSteamSockets_UDP_ConnectOK struct {
	ClientConnectionId   *uint32                                  `protobuf:"fixed32,1,opt,name=client_connection_id,json=clientConnectionId" json:"client_connection_id,omitempty"`
	ServerConnectionId   *uint32                                  `protobuf:"fixed32,5,opt,name=server_connection_id,json=serverConnectionId" json:"server_connection_id,omitempty"`
	ServerSteamId        *uint64                                  `protobuf:"fixed64,2,opt,name=server_steam_id,json=serverSteamId" json:"server_steam_id,omitempty"`
	YourTimestamp        *uint64                                  `protobuf:"fixed64,3,opt,name=your_timestamp,json=yourTimestamp" json:"your_timestamp,omitempty"`
	DelayTimeUsec        *uint32                                  `protobuf:"varint,4,opt,name=delay_time_usec,json=delayTimeUsec" json:"delay_time_usec,omitempty"`
	Crypt                *CMsgSteamDatagramSessionCryptInfoSigned `protobuf:"bytes,7,opt,name=crypt" json:"crypt,omitempty"`
	Cert                 *CMsgSteamDatagramCertificateSigned      `protobuf:"bytes,8,opt,name=cert" json:"cert,omitempty"`
	ProtocolVersion      *uint32                                  `protobuf:"varint,9,opt,name=protocol_version,json=protocolVersion" json:"protocol_version,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                 `json:"-"`
	XXX_unrecognized     []byte                                   `json:"-"`
	XXX_sizecache        int32                                    `json:"-"`
}

func (m *CMsgSteamSockets_UDP_ConnectOK) Reset()         { *m = CMsgSteamSockets_UDP_ConnectOK{} }
func (m *CMsgSteamSockets_UDP_ConnectOK) String() string { return proto.CompactTextString(m) }
func (*CMsgSteamSockets_UDP_ConnectOK) ProtoMessage()    {}
func (*CMsgSteamSockets_UDP_ConnectOK) Descriptor() ([]byte, []int) {
	return fileDescriptor_steamdatagram_messages_89793dc68acee3d1, []int{36}
}
func (m *CMsgSteamSockets_UDP_ConnectOK) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgSteamSockets_UDP_ConnectOK.Unmarshal(m, b)
}
func (m *CMsgSteamSockets_UDP_ConnectOK) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgSteamSockets_UDP_ConnectOK.Marshal(b, m, deterministic)
}
func (dst *CMsgSteamSockets_UDP_ConnectOK) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgSteamSockets_UDP_ConnectOK.Merge(dst, src)
}
func (m *CMsgSteamSockets_UDP_ConnectOK) XXX_Size() int {
	return xxx_messageInfo_CMsgSteamSockets_UDP_ConnectOK.Size(m)
}
func (m *CMsgSteamSockets_UDP_ConnectOK) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgSteamSockets_UDP_ConnectOK.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgSteamSockets_UDP_ConnectOK proto.InternalMessageInfo

func (m *CMsgSteamSockets_UDP_ConnectOK) GetClientConnectionId() uint32 {
	if m != nil && m.ClientConnectionId != nil {
		return *m.ClientConnectionId
	}
	return 0
}

func (m *CMsgSteamSockets_UDP_ConnectOK) GetServerConnectionId() uint32 {
	if m != nil && m.ServerConnectionId != nil {
		return *m.ServerConnectionId
	}
	return 0
}

func (m *CMsgSteamSockets_UDP_ConnectOK) GetServerSteamId() uint64 {
	if m != nil && m.ServerSteamId != nil {
		return *m.ServerSteamId
	}
	return 0
}

func (m *CMsgSteamSockets_UDP_ConnectOK) GetYourTimestamp() uint64 {
	if m != nil && m.YourTimestamp != nil {
		return *m.YourTimestamp
	}
	return 0
}

func (m *CMsgSteamSockets_UDP_ConnectOK) GetDelayTimeUsec() uint32 {
	if m != nil && m.DelayTimeUsec != nil {
		return *m.DelayTimeUsec
	}
	return 0
}

func (m *CMsgSteamSockets_UDP_ConnectOK) GetCrypt() *CMsgSteamDatagramSessionCryptInfoSigned {
	if m != nil {
		return m.Crypt
	}
	return nil
}

func (m *CMsgSteamSockets_UDP_ConnectOK) GetCert() *CMsgSteamDatagramCertificateSigned {
	if m != nil {
		return m.Cert
	}
	return nil
}

func (m *CMsgSteamSockets_UDP_ConnectOK) GetProtocolVersion() uint32 {
	if m != nil && m.ProtocolVersion != nil {
		return *m.ProtocolVersion
	}
	return 0
}

type CMsgSteamSockets_UDP_ConnectionClosed struct {
	LegacyClientConnectionId *uint32  `protobuf:"fixed32,1,opt,name=legacy_client_connection_id,json=legacyClientConnectionId" json:"legacy_client_connection_id,omitempty"`
	ToConnectionId           *uint32  `protobuf:"fixed32,4,opt,name=to_connection_id,json=toConnectionId" json:"to_connection_id,omitempty"`
	FromConnectionId         *uint32  `protobuf:"fixed32,5,opt,name=from_connection_id,json=fromConnectionId" json:"from_connection_id,omitempty"`
	Debug                    *string  `protobuf:"bytes,2,opt,name=debug" json:"debug,omitempty"`
	ReasonCode               *uint32  `protobuf:"varint,3,opt,name=reason_code,json=reasonCode" json:"reason_code,omitempty"`
	XXX_NoUnkeyedLiteral     struct{} `json:"-"`
	XXX_unrecognized         []byte   `json:"-"`
	XXX_sizecache            int32    `json:"-"`
}

func (m *CMsgSteamSockets_UDP_ConnectionClosed) Reset()         { *m = CMsgSteamSockets_UDP_ConnectionClosed{} }
func (m *CMsgSteamSockets_UDP_ConnectionClosed) String() string { return proto.CompactTextString(m) }
func (*CMsgSteamSockets_UDP_ConnectionClosed) ProtoMessage()    {}
func (*CMsgSteamSockets_UDP_ConnectionClosed) Descriptor() ([]byte, []int) {
	return fileDescriptor_steamdatagram_messages_89793dc68acee3d1, []int{37}
}
func (m *CMsgSteamSockets_UDP_ConnectionClosed) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgSteamSockets_UDP_ConnectionClosed.Unmarshal(m, b)
}
func (m *CMsgSteamSockets_UDP_ConnectionClosed) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgSteamSockets_UDP_ConnectionClosed.Marshal(b, m, deterministic)
}
func (dst *CMsgSteamSockets_UDP_ConnectionClosed) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgSteamSockets_UDP_ConnectionClosed.Merge(dst, src)
}
func (m *CMsgSteamSockets_UDP_ConnectionClosed) XXX_Size() int {
	return xxx_messageInfo_CMsgSteamSockets_UDP_ConnectionClosed.Size(m)
}
func (m *CMsgSteamSockets_UDP_ConnectionClosed) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgSteamSockets_UDP_ConnectionClosed.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgSteamSockets_UDP_ConnectionClosed proto.InternalMessageInfo

func (m *CMsgSteamSockets_UDP_ConnectionClosed) GetLegacyClientConnectionId() uint32 {
	if m != nil && m.LegacyClientConnectionId != nil {
		return *m.LegacyClientConnectionId
	}
	return 0
}

func (m *CMsgSteamSockets_UDP_ConnectionClosed) GetToConnectionId() uint32 {
	if m != nil && m.ToConnectionId != nil {
		return *m.ToConnectionId
	}
	return 0
}

func (m *CMsgSteamSockets_UDP_ConnectionClosed) GetFromConnectionId() uint32 {
	if m != nil && m.FromConnectionId != nil {
		return *m.FromConnectionId
	}
	return 0
}

func (m *CMsgSteamSockets_UDP_ConnectionClosed) GetDebug() string {
	if m != nil && m.Debug != nil {
		return *m.Debug
	}
	return ""
}

func (m *CMsgSteamSockets_UDP_ConnectionClosed) GetReasonCode() uint32 {
	if m != nil && m.ReasonCode != nil {
		return *m.ReasonCode
	}
	return 0
}

type CMsgSteamSockets_UDP_NoConnection struct {
	LegacyClientConnectionId *uint32  `protobuf:"fixed32,1,opt,name=legacy_client_connection_id,json=legacyClientConnectionId" json:"legacy_client_connection_id,omitempty"`
	FromConnectionId         *uint32  `protobuf:"fixed32,2,opt,name=from_connection_id,json=fromConnectionId" json:"from_connection_id,omitempty"`
	ToConnectionId           *uint32  `protobuf:"fixed32,3,opt,name=to_connection_id,json=toConnectionId" json:"to_connection_id,omitempty"`
	XXX_NoUnkeyedLiteral     struct{} `json:"-"`
	XXX_unrecognized         []byte   `json:"-"`
	XXX_sizecache            int32    `json:"-"`
}

func (m *CMsgSteamSockets_UDP_NoConnection) Reset()         { *m = CMsgSteamSockets_UDP_NoConnection{} }
func (m *CMsgSteamSockets_UDP_NoConnection) String() string { return proto.CompactTextString(m) }
func (*CMsgSteamSockets_UDP_NoConnection) ProtoMessage()    {}
func (*CMsgSteamSockets_UDP_NoConnection) Descriptor() ([]byte, []int) {
	return fileDescriptor_steamdatagram_messages_89793dc68acee3d1, []int{38}
}
func (m *CMsgSteamSockets_UDP_NoConnection) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgSteamSockets_UDP_NoConnection.Unmarshal(m, b)
}
func (m *CMsgSteamSockets_UDP_NoConnection) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgSteamSockets_UDP_NoConnection.Marshal(b, m, deterministic)
}
func (dst *CMsgSteamSockets_UDP_NoConnection) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgSteamSockets_UDP_NoConnection.Merge(dst, src)
}
func (m *CMsgSteamSockets_UDP_NoConnection) XXX_Size() int {
	return xxx_messageInfo_CMsgSteamSockets_UDP_NoConnection.Size(m)
}
func (m *CMsgSteamSockets_UDP_NoConnection) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgSteamSockets_UDP_NoConnection.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgSteamSockets_UDP_NoConnection proto.InternalMessageInfo

func (m *CMsgSteamSockets_UDP_NoConnection) GetLegacyClientConnectionId() uint32 {
	if m != nil && m.LegacyClientConnectionId != nil {
		return *m.LegacyClientConnectionId
	}
	return 0
}

func (m *CMsgSteamSockets_UDP_NoConnection) GetFromConnectionId() uint32 {
	if m != nil && m.FromConnectionId != nil {
		return *m.FromConnectionId
	}
	return 0
}

func (m *CMsgSteamSockets_UDP_NoConnection) GetToConnectionId() uint32 {
	if m != nil && m.ToConnectionId != nil {
		return *m.ToConnectionId
	}
	return 0
}

type CMsgSteamSockets_UDP_Stats struct {
	Stats                    *CMsgSteamDatagramConnectionQuality `protobuf:"bytes,1,opt,name=stats" json:"stats,omitempty"`
	AckE2E                   []uint32                            `protobuf:"fixed32,2,rep,name=ack_e2e,json=ackE2e" json:"ack_e2e,omitempty"`
	Flags                    *uint32                             `protobuf:"varint,3,opt,name=flags" json:"flags,omitempty"`
	LegacyClientConnectionId *uint32                             `protobuf:"fixed32,8,opt,name=legacy_client_connection_id,json=legacyClientConnectionId" json:"legacy_client_connection_id,omitempty"`
	ToConnectionId           *uint32                             `protobuf:"fixed32,9,opt,name=to_connection_id,json=toConnectionId" json:"to_connection_id,omitempty"`
	FromConnectionId         *uint32                             `protobuf:"fixed32,10,opt,name=from_connection_id,json=fromConnectionId" json:"from_connection_id,omitempty"`
	SeqNum                   *uint32                             `protobuf:"varint,4,opt,name=seq_num,json=seqNum" json:"seq_num,omitempty"`
	XXX_NoUnkeyedLiteral     struct{}                            `json:"-"`
	XXX_unrecognized         []byte                              `json:"-"`
	XXX_sizecache            int32                               `json:"-"`
}

func (m *CMsgSteamSockets_UDP_Stats) Reset()         { *m = CMsgSteamSockets_UDP_Stats{} }
func (m *CMsgSteamSockets_UDP_Stats) String() string { return proto.CompactTextString(m) }
func (*CMsgSteamSockets_UDP_Stats) ProtoMessage()    {}
func (*CMsgSteamSockets_UDP_Stats) Descriptor() ([]byte, []int) {
	return fileDescriptor_steamdatagram_messages_89793dc68acee3d1, []int{39}
}
func (m *CMsgSteamSockets_UDP_Stats) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgSteamSockets_UDP_Stats.Unmarshal(m, b)
}
func (m *CMsgSteamSockets_UDP_Stats) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgSteamSockets_UDP_Stats.Marshal(b, m, deterministic)
}
func (dst *CMsgSteamSockets_UDP_Stats) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgSteamSockets_UDP_Stats.Merge(dst, src)
}
func (m *CMsgSteamSockets_UDP_Stats) XXX_Size() int {
	return xxx_messageInfo_CMsgSteamSockets_UDP_Stats.Size(m)
}
func (m *CMsgSteamSockets_UDP_Stats) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgSteamSockets_UDP_Stats.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgSteamSockets_UDP_Stats proto.InternalMessageInfo

func (m *CMsgSteamSockets_UDP_Stats) GetStats() *CMsgSteamDatagramConnectionQuality {
	if m != nil {
		return m.Stats
	}
	return nil
}

func (m *CMsgSteamSockets_UDP_Stats) GetAckE2E() []uint32 {
	if m != nil {
		return m.AckE2E
	}
	return nil
}

func (m *CMsgSteamSockets_UDP_Stats) GetFlags() uint32 {
	if m != nil && m.Flags != nil {
		return *m.Flags
	}
	return 0
}

func (m *CMsgSteamSockets_UDP_Stats) GetLegacyClientConnectionId() uint32 {
	if m != nil && m.LegacyClientConnectionId != nil {
		return *m.LegacyClientConnectionId
	}
	return 0
}

func (m *CMsgSteamSockets_UDP_Stats) GetToConnectionId() uint32 {
	if m != nil && m.ToConnectionId != nil {
		return *m.ToConnectionId
	}
	return 0
}

func (m *CMsgSteamSockets_UDP_Stats) GetFromConnectionId() uint32 {
	if m != nil && m.FromConnectionId != nil {
		return *m.FromConnectionId
	}
	return 0
}

func (m *CMsgSteamSockets_UDP_Stats) GetSeqNum() uint32 {
	if m != nil && m.SeqNum != nil {
		return *m.SeqNum
	}
	return 0
}

func init() {
	proto.RegisterType((*CMsgSteamDatagramRouterPingReply)(nil), "CMsgSteamDatagramRouterPingReply")
	proto.RegisterType((*CMsgSteamDatagramRouterPingReply_RouteException)(nil), "CMsgSteamDatagramRouterPingReply.RouteException")
	proto.RegisterType((*CMsgSteamDatagramGameserverPing)(nil), "CMsgSteamDatagramGameserverPing")
	proto.RegisterType((*CMsgSteamDatagramRelayToRelayPing)(nil), "CMsgSteamDatagramRelayToRelayPing")
	proto.RegisterType((*CMsgSteamDatagramSessionCryptInfo)(nil), "CMsgSteamDatagramSessionCryptInfo")
	proto.RegisterType((*CMsgSteamDatagramSessionCryptInfoSigned)(nil), "CMsgSteamDatagramSessionCryptInfoSigned")
	proto.RegisterType((*CMsgSteamDatagramGameserverSessionRequest)(nil), "CMsgSteamDatagramGameserverSessionRequest")
	proto.RegisterType((*CMsgSteamDatagramGameserverSessionEstablished)(nil), "CMsgSteamDatagramGameserverSessionEstablished")
	proto.RegisterType((*CMsgSteamDatagramNoSessionRelayToClient)(nil), "CMsgSteamDatagramNoSessionRelayToClient")
	proto.RegisterType((*CMsgSteamDatagramNoSessionRelayToServer)(nil), "CMsgSteamDatagramNoSessionRelayToServer")
	proto.RegisterType((*CMsgSteamDatagramDiagnostic)(nil), "CMsgSteamDatagramDiagnostic")
	proto.RegisterType((*CMsgSteamDatagramDataCenterState)(nil), "CMsgSteamDatagramDataCenterState")
	proto.RegisterType((*CMsgSteamDatagramDataCenterState_Server)(nil), "CMsgSteamDatagramDataCenterState.Server")
	proto.RegisterType((*CMsgSteamDatagramDataCenterState_DataCenter)(nil), "CMsgSteamDatagramDataCenterState.DataCenter")
	proto.RegisterType((*CMsgSteamDatagramLinkInstantaneousStats)(nil), "CMsgSteamDatagramLinkInstantaneousStats")
	proto.RegisterType((*CMsgSteamDatagramLinkLifetimeStats)(nil), "CMsgSteamDatagramLinkLifetimeStats")
	proto.RegisterType((*CMsgSteamDatagramConnectionQuality)(nil), "CMsgSteamDatagramConnectionQuality")
	proto.RegisterType((*CMsgSteamDatagramConnectionStatsClientToRouter)(nil), "CMsgSteamDatagramConnectionStatsClientToRouter")
	proto.RegisterType((*CMsgSteamDatagramConnectionStatsRouterToClient)(nil), "CMsgSteamDatagramConnectionStatsRouterToClient")
	proto.RegisterType((*CMsgSteamDatagramConnectionStatsRouterToServer)(nil), "CMsgSteamDatagramConnectionStatsRouterToServer")
	proto.RegisterType((*CMsgSteamDatagramConnectionStatsServerToRouter)(nil), "CMsgSteamDatagramConnectionStatsServerToRouter")
	proto.RegisterType((*CMsgSteamDatagramClientPingSampleRequest)(nil), "CMsgSteamDatagramClientPingSampleRequest")
	proto.RegisterType((*CMsgSteamDatagramClientPingSampleReply)(nil), "CMsgSteamDatagramClientPingSampleReply")
	proto.RegisterType((*CMsgSteamDatagramClientPingSampleReply_RoutingCluster)(nil), "CMsgSteamDatagramClientPingSampleReply.RoutingCluster")
	proto.RegisterType((*CMsgSteamDatagramClientPingSampleReply_DataCenter)(nil), "CMsgSteamDatagramClientPingSampleReply.DataCenter")
	proto.RegisterType((*CMsgSteamDatagramClientSwitchedPrimary)(nil), "CMsgSteamDatagramClientSwitchedPrimary")
	proto.RegisterType((*CMsgSteamDatagramClientSwitchedPrimary_RouterQuality)(nil), "CMsgSteamDatagramClientSwitchedPrimary.RouterQuality")
	proto.RegisterType((*CMsgSteamDatagramRouterHealth)(nil), "CMsgSteamDatagramRouterHealth")
	proto.RegisterType((*CMsgSteamDatagramRouterHealth_DataCenter)(nil), "CMsgSteamDatagramRouterHealth.DataCenter")
	proto.RegisterType((*CMsgSteamDatagramConnectRequest)(nil), "CMsgSteamDatagramConnectRequest")
	proto.RegisterType((*CMsgSteamDatagramConnectOK)(nil), "CMsgSteamDatagramConnectOK")
	proto.RegisterType((*CMsgSteamDatagramConnectionClosed)(nil), "CMsgSteamDatagramConnectionClosed")
	proto.RegisterType((*CMsgSteamDatagramNoConnection)(nil), "CMsgSteamDatagramNoConnection")
	proto.RegisterType((*CMsgSteamDatagramP2PSessionRequestBody)(nil), "CMsgSteamDatagramP2PSessionRequestBody")
	proto.RegisterType((*CMsgSteamDatagramP2PSessionRequest)(nil), "CMsgSteamDatagramP2PSessionRequest")
	proto.RegisterType((*CMsgSteamDatagramP2PSessionEstablished)(nil), "CMsgSteamDatagramP2PSessionEstablished")
	proto.RegisterType((*CMsgSteamDatagramP2PRoutes)(nil), "CMsgSteamDatagramP2PRoutes")
	proto.RegisterType((*CMsgSteamDatagramP2PRoutes_RelayCluster)(nil), "CMsgSteamDatagramP2PRoutes.RelayCluster")
	proto.RegisterType((*CMsgSteamDatagramP2PRoutes_Route)(nil), "CMsgSteamDatagramP2PRoutes.Route")
	proto.RegisterType((*CMsgSteamDatagramP2PRendezvous)(nil), "CMsgSteamDatagramP2PRendezvous")
	proto.RegisterType((*CMsgSteamDatagramConnectionStatsP2PClientToRouter)(nil), "CMsgSteamDatagramConnectionStatsP2PClientToRouter")
	proto.RegisterType((*CMsgSteamDatagramConnectionStatsP2PRouterToClient)(nil), "CMsgSteamDatagramConnectionStatsP2PRouterToClient")
	proto.RegisterType((*CMsgSteamSockets_UDP_ChallengeRequest)(nil), "CMsgSteamSockets_UDP_ChallengeRequest")
	proto.RegisterType((*CMsgSteamSockets_UDP_ChallengeReply)(nil), "CMsgSteamSockets_UDP_ChallengeReply")
	proto.RegisterType((*CMsgSteamSockets_UDP_ConnectRequest)(nil), "CMsgSteamSockets_UDP_ConnectRequest")
	proto.RegisterType((*CMsgSteamSockets_UDP_ConnectOK)(nil), "CMsgSteamSockets_UDP_ConnectOK")
	proto.RegisterType((*CMsgSteamSockets_UDP_ConnectionClosed)(nil), "CMsgSteamSockets_UDP_ConnectionClosed")
	proto.RegisterType((*CMsgSteamSockets_UDP_NoConnection)(nil), "CMsgSteamSockets_UDP_NoConnection")
	proto.RegisterType((*CMsgSteamSockets_UDP_Stats)(nil), "CMsgSteamSockets_UDP_Stats")
	proto.RegisterEnum("ESteamDatagramMsgID", ESteamDatagramMsgID_name, ESteamDatagramMsgID_value)
	proto.RegisterEnum("ESteamNetworkingUDPMsgID", ESteamNetworkingUDPMsgID_name, ESteamNetworkingUDPMsgID_value)
	proto.RegisterEnum("CMsgSteamDatagramSessionCryptInfo_EKeyType", CMsgSteamDatagramSessionCryptInfo_EKeyType_name, CMsgSteamDatagramSessionCryptInfo_EKeyType_value)
	proto.RegisterEnum("CMsgSteamDatagramConnectionStatsClientToRouter_Flags", CMsgSteamDatagramConnectionStatsClientToRouter_Flags_name, CMsgSteamDatagramConnectionStatsClientToRouter_Flags_value)
	proto.RegisterEnum("CMsgSteamDatagramConnectionStatsRouterToClient_Flags", CMsgSteamDatagramConnectionStatsRouterToClient_Flags_name, CMsgSteamDatagramConnectionStatsRouterToClient_Flags_value)
	proto.RegisterEnum("CMsgSteamDatagramConnectionStatsRouterToServer_Flags", CMsgSteamDatagramConnectionStatsRouterToServer_Flags_name, CMsgSteamDatagramConnectionStatsRouterToServer_Flags_value)
	proto.RegisterEnum("CMsgSteamDatagramConnectionStatsServerToRouter_Flags", CMsgSteamDatagramConnectionStatsServerToRouter_Flags_name, CMsgSteamDatagramConnectionStatsServerToRouter_Flags_value)
	proto.RegisterEnum("CMsgSteamDatagramConnectionClosed_ERelayMode", CMsgSteamDatagramConnectionClosed_ERelayMode_name, CMsgSteamDatagramConnectionClosed_ERelayMode_value)
	proto.RegisterEnum("CMsgSteamDatagramConnectionStatsP2PClientToRouter_Flags", CMsgSteamDatagramConnectionStatsP2PClientToRouter_Flags_name, CMsgSteamDatagramConnectionStatsP2PClientToRouter_Flags_value)
	proto.RegisterEnum("CMsgSteamDatagramConnectionStatsP2PRouterToClient_Flags", CMsgSteamDatagramConnectionStatsP2PRouterToClient_Flags_name, CMsgSteamDatagramConnectionStatsP2PRouterToClient_Flags_value)
	proto.RegisterEnum("CMsgSteamSockets_UDP_Stats_Flags", CMsgSteamSockets_UDP_Stats_Flags_name, CMsgSteamSockets_UDP_Stats_Flags_value)
}

func init() {
	proto.RegisterFile("steamdatagram_messages.proto", fileDescriptor_steamdatagram_messages_89793dc68acee3d1)
}

var fileDescriptor_steamdatagram_messages_89793dc68acee3d1 = []byte{
	// 5028 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x7c, 0x4d, 0x6c, 0xdc, 0x48,
	0x76, 0xff, 0xf4, 0x77, 0xf7, 0x6b, 0xb5, 0x44, 0x95, 0x2d, 0x9b, 0x96, 0xc7, 0xb6, 0xdc, 0x9e,
	0xb1, 0x65, 0x8f, 0xdd, 0x6e, 0xd1, 0x6e, 0xcb, 0x9e, 0xc5, 0xee, 0xfe, 0x6d, 0x49, 0x33, 0xa3,
	0xb5, 0x25, 0xf5, 0x50, 0xf6, 0xec, 0xce, 0xce, 0x7f, 0x43, 0x50, 0x64, 0xa9, 0xc5, 0xa8, 0x9b,
	0xec, 0x21, 0xd9, 0xb2, 0x3b, 0xa7, 0x1c, 0x72, 0xce, 0x26, 0xa7, 0x00, 0x41, 0x80, 0xec, 0x31,
	0xc7, 0x45, 0x80, 0x20, 0xc0, 0x22, 0xc8, 0x3d, 0x08, 0x72, 0x4c, 0x6e, 0x01, 0x02, 0xe4, 0x0b,
	0xc8, 0x65, 0x4e, 0x7b, 0xca, 0x21, 0x41, 0x7d, 0x90, 0x4d, 0x36, 0x8b, 0xdd, 0x2d, 0x5b, 0x9e,
	0x9c, 0x24, 0x56, 0xfd, 0x5e, 0xb1, 0xea, 0x7d, 0xd5, 0xab, 0xf7, 0x8a, 0x0d, 0x1f, 0x7a, 0x3e,
	0xd6, 0x7b, 0xa6, 0xee, 0xeb, 0x1d, 0x57, 0xef, 0x69, 0x3d, 0xec, 0x79, 0x7a, 0x07, 0x7b, 0x8d,
	0xbe, 0xeb, 0xf8, 0xce, 0xf2, 0xf5, 0x78, 0xaf, 0x3e, 0xf0, 0x8f, 0xc6, 0x20, 0xf5, 0xff, 0xce,
	0xc3, 0xca, 0xc6, 0x8e, 0xd7, 0xd9, 0x27, 0xc8, 0x4d, 0x8e, 0x54, 0x9d, 0x81, 0x8f, 0xdd, 0xb6,
	0x65, 0x77, 0x54, 0xdc, 0xef, 0x0e, 0xd1, 0x6d, 0x90, 0x8c, 0xae, 0x85, 0x6d, 0x5f, 0xf3, 0xad,
	0x1e, 0xf6, 0x7c, 0xbd, 0xd7, 0x97, 0x33, 0x2b, 0x99, 0xd5, 0x92, 0xba, 0xc0, 0xda, 0x5f, 0x06,
	0xcd, 0xe8, 0x31, 0x5c, 0xe8, 0xea, 0x3e, 0xb6, 0x8d, 0xa1, 0x46, 0xde, 0x6b, 0x60, 0xdb, 0xc7,
	0xae, 0x66, 0x99, 0x9e, 0x9c, 0x5d, 0xc9, 0xad, 0x96, 0x9e, 0x65, 0xa5, 0x8c, 0x7a, 0x9e, 0x23,
	0x36, 0x43, 0xc0, 0xb6, 0xe9, 0xa1, 0x3b, 0xb0, 0x10, 0x50, 0xf6, 0x2d, 0xbb, 0xa3, 0xf5, 0x3c,
	0x39, 0xb7, 0x92, 0x5b, 0xad, 0x51, 0x92, 0x1a, 0xef, 0x22, 0x73, 0xda, 0xf1, 0xd0, 0x47, 0x30,
	0x3f, 0x74, 0x06, 0xae, 0xd6, 0x1f, 0x1c, 0x74, 0x2d, 0x43, 0xb3, 0xfa, 0x72, 0x9e, 0x4e, 0x67,
	0x8e, 0xb4, 0xb6, 0x69, 0xe3, 0x76, 0x1f, 0x5d, 0x83, 0xaa, 0x87, 0xdd, 0x13, 0xec, 0xd2, 0x69,
	0xcb, 0x05, 0x0a, 0x01, 0xd6, 0x44, 0x66, 0x8c, 0x3e, 0x84, 0x8a, 0x71, 0xa4, 0x77, 0xbb, 0xd8,
	0xee, 0x60, 0xb9, 0xb8, 0x92, 0x59, 0x2d, 0xaa, 0xa3, 0x06, 0xf4, 0x10, 0x2e, 0x78, 0xd8, 0x70,
	0x6c, 0xd3, 0xd3, 0x06, 0xb6, 0x6f, 0x75, 0x35, 0xef, 0x68, 0xe0, 0x9b, 0xce, 0x6b, 0x5b, 0x2e,
	0xad, 0x64, 0x56, 0x6b, 0xea, 0x79, 0xde, 0xfb, 0x8a, 0x74, 0xee, 0xf3, 0x3e, 0x74, 0x03, 0x6a,
	0x9c, 0x57, 0x86, 0xe3, 0x1c, 0x5b, 0x58, 0x2e, 0xb3, 0x99, 0xb1, 0xc6, 0x0d, 0xda, 0x86, 0x9e,
	0xc2, 0x15, 0xcf, 0x70, 0x5c, 0xb2, 0xcc, 0x3e, 0xb6, 0xf5, 0xae, 0x3f, 0xd4, 0x5c, 0xdc, 0xd5,
	0x87, 0x9a, 0xd1, 0x1d, 0x78, 0x3e, 0x76, 0xe5, 0x0a, 0x7d, 0xc3, 0x32, 0x07, 0xb5, 0x19, 0x46,
	0x25, 0x90, 0x0d, 0x86, 0x40, 0xdf, 0x80, 0xe4, 0x12, 0x31, 0x69, 0xf8, 0x8d, 0x81, 0xfb, 0xbe,
	0xe5, 0xd8, 0x9e, 0x0c, 0x2b, 0xb9, 0xd5, 0xaa, 0xd2, 0x6c, 0x4c, 0x13, 0x68, 0x83, 0x3e, 0x6f,
	0x05, 0x84, 0xea, 0x82, 0x1b, 0x7b, 0xf6, 0x96, 0x0f, 0x61, 0x3e, 0x0e, 0x21, 0x1c, 0x27, 0xf2,
	0xd4, 0x42, 0x81, 0x72, 0x05, 0x98, 0x23, 0xad, 0x1b, 0x5c, 0x88, 0xe8, 0x3c, 0x14, 0x0e, 0xbb,
	0x7a, 0x87, 0x08, 0x9b, 0xcc, 0x9f, 0x3d, 0x20, 0x19, 0x4a, 0x7c, 0x95, 0x72, 0x8e, 0xb6, 0x07,
	0x8f, 0xf5, 0x5f, 0xe7, 0xe0, 0x5a, 0x62, 0xb2, 0x9f, 0xeb, 0x3d, 0xcc, 0x84, 0x44, 0x26, 0x8c,
	0x14, 0x58, 0xea, 0xe2, 0x8e, 0x6e, 0x10, 0xe6, 0x50, 0xbe, 0x7a, 0xd8, 0xf3, 0x2c, 0xc7, 0xa6,
	0x13, 0xa8, 0xa9, 0xe7, 0x58, 0xe7, 0x06, 0xed, 0xdb, 0x67, 0x5d, 0xe8, 0x26, 0x2c, 0x04, 0x60,
	0x32, 0x32, 0x99, 0x6e, 0x96, 0x8a, 0x97, 0xcb, 0x86, 0xbe, 0x6f, 0xdb, 0x14, 0x2a, 0x76, 0x4e,
	0xac, 0xd8, 0xb7, 0x39, 0xbf, 0xdd, 0x08, 0x94, 0x29, 0x1d, 0xe3, 0x9e, 0x3b, 0x82, 0x7e, 0x0a,
	0x97, 0x38, 0xb4, 0x13, 0x2e, 0x45, 0xe3, 0x0a, 0x4c, 0xb5, 0xb0, 0xa6, 0x5e, 0x64, 0x80, 0xd1,
	0x52, 0x5f, 0xb0, 0x6e, 0x74, 0x07, 0x16, 0x3d, 0xfc, 0xad, 0x66, 0x0f, 0x7a, 0x07, 0xd8, 0xd5,
	0x18, 0x8a, 0xaa, 0x66, 0x4d, 0x5d, 0xf0, 0xf0, 0xb7, 0xbb, 0xb4, 0x9d, 0x89, 0x93, 0xc8, 0x24,
	0x82, 0xc5, 0x0a, 0xe6, 0x8a, 0x39, 0x17, 0x02, 0xb7, 0x14, 0x8c, 0x56, 0x41, 0x62, 0xba, 0xc5,
	0xf9, 0x46, 0x98, 0x51, 0xa6, 0xb8, 0x79, 0xda, 0xce, 0x79, 0xb6, 0x6d, 0x52, 0xd5, 0x75, 0x6c,
	0x1b, 0x1b, 0x3e, 0x87, 0x55, 0xb8, 0xea, 0x86, 0x8d, 0xdb, 0x66, 0xfd, 0xef, 0x33, 0x70, 0x3d,
	0xa9, 0x5f, 0x64, 0xa0, 0x97, 0x0e, 0xfd, 0x43, 0x85, 0xf6, 0x09, 0x2c, 0xba, 0xf8, 0xdb, 0x01,
	0xf6, 0x92, 0x2e, 0x43, 0xe2, 0x1d, 0x23, 0x7e, 0x5d, 0x87, 0xb9, 0x00, 0x6c, 0xea, 0x3e, 0xa6,
	0xa2, 0x2a, 0xa9, 0x55, 0xde, 0xb6, 0xa9, 0xfb, 0x18, 0x2d, 0x43, 0xa5, 0x37, 0xd4, 0xfa, 0x4e,
	0x9f, 0x4c, 0x8b, 0x49, 0xa8, 0xd4, 0x1b, 0xb6, 0x9d, 0xfe, 0xb6, 0x89, 0xae, 0x42, 0x95, 0x39,
	0x03, 0xd6, 0xcb, 0x84, 0x52, 0xa1, 0x9e, 0x80, 0xf6, 0x2f, 0x43, 0xd9, 0x38, 0xc2, 0xc6, 0xb1,
	0x37, 0xe8, 0x71, 0x1f, 0x10, 0x3e, 0xd7, 0xff, 0x5d, 0xb4, 0x1a, 0xce, 0x91, 0x0d, 0x77, 0xd8,
	0xf7, 0xb7, 0xed, 0x43, 0x07, 0xed, 0x41, 0xf9, 0x18, 0x0f, 0x35, 0x7f, 0xd8, 0xc7, 0x74, 0x11,
	0xf3, 0xca, 0x27, 0x8d, 0xa9, 0x54, 0x8d, 0xad, 0xe7, 0x78, 0xf8, 0x72, 0xd8, 0xc7, 0x9f, 0x96,
	0xb6, 0x77, 0xbf, 0x7a, 0xfa, 0x62, 0x7b, 0x53, 0x2d, 0x1d, 0xb3, 0x16, 0x74, 0x89, 0x0d, 0x48,
	0x6c, 0x87, 0xae, 0x76, 0x8e, 0x76, 0x91, 0x91, 0x88, 0x09, 0xd9, 0x8e, 0x6d, 0x60, 0xba, 0xca,
	0xa2, 0xca, 0x1e, 0xd0, 0x12, 0x14, 0x2d, 0x4f, 0xf3, 0x6c, 0xa6, 0x73, 0x65, 0xb5, 0x60, 0x79,
	0xfb, 0x76, 0xbf, 0x7e, 0x0b, 0xca, 0xc1, 0x5b, 0x50, 0x15, 0x82, 0xf7, 0x48, 0x1f, 0xa0, 0x79,
	0x80, 0x8d, 0x57, 0xea, 0x57, 0x5b, 0x4a, 0xab, 0xb5, 0xf6, 0x44, 0xca, 0xd4, 0xbf, 0x81, 0x5b,
	0x53, 0x27, 0xbc, 0x6f, 0x75, 0x6c, 0x6c, 0x22, 0x04, 0x79, 0xcb, 0x3e, 0x74, 0xe8, 0x42, 0xe7,
	0x54, 0xfa, 0x3f, 0x71, 0x94, 0x9e, 0xd5, 0xb1, 0x75, 0x7f, 0xe0, 0x62, 0x3e, 0xe1, 0x51, 0x43,
	0xfd, 0x1f, 0xb2, 0x70, 0x7b, 0x82, 0x15, 0xf3, 0xf7, 0xa8, 0x4c, 0x9c, 0xe8, 0x02, 0x14, 0x7d,
	0xcb, 0x38, 0xc6, 0x3e, 0x7f, 0x03, 0x7f, 0x42, 0x1f, 0xc3, 0x7c, 0xe8, 0x7b, 0x99, 0xc3, 0x66,
	0x72, 0xae, 0x85, 0xad, 0x49, 0x9f, 0x9d, 0x1f, 0xf7, 0xd9, 0x4d, 0x38, 0x1f, 0x7a, 0xdf, 0xa8,
	0x26, 0x33, 0xb9, 0xa3, 0xc0, 0x09, 0x8f, 0xf4, 0x99, 0x50, 0x70, 0x0b, 0x8d, 0x53, 0x30, 0xb7,
	0x8d, 0x58, 0x5f, 0x8c, 0xe2, 0x21, 0x5c, 0xb0, 0xb1, 0xff, 0xda, 0x71, 0x8f, 0x09, 0xc9, 0xa1,
	0xd5, 0xd1, 0x4e, 0xb0, 0x4b, 0x3d, 0x12, 0xb3, 0xd3, 0xf3, 0xbc, 0x77, 0x83, 0x76, 0x7e, 0xc5,
	0xfa, 0x88, 0xff, 0xa0, 0x3b, 0xae, 0xe1, 0x74, 0x43, 0x3c, 0x33, 0xd7, 0x85, 0xa0, 0x9d, 0x43,
	0xeb, 0x7f, 0x9c, 0x85, 0x7b, 0xd3, 0xf9, 0xb9, 0xe5, 0xf9, 0xfa, 0x41, 0xd7, 0xf2, 0x8e, 0xb0,
	0xc0, 0x72, 0x33, 0x49, 0xcb, 0x45, 0x0d, 0x38, 0x17, 0xf1, 0x47, 0xa1, 0x63, 0x64, 0x7a, 0xb6,
	0x38, 0xea, 0x0a, 0x9c, 0x63, 0xfa, 0xfe, 0x97, 0x9f, 0xb0, 0xff, 0xb5, 0xe0, 0x22, 0x77, 0xd7,
	0x09, 0xaf, 0xc3, 0x5c, 0xdf, 0x79, 0xd6, 0xad, 0xc6, 0x7d, 0xcf, 0x55, 0xb2, 0x57, 0x53, 0x5f,
	0xa6, 0xb9, 0x8a, 0xc1, 0x39, 0x59, 0x61, 0x8e, 0x4c, 0x55, 0x8c, 0xfa, 0xaf, 0xb2, 0x02, 0x0d,
	0xde, 0x75, 0x42, 0xdd, 0xa2, 0xfe, 0x87, 0x6d, 0x02, 0x93, 0xa6, 0x90, 0x99, 0x30, 0x85, 0x04,
	0x13, 0x4b, 0x02, 0x26, 0x26, 0x23, 0x8f, 0xec, 0xf4, 0xc8, 0x23, 0x37, 0x39, 0xf2, 0xc8, 0xcf,
	0x1e, 0x79, 0x14, 0xd2, 0x39, 0x5f, 0xff, 0xa7, 0xcc, 0x0c, 0x2c, 0xda, 0xa7, 0x73, 0x10, 0x6e,
	0x0a, 0x19, 0xe1, 0xa6, 0x90, 0x66, 0x51, 0xa5, 0x33, 0xb4, 0xa8, 0x2b, 0x00, 0xc7, 0xdd, 0x81,
	0xd9, 0xc1, 0x5a, 0x5f, 0x37, 0x65, 0x83, 0xb1, 0x83, 0xb5, 0xb4, 0x75, 0xb3, 0xbe, 0x03, 0x97,
	0x13, 0xeb, 0xda, 0xb4, 0xf4, 0x8e, 0xed, 0x78, 0xbe, 0x65, 0x10, 0xff, 0xee, 0xe1, 0x13, 0xec,
	0x5a, 0xfe, 0x90, 0xaf, 0x21, 0x7c, 0x26, 0xce, 0xcc, 0xc7, 0x6f, 0x7c, 0x2a, 0xa4, 0x8a, 0x4a,
	0xff, 0xaf, 0x7f, 0x97, 0x15, 0x84, 0xbc, 0x9b, 0x61, 0x18, 0xb3, 0xef, 0x93, 0x0d, 0x67, 0x0f,
	0xe6, 0x22, 0xf1, 0x8e, 0x27, 0x67, 0x68, 0x68, 0x75, 0xb7, 0x31, 0x8d, 0xb0, 0x31, 0x7a, 0x56,
	0xab, 0xa3, 0xd8, 0xc8, 0x5b, 0xfe, 0x01, 0x14, 0x39, 0xef, 0x65, 0x28, 0xe9, 0xa6, 0xe9, 0x62,
	0xcf, 0xa3, 0xd3, 0xad, 0xa8, 0xc1, 0x23, 0xba, 0x08, 0xa5, 0x20, 0xf4, 0x65, 0x01, 0x54, 0xb1,
	0x4f, 0xe3, 0xdd, 0xe5, 0xbf, 0xc9, 0x00, 0x8c, 0x06, 0x26, 0xab, 0x32, 0x1c, 0x13, 0x73, 0x72,
	0xfa, 0x3f, 0xda, 0x81, 0x5a, 0x60, 0xd9, 0x7a, 0xaf, 0xdf, 0xc5, 0x34, 0xde, 0xae, 0x2a, 0xab,
	0xd3, 0x67, 0xcc, 0xa6, 0x45, 0xa2, 0x06, 0x6a, 0xfd, 0x94, 0x1a, 0x3d, 0x27, 0x7b, 0x32, 0x55,
	0x10, 0x36, 0x5a, 0xee, 0x94, 0xa3, 0x55, 0x99, 0x1a, 0x51, 0xe2, 0xfa, 0x9f, 0xe4, 0x04, 0x9a,
	0xf9, 0xc2, 0xb2, 0x8f, 0xb7, 0x6d, 0xcf, 0xd7, 0x6d, 0x5f, 0xb7, 0xb1, 0x33, 0xf0, 0x08, 0xbd,
	0x87, 0x1e, 0xc2, 0x45, 0x67, 0xe0, 0x6b, 0x7d, 0x9d, 0x6c, 0x0a, 0x9e, 0xd6, 0x27, 0x0b, 0xc2,
	0x86, 0xf6, 0x66, 0xad, 0x19, 0x04, 0x7c, 0xce, 0xc0, 0x6f, 0xb3, 0xde, 0x36, 0x71, 0x86, 0xc6,
	0xcf, 0xd6, 0x9a, 0xe8, 0x36, 0x2c, 0x12, 0xaa, 0x83, 0xa1, 0x8f, 0x43, 0x1a, 0xce, 0xc3, 0x79,
	0x67, 0xe0, 0x3f, 0x23, 0xed, 0x0c, 0x8d, 0x14, 0xb8, 0x60, 0xd9, 0xc2, 0xf1, 0x59, 0x70, 0x8a,
	0x2c, 0x3b, 0x31, 0xfc, 0x2d, 0x90, 0x2c, 0x7b, 0x6c, 0x74, 0xe6, 0x04, 0x6b, 0x96, 0x1d, 0x1d,
	0x3c, 0x22, 0xc1, 0x42, 0x54, 0x82, 0xc4, 0xf9, 0x06, 0xaf, 0x34, 0x5d, 0xa7, 0xdf, 0xc7, 0xa6,
	0xd6, 0x37, 0x7c, 0xee, 0xe7, 0x16, 0x79, 0xd7, 0x26, 0xeb, 0x69, 0x1b, 0x3e, 0xfa, 0x01, 0x2c,
	0x07, 0xf8, 0xd7, 0xd8, 0x72, 0x4d, 0xcd, 0x23, 0xdb, 0xa7, 0x6d, 0x60, 0x4a, 0xc6, 0x36, 0x8e,
	0x8b, 0x1c, 0xf1, 0x53, 0x02, 0xd8, 0xe7, 0xfd, 0x84, 0x78, 0x15, 0xa4, 0x3e, 0xd6, 0x8f, 0xb5,
	0xdf, 0xb5, 0x7c, 0x12, 0x85, 0x0e, 0xc8, 0x74, 0x79, 0xc8, 0x47, 0xda, 0x7f, 0x42, 0x9b, 0x5f,
	0x79, 0xd8, 0xa8, 0xff, 0xc7, 0x25, 0xa8, 0x0b, 0x25, 0xf3, 0xc2, 0x3a, 0xc4, 0xc4, 0x77, 0x31,
	0xa1, 0x5c, 0x87, 0xb9, 0x60, 0x36, 0x1e, 0xb6, 0x7d, 0xca, 0xa9, 0xbc, 0x5a, 0xe5, 0x6d, 0xfb,
	0xc4, 0xe9, 0x5e, 0x84, 0xd2, 0xf1, 0x01, 0xeb, 0xcd, 0xd3, 0xde, 0xe2, 0xf1, 0x01, 0xed, 0x88,
	0xd0, 0xba, 0xd8, 0x38, 0xa1, 0x7c, 0x19, 0xd1, 0xaa, 0xd8, 0x38, 0xe1, 0xb4, 0xb4, 0xb7, 0x18,
	0xd0, 0xd2, 0x8e, 0x87, 0x70, 0x21, 0x4a, 0x1b, 0x32, 0x81, 0xb9, 0x9f, 0xbc, 0x7a, 0x3e, 0x32,
	0x4a, 0xc0, 0x00, 0xea, 0x80, 0x62, 0x54, 0x9c, 0xe1, 0x94, 0x05, 0x79, 0x15, 0x45, 0x68, 0x38,
	0xc3, 0xd1, 0x63, 0xb8, 0x14, 0xa3, 0x20, 0xba, 0xe4, 0x1c, 0x6a, 0x8e, 0x6b, 0xf2, 0xb3, 0x58,
	0x5e, 0x5d, 0x8a, 0x90, 0xed, 0x0d, 0xfc, 0xbd, 0xc3, 0x3d, 0xd2, 0x99, 0x98, 0xa1, 0x39, 0xe8,
	0x77, 0x2d, 0x83, 0x44, 0xb1, 0x90, 0x98, 0xe1, 0x66, 0xd0, 0x87, 0xee, 0x02, 0x8a, 0x51, 0x75,
	0x07, 0xae, 0x71, 0x24, 0x57, 0x29, 0x85, 0x14, 0xa1, 0x78, 0x41, 0xda, 0xc9, 0x09, 0xe8, 0xdb,
	0x81, 0xde, 0xb5, 0xfc, 0xa1, 0x76, 0x64, 0x79, 0xbe, 0x43, 0x0f, 0xf3, 0x6b, 0xcd, 0xa6, 0xbc,
	0xc4, 0x0c, 0x82, 0x77, 0x7e, 0x11, 0xf4, 0xad, 0x35, 0x9b, 0x84, 0x07, 0x49, 0x9a, 0x27, 0x4f,
	0xe4, 0x0b, 0x4c, 0xc7, 0xc7, 0x49, 0x9e, 0x3c, 0x49, 0xa1, 0x58, 0x97, 0x2f, 0xa6, 0x50, 0xac,
	0xa7, 0x50, 0xb4, 0x64, 0x39, 0x85, 0xa2, 0x95, 0x42, 0xd1, 0x94, 0x2f, 0xa5, 0x50, 0xa4, 0xac,
	0x63, 0xbd, 0x25, 0x2f, 0x8b, 0x29, 0xd6, 0x53, 0xde, 0xd1, 0x6a, 0xca, 0x97, 0xc5, 0x14, 0xad,
	0x26, 0xb1, 0x4d, 0x01, 0x7f, 0xe5, 0x0f, 0x99, 0x6d, 0x26, 0xb8, 0x4b, 0x64, 0x9e, 0xc4, 0x9b,
	0x58, 0x37, 0xe5, 0x2b, 0x6c, 0x7b, 0x1e, 0x27, 0xd9, 0xc4, 0xba, 0x49, 0x4e, 0x76, 0x01, 0x15,
	0xd9, 0xb6, 0xb1, 0xa6, 0xd8, 0xa6, 0x7c, 0x95, 0x45, 0x80, 0xbc, 0x63, 0x97, 0xb4, 0x2b, 0xb6,
	0x00, 0xdb, 0xf2, 0x8f, 0xe4, 0x6b, 0x49, 0x6c, 0xcb, 0x3f, 0x22, 0xba, 0x34, 0x36, 0x2e, 0x01,
	0xaf, 0x50, 0xb0, 0x14, 0x1b, 0x58, 0x88, 0x6e, 0x35, 0xfd, 0x23, 0xf9, 0x7a, 0x12, 0x4d, 0xda,
	0xc9, 0x3c, 0xa8, 0x3b, 0x1b, 0x2d, 0x53, 0x69, 0xc9, 0xb7, 0x79, 0xd4, 0x6a, 0xd9, 0x9d, 0x70,
	0x85, 0x4a, 0x4b, 0x80, 0x6d, 0x35, 0xe5, 0x3b, 0x02, 0x6c, 0xab, 0x29, 0xc0, 0xae, 0xb7, 0xe4,
	0x4f, 0x04, 0xd8, 0xf5, 0x16, 0xb5, 0x95, 0x38, 0x96, 0xa8, 0xfe, 0x5d, 0x36, 0xe3, 0x18, 0x98,
	0xe8, 0xbd, 0x00, 0xad, 0xb4, 0xe4, 0x7b, 0x22, 0xb4, 0x22, 0x1c, 0xbb, 0xd5, 0x94, 0x1b, 0x22,
	0x74, 0x4b, 0x34, 0xb6, 0xd2, 0x6c, 0xca, 0xf7, 0x05, 0x68, 0x45, 0x38, 0x93, 0x07, 0xcd, 0xa6,
	0xdc, 0x14, 0xa0, 0x1f, 0x08, 0xd1, 0x3d, 0xfd, 0x8d, 0xbc, 0x26, 0x40, 0xef, 0xe8, 0x6f, 0x48,
	0x14, 0x4a, 0xd1, 0x23, 0xe5, 0x50, 0xd8, 0xc9, 0x9f, 0xb4, 0x86, 0x9a, 0x71, 0x13, 0x16, 0xa2,
	0x28, 0x22, 0xe8, 0x07, 0x6c, 0xd3, 0x1a, 0xc1, 0x9a, 0x09, 0xdc, 0x3a, 0x19, 0xee, 0xe1, 0x18,
	0x6e, 0x3d, 0x39, 0xde, 0x13, 0x82, 0x6b, 0x8d, 0xe1, 0x9e, 0x08, 0x70, 0x8f, 0xfd, 0x23, 0xf9,
	0xd1, 0x38, 0xee, 0xb1, 0x7f, 0x84, 0x7e, 0x04, 0x97, 0xf9, 0x0e, 0x35, 0x5a, 0xb5, 0x8d, 0x3b,
	0x5d, 0xab, 0x63, 0x1d, 0x74, 0xb1, 0xfc, 0x43, 0x4a, 0x73, 0x89, 0x41, 0xc2, 0xe5, 0xef, 0x86,
	0x00, 0xc2, 0xb3, 0x04, 0xfd, 0x9a, 0xfc, 0x23, 0xc6, 0xb3, 0x31, 0xb2, 0x35, 0x21, 0x5a, 0x91,
	0x7f, 0x2c, 0x44, 0x2b, 0x42, 0x74, 0x4b, 0xfe, 0x7f, 0x42, 0x74, 0x8b, 0x78, 0x90, 0xe4, 0x4c,
	0x9a, 0xf2, 0x53, 0xe6, 0x41, 0xc6, 0xa7, 0xd2, 0x14, 0xe2, 0x95, 0xa6, 0xfc, 0x4c, 0x88, 0x57,
	0x9a, 0xe4, 0x3c, 0xe1, 0xbf, 0xf1, 0xfa, 0x18, 0x9b, 0x54, 0x2d, 0x36, 0x28, 0x0e, 0x78, 0x13,
	0x51, 0x88, 0x26, 0x9c, 0x0f, 0x00, 0x91, 0x19, 0x3c, 0x92, 0x37, 0x99, 0xd3, 0xe3, 0x7d, 0xa3,
	0x29, 0x3c, 0x12, 0x53, 0x3c, 0x50, 0xe4, 0x2d, 0x31, 0xc5, 0x03, 0x45, 0x4c, 0xf1, 0xe8, 0xa1,
	0xfc, 0x99, 0x98, 0xe2, 0xd1, 0x43, 0xb2, 0x71, 0x09, 0x66, 0xa5, 0x3c, 0x96, 0x3f, 0x67, 0x1b,
	0x57, 0x62, 0x5a, 0xca, 0x63, 0x31, 0x8d, 0xd2, 0x7a, 0x24, 0x7f, 0x21, 0xa6, 0x51, 0x5a, 0x8f,
	0xc4, 0x34, 0xad, 0x35, 0x45, 0xde, 0x16, 0xd3, 0xb4, 0xd6, 0x14, 0xe2, 0xc4, 0x05, 0x73, 0x6b,
	0x2a, 0x0f, 0xe5, 0x9f, 0x30, 0x27, 0x9e, 0x98, 0x5c, 0x53, 0x49, 0x59, 0x11, 0x11, 0xc9, 0x73,
	0xf1, 0x9b, 0x88, 0x6c, 0xee, 0xc0, 0x62, 0x40, 0x33, 0xb2, 0xd7, 0x17, 0xcc, 0xd9, 0xf1, 0x8e,
	0xa8, 0x33, 0x1f, 0xc3, 0x12, 0xab, 0xdd, 0x61, 0x6a, 0x17, 0x03, 0x37, 0x45, 0x68, 0x6a, 0xbb,
	0xbb, 0x49, 0xf4, 0xba, 0x70, 0x6c, 0x6a, 0xc1, 0x7b, 0x49, 0xf4, 0x13, 0x31, 0x9a, 0xd8, 0x71,
	0x5b, 0x80, 0x26, 0xa6, 0x7c, 0x0d, 0xaa, 0x6e, 0x44, 0x41, 0xbf, 0x64, 0x0a, 0xea, 0xc6, 0x14,
	0xd4, 0x15, 0x29, 0xa8, 0xca, 0x94, 0xc7, 0x15, 0x2a, 0xa8, 0x2b, 0x52, 0xd0, 0x7d, 0x31, 0x05,
	0x53, 0x50, 0x57, 0xa4, 0xa0, 0x2f, 0xc5, 0x14, 0x4c, 0x41, 0x5d, 0xa1, 0x82, 0xbe, 0x62, 0xe2,
	0x74, 0xc5, 0x0a, 0xea, 0x0a, 0x15, 0xf4, 0x2b, 0x31, 0x0d, 0x57, 0x50, 0x57, 0xa8, 0xa0, 0x3f,
	0x15, 0xd3, 0x70, 0x05, 0x75, 0xc5, 0x0a, 0xfa, 0x33, 0xa6, 0xa0, 0x6e, 0x8a, 0x82, 0xba, 0x42,
	0x05, 0xfd, 0x5a, 0xfc, 0x26, 0xae, 0xa0, 0x6e, 0x42, 0x41, 0x7f, 0xce, 0x14, 0xd4, 0x4d, 0x2a,
	0xa8, 0x9b, 0x54, 0xd0, 0x6f, 0x98, 0x5a, 0xb8, 0x02, 0x05, 0x75, 0x93, 0x0a, 0xfa, 0xff, 0x93,
	0xe8, 0x75, 0xe1, 0xd8, 0x54, 0x41, 0x7f, 0x91, 0x44, 0x3f, 0x11, 0xa3, 0x89, 0x82, 0xfe, 0x8e,
	0x00, 0xfd, 0xd8, 0x3f, 0xaa, 0xff, 0x55, 0x46, 0x70, 0xd0, 0x19, 0x25, 0x21, 0xbe, 0x64, 0x91,
	0x0f, 0xda, 0x85, 0x9a, 0x15, 0x3d, 0x93, 0xd2, 0x33, 0xa7, 0xf0, 0xdc, 0x2b, 0x3e, 0xbe, 0xaa,
	0x71, 0x72, 0xf4, 0x63, 0x28, 0x77, 0xf9, 0x49, 0x8a, 0x1e, 0x47, 0xab, 0xca, 0x8d, 0xc6, 0xf4,
	0xf3, 0x96, 0x1a, 0x12, 0xd5, 0xff, 0x2d, 0x07, 0x8d, 0x09, 0xf3, 0xa6, 0x70, 0x96, 0xf6, 0x7a,
	0xe9, 0xf0, 0xb2, 0x40, 0x0b, 0x72, 0x86, 0xe2, 0xf2, 0x99, 0xdf, 0x68, 0x4c, 0x5f, 0xb5, 0x4a,
	0xf0, 0x8c, 0xcc, 0x4b, 0x9f, 0xa5, 0x90, 0xcc, 0x43, 0x8f, 0xc2, 0x64, 0x5b, 0x4a, 0x25, 0x65,
	0x29, 0x5a, 0xa0, 0x19, 0x25, 0xfd, 0x2f, 0x43, 0x45, 0x37, 0x8e, 0x59, 0x86, 0x4e, 0xce, 0xaf,
	0xe4, 0x56, 0x4b, 0x6a, 0x59, 0x37, 0x8e, 0x69, 0x9a, 0x8a, 0x1c, 0x08, 0x49, 0x27, 0x56, 0xb0,
	0x5c, 0xa0, 0x5d, 0x45, 0xdd, 0x38, 0xde, 0x52, 0xf0, 0xa8, 0xc0, 0x54, 0x8c, 0x16, 0x98, 0xd2,
	0x72, 0x54, 0xe5, 0xd4, 0x1c, 0x55, 0x24, 0xdd, 0x48, 0x78, 0x55, 0x89, 0xa6, 0x1b, 0x37, 0x14,
	0x37, 0xde, 0xef, 0xd1, 0xb3, 0x5c, 0xa4, 0xdf, 0xab, 0xef, 0x42, 0xe1, 0x33, 0xfa, 0xea, 0x25,
	0x58, 0x7c, 0xba, 0xf1, 0x5c, 0x53, 0xb7, 0xbe, 0x7c, 0xb5, 0xb5, 0xff, 0x52, 0x53, 0xb7, 0x5e,
	0x3c, 0xfd, 0x5a, 0xca, 0xa0, 0x73, 0xb0, 0x10, 0x6d, 0xde, 0x52, 0xb6, 0xa4, 0x2c, 0xba, 0x04,
	0x4b, 0xd1, 0xc6, 0xed, 0x9d, 0x9d, 0xad, 0xcd, 0xed, 0xa7, 0x2f, 0xb7, 0xa4, 0x7c, 0xfd, 0x9f,
	0x8b, 0xd3, 0xc5, 0xcc, 0xc4, 0x1b, 0xc9, 0x72, 0xe6, 0x5c, 0xc5, 0x38, 0x95, 0x98, 0x5d, 0xc5,
	0x20, 0x64, 0x9e, 0x62, 0x9c, 0x4a, 0xcc, 0x9e, 0x62, 0xa0, 0x17, 0x70, 0x23, 0x45, 0xcc, 0xda,
	0xa1, 0xeb, 0xf4, 0x82, 0x4a, 0x15, 0x13, 0xf9, 0x35, 0xa1, 0xc8, 0x3f, 0x73, 0x1d, 0x5e, 0x88,
	0x9c, 0x3a, 0x1a, 0x4b, 0x45, 0xf1, 0x52, 0x4e, 0xfa, 0x68, 0x3c, 0xa1, 0xf6, 0x2e, 0xf5, 0xb6,
	0xf4, 0x54, 0x6b, 0x71, 0x42, 0x92, 0xfb, 0x2e, 0xa0, 0x9e, 0xd5, 0x71, 0x75, 0x1f, 0x6b, 0x41,
	0xe5, 0xca, 0xea, 0x53, 0x2d, 0x29, 0xa9, 0x12, 0xef, 0xe1, 0xf5, 0x8e, 0xed, 0x3e, 0x51, 0xcf,
	0x71, 0x74, 0xdf, 0x71, 0x7d, 0x7a, 0xde, 0xaf, 0xa9, 0x28, 0x8e, 0x6f, 0x3b, 0xae, 0x3f, 0xbd,
	0x3e, 0x3c, 0x37, 0xb5, 0x3e, 0x1c, 0xb3, 0xaf, 0x5a, 0xba, 0x7d, 0xcd, 0x8b, 0xed, 0x6b, 0x61,
	0x16, 0xfb, 0x2a, 0xcd, 0x62, 0x5f, 0x44, 0x49, 0xcb, 0x63, 0xe9, 0xfc, 0x68, 0x3f, 0xd1, 0xc6,
	0x98, 0xfd, 0xed, 0x2b, 0xc6, 0x99, 0xdb, 0xd7, 0xaf, 0x0a, 0xb3, 0xdb, 0x17, 0xd7, 0x2a, 0x6a,
	0x5f, 0xde, 0x29, 0xed, 0xcb, 0xfb, 0xbe, 0xdd, 0xe8, 0x88, 0x2e, 0xa5, 0x3a, 0xcd, 0xe9, 0xd4,
	0xb1, 0x1a, 0x75, 0x4c, 0x3d, 0x20, 0x5d, 0x3d, 0xaa, 0x62, 0xf5, 0x98, 0x8b, 0xaa, 0x47, 0x4c,
	0xd8, 0x41, 0xe2, 0x33, 0x14, 0xb6, 0x37, 0xee, 0x4c, 0x8b, 0x63, 0xce, 0x54, 0x54, 0xad, 0x2f,
	0x89, 0xaa, 0xf5, 0xb3, 0x57, 0xb2, 0xd3, 0x14, 0xb6, 0x72, 0xea, 0xa2, 0x45, 0x2d, 0xad, 0x68,
	0x71, 0xe6, 0x2a, 0xfa, 0xeb, 0xfc, 0x74, 0x15, 0x65, 0xaa, 0x19, 0xdd, 0xe9, 0xbd, 0x53, 0xee,
	0xf4, 0x9e, 0xe2, 0xbe, 0xed, 0x16, 0x10, 0x53, 0x99, 0x72, 0xba, 0xca, 0x54, 0xc4, 0x2a, 0x03,
	0x29, 0x2a, 0x43, 0x56, 0x90, 0x8b, 0xdb, 0xbf, 0x3b, 0xee, 0x1f, 0xf2, 0x63, 0xfe, 0x41, 0xa4,
	0x32, 0x85, 0x59, 0x55, 0xa6, 0xf8, 0x9e, 0xeb, 0x5c, 0xd5, 0xef, 0x4d, 0x65, 0xf6, 0x60, 0x35,
	0x29, 0x3c, 0x3a, 0xd1, 0xb6, 0x65, 0x77, 0x58, 0xf1, 0x25, 0x28, 0xbb, 0xcf, 0x52, 0x22, 0xae,
	0xff, 0x6b, 0x0e, 0x6e, 0xce, 0x30, 0x62, 0xbf, 0x3b, 0x9c, 0xad, 0xe4, 0xac, 0xb3, 0x4b, 0x33,
	0x64, 0x1f, 0xe3, 0x3b, 0x97, 0xc7, 0xeb, 0x52, 0x8f, 0x1a, 0xb3, 0xbd, 0x87, 0x5e, 0x55, 0xb2,
	0xec, 0x0e, 0xdf, 0xd6, 0xd8, 0x65, 0x9b, 0xd1, 0xb3, 0x87, 0x5e, 0x8d, 0x15, 0xea, 0x58, 0xa1,
	0x4a, 0x99, 0x75, 0xf8, 0xb4, 0x72, 0x9d, 0xc9, 0x6e, 0x40, 0x8d, 0xde, 0x84, 0xe6, 0x21, 0x1b,
	0xae, 0x32, 0x6b, 0x99, 0xa8, 0x0e, 0xb5, 0x43, 0xd7, 0xb1, 0x7d, 0x2d, 0x5e, 0xb2, 0xab, 0xd2,
	0x46, 0x7e, 0x4f, 0xed, 0x2a, 0x54, 0xb1, 0x82, 0x23, 0xf7, 0xd9, 0xa8, 0x1a, 0x63, 0x05, 0xb3,
	0xfe, 0x65, 0x3f, 0x56, 0xd6, 0x9b, 0xed, 0x8e, 0xd5, 0x0a, 0xcc, 0x9d, 0x58, 0x3a, 0x8f, 0x07,
	0xf8, 0xc5, 0xa6, 0x92, 0x0a, 0x27, 0x96, 0x4e, 0x2d, 0x91, 0x6d, 0xbe, 0x93, 0xde, 0x5a, 0xff,
	0xae, 0x98, 0x2a, 0xe5, 0xfd, 0xd7, 0x96, 0x6f, 0x1c, 0x61, 0xb3, 0xed, 0x5a, 0x3d, 0xdd, 0x9d,
	0x51, 0xca, 0x17, 0xa1, 0x44, 0xa3, 0xb6, 0xb0, 0x18, 0x5e, 0x24, 0x8f, 0xdb, 0x74, 0x93, 0xa1,
	0x1d, 0x34, 0xda, 0x61, 0xd3, 0x28, 0x93, 0x06, 0x1a, 0xe3, 0x34, 0xe0, 0x5c, 0x24, 0x72, 0x0c,
	0x23, 0x1b, 0xb6, 0x6b, 0x2d, 0x1e, 0x86, 0xc1, 0x62, 0xc0, 0xff, 0x55, 0x90, 0x28, 0x5e, 0x37,
	0x7c, 0xeb, 0x04, 0x8f, 0xae, 0xf4, 0xd5, 0xd4, 0x79, 0xd2, 0xfe, 0x94, 0x36, 0xd3, 0xe2, 0xfa,
	0x3a, 0xc8, 0x51, 0x64, 0xac, 0xfa, 0xc4, 0x8c, 0x7f, 0x69, 0x44, 0xd1, 0x8e, 0xd4, 0xa1, 0x82,
	0x29, 0x05, 0x15, 0x3a, 0x17, 0xeb, 0x1e, 0xbf, 0xa6, 0x51, 0x61, 0x53, 0xe2, 0x05, 0x23, 0x95,
	0x76, 0xa0, 0x25, 0x28, 0x76, 0xf4, 0x3e, 0xe1, 0x31, 0xdb, 0x86, 0x0a, 0x1d, 0xbd, 0xbf, 0xe3,
	0x21, 0x8d, 0xcf, 0x34, 0x4c, 0xb4, 0x3b, 0xaf, 0xe9, 0xce, 0x53, 0x55, 0x5a, 0x8d, 0xd9, 0xf8,
	0xce, 0x2e, 0xe8, 0xb9, 0x81, 0xfb, 0xa5, 0x0b, 0xe4, 0x0f, 0xbb, 0xce, 0x6b, 0xf4, 0x0d, 0xcc,
	0xfb, 0x4e, 0x6c, 0x78, 0x78, 0x97, 0xe1, 0xe7, 0x7c, 0x27, 0x32, 0xb8, 0x0e, 0x8b, 0xb1, 0xd9,
	0xfb, 0x47, 0xd8, 0xa6, 0x3e, 0xed, 0xad, 0xc7, 0x5f, 0x88, 0x4c, 0xff, 0xe5, 0x11, 0xb6, 0xd1,
	0x2f, 0x60, 0x21, 0x32, 0x7f, 0xfa, 0x82, 0xb9, 0x77, 0x79, 0x41, 0x2d, 0x5c, 0x00, 0x19, 0x7e,
	0xf9, 0x97, 0x19, 0xa8, 0xc5, 0x00, 0x64, 0x13, 0x22, 0xa1, 0x32, 0xe6, 0x25, 0x64, 0xf6, 0x80,
	0xae, 0x00, 0x8c, 0x2c, 0x98, 0x9b, 0x6f, 0x25, 0x34, 0x5f, 0xa2, 0xbd, 0x07, 0x64, 0x4f, 0xa3,
	0xbd, 0x5c, 0x7b, 0x49, 0x03, 0xed, 0xbc, 0x0b, 0x28, 0x7e, 0x6e, 0x88, 0x5c, 0x8c, 0x91, 0xa2,
	0x67, 0x86, 0x4d, 0xe7, 0xb5, 0x5d, 0xff, 0xaf, 0x1c, 0x5c, 0x49, 0xb9, 0x94, 0xf9, 0x05, 0xd6,
	0xbb, 0xfe, 0x11, 0xba, 0x04, 0x65, 0xa3, 0x3f, 0xd0, 0xba, 0x8e, 0xce, 0x6c, 0x2c, 0xab, 0x96,
	0x8c, 0xfe, 0xe0, 0x85, 0xa3, 0x9b, 0xe8, 0x16, 0x2c, 0x70, 0x4d, 0xe6, 0x9b, 0x58, 0xe0, 0x6a,
	0xe6, 0x59, 0x33, 0xdf, 0xc3, 0x3c, 0xe2, 0x91, 0xa8, 0xff, 0xe8, 0x1f, 0xd3, 0x3a, 0xad, 0xc1,
	0x27, 0x4d, 0xfd, 0x5a, 0xfb, 0x98, 0x44, 0x0f, 0x06, 0xf1, 0x31, 0x8e, 0x7f, 0x84, 0xdd, 0x11,
	0x88, 0xcd, 0x79, 0x8e, 0xb6, 0x06, 0xa8, 0xb7, 0xba, 0x80, 0x82, 0x6e, 0xc3, 0x22, 0x59, 0x83,
	0xe1, 0x90, 0x03, 0x0e, 0xab, 0x3b, 0xbb, 0xd4, 0x32, 0xb2, 0xea, 0xbc, 0xd1, 0x1f, 0x6c, 0x38,
	0x9e, 0xdf, 0xa6, 0x75, 0x67, 0x17, 0xdd, 0x83, 0x73, 0x31, 0x28, 0xb3, 0x51, 0x6a, 0x25, 0x59,
	0x55, 0x1a, 0x81, 0x99, 0x75, 0xa2, 0x17, 0x63, 0x4e, 0xbe, 0x48, 0x9d, 0xfc, 0xed, 0xc6, 0x44,
	0x9e, 0xa6, 0xf9, 0x76, 0xa2, 0x0d, 0x3d, 0xbd, 0x63, 0x19, 0x3c, 0xca, 0x64, 0x0f, 0xcb, 0x9f,
	0xc7, 0x7c, 0xf1, 0x0d, 0xc6, 0x4b, 0xa1, 0x2b, 0x36, 0x22, 0xd7, 0x5d, 0x3d, 0x3f, 0xb8, 0xb1,
	0x48, 0xd4, 0x8a, 0x3c, 0xd4, 0xff, 0x5a, 0x74, 0xa9, 0x95, 0xc7, 0x01, 0xa7, 0xd9, 0x8d, 0x45,
	0x41, 0x4e, 0x4e, 0x14, 0xe4, 0x5c, 0x87, 0xb9, 0xde, 0x70, 0x2c, 0xf0, 0x2f, 0xaa, 0xd5, 0xde,
	0x70, 0x14, 0xee, 0x5f, 0x85, 0x2a, 0xdd, 0x0e, 0xc8, 0xd9, 0x33, 0xbc, 0x9b, 0x50, 0x21, 0x4d,
	0x5b, 0x9e, 0xbf, 0x43, 0x0b, 0xfc, 0x27, 0x96, 0xeb, 0x0f, 0xf4, 0x2e, 0x73, 0xd6, 0xec, 0x40,
	0x56, 0xe5, 0x6d, 0xd4, 0x5f, 0xff, 0x10, 0x2e, 0x47, 0x8e, 0xd7, 0x89, 0xa8, 0x8a, 0xb1, 0x40,
	0x1e, 0x41, 0xc6, 0x6e, 0x57, 0xfd, 0x08, 0x0a, 0x86, 0x3b, 0xec, 0xb3, 0x2b, 0x0f, 0xc2, 0x8c,
	0x9a, 0xf8, 0x3e, 0xa2, 0xca, 0xc8, 0xd0, 0x3a, 0xe4, 0x0d, 0xec, 0xb2, 0xab, 0x0f, 0xe2, 0xa8,
	0x15, 0xbb, 0xbe, 0x75, 0x48, 0xeb, 0xeb, 0x9c, 0x92, 0x12, 0x08, 0x2f, 0xde, 0x95, 0xc5, 0x17,
	0xef, 0xfe, 0x32, 0x07, 0xcb, 0x69, 0x92, 0xdb, 0x7b, 0x9e, 0x1a, 0x22, 0x66, 0x4e, 0x1d, 0x22,
	0x96, 0x52, 0xaf, 0x42, 0x7d, 0xcc, 0xef, 0x97, 0xc5, 0x8f, 0x7f, 0x45, 0xb5, 0x46, 0x5a, 0x47,
	0xf2, 0xbc, 0x09, 0x0b, 0x26, 0x95, 0x00, 0xc1, 0xb1, 0x0b, 0x1e, 0xfc, 0x3e, 0x0a, 0x6d, 0x26,
	0xc0, 0x57, 0x1e, 0x36, 0xce, 0x4c, 0x68, 0x85, 0x77, 0x13, 0x5a, 0xf1, 0x3d, 0x0a, 0xed, 0x5f,
	0x72, 0x82, 0x2b, 0xbc, 0x23, 0x9e, 0x6e, 0x74, 0x1d, 0x0f, 0x9b, 0x84, 0x11, 0xf1, 0xf3, 0xb5,
	0x48, 0x84, 0x72, 0xf4, 0x8c, 0x1d, 0x13, 0xcb, 0x2a, 0x48, 0xbe, 0x23, 0x14, 0xe2, 0xbc, 0xef,
	0xc4, 0x90, 0x77, 0x01, 0xd1, 0xed, 0x53, 0x94, 0x89, 0xa4, 0x61, 0x41, 0x0c, 0x5d, 0x87, 0x5a,
	0x1f, 0x27, 0x6f, 0x63, 0x56, 0x49, 0x63, 0x60, 0xde, 0xef, 0x28, 0x43, 0x15, 0x80, 0xd1, 0xf4,
	0x1c, 0x93, 0xdd, 0x35, 0x9c, 0x57, 0xee, 0x35, 0xa6, 0x72, 0xac, 0xb1, 0x45, 0xc7, 0xd9, 0x71,
	0x4c, 0xfc, 0x69, 0x7e, 0xd7, 0xb1, 0xb1, 0x5a, 0x71, 0x83, 0x06, 0xe2, 0xf8, 0x4c, 0x7c, 0x30,
	0xe8, 0x50, 0xbd, 0xa8, 0xa8, 0xec, 0x81, 0x16, 0x81, 0x68, 0x60, 0xa4, 0xd1, 0xdb, 0x69, 0x45,
	0x5e, 0x04, 0xa2, 0x4d, 0x1b, 0x8e, 0x89, 0xeb, 0x8f, 0x00, 0x46, 0xa3, 0xa2, 0x32, 0xd0, 0x71,
	0xa5, 0x0f, 0xd0, 0x1c, 0x94, 0xb7, 0x6c, 0xf3, 0xa5, 0xb3, 0x65, 0x9b, 0x52, 0x06, 0x49, 0x30,
	0xc7, 0xa6, 0xf0, 0x6c, 0xd8, 0xc6, 0xd8, 0x95, 0xb2, 0xf5, 0x7f, 0xcc, 0x0a, 0xb6, 0xcf, 0xdd,
	0x08, 0xdf, 0xdf, 0x87, 0x78, 0x0b, 0xa7, 0x10, 0x6f, 0x31, 0x45, 0xbc, 0xef, 0x28, 0xba, 0x59,
	0xb4, 0xe3, 0x43, 0x00, 0x6c, 0x9b, 0x9a, 0xef, 0x68, 0xd8, 0x36, 0xf9, 0xed, 0xf0, 0x32, 0xe6,
	0xdc, 0x44, 0x1f, 0x42, 0xc5, 0x1c, 0xf4, 0x7a, 0x43, 0x7a, 0xb1, 0xf2, 0x7f, 0x98, 0xc6, 0x96,
	0x69, 0x4b, 0x5b, 0x37, 0xeb, 0xff, 0x99, 0x15, 0x1c, 0x04, 0xda, 0x4a, 0x3b, 0x7e, 0x63, 0xfb,
	0x99, 0x63, 0x0e, 0x05, 0xb7, 0xb3, 0x33, 0x53, 0x6f, 0x67, 0x67, 0xc7, 0xef, 0xb5, 0xae, 0x82,
	0xd4, 0x1b, 0x8e, 0xb1, 0x8e, 0x65, 0xb7, 0xe6, 0x7b, 0xc3, 0xc9, 0x76, 0x91, 0x4f, 0xae, 0xfc,
	0x2e, 0x20, 0x8a, 0x11, 0x89, 0x4d, 0x22, 0x3d, 0xb1, 0x11, 0x67, 0xf7, 0x28, 0x13, 0x2e, 0x78,
	0x57, 0x26, 0x5c, 0xf0, 0xbe, 0x0c, 0x95, 0xd1, 0xa5, 0x60, 0x96, 0x0a, 0x2e, 0xf7, 0xf9, 0x85,
	0xe0, 0xfa, 0x2f, 0x45, 0xe5, 0xa7, 0x04, 0xa7, 0x43, 0x7f, 0x99, 0x39, 0xad, 0xbf, 0x44, 0x90,
	0x3f, 0x70, 0xcc, 0x21, 0xbf, 0x9b, 0x4f, 0xff, 0x8f, 0x5f, 0xda, 0xcf, 0x25, 0x2e, 0xed, 0x67,
	0x26, 0xca, 0xfe, 0xd4, 0xb7, 0xcb, 0xd3, 0x43, 0xc6, 0xdc, 0x84, 0x90, 0x31, 0xcc, 0xcf, 0x04,
	0x69, 0x82, 0x50, 0xd4, 0x2c, 0x3f, 0xc3, 0xcf, 0xe0, 0xc9, 0x8c, 0x72, 0x61, 0xfc, 0x82, 0xf8,
	0xdf, 0x8a, 0xf6, 0xee, 0xb6, 0xd2, 0xa6, 0x11, 0xa1, 0x87, 0xf6, 0x60, 0x3e, 0x96, 0x41, 0x0f,
	0x6e, 0xf4, 0x0a, 0xb6, 0xb4, 0x90, 0xa8, 0x11, 0x4d, 0xa8, 0xab, 0x35, 0x37, 0xf2, 0xe4, 0xa1,
	0x27, 0x50, 0xa4, 0x27, 0xd7, 0x20, 0xa1, 0x71, 0x7d, 0xe2, 0x40, 0xe4, 0x8f, 0xca, 0x09, 0xd0,
	0x32, 0x94, 0x5d, 0x7c, 0x62, 0x51, 0x8d, 0xe2, 0xe7, 0x8a, 0xe0, 0x79, 0xf9, 0xcf, 0x32, 0x30,
	0x17, 0xcb, 0xe3, 0x2f, 0x41, 0x91, 0x7f, 0xd8, 0xc2, 0xb8, 0x5e, 0xe8, 0xd3, 0x8f, 0x5a, 0xd2,
	0xae, 0x0a, 0x13, 0x61, 0xd1, 0xd3, 0x8d, 0x16, 0xff, 0xe4, 0x6a, 0x8e, 0x36, 0xf2, 0x42, 0x01,
	0x39, 0x21, 0x07, 0x6e, 0x28, 0x85, 0xfd, 0x4b, 0x5e, 0xe4, 0xda, 0x78, 0x28, 0x85, 0xe5, 0xaf,
	0xa1, 0x40, 0xd7, 0x12, 0xff, 0x20, 0x27, 0x33, 0xf1, 0x83, 0x9c, 0xec, 0xf8, 0x07, 0x39, 0xe1,
	0x69, 0x2c, 0x17, 0x39, 0x8d, 0xd5, 0xff, 0x28, 0x07, 0x57, 0x85, 0x2c, 0xc4, 0xb6, 0x89, 0x7f,
	0xef, 0xc4, 0x19, 0x78, 0x42, 0x37, 0x9d, 0x11, 0xba, 0xe9, 0x07, 0x11, 0xe9, 0x10, 0x53, 0xba,
	0x3c, 0x41, 0x3a, 0xa1, 0x5c, 0xd6, 0x41, 0xa6, 0xe7, 0x3d, 0x1c, 0x7c, 0x79, 0xe5, 0x69, 0x63,
	0x72, 0x5a, 0x22, 0xc7, 0x3f, 0xcc, 0x3f, 0xc0, 0xf2, 0x54, 0xde, 0x89, 0xb6, 0x61, 0x81, 0x4f,
	0x2a, 0x28, 0xf0, 0x50, 0x2e, 0x56, 0x95, 0x95, 0xc6, 0x94, 0x83, 0x80, 0x3a, 0x6f, 0xc4, 0x0f,
	0x06, 0x9f, 0x02, 0x04, 0x43, 0x39, 0xc7, 0x3c, 0xec, 0xba, 0xdc, 0x48, 0x0f, 0x4a, 0xd5, 0x0a,
	0x87, 0xef, 0x1d, 0xa3, 0x3d, 0x58, 0x8c, 0xf0, 0xc6, 0xa0, 0x7b, 0x28, 0x0f, 0xbd, 0xea, 0xd3,
	0x37, 0x7c, 0x55, 0x32, 0xc6, 0x5a, 0xea, 0x7f, 0x58, 0x80, 0xb5, 0x69, 0x29, 0xe9, 0xb6, 0xd2,
	0xfe, 0x3f, 0xad, 0x3f, 0xc7, 0xb2, 0xd2, 0xb9, 0xf4, 0xac, 0x74, 0x5e, 0x9c, 0x95, 0x2e, 0x44,
	0xb3, 0xd2, 0x9b, 0x70, 0xed, 0xd0, 0x71, 0x5f, 0xeb, 0xae, 0xa9, 0xf9, 0xba, 0xdb, 0xc1, 0x7e,
	0xd2, 0x3a, 0xd8, 0x57, 0xa2, 0x97, 0x39, 0xec, 0x25, 0x45, 0xc5, 0x6d, 0x04, 0x3d, 0x82, 0x8b,
	0x89, 0x51, 0xb8, 0x16, 0x95, 0x78, 0xf6, 0x29, 0x4e, 0xcd, 0xb5, 0x68, 0xa4, 0xb3, 0xe5, 0xb3,
	0xd1, 0xd9, 0xca, 0x24, 0x9d, 0x4d, 0x38, 0x75, 0x10, 0x38, 0xf5, 0xb1, 0x32, 0x79, 0x75, 0x4a,
	0x99, 0x7c, 0xee, 0x7d, 0x97, 0xc9, 0xff, 0xa2, 0x38, 0x93, 0x42, 0x9e, 0x59, 0xa5, 0xbc, 0x7f,
	0xca, 0x32, 0x49, 0x5f, 0x31, 0xde, 0x72, 0x23, 0x14, 0x57, 0x94, 0xf3, 0xa7, 0xac, 0x28, 0x17,
	0xde, 0xbe, 0xa2, 0x5c, 0x3c, 0x5d, 0x45, 0xb9, 0x94, 0x6e, 0x69, 0x65, 0xb1, 0xa5, 0x55, 0xa2,
	0x96, 0xf6, 0x43, 0xb8, 0x4c, 0xe0, 0x69, 0x76, 0xc2, 0x6a, 0x45, 0x44, 0xb3, 0x3f, 0x9b, 0x62,
	0x2a, 0xd5, 0xb3, 0x31, 0x95, 0xb9, 0x53, 0x99, 0x4a, 0x6d, 0xb2, 0xa9, 0x10, 0x65, 0x9b, 0x9f,
	0x50, 0xf1, 0x26, 0x5a, 0xb5, 0x10, 0xed, 0x6f, 0xbf, 0x87, 0x8a, 0xf7, 0x9f, 0x66, 0xe0, 0xe3,
	0x90, 0x29, 0xfb, 0x0e, 0x4b, 0x81, 0xbf, 0xda, 0x6c, 0x6b, 0x1b, 0x41, 0x38, 0x7e, 0xaa, 0x5c,
	0xd4, 0x78, 0x8e, 0x29, 0x97, 0xcc, 0x31, 0x89, 0x22, 0xec, 0xbc, 0xf8, 0xcc, 0xfe, 0x9b, 0x0c,
	0xdc, 0x98, 0x36, 0xb9, 0x99, 0x8b, 0x4c, 0x93, 0xcf, 0x1c, 0x33, 0x26, 0x54, 0x4e, 0x31, 0xf9,
	0x3f, 0xc8, 0xa5, 0x4d, 0x3e, 0xbe, 0x95, 0x9f, 0x3e, 0x5d, 0x34, 0x79, 0x25, 0x6f, 0x9b, 0x0e,
	0x2c, 0x4c, 0x4d, 0x07, 0x16, 0xc7, 0xd3, 0x81, 0x61, 0xde, 0xa7, 0xf4, 0x6e, 0x79, 0x9f, 0xfc,
	0x7b, 0xcc, 0xfb, 0xfc, 0x79, 0x34, 0x5e, 0x14, 0x88, 0xe1, 0x4c, 0x13, 0x76, 0x85, 0xd4, 0x84,
	0xdd, 0x4d, 0x58, 0x18, 0xff, 0xa2, 0x96, 0xff, 0xd4, 0x40, 0xfc, 0x6b, 0xda, 0x33, 0x4e, 0xec,
	0x9d, 0x95, 0x84, 0xca, 0x67, 0x21, 0xa1, 0x8a, 0x58, 0x42, 0xbf, 0x4d, 0x75, 0x41, 0xdf, 0x43,
	0x76, 0x2e, 0x7f, 0x8a, 0xf4, 0x4d, 0x21, 0x25, 0x7d, 0x13, 0xa6, 0xb9, 0xb2, 0x13, 0xd2, 0x5c,
	0xb9, 0x44, 0x9a, 0xeb, 0x37, 0xd1, 0x1f, 0x15, 0x88, 0xae, 0xfb, 0x2c, 0x53, 0x56, 0xe2, 0x95,
	0x64, 0x53, 0x56, 0x22, 0xe2, 0x50, 0x4e, 0xc4, 0xa1, 0xfa, 0x77, 0xd9, 0xc8, 0x39, 0x3a, 0x3a,
	0x79, 0xf6, 0x25, 0xe0, 0x13, 0x56, 0xf2, 0x38, 0xd5, 0xbd, 0x28, 0x46, 0x11, 0x0d, 0x11, 0xb2,
	0xe2, 0x10, 0x21, 0x37, 0x16, 0x22, 0x4c, 0xe2, 0x4f, 0xf9, 0x2d, 0x74, 0xa2, 0x72, 0x0a, 0x9d,
	0x80, 0x14, 0x4e, 0x5e, 0x84, 0x12, 0xdf, 0xc7, 0xb9, 0x61, 0x16, 0xd9, 0x1e, 0x5e, 0x5f, 0x0f,
	0x36, 0xf0, 0x53, 0xee, 0xd4, 0x77, 0x7e, 0x5b, 0x86, 0x73, 0x5b, 0x31, 0x16, 0xee, 0x78, 0x9d,
	0xed, 0x4d, 0x74, 0x0d, 0x2e, 0x1f, 0x6b, 0x89, 0x0e, 0x6d, 0xdb, 0x3e, 0xd1, 0xbb, 0x96, 0x29,
	0x7d, 0x80, 0x6e, 0xc3, 0xc7, 0x22, 0x40, 0xf4, 0xc7, 0x5e, 0xe8, 0x4e, 0x24, 0x65, 0xd0, 0x2d,
	0xb8, 0x31, 0x0d, 0xda, 0xef, 0x0e, 0xa5, 0x2c, 0xba, 0x07, 0xb7, 0x45, 0xc0, 0xf8, 0x6f, 0xb2,
	0x04, 0xe3, 0xe6, 0xd0, 0x27, 0x70, 0x6b, 0x16, 0x38, 0x19, 0x3b, 0x8f, 0x9a, 0x70, 0x77, 0x32,
	0x38, 0x9e, 0x0d, 0x93, 0x0a, 0xe8, 0x21, 0x34, 0x67, 0xa2, 0x88, 0x64, 0xab, 0xa4, 0x22, 0xba,
	0x0e, 0x57, 0x44, 0x54, 0xe1, 0xa7, 0xf0, 0x52, 0x09, 0xd5, 0xe1, 0xaa, 0x08, 0x32, 0xfa, 0xaa,
	0x5c, 0x2a, 0xa3, 0x3b, 0x70, 0x53, 0x88, 0xd1, 0x7d, 0x3d, 0x7e, 0xe2, 0x95, 0x2a, 0x93, 0xb0,
	0xf1, 0x6b, 0x85, 0x12, 0x4c, 0xc2, 0xc6, 0xef, 0x77, 0x49, 0xd5, 0x59, 0xc6, 0x65, 0x73, 0x91,
	0xe6, 0xd0, 0x15, 0xb8, 0x24, 0xc2, 0x52, 0xbb, 0x95, 0x6a, 0xe8, 0x3e, 0x7c, 0x22, 0xea, 0x4e,
	0xb9, 0x2f, 0x24, 0xcd, 0xa7, 0xa9, 0x82, 0xf0, 0x1e, 0x8d, 0xb4, 0x80, 0x5a, 0xb0, 0x96, 0x0e,
	0x0f, 0x96, 0x34, 0x56, 0xc7, 0x97, 0x24, 0x74, 0x03, 0xae, 0x09, 0x35, 0x93, 0xec, 0x76, 0xac,
	0x8e, 0x2b, 0x2d, 0xa2, 0x9b, 0x50, 0x17, 0x8e, 0x1d, 0x0b, 0xb8, 0x24, 0x94, 0x26, 0xf9, 0x30,
	0x22, 0x90, 0xce, 0xa1, 0x55, 0xf8, 0x68, 0x02, 0x24, 0xdc, 0x92, 0xa4, 0xf3, 0xe8, 0x23, 0x58,
	0x11, 0xab, 0xd1, 0x08, 0x2b, 0x2d, 0xa5, 0xb1, 0x75, 0xfc, 0x17, 0x71, 0x82, 0x39, 0x5e, 0x48,
	0x63, 0x6b, 0x92, 0x80, 0xb0, 0xf5, 0x62, 0x9a, 0x91, 0x27, 0x72, 0xc7, 0x92, 0x9c, 0x36, 0xb2,
	0x30, 0xa9, 0x2b, 0x5d, 0xba, 0xf3, 0x77, 0x59, 0x90, 0x19, 0x7a, 0x97, 0xe5, 0xb3, 0x2d, 0xbb,
	0xf3, 0x6a, 0xb3, 0xcd, 0x9c, 0x4f, 0x64, 0xac, 0xf1, 0xde, 0xc4, 0x09, 0x42, 0x5a, 0x89, 0xfa,
	0x81, 0x49, 0x70, 0xb2, 0xa4, 0xeb, 0x93, 0xc1, 0x71, 0x91, 0xd6, 0xa3, 0xa2, 0x4f, 0x03, 0xef,
	0x3d, 0x97, 0x6e, 0x4c, 0x9e, 0xf0, 0xb8, 0x70, 0x3f, 0x8a, 0xb2, 0x35, 0x01, 0x8f, 0x49, 0xf8,
	0xe3, 0xa8, 0xaf, 0x48, 0x40, 0x99, 0x71, 0xdd, 0x7c, 0xf6, 0xe0, 0xe7, 0x8d, 0x8e, 0xe5, 0x1f,
	0x0d, 0x0e, 0x1a, 0x86, 0xd3, 0xbb, 0xbf, 0xf6, 0xe0, 0xf8, 0x7e, 0xc7, 0xb9, 0x47, 0x03, 0xc2,
	0x7b, 0x2e, 0xf6, 0x9c, 0x81, 0x6b, 0x60, 0xef, 0x3e, 0x8d, 0x8f, 0x0e, 0x06, 0x87, 0xf7, 0xfd,
	0x43, 0xe5, 0xf7, 0x33, 0x1f, 0xfc, 0x6f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x0a, 0xf3, 0x6d, 0xba,
	0xbd, 0x4d, 0x00, 0x00,
}
