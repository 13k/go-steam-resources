// Code generated by protoc-gen-go. DO NOT EDIT.
// source: gcsystemmsgs.proto

package tf2 // import "github.com/13k/go-steam-resources/protobuf/tf2"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type EGCSystemMsg int32

const (
	EGCSystemMsg_k_EGCMsgInvalid                               EGCSystemMsg = 0
	EGCSystemMsg_k_EGCMsgMulti                                 EGCSystemMsg = 1
	EGCSystemMsg_k_EGCMsgGenericReply                          EGCSystemMsg = 10
	EGCSystemMsg_k_EGCMsgSystemBase                            EGCSystemMsg = 50
	EGCSystemMsg_k_EGCMsgAchievementAwarded                    EGCSystemMsg = 51
	EGCSystemMsg_k_EGCMsgConCommand                            EGCSystemMsg = 52
	EGCSystemMsg_k_EGCMsgStartPlaying                          EGCSystemMsg = 53
	EGCSystemMsg_k_EGCMsgStopPlaying                           EGCSystemMsg = 54
	EGCSystemMsg_k_EGCMsgStartGameserver                       EGCSystemMsg = 55
	EGCSystemMsg_k_EGCMsgStopGameserver                        EGCSystemMsg = 56
	EGCSystemMsg_k_EGCMsgWGRequest                             EGCSystemMsg = 57
	EGCSystemMsg_k_EGCMsgWGResponse                            EGCSystemMsg = 58
	EGCSystemMsg_k_EGCMsgGetUserGameStatsSchema                EGCSystemMsg = 59
	EGCSystemMsg_k_EGCMsgGetUserGameStatsSchemaResponse        EGCSystemMsg = 60
	EGCSystemMsg_k_EGCMsgGetUserStatsDEPRECATED                EGCSystemMsg = 61
	EGCSystemMsg_k_EGCMsgGetUserStatsResponse                  EGCSystemMsg = 62
	EGCSystemMsg_k_EGCMsgAppInfoUpdated                        EGCSystemMsg = 63
	EGCSystemMsg_k_EGCMsgValidateSession                       EGCSystemMsg = 64
	EGCSystemMsg_k_EGCMsgValidateSessionResponse               EGCSystemMsg = 65
	EGCSystemMsg_k_EGCMsgLookupAccountFromInput                EGCSystemMsg = 66
	EGCSystemMsg_k_EGCMsgSendHTTPRequest                       EGCSystemMsg = 67
	EGCSystemMsg_k_EGCMsgSendHTTPRequestResponse               EGCSystemMsg = 68
	EGCSystemMsg_k_EGCMsgPreTestSetup                          EGCSystemMsg = 69
	EGCSystemMsg_k_EGCMsgRecordSupportAction                   EGCSystemMsg = 70
	EGCSystemMsg_k_EGCMsgGetAccountDetails_DEPRECATED          EGCSystemMsg = 71
	EGCSystemMsg_k_EGCMsgReceiveInterAppMessage                EGCSystemMsg = 73
	EGCSystemMsg_k_EGCMsgFindAccounts                          EGCSystemMsg = 74
	EGCSystemMsg_k_EGCMsgPostAlert                             EGCSystemMsg = 75
	EGCSystemMsg_k_EGCMsgGetLicenses                           EGCSystemMsg = 76
	EGCSystemMsg_k_EGCMsgGetUserStats                          EGCSystemMsg = 77
	EGCSystemMsg_k_EGCMsgGetCommands                           EGCSystemMsg = 78
	EGCSystemMsg_k_EGCMsgGetCommandsResponse                   EGCSystemMsg = 79
	EGCSystemMsg_k_EGCMsgAddFreeLicense                        EGCSystemMsg = 80
	EGCSystemMsg_k_EGCMsgAddFreeLicenseResponse                EGCSystemMsg = 81
	EGCSystemMsg_k_EGCMsgGetIPLocation                         EGCSystemMsg = 82
	EGCSystemMsg_k_EGCMsgGetIPLocationResponse                 EGCSystemMsg = 83
	EGCSystemMsg_k_EGCMsgSystemStatsSchema                     EGCSystemMsg = 84
	EGCSystemMsg_k_EGCMsgGetSystemStats                        EGCSystemMsg = 85
	EGCSystemMsg_k_EGCMsgGetSystemStatsResponse                EGCSystemMsg = 86
	EGCSystemMsg_k_EGCMsgSendEmail                             EGCSystemMsg = 87
	EGCSystemMsg_k_EGCMsgSendEmailResponse                     EGCSystemMsg = 88
	EGCSystemMsg_k_EGCMsgGetEmailTemplate                      EGCSystemMsg = 89
	EGCSystemMsg_k_EGCMsgGetEmailTemplateResponse              EGCSystemMsg = 90
	EGCSystemMsg_k_EGCMsgGrantGuestPass                        EGCSystemMsg = 91
	EGCSystemMsg_k_EGCMsgGrantGuestPassResponse                EGCSystemMsg = 92
	EGCSystemMsg_k_EGCMsgGetAccountDetails                     EGCSystemMsg = 93
	EGCSystemMsg_k_EGCMsgGetAccountDetailsResponse             EGCSystemMsg = 94
	EGCSystemMsg_k_EGCMsgGetPersonaNames                       EGCSystemMsg = 95
	EGCSystemMsg_k_EGCMsgGetPersonaNamesResponse               EGCSystemMsg = 96
	EGCSystemMsg_k_EGCMsgMultiplexMsg                          EGCSystemMsg = 97
	EGCSystemMsg_k_EGCMsgWebAPIRegisterInterfaces              EGCSystemMsg = 101
	EGCSystemMsg_k_EGCMsgWebAPIJobRequest                      EGCSystemMsg = 102
	EGCSystemMsg_k_EGCMsgWebAPIJobRequestHttpResponse          EGCSystemMsg = 104
	EGCSystemMsg_k_EGCMsgWebAPIJobRequestForwardResponse       EGCSystemMsg = 105
	EGCSystemMsg_k_EGCMsgMemCachedGet                          EGCSystemMsg = 200
	EGCSystemMsg_k_EGCMsgMemCachedGetResponse                  EGCSystemMsg = 201
	EGCSystemMsg_k_EGCMsgMemCachedSet                          EGCSystemMsg = 202
	EGCSystemMsg_k_EGCMsgMemCachedDelete                       EGCSystemMsg = 203
	EGCSystemMsg_k_EGCMsgMemCachedStats                        EGCSystemMsg = 204
	EGCSystemMsg_k_EGCMsgMemCachedStatsResponse                EGCSystemMsg = 205
	EGCSystemMsg_k_EGCMsgSQLStats                              EGCSystemMsg = 210
	EGCSystemMsg_k_EGCMsgSQLStatsResponse                      EGCSystemMsg = 211
	EGCSystemMsg_k_EGCMsgMasterSetDirectory                    EGCSystemMsg = 220
	EGCSystemMsg_k_EGCMsgMasterSetDirectoryResponse            EGCSystemMsg = 221
	EGCSystemMsg_k_EGCMsgMasterSetWebAPIRouting                EGCSystemMsg = 222
	EGCSystemMsg_k_EGCMsgMasterSetWebAPIRoutingResponse        EGCSystemMsg = 223
	EGCSystemMsg_k_EGCMsgMasterSetClientMsgRouting             EGCSystemMsg = 224
	EGCSystemMsg_k_EGCMsgMasterSetClientMsgRoutingResponse     EGCSystemMsg = 225
	EGCSystemMsg_k_EGCMsgSetOptions                            EGCSystemMsg = 226
	EGCSystemMsg_k_EGCMsgSetOptionsResponse                    EGCSystemMsg = 227
	EGCSystemMsg_k_EGCMsgSystemBase2                           EGCSystemMsg = 500
	EGCSystemMsg_k_EGCMsgGetPurchaseTrustStatus                EGCSystemMsg = 501
	EGCSystemMsg_k_EGCMsgGetPurchaseTrustStatusResponse        EGCSystemMsg = 502
	EGCSystemMsg_k_EGCMsgUpdateSession                         EGCSystemMsg = 503
	EGCSystemMsg_k_EGCMsgGCAccountVacStatusChange              EGCSystemMsg = 504
	EGCSystemMsg_k_EGCMsgCheckFriendship                       EGCSystemMsg = 505
	EGCSystemMsg_k_EGCMsgCheckFriendshipResponse               EGCSystemMsg = 506
	EGCSystemMsg_k_EGCMsgGetPartnerAccountLink                 EGCSystemMsg = 507
	EGCSystemMsg_k_EGCMsgGetPartnerAccountLinkResponse         EGCSystemMsg = 508
	EGCSystemMsg_k_EGCMsgVSReportedSuspiciousActivity          EGCSystemMsg = 509
	EGCSystemMsg_k_EGCMsgAccountTradeBanStatusChange           EGCSystemMsg = 510
	EGCSystemMsg_k_EGCMsgAccountLockStatusChange               EGCSystemMsg = 511
	EGCSystemMsg_k_EGCMsgDPPartnerMicroTxns                    EGCSystemMsg = 512
	EGCSystemMsg_k_EGCMsgDPPartnerMicroTxnsResponse            EGCSystemMsg = 513
	EGCSystemMsg_k_EGCMsgGetIPASN                              EGCSystemMsg = 514
	EGCSystemMsg_k_EGCMsgGetIPASNResponse                      EGCSystemMsg = 515
	EGCSystemMsg_k_EGCMsgGetAppFriendsList                     EGCSystemMsg = 516
	EGCSystemMsg_k_EGCMsgGetAppFriendsListResponse             EGCSystemMsg = 517
	EGCSystemMsg_k_EGCMsgVacVerificationChange                 EGCSystemMsg = 518
	EGCSystemMsg_k_EGCMsgAccountPhoneNumberChange              EGCSystemMsg = 519
	EGCSystemMsg_k_EGCMsgAccountTwoFactorChange                EGCSystemMsg = 520
	EGCSystemMsg_k_EGCMsgCheckClanMembership                   EGCSystemMsg = 521
	EGCSystemMsg_k_EGCMsgCheckClanMembershipResponse           EGCSystemMsg = 522
	EGCSystemMsg_k_EGCMsgInviteUserToLobby                     EGCSystemMsg = 523
	EGCSystemMsg_k_EGCMsgGetGamePersonalDataCategoriesRequest  EGCSystemMsg = 524
	EGCSystemMsg_k_EGCMsgGetGamePersonalDataCategoriesResponse EGCSystemMsg = 525
	EGCSystemMsg_k_EGCMsgGetGamePersonalDataEntriesRequest     EGCSystemMsg = 526
	EGCSystemMsg_k_EGCMsgGetGamePersonalDataEntriesResponse    EGCSystemMsg = 527
)

var EGCSystemMsg_name = map[int32]string{
	0:   "k_EGCMsgInvalid",
	1:   "k_EGCMsgMulti",
	10:  "k_EGCMsgGenericReply",
	50:  "k_EGCMsgSystemBase",
	51:  "k_EGCMsgAchievementAwarded",
	52:  "k_EGCMsgConCommand",
	53:  "k_EGCMsgStartPlaying",
	54:  "k_EGCMsgStopPlaying",
	55:  "k_EGCMsgStartGameserver",
	56:  "k_EGCMsgStopGameserver",
	57:  "k_EGCMsgWGRequest",
	58:  "k_EGCMsgWGResponse",
	59:  "k_EGCMsgGetUserGameStatsSchema",
	60:  "k_EGCMsgGetUserGameStatsSchemaResponse",
	61:  "k_EGCMsgGetUserStatsDEPRECATED",
	62:  "k_EGCMsgGetUserStatsResponse",
	63:  "k_EGCMsgAppInfoUpdated",
	64:  "k_EGCMsgValidateSession",
	65:  "k_EGCMsgValidateSessionResponse",
	66:  "k_EGCMsgLookupAccountFromInput",
	67:  "k_EGCMsgSendHTTPRequest",
	68:  "k_EGCMsgSendHTTPRequestResponse",
	69:  "k_EGCMsgPreTestSetup",
	70:  "k_EGCMsgRecordSupportAction",
	71:  "k_EGCMsgGetAccountDetails_DEPRECATED",
	73:  "k_EGCMsgReceiveInterAppMessage",
	74:  "k_EGCMsgFindAccounts",
	75:  "k_EGCMsgPostAlert",
	76:  "k_EGCMsgGetLicenses",
	77:  "k_EGCMsgGetUserStats",
	78:  "k_EGCMsgGetCommands",
	79:  "k_EGCMsgGetCommandsResponse",
	80:  "k_EGCMsgAddFreeLicense",
	81:  "k_EGCMsgAddFreeLicenseResponse",
	82:  "k_EGCMsgGetIPLocation",
	83:  "k_EGCMsgGetIPLocationResponse",
	84:  "k_EGCMsgSystemStatsSchema",
	85:  "k_EGCMsgGetSystemStats",
	86:  "k_EGCMsgGetSystemStatsResponse",
	87:  "k_EGCMsgSendEmail",
	88:  "k_EGCMsgSendEmailResponse",
	89:  "k_EGCMsgGetEmailTemplate",
	90:  "k_EGCMsgGetEmailTemplateResponse",
	91:  "k_EGCMsgGrantGuestPass",
	92:  "k_EGCMsgGrantGuestPassResponse",
	93:  "k_EGCMsgGetAccountDetails",
	94:  "k_EGCMsgGetAccountDetailsResponse",
	95:  "k_EGCMsgGetPersonaNames",
	96:  "k_EGCMsgGetPersonaNamesResponse",
	97:  "k_EGCMsgMultiplexMsg",
	101: "k_EGCMsgWebAPIRegisterInterfaces",
	102: "k_EGCMsgWebAPIJobRequest",
	104: "k_EGCMsgWebAPIJobRequestHttpResponse",
	105: "k_EGCMsgWebAPIJobRequestForwardResponse",
	200: "k_EGCMsgMemCachedGet",
	201: "k_EGCMsgMemCachedGetResponse",
	202: "k_EGCMsgMemCachedSet",
	203: "k_EGCMsgMemCachedDelete",
	204: "k_EGCMsgMemCachedStats",
	205: "k_EGCMsgMemCachedStatsResponse",
	210: "k_EGCMsgSQLStats",
	211: "k_EGCMsgSQLStatsResponse",
	220: "k_EGCMsgMasterSetDirectory",
	221: "k_EGCMsgMasterSetDirectoryResponse",
	222: "k_EGCMsgMasterSetWebAPIRouting",
	223: "k_EGCMsgMasterSetWebAPIRoutingResponse",
	224: "k_EGCMsgMasterSetClientMsgRouting",
	225: "k_EGCMsgMasterSetClientMsgRoutingResponse",
	226: "k_EGCMsgSetOptions",
	227: "k_EGCMsgSetOptionsResponse",
	500: "k_EGCMsgSystemBase2",
	501: "k_EGCMsgGetPurchaseTrustStatus",
	502: "k_EGCMsgGetPurchaseTrustStatusResponse",
	503: "k_EGCMsgUpdateSession",
	504: "k_EGCMsgGCAccountVacStatusChange",
	505: "k_EGCMsgCheckFriendship",
	506: "k_EGCMsgCheckFriendshipResponse",
	507: "k_EGCMsgGetPartnerAccountLink",
	508: "k_EGCMsgGetPartnerAccountLinkResponse",
	509: "k_EGCMsgVSReportedSuspiciousActivity",
	510: "k_EGCMsgAccountTradeBanStatusChange",
	511: "k_EGCMsgAccountLockStatusChange",
	512: "k_EGCMsgDPPartnerMicroTxns",
	513: "k_EGCMsgDPPartnerMicroTxnsResponse",
	514: "k_EGCMsgGetIPASN",
	515: "k_EGCMsgGetIPASNResponse",
	516: "k_EGCMsgGetAppFriendsList",
	517: "k_EGCMsgGetAppFriendsListResponse",
	518: "k_EGCMsgVacVerificationChange",
	519: "k_EGCMsgAccountPhoneNumberChange",
	520: "k_EGCMsgAccountTwoFactorChange",
	521: "k_EGCMsgCheckClanMembership",
	522: "k_EGCMsgCheckClanMembershipResponse",
	523: "k_EGCMsgInviteUserToLobby",
	524: "k_EGCMsgGetGamePersonalDataCategoriesRequest",
	525: "k_EGCMsgGetGamePersonalDataCategoriesResponse",
	526: "k_EGCMsgGetGamePersonalDataEntriesRequest",
	527: "k_EGCMsgGetGamePersonalDataEntriesResponse",
}
var EGCSystemMsg_value = map[string]int32{
	"k_EGCMsgInvalid":                               0,
	"k_EGCMsgMulti":                                 1,
	"k_EGCMsgGenericReply":                          10,
	"k_EGCMsgSystemBase":                            50,
	"k_EGCMsgAchievementAwarded":                    51,
	"k_EGCMsgConCommand":                            52,
	"k_EGCMsgStartPlaying":                          53,
	"k_EGCMsgStopPlaying":                           54,
	"k_EGCMsgStartGameserver":                       55,
	"k_EGCMsgStopGameserver":                        56,
	"k_EGCMsgWGRequest":                             57,
	"k_EGCMsgWGResponse":                            58,
	"k_EGCMsgGetUserGameStatsSchema":                59,
	"k_EGCMsgGetUserGameStatsSchemaResponse":        60,
	"k_EGCMsgGetUserStatsDEPRECATED":                61,
	"k_EGCMsgGetUserStatsResponse":                  62,
	"k_EGCMsgAppInfoUpdated":                        63,
	"k_EGCMsgValidateSession":                       64,
	"k_EGCMsgValidateSessionResponse":               65,
	"k_EGCMsgLookupAccountFromInput":                66,
	"k_EGCMsgSendHTTPRequest":                       67,
	"k_EGCMsgSendHTTPRequestResponse":               68,
	"k_EGCMsgPreTestSetup":                          69,
	"k_EGCMsgRecordSupportAction":                   70,
	"k_EGCMsgGetAccountDetails_DEPRECATED":          71,
	"k_EGCMsgReceiveInterAppMessage":                73,
	"k_EGCMsgFindAccounts":                          74,
	"k_EGCMsgPostAlert":                             75,
	"k_EGCMsgGetLicenses":                           76,
	"k_EGCMsgGetUserStats":                          77,
	"k_EGCMsgGetCommands":                           78,
	"k_EGCMsgGetCommandsResponse":                   79,
	"k_EGCMsgAddFreeLicense":                        80,
	"k_EGCMsgAddFreeLicenseResponse":                81,
	"k_EGCMsgGetIPLocation":                         82,
	"k_EGCMsgGetIPLocationResponse":                 83,
	"k_EGCMsgSystemStatsSchema":                     84,
	"k_EGCMsgGetSystemStats":                        85,
	"k_EGCMsgGetSystemStatsResponse":                86,
	"k_EGCMsgSendEmail":                             87,
	"k_EGCMsgSendEmailResponse":                     88,
	"k_EGCMsgGetEmailTemplate":                      89,
	"k_EGCMsgGetEmailTemplateResponse":              90,
	"k_EGCMsgGrantGuestPass":                        91,
	"k_EGCMsgGrantGuestPassResponse":                92,
	"k_EGCMsgGetAccountDetails":                     93,
	"k_EGCMsgGetAccountDetailsResponse":             94,
	"k_EGCMsgGetPersonaNames":                       95,
	"k_EGCMsgGetPersonaNamesResponse":               96,
	"k_EGCMsgMultiplexMsg":                          97,
	"k_EGCMsgWebAPIRegisterInterfaces":              101,
	"k_EGCMsgWebAPIJobRequest":                      102,
	"k_EGCMsgWebAPIJobRequestHttpResponse":          104,
	"k_EGCMsgWebAPIJobRequestForwardResponse":       105,
	"k_EGCMsgMemCachedGet":                          200,
	"k_EGCMsgMemCachedGetResponse":                  201,
	"k_EGCMsgMemCachedSet":                          202,
	"k_EGCMsgMemCachedDelete":                       203,
	"k_EGCMsgMemCachedStats":                        204,
	"k_EGCMsgMemCachedStatsResponse":                205,
	"k_EGCMsgSQLStats":                              210,
	"k_EGCMsgSQLStatsResponse":                      211,
	"k_EGCMsgMasterSetDirectory":                    220,
	"k_EGCMsgMasterSetDirectoryResponse":            221,
	"k_EGCMsgMasterSetWebAPIRouting":                222,
	"k_EGCMsgMasterSetWebAPIRoutingResponse":        223,
	"k_EGCMsgMasterSetClientMsgRouting":             224,
	"k_EGCMsgMasterSetClientMsgRoutingResponse":     225,
	"k_EGCMsgSetOptions":                            226,
	"k_EGCMsgSetOptionsResponse":                    227,
	"k_EGCMsgSystemBase2":                           500,
	"k_EGCMsgGetPurchaseTrustStatus":                501,
	"k_EGCMsgGetPurchaseTrustStatusResponse":        502,
	"k_EGCMsgUpdateSession":                         503,
	"k_EGCMsgGCAccountVacStatusChange":              504,
	"k_EGCMsgCheckFriendship":                       505,
	"k_EGCMsgCheckFriendshipResponse":               506,
	"k_EGCMsgGetPartnerAccountLink":                 507,
	"k_EGCMsgGetPartnerAccountLinkResponse":         508,
	"k_EGCMsgVSReportedSuspiciousActivity":          509,
	"k_EGCMsgAccountTradeBanStatusChange":           510,
	"k_EGCMsgAccountLockStatusChange":               511,
	"k_EGCMsgDPPartnerMicroTxns":                    512,
	"k_EGCMsgDPPartnerMicroTxnsResponse":            513,
	"k_EGCMsgGetIPASN":                              514,
	"k_EGCMsgGetIPASNResponse":                      515,
	"k_EGCMsgGetAppFriendsList":                     516,
	"k_EGCMsgGetAppFriendsListResponse":             517,
	"k_EGCMsgVacVerificationChange":                 518,
	"k_EGCMsgAccountPhoneNumberChange":              519,
	"k_EGCMsgAccountTwoFactorChange":                520,
	"k_EGCMsgCheckClanMembership":                   521,
	"k_EGCMsgCheckClanMembershipResponse":           522,
	"k_EGCMsgInviteUserToLobby":                     523,
	"k_EGCMsgGetGamePersonalDataCategoriesRequest":  524,
	"k_EGCMsgGetGamePersonalDataCategoriesResponse": 525,
	"k_EGCMsgGetGamePersonalDataEntriesRequest":     526,
	"k_EGCMsgGetGamePersonalDataEntriesResponse":    527,
}

func (x EGCSystemMsg) Enum() *EGCSystemMsg {
	p := new(EGCSystemMsg)
	*p = x
	return p
}
func (x EGCSystemMsg) String() string {
	return proto.EnumName(EGCSystemMsg_name, int32(x))
}
func (x *EGCSystemMsg) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EGCSystemMsg_value, data, "EGCSystemMsg")
	if err != nil {
		return err
	}
	*x = EGCSystemMsg(value)
	return nil
}
func (EGCSystemMsg) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_gcsystemmsgs_9ef59a88ed1c0eaa, []int{0}
}

type ESOMsg int32

const (
	ESOMsg_k_ESOMsg_Create                   ESOMsg = 21
	ESOMsg_k_ESOMsg_Update                   ESOMsg = 22
	ESOMsg_k_ESOMsg_Destroy                  ESOMsg = 23
	ESOMsg_k_ESOMsg_CacheSubscribed          ESOMsg = 24
	ESOMsg_k_ESOMsg_CacheUnsubscribed        ESOMsg = 25
	ESOMsg_k_ESOMsg_UpdateMultiple           ESOMsg = 26
	ESOMsg_k_ESOMsg_CacheSubscriptionCheck   ESOMsg = 27
	ESOMsg_k_ESOMsg_CacheSubscriptionRefresh ESOMsg = 28
	ESOMsg_k_ESOMsg_CacheSubscribedUpToDate  ESOMsg = 29
)

var ESOMsg_name = map[int32]string{
	21: "k_ESOMsg_Create",
	22: "k_ESOMsg_Update",
	23: "k_ESOMsg_Destroy",
	24: "k_ESOMsg_CacheSubscribed",
	25: "k_ESOMsg_CacheUnsubscribed",
	26: "k_ESOMsg_UpdateMultiple",
	27: "k_ESOMsg_CacheSubscriptionCheck",
	28: "k_ESOMsg_CacheSubscriptionRefresh",
	29: "k_ESOMsg_CacheSubscribedUpToDate",
}
var ESOMsg_value = map[string]int32{
	"k_ESOMsg_Create":                   21,
	"k_ESOMsg_Update":                   22,
	"k_ESOMsg_Destroy":                  23,
	"k_ESOMsg_CacheSubscribed":          24,
	"k_ESOMsg_CacheUnsubscribed":        25,
	"k_ESOMsg_UpdateMultiple":           26,
	"k_ESOMsg_CacheSubscriptionCheck":   27,
	"k_ESOMsg_CacheSubscriptionRefresh": 28,
	"k_ESOMsg_CacheSubscribedUpToDate":  29,
}

func (x ESOMsg) Enum() *ESOMsg {
	p := new(ESOMsg)
	*p = x
	return p
}
func (x ESOMsg) String() string {
	return proto.EnumName(ESOMsg_name, int32(x))
}
func (x *ESOMsg) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ESOMsg_value, data, "ESOMsg")
	if err != nil {
		return err
	}
	*x = ESOMsg(value)
	return nil
}
func (ESOMsg) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_gcsystemmsgs_9ef59a88ed1c0eaa, []int{1}
}

type EGCBaseClientMsg int32

const (
	EGCBaseClientMsg_k_EMsgGCPingRequest   EGCBaseClientMsg = 3001
	EGCBaseClientMsg_k_EMsgGCPingResponse  EGCBaseClientMsg = 3002
	EGCBaseClientMsg_k_EMsgGCClientWelcome EGCBaseClientMsg = 4004
	EGCBaseClientMsg_k_EMsgGCServerWelcome EGCBaseClientMsg = 4005
	EGCBaseClientMsg_k_EMsgGCClientHello   EGCBaseClientMsg = 4006
	EGCBaseClientMsg_k_EMsgGCServerHello   EGCBaseClientMsg = 4007
	EGCBaseClientMsg_k_EMsgGCClientGoodbye EGCBaseClientMsg = 4008
	EGCBaseClientMsg_k_EMsgGCServerGoodbye EGCBaseClientMsg = 4009
)

var EGCBaseClientMsg_name = map[int32]string{
	3001: "k_EMsgGCPingRequest",
	3002: "k_EMsgGCPingResponse",
	4004: "k_EMsgGCClientWelcome",
	4005: "k_EMsgGCServerWelcome",
	4006: "k_EMsgGCClientHello",
	4007: "k_EMsgGCServerHello",
	4008: "k_EMsgGCClientGoodbye",
	4009: "k_EMsgGCServerGoodbye",
}
var EGCBaseClientMsg_value = map[string]int32{
	"k_EMsgGCPingRequest":   3001,
	"k_EMsgGCPingResponse":  3002,
	"k_EMsgGCClientWelcome": 4004,
	"k_EMsgGCServerWelcome": 4005,
	"k_EMsgGCClientHello":   4006,
	"k_EMsgGCServerHello":   4007,
	"k_EMsgGCClientGoodbye": 4008,
	"k_EMsgGCServerGoodbye": 4009,
}

func (x EGCBaseClientMsg) Enum() *EGCBaseClientMsg {
	p := new(EGCBaseClientMsg)
	*p = x
	return p
}
func (x EGCBaseClientMsg) String() string {
	return proto.EnumName(EGCBaseClientMsg_name, int32(x))
}
func (x *EGCBaseClientMsg) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EGCBaseClientMsg_value, data, "EGCBaseClientMsg")
	if err != nil {
		return err
	}
	*x = EGCBaseClientMsg(value)
	return nil
}
func (EGCBaseClientMsg) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_gcsystemmsgs_9ef59a88ed1c0eaa, []int{2}
}

type EGCToGCMsg int32

const (
	EGCToGCMsg_k_EGCToGCMsgMasterAck                   EGCToGCMsg = 150
	EGCToGCMsg_k_EGCToGCMsgMasterAckResponse           EGCToGCMsg = 151
	EGCToGCMsg_k_EGCToGCMsgRouted                      EGCToGCMsg = 152
	EGCToGCMsg_k_EGCToGCMsgRoutedReply                 EGCToGCMsg = 153
	EGCToGCMsg_k_EMsgGCUpdateSubGCSessionInfo          EGCToGCMsg = 154
	EGCToGCMsg_k_EMsgGCRequestSubGCSessionInfo         EGCToGCMsg = 155
	EGCToGCMsg_k_EMsgGCRequestSubGCSessionInfoResponse EGCToGCMsg = 156
	EGCToGCMsg_k_EGCToGCMsgMasterStartupComplete       EGCToGCMsg = 157
	EGCToGCMsg_k_EMsgGCToGCSOCacheSubscribe            EGCToGCMsg = 158
	EGCToGCMsg_k_EMsgGCToGCSOCacheUnsubscribe          EGCToGCMsg = 159
)

var EGCToGCMsg_name = map[int32]string{
	150: "k_EGCToGCMsgMasterAck",
	151: "k_EGCToGCMsgMasterAckResponse",
	152: "k_EGCToGCMsgRouted",
	153: "k_EGCToGCMsgRoutedReply",
	154: "k_EMsgGCUpdateSubGCSessionInfo",
	155: "k_EMsgGCRequestSubGCSessionInfo",
	156: "k_EMsgGCRequestSubGCSessionInfoResponse",
	157: "k_EGCToGCMsgMasterStartupComplete",
	158: "k_EMsgGCToGCSOCacheSubscribe",
	159: "k_EMsgGCToGCSOCacheUnsubscribe",
}
var EGCToGCMsg_value = map[string]int32{
	"k_EGCToGCMsgMasterAck":                   150,
	"k_EGCToGCMsgMasterAckResponse":           151,
	"k_EGCToGCMsgRouted":                      152,
	"k_EGCToGCMsgRoutedReply":                 153,
	"k_EMsgGCUpdateSubGCSessionInfo":          154,
	"k_EMsgGCRequestSubGCSessionInfo":         155,
	"k_EMsgGCRequestSubGCSessionInfoResponse": 156,
	"k_EGCToGCMsgMasterStartupComplete":       157,
	"k_EMsgGCToGCSOCacheSubscribe":            158,
	"k_EMsgGCToGCSOCacheUnsubscribe":          159,
}

func (x EGCToGCMsg) Enum() *EGCToGCMsg {
	p := new(EGCToGCMsg)
	*p = x
	return p
}
func (x EGCToGCMsg) String() string {
	return proto.EnumName(EGCToGCMsg_name, int32(x))
}
func (x *EGCToGCMsg) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EGCToGCMsg_value, data, "EGCToGCMsg")
	if err != nil {
		return err
	}
	*x = EGCToGCMsg(value)
	return nil
}
func (EGCToGCMsg) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_gcsystemmsgs_9ef59a88ed1c0eaa, []int{3}
}

type CCommunity_GamePersonalDataCategoryInfo struct {
	Type                 *string  `protobuf:"bytes,1,opt,name=type" json:"type,omitempty"`
	LocalizationToken    *string  `protobuf:"bytes,2,opt,name=localization_token,json=localizationToken" json:"localization_token,omitempty"`
	TemplateFile         *string  `protobuf:"bytes,3,opt,name=template_file,json=templateFile" json:"template_file,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CCommunity_GamePersonalDataCategoryInfo) Reset() {
	*m = CCommunity_GamePersonalDataCategoryInfo{}
}
func (m *CCommunity_GamePersonalDataCategoryInfo) String() string { return proto.CompactTextString(m) }
func (*CCommunity_GamePersonalDataCategoryInfo) ProtoMessage()    {}
func (*CCommunity_GamePersonalDataCategoryInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_gcsystemmsgs_9ef59a88ed1c0eaa, []int{0}
}
func (m *CCommunity_GamePersonalDataCategoryInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CCommunity_GamePersonalDataCategoryInfo.Unmarshal(m, b)
}
func (m *CCommunity_GamePersonalDataCategoryInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CCommunity_GamePersonalDataCategoryInfo.Marshal(b, m, deterministic)
}
func (dst *CCommunity_GamePersonalDataCategoryInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CCommunity_GamePersonalDataCategoryInfo.Merge(dst, src)
}
func (m *CCommunity_GamePersonalDataCategoryInfo) XXX_Size() int {
	return xxx_messageInfo_CCommunity_GamePersonalDataCategoryInfo.Size(m)
}
func (m *CCommunity_GamePersonalDataCategoryInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_CCommunity_GamePersonalDataCategoryInfo.DiscardUnknown(m)
}

var xxx_messageInfo_CCommunity_GamePersonalDataCategoryInfo proto.InternalMessageInfo

func (m *CCommunity_GamePersonalDataCategoryInfo) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ""
}

func (m *CCommunity_GamePersonalDataCategoryInfo) GetLocalizationToken() string {
	if m != nil && m.LocalizationToken != nil {
		return *m.LocalizationToken
	}
	return ""
}

func (m *CCommunity_GamePersonalDataCategoryInfo) GetTemplateFile() string {
	if m != nil && m.TemplateFile != nil {
		return *m.TemplateFile
	}
	return ""
}

type CCommunity_GetGamePersonalDataCategories_Request struct {
	Appid                *uint32  `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CCommunity_GetGamePersonalDataCategories_Request) Reset() {
	*m = CCommunity_GetGamePersonalDataCategories_Request{}
}
func (m *CCommunity_GetGamePersonalDataCategories_Request) String() string {
	return proto.CompactTextString(m)
}
func (*CCommunity_GetGamePersonalDataCategories_Request) ProtoMessage() {}
func (*CCommunity_GetGamePersonalDataCategories_Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_gcsystemmsgs_9ef59a88ed1c0eaa, []int{1}
}
func (m *CCommunity_GetGamePersonalDataCategories_Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CCommunity_GetGamePersonalDataCategories_Request.Unmarshal(m, b)
}
func (m *CCommunity_GetGamePersonalDataCategories_Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CCommunity_GetGamePersonalDataCategories_Request.Marshal(b, m, deterministic)
}
func (dst *CCommunity_GetGamePersonalDataCategories_Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CCommunity_GetGamePersonalDataCategories_Request.Merge(dst, src)
}
func (m *CCommunity_GetGamePersonalDataCategories_Request) XXX_Size() int {
	return xxx_messageInfo_CCommunity_GetGamePersonalDataCategories_Request.Size(m)
}
func (m *CCommunity_GetGamePersonalDataCategories_Request) XXX_DiscardUnknown() {
	xxx_messageInfo_CCommunity_GetGamePersonalDataCategories_Request.DiscardUnknown(m)
}

var xxx_messageInfo_CCommunity_GetGamePersonalDataCategories_Request proto.InternalMessageInfo

func (m *CCommunity_GetGamePersonalDataCategories_Request) GetAppid() uint32 {
	if m != nil && m.Appid != nil {
		return *m.Appid
	}
	return 0
}

type CCommunity_GetGamePersonalDataCategories_Response struct {
	Categories           []*CCommunity_GamePersonalDataCategoryInfo `protobuf:"bytes,1,rep,name=categories" json:"categories,omitempty"`
	AppAssetsBasename    *string                                    `protobuf:"bytes,2,opt,name=app_assets_basename,json=appAssetsBasename" json:"app_assets_basename,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                   `json:"-"`
	XXX_unrecognized     []byte                                     `json:"-"`
	XXX_sizecache        int32                                      `json:"-"`
}

func (m *CCommunity_GetGamePersonalDataCategories_Response) Reset() {
	*m = CCommunity_GetGamePersonalDataCategories_Response{}
}
func (m *CCommunity_GetGamePersonalDataCategories_Response) String() string {
	return proto.CompactTextString(m)
}
func (*CCommunity_GetGamePersonalDataCategories_Response) ProtoMessage() {}
func (*CCommunity_GetGamePersonalDataCategories_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_gcsystemmsgs_9ef59a88ed1c0eaa, []int{2}
}
func (m *CCommunity_GetGamePersonalDataCategories_Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CCommunity_GetGamePersonalDataCategories_Response.Unmarshal(m, b)
}
func (m *CCommunity_GetGamePersonalDataCategories_Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CCommunity_GetGamePersonalDataCategories_Response.Marshal(b, m, deterministic)
}
func (dst *CCommunity_GetGamePersonalDataCategories_Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CCommunity_GetGamePersonalDataCategories_Response.Merge(dst, src)
}
func (m *CCommunity_GetGamePersonalDataCategories_Response) XXX_Size() int {
	return xxx_messageInfo_CCommunity_GetGamePersonalDataCategories_Response.Size(m)
}
func (m *CCommunity_GetGamePersonalDataCategories_Response) XXX_DiscardUnknown() {
	xxx_messageInfo_CCommunity_GetGamePersonalDataCategories_Response.DiscardUnknown(m)
}

var xxx_messageInfo_CCommunity_GetGamePersonalDataCategories_Response proto.InternalMessageInfo

func (m *CCommunity_GetGamePersonalDataCategories_Response) GetCategories() []*CCommunity_GamePersonalDataCategoryInfo {
	if m != nil {
		return m.Categories
	}
	return nil
}

func (m *CCommunity_GetGamePersonalDataCategories_Response) GetAppAssetsBasename() string {
	if m != nil && m.AppAssetsBasename != nil {
		return *m.AppAssetsBasename
	}
	return ""
}

type CCommunity_GetGamePersonalDataEntries_Request struct {
	Appid                *uint32  `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	Steamid              *uint64  `protobuf:"varint,2,opt,name=steamid" json:"steamid,omitempty"`
	Type                 *string  `protobuf:"bytes,3,opt,name=type" json:"type,omitempty"`
	ContinueToken        *string  `protobuf:"bytes,4,opt,name=continue_token,json=continueToken" json:"continue_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CCommunity_GetGamePersonalDataEntries_Request) Reset() {
	*m = CCommunity_GetGamePersonalDataEntries_Request{}
}
func (m *CCommunity_GetGamePersonalDataEntries_Request) String() string {
	return proto.CompactTextString(m)
}
func (*CCommunity_GetGamePersonalDataEntries_Request) ProtoMessage() {}
func (*CCommunity_GetGamePersonalDataEntries_Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_gcsystemmsgs_9ef59a88ed1c0eaa, []int{3}
}
func (m *CCommunity_GetGamePersonalDataEntries_Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CCommunity_GetGamePersonalDataEntries_Request.Unmarshal(m, b)
}
func (m *CCommunity_GetGamePersonalDataEntries_Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CCommunity_GetGamePersonalDataEntries_Request.Marshal(b, m, deterministic)
}
func (dst *CCommunity_GetGamePersonalDataEntries_Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CCommunity_GetGamePersonalDataEntries_Request.Merge(dst, src)
}
func (m *CCommunity_GetGamePersonalDataEntries_Request) XXX_Size() int {
	return xxx_messageInfo_CCommunity_GetGamePersonalDataEntries_Request.Size(m)
}
func (m *CCommunity_GetGamePersonalDataEntries_Request) XXX_DiscardUnknown() {
	xxx_messageInfo_CCommunity_GetGamePersonalDataEntries_Request.DiscardUnknown(m)
}

var xxx_messageInfo_CCommunity_GetGamePersonalDataEntries_Request proto.InternalMessageInfo

func (m *CCommunity_GetGamePersonalDataEntries_Request) GetAppid() uint32 {
	if m != nil && m.Appid != nil {
		return *m.Appid
	}
	return 0
}

func (m *CCommunity_GetGamePersonalDataEntries_Request) GetSteamid() uint64 {
	if m != nil && m.Steamid != nil {
		return *m.Steamid
	}
	return 0
}

func (m *CCommunity_GetGamePersonalDataEntries_Request) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ""
}

func (m *CCommunity_GetGamePersonalDataEntries_Request) GetContinueToken() string {
	if m != nil && m.ContinueToken != nil {
		return *m.ContinueToken
	}
	return ""
}

type CCommunity_GetGamePersonalDataEntries_Response struct {
	Gceresult            *uint32  `protobuf:"varint,1,opt,name=gceresult" json:"gceresult,omitempty"`
	Entries              []string `protobuf:"bytes,2,rep,name=entries" json:"entries,omitempty"`
	ContinueToken        *string  `protobuf:"bytes,3,opt,name=continue_token,json=continueToken" json:"continue_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CCommunity_GetGamePersonalDataEntries_Response) Reset() {
	*m = CCommunity_GetGamePersonalDataEntries_Response{}
}
func (m *CCommunity_GetGamePersonalDataEntries_Response) String() string {
	return proto.CompactTextString(m)
}
func (*CCommunity_GetGamePersonalDataEntries_Response) ProtoMessage() {}
func (*CCommunity_GetGamePersonalDataEntries_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_gcsystemmsgs_9ef59a88ed1c0eaa, []int{4}
}
func (m *CCommunity_GetGamePersonalDataEntries_Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CCommunity_GetGamePersonalDataEntries_Response.Unmarshal(m, b)
}
func (m *CCommunity_GetGamePersonalDataEntries_Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CCommunity_GetGamePersonalDataEntries_Response.Marshal(b, m, deterministic)
}
func (dst *CCommunity_GetGamePersonalDataEntries_Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CCommunity_GetGamePersonalDataEntries_Response.Merge(dst, src)
}
func (m *CCommunity_GetGamePersonalDataEntries_Response) XXX_Size() int {
	return xxx_messageInfo_CCommunity_GetGamePersonalDataEntries_Response.Size(m)
}
func (m *CCommunity_GetGamePersonalDataEntries_Response) XXX_DiscardUnknown() {
	xxx_messageInfo_CCommunity_GetGamePersonalDataEntries_Response.DiscardUnknown(m)
}

var xxx_messageInfo_CCommunity_GetGamePersonalDataEntries_Response proto.InternalMessageInfo

func (m *CCommunity_GetGamePersonalDataEntries_Response) GetGceresult() uint32 {
	if m != nil && m.Gceresult != nil {
		return *m.Gceresult
	}
	return 0
}

func (m *CCommunity_GetGamePersonalDataEntries_Response) GetEntries() []string {
	if m != nil {
		return m.Entries
	}
	return nil
}

func (m *CCommunity_GetGamePersonalDataEntries_Response) GetContinueToken() string {
	if m != nil && m.ContinueToken != nil {
		return *m.ContinueToken
	}
	return ""
}

func init() {
	proto.RegisterType((*CCommunity_GamePersonalDataCategoryInfo)(nil), "CCommunity_GamePersonalDataCategoryInfo")
	proto.RegisterType((*CCommunity_GetGamePersonalDataCategories_Request)(nil), "CCommunity_GetGamePersonalDataCategories_Request")
	proto.RegisterType((*CCommunity_GetGamePersonalDataCategories_Response)(nil), "CCommunity_GetGamePersonalDataCategories_Response")
	proto.RegisterType((*CCommunity_GetGamePersonalDataEntries_Request)(nil), "CCommunity_GetGamePersonalDataEntries_Request")
	proto.RegisterType((*CCommunity_GetGamePersonalDataEntries_Response)(nil), "CCommunity_GetGamePersonalDataEntries_Response")
	proto.RegisterEnum("EGCSystemMsg", EGCSystemMsg_name, EGCSystemMsg_value)
	proto.RegisterEnum("ESOMsg", ESOMsg_name, ESOMsg_value)
	proto.RegisterEnum("EGCBaseClientMsg", EGCBaseClientMsg_name, EGCBaseClientMsg_value)
	proto.RegisterEnum("EGCToGCMsg", EGCToGCMsg_name, EGCToGCMsg_value)
}

func init() { proto.RegisterFile("gcsystemmsgs.proto", fileDescriptor_gcsystemmsgs_9ef59a88ed1c0eaa) }

var fileDescriptor_gcsystemmsgs_9ef59a88ed1c0eaa = []byte{
	// 1923 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x58, 0x49, 0x77, 0x1b, 0x49,
	0x1d, 0x9f, 0x8e, 0x04, 0xbc, 0x29, 0x26, 0x50, 0xa9, 0x2c, 0xb6, 0x13, 0x27, 0x76, 0x9c, 0x64,
	0xe2, 0xf1, 0x8c, 0x6d, 0xe2, 0x61, 0xd8, 0x37, 0xa5, 0x25, 0xcb, 0x1e, 0xec, 0x44, 0x23, 0xc9,
	0x0e, 0x0c, 0x8b, 0x28, 0x75, 0xff, 0x2d, 0xd5, 0x73, 0xab, 0xab, 0xa9, 0xaa, 0xf6, 0x8c, 0x38,
	0x0d, 0xfb, 0xce, 0x3c, 0x0e, 0x6c, 0xc3, 0x76, 0x61, 0x3d, 0xf0, 0x01, 0xe0, 0x13, 0xb0, 0x5e,
	0xe0, 0xc0, 0x85, 0x9d, 0x23, 0x1c, 0xd9, 0xf7, 0xd7, 0xdd, 0xd5, 0xd5, 0xd5, 0xb6, 0x9c, 0x09,
	0x37, 0x75, 0xfd, 0xfe, 0xfb, 0x5a, 0x25, 0x44, 0x06, 0x9e, 0x1c, 0x4b, 0x05, 0xa3, 0x91, 0x1c,
	0xc8, 0x95, 0x48, 0x70, 0xc5, 0x17, 0x3e, 0xed, 0xa0, 0xeb, 0xae, 0xcb, 0x47, 0xa3, 0x38, 0x64,
	0x6a, 0xdc, 0x6b, 0xd2, 0x11, 0xb4, 0x40, 0x48, 0x1e, 0xd2, 0xa0, 0x4e, 0x15, 0x75, 0xa9, 0x82,
	0x01, 0x17, 0xe3, 0xcd, 0x70, 0x8f, 0x13, 0x82, 0xaa, 0x6a, 0x1c, 0xc1, 0xb4, 0x33, 0xef, 0x2c,
	0xde, 0xdf, 0x4e, 0x7f, 0x93, 0x65, 0x44, 0x02, 0xee, 0xd1, 0x80, 0xbd, 0x87, 0x2a, 0xc6, 0xc3,
	0x9e, 0xe2, 0xfb, 0x10, 0x4e, 0x9f, 0x48, 0x29, 0x4e, 0xd9, 0x48, 0x37, 0x01, 0xc8, 0x15, 0x74,
	0x52, 0xc1, 0x28, 0x0a, 0xa8, 0x82, 0xde, 0x1e, 0x0b, 0x60, 0xba, 0x92, 0x52, 0x3e, 0x90, 0x1f,
	0xae, 0xb3, 0x00, 0x16, 0x36, 0xd0, 0xcb, 0x6c, 0x93, 0x40, 0x1d, 0x63, 0x15, 0x03, 0xd9, 0x6b,
	0xc3, 0xbb, 0x63, 0x90, 0x8a, 0x9c, 0x41, 0x2f, 0xa0, 0x51, 0xc4, 0xfc, 0xd4, 0xb8, 0x93, 0xed,
	0xec, 0x63, 0xe1, 0x3b, 0x0e, 0xba, 0xf1, 0x7f, 0x88, 0x92, 0x11, 0x0f, 0x25, 0x90, 0x0d, 0x84,
	0x3c, 0x73, 0x3c, 0xed, 0xcc, 0x57, 0x16, 0x5f, 0xbc, 0xb6, 0xb8, 0x72, 0x8f, 0x51, 0x6a, 0x5b,
	0xbc, 0x64, 0x05, 0x9d, 0xa6, 0x51, 0xd4, 0xa3, 0x52, 0x82, 0x92, 0xbd, 0x3e, 0x95, 0x10, 0xd2,
	0x11, 0xe4, 0xe1, 0xa1, 0x51, 0x54, 0x4b, 0x91, 0x9b, 0x1a, 0x58, 0x78, 0xce, 0x41, 0xcb, 0x77,
	0xb7, 0xb7, 0x11, 0xaa, 0xe7, 0xf7, 0x9b, 0x4c, 0xa3, 0x17, 0x49, 0x05, 0x74, 0xc4, 0xfc, 0x54,
	0x57, 0xb5, 0x9d, 0x7f, 0x9a, 0x1c, 0x56, 0xac, 0x1c, 0x5e, 0x43, 0x2f, 0xf1, 0x78, 0xa8, 0x58,
	0x18, 0x83, 0xce, 0x5f, 0x35, 0x45, 0x4f, 0xe6, 0xa7, 0x69, 0xee, 0x16, 0x9e, 0x75, 0xd0, 0xca,
	0xbd, 0x1a, 0xa7, 0x23, 0x39, 0x8b, 0xee, 0x1f, 0x78, 0x20, 0x40, 0xc6, 0x81, 0xd2, 0x16, 0x16,
	0x07, 0x89, 0x95, 0x90, 0x71, 0x4c, 0x9f, 0x98, 0xaf, 0x2c, 0xde, 0xdf, 0xce, 0x3f, 0x27, 0x58,
	0x54, 0x99, 0x60, 0xd1, 0xd2, 0xcf, 0x67, 0xd0, 0x03, 0x8d, 0xa6, 0xdb, 0x49, 0x8b, 0x7a, 0x5b,
	0x0e, 0xc8, 0x69, 0xf4, 0xd2, 0xfd, 0x5e, 0xa3, 0xe9, 0x6e, 0xcb, 0xc1, 0x66, 0x78, 0x40, 0x03,
	0xe6, 0xe3, 0xfb, 0xc8, 0x29, 0x74, 0x32, 0x3f, 0xdc, 0x8e, 0x03, 0xc5, 0xb0, 0x43, 0xa6, 0xd1,
	0x99, 0xfc, 0xa8, 0x09, 0x21, 0x08, 0xe6, 0xb5, 0x21, 0x0a, 0xc6, 0x18, 0x91, 0x73, 0x88, 0xe4,
	0x48, 0x26, 0x36, 0xc9, 0x0d, 0x5e, 0x23, 0x97, 0xd0, 0xf9, 0xfc, 0xbc, 0xe6, 0x0d, 0x19, 0x1c,
	0xc0, 0x08, 0x42, 0x55, 0x7b, 0x8a, 0x0a, 0x1f, 0x7c, 0xfc, 0xa8, 0xcd, 0xe7, 0xf2, 0x30, 0x89,
	0x12, 0x0d, 0x7d, 0xfc, 0x72, 0x5b, 0x53, 0x47, 0x51, 0xa1, 0x5a, 0x01, 0x1d, 0xb3, 0x70, 0x80,
	0x1f, 0x23, 0x53, 0xe8, 0x74, 0x81, 0xf0, 0x28, 0x07, 0x5e, 0x41, 0x2e, 0xa0, 0xa9, 0x12, 0x4b,
	0x12, 0x65, 0x09, 0xe2, 0x00, 0x04, 0x7e, 0x25, 0x39, 0x8f, 0xce, 0xd9, 0x5c, 0x16, 0xf6, 0x2a,
	0x72, 0x16, 0x9d, 0xca, 0xb1, 0x3b, 0x4d, 0x5d, 0x20, 0xf8, 0xd5, 0xb6, 0x69, 0xc9, 0x71, 0x96,
	0x1a, 0xfc, 0x1a, 0xb2, 0x80, 0x2e, 0x15, 0x41, 0x50, 0x3b, 0x12, 0x44, 0x22, 0xad, 0xa3, 0xa8,
	0x92, 0x1d, 0x6f, 0x08, 0x23, 0x8a, 0x5f, 0x4b, 0x96, 0xd0, 0x83, 0x77, 0xa7, 0x31, 0xf2, 0x5e,
	0x37, 0x41, 0x5e, 0x4a, 0x57, 0x6f, 0xb4, 0xda, 0x0d, 0xb7, 0xd6, 0x6d, 0xd4, 0xf1, 0xeb, 0xc9,
	0x3c, 0x9a, 0x9d, 0x44, 0x63, 0xa4, 0xbc, 0xc1, 0x76, 0xb0, 0x16, 0x45, 0x49, 0x47, 0xed, 0x44,
	0x3e, 0x55, 0xe0, 0xe3, 0x37, 0xda, 0x91, 0xd9, 0x4d, 0x92, 0x4b, 0x15, 0x74, 0x40, 0x4a, 0xc6,
	0x43, 0xfc, 0x26, 0x72, 0x05, 0xcd, 0x1d, 0x03, 0x1a, 0xe9, 0x35, 0xdb, 0xc6, 0x2d, 0xce, 0xf7,
	0xe3, 0xa8, 0xe6, 0x79, 0x3c, 0x0e, 0xd5, 0xba, 0xe0, 0xa3, 0xcd, 0x30, 0x8a, 0x15, 0xbe, 0x59,
	0x8a, 0x3f, 0x84, 0xfe, 0x46, 0xb7, 0xdb, 0xca, 0x83, 0xe9, 0xda, 0x5a, 0x0e, 0x81, 0x46, 0x4b,
	0xdd, 0x4e, 0x7a, 0x4b, 0x40, 0x17, 0xa4, 0xea, 0x80, 0x8a, 0x23, 0xdc, 0x20, 0x73, 0xe8, 0x42,
	0x8e, 0xb4, 0xc1, 0xe3, 0xc2, 0xef, 0xc4, 0x51, 0xc4, 0x85, 0xaa, 0x79, 0xc9, 0x8c, 0xc4, 0xeb,
	0x64, 0x11, 0x5d, 0xb5, 0x02, 0xa4, 0xad, 0xab, 0x83, 0xa2, 0x2c, 0x90, 0x3d, 0x2b, 0x94, 0x4d,
	0xdb, 0x95, 0x36, 0x78, 0xc0, 0x0e, 0x60, 0x33, 0x54, 0x20, 0x6a, 0x51, 0xb4, 0x0d, 0x52, 0xd2,
	0x01, 0xe0, 0x4d, 0xdb, 0x90, 0x75, 0x16, 0xfa, 0x5a, 0x9c, 0xc4, 0x8f, 0xdb, 0xb5, 0xd2, 0xe2,
	0x52, 0xd5, 0x02, 0x10, 0x0a, 0xbf, 0xd9, 0x2e, 0xca, 0x26, 0xa8, 0x2d, 0xe6, 0x41, 0x28, 0x41,
	0xe2, 0xad, 0x72, 0xc7, 0x14, 0x89, 0xc3, 0xdb, 0x87, 0x58, 0x74, 0xe5, 0x4b, 0x7c, 0xcb, 0xf6,
	0xd5, 0x02, 0x4c, 0x98, 0x6e, 0x97, 0x52, 0xed, 0xfb, 0xeb, 0x02, 0x40, 0x2b, 0xc4, 0x2d, 0xdb,
	0xbb, 0x32, 0x66, 0xf8, 0x9f, 0x20, 0x33, 0xe8, 0xac, 0xa5, 0x60, 0xb3, 0xb5, 0xc5, 0xbd, 0x74,
	0xd5, 0xe0, 0x36, 0xb9, 0x8c, 0x2e, 0x4e, 0x84, 0x0c, 0x77, 0x87, 0x5c, 0x44, 0x33, 0xe5, 0x4e,
	0xb7, 0x2b, 0xbf, 0x6b, 0x1b, 0xd7, 0x04, 0x65, 0x51, 0xe0, 0x9d, 0x43, 0x95, 0x6e, 0x61, 0x46,
	0xfc, 0xae, 0x1d, 0xe0, 0xa4, 0x50, 0x1a, 0x23, 0xca, 0x02, 0x7c, 0xa7, 0xa4, 0x35, 0x3f, 0x36,
	0x5c, 0x6f, 0x21, 0xb3, 0x68, 0xda, 0x92, 0x9c, 0xa2, 0x5d, 0xbd, 0x1a, 0xf1, 0x5b, 0xc9, 0x55,
	0x34, 0x7f, 0x1c, 0x6a, 0x64, 0x3c, 0x59, 0xb2, 0x5c, 0xd0, 0x50, 0x35, 0x93, 0xea, 0x6c, 0x51,
	0x29, 0xf1, 0xdb, 0x4a, 0x96, 0x97, 0x30, 0xc3, 0xff, 0x76, 0xdb, 0xc4, 0x23, 0x25, 0x88, 0xdf,
	0x41, 0xae, 0xa1, 0xcb, 0xc7, 0xc2, 0x46, 0xca, 0x3b, 0xed, 0x2e, 0x6a, 0x82, 0xd2, 0x5b, 0xe2,
	0x56, 0x32, 0xae, 0x70, 0xcf, 0xee, 0xa2, 0x43, 0xa0, 0x91, 0xf0, 0x2e, 0xbb, 0xe4, 0xd2, 0xb9,
	0x1d, 0x05, 0xf0, 0xf4, 0xb6, 0x1c, 0x60, 0x6a, 0xc7, 0xe1, 0x0e, 0xf4, 0x6b, 0xad, 0xcd, 0x36,
	0x0c, 0x98, 0x54, 0x20, 0xd2, 0x0e, 0xd8, 0xa3, 0x1e, 0x48, 0x0c, 0x76, 0x2c, 0x33, 0xaa, 0xc7,
	0x79, 0x3f, 0x6f, 0xe4, 0x3d, 0xbb, 0xd1, 0x0e, 0xa3, 0x1b, 0x4a, 0x45, 0xc6, 0x8e, 0x21, 0x79,
	0x18, 0x5d, 0x3f, 0x8e, 0x72, 0x9d, 0x8b, 0x64, 0x03, 0x18, 0x62, 0x46, 0x66, 0x2c, 0xa3, 0x61,
	0xe4, 0x52, 0x6f, 0x08, 0x7e, 0x13, 0x14, 0xfe, 0xbe, 0x43, 0x2e, 0x17, 0xb3, 0xcf, 0x86, 0x0c,
	0xf3, 0x0f, 0x9c, 0x89, 0xdc, 0x1d, 0x50, 0xf8, 0x87, 0x0e, 0x99, 0x2d, 0xe2, 0x69, 0xa0, 0x3a,
	0x04, 0xa0, 0x00, 0xff, 0xc8, 0x21, 0x17, 0x8a, 0x9c, 0x17, 0x8c, 0x69, 0xb5, 0xfe, 0xd8, 0x21,
	0x57, 0x8a, 0xa4, 0x97, 0x41, 0xa3, 0xfa, 0x27, 0x0e, 0x39, 0x8b, 0xb0, 0x29, 0xcc, 0x27, 0xb6,
	0x32, 0xde, 0x9f, 0x3a, 0xe4, 0x62, 0x11, 0xc4, 0xfc, 0xd8, 0x70, 0xfd, 0xcc, 0x21, 0x73, 0xc5,
	0x5a, 0xdc, 0xa6, 0x49, 0x06, 0x3a, 0xa0, 0xea, 0x4c, 0x80, 0xa7, 0xb8, 0x18, 0xe3, 0x5f, 0x38,
	0xe4, 0x3a, 0x5a, 0x38, 0x9e, 0xc0, 0x48, 0xfa, 0x65, 0xd9, 0xc8, 0x9c, 0x50, 0x27, 0x97, 0xc7,
	0x2a, 0xd9, 0x8c, 0xbf, 0x72, 0xc8, 0xc3, 0xc5, 0x3a, 0x9a, 0x4c, 0x64, 0x24, 0xfe, 0xda, 0x21,
	0x0f, 0x16, 0x85, 0x6a, 0x88, 0xdd, 0x80, 0x41, 0xa8, 0x92, 0x91, 0xa9, 0x85, 0xfe, 0xc6, 0x21,
	0x2b, 0xe8, 0xa1, 0xe7, 0xa5, 0x33, 0x72, 0x7f, 0xeb, 0x90, 0x29, 0xeb, 0x8a, 0x00, 0xea, 0x76,
	0x94, 0xcc, 0x15, 0x89, 0x7f, 0x57, 0x0a, 0x46, 0x01, 0x18, 0xce, 0xdf, 0x27, 0xd7, 0x8e, 0xd3,
	0x47, 0x2f, 0x17, 0x6b, 0xf8, 0x4f, 0x15, 0xdb, 0xfb, 0xa4, 0x21, 0x62, 0xe1, 0x0d, 0xa9, 0x84,
	0xae, 0x88, 0xa5, 0x4a, 0x62, 0x1e, 0x4b, 0xfc, 0xe7, 0x8a, 0xed, 0xfd, 0x64, 0x22, 0xa3, 0xeb,
	0x2f, 0x15, 0x72, 0xbe, 0x18, 0x8e, 0xd9, 0x02, 0xcd, 0x37, 0xe5, 0x5f, 0x2b, 0xe4, 0x9a, 0x35,
	0x47, 0x5c, 0xdd, 0xc1, 0xbb, 0xd4, 0xcb, 0x84, 0xb8, 0x43, 0x1a, 0x0e, 0x00, 0xff, 0xad, 0x62,
	0x97, 0x9c, 0x3b, 0x04, 0x6f, 0x7f, 0x5d, 0x30, 0x08, 0x7d, 0x39, 0x64, 0x11, 0xfe, 0x7b, 0x85,
	0x5c, 0x2d, 0x7a, 0xf8, 0x10, 0x6a, 0xcc, 0xf8, 0x47, 0x85, 0x2c, 0x94, 0x06, 0x71, 0x8b, 0x0a,
	0x15, 0x82, 0xd0, 0x2a, 0xb7, 0x58, 0xb8, 0x8f, 0xff, 0x59, 0x21, 0x4b, 0xe8, 0xda, 0x5d, 0x69,
	0x8c, 0xbc, 0x7f, 0x55, 0xc8, 0x43, 0x45, 0xdb, 0xee, 0x76, 0xda, 0x90, 0xec, 0x4e, 0xf0, 0x3b,
	0xb1, 0x8c, 0x98, 0xc7, 0x78, 0x2c, 0x93, 0x3d, 0x7a, 0xc0, 0xd4, 0x18, 0xff, 0xbb, 0x42, 0x16,
	0xd1, 0x95, 0xe2, 0xca, 0x96, 0x0a, 0xeb, 0x0a, 0xea, 0xc3, 0x4d, 0x1a, 0x96, 0x1c, 0xfd, 0x4f,
	0xc9, 0x95, 0x5c, 0x2d, 0xf7, 0xf6, 0x4b, 0x54, 0xff, 0xad, 0xd8, 0xe9, 0xad, 0xb7, 0xb4, 0x95,
	0xdb, 0xcc, 0x13, 0xbc, 0xfb, 0x74, 0x28, 0xf1, 0x33, 0x55, 0xbb, 0xd6, 0x8f, 0x12, 0x18, 0x27,
	0xde, 0x5b, 0xb5, 0x7b, 0x2d, 0xdd, 0x4e, 0xb5, 0xce, 0x2d, 0xfc, 0xbe, 0xaa, 0xdd, 0x6b, 0xf9,
	0xb1, 0xe1, 0x7a, 0x7f, 0x95, 0x5c, 0x2a, 0xcf, 0xe5, 0x28, 0xd2, 0x11, 0xdf, 0x62, 0x52, 0xe1,
	0x0f, 0x54, 0xed, 0x7a, 0x3f, 0x82, 0x1b, 0x39, 0x1f, 0xac, 0xda, 0x29, 0xd9, 0xa5, 0xde, 0x2e,
	0x08, 0xb6, 0xc7, 0xb2, 0xed, 0xa8, 0x7d, 0xfd, 0x50, 0xd5, 0xae, 0x10, 0x1d, 0x91, 0xd6, 0x90,
	0x87, 0x70, 0x2b, 0x1e, 0xf5, 0x41, 0x68, 0xb2, 0x0f, 0x57, 0xed, 0xb2, 0xcd, 0x43, 0xfc, 0x14,
	0x5f, 0xa7, 0x49, 0x73, 0x6b, 0xa2, 0x8f, 0x54, 0xc9, 0x7c, 0x71, 0x0f, 0x48, 0x0b, 0xc5, 0x0d,
	0x68, 0xb8, 0x0d, 0x89, 0xa0, 0xb4, 0x94, 0x3e, 0x5a, 0xb5, 0x33, 0x35, 0x81, 0xc2, 0xd8, 0xfe,
	0xb1, 0x52, 0x0c, 0x36, 0xc3, 0x03, 0xa6, 0x20, 0xb9, 0x89, 0x74, 0xf9, 0x16, 0xef, 0xf7, 0xc7,
	0xf8, 0xe3, 0x55, 0x72, 0x03, 0x3d, 0x62, 0xc5, 0xe0, 0xf8, 0xc7, 0x5e, 0xbe, 0x07, 0x3e, 0x51,
	0x25, 0x6b, 0x68, 0xf9, 0x1e, 0x59, 0xb4, 0x19, 0x9f, 0xac, 0xda, 0x23, 0xe3, 0xf8, 0x67, 0x50,
	0xae, 0xe3, 0x53, 0x55, 0xb2, 0x8a, 0x96, 0xee, 0x85, 0x5e, 0x2b, 0x78, 0xb6, 0xba, 0xf4, 0x99,
	0x13, 0xe8, 0x85, 0x8d, 0xce, 0xed, 0xe2, 0x4d, 0x93, 0xfe, 0xee, 0xb9, 0x02, 0x92, 0x9b, 0xc0,
	0xd9, 0xd2, 0x61, 0xd6, 0xde, 0xf8, 0x1c, 0x39, 0x93, 0x96, 0x55, 0x76, 0x58, 0x07, 0xa9, 0x04,
	0x1f, 0xe3, 0x29, 0xbd, 0x06, 0x35, 0x7f, 0x32, 0xfb, 0x3b, 0x71, 0x5f, 0x7a, 0x82, 0xf5, 0xc1,
	0xc7, 0xd3, 0xfa, 0x5d, 0x63, 0xa1, 0x3b, 0xa1, 0x2c, 0xf0, 0x19, 0xbd, 0xc6, 0x6d, 0x45, 0xf9,
	0x2e, 0xc6, 0xe7, 0xf5, 0x1a, 0x3f, 0x2a, 0x3a, 0xca, 0x8a, 0x09, 0xbc, 0x7d, 0x7c, 0x41, 0xdf,
	0x17, 0x8e, 0x21, 0x6a, 0xc3, 0x9e, 0x00, 0x39, 0xc4, 0xb3, 0x7a, 0xa7, 0x4f, 0x34, 0x73, 0x27,
	0xea, 0xf2, 0x7a, 0xe2, 0xe2, 0xc5, 0xa5, 0x3f, 0x38, 0x08, 0x37, 0x9a, 0x6e, 0x32, 0x37, 0xcd,
	0x88, 0xd6, 0x63, 0x35, 0x1d, 0x66, 0xad, 0x74, 0x56, 0x67, 0x71, 0xff, 0xee, 0x94, 0xde, 0xa7,
	0x16, 0xa2, 0x23, 0xfc, 0xbd, 0x29, 0x3d, 0x1f, 0x53, 0x28, 0x93, 0x74, 0x07, 0x02, 0x8f, 0x8f,
	0x00, 0x7f, 0x6d, 0xce, 0xc6, 0x3a, 0xe9, 0xe3, 0x2a, 0xc7, 0xbe, 0x3e, 0x67, 0x2b, 0xcb, 0xf8,
	0x36, 0x20, 0x08, 0x38, 0xfe, 0x46, 0x09, 0xc9, 0xb8, 0x32, 0xe4, 0x9b, 0x73, 0x47, 0x75, 0x35,
	0x39, 0xf7, 0xfb, 0x63, 0xc0, 0xdf, 0x9a, 0xa0, 0x2b, 0xc7, 0xbe, 0x3d, 0xb7, 0xf4, 0xc7, 0x13,
	0x08, 0x35, 0x9a, 0x6e, 0x97, 0xa7, 0x95, 0x63, 0x46, 0xba, 0xfe, 0xce, 0x96, 0x55, 0xcd, 0xdb,
	0xc7, 0x9f, 0x75, 0x4c, 0x53, 0x1f, 0xc6, 0x8c, 0xcb, 0x9f, 0x2b, 0x16, 0x97, 0xa6, 0x49, 0x56,
	0x1b, 0xf8, 0xf8, 0xf3, 0xc5, 0xdd, 0xa2, 0x04, 0x64, 0x2f, 0xe2, 0x2f, 0xe4, 0x9b, 0x39, 0xb5,
	0x50, 0x6f, 0x92, 0xb8, 0x9f, 0x18, 0x9b, 0xae, 0x93, 0xe4, 0x81, 0x86, 0x9f, 0x73, 0xf4, 0x08,
	0x4d, 0x89, 0x74, 0xfc, 0x8f, 0x50, 0x7d, 0xd1, 0x21, 0x8f, 0xa4, 0x57, 0xa9, 0xbb, 0x51, 0x19,
	0x7b, 0xbf, 0x54, 0x2c, 0xf0, 0x92, 0x4f, 0xe9, 0x93, 0x38, 0x8e, 0x5c, 0x3e, 0x8a, 0xd2, 0xcb,
	0xcf, 0x97, 0xf3, 0x8b, 0x55, 0x2a, 0x35, 0x21, 0xed, 0xdc, 0x2e, 0xd7, 0x0f, 0xfe, 0x4a, 0xc9,
	0x07, 0x8b, 0xc4, 0xaa, 0x75, 0xfc, 0x55, 0xe7, 0xe6, 0x63, 0x1b, 0xce, 0x93, 0x2b, 0x03, 0xa6,
	0x86, 0x71, 0x7f, 0xc5, 0xe3, 0xa3, 0xd5, 0x1b, 0x8f, 0xee, 0xaf, 0x0e, 0xf8, 0x72, 0xfa, 0xd7,
	0xc9, 0xb2, 0x00, 0xc9, 0x63, 0xe1, 0x81, 0x5c, 0x4d, 0xff, 0x38, 0xeb, 0xc7, 0x7b, 0xab, 0x6a,
	0x6f, 0xed, 0x19, 0xe7, 0xbe, 0xff, 0x05, 0x00, 0x00, 0xff, 0xff, 0xd1, 0xa5, 0x6a, 0x1b, 0x57,
	0x13, 0x00, 0x00,
}
