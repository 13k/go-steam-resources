// Code generated by protoc-gen-go. DO NOT EDIT.
// source: netmessages.proto

package csgo // import "github.com/13k/go-steam-resources/protobuf/csgo"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/golang/protobuf/protoc-gen-go/descriptor"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type NET_Messages int32

const (
	NET_Messages_net_NOP              NET_Messages = 0
	NET_Messages_net_Disconnect       NET_Messages = 1
	NET_Messages_net_File             NET_Messages = 2
	NET_Messages_net_SplitScreenUser  NET_Messages = 3
	NET_Messages_net_Tick             NET_Messages = 4
	NET_Messages_net_StringCmd        NET_Messages = 5
	NET_Messages_net_SetConVar        NET_Messages = 6
	NET_Messages_net_SignonState      NET_Messages = 7
	NET_Messages_net_PlayerAvatarData NET_Messages = 100
)

var NET_Messages_name = map[int32]string{
	0:   "net_NOP",
	1:   "net_Disconnect",
	2:   "net_File",
	3:   "net_SplitScreenUser",
	4:   "net_Tick",
	5:   "net_StringCmd",
	6:   "net_SetConVar",
	7:   "net_SignonState",
	100: "net_PlayerAvatarData",
}
var NET_Messages_value = map[string]int32{
	"net_NOP":              0,
	"net_Disconnect":       1,
	"net_File":             2,
	"net_SplitScreenUser":  3,
	"net_Tick":             4,
	"net_StringCmd":        5,
	"net_SetConVar":        6,
	"net_SignonState":      7,
	"net_PlayerAvatarData": 100,
}

func (x NET_Messages) Enum() *NET_Messages {
	p := new(NET_Messages)
	*p = x
	return p
}
func (x NET_Messages) String() string {
	return proto.EnumName(NET_Messages_name, int32(x))
}
func (x *NET_Messages) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(NET_Messages_value, data, "NET_Messages")
	if err != nil {
		return err
	}
	*x = NET_Messages(value)
	return nil
}
func (NET_Messages) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_netmessages_c275cb4cc5a5e30a, []int{0}
}

type CLC_Messages int32

const (
	CLC_Messages_clc_ClientInfo         CLC_Messages = 8
	CLC_Messages_clc_Move               CLC_Messages = 9
	CLC_Messages_clc_VoiceData          CLC_Messages = 10
	CLC_Messages_clc_BaselineAck        CLC_Messages = 11
	CLC_Messages_clc_ListenEvents       CLC_Messages = 12
	CLC_Messages_clc_RespondCvarValue   CLC_Messages = 13
	CLC_Messages_clc_FileCRCCheck       CLC_Messages = 14
	CLC_Messages_clc_LoadingProgress    CLC_Messages = 15
	CLC_Messages_clc_SplitPlayerConnect CLC_Messages = 16
	CLC_Messages_clc_ClientMessage      CLC_Messages = 17
	CLC_Messages_clc_CmdKeyValues       CLC_Messages = 18
	CLC_Messages_clc_HltvReplay         CLC_Messages = 20
)

var CLC_Messages_name = map[int32]string{
	8:  "clc_ClientInfo",
	9:  "clc_Move",
	10: "clc_VoiceData",
	11: "clc_BaselineAck",
	12: "clc_ListenEvents",
	13: "clc_RespondCvarValue",
	14: "clc_FileCRCCheck",
	15: "clc_LoadingProgress",
	16: "clc_SplitPlayerConnect",
	17: "clc_ClientMessage",
	18: "clc_CmdKeyValues",
	20: "clc_HltvReplay",
}
var CLC_Messages_value = map[string]int32{
	"clc_ClientInfo":         8,
	"clc_Move":               9,
	"clc_VoiceData":          10,
	"clc_BaselineAck":        11,
	"clc_ListenEvents":       12,
	"clc_RespondCvarValue":   13,
	"clc_FileCRCCheck":       14,
	"clc_LoadingProgress":    15,
	"clc_SplitPlayerConnect": 16,
	"clc_ClientMessage":      17,
	"clc_CmdKeyValues":       18,
	"clc_HltvReplay":         20,
}

func (x CLC_Messages) Enum() *CLC_Messages {
	p := new(CLC_Messages)
	*p = x
	return p
}
func (x CLC_Messages) String() string {
	return proto.EnumName(CLC_Messages_name, int32(x))
}
func (x *CLC_Messages) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CLC_Messages_value, data, "CLC_Messages")
	if err != nil {
		return err
	}
	*x = CLC_Messages(value)
	return nil
}
func (CLC_Messages) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_netmessages_c275cb4cc5a5e30a, []int{1}
}

type VoiceDataFormatT int32

const (
	VoiceDataFormatT_VOICEDATA_FORMAT_STEAM  VoiceDataFormatT = 0
	VoiceDataFormatT_VOICEDATA_FORMAT_ENGINE VoiceDataFormatT = 1
)

var VoiceDataFormatT_name = map[int32]string{
	0: "VOICEDATA_FORMAT_STEAM",
	1: "VOICEDATA_FORMAT_ENGINE",
}
var VoiceDataFormatT_value = map[string]int32{
	"VOICEDATA_FORMAT_STEAM":  0,
	"VOICEDATA_FORMAT_ENGINE": 1,
}

func (x VoiceDataFormatT) Enum() *VoiceDataFormatT {
	p := new(VoiceDataFormatT)
	*p = x
	return p
}
func (x VoiceDataFormatT) String() string {
	return proto.EnumName(VoiceDataFormatT_name, int32(x))
}
func (x *VoiceDataFormatT) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(VoiceDataFormatT_value, data, "VoiceDataFormatT")
	if err != nil {
		return err
	}
	*x = VoiceDataFormatT(value)
	return nil
}
func (VoiceDataFormatT) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_netmessages_c275cb4cc5a5e30a, []int{2}
}

type ESplitScreenMessageType int32

const (
	ESplitScreenMessageType_MSG_SPLITSCREEN_ADDUSER    ESplitScreenMessageType = 0
	ESplitScreenMessageType_MSG_SPLITSCREEN_REMOVEUSER ESplitScreenMessageType = 1
	ESplitScreenMessageType_MSG_SPLITSCREEN_TYPE_BITS  ESplitScreenMessageType = 1
)

var ESplitScreenMessageType_name = map[int32]string{
	0: "MSG_SPLITSCREEN_ADDUSER",
	1: "MSG_SPLITSCREEN_REMOVEUSER",
	// Duplicate value: 1: "MSG_SPLITSCREEN_TYPE_BITS",
}
var ESplitScreenMessageType_value = map[string]int32{
	"MSG_SPLITSCREEN_ADDUSER":    0,
	"MSG_SPLITSCREEN_REMOVEUSER": 1,
	"MSG_SPLITSCREEN_TYPE_BITS":  1,
}

func (x ESplitScreenMessageType) Enum() *ESplitScreenMessageType {
	p := new(ESplitScreenMessageType)
	*p = x
	return p
}
func (x ESplitScreenMessageType) String() string {
	return proto.EnumName(ESplitScreenMessageType_name, int32(x))
}
func (x *ESplitScreenMessageType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ESplitScreenMessageType_value, data, "ESplitScreenMessageType")
	if err != nil {
		return err
	}
	*x = ESplitScreenMessageType(value)
	return nil
}
func (ESplitScreenMessageType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_netmessages_c275cb4cc5a5e30a, []int{3}
}

type SVC_Messages int32

const (
	SVC_Messages_svc_ServerInfo        SVC_Messages = 8
	SVC_Messages_svc_SendTable         SVC_Messages = 9
	SVC_Messages_svc_ClassInfo         SVC_Messages = 10
	SVC_Messages_svc_SetPause          SVC_Messages = 11
	SVC_Messages_svc_CreateStringTable SVC_Messages = 12
	SVC_Messages_svc_UpdateStringTable SVC_Messages = 13
	SVC_Messages_svc_VoiceInit         SVC_Messages = 14
	SVC_Messages_svc_VoiceData         SVC_Messages = 15
	SVC_Messages_svc_Print             SVC_Messages = 16
	SVC_Messages_svc_Sounds            SVC_Messages = 17
	SVC_Messages_svc_SetView           SVC_Messages = 18
	SVC_Messages_svc_FixAngle          SVC_Messages = 19
	SVC_Messages_svc_CrosshairAngle    SVC_Messages = 20
	SVC_Messages_svc_BSPDecal          SVC_Messages = 21
	SVC_Messages_svc_SplitScreen       SVC_Messages = 22
	SVC_Messages_svc_UserMessage       SVC_Messages = 23
	SVC_Messages_svc_EntityMessage     SVC_Messages = 24
	SVC_Messages_svc_GameEvent         SVC_Messages = 25
	SVC_Messages_svc_PacketEntities    SVC_Messages = 26
	SVC_Messages_svc_TempEntities      SVC_Messages = 27
	SVC_Messages_svc_Prefetch          SVC_Messages = 28
	SVC_Messages_svc_Menu              SVC_Messages = 29
	SVC_Messages_svc_GameEventList     SVC_Messages = 30
	SVC_Messages_svc_GetCvarValue      SVC_Messages = 31
	SVC_Messages_svc_PaintmapData      SVC_Messages = 33
	SVC_Messages_svc_CmdKeyValues      SVC_Messages = 34
	SVC_Messages_svc_EncryptedData     SVC_Messages = 35
	SVC_Messages_svc_HltvReplay        SVC_Messages = 36
	SVC_Messages_svc_Broadcast_Command SVC_Messages = 38
)

var SVC_Messages_name = map[int32]string{
	8:  "svc_ServerInfo",
	9:  "svc_SendTable",
	10: "svc_ClassInfo",
	11: "svc_SetPause",
	12: "svc_CreateStringTable",
	13: "svc_UpdateStringTable",
	14: "svc_VoiceInit",
	15: "svc_VoiceData",
	16: "svc_Print",
	17: "svc_Sounds",
	18: "svc_SetView",
	19: "svc_FixAngle",
	20: "svc_CrosshairAngle",
	21: "svc_BSPDecal",
	22: "svc_SplitScreen",
	23: "svc_UserMessage",
	24: "svc_EntityMessage",
	25: "svc_GameEvent",
	26: "svc_PacketEntities",
	27: "svc_TempEntities",
	28: "svc_Prefetch",
	29: "svc_Menu",
	30: "svc_GameEventList",
	31: "svc_GetCvarValue",
	33: "svc_PaintmapData",
	34: "svc_CmdKeyValues",
	35: "svc_EncryptedData",
	36: "svc_HltvReplay",
	38: "svc_Broadcast_Command",
}
var SVC_Messages_value = map[string]int32{
	"svc_ServerInfo":        8,
	"svc_SendTable":         9,
	"svc_ClassInfo":         10,
	"svc_SetPause":          11,
	"svc_CreateStringTable": 12,
	"svc_UpdateStringTable": 13,
	"svc_VoiceInit":         14,
	"svc_VoiceData":         15,
	"svc_Print":             16,
	"svc_Sounds":            17,
	"svc_SetView":           18,
	"svc_FixAngle":          19,
	"svc_CrosshairAngle":    20,
	"svc_BSPDecal":          21,
	"svc_SplitScreen":       22,
	"svc_UserMessage":       23,
	"svc_EntityMessage":     24,
	"svc_GameEvent":         25,
	"svc_PacketEntities":    26,
	"svc_TempEntities":      27,
	"svc_Prefetch":          28,
	"svc_Menu":              29,
	"svc_GameEventList":     30,
	"svc_GetCvarValue":      31,
	"svc_PaintmapData":      33,
	"svc_CmdKeyValues":      34,
	"svc_EncryptedData":     35,
	"svc_HltvReplay":        36,
	"svc_Broadcast_Command": 38,
}

func (x SVC_Messages) Enum() *SVC_Messages {
	p := new(SVC_Messages)
	*p = x
	return p
}
func (x SVC_Messages) String() string {
	return proto.EnumName(SVC_Messages_name, int32(x))
}
func (x *SVC_Messages) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(SVC_Messages_value, data, "SVC_Messages")
	if err != nil {
		return err
	}
	*x = SVC_Messages(value)
	return nil
}
func (SVC_Messages) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_netmessages_c275cb4cc5a5e30a, []int{4}
}

type ReplayEventTypeT int32

const (
	ReplayEventTypeT_REPLAY_EVENT_CANCEL                 ReplayEventTypeT = 0
	ReplayEventTypeT_REPLAY_EVENT_DEATH                  ReplayEventTypeT = 1
	ReplayEventTypeT_REPLAY_EVENT_GENERIC                ReplayEventTypeT = 2
	ReplayEventTypeT_REPLAY_EVENT_STUCK_NEED_FULL_UPDATE ReplayEventTypeT = 3
)

var ReplayEventTypeT_name = map[int32]string{
	0: "REPLAY_EVENT_CANCEL",
	1: "REPLAY_EVENT_DEATH",
	2: "REPLAY_EVENT_GENERIC",
	3: "REPLAY_EVENT_STUCK_NEED_FULL_UPDATE",
}
var ReplayEventTypeT_value = map[string]int32{
	"REPLAY_EVENT_CANCEL":                 0,
	"REPLAY_EVENT_DEATH":                  1,
	"REPLAY_EVENT_GENERIC":                2,
	"REPLAY_EVENT_STUCK_NEED_FULL_UPDATE": 3,
}

func (x ReplayEventTypeT) Enum() *ReplayEventTypeT {
	p := new(ReplayEventTypeT)
	*p = x
	return p
}
func (x ReplayEventTypeT) String() string {
	return proto.EnumName(ReplayEventTypeT_name, int32(x))
}
func (x *ReplayEventTypeT) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ReplayEventTypeT_value, data, "ReplayEventTypeT")
	if err != nil {
		return err
	}
	*x = ReplayEventTypeT(value)
	return nil
}
func (ReplayEventTypeT) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_netmessages_c275cb4cc5a5e30a, []int{5}
}

type CMsgVector struct {
	X                    *float32 `protobuf:"fixed32,1,opt,name=x" json:"x,omitempty"`
	Y                    *float32 `protobuf:"fixed32,2,opt,name=y" json:"y,omitempty"`
	Z                    *float32 `protobuf:"fixed32,3,opt,name=z" json:"z,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgVector) Reset()         { *m = CMsgVector{} }
func (m *CMsgVector) String() string { return proto.CompactTextString(m) }
func (*CMsgVector) ProtoMessage()    {}
func (*CMsgVector) Descriptor() ([]byte, []int) {
	return fileDescriptor_netmessages_c275cb4cc5a5e30a, []int{0}
}
func (m *CMsgVector) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgVector.Unmarshal(m, b)
}
func (m *CMsgVector) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgVector.Marshal(b, m, deterministic)
}
func (dst *CMsgVector) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgVector.Merge(dst, src)
}
func (m *CMsgVector) XXX_Size() int {
	return xxx_messageInfo_CMsgVector.Size(m)
}
func (m *CMsgVector) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgVector.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgVector proto.InternalMessageInfo

func (m *CMsgVector) GetX() float32 {
	if m != nil && m.X != nil {
		return *m.X
	}
	return 0
}

func (m *CMsgVector) GetY() float32 {
	if m != nil && m.Y != nil {
		return *m.Y
	}
	return 0
}

func (m *CMsgVector) GetZ() float32 {
	if m != nil && m.Z != nil {
		return *m.Z
	}
	return 0
}

type CMsgVector2D struct {
	X                    *float32 `protobuf:"fixed32,1,opt,name=x" json:"x,omitempty"`
	Y                    *float32 `protobuf:"fixed32,2,opt,name=y" json:"y,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgVector2D) Reset()         { *m = CMsgVector2D{} }
func (m *CMsgVector2D) String() string { return proto.CompactTextString(m) }
func (*CMsgVector2D) ProtoMessage()    {}
func (*CMsgVector2D) Descriptor() ([]byte, []int) {
	return fileDescriptor_netmessages_c275cb4cc5a5e30a, []int{1}
}
func (m *CMsgVector2D) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgVector2D.Unmarshal(m, b)
}
func (m *CMsgVector2D) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgVector2D.Marshal(b, m, deterministic)
}
func (dst *CMsgVector2D) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgVector2D.Merge(dst, src)
}
func (m *CMsgVector2D) XXX_Size() int {
	return xxx_messageInfo_CMsgVector2D.Size(m)
}
func (m *CMsgVector2D) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgVector2D.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgVector2D proto.InternalMessageInfo

func (m *CMsgVector2D) GetX() float32 {
	if m != nil && m.X != nil {
		return *m.X
	}
	return 0
}

func (m *CMsgVector2D) GetY() float32 {
	if m != nil && m.Y != nil {
		return *m.Y
	}
	return 0
}

type CMsgQAngle struct {
	X                    *float32 `protobuf:"fixed32,1,opt,name=x" json:"x,omitempty"`
	Y                    *float32 `protobuf:"fixed32,2,opt,name=y" json:"y,omitempty"`
	Z                    *float32 `protobuf:"fixed32,3,opt,name=z" json:"z,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgQAngle) Reset()         { *m = CMsgQAngle{} }
func (m *CMsgQAngle) String() string { return proto.CompactTextString(m) }
func (*CMsgQAngle) ProtoMessage()    {}
func (*CMsgQAngle) Descriptor() ([]byte, []int) {
	return fileDescriptor_netmessages_c275cb4cc5a5e30a, []int{2}
}
func (m *CMsgQAngle) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgQAngle.Unmarshal(m, b)
}
func (m *CMsgQAngle) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgQAngle.Marshal(b, m, deterministic)
}
func (dst *CMsgQAngle) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgQAngle.Merge(dst, src)
}
func (m *CMsgQAngle) XXX_Size() int {
	return xxx_messageInfo_CMsgQAngle.Size(m)
}
func (m *CMsgQAngle) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgQAngle.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgQAngle proto.InternalMessageInfo

func (m *CMsgQAngle) GetX() float32 {
	if m != nil && m.X != nil {
		return *m.X
	}
	return 0
}

func (m *CMsgQAngle) GetY() float32 {
	if m != nil && m.Y != nil {
		return *m.Y
	}
	return 0
}

func (m *CMsgQAngle) GetZ() float32 {
	if m != nil && m.Z != nil {
		return *m.Z
	}
	return 0
}

type CMsgRGBA struct {
	R                    *int32   `protobuf:"varint,1,opt,name=r" json:"r,omitempty"`
	G                    *int32   `protobuf:"varint,2,opt,name=g" json:"g,omitempty"`
	B                    *int32   `protobuf:"varint,3,opt,name=b" json:"b,omitempty"`
	A                    *int32   `protobuf:"varint,4,opt,name=a" json:"a,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgRGBA) Reset()         { *m = CMsgRGBA{} }
func (m *CMsgRGBA) String() string { return proto.CompactTextString(m) }
func (*CMsgRGBA) ProtoMessage()    {}
func (*CMsgRGBA) Descriptor() ([]byte, []int) {
	return fileDescriptor_netmessages_c275cb4cc5a5e30a, []int{3}
}
func (m *CMsgRGBA) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgRGBA.Unmarshal(m, b)
}
func (m *CMsgRGBA) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgRGBA.Marshal(b, m, deterministic)
}
func (dst *CMsgRGBA) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgRGBA.Merge(dst, src)
}
func (m *CMsgRGBA) XXX_Size() int {
	return xxx_messageInfo_CMsgRGBA.Size(m)
}
func (m *CMsgRGBA) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgRGBA.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgRGBA proto.InternalMessageInfo

func (m *CMsgRGBA) GetR() int32 {
	if m != nil && m.R != nil {
		return *m.R
	}
	return 0
}

func (m *CMsgRGBA) GetG() int32 {
	if m != nil && m.G != nil {
		return *m.G
	}
	return 0
}

func (m *CMsgRGBA) GetB() int32 {
	if m != nil && m.B != nil {
		return *m.B
	}
	return 0
}

func (m *CMsgRGBA) GetA() int32 {
	if m != nil && m.A != nil {
		return *m.A
	}
	return 0
}

type CNETMsg_Tick struct {
	Tick                            *uint32  `protobuf:"varint,1,opt,name=tick" json:"tick,omitempty"`
	HostComputationtime             *uint32  `protobuf:"varint,4,opt,name=host_computationtime,json=hostComputationtime" json:"host_computationtime,omitempty"`
	HostComputationtimeStdDeviation *uint32  `protobuf:"varint,5,opt,name=host_computationtime_std_deviation,json=hostComputationtimeStdDeviation" json:"host_computationtime_std_deviation,omitempty"`
	HostFramestarttimeStdDeviation  *uint32  `protobuf:"varint,6,opt,name=host_framestarttime_std_deviation,json=hostFramestarttimeStdDeviation" json:"host_framestarttime_std_deviation,omitempty"`
	HltvReplayFlags                 *uint32  `protobuf:"varint,7,opt,name=hltv_replay_flags,json=hltvReplayFlags" json:"hltv_replay_flags,omitempty"`
	XXX_NoUnkeyedLiteral            struct{} `json:"-"`
	XXX_unrecognized                []byte   `json:"-"`
	XXX_sizecache                   int32    `json:"-"`
}

func (m *CNETMsg_Tick) Reset()         { *m = CNETMsg_Tick{} }
func (m *CNETMsg_Tick) String() string { return proto.CompactTextString(m) }
func (*CNETMsg_Tick) ProtoMessage()    {}
func (*CNETMsg_Tick) Descriptor() ([]byte, []int) {
	return fileDescriptor_netmessages_c275cb4cc5a5e30a, []int{4}
}
func (m *CNETMsg_Tick) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CNETMsg_Tick.Unmarshal(m, b)
}
func (m *CNETMsg_Tick) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CNETMsg_Tick.Marshal(b, m, deterministic)
}
func (dst *CNETMsg_Tick) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CNETMsg_Tick.Merge(dst, src)
}
func (m *CNETMsg_Tick) XXX_Size() int {
	return xxx_messageInfo_CNETMsg_Tick.Size(m)
}
func (m *CNETMsg_Tick) XXX_DiscardUnknown() {
	xxx_messageInfo_CNETMsg_Tick.DiscardUnknown(m)
}

var xxx_messageInfo_CNETMsg_Tick proto.InternalMessageInfo

func (m *CNETMsg_Tick) GetTick() uint32 {
	if m != nil && m.Tick != nil {
		return *m.Tick
	}
	return 0
}

func (m *CNETMsg_Tick) GetHostComputationtime() uint32 {
	if m != nil && m.HostComputationtime != nil {
		return *m.HostComputationtime
	}
	return 0
}

func (m *CNETMsg_Tick) GetHostComputationtimeStdDeviation() uint32 {
	if m != nil && m.HostComputationtimeStdDeviation != nil {
		return *m.HostComputationtimeStdDeviation
	}
	return 0
}

func (m *CNETMsg_Tick) GetHostFramestarttimeStdDeviation() uint32 {
	if m != nil && m.HostFramestarttimeStdDeviation != nil {
		return *m.HostFramestarttimeStdDeviation
	}
	return 0
}

func (m *CNETMsg_Tick) GetHltvReplayFlags() uint32 {
	if m != nil && m.HltvReplayFlags != nil {
		return *m.HltvReplayFlags
	}
	return 0
}

type CNETMsg_StringCmd struct {
	Command              *string  `protobuf:"bytes,1,opt,name=command" json:"command,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CNETMsg_StringCmd) Reset()         { *m = CNETMsg_StringCmd{} }
func (m *CNETMsg_StringCmd) String() string { return proto.CompactTextString(m) }
func (*CNETMsg_StringCmd) ProtoMessage()    {}
func (*CNETMsg_StringCmd) Descriptor() ([]byte, []int) {
	return fileDescriptor_netmessages_c275cb4cc5a5e30a, []int{5}
}
func (m *CNETMsg_StringCmd) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CNETMsg_StringCmd.Unmarshal(m, b)
}
func (m *CNETMsg_StringCmd) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CNETMsg_StringCmd.Marshal(b, m, deterministic)
}
func (dst *CNETMsg_StringCmd) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CNETMsg_StringCmd.Merge(dst, src)
}
func (m *CNETMsg_StringCmd) XXX_Size() int {
	return xxx_messageInfo_CNETMsg_StringCmd.Size(m)
}
func (m *CNETMsg_StringCmd) XXX_DiscardUnknown() {
	xxx_messageInfo_CNETMsg_StringCmd.DiscardUnknown(m)
}

var xxx_messageInfo_CNETMsg_StringCmd proto.InternalMessageInfo

func (m *CNETMsg_StringCmd) GetCommand() string {
	if m != nil && m.Command != nil {
		return *m.Command
	}
	return ""
}

type CNETMsg_SignonState struct {
	SignonState          *uint32  `protobuf:"varint,1,opt,name=signon_state,json=signonState" json:"signon_state,omitempty"`
	SpawnCount           *uint32  `protobuf:"varint,2,opt,name=spawn_count,json=spawnCount" json:"spawn_count,omitempty"`
	NumServerPlayers     *uint32  `protobuf:"varint,3,opt,name=num_server_players,json=numServerPlayers" json:"num_server_players,omitempty"`
	PlayersNetworkids    []string `protobuf:"bytes,4,rep,name=players_networkids,json=playersNetworkids" json:"players_networkids,omitempty"`
	MapName              *string  `protobuf:"bytes,5,opt,name=map_name,json=mapName" json:"map_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CNETMsg_SignonState) Reset()         { *m = CNETMsg_SignonState{} }
func (m *CNETMsg_SignonState) String() string { return proto.CompactTextString(m) }
func (*CNETMsg_SignonState) ProtoMessage()    {}
func (*CNETMsg_SignonState) Descriptor() ([]byte, []int) {
	return fileDescriptor_netmessages_c275cb4cc5a5e30a, []int{6}
}
func (m *CNETMsg_SignonState) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CNETMsg_SignonState.Unmarshal(m, b)
}
func (m *CNETMsg_SignonState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CNETMsg_SignonState.Marshal(b, m, deterministic)
}
func (dst *CNETMsg_SignonState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CNETMsg_SignonState.Merge(dst, src)
}
func (m *CNETMsg_SignonState) XXX_Size() int {
	return xxx_messageInfo_CNETMsg_SignonState.Size(m)
}
func (m *CNETMsg_SignonState) XXX_DiscardUnknown() {
	xxx_messageInfo_CNETMsg_SignonState.DiscardUnknown(m)
}

var xxx_messageInfo_CNETMsg_SignonState proto.InternalMessageInfo

func (m *CNETMsg_SignonState) GetSignonState() uint32 {
	if m != nil && m.SignonState != nil {
		return *m.SignonState
	}
	return 0
}

func (m *CNETMsg_SignonState) GetSpawnCount() uint32 {
	if m != nil && m.SpawnCount != nil {
		return *m.SpawnCount
	}
	return 0
}

func (m *CNETMsg_SignonState) GetNumServerPlayers() uint32 {
	if m != nil && m.NumServerPlayers != nil {
		return *m.NumServerPlayers
	}
	return 0
}

func (m *CNETMsg_SignonState) GetPlayersNetworkids() []string {
	if m != nil {
		return m.PlayersNetworkids
	}
	return nil
}

func (m *CNETMsg_SignonState) GetMapName() string {
	if m != nil && m.MapName != nil {
		return *m.MapName
	}
	return ""
}

type CMsg_CVars struct {
	Cvars                []*CMsg_CVars_CVar `protobuf:"bytes,1,rep,name=cvars" json:"cvars,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *CMsg_CVars) Reset()         { *m = CMsg_CVars{} }
func (m *CMsg_CVars) String() string { return proto.CompactTextString(m) }
func (*CMsg_CVars) ProtoMessage()    {}
func (*CMsg_CVars) Descriptor() ([]byte, []int) {
	return fileDescriptor_netmessages_c275cb4cc5a5e30a, []int{7}
}
func (m *CMsg_CVars) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsg_CVars.Unmarshal(m, b)
}
func (m *CMsg_CVars) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsg_CVars.Marshal(b, m, deterministic)
}
func (dst *CMsg_CVars) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsg_CVars.Merge(dst, src)
}
func (m *CMsg_CVars) XXX_Size() int {
	return xxx_messageInfo_CMsg_CVars.Size(m)
}
func (m *CMsg_CVars) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsg_CVars.DiscardUnknown(m)
}

var xxx_messageInfo_CMsg_CVars proto.InternalMessageInfo

func (m *CMsg_CVars) GetCvars() []*CMsg_CVars_CVar {
	if m != nil {
		return m.Cvars
	}
	return nil
}

type CMsg_CVars_CVar struct {
	Name                 *string  `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Value                *string  `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
	DictionaryName       *uint32  `protobuf:"varint,3,opt,name=dictionary_name,json=dictionaryName" json:"dictionary_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsg_CVars_CVar) Reset()         { *m = CMsg_CVars_CVar{} }
func (m *CMsg_CVars_CVar) String() string { return proto.CompactTextString(m) }
func (*CMsg_CVars_CVar) ProtoMessage()    {}
func (*CMsg_CVars_CVar) Descriptor() ([]byte, []int) {
	return fileDescriptor_netmessages_c275cb4cc5a5e30a, []int{7, 0}
}
func (m *CMsg_CVars_CVar) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsg_CVars_CVar.Unmarshal(m, b)
}
func (m *CMsg_CVars_CVar) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsg_CVars_CVar.Marshal(b, m, deterministic)
}
func (dst *CMsg_CVars_CVar) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsg_CVars_CVar.Merge(dst, src)
}
func (m *CMsg_CVars_CVar) XXX_Size() int {
	return xxx_messageInfo_CMsg_CVars_CVar.Size(m)
}
func (m *CMsg_CVars_CVar) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsg_CVars_CVar.DiscardUnknown(m)
}

var xxx_messageInfo_CMsg_CVars_CVar proto.InternalMessageInfo

func (m *CMsg_CVars_CVar) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *CMsg_CVars_CVar) GetValue() string {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return ""
}

func (m *CMsg_CVars_CVar) GetDictionaryName() uint32 {
	if m != nil && m.DictionaryName != nil {
		return *m.DictionaryName
	}
	return 0
}

type CNETMsg_SetConVar struct {
	Convars              *CMsg_CVars `protobuf:"bytes,1,opt,name=convars" json:"convars,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *CNETMsg_SetConVar) Reset()         { *m = CNETMsg_SetConVar{} }
func (m *CNETMsg_SetConVar) String() string { return proto.CompactTextString(m) }
func (*CNETMsg_SetConVar) ProtoMessage()    {}
func (*CNETMsg_SetConVar) Descriptor() ([]byte, []int) {
	return fileDescriptor_netmessages_c275cb4cc5a5e30a, []int{8}
}
func (m *CNETMsg_SetConVar) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CNETMsg_SetConVar.Unmarshal(m, b)
}
func (m *CNETMsg_SetConVar) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CNETMsg_SetConVar.Marshal(b, m, deterministic)
}
func (dst *CNETMsg_SetConVar) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CNETMsg_SetConVar.Merge(dst, src)
}
func (m *CNETMsg_SetConVar) XXX_Size() int {
	return xxx_messageInfo_CNETMsg_SetConVar.Size(m)
}
func (m *CNETMsg_SetConVar) XXX_DiscardUnknown() {
	xxx_messageInfo_CNETMsg_SetConVar.DiscardUnknown(m)
}

var xxx_messageInfo_CNETMsg_SetConVar proto.InternalMessageInfo

func (m *CNETMsg_SetConVar) GetConvars() *CMsg_CVars {
	if m != nil {
		return m.Convars
	}
	return nil
}

type CNETMsg_NOP struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CNETMsg_NOP) Reset()         { *m = CNETMsg_NOP{} }
func (m *CNETMsg_NOP) String() string { return proto.CompactTextString(m) }
func (*CNETMsg_NOP) ProtoMessage()    {}
func (*CNETMsg_NOP) Descriptor() ([]byte, []int) {
	return fileDescriptor_netmessages_c275cb4cc5a5e30a, []int{9}
}
func (m *CNETMsg_NOP) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CNETMsg_NOP.Unmarshal(m, b)
}
func (m *CNETMsg_NOP) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CNETMsg_NOP.Marshal(b, m, deterministic)
}
func (dst *CNETMsg_NOP) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CNETMsg_NOP.Merge(dst, src)
}
func (m *CNETMsg_NOP) XXX_Size() int {
	return xxx_messageInfo_CNETMsg_NOP.Size(m)
}
func (m *CNETMsg_NOP) XXX_DiscardUnknown() {
	xxx_messageInfo_CNETMsg_NOP.DiscardUnknown(m)
}

var xxx_messageInfo_CNETMsg_NOP proto.InternalMessageInfo

type CNETMsg_Disconnect struct {
	Text                 *string  `protobuf:"bytes,1,opt,name=text" json:"text,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CNETMsg_Disconnect) Reset()         { *m = CNETMsg_Disconnect{} }
func (m *CNETMsg_Disconnect) String() string { return proto.CompactTextString(m) }
func (*CNETMsg_Disconnect) ProtoMessage()    {}
func (*CNETMsg_Disconnect) Descriptor() ([]byte, []int) {
	return fileDescriptor_netmessages_c275cb4cc5a5e30a, []int{10}
}
func (m *CNETMsg_Disconnect) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CNETMsg_Disconnect.Unmarshal(m, b)
}
func (m *CNETMsg_Disconnect) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CNETMsg_Disconnect.Marshal(b, m, deterministic)
}
func (dst *CNETMsg_Disconnect) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CNETMsg_Disconnect.Merge(dst, src)
}
func (m *CNETMsg_Disconnect) XXX_Size() int {
	return xxx_messageInfo_CNETMsg_Disconnect.Size(m)
}
func (m *CNETMsg_Disconnect) XXX_DiscardUnknown() {
	xxx_messageInfo_CNETMsg_Disconnect.DiscardUnknown(m)
}

var xxx_messageInfo_CNETMsg_Disconnect proto.InternalMessageInfo

func (m *CNETMsg_Disconnect) GetText() string {
	if m != nil && m.Text != nil {
		return *m.Text
	}
	return ""
}

type CNETMsg_File struct {
	TransferId           *int32   `protobuf:"varint,1,opt,name=transfer_id,json=transferId" json:"transfer_id,omitempty"`
	FileName             *string  `protobuf:"bytes,2,opt,name=file_name,json=fileName" json:"file_name,omitempty"`
	IsReplayDemoFile     *bool    `protobuf:"varint,3,opt,name=is_replay_demo_file,json=isReplayDemoFile" json:"is_replay_demo_file,omitempty"`
	Deny                 *bool    `protobuf:"varint,4,opt,name=deny" json:"deny,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CNETMsg_File) Reset()         { *m = CNETMsg_File{} }
func (m *CNETMsg_File) String() string { return proto.CompactTextString(m) }
func (*CNETMsg_File) ProtoMessage()    {}
func (*CNETMsg_File) Descriptor() ([]byte, []int) {
	return fileDescriptor_netmessages_c275cb4cc5a5e30a, []int{11}
}
func (m *CNETMsg_File) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CNETMsg_File.Unmarshal(m, b)
}
func (m *CNETMsg_File) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CNETMsg_File.Marshal(b, m, deterministic)
}
func (dst *CNETMsg_File) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CNETMsg_File.Merge(dst, src)
}
func (m *CNETMsg_File) XXX_Size() int {
	return xxx_messageInfo_CNETMsg_File.Size(m)
}
func (m *CNETMsg_File) XXX_DiscardUnknown() {
	xxx_messageInfo_CNETMsg_File.DiscardUnknown(m)
}

var xxx_messageInfo_CNETMsg_File proto.InternalMessageInfo

func (m *CNETMsg_File) GetTransferId() int32 {
	if m != nil && m.TransferId != nil {
		return *m.TransferId
	}
	return 0
}

func (m *CNETMsg_File) GetFileName() string {
	if m != nil && m.FileName != nil {
		return *m.FileName
	}
	return ""
}

func (m *CNETMsg_File) GetIsReplayDemoFile() bool {
	if m != nil && m.IsReplayDemoFile != nil {
		return *m.IsReplayDemoFile
	}
	return false
}

func (m *CNETMsg_File) GetDeny() bool {
	if m != nil && m.Deny != nil {
		return *m.Deny
	}
	return false
}

type CNETMsg_SplitScreenUser struct {
	Slot                 *int32   `protobuf:"varint,1,opt,name=slot" json:"slot,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CNETMsg_SplitScreenUser) Reset()         { *m = CNETMsg_SplitScreenUser{} }
func (m *CNETMsg_SplitScreenUser) String() string { return proto.CompactTextString(m) }
func (*CNETMsg_SplitScreenUser) ProtoMessage()    {}
func (*CNETMsg_SplitScreenUser) Descriptor() ([]byte, []int) {
	return fileDescriptor_netmessages_c275cb4cc5a5e30a, []int{12}
}
func (m *CNETMsg_SplitScreenUser) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CNETMsg_SplitScreenUser.Unmarshal(m, b)
}
func (m *CNETMsg_SplitScreenUser) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CNETMsg_SplitScreenUser.Marshal(b, m, deterministic)
}
func (dst *CNETMsg_SplitScreenUser) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CNETMsg_SplitScreenUser.Merge(dst, src)
}
func (m *CNETMsg_SplitScreenUser) XXX_Size() int {
	return xxx_messageInfo_CNETMsg_SplitScreenUser.Size(m)
}
func (m *CNETMsg_SplitScreenUser) XXX_DiscardUnknown() {
	xxx_messageInfo_CNETMsg_SplitScreenUser.DiscardUnknown(m)
}

var xxx_messageInfo_CNETMsg_SplitScreenUser proto.InternalMessageInfo

func (m *CNETMsg_SplitScreenUser) GetSlot() int32 {
	if m != nil && m.Slot != nil {
		return *m.Slot
	}
	return 0
}

type CNETMsg_PlayerAvatarData struct {
	Accountid            *uint32  `protobuf:"varint,1,opt,name=accountid" json:"accountid,omitempty"`
	Rgb                  []byte   `protobuf:"bytes,2,opt,name=rgb" json:"rgb,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CNETMsg_PlayerAvatarData) Reset()         { *m = CNETMsg_PlayerAvatarData{} }
func (m *CNETMsg_PlayerAvatarData) String() string { return proto.CompactTextString(m) }
func (*CNETMsg_PlayerAvatarData) ProtoMessage()    {}
func (*CNETMsg_PlayerAvatarData) Descriptor() ([]byte, []int) {
	return fileDescriptor_netmessages_c275cb4cc5a5e30a, []int{13}
}
func (m *CNETMsg_PlayerAvatarData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CNETMsg_PlayerAvatarData.Unmarshal(m, b)
}
func (m *CNETMsg_PlayerAvatarData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CNETMsg_PlayerAvatarData.Marshal(b, m, deterministic)
}
func (dst *CNETMsg_PlayerAvatarData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CNETMsg_PlayerAvatarData.Merge(dst, src)
}
func (m *CNETMsg_PlayerAvatarData) XXX_Size() int {
	return xxx_messageInfo_CNETMsg_PlayerAvatarData.Size(m)
}
func (m *CNETMsg_PlayerAvatarData) XXX_DiscardUnknown() {
	xxx_messageInfo_CNETMsg_PlayerAvatarData.DiscardUnknown(m)
}

var xxx_messageInfo_CNETMsg_PlayerAvatarData proto.InternalMessageInfo

func (m *CNETMsg_PlayerAvatarData) GetAccountid() uint32 {
	if m != nil && m.Accountid != nil {
		return *m.Accountid
	}
	return 0
}

func (m *CNETMsg_PlayerAvatarData) GetRgb() []byte {
	if m != nil {
		return m.Rgb
	}
	return nil
}

type CCLCMsg_ClientInfo struct {
	SendTableCrc         *uint32  `protobuf:"fixed32,1,opt,name=send_table_crc,json=sendTableCrc" json:"send_table_crc,omitempty"`
	ServerCount          *uint32  `protobuf:"varint,2,opt,name=server_count,json=serverCount" json:"server_count,omitempty"`
	IsHltv               *bool    `protobuf:"varint,3,opt,name=is_hltv,json=isHltv" json:"is_hltv,omitempty"`
	IsReplay             *bool    `protobuf:"varint,4,opt,name=is_replay,json=isReplay" json:"is_replay,omitempty"`
	FriendsId            *uint32  `protobuf:"varint,5,opt,name=friends_id,json=friendsId" json:"friends_id,omitempty"`
	FriendsName          *string  `protobuf:"bytes,6,opt,name=friends_name,json=friendsName" json:"friends_name,omitempty"`
	CustomFiles          []uint32 `protobuf:"fixed32,7,rep,name=custom_files,json=customFiles" json:"custom_files,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CCLCMsg_ClientInfo) Reset()         { *m = CCLCMsg_ClientInfo{} }
func (m *CCLCMsg_ClientInfo) String() string { return proto.CompactTextString(m) }
func (*CCLCMsg_ClientInfo) ProtoMessage()    {}
func (*CCLCMsg_ClientInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_netmessages_c275cb4cc5a5e30a, []int{14}
}
func (m *CCLCMsg_ClientInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CCLCMsg_ClientInfo.Unmarshal(m, b)
}
func (m *CCLCMsg_ClientInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CCLCMsg_ClientInfo.Marshal(b, m, deterministic)
}
func (dst *CCLCMsg_ClientInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CCLCMsg_ClientInfo.Merge(dst, src)
}
func (m *CCLCMsg_ClientInfo) XXX_Size() int {
	return xxx_messageInfo_CCLCMsg_ClientInfo.Size(m)
}
func (m *CCLCMsg_ClientInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_CCLCMsg_ClientInfo.DiscardUnknown(m)
}

var xxx_messageInfo_CCLCMsg_ClientInfo proto.InternalMessageInfo

func (m *CCLCMsg_ClientInfo) GetSendTableCrc() uint32 {
	if m != nil && m.SendTableCrc != nil {
		return *m.SendTableCrc
	}
	return 0
}

func (m *CCLCMsg_ClientInfo) GetServerCount() uint32 {
	if m != nil && m.ServerCount != nil {
		return *m.ServerCount
	}
	return 0
}

func (m *CCLCMsg_ClientInfo) GetIsHltv() bool {
	if m != nil && m.IsHltv != nil {
		return *m.IsHltv
	}
	return false
}

func (m *CCLCMsg_ClientInfo) GetIsReplay() bool {
	if m != nil && m.IsReplay != nil {
		return *m.IsReplay
	}
	return false
}

func (m *CCLCMsg_ClientInfo) GetFriendsId() uint32 {
	if m != nil && m.FriendsId != nil {
		return *m.FriendsId
	}
	return 0
}

func (m *CCLCMsg_ClientInfo) GetFriendsName() string {
	if m != nil && m.FriendsName != nil {
		return *m.FriendsName
	}
	return ""
}

func (m *CCLCMsg_ClientInfo) GetCustomFiles() []uint32 {
	if m != nil {
		return m.CustomFiles
	}
	return nil
}

type CCLCMsg_Move struct {
	NumBackupCommands    *uint32  `protobuf:"varint,1,opt,name=num_backup_commands,json=numBackupCommands" json:"num_backup_commands,omitempty"`
	NumNewCommands       *uint32  `protobuf:"varint,2,opt,name=num_new_commands,json=numNewCommands" json:"num_new_commands,omitempty"`
	Data                 []byte   `protobuf:"bytes,3,opt,name=data" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CCLCMsg_Move) Reset()         { *m = CCLCMsg_Move{} }
func (m *CCLCMsg_Move) String() string { return proto.CompactTextString(m) }
func (*CCLCMsg_Move) ProtoMessage()    {}
func (*CCLCMsg_Move) Descriptor() ([]byte, []int) {
	return fileDescriptor_netmessages_c275cb4cc5a5e30a, []int{15}
}
func (m *CCLCMsg_Move) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CCLCMsg_Move.Unmarshal(m, b)
}
func (m *CCLCMsg_Move) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CCLCMsg_Move.Marshal(b, m, deterministic)
}
func (dst *CCLCMsg_Move) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CCLCMsg_Move.Merge(dst, src)
}
func (m *CCLCMsg_Move) XXX_Size() int {
	return xxx_messageInfo_CCLCMsg_Move.Size(m)
}
func (m *CCLCMsg_Move) XXX_DiscardUnknown() {
	xxx_messageInfo_CCLCMsg_Move.DiscardUnknown(m)
}

var xxx_messageInfo_CCLCMsg_Move proto.InternalMessageInfo

func (m *CCLCMsg_Move) GetNumBackupCommands() uint32 {
	if m != nil && m.NumBackupCommands != nil {
		return *m.NumBackupCommands
	}
	return 0
}

func (m *CCLCMsg_Move) GetNumNewCommands() uint32 {
	if m != nil && m.NumNewCommands != nil {
		return *m.NumNewCommands
	}
	return 0
}

func (m *CCLCMsg_Move) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type CCLCMsg_VoiceData struct {
	Data                     []byte            `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Xuid                     *uint64           `protobuf:"fixed64,2,opt,name=xuid" json:"xuid,omitempty"`
	Format                   *VoiceDataFormatT `protobuf:"varint,3,opt,name=format,enum=VoiceDataFormatT,def=1" json:"format,omitempty"`
	SequenceBytes            *int32            `protobuf:"varint,4,opt,name=sequence_bytes,json=sequenceBytes" json:"sequence_bytes,omitempty"`
	SectionNumber            *uint32           `protobuf:"varint,5,opt,name=section_number,json=sectionNumber" json:"section_number,omitempty"`
	UncompressedSampleOffset *uint32           `protobuf:"varint,6,opt,name=uncompressed_sample_offset,json=uncompressedSampleOffset" json:"uncompressed_sample_offset,omitempty"`
	XXX_NoUnkeyedLiteral     struct{}          `json:"-"`
	XXX_unrecognized         []byte            `json:"-"`
	XXX_sizecache            int32             `json:"-"`
}

func (m *CCLCMsg_VoiceData) Reset()         { *m = CCLCMsg_VoiceData{} }
func (m *CCLCMsg_VoiceData) String() string { return proto.CompactTextString(m) }
func (*CCLCMsg_VoiceData) ProtoMessage()    {}
func (*CCLCMsg_VoiceData) Descriptor() ([]byte, []int) {
	return fileDescriptor_netmessages_c275cb4cc5a5e30a, []int{16}
}
func (m *CCLCMsg_VoiceData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CCLCMsg_VoiceData.Unmarshal(m, b)
}
func (m *CCLCMsg_VoiceData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CCLCMsg_VoiceData.Marshal(b, m, deterministic)
}
func (dst *CCLCMsg_VoiceData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CCLCMsg_VoiceData.Merge(dst, src)
}
func (m *CCLCMsg_VoiceData) XXX_Size() int {
	return xxx_messageInfo_CCLCMsg_VoiceData.Size(m)
}
func (m *CCLCMsg_VoiceData) XXX_DiscardUnknown() {
	xxx_messageInfo_CCLCMsg_VoiceData.DiscardUnknown(m)
}

var xxx_messageInfo_CCLCMsg_VoiceData proto.InternalMessageInfo

const Default_CCLCMsg_VoiceData_Format VoiceDataFormatT = VoiceDataFormatT_VOICEDATA_FORMAT_ENGINE

func (m *CCLCMsg_VoiceData) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *CCLCMsg_VoiceData) GetXuid() uint64 {
	if m != nil && m.Xuid != nil {
		return *m.Xuid
	}
	return 0
}

func (m *CCLCMsg_VoiceData) GetFormat() VoiceDataFormatT {
	if m != nil && m.Format != nil {
		return *m.Format
	}
	return Default_CCLCMsg_VoiceData_Format
}

func (m *CCLCMsg_VoiceData) GetSequenceBytes() int32 {
	if m != nil && m.SequenceBytes != nil {
		return *m.SequenceBytes
	}
	return 0
}

func (m *CCLCMsg_VoiceData) GetSectionNumber() uint32 {
	if m != nil && m.SectionNumber != nil {
		return *m.SectionNumber
	}
	return 0
}

func (m *CCLCMsg_VoiceData) GetUncompressedSampleOffset() uint32 {
	if m != nil && m.UncompressedSampleOffset != nil {
		return *m.UncompressedSampleOffset
	}
	return 0
}

type CCLCMsg_BaselineAck struct {
	BaselineTick         *int32   `protobuf:"varint,1,opt,name=baseline_tick,json=baselineTick" json:"baseline_tick,omitempty"`
	BaselineNr           *int32   `protobuf:"varint,2,opt,name=baseline_nr,json=baselineNr" json:"baseline_nr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CCLCMsg_BaselineAck) Reset()         { *m = CCLCMsg_BaselineAck{} }
func (m *CCLCMsg_BaselineAck) String() string { return proto.CompactTextString(m) }
func (*CCLCMsg_BaselineAck) ProtoMessage()    {}
func (*CCLCMsg_BaselineAck) Descriptor() ([]byte, []int) {
	return fileDescriptor_netmessages_c275cb4cc5a5e30a, []int{17}
}
func (m *CCLCMsg_BaselineAck) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CCLCMsg_BaselineAck.Unmarshal(m, b)
}
func (m *CCLCMsg_BaselineAck) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CCLCMsg_BaselineAck.Marshal(b, m, deterministic)
}
func (dst *CCLCMsg_BaselineAck) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CCLCMsg_BaselineAck.Merge(dst, src)
}
func (m *CCLCMsg_BaselineAck) XXX_Size() int {
	return xxx_messageInfo_CCLCMsg_BaselineAck.Size(m)
}
func (m *CCLCMsg_BaselineAck) XXX_DiscardUnknown() {
	xxx_messageInfo_CCLCMsg_BaselineAck.DiscardUnknown(m)
}

var xxx_messageInfo_CCLCMsg_BaselineAck proto.InternalMessageInfo

func (m *CCLCMsg_BaselineAck) GetBaselineTick() int32 {
	if m != nil && m.BaselineTick != nil {
		return *m.BaselineTick
	}
	return 0
}

func (m *CCLCMsg_BaselineAck) GetBaselineNr() int32 {
	if m != nil && m.BaselineNr != nil {
		return *m.BaselineNr
	}
	return 0
}

type CCLCMsg_ListenEvents struct {
	EventMask            []uint32 `protobuf:"fixed32,1,rep,name=event_mask,json=eventMask" json:"event_mask,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CCLCMsg_ListenEvents) Reset()         { *m = CCLCMsg_ListenEvents{} }
func (m *CCLCMsg_ListenEvents) String() string { return proto.CompactTextString(m) }
func (*CCLCMsg_ListenEvents) ProtoMessage()    {}
func (*CCLCMsg_ListenEvents) Descriptor() ([]byte, []int) {
	return fileDescriptor_netmessages_c275cb4cc5a5e30a, []int{18}
}
func (m *CCLCMsg_ListenEvents) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CCLCMsg_ListenEvents.Unmarshal(m, b)
}
func (m *CCLCMsg_ListenEvents) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CCLCMsg_ListenEvents.Marshal(b, m, deterministic)
}
func (dst *CCLCMsg_ListenEvents) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CCLCMsg_ListenEvents.Merge(dst, src)
}
func (m *CCLCMsg_ListenEvents) XXX_Size() int {
	return xxx_messageInfo_CCLCMsg_ListenEvents.Size(m)
}
func (m *CCLCMsg_ListenEvents) XXX_DiscardUnknown() {
	xxx_messageInfo_CCLCMsg_ListenEvents.DiscardUnknown(m)
}

var xxx_messageInfo_CCLCMsg_ListenEvents proto.InternalMessageInfo

func (m *CCLCMsg_ListenEvents) GetEventMask() []uint32 {
	if m != nil {
		return m.EventMask
	}
	return nil
}

type CCLCMsg_RespondCvarValue struct {
	Cookie               *int32   `protobuf:"varint,1,opt,name=cookie" json:"cookie,omitempty"`
	StatusCode           *int32   `protobuf:"varint,2,opt,name=status_code,json=statusCode" json:"status_code,omitempty"`
	Name                 *string  `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	Value                *string  `protobuf:"bytes,4,opt,name=value" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CCLCMsg_RespondCvarValue) Reset()         { *m = CCLCMsg_RespondCvarValue{} }
func (m *CCLCMsg_RespondCvarValue) String() string { return proto.CompactTextString(m) }
func (*CCLCMsg_RespondCvarValue) ProtoMessage()    {}
func (*CCLCMsg_RespondCvarValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_netmessages_c275cb4cc5a5e30a, []int{19}
}
func (m *CCLCMsg_RespondCvarValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CCLCMsg_RespondCvarValue.Unmarshal(m, b)
}
func (m *CCLCMsg_RespondCvarValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CCLCMsg_RespondCvarValue.Marshal(b, m, deterministic)
}
func (dst *CCLCMsg_RespondCvarValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CCLCMsg_RespondCvarValue.Merge(dst, src)
}
func (m *CCLCMsg_RespondCvarValue) XXX_Size() int {
	return xxx_messageInfo_CCLCMsg_RespondCvarValue.Size(m)
}
func (m *CCLCMsg_RespondCvarValue) XXX_DiscardUnknown() {
	xxx_messageInfo_CCLCMsg_RespondCvarValue.DiscardUnknown(m)
}

var xxx_messageInfo_CCLCMsg_RespondCvarValue proto.InternalMessageInfo

func (m *CCLCMsg_RespondCvarValue) GetCookie() int32 {
	if m != nil && m.Cookie != nil {
		return *m.Cookie
	}
	return 0
}

func (m *CCLCMsg_RespondCvarValue) GetStatusCode() int32 {
	if m != nil && m.StatusCode != nil {
		return *m.StatusCode
	}
	return 0
}

func (m *CCLCMsg_RespondCvarValue) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *CCLCMsg_RespondCvarValue) GetValue() string {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return ""
}

type CCLCMsg_FileCRCCheck struct {
	CodePath             *int32   `protobuf:"varint,1,opt,name=code_path,json=codePath" json:"code_path,omitempty"`
	Path                 *string  `protobuf:"bytes,2,opt,name=path" json:"path,omitempty"`
	CodeFilename         *int32   `protobuf:"varint,3,opt,name=code_filename,json=codeFilename" json:"code_filename,omitempty"`
	Filename             *string  `protobuf:"bytes,4,opt,name=filename" json:"filename,omitempty"`
	FileFraction         *int32   `protobuf:"varint,5,opt,name=file_fraction,json=fileFraction" json:"file_fraction,omitempty"`
	Md5                  []byte   `protobuf:"bytes,6,opt,name=md5" json:"md5,omitempty"`
	Crc                  *uint32  `protobuf:"varint,7,opt,name=crc" json:"crc,omitempty"`
	FileHashType         *int32   `protobuf:"varint,8,opt,name=file_hash_type,json=fileHashType" json:"file_hash_type,omitempty"`
	FileLen              *int32   `protobuf:"varint,9,opt,name=file_len,json=fileLen" json:"file_len,omitempty"`
	PackFileId           *int32   `protobuf:"varint,10,opt,name=pack_file_id,json=packFileId" json:"pack_file_id,omitempty"`
	PackFileNumber       *int32   `protobuf:"varint,11,opt,name=pack_file_number,json=packFileNumber" json:"pack_file_number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CCLCMsg_FileCRCCheck) Reset()         { *m = CCLCMsg_FileCRCCheck{} }
func (m *CCLCMsg_FileCRCCheck) String() string { return proto.CompactTextString(m) }
func (*CCLCMsg_FileCRCCheck) ProtoMessage()    {}
func (*CCLCMsg_FileCRCCheck) Descriptor() ([]byte, []int) {
	return fileDescriptor_netmessages_c275cb4cc5a5e30a, []int{20}
}
func (m *CCLCMsg_FileCRCCheck) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CCLCMsg_FileCRCCheck.Unmarshal(m, b)
}
func (m *CCLCMsg_FileCRCCheck) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CCLCMsg_FileCRCCheck.Marshal(b, m, deterministic)
}
func (dst *CCLCMsg_FileCRCCheck) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CCLCMsg_FileCRCCheck.Merge(dst, src)
}
func (m *CCLCMsg_FileCRCCheck) XXX_Size() int {
	return xxx_messageInfo_CCLCMsg_FileCRCCheck.Size(m)
}
func (m *CCLCMsg_FileCRCCheck) XXX_DiscardUnknown() {
	xxx_messageInfo_CCLCMsg_FileCRCCheck.DiscardUnknown(m)
}

var xxx_messageInfo_CCLCMsg_FileCRCCheck proto.InternalMessageInfo

func (m *CCLCMsg_FileCRCCheck) GetCodePath() int32 {
	if m != nil && m.CodePath != nil {
		return *m.CodePath
	}
	return 0
}

func (m *CCLCMsg_FileCRCCheck) GetPath() string {
	if m != nil && m.Path != nil {
		return *m.Path
	}
	return ""
}

func (m *CCLCMsg_FileCRCCheck) GetCodeFilename() int32 {
	if m != nil && m.CodeFilename != nil {
		return *m.CodeFilename
	}
	return 0
}

func (m *CCLCMsg_FileCRCCheck) GetFilename() string {
	if m != nil && m.Filename != nil {
		return *m.Filename
	}
	return ""
}

func (m *CCLCMsg_FileCRCCheck) GetFileFraction() int32 {
	if m != nil && m.FileFraction != nil {
		return *m.FileFraction
	}
	return 0
}

func (m *CCLCMsg_FileCRCCheck) GetMd5() []byte {
	if m != nil {
		return m.Md5
	}
	return nil
}

func (m *CCLCMsg_FileCRCCheck) GetCrc() uint32 {
	if m != nil && m.Crc != nil {
		return *m.Crc
	}
	return 0
}

func (m *CCLCMsg_FileCRCCheck) GetFileHashType() int32 {
	if m != nil && m.FileHashType != nil {
		return *m.FileHashType
	}
	return 0
}

func (m *CCLCMsg_FileCRCCheck) GetFileLen() int32 {
	if m != nil && m.FileLen != nil {
		return *m.FileLen
	}
	return 0
}

func (m *CCLCMsg_FileCRCCheck) GetPackFileId() int32 {
	if m != nil && m.PackFileId != nil {
		return *m.PackFileId
	}
	return 0
}

func (m *CCLCMsg_FileCRCCheck) GetPackFileNumber() int32 {
	if m != nil && m.PackFileNumber != nil {
		return *m.PackFileNumber
	}
	return 0
}

type CCLCMsg_LoadingProgress struct {
	Progress             *int32   `protobuf:"varint,1,opt,name=progress" json:"progress,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CCLCMsg_LoadingProgress) Reset()         { *m = CCLCMsg_LoadingProgress{} }
func (m *CCLCMsg_LoadingProgress) String() string { return proto.CompactTextString(m) }
func (*CCLCMsg_LoadingProgress) ProtoMessage()    {}
func (*CCLCMsg_LoadingProgress) Descriptor() ([]byte, []int) {
	return fileDescriptor_netmessages_c275cb4cc5a5e30a, []int{21}
}
func (m *CCLCMsg_LoadingProgress) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CCLCMsg_LoadingProgress.Unmarshal(m, b)
}
func (m *CCLCMsg_LoadingProgress) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CCLCMsg_LoadingProgress.Marshal(b, m, deterministic)
}
func (dst *CCLCMsg_LoadingProgress) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CCLCMsg_LoadingProgress.Merge(dst, src)
}
func (m *CCLCMsg_LoadingProgress) XXX_Size() int {
	return xxx_messageInfo_CCLCMsg_LoadingProgress.Size(m)
}
func (m *CCLCMsg_LoadingProgress) XXX_DiscardUnknown() {
	xxx_messageInfo_CCLCMsg_LoadingProgress.DiscardUnknown(m)
}

var xxx_messageInfo_CCLCMsg_LoadingProgress proto.InternalMessageInfo

func (m *CCLCMsg_LoadingProgress) GetProgress() int32 {
	if m != nil && m.Progress != nil {
		return *m.Progress
	}
	return 0
}

type CCLCMsg_SplitPlayerConnect struct {
	Convars              *CMsg_CVars `protobuf:"bytes,1,opt,name=convars" json:"convars,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *CCLCMsg_SplitPlayerConnect) Reset()         { *m = CCLCMsg_SplitPlayerConnect{} }
func (m *CCLCMsg_SplitPlayerConnect) String() string { return proto.CompactTextString(m) }
func (*CCLCMsg_SplitPlayerConnect) ProtoMessage()    {}
func (*CCLCMsg_SplitPlayerConnect) Descriptor() ([]byte, []int) {
	return fileDescriptor_netmessages_c275cb4cc5a5e30a, []int{22}
}
func (m *CCLCMsg_SplitPlayerConnect) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CCLCMsg_SplitPlayerConnect.Unmarshal(m, b)
}
func (m *CCLCMsg_SplitPlayerConnect) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CCLCMsg_SplitPlayerConnect.Marshal(b, m, deterministic)
}
func (dst *CCLCMsg_SplitPlayerConnect) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CCLCMsg_SplitPlayerConnect.Merge(dst, src)
}
func (m *CCLCMsg_SplitPlayerConnect) XXX_Size() int {
	return xxx_messageInfo_CCLCMsg_SplitPlayerConnect.Size(m)
}
func (m *CCLCMsg_SplitPlayerConnect) XXX_DiscardUnknown() {
	xxx_messageInfo_CCLCMsg_SplitPlayerConnect.DiscardUnknown(m)
}

var xxx_messageInfo_CCLCMsg_SplitPlayerConnect proto.InternalMessageInfo

func (m *CCLCMsg_SplitPlayerConnect) GetConvars() *CMsg_CVars {
	if m != nil {
		return m.Convars
	}
	return nil
}

type CCLCMsg_CmdKeyValues struct {
	Keyvalues            []byte   `protobuf:"bytes,1,opt,name=keyvalues" json:"keyvalues,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CCLCMsg_CmdKeyValues) Reset()         { *m = CCLCMsg_CmdKeyValues{} }
func (m *CCLCMsg_CmdKeyValues) String() string { return proto.CompactTextString(m) }
func (*CCLCMsg_CmdKeyValues) ProtoMessage()    {}
func (*CCLCMsg_CmdKeyValues) Descriptor() ([]byte, []int) {
	return fileDescriptor_netmessages_c275cb4cc5a5e30a, []int{23}
}
func (m *CCLCMsg_CmdKeyValues) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CCLCMsg_CmdKeyValues.Unmarshal(m, b)
}
func (m *CCLCMsg_CmdKeyValues) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CCLCMsg_CmdKeyValues.Marshal(b, m, deterministic)
}
func (dst *CCLCMsg_CmdKeyValues) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CCLCMsg_CmdKeyValues.Merge(dst, src)
}
func (m *CCLCMsg_CmdKeyValues) XXX_Size() int {
	return xxx_messageInfo_CCLCMsg_CmdKeyValues.Size(m)
}
func (m *CCLCMsg_CmdKeyValues) XXX_DiscardUnknown() {
	xxx_messageInfo_CCLCMsg_CmdKeyValues.DiscardUnknown(m)
}

var xxx_messageInfo_CCLCMsg_CmdKeyValues proto.InternalMessageInfo

func (m *CCLCMsg_CmdKeyValues) GetKeyvalues() []byte {
	if m != nil {
		return m.Keyvalues
	}
	return nil
}

type CSVCMsg_ServerInfo struct {
	Protocol                  *int32   `protobuf:"varint,1,opt,name=protocol" json:"protocol,omitempty"`
	ServerCount               *int32   `protobuf:"varint,2,opt,name=server_count,json=serverCount" json:"server_count,omitempty"`
	IsDedicated               *bool    `protobuf:"varint,3,opt,name=is_dedicated,json=isDedicated" json:"is_dedicated,omitempty"`
	IsOfficialValveServer     *bool    `protobuf:"varint,4,opt,name=is_official_valve_server,json=isOfficialValveServer" json:"is_official_valve_server,omitempty"`
	IsHltv                    *bool    `protobuf:"varint,5,opt,name=is_hltv,json=isHltv" json:"is_hltv,omitempty"`
	IsReplay                  *bool    `protobuf:"varint,6,opt,name=is_replay,json=isReplay" json:"is_replay,omitempty"`
	IsRedirectingToProxyRelay *bool    `protobuf:"varint,21,opt,name=is_redirecting_to_proxy_relay,json=isRedirectingToProxyRelay" json:"is_redirecting_to_proxy_relay,omitempty"`
	COs                       *int32   `protobuf:"varint,7,opt,name=c_os,json=cOs" json:"c_os,omitempty"`
	MapCrc                    *uint32  `protobuf:"fixed32,8,opt,name=map_crc,json=mapCrc" json:"map_crc,omitempty"`
	ClientCrc                 *uint32  `protobuf:"fixed32,9,opt,name=client_crc,json=clientCrc" json:"client_crc,omitempty"`
	StringTableCrc            *uint32  `protobuf:"fixed32,10,opt,name=string_table_crc,json=stringTableCrc" json:"string_table_crc,omitempty"`
	MaxClients                *int32   `protobuf:"varint,11,opt,name=max_clients,json=maxClients" json:"max_clients,omitempty"`
	MaxClasses                *int32   `protobuf:"varint,12,opt,name=max_classes,json=maxClasses" json:"max_classes,omitempty"`
	PlayerSlot                *int32   `protobuf:"varint,13,opt,name=player_slot,json=playerSlot" json:"player_slot,omitempty"`
	TickInterval              *float32 `protobuf:"fixed32,14,opt,name=tick_interval,json=tickInterval" json:"tick_interval,omitempty"`
	GameDir                   *string  `protobuf:"bytes,15,opt,name=game_dir,json=gameDir" json:"game_dir,omitempty"`
	MapName                   *string  `protobuf:"bytes,16,opt,name=map_name,json=mapName" json:"map_name,omitempty"`
	MapGroupName              *string  `protobuf:"bytes,17,opt,name=map_group_name,json=mapGroupName" json:"map_group_name,omitempty"`
	SkyName                   *string  `protobuf:"bytes,18,opt,name=sky_name,json=skyName" json:"sky_name,omitempty"`
	HostName                  *string  `protobuf:"bytes,19,opt,name=host_name,json=hostName" json:"host_name,omitempty"`
	PublicIp                  *uint32  `protobuf:"varint,20,opt,name=public_ip,json=publicIp" json:"public_ip,omitempty"`
	UgcMapId                  *uint64  `protobuf:"varint,22,opt,name=ugc_map_id,json=ugcMapId" json:"ugc_map_id,omitempty"`
	XXX_NoUnkeyedLiteral      struct{} `json:"-"`
	XXX_unrecognized          []byte   `json:"-"`
	XXX_sizecache             int32    `json:"-"`
}

func (m *CSVCMsg_ServerInfo) Reset()         { *m = CSVCMsg_ServerInfo{} }
func (m *CSVCMsg_ServerInfo) String() string { return proto.CompactTextString(m) }
func (*CSVCMsg_ServerInfo) ProtoMessage()    {}
func (*CSVCMsg_ServerInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_netmessages_c275cb4cc5a5e30a, []int{24}
}
func (m *CSVCMsg_ServerInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CSVCMsg_ServerInfo.Unmarshal(m, b)
}
func (m *CSVCMsg_ServerInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CSVCMsg_ServerInfo.Marshal(b, m, deterministic)
}
func (dst *CSVCMsg_ServerInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CSVCMsg_ServerInfo.Merge(dst, src)
}
func (m *CSVCMsg_ServerInfo) XXX_Size() int {
	return xxx_messageInfo_CSVCMsg_ServerInfo.Size(m)
}
func (m *CSVCMsg_ServerInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_CSVCMsg_ServerInfo.DiscardUnknown(m)
}

var xxx_messageInfo_CSVCMsg_ServerInfo proto.InternalMessageInfo

func (m *CSVCMsg_ServerInfo) GetProtocol() int32 {
	if m != nil && m.Protocol != nil {
		return *m.Protocol
	}
	return 0
}

func (m *CSVCMsg_ServerInfo) GetServerCount() int32 {
	if m != nil && m.ServerCount != nil {
		return *m.ServerCount
	}
	return 0
}

func (m *CSVCMsg_ServerInfo) GetIsDedicated() bool {
	if m != nil && m.IsDedicated != nil {
		return *m.IsDedicated
	}
	return false
}

func (m *CSVCMsg_ServerInfo) GetIsOfficialValveServer() bool {
	if m != nil && m.IsOfficialValveServer != nil {
		return *m.IsOfficialValveServer
	}
	return false
}

func (m *CSVCMsg_ServerInfo) GetIsHltv() bool {
	if m != nil && m.IsHltv != nil {
		return *m.IsHltv
	}
	return false
}

func (m *CSVCMsg_ServerInfo) GetIsReplay() bool {
	if m != nil && m.IsReplay != nil {
		return *m.IsReplay
	}
	return false
}

func (m *CSVCMsg_ServerInfo) GetIsRedirectingToProxyRelay() bool {
	if m != nil && m.IsRedirectingToProxyRelay != nil {
		return *m.IsRedirectingToProxyRelay
	}
	return false
}

func (m *CSVCMsg_ServerInfo) GetCOs() int32 {
	if m != nil && m.COs != nil {
		return *m.COs
	}
	return 0
}

func (m *CSVCMsg_ServerInfo) GetMapCrc() uint32 {
	if m != nil && m.MapCrc != nil {
		return *m.MapCrc
	}
	return 0
}

func (m *CSVCMsg_ServerInfo) GetClientCrc() uint32 {
	if m != nil && m.ClientCrc != nil {
		return *m.ClientCrc
	}
	return 0
}

func (m *CSVCMsg_ServerInfo) GetStringTableCrc() uint32 {
	if m != nil && m.StringTableCrc != nil {
		return *m.StringTableCrc
	}
	return 0
}

func (m *CSVCMsg_ServerInfo) GetMaxClients() int32 {
	if m != nil && m.MaxClients != nil {
		return *m.MaxClients
	}
	return 0
}

func (m *CSVCMsg_ServerInfo) GetMaxClasses() int32 {
	if m != nil && m.MaxClasses != nil {
		return *m.MaxClasses
	}
	return 0
}

func (m *CSVCMsg_ServerInfo) GetPlayerSlot() int32 {
	if m != nil && m.PlayerSlot != nil {
		return *m.PlayerSlot
	}
	return 0
}

func (m *CSVCMsg_ServerInfo) GetTickInterval() float32 {
	if m != nil && m.TickInterval != nil {
		return *m.TickInterval
	}
	return 0
}

func (m *CSVCMsg_ServerInfo) GetGameDir() string {
	if m != nil && m.GameDir != nil {
		return *m.GameDir
	}
	return ""
}

func (m *CSVCMsg_ServerInfo) GetMapName() string {
	if m != nil && m.MapName != nil {
		return *m.MapName
	}
	return ""
}

func (m *CSVCMsg_ServerInfo) GetMapGroupName() string {
	if m != nil && m.MapGroupName != nil {
		return *m.MapGroupName
	}
	return ""
}

func (m *CSVCMsg_ServerInfo) GetSkyName() string {
	if m != nil && m.SkyName != nil {
		return *m.SkyName
	}
	return ""
}

func (m *CSVCMsg_ServerInfo) GetHostName() string {
	if m != nil && m.HostName != nil {
		return *m.HostName
	}
	return ""
}

func (m *CSVCMsg_ServerInfo) GetPublicIp() uint32 {
	if m != nil && m.PublicIp != nil {
		return *m.PublicIp
	}
	return 0
}

func (m *CSVCMsg_ServerInfo) GetUgcMapId() uint64 {
	if m != nil && m.UgcMapId != nil {
		return *m.UgcMapId
	}
	return 0
}

type CSVCMsg_ClassInfo struct {
	CreateOnClient       *bool                      `protobuf:"varint,1,opt,name=create_on_client,json=createOnClient" json:"create_on_client,omitempty"`
	Classes              []*CSVCMsg_ClassInfoClassT `protobuf:"bytes,2,rep,name=classes" json:"classes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *CSVCMsg_ClassInfo) Reset()         { *m = CSVCMsg_ClassInfo{} }
func (m *CSVCMsg_ClassInfo) String() string { return proto.CompactTextString(m) }
func (*CSVCMsg_ClassInfo) ProtoMessage()    {}
func (*CSVCMsg_ClassInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_netmessages_c275cb4cc5a5e30a, []int{25}
}
func (m *CSVCMsg_ClassInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CSVCMsg_ClassInfo.Unmarshal(m, b)
}
func (m *CSVCMsg_ClassInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CSVCMsg_ClassInfo.Marshal(b, m, deterministic)
}
func (dst *CSVCMsg_ClassInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CSVCMsg_ClassInfo.Merge(dst, src)
}
func (m *CSVCMsg_ClassInfo) XXX_Size() int {
	return xxx_messageInfo_CSVCMsg_ClassInfo.Size(m)
}
func (m *CSVCMsg_ClassInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_CSVCMsg_ClassInfo.DiscardUnknown(m)
}

var xxx_messageInfo_CSVCMsg_ClassInfo proto.InternalMessageInfo

func (m *CSVCMsg_ClassInfo) GetCreateOnClient() bool {
	if m != nil && m.CreateOnClient != nil {
		return *m.CreateOnClient
	}
	return false
}

func (m *CSVCMsg_ClassInfo) GetClasses() []*CSVCMsg_ClassInfoClassT {
	if m != nil {
		return m.Classes
	}
	return nil
}

type CSVCMsg_ClassInfoClassT struct {
	ClassId              *int32   `protobuf:"varint,1,opt,name=class_id,json=classId" json:"class_id,omitempty"`
	DataTableName        *string  `protobuf:"bytes,2,opt,name=data_table_name,json=dataTableName" json:"data_table_name,omitempty"`
	ClassName            *string  `protobuf:"bytes,3,opt,name=class_name,json=className" json:"class_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CSVCMsg_ClassInfoClassT) Reset()         { *m = CSVCMsg_ClassInfoClassT{} }
func (m *CSVCMsg_ClassInfoClassT) String() string { return proto.CompactTextString(m) }
func (*CSVCMsg_ClassInfoClassT) ProtoMessage()    {}
func (*CSVCMsg_ClassInfoClassT) Descriptor() ([]byte, []int) {
	return fileDescriptor_netmessages_c275cb4cc5a5e30a, []int{25, 0}
}
func (m *CSVCMsg_ClassInfoClassT) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CSVCMsg_ClassInfoClassT.Unmarshal(m, b)
}
func (m *CSVCMsg_ClassInfoClassT) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CSVCMsg_ClassInfoClassT.Marshal(b, m, deterministic)
}
func (dst *CSVCMsg_ClassInfoClassT) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CSVCMsg_ClassInfoClassT.Merge(dst, src)
}
func (m *CSVCMsg_ClassInfoClassT) XXX_Size() int {
	return xxx_messageInfo_CSVCMsg_ClassInfoClassT.Size(m)
}
func (m *CSVCMsg_ClassInfoClassT) XXX_DiscardUnknown() {
	xxx_messageInfo_CSVCMsg_ClassInfoClassT.DiscardUnknown(m)
}

var xxx_messageInfo_CSVCMsg_ClassInfoClassT proto.InternalMessageInfo

func (m *CSVCMsg_ClassInfoClassT) GetClassId() int32 {
	if m != nil && m.ClassId != nil {
		return *m.ClassId
	}
	return 0
}

func (m *CSVCMsg_ClassInfoClassT) GetDataTableName() string {
	if m != nil && m.DataTableName != nil {
		return *m.DataTableName
	}
	return ""
}

func (m *CSVCMsg_ClassInfoClassT) GetClassName() string {
	if m != nil && m.ClassName != nil {
		return *m.ClassName
	}
	return ""
}

type CSVCMsg_SendTable struct {
	IsEnd                *bool                         `protobuf:"varint,1,opt,name=is_end,json=isEnd" json:"is_end,omitempty"`
	NetTableName         *string                       `protobuf:"bytes,2,opt,name=net_table_name,json=netTableName" json:"net_table_name,omitempty"`
	NeedsDecoder         *bool                         `protobuf:"varint,3,opt,name=needs_decoder,json=needsDecoder" json:"needs_decoder,omitempty"`
	Props                []*CSVCMsg_SendTableSendpropT `protobuf:"bytes,4,rep,name=props" json:"props,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *CSVCMsg_SendTable) Reset()         { *m = CSVCMsg_SendTable{} }
func (m *CSVCMsg_SendTable) String() string { return proto.CompactTextString(m) }
func (*CSVCMsg_SendTable) ProtoMessage()    {}
func (*CSVCMsg_SendTable) Descriptor() ([]byte, []int) {
	return fileDescriptor_netmessages_c275cb4cc5a5e30a, []int{26}
}
func (m *CSVCMsg_SendTable) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CSVCMsg_SendTable.Unmarshal(m, b)
}
func (m *CSVCMsg_SendTable) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CSVCMsg_SendTable.Marshal(b, m, deterministic)
}
func (dst *CSVCMsg_SendTable) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CSVCMsg_SendTable.Merge(dst, src)
}
func (m *CSVCMsg_SendTable) XXX_Size() int {
	return xxx_messageInfo_CSVCMsg_SendTable.Size(m)
}
func (m *CSVCMsg_SendTable) XXX_DiscardUnknown() {
	xxx_messageInfo_CSVCMsg_SendTable.DiscardUnknown(m)
}

var xxx_messageInfo_CSVCMsg_SendTable proto.InternalMessageInfo

func (m *CSVCMsg_SendTable) GetIsEnd() bool {
	if m != nil && m.IsEnd != nil {
		return *m.IsEnd
	}
	return false
}

func (m *CSVCMsg_SendTable) GetNetTableName() string {
	if m != nil && m.NetTableName != nil {
		return *m.NetTableName
	}
	return ""
}

func (m *CSVCMsg_SendTable) GetNeedsDecoder() bool {
	if m != nil && m.NeedsDecoder != nil {
		return *m.NeedsDecoder
	}
	return false
}

func (m *CSVCMsg_SendTable) GetProps() []*CSVCMsg_SendTableSendpropT {
	if m != nil {
		return m.Props
	}
	return nil
}

type CSVCMsg_SendTableSendpropT struct {
	Type                 *int32   `protobuf:"varint,1,opt,name=type" json:"type,omitempty"`
	VarName              *string  `protobuf:"bytes,2,opt,name=var_name,json=varName" json:"var_name,omitempty"`
	Flags                *int32   `protobuf:"varint,3,opt,name=flags" json:"flags,omitempty"`
	Priority             *int32   `protobuf:"varint,4,opt,name=priority" json:"priority,omitempty"`
	DtName               *string  `protobuf:"bytes,5,opt,name=dt_name,json=dtName" json:"dt_name,omitempty"`
	NumElements          *int32   `protobuf:"varint,6,opt,name=num_elements,json=numElements" json:"num_elements,omitempty"`
	LowValue             *float32 `protobuf:"fixed32,7,opt,name=low_value,json=lowValue" json:"low_value,omitempty"`
	HighValue            *float32 `protobuf:"fixed32,8,opt,name=high_value,json=highValue" json:"high_value,omitempty"`
	NumBits              *int32   `protobuf:"varint,9,opt,name=num_bits,json=numBits" json:"num_bits,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CSVCMsg_SendTableSendpropT) Reset()         { *m = CSVCMsg_SendTableSendpropT{} }
func (m *CSVCMsg_SendTableSendpropT) String() string { return proto.CompactTextString(m) }
func (*CSVCMsg_SendTableSendpropT) ProtoMessage()    {}
func (*CSVCMsg_SendTableSendpropT) Descriptor() ([]byte, []int) {
	return fileDescriptor_netmessages_c275cb4cc5a5e30a, []int{26, 0}
}
func (m *CSVCMsg_SendTableSendpropT) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CSVCMsg_SendTableSendpropT.Unmarshal(m, b)
}
func (m *CSVCMsg_SendTableSendpropT) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CSVCMsg_SendTableSendpropT.Marshal(b, m, deterministic)
}
func (dst *CSVCMsg_SendTableSendpropT) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CSVCMsg_SendTableSendpropT.Merge(dst, src)
}
func (m *CSVCMsg_SendTableSendpropT) XXX_Size() int {
	return xxx_messageInfo_CSVCMsg_SendTableSendpropT.Size(m)
}
func (m *CSVCMsg_SendTableSendpropT) XXX_DiscardUnknown() {
	xxx_messageInfo_CSVCMsg_SendTableSendpropT.DiscardUnknown(m)
}

var xxx_messageInfo_CSVCMsg_SendTableSendpropT proto.InternalMessageInfo

func (m *CSVCMsg_SendTableSendpropT) GetType() int32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

func (m *CSVCMsg_SendTableSendpropT) GetVarName() string {
	if m != nil && m.VarName != nil {
		return *m.VarName
	}
	return ""
}

func (m *CSVCMsg_SendTableSendpropT) GetFlags() int32 {
	if m != nil && m.Flags != nil {
		return *m.Flags
	}
	return 0
}

func (m *CSVCMsg_SendTableSendpropT) GetPriority() int32 {
	if m != nil && m.Priority != nil {
		return *m.Priority
	}
	return 0
}

func (m *CSVCMsg_SendTableSendpropT) GetDtName() string {
	if m != nil && m.DtName != nil {
		return *m.DtName
	}
	return ""
}

func (m *CSVCMsg_SendTableSendpropT) GetNumElements() int32 {
	if m != nil && m.NumElements != nil {
		return *m.NumElements
	}
	return 0
}

func (m *CSVCMsg_SendTableSendpropT) GetLowValue() float32 {
	if m != nil && m.LowValue != nil {
		return *m.LowValue
	}
	return 0
}

func (m *CSVCMsg_SendTableSendpropT) GetHighValue() float32 {
	if m != nil && m.HighValue != nil {
		return *m.HighValue
	}
	return 0
}

func (m *CSVCMsg_SendTableSendpropT) GetNumBits() int32 {
	if m != nil && m.NumBits != nil {
		return *m.NumBits
	}
	return 0
}

type CSVCMsg_Print struct {
	Text                 *string  `protobuf:"bytes,1,opt,name=text" json:"text,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CSVCMsg_Print) Reset()         { *m = CSVCMsg_Print{} }
func (m *CSVCMsg_Print) String() string { return proto.CompactTextString(m) }
func (*CSVCMsg_Print) ProtoMessage()    {}
func (*CSVCMsg_Print) Descriptor() ([]byte, []int) {
	return fileDescriptor_netmessages_c275cb4cc5a5e30a, []int{27}
}
func (m *CSVCMsg_Print) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CSVCMsg_Print.Unmarshal(m, b)
}
func (m *CSVCMsg_Print) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CSVCMsg_Print.Marshal(b, m, deterministic)
}
func (dst *CSVCMsg_Print) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CSVCMsg_Print.Merge(dst, src)
}
func (m *CSVCMsg_Print) XXX_Size() int {
	return xxx_messageInfo_CSVCMsg_Print.Size(m)
}
func (m *CSVCMsg_Print) XXX_DiscardUnknown() {
	xxx_messageInfo_CSVCMsg_Print.DiscardUnknown(m)
}

var xxx_messageInfo_CSVCMsg_Print proto.InternalMessageInfo

func (m *CSVCMsg_Print) GetText() string {
	if m != nil && m.Text != nil {
		return *m.Text
	}
	return ""
}

type CSVCMsg_SetPause struct {
	Paused               *bool    `protobuf:"varint,1,opt,name=paused" json:"paused,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CSVCMsg_SetPause) Reset()         { *m = CSVCMsg_SetPause{} }
func (m *CSVCMsg_SetPause) String() string { return proto.CompactTextString(m) }
func (*CSVCMsg_SetPause) ProtoMessage()    {}
func (*CSVCMsg_SetPause) Descriptor() ([]byte, []int) {
	return fileDescriptor_netmessages_c275cb4cc5a5e30a, []int{28}
}
func (m *CSVCMsg_SetPause) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CSVCMsg_SetPause.Unmarshal(m, b)
}
func (m *CSVCMsg_SetPause) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CSVCMsg_SetPause.Marshal(b, m, deterministic)
}
func (dst *CSVCMsg_SetPause) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CSVCMsg_SetPause.Merge(dst, src)
}
func (m *CSVCMsg_SetPause) XXX_Size() int {
	return xxx_messageInfo_CSVCMsg_SetPause.Size(m)
}
func (m *CSVCMsg_SetPause) XXX_DiscardUnknown() {
	xxx_messageInfo_CSVCMsg_SetPause.DiscardUnknown(m)
}

var xxx_messageInfo_CSVCMsg_SetPause proto.InternalMessageInfo

func (m *CSVCMsg_SetPause) GetPaused() bool {
	if m != nil && m.Paused != nil {
		return *m.Paused
	}
	return false
}

type CSVCMsg_SetView struct {
	EntityIndex          *int32   `protobuf:"varint,1,opt,name=entity_index,json=entityIndex" json:"entity_index,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CSVCMsg_SetView) Reset()         { *m = CSVCMsg_SetView{} }
func (m *CSVCMsg_SetView) String() string { return proto.CompactTextString(m) }
func (*CSVCMsg_SetView) ProtoMessage()    {}
func (*CSVCMsg_SetView) Descriptor() ([]byte, []int) {
	return fileDescriptor_netmessages_c275cb4cc5a5e30a, []int{29}
}
func (m *CSVCMsg_SetView) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CSVCMsg_SetView.Unmarshal(m, b)
}
func (m *CSVCMsg_SetView) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CSVCMsg_SetView.Marshal(b, m, deterministic)
}
func (dst *CSVCMsg_SetView) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CSVCMsg_SetView.Merge(dst, src)
}
func (m *CSVCMsg_SetView) XXX_Size() int {
	return xxx_messageInfo_CSVCMsg_SetView.Size(m)
}
func (m *CSVCMsg_SetView) XXX_DiscardUnknown() {
	xxx_messageInfo_CSVCMsg_SetView.DiscardUnknown(m)
}

var xxx_messageInfo_CSVCMsg_SetView proto.InternalMessageInfo

func (m *CSVCMsg_SetView) GetEntityIndex() int32 {
	if m != nil && m.EntityIndex != nil {
		return *m.EntityIndex
	}
	return 0
}

type CSVCMsg_CreateStringTable struct {
	Name                 *string  `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	MaxEntries           *int32   `protobuf:"varint,2,opt,name=max_entries,json=maxEntries" json:"max_entries,omitempty"`
	NumEntries           *int32   `protobuf:"varint,3,opt,name=num_entries,json=numEntries" json:"num_entries,omitempty"`
	UserDataFixedSize    *bool    `protobuf:"varint,4,opt,name=user_data_fixed_size,json=userDataFixedSize" json:"user_data_fixed_size,omitempty"`
	UserDataSize         *int32   `protobuf:"varint,5,opt,name=user_data_size,json=userDataSize" json:"user_data_size,omitempty"`
	UserDataSizeBits     *int32   `protobuf:"varint,6,opt,name=user_data_size_bits,json=userDataSizeBits" json:"user_data_size_bits,omitempty"`
	Flags                *int32   `protobuf:"varint,7,opt,name=flags" json:"flags,omitempty"`
	StringData           []byte   `protobuf:"bytes,8,opt,name=string_data,json=stringData" json:"string_data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CSVCMsg_CreateStringTable) Reset()         { *m = CSVCMsg_CreateStringTable{} }
func (m *CSVCMsg_CreateStringTable) String() string { return proto.CompactTextString(m) }
func (*CSVCMsg_CreateStringTable) ProtoMessage()    {}
func (*CSVCMsg_CreateStringTable) Descriptor() ([]byte, []int) {
	return fileDescriptor_netmessages_c275cb4cc5a5e30a, []int{30}
}
func (m *CSVCMsg_CreateStringTable) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CSVCMsg_CreateStringTable.Unmarshal(m, b)
}
func (m *CSVCMsg_CreateStringTable) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CSVCMsg_CreateStringTable.Marshal(b, m, deterministic)
}
func (dst *CSVCMsg_CreateStringTable) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CSVCMsg_CreateStringTable.Merge(dst, src)
}
func (m *CSVCMsg_CreateStringTable) XXX_Size() int {
	return xxx_messageInfo_CSVCMsg_CreateStringTable.Size(m)
}
func (m *CSVCMsg_CreateStringTable) XXX_DiscardUnknown() {
	xxx_messageInfo_CSVCMsg_CreateStringTable.DiscardUnknown(m)
}

var xxx_messageInfo_CSVCMsg_CreateStringTable proto.InternalMessageInfo

func (m *CSVCMsg_CreateStringTable) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *CSVCMsg_CreateStringTable) GetMaxEntries() int32 {
	if m != nil && m.MaxEntries != nil {
		return *m.MaxEntries
	}
	return 0
}

func (m *CSVCMsg_CreateStringTable) GetNumEntries() int32 {
	if m != nil && m.NumEntries != nil {
		return *m.NumEntries
	}
	return 0
}

func (m *CSVCMsg_CreateStringTable) GetUserDataFixedSize() bool {
	if m != nil && m.UserDataFixedSize != nil {
		return *m.UserDataFixedSize
	}
	return false
}

func (m *CSVCMsg_CreateStringTable) GetUserDataSize() int32 {
	if m != nil && m.UserDataSize != nil {
		return *m.UserDataSize
	}
	return 0
}

func (m *CSVCMsg_CreateStringTable) GetUserDataSizeBits() int32 {
	if m != nil && m.UserDataSizeBits != nil {
		return *m.UserDataSizeBits
	}
	return 0
}

func (m *CSVCMsg_CreateStringTable) GetFlags() int32 {
	if m != nil && m.Flags != nil {
		return *m.Flags
	}
	return 0
}

func (m *CSVCMsg_CreateStringTable) GetStringData() []byte {
	if m != nil {
		return m.StringData
	}
	return nil
}

type CSVCMsg_UpdateStringTable struct {
	TableId              *int32   `protobuf:"varint,1,opt,name=table_id,json=tableId" json:"table_id,omitempty"`
	NumChangedEntries    *int32   `protobuf:"varint,2,opt,name=num_changed_entries,json=numChangedEntries" json:"num_changed_entries,omitempty"`
	StringData           []byte   `protobuf:"bytes,3,opt,name=string_data,json=stringData" json:"string_data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CSVCMsg_UpdateStringTable) Reset()         { *m = CSVCMsg_UpdateStringTable{} }
func (m *CSVCMsg_UpdateStringTable) String() string { return proto.CompactTextString(m) }
func (*CSVCMsg_UpdateStringTable) ProtoMessage()    {}
func (*CSVCMsg_UpdateStringTable) Descriptor() ([]byte, []int) {
	return fileDescriptor_netmessages_c275cb4cc5a5e30a, []int{31}
}
func (m *CSVCMsg_UpdateStringTable) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CSVCMsg_UpdateStringTable.Unmarshal(m, b)
}
func (m *CSVCMsg_UpdateStringTable) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CSVCMsg_UpdateStringTable.Marshal(b, m, deterministic)
}
func (dst *CSVCMsg_UpdateStringTable) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CSVCMsg_UpdateStringTable.Merge(dst, src)
}
func (m *CSVCMsg_UpdateStringTable) XXX_Size() int {
	return xxx_messageInfo_CSVCMsg_UpdateStringTable.Size(m)
}
func (m *CSVCMsg_UpdateStringTable) XXX_DiscardUnknown() {
	xxx_messageInfo_CSVCMsg_UpdateStringTable.DiscardUnknown(m)
}

var xxx_messageInfo_CSVCMsg_UpdateStringTable proto.InternalMessageInfo

func (m *CSVCMsg_UpdateStringTable) GetTableId() int32 {
	if m != nil && m.TableId != nil {
		return *m.TableId
	}
	return 0
}

func (m *CSVCMsg_UpdateStringTable) GetNumChangedEntries() int32 {
	if m != nil && m.NumChangedEntries != nil {
		return *m.NumChangedEntries
	}
	return 0
}

func (m *CSVCMsg_UpdateStringTable) GetStringData() []byte {
	if m != nil {
		return m.StringData
	}
	return nil
}

type CSVCMsg_VoiceInit struct {
	Quality              *int32   `protobuf:"varint,1,opt,name=quality" json:"quality,omitempty"`
	Codec                *string  `protobuf:"bytes,2,opt,name=codec" json:"codec,omitempty"`
	Version              *int32   `protobuf:"varint,3,opt,name=version,def=0" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CSVCMsg_VoiceInit) Reset()         { *m = CSVCMsg_VoiceInit{} }
func (m *CSVCMsg_VoiceInit) String() string { return proto.CompactTextString(m) }
func (*CSVCMsg_VoiceInit) ProtoMessage()    {}
func (*CSVCMsg_VoiceInit) Descriptor() ([]byte, []int) {
	return fileDescriptor_netmessages_c275cb4cc5a5e30a, []int{32}
}
func (m *CSVCMsg_VoiceInit) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CSVCMsg_VoiceInit.Unmarshal(m, b)
}
func (m *CSVCMsg_VoiceInit) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CSVCMsg_VoiceInit.Marshal(b, m, deterministic)
}
func (dst *CSVCMsg_VoiceInit) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CSVCMsg_VoiceInit.Merge(dst, src)
}
func (m *CSVCMsg_VoiceInit) XXX_Size() int {
	return xxx_messageInfo_CSVCMsg_VoiceInit.Size(m)
}
func (m *CSVCMsg_VoiceInit) XXX_DiscardUnknown() {
	xxx_messageInfo_CSVCMsg_VoiceInit.DiscardUnknown(m)
}

var xxx_messageInfo_CSVCMsg_VoiceInit proto.InternalMessageInfo

const Default_CSVCMsg_VoiceInit_Version int32 = 0

func (m *CSVCMsg_VoiceInit) GetQuality() int32 {
	if m != nil && m.Quality != nil {
		return *m.Quality
	}
	return 0
}

func (m *CSVCMsg_VoiceInit) GetCodec() string {
	if m != nil && m.Codec != nil {
		return *m.Codec
	}
	return ""
}

func (m *CSVCMsg_VoiceInit) GetVersion() int32 {
	if m != nil && m.Version != nil {
		return *m.Version
	}
	return Default_CSVCMsg_VoiceInit_Version
}

type CSVCMsg_VoiceData struct {
	Client                   *int32            `protobuf:"varint,1,opt,name=client" json:"client,omitempty"`
	Proximity                *bool             `protobuf:"varint,2,opt,name=proximity" json:"proximity,omitempty"`
	Xuid                     *uint64           `protobuf:"fixed64,3,opt,name=xuid" json:"xuid,omitempty"`
	AudibleMask              *int32            `protobuf:"varint,4,opt,name=audible_mask,json=audibleMask" json:"audible_mask,omitempty"`
	VoiceData                []byte            `protobuf:"bytes,5,opt,name=voice_data,json=voiceData" json:"voice_data,omitempty"`
	Caster                   *bool             `protobuf:"varint,6,opt,name=caster" json:"caster,omitempty"`
	Format                   *VoiceDataFormatT `protobuf:"varint,7,opt,name=format,enum=VoiceDataFormatT,def=1" json:"format,omitempty"`
	SequenceBytes            *int32            `protobuf:"varint,8,opt,name=sequence_bytes,json=sequenceBytes" json:"sequence_bytes,omitempty"`
	SectionNumber            *uint32           `protobuf:"varint,9,opt,name=section_number,json=sectionNumber" json:"section_number,omitempty"`
	UncompressedSampleOffset *uint32           `protobuf:"varint,10,opt,name=uncompressed_sample_offset,json=uncompressedSampleOffset" json:"uncompressed_sample_offset,omitempty"`
	XXX_NoUnkeyedLiteral     struct{}          `json:"-"`
	XXX_unrecognized         []byte            `json:"-"`
	XXX_sizecache            int32             `json:"-"`
}

func (m *CSVCMsg_VoiceData) Reset()         { *m = CSVCMsg_VoiceData{} }
func (m *CSVCMsg_VoiceData) String() string { return proto.CompactTextString(m) }
func (*CSVCMsg_VoiceData) ProtoMessage()    {}
func (*CSVCMsg_VoiceData) Descriptor() ([]byte, []int) {
	return fileDescriptor_netmessages_c275cb4cc5a5e30a, []int{33}
}
func (m *CSVCMsg_VoiceData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CSVCMsg_VoiceData.Unmarshal(m, b)
}
func (m *CSVCMsg_VoiceData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CSVCMsg_VoiceData.Marshal(b, m, deterministic)
}
func (dst *CSVCMsg_VoiceData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CSVCMsg_VoiceData.Merge(dst, src)
}
func (m *CSVCMsg_VoiceData) XXX_Size() int {
	return xxx_messageInfo_CSVCMsg_VoiceData.Size(m)
}
func (m *CSVCMsg_VoiceData) XXX_DiscardUnknown() {
	xxx_messageInfo_CSVCMsg_VoiceData.DiscardUnknown(m)
}

var xxx_messageInfo_CSVCMsg_VoiceData proto.InternalMessageInfo

const Default_CSVCMsg_VoiceData_Format VoiceDataFormatT = VoiceDataFormatT_VOICEDATA_FORMAT_ENGINE

func (m *CSVCMsg_VoiceData) GetClient() int32 {
	if m != nil && m.Client != nil {
		return *m.Client
	}
	return 0
}

func (m *CSVCMsg_VoiceData) GetProximity() bool {
	if m != nil && m.Proximity != nil {
		return *m.Proximity
	}
	return false
}

func (m *CSVCMsg_VoiceData) GetXuid() uint64 {
	if m != nil && m.Xuid != nil {
		return *m.Xuid
	}
	return 0
}

func (m *CSVCMsg_VoiceData) GetAudibleMask() int32 {
	if m != nil && m.AudibleMask != nil {
		return *m.AudibleMask
	}
	return 0
}

func (m *CSVCMsg_VoiceData) GetVoiceData() []byte {
	if m != nil {
		return m.VoiceData
	}
	return nil
}

func (m *CSVCMsg_VoiceData) GetCaster() bool {
	if m != nil && m.Caster != nil {
		return *m.Caster
	}
	return false
}

func (m *CSVCMsg_VoiceData) GetFormat() VoiceDataFormatT {
	if m != nil && m.Format != nil {
		return *m.Format
	}
	return Default_CSVCMsg_VoiceData_Format
}

func (m *CSVCMsg_VoiceData) GetSequenceBytes() int32 {
	if m != nil && m.SequenceBytes != nil {
		return *m.SequenceBytes
	}
	return 0
}

func (m *CSVCMsg_VoiceData) GetSectionNumber() uint32 {
	if m != nil && m.SectionNumber != nil {
		return *m.SectionNumber
	}
	return 0
}

func (m *CSVCMsg_VoiceData) GetUncompressedSampleOffset() uint32 {
	if m != nil && m.UncompressedSampleOffset != nil {
		return *m.UncompressedSampleOffset
	}
	return 0
}

type CSVCMsg_FixAngle struct {
	Relative             *bool       `protobuf:"varint,1,opt,name=relative" json:"relative,omitempty"`
	Angle                *CMsgQAngle `protobuf:"bytes,2,opt,name=angle" json:"angle,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *CSVCMsg_FixAngle) Reset()         { *m = CSVCMsg_FixAngle{} }
func (m *CSVCMsg_FixAngle) String() string { return proto.CompactTextString(m) }
func (*CSVCMsg_FixAngle) ProtoMessage()    {}
func (*CSVCMsg_FixAngle) Descriptor() ([]byte, []int) {
	return fileDescriptor_netmessages_c275cb4cc5a5e30a, []int{34}
}
func (m *CSVCMsg_FixAngle) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CSVCMsg_FixAngle.Unmarshal(m, b)
}
func (m *CSVCMsg_FixAngle) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CSVCMsg_FixAngle.Marshal(b, m, deterministic)
}
func (dst *CSVCMsg_FixAngle) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CSVCMsg_FixAngle.Merge(dst, src)
}
func (m *CSVCMsg_FixAngle) XXX_Size() int {
	return xxx_messageInfo_CSVCMsg_FixAngle.Size(m)
}
func (m *CSVCMsg_FixAngle) XXX_DiscardUnknown() {
	xxx_messageInfo_CSVCMsg_FixAngle.DiscardUnknown(m)
}

var xxx_messageInfo_CSVCMsg_FixAngle proto.InternalMessageInfo

func (m *CSVCMsg_FixAngle) GetRelative() bool {
	if m != nil && m.Relative != nil {
		return *m.Relative
	}
	return false
}

func (m *CSVCMsg_FixAngle) GetAngle() *CMsgQAngle {
	if m != nil {
		return m.Angle
	}
	return nil
}

type CSVCMsg_CrosshairAngle struct {
	Angle                *CMsgQAngle `protobuf:"bytes,1,opt,name=angle" json:"angle,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *CSVCMsg_CrosshairAngle) Reset()         { *m = CSVCMsg_CrosshairAngle{} }
func (m *CSVCMsg_CrosshairAngle) String() string { return proto.CompactTextString(m) }
func (*CSVCMsg_CrosshairAngle) ProtoMessage()    {}
func (*CSVCMsg_CrosshairAngle) Descriptor() ([]byte, []int) {
	return fileDescriptor_netmessages_c275cb4cc5a5e30a, []int{35}
}
func (m *CSVCMsg_CrosshairAngle) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CSVCMsg_CrosshairAngle.Unmarshal(m, b)
}
func (m *CSVCMsg_CrosshairAngle) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CSVCMsg_CrosshairAngle.Marshal(b, m, deterministic)
}
func (dst *CSVCMsg_CrosshairAngle) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CSVCMsg_CrosshairAngle.Merge(dst, src)
}
func (m *CSVCMsg_CrosshairAngle) XXX_Size() int {
	return xxx_messageInfo_CSVCMsg_CrosshairAngle.Size(m)
}
func (m *CSVCMsg_CrosshairAngle) XXX_DiscardUnknown() {
	xxx_messageInfo_CSVCMsg_CrosshairAngle.DiscardUnknown(m)
}

var xxx_messageInfo_CSVCMsg_CrosshairAngle proto.InternalMessageInfo

func (m *CSVCMsg_CrosshairAngle) GetAngle() *CMsgQAngle {
	if m != nil {
		return m.Angle
	}
	return nil
}

type CSVCMsg_Prefetch struct {
	SoundIndex           *int32   `protobuf:"varint,1,opt,name=sound_index,json=soundIndex" json:"sound_index,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CSVCMsg_Prefetch) Reset()         { *m = CSVCMsg_Prefetch{} }
func (m *CSVCMsg_Prefetch) String() string { return proto.CompactTextString(m) }
func (*CSVCMsg_Prefetch) ProtoMessage()    {}
func (*CSVCMsg_Prefetch) Descriptor() ([]byte, []int) {
	return fileDescriptor_netmessages_c275cb4cc5a5e30a, []int{36}
}
func (m *CSVCMsg_Prefetch) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CSVCMsg_Prefetch.Unmarshal(m, b)
}
func (m *CSVCMsg_Prefetch) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CSVCMsg_Prefetch.Marshal(b, m, deterministic)
}
func (dst *CSVCMsg_Prefetch) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CSVCMsg_Prefetch.Merge(dst, src)
}
func (m *CSVCMsg_Prefetch) XXX_Size() int {
	return xxx_messageInfo_CSVCMsg_Prefetch.Size(m)
}
func (m *CSVCMsg_Prefetch) XXX_DiscardUnknown() {
	xxx_messageInfo_CSVCMsg_Prefetch.DiscardUnknown(m)
}

var xxx_messageInfo_CSVCMsg_Prefetch proto.InternalMessageInfo

func (m *CSVCMsg_Prefetch) GetSoundIndex() int32 {
	if m != nil && m.SoundIndex != nil {
		return *m.SoundIndex
	}
	return 0
}

type CSVCMsg_BSPDecal struct {
	Pos                  *CMsgVector `protobuf:"bytes,1,opt,name=pos" json:"pos,omitempty"`
	DecalTextureIndex    *int32      `protobuf:"varint,2,opt,name=decal_texture_index,json=decalTextureIndex" json:"decal_texture_index,omitempty"`
	EntityIndex          *int32      `protobuf:"varint,3,opt,name=entity_index,json=entityIndex" json:"entity_index,omitempty"`
	ModelIndex           *int32      `protobuf:"varint,4,opt,name=model_index,json=modelIndex" json:"model_index,omitempty"`
	LowPriority          *bool       `protobuf:"varint,5,opt,name=low_priority,json=lowPriority" json:"low_priority,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *CSVCMsg_BSPDecal) Reset()         { *m = CSVCMsg_BSPDecal{} }
func (m *CSVCMsg_BSPDecal) String() string { return proto.CompactTextString(m) }
func (*CSVCMsg_BSPDecal) ProtoMessage()    {}
func (*CSVCMsg_BSPDecal) Descriptor() ([]byte, []int) {
	return fileDescriptor_netmessages_c275cb4cc5a5e30a, []int{37}
}
func (m *CSVCMsg_BSPDecal) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CSVCMsg_BSPDecal.Unmarshal(m, b)
}
func (m *CSVCMsg_BSPDecal) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CSVCMsg_BSPDecal.Marshal(b, m, deterministic)
}
func (dst *CSVCMsg_BSPDecal) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CSVCMsg_BSPDecal.Merge(dst, src)
}
func (m *CSVCMsg_BSPDecal) XXX_Size() int {
	return xxx_messageInfo_CSVCMsg_BSPDecal.Size(m)
}
func (m *CSVCMsg_BSPDecal) XXX_DiscardUnknown() {
	xxx_messageInfo_CSVCMsg_BSPDecal.DiscardUnknown(m)
}

var xxx_messageInfo_CSVCMsg_BSPDecal proto.InternalMessageInfo

func (m *CSVCMsg_BSPDecal) GetPos() *CMsgVector {
	if m != nil {
		return m.Pos
	}
	return nil
}

func (m *CSVCMsg_BSPDecal) GetDecalTextureIndex() int32 {
	if m != nil && m.DecalTextureIndex != nil {
		return *m.DecalTextureIndex
	}
	return 0
}

func (m *CSVCMsg_BSPDecal) GetEntityIndex() int32 {
	if m != nil && m.EntityIndex != nil {
		return *m.EntityIndex
	}
	return 0
}

func (m *CSVCMsg_BSPDecal) GetModelIndex() int32 {
	if m != nil && m.ModelIndex != nil {
		return *m.ModelIndex
	}
	return 0
}

func (m *CSVCMsg_BSPDecal) GetLowPriority() bool {
	if m != nil && m.LowPriority != nil {
		return *m.LowPriority
	}
	return false
}

type CSVCMsg_SplitScreen struct {
	Type                 *ESplitScreenMessageType `protobuf:"varint,1,opt,name=type,enum=ESplitScreenMessageType,def=0" json:"type,omitempty"`
	Slot                 *int32                   `protobuf:"varint,2,opt,name=slot" json:"slot,omitempty"`
	PlayerIndex          *int32                   `protobuf:"varint,3,opt,name=player_index,json=playerIndex" json:"player_index,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *CSVCMsg_SplitScreen) Reset()         { *m = CSVCMsg_SplitScreen{} }
func (m *CSVCMsg_SplitScreen) String() string { return proto.CompactTextString(m) }
func (*CSVCMsg_SplitScreen) ProtoMessage()    {}
func (*CSVCMsg_SplitScreen) Descriptor() ([]byte, []int) {
	return fileDescriptor_netmessages_c275cb4cc5a5e30a, []int{38}
}
func (m *CSVCMsg_SplitScreen) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CSVCMsg_SplitScreen.Unmarshal(m, b)
}
func (m *CSVCMsg_SplitScreen) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CSVCMsg_SplitScreen.Marshal(b, m, deterministic)
}
func (dst *CSVCMsg_SplitScreen) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CSVCMsg_SplitScreen.Merge(dst, src)
}
func (m *CSVCMsg_SplitScreen) XXX_Size() int {
	return xxx_messageInfo_CSVCMsg_SplitScreen.Size(m)
}
func (m *CSVCMsg_SplitScreen) XXX_DiscardUnknown() {
	xxx_messageInfo_CSVCMsg_SplitScreen.DiscardUnknown(m)
}

var xxx_messageInfo_CSVCMsg_SplitScreen proto.InternalMessageInfo

const Default_CSVCMsg_SplitScreen_Type ESplitScreenMessageType = ESplitScreenMessageType_MSG_SPLITSCREEN_ADDUSER

func (m *CSVCMsg_SplitScreen) GetType() ESplitScreenMessageType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return Default_CSVCMsg_SplitScreen_Type
}

func (m *CSVCMsg_SplitScreen) GetSlot() int32 {
	if m != nil && m.Slot != nil {
		return *m.Slot
	}
	return 0
}

func (m *CSVCMsg_SplitScreen) GetPlayerIndex() int32 {
	if m != nil && m.PlayerIndex != nil {
		return *m.PlayerIndex
	}
	return 0
}

type CSVCMsg_GetCvarValue struct {
	Cookie               *int32   `protobuf:"varint,1,opt,name=cookie" json:"cookie,omitempty"`
	CvarName             *string  `protobuf:"bytes,2,opt,name=cvar_name,json=cvarName" json:"cvar_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CSVCMsg_GetCvarValue) Reset()         { *m = CSVCMsg_GetCvarValue{} }
func (m *CSVCMsg_GetCvarValue) String() string { return proto.CompactTextString(m) }
func (*CSVCMsg_GetCvarValue) ProtoMessage()    {}
func (*CSVCMsg_GetCvarValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_netmessages_c275cb4cc5a5e30a, []int{39}
}
func (m *CSVCMsg_GetCvarValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CSVCMsg_GetCvarValue.Unmarshal(m, b)
}
func (m *CSVCMsg_GetCvarValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CSVCMsg_GetCvarValue.Marshal(b, m, deterministic)
}
func (dst *CSVCMsg_GetCvarValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CSVCMsg_GetCvarValue.Merge(dst, src)
}
func (m *CSVCMsg_GetCvarValue) XXX_Size() int {
	return xxx_messageInfo_CSVCMsg_GetCvarValue.Size(m)
}
func (m *CSVCMsg_GetCvarValue) XXX_DiscardUnknown() {
	xxx_messageInfo_CSVCMsg_GetCvarValue.DiscardUnknown(m)
}

var xxx_messageInfo_CSVCMsg_GetCvarValue proto.InternalMessageInfo

func (m *CSVCMsg_GetCvarValue) GetCookie() int32 {
	if m != nil && m.Cookie != nil {
		return *m.Cookie
	}
	return 0
}

func (m *CSVCMsg_GetCvarValue) GetCvarName() string {
	if m != nil && m.CvarName != nil {
		return *m.CvarName
	}
	return ""
}

type CSVCMsg_Menu struct {
	DialogType           *int32   `protobuf:"varint,1,opt,name=dialog_type,json=dialogType" json:"dialog_type,omitempty"`
	MenuKeyValues        []byte   `protobuf:"bytes,2,opt,name=menu_key_values,json=menuKeyValues" json:"menu_key_values,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CSVCMsg_Menu) Reset()         { *m = CSVCMsg_Menu{} }
func (m *CSVCMsg_Menu) String() string { return proto.CompactTextString(m) }
func (*CSVCMsg_Menu) ProtoMessage()    {}
func (*CSVCMsg_Menu) Descriptor() ([]byte, []int) {
	return fileDescriptor_netmessages_c275cb4cc5a5e30a, []int{40}
}
func (m *CSVCMsg_Menu) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CSVCMsg_Menu.Unmarshal(m, b)
}
func (m *CSVCMsg_Menu) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CSVCMsg_Menu.Marshal(b, m, deterministic)
}
func (dst *CSVCMsg_Menu) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CSVCMsg_Menu.Merge(dst, src)
}
func (m *CSVCMsg_Menu) XXX_Size() int {
	return xxx_messageInfo_CSVCMsg_Menu.Size(m)
}
func (m *CSVCMsg_Menu) XXX_DiscardUnknown() {
	xxx_messageInfo_CSVCMsg_Menu.DiscardUnknown(m)
}

var xxx_messageInfo_CSVCMsg_Menu proto.InternalMessageInfo

func (m *CSVCMsg_Menu) GetDialogType() int32 {
	if m != nil && m.DialogType != nil {
		return *m.DialogType
	}
	return 0
}

func (m *CSVCMsg_Menu) GetMenuKeyValues() []byte {
	if m != nil {
		return m.MenuKeyValues
	}
	return nil
}

type CSVCMsg_UserMessage struct {
	MsgType              *int32   `protobuf:"varint,1,opt,name=msg_type,json=msgType" json:"msg_type,omitempty"`
	MsgData              []byte   `protobuf:"bytes,2,opt,name=msg_data,json=msgData" json:"msg_data,omitempty"`
	Passthrough          *int32   `protobuf:"varint,3,opt,name=passthrough" json:"passthrough,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CSVCMsg_UserMessage) Reset()         { *m = CSVCMsg_UserMessage{} }
func (m *CSVCMsg_UserMessage) String() string { return proto.CompactTextString(m) }
func (*CSVCMsg_UserMessage) ProtoMessage()    {}
func (*CSVCMsg_UserMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_netmessages_c275cb4cc5a5e30a, []int{41}
}
func (m *CSVCMsg_UserMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CSVCMsg_UserMessage.Unmarshal(m, b)
}
func (m *CSVCMsg_UserMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CSVCMsg_UserMessage.Marshal(b, m, deterministic)
}
func (dst *CSVCMsg_UserMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CSVCMsg_UserMessage.Merge(dst, src)
}
func (m *CSVCMsg_UserMessage) XXX_Size() int {
	return xxx_messageInfo_CSVCMsg_UserMessage.Size(m)
}
func (m *CSVCMsg_UserMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_CSVCMsg_UserMessage.DiscardUnknown(m)
}

var xxx_messageInfo_CSVCMsg_UserMessage proto.InternalMessageInfo

func (m *CSVCMsg_UserMessage) GetMsgType() int32 {
	if m != nil && m.MsgType != nil {
		return *m.MsgType
	}
	return 0
}

func (m *CSVCMsg_UserMessage) GetMsgData() []byte {
	if m != nil {
		return m.MsgData
	}
	return nil
}

func (m *CSVCMsg_UserMessage) GetPassthrough() int32 {
	if m != nil && m.Passthrough != nil {
		return *m.Passthrough
	}
	return 0
}

type CSVCMsg_PaintmapData struct {
	Paintmap             []byte   `protobuf:"bytes,1,opt,name=paintmap" json:"paintmap,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CSVCMsg_PaintmapData) Reset()         { *m = CSVCMsg_PaintmapData{} }
func (m *CSVCMsg_PaintmapData) String() string { return proto.CompactTextString(m) }
func (*CSVCMsg_PaintmapData) ProtoMessage()    {}
func (*CSVCMsg_PaintmapData) Descriptor() ([]byte, []int) {
	return fileDescriptor_netmessages_c275cb4cc5a5e30a, []int{42}
}
func (m *CSVCMsg_PaintmapData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CSVCMsg_PaintmapData.Unmarshal(m, b)
}
func (m *CSVCMsg_PaintmapData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CSVCMsg_PaintmapData.Marshal(b, m, deterministic)
}
func (dst *CSVCMsg_PaintmapData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CSVCMsg_PaintmapData.Merge(dst, src)
}
func (m *CSVCMsg_PaintmapData) XXX_Size() int {
	return xxx_messageInfo_CSVCMsg_PaintmapData.Size(m)
}
func (m *CSVCMsg_PaintmapData) XXX_DiscardUnknown() {
	xxx_messageInfo_CSVCMsg_PaintmapData.DiscardUnknown(m)
}

var xxx_messageInfo_CSVCMsg_PaintmapData proto.InternalMessageInfo

func (m *CSVCMsg_PaintmapData) GetPaintmap() []byte {
	if m != nil {
		return m.Paintmap
	}
	return nil
}

type CSVCMsg_GameEvent struct {
	EventName            *string                  `protobuf:"bytes,1,opt,name=event_name,json=eventName" json:"event_name,omitempty"`
	Eventid              *int32                   `protobuf:"varint,2,opt,name=eventid" json:"eventid,omitempty"`
	Keys                 []*CSVCMsg_GameEventKeyT `protobuf:"bytes,3,rep,name=keys" json:"keys,omitempty"`
	Passthrough          *int32                   `protobuf:"varint,4,opt,name=passthrough" json:"passthrough,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *CSVCMsg_GameEvent) Reset()         { *m = CSVCMsg_GameEvent{} }
func (m *CSVCMsg_GameEvent) String() string { return proto.CompactTextString(m) }
func (*CSVCMsg_GameEvent) ProtoMessage()    {}
func (*CSVCMsg_GameEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_netmessages_c275cb4cc5a5e30a, []int{43}
}
func (m *CSVCMsg_GameEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CSVCMsg_GameEvent.Unmarshal(m, b)
}
func (m *CSVCMsg_GameEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CSVCMsg_GameEvent.Marshal(b, m, deterministic)
}
func (dst *CSVCMsg_GameEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CSVCMsg_GameEvent.Merge(dst, src)
}
func (m *CSVCMsg_GameEvent) XXX_Size() int {
	return xxx_messageInfo_CSVCMsg_GameEvent.Size(m)
}
func (m *CSVCMsg_GameEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_CSVCMsg_GameEvent.DiscardUnknown(m)
}

var xxx_messageInfo_CSVCMsg_GameEvent proto.InternalMessageInfo

func (m *CSVCMsg_GameEvent) GetEventName() string {
	if m != nil && m.EventName != nil {
		return *m.EventName
	}
	return ""
}

func (m *CSVCMsg_GameEvent) GetEventid() int32 {
	if m != nil && m.Eventid != nil {
		return *m.Eventid
	}
	return 0
}

func (m *CSVCMsg_GameEvent) GetKeys() []*CSVCMsg_GameEventKeyT {
	if m != nil {
		return m.Keys
	}
	return nil
}

func (m *CSVCMsg_GameEvent) GetPassthrough() int32 {
	if m != nil && m.Passthrough != nil {
		return *m.Passthrough
	}
	return 0
}

type CSVCMsg_GameEventKeyT struct {
	Type                 *int32   `protobuf:"varint,1,opt,name=type" json:"type,omitempty"`
	ValString            *string  `protobuf:"bytes,2,opt,name=val_string,json=valString" json:"val_string,omitempty"`
	ValFloat             *float32 `protobuf:"fixed32,3,opt,name=val_float,json=valFloat" json:"val_float,omitempty"`
	ValLong              *int32   `protobuf:"varint,4,opt,name=val_long,json=valLong" json:"val_long,omitempty"`
	ValShort             *int32   `protobuf:"varint,5,opt,name=val_short,json=valShort" json:"val_short,omitempty"`
	ValByte              *int32   `protobuf:"varint,6,opt,name=val_byte,json=valByte" json:"val_byte,omitempty"`
	ValBool              *bool    `protobuf:"varint,7,opt,name=val_bool,json=valBool" json:"val_bool,omitempty"`
	ValUint64            *uint64  `protobuf:"varint,8,opt,name=val_uint64,json=valUint64" json:"val_uint64,omitempty"`
	ValWstring           []byte   `protobuf:"bytes,9,opt,name=val_wstring,json=valWstring" json:"val_wstring,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CSVCMsg_GameEventKeyT) Reset()         { *m = CSVCMsg_GameEventKeyT{} }
func (m *CSVCMsg_GameEventKeyT) String() string { return proto.CompactTextString(m) }
func (*CSVCMsg_GameEventKeyT) ProtoMessage()    {}
func (*CSVCMsg_GameEventKeyT) Descriptor() ([]byte, []int) {
	return fileDescriptor_netmessages_c275cb4cc5a5e30a, []int{43, 0}
}
func (m *CSVCMsg_GameEventKeyT) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CSVCMsg_GameEventKeyT.Unmarshal(m, b)
}
func (m *CSVCMsg_GameEventKeyT) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CSVCMsg_GameEventKeyT.Marshal(b, m, deterministic)
}
func (dst *CSVCMsg_GameEventKeyT) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CSVCMsg_GameEventKeyT.Merge(dst, src)
}
func (m *CSVCMsg_GameEventKeyT) XXX_Size() int {
	return xxx_messageInfo_CSVCMsg_GameEventKeyT.Size(m)
}
func (m *CSVCMsg_GameEventKeyT) XXX_DiscardUnknown() {
	xxx_messageInfo_CSVCMsg_GameEventKeyT.DiscardUnknown(m)
}

var xxx_messageInfo_CSVCMsg_GameEventKeyT proto.InternalMessageInfo

func (m *CSVCMsg_GameEventKeyT) GetType() int32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

func (m *CSVCMsg_GameEventKeyT) GetValString() string {
	if m != nil && m.ValString != nil {
		return *m.ValString
	}
	return ""
}

func (m *CSVCMsg_GameEventKeyT) GetValFloat() float32 {
	if m != nil && m.ValFloat != nil {
		return *m.ValFloat
	}
	return 0
}

func (m *CSVCMsg_GameEventKeyT) GetValLong() int32 {
	if m != nil && m.ValLong != nil {
		return *m.ValLong
	}
	return 0
}

func (m *CSVCMsg_GameEventKeyT) GetValShort() int32 {
	if m != nil && m.ValShort != nil {
		return *m.ValShort
	}
	return 0
}

func (m *CSVCMsg_GameEventKeyT) GetValByte() int32 {
	if m != nil && m.ValByte != nil {
		return *m.ValByte
	}
	return 0
}

func (m *CSVCMsg_GameEventKeyT) GetValBool() bool {
	if m != nil && m.ValBool != nil {
		return *m.ValBool
	}
	return false
}

func (m *CSVCMsg_GameEventKeyT) GetValUint64() uint64 {
	if m != nil && m.ValUint64 != nil {
		return *m.ValUint64
	}
	return 0
}

func (m *CSVCMsg_GameEventKeyT) GetValWstring() []byte {
	if m != nil {
		return m.ValWstring
	}
	return nil
}

type CSVCMsg_GameEventList struct {
	Descriptors          []*CSVCMsg_GameEventListDescriptorT `protobuf:"bytes,1,rep,name=descriptors" json:"descriptors,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                            `json:"-"`
	XXX_unrecognized     []byte                              `json:"-"`
	XXX_sizecache        int32                               `json:"-"`
}

func (m *CSVCMsg_GameEventList) Reset()         { *m = CSVCMsg_GameEventList{} }
func (m *CSVCMsg_GameEventList) String() string { return proto.CompactTextString(m) }
func (*CSVCMsg_GameEventList) ProtoMessage()    {}
func (*CSVCMsg_GameEventList) Descriptor() ([]byte, []int) {
	return fileDescriptor_netmessages_c275cb4cc5a5e30a, []int{44}
}
func (m *CSVCMsg_GameEventList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CSVCMsg_GameEventList.Unmarshal(m, b)
}
func (m *CSVCMsg_GameEventList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CSVCMsg_GameEventList.Marshal(b, m, deterministic)
}
func (dst *CSVCMsg_GameEventList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CSVCMsg_GameEventList.Merge(dst, src)
}
func (m *CSVCMsg_GameEventList) XXX_Size() int {
	return xxx_messageInfo_CSVCMsg_GameEventList.Size(m)
}
func (m *CSVCMsg_GameEventList) XXX_DiscardUnknown() {
	xxx_messageInfo_CSVCMsg_GameEventList.DiscardUnknown(m)
}

var xxx_messageInfo_CSVCMsg_GameEventList proto.InternalMessageInfo

func (m *CSVCMsg_GameEventList) GetDescriptors() []*CSVCMsg_GameEventListDescriptorT {
	if m != nil {
		return m.Descriptors
	}
	return nil
}

type CSVCMsg_GameEventListKeyT struct {
	Type                 *int32   `protobuf:"varint,1,opt,name=type" json:"type,omitempty"`
	Name                 *string  `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CSVCMsg_GameEventListKeyT) Reset()         { *m = CSVCMsg_GameEventListKeyT{} }
func (m *CSVCMsg_GameEventListKeyT) String() string { return proto.CompactTextString(m) }
func (*CSVCMsg_GameEventListKeyT) ProtoMessage()    {}
func (*CSVCMsg_GameEventListKeyT) Descriptor() ([]byte, []int) {
	return fileDescriptor_netmessages_c275cb4cc5a5e30a, []int{44, 0}
}
func (m *CSVCMsg_GameEventListKeyT) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CSVCMsg_GameEventListKeyT.Unmarshal(m, b)
}
func (m *CSVCMsg_GameEventListKeyT) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CSVCMsg_GameEventListKeyT.Marshal(b, m, deterministic)
}
func (dst *CSVCMsg_GameEventListKeyT) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CSVCMsg_GameEventListKeyT.Merge(dst, src)
}
func (m *CSVCMsg_GameEventListKeyT) XXX_Size() int {
	return xxx_messageInfo_CSVCMsg_GameEventListKeyT.Size(m)
}
func (m *CSVCMsg_GameEventListKeyT) XXX_DiscardUnknown() {
	xxx_messageInfo_CSVCMsg_GameEventListKeyT.DiscardUnknown(m)
}

var xxx_messageInfo_CSVCMsg_GameEventListKeyT proto.InternalMessageInfo

func (m *CSVCMsg_GameEventListKeyT) GetType() int32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

func (m *CSVCMsg_GameEventListKeyT) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

type CSVCMsg_GameEventListDescriptorT struct {
	Eventid              *int32                       `protobuf:"varint,1,opt,name=eventid" json:"eventid,omitempty"`
	Name                 *string                      `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Keys                 []*CSVCMsg_GameEventListKeyT `protobuf:"bytes,3,rep,name=keys" json:"keys,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *CSVCMsg_GameEventListDescriptorT) Reset()         { *m = CSVCMsg_GameEventListDescriptorT{} }
func (m *CSVCMsg_GameEventListDescriptorT) String() string { return proto.CompactTextString(m) }
func (*CSVCMsg_GameEventListDescriptorT) ProtoMessage()    {}
func (*CSVCMsg_GameEventListDescriptorT) Descriptor() ([]byte, []int) {
	return fileDescriptor_netmessages_c275cb4cc5a5e30a, []int{44, 1}
}
func (m *CSVCMsg_GameEventListDescriptorT) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CSVCMsg_GameEventListDescriptorT.Unmarshal(m, b)
}
func (m *CSVCMsg_GameEventListDescriptorT) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CSVCMsg_GameEventListDescriptorT.Marshal(b, m, deterministic)
}
func (dst *CSVCMsg_GameEventListDescriptorT) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CSVCMsg_GameEventListDescriptorT.Merge(dst, src)
}
func (m *CSVCMsg_GameEventListDescriptorT) XXX_Size() int {
	return xxx_messageInfo_CSVCMsg_GameEventListDescriptorT.Size(m)
}
func (m *CSVCMsg_GameEventListDescriptorT) XXX_DiscardUnknown() {
	xxx_messageInfo_CSVCMsg_GameEventListDescriptorT.DiscardUnknown(m)
}

var xxx_messageInfo_CSVCMsg_GameEventListDescriptorT proto.InternalMessageInfo

func (m *CSVCMsg_GameEventListDescriptorT) GetEventid() int32 {
	if m != nil && m.Eventid != nil {
		return *m.Eventid
	}
	return 0
}

func (m *CSVCMsg_GameEventListDescriptorT) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *CSVCMsg_GameEventListDescriptorT) GetKeys() []*CSVCMsg_GameEventListKeyT {
	if m != nil {
		return m.Keys
	}
	return nil
}

type CSVCMsg_TempEntities struct {
	Reliable             *bool    `protobuf:"varint,1,opt,name=reliable" json:"reliable,omitempty"`
	NumEntries           *int32   `protobuf:"varint,2,opt,name=num_entries,json=numEntries" json:"num_entries,omitempty"`
	EntityData           []byte   `protobuf:"bytes,3,opt,name=entity_data,json=entityData" json:"entity_data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CSVCMsg_TempEntities) Reset()         { *m = CSVCMsg_TempEntities{} }
func (m *CSVCMsg_TempEntities) String() string { return proto.CompactTextString(m) }
func (*CSVCMsg_TempEntities) ProtoMessage()    {}
func (*CSVCMsg_TempEntities) Descriptor() ([]byte, []int) {
	return fileDescriptor_netmessages_c275cb4cc5a5e30a, []int{45}
}
func (m *CSVCMsg_TempEntities) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CSVCMsg_TempEntities.Unmarshal(m, b)
}
func (m *CSVCMsg_TempEntities) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CSVCMsg_TempEntities.Marshal(b, m, deterministic)
}
func (dst *CSVCMsg_TempEntities) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CSVCMsg_TempEntities.Merge(dst, src)
}
func (m *CSVCMsg_TempEntities) XXX_Size() int {
	return xxx_messageInfo_CSVCMsg_TempEntities.Size(m)
}
func (m *CSVCMsg_TempEntities) XXX_DiscardUnknown() {
	xxx_messageInfo_CSVCMsg_TempEntities.DiscardUnknown(m)
}

var xxx_messageInfo_CSVCMsg_TempEntities proto.InternalMessageInfo

func (m *CSVCMsg_TempEntities) GetReliable() bool {
	if m != nil && m.Reliable != nil {
		return *m.Reliable
	}
	return false
}

func (m *CSVCMsg_TempEntities) GetNumEntries() int32 {
	if m != nil && m.NumEntries != nil {
		return *m.NumEntries
	}
	return 0
}

func (m *CSVCMsg_TempEntities) GetEntityData() []byte {
	if m != nil {
		return m.EntityData
	}
	return nil
}

type CSVCMsg_PacketEntities struct {
	MaxEntries           *int32   `protobuf:"varint,1,opt,name=max_entries,json=maxEntries" json:"max_entries,omitempty"`
	UpdatedEntries       *int32   `protobuf:"varint,2,opt,name=updated_entries,json=updatedEntries" json:"updated_entries,omitempty"`
	IsDelta              *bool    `protobuf:"varint,3,opt,name=is_delta,json=isDelta" json:"is_delta,omitempty"`
	UpdateBaseline       *bool    `protobuf:"varint,4,opt,name=update_baseline,json=updateBaseline" json:"update_baseline,omitempty"`
	Baseline             *int32   `protobuf:"varint,5,opt,name=baseline" json:"baseline,omitempty"`
	DeltaFrom            *int32   `protobuf:"varint,6,opt,name=delta_from,json=deltaFrom" json:"delta_from,omitempty"`
	EntityData           []byte   `protobuf:"bytes,7,opt,name=entity_data,json=entityData" json:"entity_data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CSVCMsg_PacketEntities) Reset()         { *m = CSVCMsg_PacketEntities{} }
func (m *CSVCMsg_PacketEntities) String() string { return proto.CompactTextString(m) }
func (*CSVCMsg_PacketEntities) ProtoMessage()    {}
func (*CSVCMsg_PacketEntities) Descriptor() ([]byte, []int) {
	return fileDescriptor_netmessages_c275cb4cc5a5e30a, []int{46}
}
func (m *CSVCMsg_PacketEntities) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CSVCMsg_PacketEntities.Unmarshal(m, b)
}
func (m *CSVCMsg_PacketEntities) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CSVCMsg_PacketEntities.Marshal(b, m, deterministic)
}
func (dst *CSVCMsg_PacketEntities) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CSVCMsg_PacketEntities.Merge(dst, src)
}
func (m *CSVCMsg_PacketEntities) XXX_Size() int {
	return xxx_messageInfo_CSVCMsg_PacketEntities.Size(m)
}
func (m *CSVCMsg_PacketEntities) XXX_DiscardUnknown() {
	xxx_messageInfo_CSVCMsg_PacketEntities.DiscardUnknown(m)
}

var xxx_messageInfo_CSVCMsg_PacketEntities proto.InternalMessageInfo

func (m *CSVCMsg_PacketEntities) GetMaxEntries() int32 {
	if m != nil && m.MaxEntries != nil {
		return *m.MaxEntries
	}
	return 0
}

func (m *CSVCMsg_PacketEntities) GetUpdatedEntries() int32 {
	if m != nil && m.UpdatedEntries != nil {
		return *m.UpdatedEntries
	}
	return 0
}

func (m *CSVCMsg_PacketEntities) GetIsDelta() bool {
	if m != nil && m.IsDelta != nil {
		return *m.IsDelta
	}
	return false
}

func (m *CSVCMsg_PacketEntities) GetUpdateBaseline() bool {
	if m != nil && m.UpdateBaseline != nil {
		return *m.UpdateBaseline
	}
	return false
}

func (m *CSVCMsg_PacketEntities) GetBaseline() int32 {
	if m != nil && m.Baseline != nil {
		return *m.Baseline
	}
	return 0
}

func (m *CSVCMsg_PacketEntities) GetDeltaFrom() int32 {
	if m != nil && m.DeltaFrom != nil {
		return *m.DeltaFrom
	}
	return 0
}

func (m *CSVCMsg_PacketEntities) GetEntityData() []byte {
	if m != nil {
		return m.EntityData
	}
	return nil
}

type CSVCMsg_Sounds struct {
	ReliableSound        *bool                       `protobuf:"varint,1,opt,name=reliable_sound,json=reliableSound" json:"reliable_sound,omitempty"`
	Sounds               []*CSVCMsg_SoundsSounddataT `protobuf:"bytes,2,rep,name=sounds" json:"sounds,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *CSVCMsg_Sounds) Reset()         { *m = CSVCMsg_Sounds{} }
func (m *CSVCMsg_Sounds) String() string { return proto.CompactTextString(m) }
func (*CSVCMsg_Sounds) ProtoMessage()    {}
func (*CSVCMsg_Sounds) Descriptor() ([]byte, []int) {
	return fileDescriptor_netmessages_c275cb4cc5a5e30a, []int{47}
}
func (m *CSVCMsg_Sounds) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CSVCMsg_Sounds.Unmarshal(m, b)
}
func (m *CSVCMsg_Sounds) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CSVCMsg_Sounds.Marshal(b, m, deterministic)
}
func (dst *CSVCMsg_Sounds) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CSVCMsg_Sounds.Merge(dst, src)
}
func (m *CSVCMsg_Sounds) XXX_Size() int {
	return xxx_messageInfo_CSVCMsg_Sounds.Size(m)
}
func (m *CSVCMsg_Sounds) XXX_DiscardUnknown() {
	xxx_messageInfo_CSVCMsg_Sounds.DiscardUnknown(m)
}

var xxx_messageInfo_CSVCMsg_Sounds proto.InternalMessageInfo

func (m *CSVCMsg_Sounds) GetReliableSound() bool {
	if m != nil && m.ReliableSound != nil {
		return *m.ReliableSound
	}
	return false
}

func (m *CSVCMsg_Sounds) GetSounds() []*CSVCMsg_SoundsSounddataT {
	if m != nil {
		return m.Sounds
	}
	return nil
}

type CSVCMsg_SoundsSounddataT struct {
	OriginX              *int32   `protobuf:"zigzag32,1,opt,name=origin_x,json=originX" json:"origin_x,omitempty"`
	OriginY              *int32   `protobuf:"zigzag32,2,opt,name=origin_y,json=originY" json:"origin_y,omitempty"`
	OriginZ              *int32   `protobuf:"zigzag32,3,opt,name=origin_z,json=originZ" json:"origin_z,omitempty"`
	Volume               *uint32  `protobuf:"varint,4,opt,name=volume" json:"volume,omitempty"`
	DelayValue           *float32 `protobuf:"fixed32,5,opt,name=delay_value,json=delayValue" json:"delay_value,omitempty"`
	SequenceNumber       *int32   `protobuf:"varint,6,opt,name=sequence_number,json=sequenceNumber" json:"sequence_number,omitempty"`
	EntityIndex          *int32   `protobuf:"varint,7,opt,name=entity_index,json=entityIndex" json:"entity_index,omitempty"`
	Channel              *int32   `protobuf:"varint,8,opt,name=channel" json:"channel,omitempty"`
	Pitch                *int32   `protobuf:"varint,9,opt,name=pitch" json:"pitch,omitempty"`
	Flags                *int32   `protobuf:"varint,10,opt,name=flags" json:"flags,omitempty"`
	SoundNum             *uint32  `protobuf:"varint,11,opt,name=sound_num,json=soundNum" json:"sound_num,omitempty"`
	SoundNumHandle       *uint32  `protobuf:"fixed32,12,opt,name=sound_num_handle,json=soundNumHandle" json:"sound_num_handle,omitempty"`
	SpeakerEntity        *int32   `protobuf:"varint,13,opt,name=speaker_entity,json=speakerEntity" json:"speaker_entity,omitempty"`
	RandomSeed           *int32   `protobuf:"varint,14,opt,name=random_seed,json=randomSeed" json:"random_seed,omitempty"`
	SoundLevel           *int32   `protobuf:"varint,15,opt,name=sound_level,json=soundLevel" json:"sound_level,omitempty"`
	IsSentence           *bool    `protobuf:"varint,16,opt,name=is_sentence,json=isSentence" json:"is_sentence,omitempty"`
	IsAmbient            *bool    `protobuf:"varint,17,opt,name=is_ambient,json=isAmbient" json:"is_ambient,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CSVCMsg_SoundsSounddataT) Reset()         { *m = CSVCMsg_SoundsSounddataT{} }
func (m *CSVCMsg_SoundsSounddataT) String() string { return proto.CompactTextString(m) }
func (*CSVCMsg_SoundsSounddataT) ProtoMessage()    {}
func (*CSVCMsg_SoundsSounddataT) Descriptor() ([]byte, []int) {
	return fileDescriptor_netmessages_c275cb4cc5a5e30a, []int{47, 0}
}
func (m *CSVCMsg_SoundsSounddataT) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CSVCMsg_SoundsSounddataT.Unmarshal(m, b)
}
func (m *CSVCMsg_SoundsSounddataT) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CSVCMsg_SoundsSounddataT.Marshal(b, m, deterministic)
}
func (dst *CSVCMsg_SoundsSounddataT) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CSVCMsg_SoundsSounddataT.Merge(dst, src)
}
func (m *CSVCMsg_SoundsSounddataT) XXX_Size() int {
	return xxx_messageInfo_CSVCMsg_SoundsSounddataT.Size(m)
}
func (m *CSVCMsg_SoundsSounddataT) XXX_DiscardUnknown() {
	xxx_messageInfo_CSVCMsg_SoundsSounddataT.DiscardUnknown(m)
}

var xxx_messageInfo_CSVCMsg_SoundsSounddataT proto.InternalMessageInfo

func (m *CSVCMsg_SoundsSounddataT) GetOriginX() int32 {
	if m != nil && m.OriginX != nil {
		return *m.OriginX
	}
	return 0
}

func (m *CSVCMsg_SoundsSounddataT) GetOriginY() int32 {
	if m != nil && m.OriginY != nil {
		return *m.OriginY
	}
	return 0
}

func (m *CSVCMsg_SoundsSounddataT) GetOriginZ() int32 {
	if m != nil && m.OriginZ != nil {
		return *m.OriginZ
	}
	return 0
}

func (m *CSVCMsg_SoundsSounddataT) GetVolume() uint32 {
	if m != nil && m.Volume != nil {
		return *m.Volume
	}
	return 0
}

func (m *CSVCMsg_SoundsSounddataT) GetDelayValue() float32 {
	if m != nil && m.DelayValue != nil {
		return *m.DelayValue
	}
	return 0
}

func (m *CSVCMsg_SoundsSounddataT) GetSequenceNumber() int32 {
	if m != nil && m.SequenceNumber != nil {
		return *m.SequenceNumber
	}
	return 0
}

func (m *CSVCMsg_SoundsSounddataT) GetEntityIndex() int32 {
	if m != nil && m.EntityIndex != nil {
		return *m.EntityIndex
	}
	return 0
}

func (m *CSVCMsg_SoundsSounddataT) GetChannel() int32 {
	if m != nil && m.Channel != nil {
		return *m.Channel
	}
	return 0
}

func (m *CSVCMsg_SoundsSounddataT) GetPitch() int32 {
	if m != nil && m.Pitch != nil {
		return *m.Pitch
	}
	return 0
}

func (m *CSVCMsg_SoundsSounddataT) GetFlags() int32 {
	if m != nil && m.Flags != nil {
		return *m.Flags
	}
	return 0
}

func (m *CSVCMsg_SoundsSounddataT) GetSoundNum() uint32 {
	if m != nil && m.SoundNum != nil {
		return *m.SoundNum
	}
	return 0
}

func (m *CSVCMsg_SoundsSounddataT) GetSoundNumHandle() uint32 {
	if m != nil && m.SoundNumHandle != nil {
		return *m.SoundNumHandle
	}
	return 0
}

func (m *CSVCMsg_SoundsSounddataT) GetSpeakerEntity() int32 {
	if m != nil && m.SpeakerEntity != nil {
		return *m.SpeakerEntity
	}
	return 0
}

func (m *CSVCMsg_SoundsSounddataT) GetRandomSeed() int32 {
	if m != nil && m.RandomSeed != nil {
		return *m.RandomSeed
	}
	return 0
}

func (m *CSVCMsg_SoundsSounddataT) GetSoundLevel() int32 {
	if m != nil && m.SoundLevel != nil {
		return *m.SoundLevel
	}
	return 0
}

func (m *CSVCMsg_SoundsSounddataT) GetIsSentence() bool {
	if m != nil && m.IsSentence != nil {
		return *m.IsSentence
	}
	return false
}

func (m *CSVCMsg_SoundsSounddataT) GetIsAmbient() bool {
	if m != nil && m.IsAmbient != nil {
		return *m.IsAmbient
	}
	return false
}

type CSVCMsg_EntityMsg struct {
	EntIndex             *int32   `protobuf:"varint,1,opt,name=ent_index,json=entIndex" json:"ent_index,omitempty"`
	ClassId              *int32   `protobuf:"varint,2,opt,name=class_id,json=classId" json:"class_id,omitempty"`
	EntData              []byte   `protobuf:"bytes,3,opt,name=ent_data,json=entData" json:"ent_data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CSVCMsg_EntityMsg) Reset()         { *m = CSVCMsg_EntityMsg{} }
func (m *CSVCMsg_EntityMsg) String() string { return proto.CompactTextString(m) }
func (*CSVCMsg_EntityMsg) ProtoMessage()    {}
func (*CSVCMsg_EntityMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_netmessages_c275cb4cc5a5e30a, []int{48}
}
func (m *CSVCMsg_EntityMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CSVCMsg_EntityMsg.Unmarshal(m, b)
}
func (m *CSVCMsg_EntityMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CSVCMsg_EntityMsg.Marshal(b, m, deterministic)
}
func (dst *CSVCMsg_EntityMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CSVCMsg_EntityMsg.Merge(dst, src)
}
func (m *CSVCMsg_EntityMsg) XXX_Size() int {
	return xxx_messageInfo_CSVCMsg_EntityMsg.Size(m)
}
func (m *CSVCMsg_EntityMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_CSVCMsg_EntityMsg.DiscardUnknown(m)
}

var xxx_messageInfo_CSVCMsg_EntityMsg proto.InternalMessageInfo

func (m *CSVCMsg_EntityMsg) GetEntIndex() int32 {
	if m != nil && m.EntIndex != nil {
		return *m.EntIndex
	}
	return 0
}

func (m *CSVCMsg_EntityMsg) GetClassId() int32 {
	if m != nil && m.ClassId != nil {
		return *m.ClassId
	}
	return 0
}

func (m *CSVCMsg_EntityMsg) GetEntData() []byte {
	if m != nil {
		return m.EntData
	}
	return nil
}

type CSVCMsg_CmdKeyValues struct {
	Keyvalues            []byte   `protobuf:"bytes,1,opt,name=keyvalues" json:"keyvalues,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CSVCMsg_CmdKeyValues) Reset()         { *m = CSVCMsg_CmdKeyValues{} }
func (m *CSVCMsg_CmdKeyValues) String() string { return proto.CompactTextString(m) }
func (*CSVCMsg_CmdKeyValues) ProtoMessage()    {}
func (*CSVCMsg_CmdKeyValues) Descriptor() ([]byte, []int) {
	return fileDescriptor_netmessages_c275cb4cc5a5e30a, []int{49}
}
func (m *CSVCMsg_CmdKeyValues) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CSVCMsg_CmdKeyValues.Unmarshal(m, b)
}
func (m *CSVCMsg_CmdKeyValues) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CSVCMsg_CmdKeyValues.Marshal(b, m, deterministic)
}
func (dst *CSVCMsg_CmdKeyValues) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CSVCMsg_CmdKeyValues.Merge(dst, src)
}
func (m *CSVCMsg_CmdKeyValues) XXX_Size() int {
	return xxx_messageInfo_CSVCMsg_CmdKeyValues.Size(m)
}
func (m *CSVCMsg_CmdKeyValues) XXX_DiscardUnknown() {
	xxx_messageInfo_CSVCMsg_CmdKeyValues.DiscardUnknown(m)
}

var xxx_messageInfo_CSVCMsg_CmdKeyValues proto.InternalMessageInfo

func (m *CSVCMsg_CmdKeyValues) GetKeyvalues() []byte {
	if m != nil {
		return m.Keyvalues
	}
	return nil
}

type CSVCMsg_EncryptedData struct {
	Encrypted            []byte   `protobuf:"bytes,1,opt,name=encrypted" json:"encrypted,omitempty"`
	KeyType              *int32   `protobuf:"varint,2,opt,name=key_type,json=keyType" json:"key_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CSVCMsg_EncryptedData) Reset()         { *m = CSVCMsg_EncryptedData{} }
func (m *CSVCMsg_EncryptedData) String() string { return proto.CompactTextString(m) }
func (*CSVCMsg_EncryptedData) ProtoMessage()    {}
func (*CSVCMsg_EncryptedData) Descriptor() ([]byte, []int) {
	return fileDescriptor_netmessages_c275cb4cc5a5e30a, []int{50}
}
func (m *CSVCMsg_EncryptedData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CSVCMsg_EncryptedData.Unmarshal(m, b)
}
func (m *CSVCMsg_EncryptedData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CSVCMsg_EncryptedData.Marshal(b, m, deterministic)
}
func (dst *CSVCMsg_EncryptedData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CSVCMsg_EncryptedData.Merge(dst, src)
}
func (m *CSVCMsg_EncryptedData) XXX_Size() int {
	return xxx_messageInfo_CSVCMsg_EncryptedData.Size(m)
}
func (m *CSVCMsg_EncryptedData) XXX_DiscardUnknown() {
	xxx_messageInfo_CSVCMsg_EncryptedData.DiscardUnknown(m)
}

var xxx_messageInfo_CSVCMsg_EncryptedData proto.InternalMessageInfo

func (m *CSVCMsg_EncryptedData) GetEncrypted() []byte {
	if m != nil {
		return m.Encrypted
	}
	return nil
}

func (m *CSVCMsg_EncryptedData) GetKeyType() int32 {
	if m != nil && m.KeyType != nil {
		return *m.KeyType
	}
	return 0
}

type CSVCMsg_HltvReplay struct {
	Delay                *int32   `protobuf:"varint,1,opt,name=delay" json:"delay,omitempty"`
	PrimaryTarget        *int32   `protobuf:"varint,2,opt,name=primary_target,json=primaryTarget" json:"primary_target,omitempty"`
	ReplayStopAt         *int32   `protobuf:"varint,3,opt,name=replay_stop_at,json=replayStopAt" json:"replay_stop_at,omitempty"`
	ReplayStartAt        *int32   `protobuf:"varint,4,opt,name=replay_start_at,json=replayStartAt" json:"replay_start_at,omitempty"`
	ReplaySlowdownBegin  *int32   `protobuf:"varint,5,opt,name=replay_slowdown_begin,json=replaySlowdownBegin" json:"replay_slowdown_begin,omitempty"`
	ReplaySlowdownEnd    *int32   `protobuf:"varint,6,opt,name=replay_slowdown_end,json=replaySlowdownEnd" json:"replay_slowdown_end,omitempty"`
	ReplaySlowdownRate   *float32 `protobuf:"fixed32,7,opt,name=replay_slowdown_rate,json=replaySlowdownRate" json:"replay_slowdown_rate,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CSVCMsg_HltvReplay) Reset()         { *m = CSVCMsg_HltvReplay{} }
func (m *CSVCMsg_HltvReplay) String() string { return proto.CompactTextString(m) }
func (*CSVCMsg_HltvReplay) ProtoMessage()    {}
func (*CSVCMsg_HltvReplay) Descriptor() ([]byte, []int) {
	return fileDescriptor_netmessages_c275cb4cc5a5e30a, []int{51}
}
func (m *CSVCMsg_HltvReplay) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CSVCMsg_HltvReplay.Unmarshal(m, b)
}
func (m *CSVCMsg_HltvReplay) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CSVCMsg_HltvReplay.Marshal(b, m, deterministic)
}
func (dst *CSVCMsg_HltvReplay) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CSVCMsg_HltvReplay.Merge(dst, src)
}
func (m *CSVCMsg_HltvReplay) XXX_Size() int {
	return xxx_messageInfo_CSVCMsg_HltvReplay.Size(m)
}
func (m *CSVCMsg_HltvReplay) XXX_DiscardUnknown() {
	xxx_messageInfo_CSVCMsg_HltvReplay.DiscardUnknown(m)
}

var xxx_messageInfo_CSVCMsg_HltvReplay proto.InternalMessageInfo

func (m *CSVCMsg_HltvReplay) GetDelay() int32 {
	if m != nil && m.Delay != nil {
		return *m.Delay
	}
	return 0
}

func (m *CSVCMsg_HltvReplay) GetPrimaryTarget() int32 {
	if m != nil && m.PrimaryTarget != nil {
		return *m.PrimaryTarget
	}
	return 0
}

func (m *CSVCMsg_HltvReplay) GetReplayStopAt() int32 {
	if m != nil && m.ReplayStopAt != nil {
		return *m.ReplayStopAt
	}
	return 0
}

func (m *CSVCMsg_HltvReplay) GetReplayStartAt() int32 {
	if m != nil && m.ReplayStartAt != nil {
		return *m.ReplayStartAt
	}
	return 0
}

func (m *CSVCMsg_HltvReplay) GetReplaySlowdownBegin() int32 {
	if m != nil && m.ReplaySlowdownBegin != nil {
		return *m.ReplaySlowdownBegin
	}
	return 0
}

func (m *CSVCMsg_HltvReplay) GetReplaySlowdownEnd() int32 {
	if m != nil && m.ReplaySlowdownEnd != nil {
		return *m.ReplaySlowdownEnd
	}
	return 0
}

func (m *CSVCMsg_HltvReplay) GetReplaySlowdownRate() float32 {
	if m != nil && m.ReplaySlowdownRate != nil {
		return *m.ReplaySlowdownRate
	}
	return 0
}

type CCLCMsg_HltvReplay struct {
	Request               *int32   `protobuf:"varint,1,opt,name=request" json:"request,omitempty"`
	SlowdownLength        *float32 `protobuf:"fixed32,2,opt,name=slowdown_length,json=slowdownLength" json:"slowdown_length,omitempty"`
	SlowdownRate          *float32 `protobuf:"fixed32,3,opt,name=slowdown_rate,json=slowdownRate" json:"slowdown_rate,omitempty"`
	PrimaryTargetEntIndex *int32   `protobuf:"varint,4,opt,name=primary_target_ent_index,json=primaryTargetEntIndex" json:"primary_target_ent_index,omitempty"`
	EventTime             *float32 `protobuf:"fixed32,5,opt,name=event_time,json=eventTime" json:"event_time,omitempty"`
	XXX_NoUnkeyedLiteral  struct{} `json:"-"`
	XXX_unrecognized      []byte   `json:"-"`
	XXX_sizecache         int32    `json:"-"`
}

func (m *CCLCMsg_HltvReplay) Reset()         { *m = CCLCMsg_HltvReplay{} }
func (m *CCLCMsg_HltvReplay) String() string { return proto.CompactTextString(m) }
func (*CCLCMsg_HltvReplay) ProtoMessage()    {}
func (*CCLCMsg_HltvReplay) Descriptor() ([]byte, []int) {
	return fileDescriptor_netmessages_c275cb4cc5a5e30a, []int{52}
}
func (m *CCLCMsg_HltvReplay) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CCLCMsg_HltvReplay.Unmarshal(m, b)
}
func (m *CCLCMsg_HltvReplay) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CCLCMsg_HltvReplay.Marshal(b, m, deterministic)
}
func (dst *CCLCMsg_HltvReplay) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CCLCMsg_HltvReplay.Merge(dst, src)
}
func (m *CCLCMsg_HltvReplay) XXX_Size() int {
	return xxx_messageInfo_CCLCMsg_HltvReplay.Size(m)
}
func (m *CCLCMsg_HltvReplay) XXX_DiscardUnknown() {
	xxx_messageInfo_CCLCMsg_HltvReplay.DiscardUnknown(m)
}

var xxx_messageInfo_CCLCMsg_HltvReplay proto.InternalMessageInfo

func (m *CCLCMsg_HltvReplay) GetRequest() int32 {
	if m != nil && m.Request != nil {
		return *m.Request
	}
	return 0
}

func (m *CCLCMsg_HltvReplay) GetSlowdownLength() float32 {
	if m != nil && m.SlowdownLength != nil {
		return *m.SlowdownLength
	}
	return 0
}

func (m *CCLCMsg_HltvReplay) GetSlowdownRate() float32 {
	if m != nil && m.SlowdownRate != nil {
		return *m.SlowdownRate
	}
	return 0
}

func (m *CCLCMsg_HltvReplay) GetPrimaryTargetEntIndex() int32 {
	if m != nil && m.PrimaryTargetEntIndex != nil {
		return *m.PrimaryTargetEntIndex
	}
	return 0
}

func (m *CCLCMsg_HltvReplay) GetEventTime() float32 {
	if m != nil && m.EventTime != nil {
		return *m.EventTime
	}
	return 0
}

type CSVCMsg_Broadcast_Command struct {
	Cmd                  *string  `protobuf:"bytes,1,opt,name=cmd" json:"cmd,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CSVCMsg_Broadcast_Command) Reset()         { *m = CSVCMsg_Broadcast_Command{} }
func (m *CSVCMsg_Broadcast_Command) String() string { return proto.CompactTextString(m) }
func (*CSVCMsg_Broadcast_Command) ProtoMessage()    {}
func (*CSVCMsg_Broadcast_Command) Descriptor() ([]byte, []int) {
	return fileDescriptor_netmessages_c275cb4cc5a5e30a, []int{53}
}
func (m *CSVCMsg_Broadcast_Command) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CSVCMsg_Broadcast_Command.Unmarshal(m, b)
}
func (m *CSVCMsg_Broadcast_Command) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CSVCMsg_Broadcast_Command.Marshal(b, m, deterministic)
}
func (dst *CSVCMsg_Broadcast_Command) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CSVCMsg_Broadcast_Command.Merge(dst, src)
}
func (m *CSVCMsg_Broadcast_Command) XXX_Size() int {
	return xxx_messageInfo_CSVCMsg_Broadcast_Command.Size(m)
}
func (m *CSVCMsg_Broadcast_Command) XXX_DiscardUnknown() {
	xxx_messageInfo_CSVCMsg_Broadcast_Command.DiscardUnknown(m)
}

var xxx_messageInfo_CSVCMsg_Broadcast_Command proto.InternalMessageInfo

func (m *CSVCMsg_Broadcast_Command) GetCmd() string {
	if m != nil && m.Cmd != nil {
		return *m.Cmd
	}
	return ""
}

func init() {
	proto.RegisterType((*CMsgVector)(nil), "CMsgVector")
	proto.RegisterType((*CMsgVector2D)(nil), "CMsgVector2D")
	proto.RegisterType((*CMsgQAngle)(nil), "CMsgQAngle")
	proto.RegisterType((*CMsgRGBA)(nil), "CMsgRGBA")
	proto.RegisterType((*CNETMsg_Tick)(nil), "CNETMsg_Tick")
	proto.RegisterType((*CNETMsg_StringCmd)(nil), "CNETMsg_StringCmd")
	proto.RegisterType((*CNETMsg_SignonState)(nil), "CNETMsg_SignonState")
	proto.RegisterType((*CMsg_CVars)(nil), "CMsg_CVars")
	proto.RegisterType((*CMsg_CVars_CVar)(nil), "CMsg_CVars.CVar")
	proto.RegisterType((*CNETMsg_SetConVar)(nil), "CNETMsg_SetConVar")
	proto.RegisterType((*CNETMsg_NOP)(nil), "CNETMsg_NOP")
	proto.RegisterType((*CNETMsg_Disconnect)(nil), "CNETMsg_Disconnect")
	proto.RegisterType((*CNETMsg_File)(nil), "CNETMsg_File")
	proto.RegisterType((*CNETMsg_SplitScreenUser)(nil), "CNETMsg_SplitScreenUser")
	proto.RegisterType((*CNETMsg_PlayerAvatarData)(nil), "CNETMsg_PlayerAvatarData")
	proto.RegisterType((*CCLCMsg_ClientInfo)(nil), "CCLCMsg_ClientInfo")
	proto.RegisterType((*CCLCMsg_Move)(nil), "CCLCMsg_Move")
	proto.RegisterType((*CCLCMsg_VoiceData)(nil), "CCLCMsg_VoiceData")
	proto.RegisterType((*CCLCMsg_BaselineAck)(nil), "CCLCMsg_BaselineAck")
	proto.RegisterType((*CCLCMsg_ListenEvents)(nil), "CCLCMsg_ListenEvents")
	proto.RegisterType((*CCLCMsg_RespondCvarValue)(nil), "CCLCMsg_RespondCvarValue")
	proto.RegisterType((*CCLCMsg_FileCRCCheck)(nil), "CCLCMsg_FileCRCCheck")
	proto.RegisterType((*CCLCMsg_LoadingProgress)(nil), "CCLCMsg_LoadingProgress")
	proto.RegisterType((*CCLCMsg_SplitPlayerConnect)(nil), "CCLCMsg_SplitPlayerConnect")
	proto.RegisterType((*CCLCMsg_CmdKeyValues)(nil), "CCLCMsg_CmdKeyValues")
	proto.RegisterType((*CSVCMsg_ServerInfo)(nil), "CSVCMsg_ServerInfo")
	proto.RegisterType((*CSVCMsg_ClassInfo)(nil), "CSVCMsg_ClassInfo")
	proto.RegisterType((*CSVCMsg_ClassInfoClassT)(nil), "CSVCMsg_ClassInfo.class_t")
	proto.RegisterType((*CSVCMsg_SendTable)(nil), "CSVCMsg_SendTable")
	proto.RegisterType((*CSVCMsg_SendTableSendpropT)(nil), "CSVCMsg_SendTable.sendprop_t")
	proto.RegisterType((*CSVCMsg_Print)(nil), "CSVCMsg_Print")
	proto.RegisterType((*CSVCMsg_SetPause)(nil), "CSVCMsg_SetPause")
	proto.RegisterType((*CSVCMsg_SetView)(nil), "CSVCMsg_SetView")
	proto.RegisterType((*CSVCMsg_CreateStringTable)(nil), "CSVCMsg_CreateStringTable")
	proto.RegisterType((*CSVCMsg_UpdateStringTable)(nil), "CSVCMsg_UpdateStringTable")
	proto.RegisterType((*CSVCMsg_VoiceInit)(nil), "CSVCMsg_VoiceInit")
	proto.RegisterType((*CSVCMsg_VoiceData)(nil), "CSVCMsg_VoiceData")
	proto.RegisterType((*CSVCMsg_FixAngle)(nil), "CSVCMsg_FixAngle")
	proto.RegisterType((*CSVCMsg_CrosshairAngle)(nil), "CSVCMsg_CrosshairAngle")
	proto.RegisterType((*CSVCMsg_Prefetch)(nil), "CSVCMsg_Prefetch")
	proto.RegisterType((*CSVCMsg_BSPDecal)(nil), "CSVCMsg_BSPDecal")
	proto.RegisterType((*CSVCMsg_SplitScreen)(nil), "CSVCMsg_SplitScreen")
	proto.RegisterType((*CSVCMsg_GetCvarValue)(nil), "CSVCMsg_GetCvarValue")
	proto.RegisterType((*CSVCMsg_Menu)(nil), "CSVCMsg_Menu")
	proto.RegisterType((*CSVCMsg_UserMessage)(nil), "CSVCMsg_UserMessage")
	proto.RegisterType((*CSVCMsg_PaintmapData)(nil), "CSVCMsg_PaintmapData")
	proto.RegisterType((*CSVCMsg_GameEvent)(nil), "CSVCMsg_GameEvent")
	proto.RegisterType((*CSVCMsg_GameEventKeyT)(nil), "CSVCMsg_GameEvent.key_t")
	proto.RegisterType((*CSVCMsg_GameEventList)(nil), "CSVCMsg_GameEventList")
	proto.RegisterType((*CSVCMsg_GameEventListKeyT)(nil), "CSVCMsg_GameEventList.key_t")
	proto.RegisterType((*CSVCMsg_GameEventListDescriptorT)(nil), "CSVCMsg_GameEventList.descriptor_t")
	proto.RegisterType((*CSVCMsg_TempEntities)(nil), "CSVCMsg_TempEntities")
	proto.RegisterType((*CSVCMsg_PacketEntities)(nil), "CSVCMsg_PacketEntities")
	proto.RegisterType((*CSVCMsg_Sounds)(nil), "CSVCMsg_Sounds")
	proto.RegisterType((*CSVCMsg_SoundsSounddataT)(nil), "CSVCMsg_Sounds.sounddata_t")
	proto.RegisterType((*CSVCMsg_EntityMsg)(nil), "CSVCMsg_EntityMsg")
	proto.RegisterType((*CSVCMsg_CmdKeyValues)(nil), "CSVCMsg_CmdKeyValues")
	proto.RegisterType((*CSVCMsg_EncryptedData)(nil), "CSVCMsg_EncryptedData")
	proto.RegisterType((*CSVCMsg_HltvReplay)(nil), "CSVCMsg_HltvReplay")
	proto.RegisterType((*CCLCMsg_HltvReplay)(nil), "CCLCMsg_HltvReplay")
	proto.RegisterType((*CSVCMsg_Broadcast_Command)(nil), "CSVCMsg_Broadcast_Command")
	proto.RegisterEnum("NET_Messages", NET_Messages_name, NET_Messages_value)
	proto.RegisterEnum("CLC_Messages", CLC_Messages_name, CLC_Messages_value)
	proto.RegisterEnum("VoiceDataFormatT", VoiceDataFormatT_name, VoiceDataFormatT_value)
	proto.RegisterEnum("ESplitScreenMessageType", ESplitScreenMessageType_name, ESplitScreenMessageType_value)
	proto.RegisterEnum("SVC_Messages", SVC_Messages_name, SVC_Messages_value)
	proto.RegisterEnum("ReplayEventTypeT", ReplayEventTypeT_name, ReplayEventTypeT_value)
}

func init() { proto.RegisterFile("netmessages.proto", fileDescriptor_netmessages_c275cb4cc5a5e30a) }

var fileDescriptor_netmessages_c275cb4cc5a5e30a = []byte{
	// 4273 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x7a, 0xcf, 0x6f, 0x1b, 0x49,
	0x76, 0xff, 0x90, 0x12, 0x45, 0xb2, 0x48, 0x4a, 0xad, 0x92, 0x6c, 0x53, 0xf2, 0x78, 0x6c, 0xd3,
	0xbb, 0x33, 0x86, 0xb1, 0x96, 0x67, 0x3d, 0x9e, 0x5d, 0x60, 0xbe, 0xdf, 0x43, 0x64, 0x8a, 0xf2,
	0x28, 0x23, 0xc9, 0xda, 0x26, 0xad, 0xcd, 0x6c, 0x0e, 0x95, 0x52, 0x77, 0x89, 0x2a, 0xb0, 0x7f,
	0x70, 0xbb, 0x8a, 0x94, 0x34, 0x48, 0x80, 0x45, 0x80, 0x60, 0xf7, 0x10, 0x20, 0x87, 0xe4, 0xb2,
	0xf7, 0x5c, 0x93, 0x5b, 0x0e, 0xf9, 0x0f, 0x72, 0x0d, 0x90, 0x73, 0x10, 0x20, 0x7f, 0x42, 0x2e,
	0xb9, 0x25, 0x78, 0xaf, 0xaa, 0xba, 0x9b, 0x92, 0xbd, 0xbb, 0x03, 0xe4, 0x22, 0xb0, 0x3e, 0xef,
	0xd5, 0x8f, 0x7e, 0xf5, 0xea, 0xbd, 0xcf, 0xab, 0x12, 0x59, 0x4f, 0x84, 0x8e, 0x85, 0x52, 0x7c,
	0x2c, 0xd4, 0xce, 0x34, 0x4b, 0x75, 0xba, 0xfd, 0x68, 0x9c, 0xa6, 0xe3, 0x48, 0xbc, 0xc0, 0xd6,
	0xd9, 0xec, 0xfc, 0x45, 0x28, 0x54, 0x90, 0xc9, 0xa9, 0x4e, 0x33, 0xa3, 0xd1, 0xfb, 0x09, 0x21,
	0xfd, 0x23, 0x35, 0x3e, 0x15, 0x81, 0x4e, 0x33, 0xda, 0x26, 0x95, 0xab, 0x6e, 0xe5, 0x51, 0xe5,
	0x69, 0xd5, 0xaf, 0x5c, 0x41, 0xeb, 0xba, 0x5b, 0x35, 0xad, 0x6b, 0x68, 0x7d, 0xd7, 0x5d, 0x32,
	0xad, 0xef, 0x7a, 0xcf, 0x48, 0xbb, 0xe8, 0xf7, 0x72, 0xef, 0x77, 0xf5, 0x74, 0x73, 0xfc, 0x6c,
	0x37, 0x19, 0x47, 0xe2, 0x7b, 0xcc, 0xf1, 0x9a, 0x34, 0xa0, 0x9f, 0xff, 0xe6, 0xf5, 0x2e, 0x48,
	0x32, 0xec, 0x55, 0xf3, 0x2b, 0xb8, 0xce, 0x31, 0xf6, 0xaa, 0xf9, 0x95, 0x31, 0xb4, 0xce, 0xb0,
	0x57, 0xcd, 0xaf, 0x9c, 0x41, 0x8b, 0x77, 0x97, 0x4d, 0x8b, 0xf7, 0x7e, 0x5b, 0x25, 0xed, 0xfe,
	0xf1, 0x60, 0x74, 0xa4, 0xc6, 0x6c, 0x24, 0x83, 0x09, 0xa5, 0x64, 0x59, 0xcb, 0x60, 0x82, 0x63,
	0x75, 0x7c, 0xfc, 0x4d, 0x7f, 0x4c, 0x36, 0x2f, 0x52, 0xa5, 0x59, 0x90, 0xc6, 0xd3, 0x99, 0xe6,
	0x5a, 0xa6, 0x89, 0x96, 0xb1, 0xc0, 0x51, 0x3a, 0xfe, 0x06, 0xc8, 0xfa, 0x8b, 0x22, 0xfa, 0x0d,
	0xe9, 0xbd, 0xaf, 0x0b, 0x53, 0x3a, 0x64, 0xa1, 0x98, 0x4b, 0x44, 0xba, 0x35, 0x1c, 0xe0, 0xe1,
	0x7b, 0x06, 0x18, 0xea, 0x70, 0xcf, 0xa9, 0xd1, 0x03, 0xf2, 0x18, 0x07, 0x3b, 0xcf, 0x78, 0x2c,
	0x94, 0xe6, 0x99, 0x7e, 0xcf, 0x58, 0x2b, 0x38, 0xd6, 0x27, 0xa0, 0xb8, 0xbf, 0xa0, 0xb7, 0x30,
	0xd4, 0x33, 0xb2, 0x7e, 0x11, 0xe9, 0x39, 0xcb, 0xc4, 0x34, 0xe2, 0xd7, 0xec, 0x3c, 0xe2, 0x63,
	0xd5, 0xad, 0x63, 0xd7, 0x35, 0x10, 0xf8, 0x88, 0xef, 0x03, 0xdc, 0x7b, 0x4e, 0xd6, 0x9d, 0x69,
	0x86, 0x3a, 0x93, 0xc9, 0xb8, 0x1f, 0x87, 0xb4, 0x4b, 0xea, 0x41, 0x1a, 0xc7, 0x3c, 0x09, 0xd1,
	0x44, 0x4d, 0xdf, 0x35, 0x7b, 0xff, 0x5a, 0x21, 0x1b, 0xb9, 0xbe, 0x1c, 0x27, 0x69, 0x32, 0xd4,
	0x5c, 0x0b, 0xfa, 0x98, 0xb4, 0x15, 0x36, 0x99, 0x82, 0xb6, 0xb5, 0x6c, 0x4b, 0x95, 0x54, 0x1e,
	0x92, 0x96, 0x9a, 0xf2, 0xcb, 0x84, 0x05, 0xe9, 0x2c, 0xd1, 0xb8, 0x73, 0x1d, 0x9f, 0x20, 0xd4,
	0x07, 0x84, 0xfe, 0x88, 0xd0, 0x64, 0x16, 0x33, 0x25, 0xb2, 0xb9, 0xc8, 0x18, 0x2c, 0x51, 0x64,
	0x0a, 0xf7, 0xb4, 0xe3, 0x7b, 0xc9, 0x2c, 0x1e, 0xa2, 0xe0, 0xc4, 0xe0, 0xf4, 0x39, 0xa1, 0x56,
	0x85, 0x25, 0x42, 0x5f, 0xa6, 0xd9, 0x44, 0x86, 0xaa, 0xbb, 0xfc, 0x68, 0xe9, 0x69, 0xd3, 0x5f,
	0xb7, 0x92, 0xe3, 0x5c, 0x40, 0xb7, 0x48, 0x23, 0xe6, 0x53, 0x96, 0xf0, 0x58, 0xe0, 0x8e, 0x34,
	0xfd, 0x7a, 0xcc, 0xa7, 0xc7, 0x3c, 0x16, 0xbd, 0xbf, 0xa9, 0x18, 0xdf, 0x64, 0xfd, 0x53, 0x9e,
	0x29, 0xfa, 0x29, 0xa9, 0x05, 0x73, 0x9e, 0xa9, 0x6e, 0xe5, 0xd1, 0xd2, 0xd3, 0xd6, 0x4b, 0x6f,
	0xa7, 0x90, 0xed, 0xc0, 0x5f, 0xdf, 0x88, 0xb7, 0xbf, 0x25, 0xcb, 0xd0, 0x04, 0x67, 0xc2, 0x51,
	0x8d, 0xa5, 0xf0, 0x37, 0xdd, 0x24, 0xb5, 0x39, 0x8f, 0x66, 0x02, 0xbf, 0xb2, 0xe9, 0x9b, 0x06,
	0xfd, 0x8c, 0xac, 0x85, 0x32, 0x80, 0x2d, 0xe2, 0xd9, 0xb5, 0x59, 0x8a, 0xf9, 0xba, 0xd5, 0x02,
	0xc6, 0x15, 0x7d, 0x55, 0xda, 0x14, 0xa1, 0xfb, 0x69, 0x02, 0xf3, 0xfc, 0x10, 0x36, 0x25, 0xb1,
	0x2b, 0xab, 0x3c, 0x6d, 0xbd, 0x6c, 0x95, 0x56, 0xe6, 0x3b, 0x59, 0xaf, 0x43, 0x5a, 0xae, 0xef,
	0xf1, 0xdb, 0x93, 0xde, 0x53, 0x42, 0x5d, 0x73, 0x4f, 0xaa, 0x20, 0x4d, 0x12, 0x11, 0x68, 0x3c,
	0x00, 0xe2, 0x4a, 0xbb, 0x35, 0xc3, 0x6f, 0x30, 0x43, 0x7e, 0x4a, 0xf6, 0x65, 0x84, 0x1b, 0xa6,
	0x33, 0x9e, 0xa8, 0x73, 0x91, 0x31, 0x19, 0xda, 0x83, 0x47, 0x1c, 0x74, 0x10, 0xd2, 0xfb, 0xa4,
	0x79, 0x2e, 0x23, 0x61, 0xbe, 0xc4, 0x7c, 0x69, 0x03, 0x00, 0xf8, 0x06, 0xfa, 0x9c, 0x6c, 0x48,
	0xe5, 0x5c, 0x30, 0x14, 0x71, 0xca, 0x40, 0x84, 0x1f, 0xdc, 0xf0, 0x3d, 0xa9, 0x8c, 0x13, 0xee,
	0x89, 0x38, 0xc5, 0xc9, 0x28, 0x59, 0x0e, 0x45, 0x72, 0x8d, 0xc7, 0xad, 0xe1, 0xe3, 0xef, 0xde,
	0x73, 0x72, 0x2f, 0x37, 0xc3, 0x34, 0x92, 0x7a, 0x18, 0x64, 0x42, 0x24, 0xef, 0x94, 0x40, 0xa3,
	0xab, 0x28, 0xd5, 0x76, 0x51, 0xf8, 0xbb, 0xf7, 0xc7, 0xa4, 0xeb, 0xd4, 0x8d, 0x93, 0xec, 0xce,
	0xb9, 0xe6, 0xd9, 0x1e, 0xd7, 0x9c, 0x7e, 0x4c, 0x9a, 0x3c, 0x40, 0xc7, 0xb3, 0x5f, 0xd2, 0xf1,
	0x0b, 0x80, 0x7a, 0x64, 0x29, 0x1b, 0x9f, 0xe1, 0x27, 0xb4, 0x7d, 0xf8, 0xd9, 0xfb, 0xef, 0x0a,
	0xa1, 0xfd, 0xfe, 0xa1, 0x31, 0x70, 0x24, 0x45, 0xa2, 0x0f, 0x92, 0xf3, 0x94, 0xfe, 0x80, 0xac,
	0x2a, 0x91, 0x84, 0x4c, 0xf3, 0xb3, 0x48, 0xb0, 0x20, 0x0b, 0x70, 0xac, 0xba, 0xdf, 0x06, 0x74,
	0x04, 0x60, 0x3f, 0x0b, 0xf0, 0x30, 0x18, 0x27, 0x2e, 0xbb, 0x7a, 0xcb, 0x60, 0xc6, 0xd7, 0xef,
	0x91, 0xba, 0x54, 0x0c, 0x0e, 0xa3, 0xb5, 0xc8, 0x8a, 0x54, 0x5f, 0x47, 0x7a, 0x0e, 0x36, 0xcd,
	0xcd, 0x66, 0x8d, 0xd1, 0x70, 0xc6, 0xa2, 0x0f, 0x08, 0x39, 0xcf, 0xa4, 0x48, 0x42, 0x05, 0x1b,
	0x62, 0x02, 0x4b, 0xd3, 0x22, 0x07, 0x21, 0xcc, 0xeb, 0xc4, 0xb8, 0x25, 0x2b, 0xb8, 0x25, 0x2d,
	0x8b, 0xe1, 0xae, 0x3c, 0x26, 0xed, 0x60, 0xa6, 0x74, 0x1a, 0xe3, 0x6e, 0x40, 0x54, 0x58, 0x7a,
	0x5a, 0xf7, 0x5b, 0x06, 0x83, 0x8d, 0x50, 0xbd, 0x3f, 0x27, 0x6d, 0xf7, 0xe5, 0x47, 0xe9, 0x5c,
	0xd0, 0x1d, 0xb2, 0x01, 0xc7, 0xf2, 0x8c, 0x07, 0x93, 0xd9, 0x94, 0xd9, 0x40, 0xa0, 0xac, 0x11,
	0xd7, 0x93, 0x59, 0xfc, 0x1a, 0x25, 0x7d, 0x2b, 0xa0, 0x4f, 0x09, 0x1c, 0x56, 0x96, 0x88, 0xcb,
	0x42, 0xd9, 0x58, 0x60, 0x35, 0x99, 0xc5, 0xc7, 0xe2, 0x32, 0xd7, 0x84, 0x3d, 0xe7, 0x9a, 0xa3,
	0x05, 0xda, 0x3e, 0xfe, 0xee, 0xfd, 0x75, 0x95, 0xac, 0xbb, 0xe9, 0x4f, 0x53, 0x19, 0x08, 0xdc,
	0x3e, 0xa7, 0x59, 0x29, 0x34, 0x01, 0xbb, 0x9a, 0xc9, 0x10, 0xc7, 0x5e, 0xf1, 0xf1, 0x37, 0xed,
	0x93, 0x95, 0xf3, 0x34, 0x8b, 0xb9, 0xc6, 0x31, 0x57, 0x5f, 0xd2, 0x9d, 0x7c, 0x8c, 0x7d, 0xc4,
	0x99, 0xfe, 0xea, 0xde, 0xe9, 0xdb, 0x83, 0xfe, 0x60, 0x6f, 0x77, 0xb4, 0xcb, 0xf6, 0xdf, 0xfa,
	0x47, 0xbb, 0x23, 0x36, 0x38, 0x7e, 0x73, 0x70, 0x3c, 0xf0, 0x6d, 0x57, 0xfa, 0x43, 0xd8, 0xe4,
	0x5f, 0xce, 0x44, 0x12, 0x08, 0x76, 0x76, 0xad, 0x85, 0xb2, 0x99, 0xa4, 0xe3, 0xd0, 0xd7, 0x00,
	0x1a, 0x35, 0x3c, 0xb6, 0x2c, 0x99, 0xc5, 0x67, 0x22, 0xb3, 0x1b, 0xd2, 0xb1, 0xe8, 0x31, 0x82,
	0xf4, 0xff, 0x93, 0xed, 0x59, 0x02, 0x19, 0x22, 0x13, 0x4a, 0x89, 0x90, 0x29, 0x1e, 0x4f, 0x23,
	0xc1, 0xd2, 0xf3, 0x73, 0x25, 0xb4, 0x0d, 0xe8, 0xdd, 0xb2, 0xc6, 0x10, 0x15, 0xde, 0xa2, 0xbc,
	0xf7, 0xa7, 0x64, 0xc3, 0x59, 0xe3, 0x35, 0x57, 0x22, 0x92, 0x89, 0xd8, 0x0d, 0x26, 0xf4, 0x09,
	0xe9, 0x9c, 0xd9, 0x26, 0xcb, 0x33, 0x59, 0xcd, 0x6f, 0x3b, 0x10, 0xb3, 0xdc, 0x43, 0xd2, 0xca,
	0x95, 0x92, 0xcc, 0xa6, 0x4a, 0xe2, 0xa0, 0xe3, 0xac, 0xf7, 0x25, 0xd9, 0x74, 0x83, 0x1f, 0x4a,
	0xa5, 0x45, 0x32, 0x98, 0x8b, 0x44, 0x2b, 0x70, 0x33, 0x01, 0xbf, 0x58, 0xcc, 0xd5, 0x04, 0xc3,
	0x60, 0xdd, 0x6f, 0x22, 0x72, 0xc4, 0xd5, 0xa4, 0xf7, 0x17, 0xa4, 0xeb, 0xba, 0xf9, 0x42, 0x4d,
	0xd3, 0x24, 0xec, 0xcf, 0x79, 0x76, 0x8a, 0x21, 0xee, 0x2e, 0x59, 0x09, 0xd2, 0x74, 0x22, 0x85,
	0x5d, 0x91, 0x6d, 0x61, 0xf0, 0xd7, 0x5c, 0xcf, 0x14, 0x0b, 0xd2, 0x50, 0xb8, 0xb5, 0x18, 0xa8,
	0x9f, 0x86, 0x22, 0x8f, 0xa2, 0x4b, 0xef, 0x8b, 0xa2, 0xcb, 0xa5, 0x28, 0xda, 0xfb, 0xf7, 0x6a,
	0xb1, 0x6c, 0xf0, 0xd8, 0xbe, 0xdf, 0xef, 0x5f, 0x88, 0x60, 0x02, 0x47, 0x07, 0x06, 0x67, 0x53,
	0xae, 0x2f, 0xec, 0xf4, 0x0d, 0x00, 0x4e, 0xb8, 0xbe, 0x80, 0xf1, 0x11, 0x37, 0x61, 0x0a, 0x7f,
	0x83, 0x15, 0xb1, 0x03, 0x1c, 0x85, 0x7c, 0xf2, 0x9a, 0xdf, 0x06, 0x70, 0xdf, 0x62, 0x74, 0x9b,
	0x34, 0x72, 0xf9, 0x72, 0x11, 0xe3, 0x50, 0xf6, 0x84, 0x74, 0x30, 0x00, 0x9e, 0x67, 0x3c, 0xc8,
	0x73, 0x7d, 0xcd, 0x6f, 0x03, 0xb8, 0x6f, 0x31, 0x08, 0x2e, 0x71, 0xf8, 0x25, 0xee, 0x74, 0xdb,
	0x87, 0x9f, 0x80, 0x40, 0xe8, 0x30, 0x19, 0x19, 0x7e, 0x42, 0x5c, 0xc1, 0x81, 0x2e, 0xb8, 0xba,
	0x60, 0xfa, 0x7a, 0x2a, 0xba, 0x8d, 0x62, 0xa4, 0xaf, 0xb9, 0xba, 0x18, 0x5d, 0x4f, 0x05, 0xe4,
	0x30, 0xd4, 0x8a, 0x44, 0xd2, 0x6d, 0xa2, 0xbc, 0x0e, 0xed, 0x43, 0x91, 0xd0, 0x47, 0xa4, 0x3d,
	0xe5, 0xc1, 0x04, 0x3f, 0x05, 0x62, 0x03, 0x31, 0x06, 0x06, 0x0c, 0xbe, 0xe4, 0x20, 0x84, 0x63,
	0x59, 0x68, 0x58, 0x87, 0x6d, 0xa1, 0xd6, 0xaa, 0xd3, 0x32, 0x1e, 0xdb, 0xfb, 0x92, 0xdc, 0xcb,
	0xdd, 0x22, 0xe5, 0xa1, 0x4c, 0xc6, 0x27, 0x59, 0x3a, 0x06, 0xe7, 0x04, 0x63, 0x4c, 0xed, 0x6f,
	0x67, 0x61, 0xd7, 0xee, 0xf5, 0xc9, 0xb6, 0xeb, 0x86, 0xd1, 0xda, 0xc4, 0xe0, 0xbe, 0xcd, 0x38,
	0x7f, 0x60, 0xf6, 0x7a, 0x55, 0xec, 0x6d, 0x3f, 0x0e, 0xbf, 0x11, 0xd7, 0xe8, 0x56, 0x0a, 0xe2,
	0xf7, 0x44, 0x5c, 0xa3, 0x03, 0x28, 0x1b, 0x05, 0x0a, 0xa0, 0xf7, 0x5f, 0x35, 0x42, 0xfb, 0xc3,
	0x53, 0x33, 0x37, 0x46, 0x59, 0x8c, 0xd6, 0x66, 0xb5, 0x3a, 0x0d, 0xd2, 0xa8, 0xb4, 0x5a, 0x6c,
	0xbf, 0x37, 0x46, 0xd7, 0x16, 0x63, 0xf4, 0x63, 0xd2, 0x96, 0x8a, 0x85, 0x22, 0x94, 0x01, 0xd7,
	0x22, 0xb4, 0x81, 0xba, 0x25, 0xd5, 0x9e, 0x83, 0xe8, 0x4f, 0x49, 0x57, 0x2a, 0x38, 0xcb, 0x32,
	0x90, 0x3c, 0x62, 0x73, 0x1e, 0xcd, 0x85, 0x25, 0x30, 0x36, 0x78, 0xdf, 0x91, 0xea, 0xad, 0x15,
	0x9f, 0x82, 0xd4, 0x2c, 0xaf, 0x1c, 0xff, 0x6b, 0x1f, 0x8e, 0xff, 0x2b, 0x37, 0xe2, 0xff, 0x1f,
	0x91, 0x07, 0x28, 0x0c, 0x65, 0x06, 0x31, 0x26, 0x19, 0x33, 0x9d, 0xb2, 0x69, 0x96, 0x5e, 0x5d,
	0xb3, 0x4c, 0x40, 0x87, 0x3b, 0xd8, 0x61, 0x0b, 0x3a, 0xe4, 0x3a, 0xa3, 0xf4, 0x04, 0x34, 0x7c,
	0x50, 0xa0, 0xeb, 0x64, 0x39, 0x60, 0xa9, 0x61, 0x83, 0x35, 0x7f, 0x29, 0x78, 0xab, 0x60, 0x29,
	0xc0, 0x8c, 0xc0, 0x23, 0x1b, 0x98, 0xcc, 0x56, 0x62, 0x3e, 0x85, 0x34, 0xf6, 0x80, 0x90, 0x00,
	0x53, 0x1f, 0xca, 0x9a, 0x28, 0x6b, 0x1a, 0x04, 0xc4, 0x4f, 0x89, 0xa7, 0x90, 0x31, 0x96, 0xb2,
	0x21, 0x41, 0xa5, 0x55, 0x83, 0xe7, 0xf9, 0xf0, 0x21, 0x69, 0xc5, 0xfc, 0x8a, 0x99, 0xae, 0xca,
	0x7a, 0x1d, 0x89, 0xf9, 0x95, 0xc9, 0xac, 0xaa, 0x50, 0xe0, 0x4a, 0x09, 0xd5, 0x6d, 0x97, 0x14,
	0x10, 0x01, 0x05, 0x43, 0xe9, 0x18, 0x66, 0xfd, 0x8e, 0xf5, 0x6e, 0x84, 0x86, 0x51, 0xaa, 0xe1,
	0x24, 0x42, 0x1c, 0x64, 0x32, 0xd1, 0x22, 0x9b, 0xf3, 0xa8, 0xbb, 0x8a, 0x05, 0x44, 0x1b, 0xc0,
	0x03, 0x8b, 0xc1, 0xf9, 0x19, 0xf3, 0x58, 0xb0, 0x50, 0x66, 0xdd, 0x35, 0xc3, 0x01, 0xa1, 0xbd,
	0x27, 0xb3, 0x05, 0x7a, 0xe8, 0x2d, 0xd0, 0x43, 0x38, 0x9b, 0x20, 0x1a, 0x67, 0xe9, 0xcc, 0x2a,
	0xac, 0xa3, 0x42, 0x3b, 0xe6, 0xd3, 0x37, 0x00, 0xa2, 0xd6, 0x16, 0x69, 0xa8, 0x89, 0x25, 0x75,
	0xd4, 0x0c, 0xa0, 0x26, 0xc8, 0xe6, 0x60, 0x4b, 0x91, 0xd9, 0xa3, 0x6c, 0xc3, 0x84, 0x10, 0x00,
	0x9c, 0x70, 0x3a, 0x3b, 0x8b, 0x64, 0xc0, 0xe4, 0xb4, 0xbb, 0x89, 0x11, 0xa1, 0x61, 0x80, 0x83,
	0x29, 0xfd, 0x98, 0x90, 0xd9, 0x38, 0x60, 0x30, 0xbd, 0x0c, 0xbb, 0x77, 0x1f, 0x55, 0x9e, 0x2e,
	0xfb, 0x8d, 0xd9, 0x38, 0x38, 0xe2, 0xd3, 0x83, 0xb0, 0xf7, 0x1f, 0x15, 0xb2, 0xee, 0xbc, 0x1e,
	0x0d, 0x85, 0x4e, 0xff, 0x94, 0x78, 0x41, 0x26, 0xb8, 0x16, 0x2c, 0x4d, 0xac, 0xc9, 0xd1, 0xf9,
	0x1b, 0xfe, 0xaa, 0xc1, 0xdf, 0x26, 0xc6, 0xec, 0xf4, 0x15, 0xa9, 0x3b, 0x8b, 0x57, 0x91, 0xea,
	0x6e, 0xef, 0xdc, 0x1a, 0x6e, 0x07, 0x35, 0x98, 0xf6, 0x9d, 0xea, 0xf6, 0xc4, 0xf6, 0x62, 0x1a,
	0xbe, 0xd9, 0xfc, 0xcc, 0xd9, 0xa1, 0x11, 0x1d, 0x84, 0xf4, 0x53, 0xb2, 0x06, 0x49, 0xda, 0xba,
	0x46, 0x89, 0x20, 0x76, 0x00, 0x46, 0xcf, 0xc0, 0xcf, 0x47, 0x1f, 0x83, 0x21, 0x4a, 0xc1, 0xbf,
	0x89, 0x08, 0x12, 0xe1, 0x7f, 0x58, 0x2a, 0x3e, 0x71, 0xe8, 0x28, 0x16, 0xbd, 0x43, 0x56, 0xa4,
	0x62, 0xc2, 0x56, 0x27, 0x0d, 0xbf, 0x26, 0xd5, 0x20, 0x09, 0x61, 0xa3, 0x12, 0xa1, 0x6f, 0x4f,
	0xd9, 0x4e, 0x84, 0x2e, 0x66, 0x7c, 0x42, 0x3a, 0x89, 0x10, 0x21, 0x1c, 0x6c, 0x88, 0xf3, 0x99,
	0x3d, 0xd6, 0x6d, 0x04, 0xf7, 0x0c, 0x46, 0xbf, 0x20, 0xb5, 0x69, 0x96, 0x4e, 0x4d, 0x3d, 0xd1,
	0x7a, 0xf9, 0x60, 0xe7, 0xd6, 0x22, 0x76, 0x80, 0xf1, 0x81, 0x0e, 0xd3, 0xbe, 0xd1, 0xdd, 0xfe,
	0x55, 0x95, 0x90, 0x02, 0x45, 0x8e, 0x0d, 0x91, 0xdc, 0x52, 0x54, 0x6d, 0x23, 0xf8, 0x9c, 0x67,
	0xe5, 0xc5, 0xd5, 0xe7, 0x3c, 0x3b, 0xb6, 0xc9, 0xce, 0x14, 0x6a, 0x26, 0x09, 0x99, 0x86, 0x09,
	0x61, 0x32, 0xcd, 0xa4, 0xbe, 0xb6, 0x2c, 0x24, 0x6f, 0xc3, 0xc1, 0x0d, 0x75, 0xb9, 0xa2, 0x59,
	0x09, 0xb5, 0x23, 0x79, 0xc0, 0xc0, 0x44, 0x24, 0x62, 0x3c, 0x70, 0x2b, 0x26, 0xb6, 0x25, 0xb3,
	0x78, 0x60, 0x21, 0x70, 0xbb, 0x28, 0xbd, 0x64, 0x26, 0xbd, 0xd6, 0xf1, 0xac, 0x34, 0xa2, 0xf4,
	0xd2, 0x24, 0xf1, 0x07, 0x84, 0x5c, 0xc8, 0xf1, 0x85, 0x95, 0x36, 0x50, 0xda, 0x04, 0xc4, 0x88,
	0xb7, 0x48, 0x03, 0x09, 0xa1, 0xd4, 0xca, 0xa5, 0x21, 0x60, 0x81, 0x52, 0xab, 0xde, 0x13, 0xd2,
	0x71, 0x96, 0x3a, 0xc9, 0x64, 0xf2, 0xfe, 0x42, 0xe3, 0x19, 0xf1, 0x0a, 0x73, 0xea, 0x13, 0x3e,
	0x53, 0xc8, 0x1b, 0xa6, 0xf0, 0xc3, 0x6d, 0xa9, 0x6d, 0xf5, 0x5e, 0x91, 0xb5, 0x92, 0xee, 0xa9,
	0x14, 0x97, 0xf0, 0x75, 0x22, 0xd1, 0x52, 0x5f, 0x33, 0x99, 0x84, 0xe2, 0xca, 0xda, 0xb7, 0x65,
	0xb0, 0x03, 0x80, 0x7a, 0xff, 0x58, 0x25, 0x5b, 0xb9, 0x2b, 0xa3, 0xd3, 0x0f, 0x8b, 0x88, 0xf4,
	0xde, 0x82, 0xcd, 0x46, 0x20, 0x91, 0xe8, 0x4c, 0x0a, 0xe5, 0xf8, 0x49, 0xcc, 0xaf, 0x06, 0x06,
	0x01, 0x05, 0xb4, 0xa9, 0x55, 0x30, 0x9b, 0x44, 0xc0, 0xa4, 0x56, 0xe1, 0x05, 0xd9, 0x9c, 0x29,
	0x91, 0x31, 0x74, 0xfb, 0x73, 0x79, 0x05, 0x54, 0x4f, 0x7e, 0x27, 0x6c, 0x1a, 0x58, 0x07, 0x19,
	0xd2, 0x50, 0x90, 0x0c, 0xe5, 0x77, 0x18, 0x57, 0x8a, 0x0e, 0xa8, 0x6a, 0xd9, 0x83, 0x53, 0x45,
	0xad, 0xe7, 0x64, 0x63, 0x51, 0xcb, 0xd8, 0xdd, 0x6c, 0xa9, 0x57, 0x56, 0x85, 0x0d, 0x28, 0xbc,
	0xa8, 0x5e, 0xf6, 0x22, 0x64, 0x5f, 0x18, 0xaa, 0x91, 0x45, 0x37, 0x30, 0x7f, 0x12, 0x03, 0x41,
	0xf7, 0xde, 0xaf, 0x2b, 0x85, 0xc1, 0xde, 0x4d, 0xc3, 0x1b, 0x06, 0xdb, 0x22, 0x0d, 0x73, 0xa8,
	0x8a, 0x73, 0x8e, 0xed, 0x83, 0xd0, 0x15, 0x07, 0xc1, 0x05, 0x4f, 0xc6, 0x22, 0xbc, 0x61, 0x3f,
	0x28, 0x0e, 0xfa, 0x46, 0x52, 0x32, 0x63, 0x79, 0x25, 0x4b, 0xb7, 0x56, 0xf2, 0x67, 0xc5, 0x81,
	0x47, 0xea, 0x7e, 0x90, 0x48, 0x4d, 0xbb, 0xa4, 0xfe, 0xcb, 0x19, 0x8f, 0xe0, 0x10, 0xd8, 0xf9,
	0x6d, 0x13, 0xbe, 0x17, 0x4e, 0x6c, 0xe0, 0x0a, 0x6d, 0x6c, 0xd0, 0xfb, 0xa4, 0x3e, 0x17, 0x99,
	0x02, 0x46, 0x86, 0x1b, 0xf5, 0x55, 0xe5, 0x73, 0xdf, 0x21, 0xbd, 0xdf, 0x2c, 0xdd, 0x98, 0x02,
	0x2b, 0x0c, 0x20, 0xae, 0x45, 0xb0, 0x04, 0xe2, 0x6a, 0x82, 0xe4, 0xc7, 0xa4, 0x09, 0x09, 0x56,
	0xc6, 0x30, 0x79, 0x15, 0xf7, 0xb2, 0x00, 0xf2, 0x1a, 0x64, 0xa9, 0x54, 0x83, 0x3c, 0x26, 0x6d,
	0x3e, 0x0b, 0x25, 0xd8, 0x0b, 0xf9, 0xb3, 0x39, 0xb6, 0x2d, 0x8b, 0x01, 0x83, 0x86, 0x03, 0x36,
	0x87, 0x99, 0x8d, 0x11, 0x6a, 0x86, 0xce, 0xcc, 0x17, 0xd6, 0xc2, 0x95, 0x16, 0x99, 0x25, 0x00,
	0xb6, 0x55, 0xaa, 0x6e, 0xea, 0xff, 0x97, 0xd5, 0x4d, 0xe3, 0x0f, 0xab, 0x6e, 0x9a, 0xdf, 0xbf,
	0xba, 0x21, 0xbf, 0xa7, 0xba, 0xf9, 0x59, 0x11, 0x09, 0xf6, 0xe5, 0x95, 0xb9, 0x1a, 0xdc, 0x26,
	0x0d, 0xe0, 0x32, 0x5a, 0xce, 0x85, 0x8d, 0x05, 0x79, 0x9b, 0x3e, 0x26, 0x35, 0x0e, 0x4a, 0xb8,
	0x11, 0x8e, 0x42, 0x9a, 0x2b, 0x45, 0xdf, 0x48, 0x7a, 0xff, 0x8f, 0xdc, 0x2d, 0x4e, 0x7e, 0xaa,
	0xd4, 0x05, 0x97, 0x99, 0x19, 0x38, 0xef, 0x5c, 0xf9, 0x60, 0xe7, 0x2f, 0x8a, 0xf5, 0x9c, 0x64,
	0xe2, 0x5c, 0xe8, 0xe0, 0x02, 0x3d, 0x36, 0x9d, 0x25, 0xe1, 0x42, 0xb4, 0x21, 0x08, 0x99, 0x60,
	0xf3, 0x2f, 0x95, 0xa2, 0xd7, 0xeb, 0xe1, 0xc9, 0x9e, 0x08, 0x78, 0x44, 0x1f, 0x90, 0xa5, 0x69,
	0xba, 0x48, 0x75, 0xcd, 0x35, 0xa9, 0x0f, 0x38, 0x1c, 0x9b, 0x10, 0xf4, 0x18, 0x04, 0xc4, 0x59,
	0x26, 0xec, 0xe0, 0xf6, 0xd8, 0xa0, 0x68, 0x64, 0x24, 0x38, 0xc7, 0xad, 0x98, 0xb7, 0x74, 0x2b,
	0xe6, 0x61, 0x04, 0x4b, 0x43, 0x11, 0x59, 0x8d, 0x65, 0x1b, 0xc1, 0x00, 0xca, 0xc7, 0x80, 0x90,
	0x9f, 0xa7, 0x13, 0xc3, 0x3b, 0x5b, 0x51, 0x7a, 0x79, 0x62, 0xa1, 0xde, 0xdf, 0x56, 0xc8, 0x46,
	0x1e, 0x6e, 0x8b, 0x1b, 0x17, 0x3a, 0x28, 0xa5, 0xb2, 0xd5, 0x97, 0xdd, 0x9d, 0x41, 0x49, 0x78,
	0x64, 0x6e, 0x9b, 0xa1, 0x40, 0xf9, 0xea, 0xde, 0xd1, 0xf0, 0x0d, 0x1b, 0x9e, 0x1c, 0x1e, 0x8c,
	0x86, 0x7d, 0x7f, 0x30, 0x38, 0x66, 0xbb, 0x7b, 0x7b, 0xef, 0x86, 0x03, 0xdf, 0x66, 0x3f, 0x77,
	0x69, 0x53, 0x2d, 0x2e, 0x6d, 0x60, 0x55, 0x96, 0xd9, 0x2d, 0x7c, 0x99, 0xc1, 0x8c, 0x81, 0xbf,
	0x21, 0x9b, 0x6e, 0x51, 0x6f, 0x84, 0xfe, 0xfd, 0xb5, 0x26, 0xd4, 0x81, 0x37, 0xb2, 0x6c, 0x23,
	0xb0, 0x69, 0xb6, 0xf7, 0x73, 0xd2, 0x76, 0x83, 0x1d, 0x89, 0x64, 0x06, 0x66, 0x0b, 0x25, 0x8f,
	0xd2, 0x31, 0x2b, 0x25, 0x6b, 0x62, 0x20, 0x2c, 0xba, 0x3e, 0x25, 0x6b, 0xb1, 0x48, 0x66, 0x6c,
	0x22, 0xae, 0x99, 0xad, 0x3f, 0xcc, 0x3d, 0x51, 0x07, 0xe0, 0xbc, 0x42, 0xe9, 0xc5, 0x85, 0xe9,
	0xde, 0x29, 0x91, 0x59, 0xb3, 0x20, 0xb1, 0x54, 0x0b, 0x83, 0xd7, 0x63, 0x35, 0x76, 0xe5, 0x1c,
	0x88, 0x30, 0x06, 0x98, 0x21, 0x41, 0x84, 0x11, 0xe0, 0x11, 0x69, 0x4d, 0xb9, 0x52, 0xfa, 0x22,
	0x4b, 0x67, 0xe3, 0x8b, 0xdc, 0x28, 0x05, 0xd4, 0x7b, 0x59, 0x18, 0xe5, 0x84, 0xcb, 0x44, 0xc7,
	0x7c, 0x8a, 0x3d, 0x81, 0x30, 0xd8, 0xb6, 0xad, 0x93, 0xf2, 0x76, 0xef, 0xef, 0x4b, 0x91, 0xef,
	0x0d, 0x8f, 0x05, 0x96, 0xfb, 0x45, 0xb5, 0x5f, 0x4a, 0x8a, 0xa6, 0xda, 0x47, 0x32, 0xd1, 0x25,
	0x75, 0x6c, 0xd8, 0x9b, 0x96, 0x9a, 0xef, 0x9a, 0xf4, 0x47, 0x64, 0x79, 0x22, 0xae, 0x21, 0x17,
	0x02, 0x47, 0xea, 0xee, 0xdc, 0x1a, 0x7a, 0x07, 0x6c, 0xa6, 0x7d, 0xd4, 0xba, 0xf9, 0x49, 0xcb,
	0xb7, 0x3e, 0x69, 0xfb, 0xaf, 0xaa, 0xa4, 0x86, 0x3d, 0xde, 0x4b, 0x9d, 0x20, 0x66, 0xf2, 0x88,
	0x99, 0x54, 0x61, 0xb7, 0xb5, 0x39, 0xe7, 0x91, 0x49, 0x54, 0xb0, 0xe9, 0x20, 0x3e, 0x8f, 0x52,
	0x7b, 0xf9, 0x53, 0xf5, 0x1b, 0x73, 0x1e, 0xed, 0x43, 0xdb, 0xd0, 0xae, 0x88, 0x45, 0x69, 0x32,
	0xb6, 0x13, 0xd7, 0xe7, 0x3c, 0x3a, 0x4c, 0x8b, 0x7e, 0xea, 0x22, 0xcd, 0xb4, 0x4d, 0xc0, 0xa0,
	0x3b, 0x84, 0xb6, 0xeb, 0x07, 0x61, 0xd2, 0x66, 0x5c, 0xe8, 0x07, 0x01, 0x32, 0x17, 0xa5, 0x69,
	0x84, 0xd1, 0xb8, 0x61, 0x44, 0x69, 0x1a, 0xb9, 0x95, 0xce, 0x64, 0xa2, 0x7f, 0xf2, 0x0a, 0xa3,
	0xeb, 0x32, 0xae, 0xf4, 0x1d, 0x02, 0xe0, 0x71, 0x20, 0xbe, 0xb4, 0x5f, 0xd2, 0x34, 0x29, 0x70,
	0xce, 0xa3, 0x9f, 0x1b, 0xa4, 0xf7, 0x3f, 0x15, 0x72, 0xe7, 0x96, 0x2d, 0x0f, 0xa5, 0xd2, 0x74,
	0x40, 0x5a, 0xc5, 0xe3, 0x8d, 0xbb, 0xa0, 0x7e, 0xb2, 0xf3, 0x5e, 0xe5, 0x9d, 0x42, 0x93, 0x69,
	0xbf, 0xdc, 0x6f, 0xfb, 0xc5, 0xef, 0xb2, 0xb3, 0x63, 0x47, 0xd5, 0x82, 0x1d, 0x6d, 0x27, 0xa4,
	0x5d, 0x1e, 0xad, 0xec, 0x13, 0x95, 0x45, 0x9f, 0x78, 0x4f, 0x6f, 0xfa, 0xf9, 0x82, 0x9f, 0x7c,
	0xfc, 0x81, 0xe5, 0x96, 0x7c, 0xa5, 0xa7, 0x0b, 0xe7, 0x1e, 0x89, 0x78, 0x3a, 0x80, 0x30, 0x07,
	0xec, 0xc1, 0xe4, 0x06, 0x09, 0xdc, 0xa3, 0x94, 0x1b, 0xb0, 0x7d, 0x93, 0xa0, 0x55, 0x6f, 0x11,
	0xb4, 0x87, 0xc4, 0xc6, 0xcb, 0x05, 0xea, 0x61, 0x20, 0xa4, 0x1e, 0x7f, 0x59, 0x2d, 0x72, 0xc7,
	0x09, 0x0f, 0x26, 0x42, 0xe7, 0x13, 0xdf, 0xa0, 0x87, 0x95, 0x5b, 0xf4, 0xf0, 0x33, 0xb2, 0x36,
	0x43, 0xde, 0x74, 0x93, 0x03, 0xad, 0x5a, 0xd8, 0x29, 0x6e, 0x91, 0x06, 0x5e, 0x2a, 0x44, 0x76,
	0x09, 0x0d, 0xbf, 0x2e, 0xd5, 0x1e, 0x34, 0x8b, 0x31, 0x98, 0xbb, 0xa3, 0xb3, 0xe4, 0xd1, 0x8e,
	0xe1, 0x2e, 0x00, 0xc1, 0x0c, 0xb9, 0x86, 0x75, 0x59, 0xd7, 0x06, 0xe7, 0xc3, 0xc1, 0xd9, 0x79,
	0x96, 0xc6, 0xd6, 0x69, 0x9b, 0x88, 0xec, 0x67, 0x69, 0x7c, 0xd3, 0x08, 0xf5, 0x5b, 0x46, 0xf8,
	0x4d, 0x8d, 0xac, 0xe6, 0x29, 0x00, 0x92, 0x1c, 0x52, 0x01, 0x67, 0x65, 0x86, 0x79, 0xcf, 0xda,
	0xbe, 0xe3, 0x50, 0xd4, 0xa3, 0x5f, 0x90, 0x15, 0x94, 0xba, 0x6a, 0xf2, 0xfe, 0xce, 0xe2, 0x38,
	0x3b, 0x28, 0x35, 0x55, 0xa1, 0x6f, 0x55, 0xb7, 0x7f, 0xbb, 0x6c, 0xd3, 0xab, 0xc1, 0xc1, 0x3c,
	0x69, 0x26, 0xc7, 0x32, 0x61, 0x26, 0xd5, 0xae, 0xfb, 0x75, 0xd3, 0xfe, 0x93, 0x92, 0xc8, 0x10,
	0xb1, 0x5c, 0xf4, 0x6d, 0x49, 0x64, 0x5e, 0x0e, 0x73, 0xd1, 0x2f, 0x20, 0x49, 0xcc, 0xd3, 0x68,
	0x96, 0x3f, 0xe4, 0xd9, 0x16, 0xc6, 0x7d, 0x11, 0x71, 0x1b, 0xd3, 0xd1, 0x8c, 0x55, 0x9f, 0x20,
	0x74, 0xea, 0x1e, 0x6b, 0x72, 0x9e, 0x64, 0x19, 0x90, 0xb1, 0x66, 0x4e, 0x9f, 0x2c, 0x05, 0xba,
	0x99, 0x9b, 0xeb, 0xb7, 0x73, 0x73, 0x97, 0xd4, 0x81, 0x21, 0x27, 0x22, 0xb2, 0x64, 0xcb, 0x35,
	0x81, 0xbf, 0x4e, 0xa5, 0x0e, 0x2e, 0x6c, 0x21, 0x65, 0x1a, 0x05, 0x8b, 0x27, 0x65, 0x16, 0x7f,
	0x9f, 0x34, 0x0d, 0x13, 0x49, 0x66, 0x31, 0x5e, 0xa2, 0x74, 0xfc, 0x06, 0x02, 0xc7, 0xb3, 0x18,
	0x6f, 0x63, 0x9c, 0x90, 0x5d, 0xf0, 0x24, 0x8c, 0x04, 0xde, 0xa3, 0xd4, 0xfd, 0x55, 0xa7, 0xf3,
	0x35, 0xa2, 0xc8, 0xec, 0xa6, 0x82, 0x4f, 0x44, 0xc6, 0xcc, 0x1a, 0xed, 0x75, 0x4a, 0xc7, 0xa2,
	0xe8, 0xf4, 0xd7, 0x60, 0xa0, 0x8c, 0x27, 0x61, 0x1a, 0x33, 0x25, 0x44, 0x88, 0xf7, 0x29, 0x35,
	0x9f, 0x18, 0x68, 0x28, 0x44, 0x58, 0x10, 0xa3, 0x48, 0xcc, 0x45, 0x84, 0x17, 0x2a, 0x8e, 0x18,
	0x1d, 0x02, 0x02, 0x0a, 0x52, 0x31, 0x25, 0x12, 0x0d, 0xd6, 0xc2, 0x6b, 0x95, 0x86, 0x4f, 0xa4,
	0x1a, 0x5a, 0x04, 0x7c, 0x55, 0x2a, 0xc6, 0xe3, 0x33, 0xe4, 0xdd, 0xeb, 0x86, 0x5c, 0x4b, 0xb5,
	0x6b, 0x80, 0xde, 0x79, 0x91, 0xad, 0xcc, 0x9a, 0x8e, 0x14, 0xc6, 0x6b, 0xc8, 0x55, 0x65, 0x32,
	0xd6, 0xc0, 0xd7, 0x19, 0xb0, 0x73, 0xf9, 0x42, 0xa2, 0xba, 0x78, 0x21, 0xb1, 0x45, 0x40, 0xad,
	0x7c, 0xf4, 0xeb, 0x22, 0xd1, 0xe8, 0xf2, 0xaf, 0x8a, 0x68, 0xf3, 0x3d, 0xee, 0x1c, 0x4f, 0x8a,
	0x20, 0x3d, 0x48, 0x82, 0xec, 0x7a, 0xaa, 0x45, 0xe8, 0x9e, 0x9a, 0x84, 0x03, 0x5c, 0xb7, 0x1c,
	0x80, 0x75, 0x60, 0xa4, 0x83, 0xb0, 0x6b, 0x97, 0x38, 0x11, 0xd7, 0xc0, 0x07, 0x7a, 0xff, 0x54,
	0x2d, 0x6e, 0x31, 0xbf, 0xce, 0x9f, 0x69, 0xc1, 0x19, 0xd0, 0x2d, 0xed, 0xd7, 0x9a, 0x06, 0xec,
	0xe2, 0x34, 0x93, 0x31, 0xcf, 0xae, 0x99, 0xe6, 0xd9, 0x58, 0x38, 0x56, 0xd5, 0xb1, 0xe8, 0x08,
	0x41, 0x28, 0x32, 0xed, 0x13, 0x9c, 0xd2, 0xe9, 0x94, 0xd9, 0xdc, 0x58, 0xf3, 0xdb, 0x06, 0x1d,
	0xea, 0x74, 0xba, 0xab, 0x81, 0xe3, 0xe4, 0x5a, 0x3c, 0xd3, 0xa0, 0x66, 0x9f, 0x3c, 0x9c, 0x1a,
	0xcf, 0xf4, 0xae, 0xa6, 0x2f, 0xc9, 0x1d, 0xa7, 0x17, 0xa5, 0x97, 0x61, 0x7a, 0x99, 0xb0, 0x33,
	0x31, 0x96, 0xee, 0xde, 0x7b, 0xc3, 0x6a, 0x5b, 0xd9, 0x6b, 0x10, 0x01, 0xd5, 0xbd, 0xd9, 0x47,
	0x24, 0xa1, 0x3d, 0x4b, 0xeb, 0x8b, 0x3d, 0x06, 0x49, 0x48, 0x3f, 0x27, 0x9b, 0x37, 0xf5, 0x33,
	0xae, 0xdd, 0x25, 0x05, 0x5d, 0xec, 0xe0, 0x73, 0x2d, 0x7a, 0xff, 0x56, 0x7a, 0xab, 0x2b, 0xd9,
	0xad, 0x4b, 0xea, 0x19, 0x9c, 0x54, 0xe5, 0x4a, 0x3a, 0xd7, 0xc4, 0xa3, 0xed, 0xc6, 0x8e, 0x44,
	0x32, 0xb6, 0xcf, 0x02, 0x55, 0x7f, 0xd5, 0xc1, 0x87, 0x88, 0xd2, 0x27, 0xa4, 0xb3, 0xb8, 0x08,
	0x43, 0x2c, 0xda, 0xaa, 0x34, 0x3d, 0xfd, 0x29, 0xe9, 0x2e, 0xee, 0x04, 0x2b, 0x1c, 0xd4, 0x58,
	0xf1, 0xce, 0xc2, 0x9e, 0x0c, 0x9c, 0xb7, 0xe6, 0xc4, 0x0b, 0xff, 0xcf, 0xc0, 0x44, 0x20, 0x43,
	0xbc, 0x46, 0x32, 0x16, 0xbd, 0xe7, 0x45, 0x49, 0xfe, 0x3a, 0x4b, 0x79, 0x08, 0x45, 0x20, 0xb3,
	0x6f, 0x67, 0xf8, 0x84, 0x10, 0xbb, 0xd7, 0x79, 0xf8, 0xf9, 0xec, 0x9f, 0x2b, 0xa4, 0x7d, 0x3c,
	0x18, 0x31, 0x4b, 0x3c, 0x15, 0x6d, 0x91, 0x7a, 0x22, 0x34, 0x3b, 0x7e, 0x7b, 0xe2, 0x7d, 0x44,
	0xa9, 0xb9, 0x1b, 0x2b, 0x9e, 0x80, 0xbd, 0x0a, 0x6d, 0x93, 0x06, 0x60, 0xfb, 0x32, 0x12, 0x5e,
	0x95, 0xde, 0x23, 0x1b, 0xd0, 0xba, 0xf1, 0xd0, 0xea, 0x2d, 0x39, 0xb5, 0x91, 0x0c, 0x26, 0xde,
	0x32, 0x5d, 0x27, 0x1d, 0x54, 0x73, 0xff, 0x2b, 0xe0, 0xd5, 0x72, 0xc8, 0xbd, 0x54, 0x7b, 0x2b,
	0x74, 0x83, 0xac, 0x21, 0x54, 0x3c, 0xff, 0x7b, 0x75, 0xda, 0x25, 0x9b, 0x00, 0xde, 0x7c, 0x9b,
	0xf5, 0xc2, 0x67, 0x7f, 0x57, 0x25, 0xed, 0xfe, 0x61, 0xbf, 0x58, 0x3b, 0x25, 0xab, 0x41, 0x14,
	0x94, 0x5e, 0x5e, 0xbd, 0x06, 0xac, 0x03, 0xb0, 0xa3, 0x74, 0x2e, 0xbc, 0x26, 0x4c, 0x0a, 0xad,
	0xbc, 0x00, 0xf6, 0x08, 0x4c, 0x0a, 0x50, 0xe9, 0x9d, 0xcc, 0x6b, 0xd1, 0x4d, 0xe2, 0x01, 0x58,
	0x7e, 0xdf, 0xf2, 0xda, 0xb0, 0x14, 0x40, 0x6f, 0x3e, 0x5f, 0x79, 0x1d, 0xa7, 0x5f, 0x7e, 0x58,
	0xf2, 0x56, 0xc1, 0x38, 0x38, 0xca, 0xe2, 0x73, 0x88, 0xb7, 0x46, 0xb7, 0xc9, 0x5d, 0x10, 0xdc,
	0x7e, 0xf0, 0xf0, 0x3c, 0x7a, 0x87, 0xac, 0x17, 0x1f, 0x61, 0x3f, 0xcd, 0x5b, 0x77, 0x33, 0x94,
	0x43, 0x8d, 0x47, 0xdd, 0x17, 0x17, 0xfe, 0xeb, 0x6d, 0x3e, 0x3b, 0x24, 0xeb, 0xb7, 0x0a, 0x7c,
	0x98, 0xf1, 0x56, 0x89, 0x3f, 0x1c, 0x0d, 0x76, 0x8f, 0xbc, 0x8f, 0xe8, 0x7d, 0xf2, 0xa1, 0xf2,
	0xdf, 0xab, 0x3c, 0xbb, 0x26, 0xf7, 0x3e, 0x50, 0xb7, 0x41, 0xbf, 0x0f, 0x54, 0x6e, 0xde, 0x47,
	0xf4, 0x13, 0xb2, 0x7d, 0x53, 0xe8, 0x0f, 0x8e, 0xde, 0x9e, 0x0e, 0x50, 0x5e, 0xa1, 0x0f, 0xc8,
	0xd6, 0x4d, 0xf9, 0xe8, 0xdb, 0x93, 0x01, 0x7b, 0x7d, 0x30, 0x1a, 0x7a, 0x95, 0xed, 0xaa, 0x57,
	0x79, 0xf6, 0x9f, 0xcb, 0xa4, 0x3d, 0x3c, 0x5d, 0xdc, 0x5f, 0x35, 0x0f, 0x4a, 0x6f, 0x35, 0x5e,
	0x03, 0x76, 0xd4, 0x60, 0xf6, 0x86, 0xd5, 0x6c, 0x32, 0x40, 0xf9, 0x6d, 0xb4, 0x47, 0xa8, 0x47,
	0xda, 0x46, 0xcb, 0x5c, 0x1c, 0x7a, 0x2d, 0xba, 0x45, 0xee, 0xa0, 0xd2, 0xcd, 0x7b, 0x3e, 0xaf,
	0xed, 0x44, 0xb7, 0x6e, 0xb4, 0xbc, 0x8e, 0x1b, 0x3a, 0xbf, 0x63, 0xf2, 0x56, 0x17, 0x20, 0x74,
	0xa9, 0x35, 0xda, 0x21, 0x4d, 0x80, 0xf0, 0x2e, 0xd3, 0xf3, 0xe8, 0x2a, 0x21, 0x38, 0x39, 0x72,
	0x17, 0x6f, 0x9d, 0xae, 0x91, 0x96, 0x5d, 0xcc, 0xa9, 0x14, 0x97, 0x1e, 0x75, 0xab, 0x73, 0x97,
	0x19, 0xde, 0x06, 0xbd, 0x4b, 0xa8, 0x59, 0x5d, 0xf9, 0x2e, 0xc2, 0xdb, 0x74, 0x9a, 0xee, 0xc2,
	0xc0, 0xbb, 0x03, 0xee, 0x8b, 0x83, 0x15, 0x5b, 0xe4, 0xdd, 0x75, 0x60, 0xa9, 0xa2, 0xf4, 0xee,
	0x81, 0x63, 0x01, 0x68, 0x93, 0xa2, 0x85, 0xbb, 0x6e, 0xfd, 0x39, 0xad, 0xf6, 0xb6, 0xdc, 0xec,
	0x8b, 0x6c, 0xd6, 0xdb, 0x06, 0x1f, 0x04, 0xbc, 0x4c, 0xae, 0xbd, 0xfb, 0x6e, 0x4d, 0xee, 0xea,
	0xc3, 0xfb, 0x18, 0xce, 0x1c, 0x20, 0x50, 0x29, 0x7b, 0x0f, 0xdc, 0xbc, 0x0b, 0xbc, 0xdd, 0xfb,
	0xc4, 0x0d, 0x56, 0xae, 0xcd, 0xbd, 0x87, 0x0e, 0x2d, 0x17, 0xa7, 0xde, 0x63, 0x87, 0x2e, 0x38,
	0x7f, 0xaf, 0xf8, 0xa0, 0x52, 0x1e, 0xf5, 0x9e, 0x38, 0x2f, 0x29, 0x9d, 0x89, 0x1f, 0xb8, 0x2d,
	0xbd, 0x15, 0x11, 0xbd, 0x4f, 0x9f, 0xfd, 0xba, 0x42, 0xd6, 0x8d, 0x1e, 0xae, 0x0e, 0x3c, 0x9b,
	0x69, 0x38, 0xba, 0xfe, 0xe0, 0xe4, 0x70, 0xf7, 0x5b, 0x36, 0x38, 0x1d, 0x1c, 0x8f, 0x58, 0x7f,
	0xf7, 0xb8, 0x3f, 0x38, 0xf4, 0x3e, 0x02, 0xdb, 0x2c, 0x08, 0xf6, 0x06, 0xbb, 0xa3, 0xaf, 0xbd,
	0x0a, 0xc4, 0x86, 0x05, 0xfc, 0xcd, 0xe0, 0x78, 0xe0, 0x1f, 0xf4, 0xbd, 0x2a, 0xfd, 0x8c, 0x3c,
	0x59, 0x90, 0x0c, 0x47, 0xef, 0xfa, 0xdf, 0xb0, 0xe3, 0xc1, 0x60, 0x8f, 0xed, 0xbf, 0x3b, 0x3c,
	0x64, 0xef, 0x4e, 0xf6, 0x76, 0x47, 0x03, 0x6f, 0xe9, 0xf5, 0xab, 0x5f, 0xbc, 0x18, 0x4b, 0x7d,
	0x31, 0x3b, 0xdb, 0x09, 0xd2, 0xf8, 0xc5, 0x8f, 0xbf, 0x98, 0xbc, 0x18, 0xa7, 0xcf, 0x95, 0x16,
	0x3c, 0x7e, 0x9e, 0x09, 0x95, 0xce, 0xb2, 0x40, 0xa8, 0xe2, 0xff, 0xf1, 0x02, 0x35, 0x4e, 0x7f,
	0x55, 0xf9, 0xe8, 0x7f, 0x03, 0x00, 0x00, 0xff, 0xff, 0xca, 0xea, 0x16, 0x08, 0xbc, 0x27, 0x00,
	0x00,
}
