// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.21.0
// 	protoc        v3.6.1
// source: csgo/gcsdk_gcmessages.proto

package csgo

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type GCClientLauncherType int32

const (
	GCClientLauncherType_GCClientLauncherType_DEFAULT      GCClientLauncherType = 0
	GCClientLauncherType_GCClientLauncherType_PERFECTWORLD GCClientLauncherType = 1
)

// Enum value maps for GCClientLauncherType.
var (
	GCClientLauncherType_name = map[int32]string{
		0: "GCClientLauncherType_DEFAULT",
		1: "GCClientLauncherType_PERFECTWORLD",
	}
	GCClientLauncherType_value = map[string]int32{
		"GCClientLauncherType_DEFAULT":      0,
		"GCClientLauncherType_PERFECTWORLD": 1,
	}
)

func (x GCClientLauncherType) Enum() *GCClientLauncherType {
	p := new(GCClientLauncherType)
	*p = x
	return p
}

func (x GCClientLauncherType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GCClientLauncherType) Descriptor() protoreflect.EnumDescriptor {
	return file_csgo_gcsdk_gcmessages_proto_enumTypes[0].Descriptor()
}

func (GCClientLauncherType) Type() protoreflect.EnumType {
	return &file_csgo_gcsdk_gcmessages_proto_enumTypes[0]
}

func (x GCClientLauncherType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *GCClientLauncherType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = GCClientLauncherType(num)
	return nil
}

// Deprecated: Use GCClientLauncherType.Descriptor instead.
func (GCClientLauncherType) EnumDescriptor() ([]byte, []int) {
	return file_csgo_gcsdk_gcmessages_proto_rawDescGZIP(), []int{0}
}

type GCConnectionStatus int32

const (
	GCConnectionStatus_GCConnectionStatus_HAVE_SESSION              GCConnectionStatus = 0
	GCConnectionStatus_GCConnectionStatus_GC_GOING_DOWN             GCConnectionStatus = 1
	GCConnectionStatus_GCConnectionStatus_NO_SESSION                GCConnectionStatus = 2
	GCConnectionStatus_GCConnectionStatus_NO_SESSION_IN_LOGON_QUEUE GCConnectionStatus = 3
	GCConnectionStatus_GCConnectionStatus_NO_STEAM                  GCConnectionStatus = 4
)

// Enum value maps for GCConnectionStatus.
var (
	GCConnectionStatus_name = map[int32]string{
		0: "GCConnectionStatus_HAVE_SESSION",
		1: "GCConnectionStatus_GC_GOING_DOWN",
		2: "GCConnectionStatus_NO_SESSION",
		3: "GCConnectionStatus_NO_SESSION_IN_LOGON_QUEUE",
		4: "GCConnectionStatus_NO_STEAM",
	}
	GCConnectionStatus_value = map[string]int32{
		"GCConnectionStatus_HAVE_SESSION":              0,
		"GCConnectionStatus_GC_GOING_DOWN":             1,
		"GCConnectionStatus_NO_SESSION":                2,
		"GCConnectionStatus_NO_SESSION_IN_LOGON_QUEUE": 3,
		"GCConnectionStatus_NO_STEAM":                  4,
	}
)

func (x GCConnectionStatus) Enum() *GCConnectionStatus {
	p := new(GCConnectionStatus)
	*p = x
	return p
}

func (x GCConnectionStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GCConnectionStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_csgo_gcsdk_gcmessages_proto_enumTypes[1].Descriptor()
}

func (GCConnectionStatus) Type() protoreflect.EnumType {
	return &file_csgo_gcsdk_gcmessages_proto_enumTypes[1]
}

func (x GCConnectionStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *GCConnectionStatus) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = GCConnectionStatus(num)
	return nil
}

// Deprecated: Use GCConnectionStatus.Descriptor instead.
func (GCConnectionStatus) EnumDescriptor() ([]byte, []int) {
	return file_csgo_gcsdk_gcmessages_proto_rawDescGZIP(), []int{1}
}

type ESteamPaymentRuleType int32

const (
	ESteamPaymentRuleType_k_EPaymentRuleTypeComposite       ESteamPaymentRuleType = 0
	ESteamPaymentRuleType_k_EPaymentRuleTypeWorkshop        ESteamPaymentRuleType = 1
	ESteamPaymentRuleType_k_EPaymentRuleTypeServiceProvider ESteamPaymentRuleType = 2
	ESteamPaymentRuleType_k_EPaymentRuleTypePartner         ESteamPaymentRuleType = 3
	ESteamPaymentRuleType_k_EPaymentRuleTypeSpecialPayment  ESteamPaymentRuleType = 4
)

// Enum value maps for ESteamPaymentRuleType.
var (
	ESteamPaymentRuleType_name = map[int32]string{
		0: "k_EPaymentRuleTypeComposite",
		1: "k_EPaymentRuleTypeWorkshop",
		2: "k_EPaymentRuleTypeServiceProvider",
		3: "k_EPaymentRuleTypePartner",
		4: "k_EPaymentRuleTypeSpecialPayment",
	}
	ESteamPaymentRuleType_value = map[string]int32{
		"k_EPaymentRuleTypeComposite":       0,
		"k_EPaymentRuleTypeWorkshop":        1,
		"k_EPaymentRuleTypeServiceProvider": 2,
		"k_EPaymentRuleTypePartner":         3,
		"k_EPaymentRuleTypeSpecialPayment":  4,
	}
)

func (x ESteamPaymentRuleType) Enum() *ESteamPaymentRuleType {
	p := new(ESteamPaymentRuleType)
	*p = x
	return p
}

func (x ESteamPaymentRuleType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ESteamPaymentRuleType) Descriptor() protoreflect.EnumDescriptor {
	return file_csgo_gcsdk_gcmessages_proto_enumTypes[2].Descriptor()
}

func (ESteamPaymentRuleType) Type() protoreflect.EnumType {
	return &file_csgo_gcsdk_gcmessages_proto_enumTypes[2]
}

func (x ESteamPaymentRuleType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *ESteamPaymentRuleType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = ESteamPaymentRuleType(num)
	return nil
}

// Deprecated: Use ESteamPaymentRuleType.Descriptor instead.
func (ESteamPaymentRuleType) EnumDescriptor() ([]byte, []int) {
	return file_csgo_gcsdk_gcmessages_proto_rawDescGZIP(), []int{2}
}

type CMsgSOIDOwner struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type *uint32 `protobuf:"varint,1,opt,name=type" json:"type,omitempty"`
	Id   *uint64 `protobuf:"varint,2,opt,name=id" json:"id,omitempty"`
}

func (x *CMsgSOIDOwner) Reset() {
	*x = CMsgSOIDOwner{}
	if protoimpl.UnsafeEnabled {
		mi := &file_csgo_gcsdk_gcmessages_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgSOIDOwner) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSOIDOwner) ProtoMessage() {}

func (x *CMsgSOIDOwner) ProtoReflect() protoreflect.Message {
	mi := &file_csgo_gcsdk_gcmessages_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSOIDOwner.ProtoReflect.Descriptor instead.
func (*CMsgSOIDOwner) Descriptor() ([]byte, []int) {
	return file_csgo_gcsdk_gcmessages_proto_rawDescGZIP(), []int{0}
}

func (x *CMsgSOIDOwner) GetType() uint32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *CMsgSOIDOwner) GetId() uint64 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

type CMsgSOSingleObject struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TypeId     *int32         `protobuf:"varint,2,opt,name=type_id,json=typeId" json:"type_id,omitempty"`
	ObjectData []byte         `protobuf:"bytes,3,opt,name=object_data,json=objectData" json:"object_data,omitempty"`
	Version    *uint64        `protobuf:"fixed64,4,opt,name=version" json:"version,omitempty"`
	OwnerSoid  *CMsgSOIDOwner `protobuf:"bytes,5,opt,name=owner_soid,json=ownerSoid" json:"owner_soid,omitempty"`
}

func (x *CMsgSOSingleObject) Reset() {
	*x = CMsgSOSingleObject{}
	if protoimpl.UnsafeEnabled {
		mi := &file_csgo_gcsdk_gcmessages_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgSOSingleObject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSOSingleObject) ProtoMessage() {}

func (x *CMsgSOSingleObject) ProtoReflect() protoreflect.Message {
	mi := &file_csgo_gcsdk_gcmessages_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSOSingleObject.ProtoReflect.Descriptor instead.
func (*CMsgSOSingleObject) Descriptor() ([]byte, []int) {
	return file_csgo_gcsdk_gcmessages_proto_rawDescGZIP(), []int{1}
}

func (x *CMsgSOSingleObject) GetTypeId() int32 {
	if x != nil && x.TypeId != nil {
		return *x.TypeId
	}
	return 0
}

func (x *CMsgSOSingleObject) GetObjectData() []byte {
	if x != nil {
		return x.ObjectData
	}
	return nil
}

func (x *CMsgSOSingleObject) GetVersion() uint64 {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return 0
}

func (x *CMsgSOSingleObject) GetOwnerSoid() *CMsgSOIDOwner {
	if x != nil {
		return x.OwnerSoid
	}
	return nil
}

type CMsgSOMultipleObjects struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ObjectsModified []*CMsgSOMultipleObjects_SingleObject `protobuf:"bytes,2,rep,name=objects_modified,json=objectsModified" json:"objects_modified,omitempty"`
	Version         *uint64                               `protobuf:"fixed64,3,opt,name=version" json:"version,omitempty"`
	OwnerSoid       *CMsgSOIDOwner                        `protobuf:"bytes,6,opt,name=owner_soid,json=ownerSoid" json:"owner_soid,omitempty"`
}

func (x *CMsgSOMultipleObjects) Reset() {
	*x = CMsgSOMultipleObjects{}
	if protoimpl.UnsafeEnabled {
		mi := &file_csgo_gcsdk_gcmessages_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgSOMultipleObjects) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSOMultipleObjects) ProtoMessage() {}

func (x *CMsgSOMultipleObjects) ProtoReflect() protoreflect.Message {
	mi := &file_csgo_gcsdk_gcmessages_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSOMultipleObjects.ProtoReflect.Descriptor instead.
func (*CMsgSOMultipleObjects) Descriptor() ([]byte, []int) {
	return file_csgo_gcsdk_gcmessages_proto_rawDescGZIP(), []int{2}
}

func (x *CMsgSOMultipleObjects) GetObjectsModified() []*CMsgSOMultipleObjects_SingleObject {
	if x != nil {
		return x.ObjectsModified
	}
	return nil
}

func (x *CMsgSOMultipleObjects) GetVersion() uint64 {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return 0
}

func (x *CMsgSOMultipleObjects) GetOwnerSoid() *CMsgSOIDOwner {
	if x != nil {
		return x.OwnerSoid
	}
	return nil
}

type CMsgSOCacheSubscribed struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Objects   []*CMsgSOCacheSubscribed_SubscribedType `protobuf:"bytes,2,rep,name=objects" json:"objects,omitempty"`
	Version   *uint64                                 `protobuf:"fixed64,3,opt,name=version" json:"version,omitempty"`
	OwnerSoid *CMsgSOIDOwner                          `protobuf:"bytes,4,opt,name=owner_soid,json=ownerSoid" json:"owner_soid,omitempty"`
}

func (x *CMsgSOCacheSubscribed) Reset() {
	*x = CMsgSOCacheSubscribed{}
	if protoimpl.UnsafeEnabled {
		mi := &file_csgo_gcsdk_gcmessages_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgSOCacheSubscribed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSOCacheSubscribed) ProtoMessage() {}

func (x *CMsgSOCacheSubscribed) ProtoReflect() protoreflect.Message {
	mi := &file_csgo_gcsdk_gcmessages_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSOCacheSubscribed.ProtoReflect.Descriptor instead.
func (*CMsgSOCacheSubscribed) Descriptor() ([]byte, []int) {
	return file_csgo_gcsdk_gcmessages_proto_rawDescGZIP(), []int{3}
}

func (x *CMsgSOCacheSubscribed) GetObjects() []*CMsgSOCacheSubscribed_SubscribedType {
	if x != nil {
		return x.Objects
	}
	return nil
}

func (x *CMsgSOCacheSubscribed) GetVersion() uint64 {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return 0
}

func (x *CMsgSOCacheSubscribed) GetOwnerSoid() *CMsgSOIDOwner {
	if x != nil {
		return x.OwnerSoid
	}
	return nil
}

type CMsgSOCacheUnsubscribed struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OwnerSoid *CMsgSOIDOwner `protobuf:"bytes,2,opt,name=owner_soid,json=ownerSoid" json:"owner_soid,omitempty"`
}

func (x *CMsgSOCacheUnsubscribed) Reset() {
	*x = CMsgSOCacheUnsubscribed{}
	if protoimpl.UnsafeEnabled {
		mi := &file_csgo_gcsdk_gcmessages_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgSOCacheUnsubscribed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSOCacheUnsubscribed) ProtoMessage() {}

func (x *CMsgSOCacheUnsubscribed) ProtoReflect() protoreflect.Message {
	mi := &file_csgo_gcsdk_gcmessages_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSOCacheUnsubscribed.ProtoReflect.Descriptor instead.
func (*CMsgSOCacheUnsubscribed) Descriptor() ([]byte, []int) {
	return file_csgo_gcsdk_gcmessages_proto_rawDescGZIP(), []int{4}
}

func (x *CMsgSOCacheUnsubscribed) GetOwnerSoid() *CMsgSOIDOwner {
	if x != nil {
		return x.OwnerSoid
	}
	return nil
}

type CMsgSOCacheSubscriptionCheck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version   *uint64        `protobuf:"fixed64,2,opt,name=version" json:"version,omitempty"`
	OwnerSoid *CMsgSOIDOwner `protobuf:"bytes,3,opt,name=owner_soid,json=ownerSoid" json:"owner_soid,omitempty"`
}

func (x *CMsgSOCacheSubscriptionCheck) Reset() {
	*x = CMsgSOCacheSubscriptionCheck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_csgo_gcsdk_gcmessages_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgSOCacheSubscriptionCheck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSOCacheSubscriptionCheck) ProtoMessage() {}

func (x *CMsgSOCacheSubscriptionCheck) ProtoReflect() protoreflect.Message {
	mi := &file_csgo_gcsdk_gcmessages_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSOCacheSubscriptionCheck.ProtoReflect.Descriptor instead.
func (*CMsgSOCacheSubscriptionCheck) Descriptor() ([]byte, []int) {
	return file_csgo_gcsdk_gcmessages_proto_rawDescGZIP(), []int{5}
}

func (x *CMsgSOCacheSubscriptionCheck) GetVersion() uint64 {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return 0
}

func (x *CMsgSOCacheSubscriptionCheck) GetOwnerSoid() *CMsgSOIDOwner {
	if x != nil {
		return x.OwnerSoid
	}
	return nil
}

type CMsgSOCacheSubscriptionRefresh struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OwnerSoid *CMsgSOIDOwner `protobuf:"bytes,2,opt,name=owner_soid,json=ownerSoid" json:"owner_soid,omitempty"`
}

func (x *CMsgSOCacheSubscriptionRefresh) Reset() {
	*x = CMsgSOCacheSubscriptionRefresh{}
	if protoimpl.UnsafeEnabled {
		mi := &file_csgo_gcsdk_gcmessages_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgSOCacheSubscriptionRefresh) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSOCacheSubscriptionRefresh) ProtoMessage() {}

func (x *CMsgSOCacheSubscriptionRefresh) ProtoReflect() protoreflect.Message {
	mi := &file_csgo_gcsdk_gcmessages_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSOCacheSubscriptionRefresh.ProtoReflect.Descriptor instead.
func (*CMsgSOCacheSubscriptionRefresh) Descriptor() ([]byte, []int) {
	return file_csgo_gcsdk_gcmessages_proto_rawDescGZIP(), []int{6}
}

func (x *CMsgSOCacheSubscriptionRefresh) GetOwnerSoid() *CMsgSOIDOwner {
	if x != nil {
		return x.OwnerSoid
	}
	return nil
}

type CMsgSOCacheVersion struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version *uint64 `protobuf:"fixed64,1,opt,name=version" json:"version,omitempty"`
}

func (x *CMsgSOCacheVersion) Reset() {
	*x = CMsgSOCacheVersion{}
	if protoimpl.UnsafeEnabled {
		mi := &file_csgo_gcsdk_gcmessages_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgSOCacheVersion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSOCacheVersion) ProtoMessage() {}

func (x *CMsgSOCacheVersion) ProtoReflect() protoreflect.Message {
	mi := &file_csgo_gcsdk_gcmessages_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSOCacheVersion.ProtoReflect.Descriptor instead.
func (*CMsgSOCacheVersion) Descriptor() ([]byte, []int) {
	return file_csgo_gcsdk_gcmessages_proto_rawDescGZIP(), []int{7}
}

func (x *CMsgSOCacheVersion) GetVersion() uint64 {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return 0
}

type CMsgAccountDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Valid                      *bool   `protobuf:"varint,1,opt,name=valid" json:"valid,omitempty"`
	AccountName                *string `protobuf:"bytes,2,opt,name=account_name,json=accountName" json:"account_name,omitempty"`
	PublicProfile              *bool   `protobuf:"varint,4,opt,name=public_profile,json=publicProfile" json:"public_profile,omitempty"`
	PublicInventory            *bool   `protobuf:"varint,5,opt,name=public_inventory,json=publicInventory" json:"public_inventory,omitempty"`
	VacBanned                  *bool   `protobuf:"varint,6,opt,name=vac_banned,json=vacBanned" json:"vac_banned,omitempty"`
	CyberCafe                  *bool   `protobuf:"varint,7,opt,name=cyber_cafe,json=cyberCafe" json:"cyber_cafe,omitempty"`
	SchoolAccount              *bool   `protobuf:"varint,8,opt,name=school_account,json=schoolAccount" json:"school_account,omitempty"`
	FreeTrialAccount           *bool   `protobuf:"varint,9,opt,name=free_trial_account,json=freeTrialAccount" json:"free_trial_account,omitempty"`
	Subscribed                 *bool   `protobuf:"varint,10,opt,name=subscribed" json:"subscribed,omitempty"`
	LowViolence                *bool   `protobuf:"varint,11,opt,name=low_violence,json=lowViolence" json:"low_violence,omitempty"`
	Limited                    *bool   `protobuf:"varint,12,opt,name=limited" json:"limited,omitempty"`
	Trusted                    *bool   `protobuf:"varint,13,opt,name=trusted" json:"trusted,omitempty"`
	Package                    *uint32 `protobuf:"varint,14,opt,name=package" json:"package,omitempty"`
	TimeCached                 *uint32 `protobuf:"fixed32,15,opt,name=time_cached,json=timeCached" json:"time_cached,omitempty"`
	AccountLocked              *bool   `protobuf:"varint,16,opt,name=account_locked,json=accountLocked" json:"account_locked,omitempty"`
	CommunityBanned            *bool   `protobuf:"varint,17,opt,name=community_banned,json=communityBanned" json:"community_banned,omitempty"`
	TradeBanned                *bool   `protobuf:"varint,18,opt,name=trade_banned,json=tradeBanned" json:"trade_banned,omitempty"`
	EligibleForCommunityMarket *bool   `protobuf:"varint,19,opt,name=eligible_for_community_market,json=eligibleForCommunityMarket" json:"eligible_for_community_market,omitempty"`
}

func (x *CMsgAccountDetails) Reset() {
	*x = CMsgAccountDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_csgo_gcsdk_gcmessages_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgAccountDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgAccountDetails) ProtoMessage() {}

func (x *CMsgAccountDetails) ProtoReflect() protoreflect.Message {
	mi := &file_csgo_gcsdk_gcmessages_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgAccountDetails.ProtoReflect.Descriptor instead.
func (*CMsgAccountDetails) Descriptor() ([]byte, []int) {
	return file_csgo_gcsdk_gcmessages_proto_rawDescGZIP(), []int{8}
}

func (x *CMsgAccountDetails) GetValid() bool {
	if x != nil && x.Valid != nil {
		return *x.Valid
	}
	return false
}

func (x *CMsgAccountDetails) GetAccountName() string {
	if x != nil && x.AccountName != nil {
		return *x.AccountName
	}
	return ""
}

func (x *CMsgAccountDetails) GetPublicProfile() bool {
	if x != nil && x.PublicProfile != nil {
		return *x.PublicProfile
	}
	return false
}

func (x *CMsgAccountDetails) GetPublicInventory() bool {
	if x != nil && x.PublicInventory != nil {
		return *x.PublicInventory
	}
	return false
}

func (x *CMsgAccountDetails) GetVacBanned() bool {
	if x != nil && x.VacBanned != nil {
		return *x.VacBanned
	}
	return false
}

func (x *CMsgAccountDetails) GetCyberCafe() bool {
	if x != nil && x.CyberCafe != nil {
		return *x.CyberCafe
	}
	return false
}

func (x *CMsgAccountDetails) GetSchoolAccount() bool {
	if x != nil && x.SchoolAccount != nil {
		return *x.SchoolAccount
	}
	return false
}

func (x *CMsgAccountDetails) GetFreeTrialAccount() bool {
	if x != nil && x.FreeTrialAccount != nil {
		return *x.FreeTrialAccount
	}
	return false
}

func (x *CMsgAccountDetails) GetSubscribed() bool {
	if x != nil && x.Subscribed != nil {
		return *x.Subscribed
	}
	return false
}

func (x *CMsgAccountDetails) GetLowViolence() bool {
	if x != nil && x.LowViolence != nil {
		return *x.LowViolence
	}
	return false
}

func (x *CMsgAccountDetails) GetLimited() bool {
	if x != nil && x.Limited != nil {
		return *x.Limited
	}
	return false
}

func (x *CMsgAccountDetails) GetTrusted() bool {
	if x != nil && x.Trusted != nil {
		return *x.Trusted
	}
	return false
}

func (x *CMsgAccountDetails) GetPackage() uint32 {
	if x != nil && x.Package != nil {
		return *x.Package
	}
	return 0
}

func (x *CMsgAccountDetails) GetTimeCached() uint32 {
	if x != nil && x.TimeCached != nil {
		return *x.TimeCached
	}
	return 0
}

func (x *CMsgAccountDetails) GetAccountLocked() bool {
	if x != nil && x.AccountLocked != nil {
		return *x.AccountLocked
	}
	return false
}

func (x *CMsgAccountDetails) GetCommunityBanned() bool {
	if x != nil && x.CommunityBanned != nil {
		return *x.CommunityBanned
	}
	return false
}

func (x *CMsgAccountDetails) GetTradeBanned() bool {
	if x != nil && x.TradeBanned != nil {
		return *x.TradeBanned
	}
	return false
}

func (x *CMsgAccountDetails) GetEligibleForCommunityMarket() bool {
	if x != nil && x.EligibleForCommunityMarket != nil {
		return *x.EligibleForCommunityMarket
	}
	return false
}

type CMsgGCMultiplexMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msgtype   *uint32  `protobuf:"varint,1,opt,name=msgtype" json:"msgtype,omitempty"`
	Payload   []byte   `protobuf:"bytes,2,opt,name=payload" json:"payload,omitempty"`
	Steamids  []uint64 `protobuf:"fixed64,3,rep,name=steamids" json:"steamids,omitempty"`
	Replytogc *bool    `protobuf:"varint,4,opt,name=replytogc" json:"replytogc,omitempty"`
}

func (x *CMsgGCMultiplexMessage) Reset() {
	*x = CMsgGCMultiplexMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_csgo_gcsdk_gcmessages_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCMultiplexMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCMultiplexMessage) ProtoMessage() {}

func (x *CMsgGCMultiplexMessage) ProtoReflect() protoreflect.Message {
	mi := &file_csgo_gcsdk_gcmessages_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCMultiplexMessage.ProtoReflect.Descriptor instead.
func (*CMsgGCMultiplexMessage) Descriptor() ([]byte, []int) {
	return file_csgo_gcsdk_gcmessages_proto_rawDescGZIP(), []int{9}
}

func (x *CMsgGCMultiplexMessage) GetMsgtype() uint32 {
	if x != nil && x.Msgtype != nil {
		return *x.Msgtype
	}
	return 0
}

func (x *CMsgGCMultiplexMessage) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *CMsgGCMultiplexMessage) GetSteamids() []uint64 {
	if x != nil {
		return x.Steamids
	}
	return nil
}

func (x *CMsgGCMultiplexMessage) GetReplytogc() bool {
	if x != nil && x.Replytogc != nil {
		return *x.Replytogc
	}
	return false
}

type CMsgGCMultiplexMessage_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msgtype *uint32 `protobuf:"varint,1,opt,name=msgtype" json:"msgtype,omitempty"`
}

func (x *CMsgGCMultiplexMessage_Response) Reset() {
	*x = CMsgGCMultiplexMessage_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_csgo_gcsdk_gcmessages_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCMultiplexMessage_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCMultiplexMessage_Response) ProtoMessage() {}

func (x *CMsgGCMultiplexMessage_Response) ProtoReflect() protoreflect.Message {
	mi := &file_csgo_gcsdk_gcmessages_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCMultiplexMessage_Response.ProtoReflect.Descriptor instead.
func (*CMsgGCMultiplexMessage_Response) Descriptor() ([]byte, []int) {
	return file_csgo_gcsdk_gcmessages_proto_rawDescGZIP(), []int{10}
}

func (x *CMsgGCMultiplexMessage_Response) GetMsgtype() uint32 {
	if x != nil && x.Msgtype != nil {
		return *x.Msgtype
	}
	return 0
}

type CGCToGCMsgMasterAck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DirIndex *uint32 `protobuf:"varint,1,opt,name=dir_index,json=dirIndex" json:"dir_index,omitempty"`
	GcType   *uint32 `protobuf:"varint,2,opt,name=gc_type,json=gcType" json:"gc_type,omitempty"`
}

func (x *CGCToGCMsgMasterAck) Reset() {
	*x = CGCToGCMsgMasterAck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_csgo_gcsdk_gcmessages_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CGCToGCMsgMasterAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CGCToGCMsgMasterAck) ProtoMessage() {}

func (x *CGCToGCMsgMasterAck) ProtoReflect() protoreflect.Message {
	mi := &file_csgo_gcsdk_gcmessages_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CGCToGCMsgMasterAck.ProtoReflect.Descriptor instead.
func (*CGCToGCMsgMasterAck) Descriptor() ([]byte, []int) {
	return file_csgo_gcsdk_gcmessages_proto_rawDescGZIP(), []int{11}
}

func (x *CGCToGCMsgMasterAck) GetDirIndex() uint32 {
	if x != nil && x.DirIndex != nil {
		return *x.DirIndex
	}
	return 0
}

func (x *CGCToGCMsgMasterAck) GetGcType() uint32 {
	if x != nil && x.GcType != nil {
		return *x.GcType
	}
	return 0
}

type CGCToGCMsgMasterAck_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Eresult *int32 `protobuf:"varint,1,opt,name=eresult,def=2" json:"eresult,omitempty"`
}

// Default values for CGCToGCMsgMasterAck_Response fields.
const (
	Default_CGCToGCMsgMasterAck_Response_Eresult = int32(2)
)

func (x *CGCToGCMsgMasterAck_Response) Reset() {
	*x = CGCToGCMsgMasterAck_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_csgo_gcsdk_gcmessages_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CGCToGCMsgMasterAck_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CGCToGCMsgMasterAck_Response) ProtoMessage() {}

func (x *CGCToGCMsgMasterAck_Response) ProtoReflect() protoreflect.Message {
	mi := &file_csgo_gcsdk_gcmessages_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CGCToGCMsgMasterAck_Response.ProtoReflect.Descriptor instead.
func (*CGCToGCMsgMasterAck_Response) Descriptor() ([]byte, []int) {
	return file_csgo_gcsdk_gcmessages_proto_rawDescGZIP(), []int{12}
}

func (x *CGCToGCMsgMasterAck_Response) GetEresult() int32 {
	if x != nil && x.Eresult != nil {
		return *x.Eresult
	}
	return Default_CGCToGCMsgMasterAck_Response_Eresult
}

type CGCToGCMsgMasterStartupComplete struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CGCToGCMsgMasterStartupComplete) Reset() {
	*x = CGCToGCMsgMasterStartupComplete{}
	if protoimpl.UnsafeEnabled {
		mi := &file_csgo_gcsdk_gcmessages_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CGCToGCMsgMasterStartupComplete) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CGCToGCMsgMasterStartupComplete) ProtoMessage() {}

func (x *CGCToGCMsgMasterStartupComplete) ProtoReflect() protoreflect.Message {
	mi := &file_csgo_gcsdk_gcmessages_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CGCToGCMsgMasterStartupComplete.ProtoReflect.Descriptor instead.
func (*CGCToGCMsgMasterStartupComplete) Descriptor() ([]byte, []int) {
	return file_csgo_gcsdk_gcmessages_proto_rawDescGZIP(), []int{13}
}

type CGCToGCMsgRouted struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MsgType    *uint32 `protobuf:"varint,1,opt,name=msg_type,json=msgType" json:"msg_type,omitempty"`
	SenderId   *uint64 `protobuf:"fixed64,2,opt,name=sender_id,json=senderId" json:"sender_id,omitempty"`
	NetMessage []byte  `protobuf:"bytes,3,opt,name=net_message,json=netMessage" json:"net_message,omitempty"`
	Ip         *uint32 `protobuf:"varint,4,opt,name=ip" json:"ip,omitempty"`
}

func (x *CGCToGCMsgRouted) Reset() {
	*x = CGCToGCMsgRouted{}
	if protoimpl.UnsafeEnabled {
		mi := &file_csgo_gcsdk_gcmessages_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CGCToGCMsgRouted) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CGCToGCMsgRouted) ProtoMessage() {}

func (x *CGCToGCMsgRouted) ProtoReflect() protoreflect.Message {
	mi := &file_csgo_gcsdk_gcmessages_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CGCToGCMsgRouted.ProtoReflect.Descriptor instead.
func (*CGCToGCMsgRouted) Descriptor() ([]byte, []int) {
	return file_csgo_gcsdk_gcmessages_proto_rawDescGZIP(), []int{14}
}

func (x *CGCToGCMsgRouted) GetMsgType() uint32 {
	if x != nil && x.MsgType != nil {
		return *x.MsgType
	}
	return 0
}

func (x *CGCToGCMsgRouted) GetSenderId() uint64 {
	if x != nil && x.SenderId != nil {
		return *x.SenderId
	}
	return 0
}

func (x *CGCToGCMsgRouted) GetNetMessage() []byte {
	if x != nil {
		return x.NetMessage
	}
	return nil
}

func (x *CGCToGCMsgRouted) GetIp() uint32 {
	if x != nil && x.Ip != nil {
		return *x.Ip
	}
	return 0
}

type CGCToGCMsgRoutedReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MsgType    *uint32 `protobuf:"varint,1,opt,name=msg_type,json=msgType" json:"msg_type,omitempty"`
	NetMessage []byte  `protobuf:"bytes,2,opt,name=net_message,json=netMessage" json:"net_message,omitempty"`
}

func (x *CGCToGCMsgRoutedReply) Reset() {
	*x = CGCToGCMsgRoutedReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_csgo_gcsdk_gcmessages_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CGCToGCMsgRoutedReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CGCToGCMsgRoutedReply) ProtoMessage() {}

func (x *CGCToGCMsgRoutedReply) ProtoReflect() protoreflect.Message {
	mi := &file_csgo_gcsdk_gcmessages_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CGCToGCMsgRoutedReply.ProtoReflect.Descriptor instead.
func (*CGCToGCMsgRoutedReply) Descriptor() ([]byte, []int) {
	return file_csgo_gcsdk_gcmessages_proto_rawDescGZIP(), []int{15}
}

func (x *CGCToGCMsgRoutedReply) GetMsgType() uint32 {
	if x != nil && x.MsgType != nil {
		return *x.MsgType
	}
	return 0
}

func (x *CGCToGCMsgRoutedReply) GetNetMessage() []byte {
	if x != nil {
		return x.NetMessage
	}
	return nil
}

type CMsgGCUpdateSessionIP struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Steamid *uint64 `protobuf:"fixed64,1,opt,name=steamid" json:"steamid,omitempty"`
	Ip      *uint32 `protobuf:"fixed32,2,opt,name=ip" json:"ip,omitempty"`
}

func (x *CMsgGCUpdateSessionIP) Reset() {
	*x = CMsgGCUpdateSessionIP{}
	if protoimpl.UnsafeEnabled {
		mi := &file_csgo_gcsdk_gcmessages_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCUpdateSessionIP) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCUpdateSessionIP) ProtoMessage() {}

func (x *CMsgGCUpdateSessionIP) ProtoReflect() protoreflect.Message {
	mi := &file_csgo_gcsdk_gcmessages_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCUpdateSessionIP.ProtoReflect.Descriptor instead.
func (*CMsgGCUpdateSessionIP) Descriptor() ([]byte, []int) {
	return file_csgo_gcsdk_gcmessages_proto_rawDescGZIP(), []int{16}
}

func (x *CMsgGCUpdateSessionIP) GetSteamid() uint64 {
	if x != nil && x.Steamid != nil {
		return *x.Steamid
	}
	return 0
}

func (x *CMsgGCUpdateSessionIP) GetIp() uint32 {
	if x != nil && x.Ip != nil {
		return *x.Ip
	}
	return 0
}

type CMsgGCRequestSessionIP struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Steamid *uint64 `protobuf:"fixed64,1,opt,name=steamid" json:"steamid,omitempty"`
}

func (x *CMsgGCRequestSessionIP) Reset() {
	*x = CMsgGCRequestSessionIP{}
	if protoimpl.UnsafeEnabled {
		mi := &file_csgo_gcsdk_gcmessages_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCRequestSessionIP) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCRequestSessionIP) ProtoMessage() {}

func (x *CMsgGCRequestSessionIP) ProtoReflect() protoreflect.Message {
	mi := &file_csgo_gcsdk_gcmessages_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCRequestSessionIP.ProtoReflect.Descriptor instead.
func (*CMsgGCRequestSessionIP) Descriptor() ([]byte, []int) {
	return file_csgo_gcsdk_gcmessages_proto_rawDescGZIP(), []int{17}
}

func (x *CMsgGCRequestSessionIP) GetSteamid() uint64 {
	if x != nil && x.Steamid != nil {
		return *x.Steamid
	}
	return 0
}

type CMsgGCRequestSessionIPResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ip *uint32 `protobuf:"fixed32,1,opt,name=ip" json:"ip,omitempty"`
}

func (x *CMsgGCRequestSessionIPResponse) Reset() {
	*x = CMsgGCRequestSessionIPResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_csgo_gcsdk_gcmessages_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCRequestSessionIPResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCRequestSessionIPResponse) ProtoMessage() {}

func (x *CMsgGCRequestSessionIPResponse) ProtoReflect() protoreflect.Message {
	mi := &file_csgo_gcsdk_gcmessages_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCRequestSessionIPResponse.ProtoReflect.Descriptor instead.
func (*CMsgGCRequestSessionIPResponse) Descriptor() ([]byte, []int) {
	return file_csgo_gcsdk_gcmessages_proto_rawDescGZIP(), []int{18}
}

func (x *CMsgGCRequestSessionIPResponse) GetIp() uint32 {
	if x != nil && x.Ip != nil {
		return *x.Ip
	}
	return 0
}

type CMsgSOCacheHaveVersion struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Soid    *CMsgSOIDOwner `protobuf:"bytes,1,opt,name=soid" json:"soid,omitempty"`
	Version *uint64        `protobuf:"fixed64,2,opt,name=version" json:"version,omitempty"`
}

func (x *CMsgSOCacheHaveVersion) Reset() {
	*x = CMsgSOCacheHaveVersion{}
	if protoimpl.UnsafeEnabled {
		mi := &file_csgo_gcsdk_gcmessages_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgSOCacheHaveVersion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSOCacheHaveVersion) ProtoMessage() {}

func (x *CMsgSOCacheHaveVersion) ProtoReflect() protoreflect.Message {
	mi := &file_csgo_gcsdk_gcmessages_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSOCacheHaveVersion.ProtoReflect.Descriptor instead.
func (*CMsgSOCacheHaveVersion) Descriptor() ([]byte, []int) {
	return file_csgo_gcsdk_gcmessages_proto_rawDescGZIP(), []int{19}
}

func (x *CMsgSOCacheHaveVersion) GetSoid() *CMsgSOIDOwner {
	if x != nil {
		return x.Soid
	}
	return nil
}

func (x *CMsgSOCacheHaveVersion) GetVersion() uint64 {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return 0
}

type CMsgClientHello struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version               *uint32                   `protobuf:"varint,1,opt,name=version" json:"version,omitempty"`
	SocacheHaveVersions   []*CMsgSOCacheHaveVersion `protobuf:"bytes,2,rep,name=socache_have_versions,json=socacheHaveVersions" json:"socache_have_versions,omitempty"`
	ClientSessionNeed     *uint32                   `protobuf:"varint,3,opt,name=client_session_need,json=clientSessionNeed" json:"client_session_need,omitempty"`
	ClientLauncher        *uint32                   `protobuf:"varint,4,opt,name=client_launcher,json=clientLauncher" json:"client_launcher,omitempty"`
	PartnerSrcid          *uint32                   `protobuf:"varint,5,opt,name=partner_srcid,json=partnerSrcid" json:"partner_srcid,omitempty"`
	PartnerAccountid      *uint32                   `protobuf:"varint,6,opt,name=partner_accountid,json=partnerAccountid" json:"partner_accountid,omitempty"`
	PartnerAccountflags   *uint32                   `protobuf:"varint,7,opt,name=partner_accountflags,json=partnerAccountflags" json:"partner_accountflags,omitempty"`
	PartnerAccountbalance *uint32                   `protobuf:"varint,8,opt,name=partner_accountbalance,json=partnerAccountbalance" json:"partner_accountbalance,omitempty"`
}

func (x *CMsgClientHello) Reset() {
	*x = CMsgClientHello{}
	if protoimpl.UnsafeEnabled {
		mi := &file_csgo_gcsdk_gcmessages_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientHello) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientHello) ProtoMessage() {}

func (x *CMsgClientHello) ProtoReflect() protoreflect.Message {
	mi := &file_csgo_gcsdk_gcmessages_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientHello.ProtoReflect.Descriptor instead.
func (*CMsgClientHello) Descriptor() ([]byte, []int) {
	return file_csgo_gcsdk_gcmessages_proto_rawDescGZIP(), []int{20}
}

func (x *CMsgClientHello) GetVersion() uint32 {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return 0
}

func (x *CMsgClientHello) GetSocacheHaveVersions() []*CMsgSOCacheHaveVersion {
	if x != nil {
		return x.SocacheHaveVersions
	}
	return nil
}

func (x *CMsgClientHello) GetClientSessionNeed() uint32 {
	if x != nil && x.ClientSessionNeed != nil {
		return *x.ClientSessionNeed
	}
	return 0
}

func (x *CMsgClientHello) GetClientLauncher() uint32 {
	if x != nil && x.ClientLauncher != nil {
		return *x.ClientLauncher
	}
	return 0
}

func (x *CMsgClientHello) GetPartnerSrcid() uint32 {
	if x != nil && x.PartnerSrcid != nil {
		return *x.PartnerSrcid
	}
	return 0
}

func (x *CMsgClientHello) GetPartnerAccountid() uint32 {
	if x != nil && x.PartnerAccountid != nil {
		return *x.PartnerAccountid
	}
	return 0
}

func (x *CMsgClientHello) GetPartnerAccountflags() uint32 {
	if x != nil && x.PartnerAccountflags != nil {
		return *x.PartnerAccountflags
	}
	return 0
}

func (x *CMsgClientHello) GetPartnerAccountbalance() uint32 {
	if x != nil && x.PartnerAccountbalance != nil {
		return *x.PartnerAccountbalance
	}
	return 0
}

type CMsgServerHello struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version                    *uint32                   `protobuf:"varint,1,opt,name=version" json:"version,omitempty"`
	SocacheHaveVersions        []*CMsgSOCacheHaveVersion `protobuf:"bytes,2,rep,name=socache_have_versions,json=socacheHaveVersions" json:"socache_have_versions,omitempty"`
	LegacyClientSessionNeed    *uint32                   `protobuf:"varint,3,opt,name=legacy_client_session_need,json=legacyClientSessionNeed" json:"legacy_client_session_need,omitempty"`
	ClientLauncher             *uint32                   `protobuf:"varint,4,opt,name=client_launcher,json=clientLauncher" json:"client_launcher,omitempty"`
	LegacySteamdatagramRouting []byte                    `protobuf:"bytes,6,opt,name=legacy_steamdatagram_routing,json=legacySteamdatagramRouting" json:"legacy_steamdatagram_routing,omitempty"`
	RequiredInternalAddr       *uint32                   `protobuf:"varint,7,opt,name=required_internal_addr,json=requiredInternalAddr" json:"required_internal_addr,omitempty"`
	SteamdatagramLogin         []byte                    `protobuf:"bytes,8,opt,name=steamdatagram_login,json=steamdatagramLogin" json:"steamdatagram_login,omitempty"`
}

func (x *CMsgServerHello) Reset() {
	*x = CMsgServerHello{}
	if protoimpl.UnsafeEnabled {
		mi := &file_csgo_gcsdk_gcmessages_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgServerHello) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgServerHello) ProtoMessage() {}

func (x *CMsgServerHello) ProtoReflect() protoreflect.Message {
	mi := &file_csgo_gcsdk_gcmessages_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgServerHello.ProtoReflect.Descriptor instead.
func (*CMsgServerHello) Descriptor() ([]byte, []int) {
	return file_csgo_gcsdk_gcmessages_proto_rawDescGZIP(), []int{21}
}

func (x *CMsgServerHello) GetVersion() uint32 {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return 0
}

func (x *CMsgServerHello) GetSocacheHaveVersions() []*CMsgSOCacheHaveVersion {
	if x != nil {
		return x.SocacheHaveVersions
	}
	return nil
}

func (x *CMsgServerHello) GetLegacyClientSessionNeed() uint32 {
	if x != nil && x.LegacyClientSessionNeed != nil {
		return *x.LegacyClientSessionNeed
	}
	return 0
}

func (x *CMsgServerHello) GetClientLauncher() uint32 {
	if x != nil && x.ClientLauncher != nil {
		return *x.ClientLauncher
	}
	return 0
}

func (x *CMsgServerHello) GetLegacySteamdatagramRouting() []byte {
	if x != nil {
		return x.LegacySteamdatagramRouting
	}
	return nil
}

func (x *CMsgServerHello) GetRequiredInternalAddr() uint32 {
	if x != nil && x.RequiredInternalAddr != nil {
		return *x.RequiredInternalAddr
	}
	return 0
}

func (x *CMsgServerHello) GetSteamdatagramLogin() []byte {
	if x != nil {
		return x.SteamdatagramLogin
	}
	return nil
}

type CMsgClientWelcome struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version                   *uint32                         `protobuf:"varint,1,opt,name=version" json:"version,omitempty"`
	GameData                  []byte                          `protobuf:"bytes,2,opt,name=game_data,json=gameData" json:"game_data,omitempty"`
	OutofdateSubscribedCaches []*CMsgSOCacheSubscribed        `protobuf:"bytes,3,rep,name=outofdate_subscribed_caches,json=outofdateSubscribedCaches" json:"outofdate_subscribed_caches,omitempty"`
	UptodateSubscribedCaches  []*CMsgSOCacheSubscriptionCheck `protobuf:"bytes,4,rep,name=uptodate_subscribed_caches,json=uptodateSubscribedCaches" json:"uptodate_subscribed_caches,omitempty"`
	Location                  *CMsgClientWelcome_Location     `protobuf:"bytes,5,opt,name=location" json:"location,omitempty"`
	GameData2                 []byte                          `protobuf:"bytes,6,opt,name=game_data2,json=gameData2" json:"game_data2,omitempty"`
	Rtime32GcWelcomeTimestamp *uint32                         `protobuf:"varint,7,opt,name=rtime32_gc_welcome_timestamp,json=rtime32GcWelcomeTimestamp" json:"rtime32_gc_welcome_timestamp,omitempty"`
	Currency                  *uint32                         `protobuf:"varint,8,opt,name=currency" json:"currency,omitempty"`
	Balance                   *uint32                         `protobuf:"varint,9,opt,name=balance" json:"balance,omitempty"`
	BalanceUrl                *string                         `protobuf:"bytes,10,opt,name=balance_url,json=balanceUrl" json:"balance_url,omitempty"`
	TxnCountryCode            *string                         `protobuf:"bytes,11,opt,name=txn_country_code,json=txnCountryCode" json:"txn_country_code,omitempty"`
}

func (x *CMsgClientWelcome) Reset() {
	*x = CMsgClientWelcome{}
	if protoimpl.UnsafeEnabled {
		mi := &file_csgo_gcsdk_gcmessages_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientWelcome) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientWelcome) ProtoMessage() {}

func (x *CMsgClientWelcome) ProtoReflect() protoreflect.Message {
	mi := &file_csgo_gcsdk_gcmessages_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientWelcome.ProtoReflect.Descriptor instead.
func (*CMsgClientWelcome) Descriptor() ([]byte, []int) {
	return file_csgo_gcsdk_gcmessages_proto_rawDescGZIP(), []int{22}
}

func (x *CMsgClientWelcome) GetVersion() uint32 {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return 0
}

func (x *CMsgClientWelcome) GetGameData() []byte {
	if x != nil {
		return x.GameData
	}
	return nil
}

func (x *CMsgClientWelcome) GetOutofdateSubscribedCaches() []*CMsgSOCacheSubscribed {
	if x != nil {
		return x.OutofdateSubscribedCaches
	}
	return nil
}

func (x *CMsgClientWelcome) GetUptodateSubscribedCaches() []*CMsgSOCacheSubscriptionCheck {
	if x != nil {
		return x.UptodateSubscribedCaches
	}
	return nil
}

func (x *CMsgClientWelcome) GetLocation() *CMsgClientWelcome_Location {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *CMsgClientWelcome) GetGameData2() []byte {
	if x != nil {
		return x.GameData2
	}
	return nil
}

func (x *CMsgClientWelcome) GetRtime32GcWelcomeTimestamp() uint32 {
	if x != nil && x.Rtime32GcWelcomeTimestamp != nil {
		return *x.Rtime32GcWelcomeTimestamp
	}
	return 0
}

func (x *CMsgClientWelcome) GetCurrency() uint32 {
	if x != nil && x.Currency != nil {
		return *x.Currency
	}
	return 0
}

func (x *CMsgClientWelcome) GetBalance() uint32 {
	if x != nil && x.Balance != nil {
		return *x.Balance
	}
	return 0
}

func (x *CMsgClientWelcome) GetBalanceUrl() string {
	if x != nil && x.BalanceUrl != nil {
		return *x.BalanceUrl
	}
	return ""
}

func (x *CMsgClientWelcome) GetTxnCountryCode() string {
	if x != nil && x.TxnCountryCode != nil {
		return *x.TxnCountryCode
	}
	return ""
}

type CMsgConnectionStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status                        *GCConnectionStatus `protobuf:"varint,1,opt,name=status,enum=csgo.GCConnectionStatus,def=0" json:"status,omitempty"`
	ClientSessionNeed             *uint32             `protobuf:"varint,2,opt,name=client_session_need,json=clientSessionNeed" json:"client_session_need,omitempty"`
	QueuePosition                 *int32              `protobuf:"varint,3,opt,name=queue_position,json=queuePosition" json:"queue_position,omitempty"`
	QueueSize                     *int32              `protobuf:"varint,4,opt,name=queue_size,json=queueSize" json:"queue_size,omitempty"`
	WaitSeconds                   *int32              `protobuf:"varint,5,opt,name=wait_seconds,json=waitSeconds" json:"wait_seconds,omitempty"`
	EstimatedWaitSecondsRemaining *int32              `protobuf:"varint,6,opt,name=estimated_wait_seconds_remaining,json=estimatedWaitSecondsRemaining" json:"estimated_wait_seconds_remaining,omitempty"`
}

// Default values for CMsgConnectionStatus fields.
const (
	Default_CMsgConnectionStatus_Status = GCConnectionStatus_GCConnectionStatus_HAVE_SESSION
)

func (x *CMsgConnectionStatus) Reset() {
	*x = CMsgConnectionStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_csgo_gcsdk_gcmessages_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgConnectionStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgConnectionStatus) ProtoMessage() {}

func (x *CMsgConnectionStatus) ProtoReflect() protoreflect.Message {
	mi := &file_csgo_gcsdk_gcmessages_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgConnectionStatus.ProtoReflect.Descriptor instead.
func (*CMsgConnectionStatus) Descriptor() ([]byte, []int) {
	return file_csgo_gcsdk_gcmessages_proto_rawDescGZIP(), []int{23}
}

func (x *CMsgConnectionStatus) GetStatus() GCConnectionStatus {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return Default_CMsgConnectionStatus_Status
}

func (x *CMsgConnectionStatus) GetClientSessionNeed() uint32 {
	if x != nil && x.ClientSessionNeed != nil {
		return *x.ClientSessionNeed
	}
	return 0
}

func (x *CMsgConnectionStatus) GetQueuePosition() int32 {
	if x != nil && x.QueuePosition != nil {
		return *x.QueuePosition
	}
	return 0
}

func (x *CMsgConnectionStatus) GetQueueSize() int32 {
	if x != nil && x.QueueSize != nil {
		return *x.QueueSize
	}
	return 0
}

func (x *CMsgConnectionStatus) GetWaitSeconds() int32 {
	if x != nil && x.WaitSeconds != nil {
		return *x.WaitSeconds
	}
	return 0
}

func (x *CMsgConnectionStatus) GetEstimatedWaitSecondsRemaining() int32 {
	if x != nil && x.EstimatedWaitSecondsRemaining != nil {
		return *x.EstimatedWaitSecondsRemaining
	}
	return 0
}

type CWorkshop_PopulateItemDescriptions_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Appid     *uint32                                                                     `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	Languages []*CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock `protobuf:"bytes,2,rep,name=languages" json:"languages,omitempty"`
}

func (x *CWorkshop_PopulateItemDescriptions_Request) Reset() {
	*x = CWorkshop_PopulateItemDescriptions_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_csgo_gcsdk_gcmessages_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CWorkshop_PopulateItemDescriptions_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CWorkshop_PopulateItemDescriptions_Request) ProtoMessage() {}

func (x *CWorkshop_PopulateItemDescriptions_Request) ProtoReflect() protoreflect.Message {
	mi := &file_csgo_gcsdk_gcmessages_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CWorkshop_PopulateItemDescriptions_Request.ProtoReflect.Descriptor instead.
func (*CWorkshop_PopulateItemDescriptions_Request) Descriptor() ([]byte, []int) {
	return file_csgo_gcsdk_gcmessages_proto_rawDescGZIP(), []int{24}
}

func (x *CWorkshop_PopulateItemDescriptions_Request) GetAppid() uint32 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

func (x *CWorkshop_PopulateItemDescriptions_Request) GetLanguages() []*CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock {
	if x != nil {
		return x.Languages
	}
	return nil
}

type CWorkshop_GetContributors_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Appid      *uint32 `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	Gameitemid *uint32 `protobuf:"varint,2,opt,name=gameitemid" json:"gameitemid,omitempty"`
}

func (x *CWorkshop_GetContributors_Request) Reset() {
	*x = CWorkshop_GetContributors_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_csgo_gcsdk_gcmessages_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CWorkshop_GetContributors_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CWorkshop_GetContributors_Request) ProtoMessage() {}

func (x *CWorkshop_GetContributors_Request) ProtoReflect() protoreflect.Message {
	mi := &file_csgo_gcsdk_gcmessages_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CWorkshop_GetContributors_Request.ProtoReflect.Descriptor instead.
func (*CWorkshop_GetContributors_Request) Descriptor() ([]byte, []int) {
	return file_csgo_gcsdk_gcmessages_proto_rawDescGZIP(), []int{25}
}

func (x *CWorkshop_GetContributors_Request) GetAppid() uint32 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

func (x *CWorkshop_GetContributors_Request) GetGameitemid() uint32 {
	if x != nil && x.Gameitemid != nil {
		return *x.Gameitemid
	}
	return 0
}

type CWorkshop_GetContributors_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Contributors []uint64 `protobuf:"fixed64,1,rep,name=contributors" json:"contributors,omitempty"`
}

func (x *CWorkshop_GetContributors_Response) Reset() {
	*x = CWorkshop_GetContributors_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_csgo_gcsdk_gcmessages_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CWorkshop_GetContributors_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CWorkshop_GetContributors_Response) ProtoMessage() {}

func (x *CWorkshop_GetContributors_Response) ProtoReflect() protoreflect.Message {
	mi := &file_csgo_gcsdk_gcmessages_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CWorkshop_GetContributors_Response.ProtoReflect.Descriptor instead.
func (*CWorkshop_GetContributors_Response) Descriptor() ([]byte, []int) {
	return file_csgo_gcsdk_gcmessages_proto_rawDescGZIP(), []int{26}
}

func (x *CWorkshop_GetContributors_Response) GetContributors() []uint64 {
	if x != nil {
		return x.Contributors
	}
	return nil
}

type CWorkshop_SetItemPaymentRules_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Appid                   *uint32                                                          `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	Gameitemid              *uint32                                                          `protobuf:"varint,2,opt,name=gameitemid" json:"gameitemid,omitempty"`
	AssociatedWorkshopFiles []*CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule `protobuf:"bytes,3,rep,name=associated_workshop_files,json=associatedWorkshopFiles" json:"associated_workshop_files,omitempty"`
	PartnerAccounts         []*CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule  `protobuf:"bytes,4,rep,name=partner_accounts,json=partnerAccounts" json:"partner_accounts,omitempty"`
}

func (x *CWorkshop_SetItemPaymentRules_Request) Reset() {
	*x = CWorkshop_SetItemPaymentRules_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_csgo_gcsdk_gcmessages_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CWorkshop_SetItemPaymentRules_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CWorkshop_SetItemPaymentRules_Request) ProtoMessage() {}

func (x *CWorkshop_SetItemPaymentRules_Request) ProtoReflect() protoreflect.Message {
	mi := &file_csgo_gcsdk_gcmessages_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CWorkshop_SetItemPaymentRules_Request.ProtoReflect.Descriptor instead.
func (*CWorkshop_SetItemPaymentRules_Request) Descriptor() ([]byte, []int) {
	return file_csgo_gcsdk_gcmessages_proto_rawDescGZIP(), []int{27}
}

func (x *CWorkshop_SetItemPaymentRules_Request) GetAppid() uint32 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

func (x *CWorkshop_SetItemPaymentRules_Request) GetGameitemid() uint32 {
	if x != nil && x.Gameitemid != nil {
		return *x.Gameitemid
	}
	return 0
}

func (x *CWorkshop_SetItemPaymentRules_Request) GetAssociatedWorkshopFiles() []*CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule {
	if x != nil {
		return x.AssociatedWorkshopFiles
	}
	return nil
}

func (x *CWorkshop_SetItemPaymentRules_Request) GetPartnerAccounts() []*CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule {
	if x != nil {
		return x.PartnerAccounts
	}
	return nil
}

type CWorkshop_SetItemPaymentRules_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CWorkshop_SetItemPaymentRules_Response) Reset() {
	*x = CWorkshop_SetItemPaymentRules_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_csgo_gcsdk_gcmessages_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CWorkshop_SetItemPaymentRules_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CWorkshop_SetItemPaymentRules_Response) ProtoMessage() {}

func (x *CWorkshop_SetItemPaymentRules_Response) ProtoReflect() protoreflect.Message {
	mi := &file_csgo_gcsdk_gcmessages_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CWorkshop_SetItemPaymentRules_Response.ProtoReflect.Descriptor instead.
func (*CWorkshop_SetItemPaymentRules_Response) Descriptor() ([]byte, []int) {
	return file_csgo_gcsdk_gcmessages_proto_rawDescGZIP(), []int{28}
}

type CGameServers_AggregationQuery_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filter      *string  `protobuf:"bytes,1,opt,name=filter" json:"filter,omitempty"`
	GroupFields []string `protobuf:"bytes,3,rep,name=group_fields,json=groupFields" json:"group_fields,omitempty"`
}

func (x *CGameServers_AggregationQuery_Request) Reset() {
	*x = CGameServers_AggregationQuery_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_csgo_gcsdk_gcmessages_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CGameServers_AggregationQuery_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CGameServers_AggregationQuery_Request) ProtoMessage() {}

func (x *CGameServers_AggregationQuery_Request) ProtoReflect() protoreflect.Message {
	mi := &file_csgo_gcsdk_gcmessages_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CGameServers_AggregationQuery_Request.ProtoReflect.Descriptor instead.
func (*CGameServers_AggregationQuery_Request) Descriptor() ([]byte, []int) {
	return file_csgo_gcsdk_gcmessages_proto_rawDescGZIP(), []int{29}
}

func (x *CGameServers_AggregationQuery_Request) GetFilter() string {
	if x != nil && x.Filter != nil {
		return *x.Filter
	}
	return ""
}

func (x *CGameServers_AggregationQuery_Request) GetGroupFields() []string {
	if x != nil {
		return x.GroupFields
	}
	return nil
}

type CGameServers_AggregationQuery_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Groups []*CGameServers_AggregationQuery_Response_Group `protobuf:"bytes,1,rep,name=groups" json:"groups,omitempty"`
}

func (x *CGameServers_AggregationQuery_Response) Reset() {
	*x = CGameServers_AggregationQuery_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_csgo_gcsdk_gcmessages_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CGameServers_AggregationQuery_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CGameServers_AggregationQuery_Response) ProtoMessage() {}

func (x *CGameServers_AggregationQuery_Response) ProtoReflect() protoreflect.Message {
	mi := &file_csgo_gcsdk_gcmessages_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CGameServers_AggregationQuery_Response.ProtoReflect.Descriptor instead.
func (*CGameServers_AggregationQuery_Response) Descriptor() ([]byte, []int) {
	return file_csgo_gcsdk_gcmessages_proto_rawDescGZIP(), []int{30}
}

func (x *CGameServers_AggregationQuery_Response) GetGroups() []*CGameServers_AggregationQuery_Response_Group {
	if x != nil {
		return x.Groups
	}
	return nil
}

type CWorkshop_AddSpecialPayment_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Appid         *uint32 `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	Gameitemid    *uint32 `protobuf:"varint,2,opt,name=gameitemid" json:"gameitemid,omitempty"`
	Date          *string `protobuf:"bytes,3,opt,name=date" json:"date,omitempty"`
	PaymentUsUsd  *uint64 `protobuf:"varint,4,opt,name=payment_us_usd,json=paymentUsUsd" json:"payment_us_usd,omitempty"`
	PaymentRowUsd *uint64 `protobuf:"varint,5,opt,name=payment_row_usd,json=paymentRowUsd" json:"payment_row_usd,omitempty"`
}

func (x *CWorkshop_AddSpecialPayment_Request) Reset() {
	*x = CWorkshop_AddSpecialPayment_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_csgo_gcsdk_gcmessages_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CWorkshop_AddSpecialPayment_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CWorkshop_AddSpecialPayment_Request) ProtoMessage() {}

func (x *CWorkshop_AddSpecialPayment_Request) ProtoReflect() protoreflect.Message {
	mi := &file_csgo_gcsdk_gcmessages_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CWorkshop_AddSpecialPayment_Request.ProtoReflect.Descriptor instead.
func (*CWorkshop_AddSpecialPayment_Request) Descriptor() ([]byte, []int) {
	return file_csgo_gcsdk_gcmessages_proto_rawDescGZIP(), []int{31}
}

func (x *CWorkshop_AddSpecialPayment_Request) GetAppid() uint32 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

func (x *CWorkshop_AddSpecialPayment_Request) GetGameitemid() uint32 {
	if x != nil && x.Gameitemid != nil {
		return *x.Gameitemid
	}
	return 0
}

func (x *CWorkshop_AddSpecialPayment_Request) GetDate() string {
	if x != nil && x.Date != nil {
		return *x.Date
	}
	return ""
}

func (x *CWorkshop_AddSpecialPayment_Request) GetPaymentUsUsd() uint64 {
	if x != nil && x.PaymentUsUsd != nil {
		return *x.PaymentUsUsd
	}
	return 0
}

func (x *CWorkshop_AddSpecialPayment_Request) GetPaymentRowUsd() uint64 {
	if x != nil && x.PaymentRowUsd != nil {
		return *x.PaymentRowUsd
	}
	return 0
}

type CWorkshop_AddSpecialPayment_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CWorkshop_AddSpecialPayment_Response) Reset() {
	*x = CWorkshop_AddSpecialPayment_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_csgo_gcsdk_gcmessages_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CWorkshop_AddSpecialPayment_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CWorkshop_AddSpecialPayment_Response) ProtoMessage() {}

func (x *CWorkshop_AddSpecialPayment_Response) ProtoReflect() protoreflect.Message {
	mi := &file_csgo_gcsdk_gcmessages_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CWorkshop_AddSpecialPayment_Response.ProtoReflect.Descriptor instead.
func (*CWorkshop_AddSpecialPayment_Response) Descriptor() ([]byte, []int) {
	return file_csgo_gcsdk_gcmessages_proto_rawDescGZIP(), []int{32}
}

type CMsgSOMultipleObjects_SingleObject struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TypeId     *int32 `protobuf:"varint,1,opt,name=type_id,json=typeId" json:"type_id,omitempty"`
	ObjectData []byte `protobuf:"bytes,2,opt,name=object_data,json=objectData" json:"object_data,omitempty"`
}

func (x *CMsgSOMultipleObjects_SingleObject) Reset() {
	*x = CMsgSOMultipleObjects_SingleObject{}
	if protoimpl.UnsafeEnabled {
		mi := &file_csgo_gcsdk_gcmessages_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgSOMultipleObjects_SingleObject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSOMultipleObjects_SingleObject) ProtoMessage() {}

func (x *CMsgSOMultipleObjects_SingleObject) ProtoReflect() protoreflect.Message {
	mi := &file_csgo_gcsdk_gcmessages_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSOMultipleObjects_SingleObject.ProtoReflect.Descriptor instead.
func (*CMsgSOMultipleObjects_SingleObject) Descriptor() ([]byte, []int) {
	return file_csgo_gcsdk_gcmessages_proto_rawDescGZIP(), []int{2, 0}
}

func (x *CMsgSOMultipleObjects_SingleObject) GetTypeId() int32 {
	if x != nil && x.TypeId != nil {
		return *x.TypeId
	}
	return 0
}

func (x *CMsgSOMultipleObjects_SingleObject) GetObjectData() []byte {
	if x != nil {
		return x.ObjectData
	}
	return nil
}

type CMsgSOCacheSubscribed_SubscribedType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TypeId     *int32   `protobuf:"varint,1,opt,name=type_id,json=typeId" json:"type_id,omitempty"`
	ObjectData [][]byte `protobuf:"bytes,2,rep,name=object_data,json=objectData" json:"object_data,omitempty"`
}

func (x *CMsgSOCacheSubscribed_SubscribedType) Reset() {
	*x = CMsgSOCacheSubscribed_SubscribedType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_csgo_gcsdk_gcmessages_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgSOCacheSubscribed_SubscribedType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSOCacheSubscribed_SubscribedType) ProtoMessage() {}

func (x *CMsgSOCacheSubscribed_SubscribedType) ProtoReflect() protoreflect.Message {
	mi := &file_csgo_gcsdk_gcmessages_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSOCacheSubscribed_SubscribedType.ProtoReflect.Descriptor instead.
func (*CMsgSOCacheSubscribed_SubscribedType) Descriptor() ([]byte, []int) {
	return file_csgo_gcsdk_gcmessages_proto_rawDescGZIP(), []int{3, 0}
}

func (x *CMsgSOCacheSubscribed_SubscribedType) GetTypeId() int32 {
	if x != nil && x.TypeId != nil {
		return *x.TypeId
	}
	return 0
}

func (x *CMsgSOCacheSubscribed_SubscribedType) GetObjectData() [][]byte {
	if x != nil {
		return x.ObjectData
	}
	return nil
}

type CMsgClientWelcome_Location struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Latitude  *float32 `protobuf:"fixed32,1,opt,name=latitude" json:"latitude,omitempty"`
	Longitude *float32 `protobuf:"fixed32,2,opt,name=longitude" json:"longitude,omitempty"`
	Country   *string  `protobuf:"bytes,3,opt,name=country" json:"country,omitempty"`
}

func (x *CMsgClientWelcome_Location) Reset() {
	*x = CMsgClientWelcome_Location{}
	if protoimpl.UnsafeEnabled {
		mi := &file_csgo_gcsdk_gcmessages_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientWelcome_Location) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientWelcome_Location) ProtoMessage() {}

func (x *CMsgClientWelcome_Location) ProtoReflect() protoreflect.Message {
	mi := &file_csgo_gcsdk_gcmessages_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientWelcome_Location.ProtoReflect.Descriptor instead.
func (*CMsgClientWelcome_Location) Descriptor() ([]byte, []int) {
	return file_csgo_gcsdk_gcmessages_proto_rawDescGZIP(), []int{22, 0}
}

func (x *CMsgClientWelcome_Location) GetLatitude() float32 {
	if x != nil && x.Latitude != nil {
		return *x.Latitude
	}
	return 0
}

func (x *CMsgClientWelcome_Location) GetLongitude() float32 {
	if x != nil && x.Longitude != nil {
		return *x.Longitude
	}
	return 0
}

func (x *CMsgClientWelcome_Location) GetCountry() string {
	if x != nil && x.Country != nil {
		return *x.Country
	}
	return ""
}

type CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Gameitemid      *uint32 `protobuf:"varint,1,opt,name=gameitemid" json:"gameitemid,omitempty"`
	ItemDescription *string `protobuf:"bytes,2,opt,name=item_description,json=itemDescription" json:"item_description,omitempty"`
	OnePerAccount   *bool   `protobuf:"varint,3,opt,name=one_per_account,json=onePerAccount" json:"one_per_account,omitempty"`
}

func (x *CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription) Reset() {
	*x = CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription{}
	if protoimpl.UnsafeEnabled {
		mi := &file_csgo_gcsdk_gcmessages_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription) ProtoMessage() {}

func (x *CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription) ProtoReflect() protoreflect.Message {
	mi := &file_csgo_gcsdk_gcmessages_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription.ProtoReflect.Descriptor instead.
func (*CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription) Descriptor() ([]byte, []int) {
	return file_csgo_gcsdk_gcmessages_proto_rawDescGZIP(), []int{24, 0}
}

func (x *CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription) GetGameitemid() uint32 {
	if x != nil && x.Gameitemid != nil {
		return *x.Gameitemid
	}
	return 0
}

func (x *CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription) GetItemDescription() string {
	if x != nil && x.ItemDescription != nil {
		return *x.ItemDescription
	}
	return ""
}

func (x *CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription) GetOnePerAccount() bool {
	if x != nil && x.OnePerAccount != nil {
		return *x.OnePerAccount
	}
	return false
}

type CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Language     *string                                                             `protobuf:"bytes,1,opt,name=language" json:"language,omitempty"`
	Descriptions []*CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription `protobuf:"bytes,2,rep,name=descriptions" json:"descriptions,omitempty"`
}

func (x *CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock) Reset() {
	*x = CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock{}
	if protoimpl.UnsafeEnabled {
		mi := &file_csgo_gcsdk_gcmessages_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock) ProtoMessage() {}

func (x *CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock) ProtoReflect() protoreflect.Message {
	mi := &file_csgo_gcsdk_gcmessages_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock.ProtoReflect.Descriptor instead.
func (*CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock) Descriptor() ([]byte, []int) {
	return file_csgo_gcsdk_gcmessages_proto_rawDescGZIP(), []int{24, 1}
}

func (x *CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock) GetLanguage() string {
	if x != nil && x.Language != nil {
		return *x.Language
	}
	return ""
}

func (x *CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock) GetDescriptions() []*CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription {
	if x != nil {
		return x.Descriptions
	}
	return nil
}

type CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkshopFileId    *uint64  `protobuf:"varint,1,opt,name=workshop_file_id,json=workshopFileId" json:"workshop_file_id,omitempty"`
	RevenuePercentage *float32 `protobuf:"fixed32,2,opt,name=revenue_percentage,json=revenuePercentage" json:"revenue_percentage,omitempty"`
	RuleDescription   *string  `protobuf:"bytes,3,opt,name=rule_description,json=ruleDescription" json:"rule_description,omitempty"`
	RuleType          *uint32  `protobuf:"varint,4,opt,name=rule_type,json=ruleType,def=1" json:"rule_type,omitempty"`
}

// Default values for CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule fields.
const (
	Default_CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule_RuleType = uint32(1)
)

func (x *CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule) Reset() {
	*x = CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_csgo_gcsdk_gcmessages_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule) ProtoMessage() {}

func (x *CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule) ProtoReflect() protoreflect.Message {
	mi := &file_csgo_gcsdk_gcmessages_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule.ProtoReflect.Descriptor instead.
func (*CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule) Descriptor() ([]byte, []int) {
	return file_csgo_gcsdk_gcmessages_proto_rawDescGZIP(), []int{27, 0}
}

func (x *CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule) GetWorkshopFileId() uint64 {
	if x != nil && x.WorkshopFileId != nil {
		return *x.WorkshopFileId
	}
	return 0
}

func (x *CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule) GetRevenuePercentage() float32 {
	if x != nil && x.RevenuePercentage != nil {
		return *x.RevenuePercentage
	}
	return 0
}

func (x *CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule) GetRuleDescription() string {
	if x != nil && x.RuleDescription != nil {
		return *x.RuleDescription
	}
	return ""
}

func (x *CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule) GetRuleType() uint32 {
	if x != nil && x.RuleType != nil {
		return *x.RuleType
	}
	return Default_CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule_RuleType
}

type CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId         *uint32  `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	RevenuePercentage *float32 `protobuf:"fixed32,2,opt,name=revenue_percentage,json=revenuePercentage" json:"revenue_percentage,omitempty"`
	RuleDescription   *string  `protobuf:"bytes,3,opt,name=rule_description,json=ruleDescription" json:"rule_description,omitempty"`
}

func (x *CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule) Reset() {
	*x = CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_csgo_gcsdk_gcmessages_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule) ProtoMessage() {}

func (x *CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule) ProtoReflect() protoreflect.Message {
	mi := &file_csgo_gcsdk_gcmessages_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule.ProtoReflect.Descriptor instead.
func (*CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule) Descriptor() ([]byte, []int) {
	return file_csgo_gcsdk_gcmessages_proto_rawDescGZIP(), []int{27, 1}
}

func (x *CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule) GetAccountId() uint32 {
	if x != nil && x.AccountId != nil {
		return *x.AccountId
	}
	return 0
}

func (x *CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule) GetRevenuePercentage() float32 {
	if x != nil && x.RevenuePercentage != nil {
		return *x.RevenuePercentage
	}
	return 0
}

func (x *CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule) GetRuleDescription() string {
	if x != nil && x.RuleDescription != nil {
		return *x.RuleDescription
	}
	return ""
}

type CGameServers_AggregationQuery_Response_Group struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupValues    []string `protobuf:"bytes,1,rep,name=group_values,json=groupValues" json:"group_values,omitempty"`
	ServersEmpty   *uint32  `protobuf:"varint,2,opt,name=servers_empty,json=serversEmpty" json:"servers_empty,omitempty"`
	ServersFull    *uint32  `protobuf:"varint,3,opt,name=servers_full,json=serversFull" json:"servers_full,omitempty"`
	ServersTotal   *uint32  `protobuf:"varint,4,opt,name=servers_total,json=serversTotal" json:"servers_total,omitempty"`
	PlayersHumans  *uint32  `protobuf:"varint,5,opt,name=players_humans,json=playersHumans" json:"players_humans,omitempty"`
	PlayersBots    *uint32  `protobuf:"varint,6,opt,name=players_bots,json=playersBots" json:"players_bots,omitempty"`
	PlayerCapacity *uint32  `protobuf:"varint,7,opt,name=player_capacity,json=playerCapacity" json:"player_capacity,omitempty"`
}

func (x *CGameServers_AggregationQuery_Response_Group) Reset() {
	*x = CGameServers_AggregationQuery_Response_Group{}
	if protoimpl.UnsafeEnabled {
		mi := &file_csgo_gcsdk_gcmessages_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CGameServers_AggregationQuery_Response_Group) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CGameServers_AggregationQuery_Response_Group) ProtoMessage() {}

func (x *CGameServers_AggregationQuery_Response_Group) ProtoReflect() protoreflect.Message {
	mi := &file_csgo_gcsdk_gcmessages_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CGameServers_AggregationQuery_Response_Group.ProtoReflect.Descriptor instead.
func (*CGameServers_AggregationQuery_Response_Group) Descriptor() ([]byte, []int) {
	return file_csgo_gcsdk_gcmessages_proto_rawDescGZIP(), []int{30, 0}
}

func (x *CGameServers_AggregationQuery_Response_Group) GetGroupValues() []string {
	if x != nil {
		return x.GroupValues
	}
	return nil
}

func (x *CGameServers_AggregationQuery_Response_Group) GetServersEmpty() uint32 {
	if x != nil && x.ServersEmpty != nil {
		return *x.ServersEmpty
	}
	return 0
}

func (x *CGameServers_AggregationQuery_Response_Group) GetServersFull() uint32 {
	if x != nil && x.ServersFull != nil {
		return *x.ServersFull
	}
	return 0
}

func (x *CGameServers_AggregationQuery_Response_Group) GetServersTotal() uint32 {
	if x != nil && x.ServersTotal != nil {
		return *x.ServersTotal
	}
	return 0
}

func (x *CGameServers_AggregationQuery_Response_Group) GetPlayersHumans() uint32 {
	if x != nil && x.PlayersHumans != nil {
		return *x.PlayersHumans
	}
	return 0
}

func (x *CGameServers_AggregationQuery_Response_Group) GetPlayersBots() uint32 {
	if x != nil && x.PlayersBots != nil {
		return *x.PlayersBots
	}
	return 0
}

func (x *CGameServers_AggregationQuery_Response_Group) GetPlayerCapacity() uint32 {
	if x != nil && x.PlayerCapacity != nil {
		return *x.PlayerCapacity
	}
	return 0
}

var File_csgo_gcsdk_gcmessages_proto protoreflect.FileDescriptor

var file_csgo_gcsdk_gcmessages_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x63, 0x73, 0x67, 0x6f, 0x2f, 0x67, 0x63, 0x73, 0x64, 0x6b, 0x5f, 0x67, 0x63, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x63,
	0x73, 0x67, 0x6f, 0x1a, 0x18, 0x63, 0x73, 0x67, 0x6f, 0x2f, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x33, 0x0a,
	0x0d, 0x43, 0x4d, 0x73, 0x67, 0x53, 0x4f, 0x49, 0x44, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02,
	0x69, 0x64, 0x22, 0x9c, 0x01, 0x0a, 0x12, 0x43, 0x4d, 0x73, 0x67, 0x53, 0x4f, 0x53, 0x69, 0x6e,
	0x67, 0x6c, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x79, 0x70,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x74, 0x79, 0x70, 0x65,
	0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x06, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x32, 0x0a,
	0x0a, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x73, 0x6f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x63, 0x73, 0x67, 0x6f, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x53, 0x4f, 0x49,
	0x44, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x52, 0x09, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x53, 0x6f, 0x69,
	0x64, 0x22, 0x90, 0x02, 0x0a, 0x15, 0x43, 0x4d, 0x73, 0x67, 0x53, 0x4f, 0x4d, 0x75, 0x6c, 0x74,
	0x69, 0x70, 0x6c, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x12, 0x53, 0x0a, 0x10, 0x6f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x63, 0x73, 0x67, 0x6f, 0x2e, 0x43, 0x4d, 0x73,
	0x67, 0x53, 0x4f, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x73, 0x2e, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52,
	0x0f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x06, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x32, 0x0a, 0x0a, 0x6f, 0x77,
	0x6e, 0x65, 0x72, 0x5f, 0x73, 0x6f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x63, 0x73, 0x67, 0x6f, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x53, 0x4f, 0x49, 0x44, 0x4f, 0x77,
	0x6e, 0x65, 0x72, 0x52, 0x09, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x53, 0x6f, 0x69, 0x64, 0x1a, 0x54,
	0x0a, 0x0c, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x17,
	0x0a, 0x07, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x74, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x6f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x3a, 0x0a, 0x80, 0xa6, 0x1d, 0x80, 0x02, 0x88,
	0xa6, 0x1d, 0x80, 0x08, 0x22, 0xf7, 0x01, 0x0a, 0x15, 0x43, 0x4d, 0x73, 0x67, 0x53, 0x4f, 0x43,
	0x61, 0x63, 0x68, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x64, 0x12, 0x44,
	0x0a, 0x07, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2a, 0x2e, 0x63, 0x73, 0x67, 0x6f, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x53, 0x4f, 0x43, 0x61, 0x63,
	0x68, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x64, 0x2e, 0x53, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x64, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x6f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x06, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x32,
	0x0a, 0x0a, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x73, 0x6f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63, 0x73, 0x67, 0x6f, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x53, 0x4f,
	0x49, 0x44, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x52, 0x09, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x53, 0x6f,
	0x69, 0x64, 0x1a, 0x4a, 0x0a, 0x0e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x64,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x74, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a,
	0x0b, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0c, 0x52, 0x0a, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x22, 0x4d,
	0x0a, 0x17, 0x43, 0x4d, 0x73, 0x67, 0x53, 0x4f, 0x43, 0x61, 0x63, 0x68, 0x65, 0x55, 0x6e, 0x73,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x64, 0x12, 0x32, 0x0a, 0x0a, 0x6f, 0x77, 0x6e,
	0x65, 0x72, 0x5f, 0x73, 0x6f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x63, 0x73, 0x67, 0x6f, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x53, 0x4f, 0x49, 0x44, 0x4f, 0x77, 0x6e,
	0x65, 0x72, 0x52, 0x09, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x53, 0x6f, 0x69, 0x64, 0x22, 0x6c, 0x0a,
	0x1c, 0x43, 0x4d, 0x73, 0x67, 0x53, 0x4f, 0x43, 0x61, 0x63, 0x68, 0x65, 0x53, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x12, 0x18, 0x0a,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x06, 0x52, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x32, 0x0a, 0x0a, 0x6f, 0x77, 0x6e, 0x65, 0x72,
	0x5f, 0x73, 0x6f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63, 0x73,
	0x67, 0x6f, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x53, 0x4f, 0x49, 0x44, 0x4f, 0x77, 0x6e, 0x65, 0x72,
	0x52, 0x09, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x53, 0x6f, 0x69, 0x64, 0x22, 0x54, 0x0a, 0x1e, 0x43,
	0x4d, 0x73, 0x67, 0x53, 0x4f, 0x43, 0x61, 0x63, 0x68, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x12, 0x32, 0x0a,
	0x0a, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x73, 0x6f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x63, 0x73, 0x67, 0x6f, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x53, 0x4f, 0x49,
	0x44, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x52, 0x09, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x53, 0x6f, 0x69,
	0x64, 0x22, 0x2e, 0x0a, 0x12, 0x43, 0x4d, 0x73, 0x67, 0x53, 0x4f, 0x43, 0x61, 0x63, 0x68, 0x65,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x06, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x22, 0x9c, 0x05, 0x0a, 0x12, 0x43, 0x4d, 0x73, 0x67, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x12, 0x21,
	0x0a, 0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x70, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x70, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x70, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x5f, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74,
	0x6f, 0x72, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x76, 0x61, 0x63, 0x5f, 0x62, 0x61, 0x6e, 0x6e, 0x65,
	0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x76, 0x61, 0x63, 0x42, 0x61, 0x6e, 0x6e,
	0x65, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x79, 0x62, 0x65, 0x72, 0x5f, 0x63, 0x61, 0x66, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x63, 0x79, 0x62, 0x65, 0x72, 0x43, 0x61, 0x66,
	0x65, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x5f, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x73, 0x63, 0x68, 0x6f, 0x6f,
	0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x66, 0x72, 0x65, 0x65,
	0x5f, 0x74, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x66, 0x72, 0x65, 0x65, 0x54, 0x72, 0x69, 0x61, 0x6c, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x73, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6c, 0x6f, 0x77, 0x5f, 0x76, 0x69,
	0x6f, 0x6c, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x6c, 0x6f,
	0x77, 0x56, 0x69, 0x6f, 0x6c, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x65, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x72, 0x75, 0x73, 0x74, 0x65, 0x64, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x74, 0x72, 0x75, 0x73, 0x74, 0x65, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07,
	0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x69, 0x6d, 0x65, 0x5f,
	0x63, 0x61, 0x63, 0x68, 0x65, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x07, 0x52, 0x0a, 0x74, 0x69,
	0x6d, 0x65, 0x43, 0x61, 0x63, 0x68, 0x65, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x5f, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x12,
	0x29, 0x0a, 0x10, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x5f, 0x62, 0x61, 0x6e,
	0x6e, 0x65, 0x64, 0x18, 0x11, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x63, 0x6f, 0x6d, 0x6d, 0x75,
	0x6e, 0x69, 0x74, 0x79, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x72,
	0x61, 0x64, 0x65, 0x5f, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x18, 0x12, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0b, 0x74, 0x72, 0x61, 0x64, 0x65, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x12, 0x41, 0x0a,
	0x1d, 0x65, 0x6c, 0x69, 0x67, 0x69, 0x62, 0x6c, 0x65, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x63, 0x6f,
	0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x5f, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x18, 0x13,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x1a, 0x65, 0x6c, 0x69, 0x67, 0x69, 0x62, 0x6c, 0x65, 0x46, 0x6f,
	0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74,
	0x22, 0x86, 0x01, 0x0a, 0x16, 0x43, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x4d, 0x75, 0x6c, 0x74, 0x69,
	0x70, 0x6c, 0x65, 0x78, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x73, 0x67, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x6d, 0x73,
	0x67, 0x74, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x69, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x06, 0x52, 0x08, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x69, 0x64, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x72,
	0x65, 0x70, 0x6c, 0x79, 0x74, 0x6f, 0x67, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09,
	0x72, 0x65, 0x70, 0x6c, 0x79, 0x74, 0x6f, 0x67, 0x63, 0x22, 0x3b, 0x0a, 0x1f, 0x43, 0x4d, 0x73,
	0x67, 0x47, 0x43, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x78, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x73, 0x67, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x6d,
	0x73, 0x67, 0x74, 0x79, 0x70, 0x65, 0x22, 0x4b, 0x0a, 0x13, 0x43, 0x47, 0x43, 0x54, 0x6f, 0x47,
	0x43, 0x4d, 0x73, 0x67, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x41, 0x63, 0x6b, 0x12, 0x1b, 0x0a,
	0x09, 0x64, 0x69, 0x72, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x08, 0x64, 0x69, 0x72, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x17, 0x0a, 0x07, 0x67, 0x63,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x67, 0x63, 0x54,
	0x79, 0x70, 0x65, 0x22, 0x3b, 0x0a, 0x1c, 0x43, 0x47, 0x43, 0x54, 0x6f, 0x47, 0x43, 0x4d, 0x73,
	0x67, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x41, 0x63, 0x6b, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x07, 0x65, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x3a, 0x01, 0x32, 0x52, 0x07, 0x65, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x22, 0x21, 0x0a, 0x1f, 0x43, 0x47, 0x43, 0x54, 0x6f, 0x47, 0x43, 0x4d, 0x73, 0x67, 0x4d, 0x61,
	0x73, 0x74, 0x65, 0x72, 0x53, 0x74, 0x61, 0x72, 0x74, 0x75, 0x70, 0x43, 0x6f, 0x6d, 0x70, 0x6c,
	0x65, 0x74, 0x65, 0x22, 0x7b, 0x0a, 0x10, 0x43, 0x47, 0x43, 0x54, 0x6f, 0x47, 0x43, 0x4d, 0x73,
	0x67, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x73, 0x67, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x6d, 0x73, 0x67, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x06, 0x52, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x1f, 0x0a, 0x0b, 0x6e, 0x65, 0x74, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x6e, 0x65, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x70,
	0x22, 0x53, 0x0a, 0x15, 0x43, 0x47, 0x43, 0x54, 0x6f, 0x47, 0x43, 0x4d, 0x73, 0x67, 0x52, 0x6f,
	0x75, 0x74, 0x65, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x73, 0x67,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x6d, 0x73, 0x67,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x65, 0x74, 0x5f, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x6e, 0x65, 0x74, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x41, 0x0a, 0x15, 0x43, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x50, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x06, 0x52,
	0x07, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x69, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x07, 0x52, 0x02, 0x69, 0x70, 0x22, 0x32, 0x0a, 0x16, 0x43, 0x4d, 0x73, 0x67,
	0x47, 0x43, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x49, 0x50, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x06, 0x52, 0x07, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x69, 0x64, 0x22, 0x30, 0x0a, 0x1e,
	0x43, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x49, 0x50, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x07, 0x52, 0x02, 0x69, 0x70, 0x22, 0x5b,
	0x0a, 0x16, 0x43, 0x4d, 0x73, 0x67, 0x53, 0x4f, 0x43, 0x61, 0x63, 0x68, 0x65, 0x48, 0x61, 0x76,
	0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x27, 0x0a, 0x04, 0x73, 0x6f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63, 0x73, 0x67, 0x6f, 0x2e, 0x43, 0x4d,
	0x73, 0x67, 0x53, 0x4f, 0x49, 0x44, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x52, 0x04, 0x73, 0x6f, 0x69,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x06, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x92, 0x03, 0x0a, 0x0f,
	0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x12,
	0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x50, 0x0a, 0x15, 0x73, 0x6f, 0x63,
	0x61, 0x63, 0x68, 0x65, 0x5f, 0x68, 0x61, 0x76, 0x65, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x63, 0x73, 0x67, 0x6f, 0x2e,
	0x43, 0x4d, 0x73, 0x67, 0x53, 0x4f, 0x43, 0x61, 0x63, 0x68, 0x65, 0x48, 0x61, 0x76, 0x65, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x13, 0x73, 0x6f, 0x63, 0x61, 0x63, 0x68, 0x65, 0x48,
	0x61, 0x76, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2e, 0x0a, 0x13, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x65,
	0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4e, 0x65, 0x65, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x6c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x65, 0x72, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4c, 0x61, 0x75, 0x6e,
	0x63, 0x68, 0x65, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x5f,
	0x73, 0x72, 0x63, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x70, 0x61, 0x72,
	0x74, 0x6e, 0x65, 0x72, 0x53, 0x72, 0x63, 0x69, 0x64, 0x12, 0x2b, 0x0a, 0x11, 0x70, 0x61, 0x72,
	0x74, 0x6e, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x69, 0x64, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x69, 0x64, 0x12, 0x31, 0x0a, 0x14, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65,
	0x72, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x13, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x12, 0x35, 0x0a, 0x16, 0x70, 0x61, 0x72,
	0x74, 0x6e, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x62, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x15, 0x70, 0x61, 0x72, 0x74, 0x6e,
	0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x22, 0x8c, 0x03, 0x0a, 0x0f, 0x43, 0x4d, 0x73, 0x67, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x48,
	0x65, 0x6c, 0x6c, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x50,
	0x0a, 0x15, 0x73, 0x6f, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x68, 0x61, 0x76, 0x65, 0x5f, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x63, 0x73, 0x67, 0x6f, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x53, 0x4f, 0x43, 0x61, 0x63, 0x68, 0x65,
	0x48, 0x61, 0x76, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x13, 0x73, 0x6f, 0x63,
	0x61, 0x63, 0x68, 0x65, 0x48, 0x61, 0x76, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x3b, 0x0a, 0x1a, 0x6c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x5f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x65, 0x65, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x17, 0x6c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4e, 0x65, 0x65, 0x64, 0x12, 0x27, 0x0a,
	0x0f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x6c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x65, 0x72,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4c, 0x61,
	0x75, 0x6e, 0x63, 0x68, 0x65, 0x72, 0x12, 0x40, 0x0a, 0x1c, 0x6c, 0x65, 0x67, 0x61, 0x63, 0x79,
	0x5f, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x64, 0x61, 0x74, 0x61, 0x67, 0x72, 0x61, 0x6d, 0x5f, 0x72,
	0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x1a, 0x6c, 0x65,
	0x67, 0x61, 0x63, 0x79, 0x53, 0x74, 0x65, 0x61, 0x6d, 0x64, 0x61, 0x74, 0x61, 0x67, 0x72, 0x61,
	0x6d, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x34, 0x0a, 0x16, 0x72, 0x65, 0x71, 0x75,
	0x69, 0x72, 0x65, 0x64, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x61, 0x64,
	0x64, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x14, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72,
	0x65, 0x64, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x12, 0x2f,
	0x0a, 0x13, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x64, 0x61, 0x74, 0x61, 0x67, 0x72, 0x61, 0x6d, 0x5f,
	0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x12, 0x73, 0x74, 0x65,
	0x61, 0x6d, 0x64, 0x61, 0x74, 0x61, 0x67, 0x72, 0x61, 0x6d, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x22,
	0x88, 0x05, 0x0a, 0x11, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x57, 0x65,
	0x6c, 0x63, 0x6f, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x1b, 0x0a, 0x09, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x5b, 0x0a, 0x1b,
	0x6f, 0x75, 0x74, 0x6f, 0x66, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x64, 0x5f, 0x63, 0x61, 0x63, 0x68, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x63, 0x73, 0x67, 0x6f, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x53, 0x4f, 0x43,
	0x61, 0x63, 0x68, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x64, 0x52, 0x19,
	0x6f, 0x75, 0x74, 0x6f, 0x66, 0x64, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x64, 0x43, 0x61, 0x63, 0x68, 0x65, 0x73, 0x12, 0x60, 0x0a, 0x1a, 0x75, 0x70, 0x74,
	0x6f, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x64,
	0x5f, 0x63, 0x61, 0x63, 0x68, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e,
	0x63, 0x73, 0x67, 0x6f, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x53, 0x4f, 0x43, 0x61, 0x63, 0x68, 0x65,
	0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x52, 0x18, 0x75, 0x70, 0x74, 0x6f, 0x64, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x64, 0x43, 0x61, 0x63, 0x68, 0x65, 0x73, 0x12, 0x3c, 0x0a, 0x08, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x63, 0x73, 0x67, 0x6f, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x57,
	0x65, 0x6c, 0x63, 0x6f, 0x6d, 0x65, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x61, 0x6d,
	0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x32, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x67,
	0x61, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x32, 0x12, 0x3f, 0x0a, 0x1c, 0x72, 0x74, 0x69, 0x6d,
	0x65, 0x33, 0x32, 0x5f, 0x67, 0x63, 0x5f, 0x77, 0x65, 0x6c, 0x63, 0x6f, 0x6d, 0x65, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x19,
	0x72, 0x74, 0x69, 0x6d, 0x65, 0x33, 0x32, 0x47, 0x63, 0x57, 0x65, 0x6c, 0x63, 0x6f, 0x6d, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12,
	0x1f, 0x0a, 0x0b, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x55, 0x72, 0x6c,
	0x12, 0x28, 0x0a, 0x10, 0x74, 0x78, 0x6e, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x5f,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x74, 0x78, 0x6e, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x1a, 0x5e, 0x0a, 0x08, 0x4c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75,
	0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x22, 0xcb, 0x02, 0x0a, 0x14, 0x43,
	0x4d, 0x73, 0x67, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x51, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x63, 0x73, 0x67, 0x6f, 0x2e, 0x47, 0x43, 0x43, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x3a, 0x1f, 0x47,
	0x43, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x5f, 0x48, 0x41, 0x56, 0x45, 0x5f, 0x53, 0x45, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2e, 0x0a, 0x13, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x5f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x65, 0x65, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x11, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x4e, 0x65, 0x65, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x71, 0x75, 0x65, 0x75, 0x65, 0x5f,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d,
	0x71, 0x75, 0x65, 0x75, 0x65, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a,
	0x0a, 0x71, 0x75, 0x65, 0x75, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x71, 0x75, 0x65, 0x75, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x21, 0x0a, 0x0c,
	0x77, 0x61, 0x69, 0x74, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0b, 0x77, 0x61, 0x69, 0x74, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x12,
	0x47, 0x0a, 0x20, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x77, 0x61, 0x69,
	0x74, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x5f, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e,
	0x69, 0x6e, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x1d, 0x65, 0x73, 0x74, 0x69, 0x6d,
	0x61, 0x74, 0x65, 0x64, 0x57, 0x61, 0x69, 0x74, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x52,
	0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x22, 0xe7, 0x03, 0x0a, 0x2a, 0x43, 0x57, 0x6f,
	0x72, 0x6b, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x50, 0x6f, 0x70, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x49,
	0x74, 0x65, 0x6d, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x61, 0x70, 0x70, 0x69, 0x64, 0x12, 0x6c, 0x0a,
	0x09, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x4e, 0x2e, 0x63, 0x73, 0x67, 0x6f, 0x2e, 0x43, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x68, 0x6f,
	0x70, 0x5f, 0x50, 0x6f, 0x70, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x52, 0x09, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x73, 0x1a, 0x8a, 0x01, 0x0a, 0x15,
	0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x67, 0x61, 0x6d, 0x65, 0x69, 0x74, 0x65,
	0x6d, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x67, 0x61, 0x6d, 0x65, 0x69,
	0x74, 0x65, 0x6d, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x69, 0x74, 0x65, 0x6d, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x26, 0x0a, 0x0f, 0x6f, 0x6e, 0x65, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x6f, 0x6e, 0x65, 0x50, 0x65,
	0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x1a, 0xa7, 0x01, 0x0a, 0x1d, 0x49, 0x74, 0x65,
	0x6d, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x4c, 0x61, 0x6e,
	0x67, 0x75, 0x61, 0x67, 0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61,
	0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61,
	0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x6a, 0x0a, 0x0c, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x46, 0x2e, 0x63,
	0x73, 0x67, 0x6f, 0x2e, 0x43, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x50, 0x6f,
	0x70, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x53,
	0x69, 0x6e, 0x67, 0x6c, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x22, 0x59, 0x0a, 0x21, 0x43, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x68, 0x6f, 0x70, 0x5f,
	0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x73, 0x5f,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x61, 0x70, 0x70, 0x69, 0x64, 0x12, 0x1e, 0x0a,
	0x0a, 0x67, 0x61, 0x6d, 0x65, 0x69, 0x74, 0x65, 0x6d, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0a, 0x67, 0x61, 0x6d, 0x65, 0x69, 0x74, 0x65, 0x6d, 0x69, 0x64, 0x22, 0x48, 0x0a,
	0x22, 0x43, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x47, 0x65, 0x74, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x73, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x6f, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x06, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x73, 0x22, 0xa1, 0x05, 0x0a, 0x25, 0x43, 0x57, 0x6f, 0x72,
	0x6b, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x53, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x50, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x05, 0x61, 0x70, 0x70, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x67, 0x61, 0x6d, 0x65, 0x69,
	0x74, 0x65, 0x6d, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x67, 0x61, 0x6d,
	0x65, 0x69, 0x74, 0x65, 0x6d, 0x69, 0x64, 0x12, 0x7f, 0x0a, 0x19, 0x61, 0x73, 0x73, 0x6f, 0x63,
	0x69, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x66,
	0x69, 0x6c, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x43, 0x2e, 0x63, 0x73, 0x67,
	0x6f, 0x2e, 0x43, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x53, 0x65, 0x74, 0x49,
	0x74, 0x65, 0x6d, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x5f,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x68, 0x6f, 0x70,
	0x49, 0x74, 0x65, 0x6d, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x52,
	0x17, 0x61, 0x73, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x74, 0x65, 0x64, 0x57, 0x6f, 0x72, 0x6b, 0x73,
	0x68, 0x6f, 0x70, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x6d, 0x0a, 0x10, 0x70, 0x61, 0x72, 0x74,
	0x6e, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x42, 0x2e, 0x63, 0x73, 0x67, 0x6f, 0x2e, 0x43, 0x57, 0x6f, 0x72, 0x6b, 0x73,
	0x68, 0x6f, 0x70, 0x5f, 0x53, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x50, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e,
	0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x50, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x0f, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x1a, 0xbd, 0x01, 0x0a, 0x17, 0x57, 0x6f, 0x72, 0x6b,
	0x73, 0x68, 0x6f, 0x70, 0x49, 0x74, 0x65, 0x6d, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x75, 0x6c, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x68, 0x6f, 0x70, 0x5f,
	0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x77,
	0x6f, 0x72, 0x6b, 0x73, 0x68, 0x6f, 0x70, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x2d, 0x0a,
	0x12, 0x72, 0x65, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x11, 0x72, 0x65, 0x76, 0x65, 0x6e,
	0x75, 0x65, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x12, 0x29, 0x0a, 0x10,
	0x72, 0x75, 0x6c, 0x65, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x72, 0x75, 0x6c, 0x65, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x09, 0x72, 0x75, 0x6c, 0x65, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x31, 0x52, 0x08, 0x72,
	0x75, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x1a, 0x91, 0x01, 0x0a, 0x16, 0x50, 0x61, 0x72, 0x74,
	0x6e, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x75,
	0x6c, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x2d, 0x0a, 0x12, 0x72, 0x65, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x5f, 0x70, 0x65, 0x72,
	0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x11, 0x72,
	0x65, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65,
	0x12, 0x29, 0x0a, 0x10, 0x72, 0x75, 0x6c, 0x65, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x72, 0x75, 0x6c, 0x65,
	0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x28, 0x0a, 0x26, 0x43,
	0x57, 0x6f, 0x72, 0x6b, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x53, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d,
	0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x5f, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x62, 0x0a, 0x25, 0x43, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x73, 0x5f, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x22, 0x81, 0x03, 0x0a, 0x26, 0x43, 0x47,
	0x61, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x5f, 0x41, 0x67, 0x67, 0x72, 0x65,
	0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x63, 0x73, 0x67, 0x6f, 0x2e, 0x43, 0x47, 0x61, 0x6d,
	0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x5f, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73,
	0x1a, 0x8a, 0x02, 0x0a, 0x05, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x21, 0x0a, 0x0c, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0b, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x23, 0x0a,
	0x0d, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x5f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x5f, 0x66, 0x75,
	0x6c, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x73, 0x46, 0x75, 0x6c, 0x6c, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73,
	0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x73, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x73, 0x5f, 0x68, 0x75, 0x6d, 0x61, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0d, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x48, 0x75, 0x6d, 0x61, 0x6e,
	0x73, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x5f, 0x62, 0x6f, 0x74,
	0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73,
	0x42, 0x6f, 0x74, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x63,
	0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x22, 0xbd, 0x01,
	0x0a, 0x23, 0x43, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x41, 0x64, 0x64, 0x53,
	0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x61, 0x70, 0x70, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x67,
	0x61, 0x6d, 0x65, 0x69, 0x74, 0x65, 0x6d, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0a, 0x67, 0x61, 0x6d, 0x65, 0x69, 0x74, 0x65, 0x6d, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12,
	0x24, 0x0a, 0x0e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x75, 0x73, 0x5f, 0x75, 0x73,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x55, 0x73, 0x55, 0x73, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x72, 0x6f, 0x77, 0x5f, 0x75, 0x73, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d,
	0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x6f, 0x77, 0x55, 0x73, 0x64, 0x22, 0x26, 0x0a,
	0x24, 0x43, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x41, 0x64, 0x64, 0x53, 0x70,
	0x65, 0x63, 0x69, 0x61, 0x6c, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2a, 0x5f, 0x0a, 0x14, 0x47, 0x43, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x4c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a,
	0x1c, 0x47, 0x43, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x65,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x44, 0x45, 0x46, 0x41, 0x55, 0x4c, 0x54, 0x10, 0x00, 0x12,
	0x25, 0x0a, 0x21, 0x47, 0x43, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4c, 0x61, 0x75, 0x6e, 0x63,
	0x68, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x50, 0x45, 0x52, 0x46, 0x45, 0x43, 0x54, 0x57,
	0x4f, 0x52, 0x4c, 0x44, 0x10, 0x01, 0x2a, 0xd5, 0x01, 0x0a, 0x12, 0x47, 0x43, 0x43, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x23, 0x0a,
	0x1f, 0x47, 0x43, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x5f, 0x48, 0x41, 0x56, 0x45, 0x5f, 0x53, 0x45, 0x53, 0x53, 0x49, 0x4f, 0x4e,
	0x10, 0x00, 0x12, 0x24, 0x0a, 0x20, 0x47, 0x43, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x47, 0x43, 0x5f, 0x47, 0x4f, 0x49, 0x4e,
	0x47, 0x5f, 0x44, 0x4f, 0x57, 0x4e, 0x10, 0x01, 0x12, 0x21, 0x0a, 0x1d, 0x47, 0x43, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x4e,
	0x4f, 0x5f, 0x53, 0x45, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x10, 0x02, 0x12, 0x30, 0x0a, 0x2c, 0x47,
	0x43, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x5f, 0x4e, 0x4f, 0x5f, 0x53, 0x45, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x49, 0x4e, 0x5f,
	0x4c, 0x4f, 0x47, 0x4f, 0x4e, 0x5f, 0x51, 0x55, 0x45, 0x55, 0x45, 0x10, 0x03, 0x12, 0x1f, 0x0a,
	0x1b, 0x47, 0x43, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x5f, 0x4e, 0x4f, 0x5f, 0x53, 0x54, 0x45, 0x41, 0x4d, 0x10, 0x04, 0x2a, 0xc4,
	0x01, 0x0a, 0x15, 0x45, 0x53, 0x74, 0x65, 0x61, 0x6d, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x75, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x1b, 0x6b, 0x5f, 0x45, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x43, 0x6f,
	0x6d, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x65, 0x10, 0x00, 0x12, 0x1e, 0x0a, 0x1a, 0x6b, 0x5f, 0x45,
	0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x57,
	0x6f, 0x72, 0x6b, 0x73, 0x68, 0x6f, 0x70, 0x10, 0x01, 0x12, 0x25, 0x0a, 0x21, 0x6b, 0x5f, 0x45,
	0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x10, 0x02,
	0x12, 0x1d, 0x0a, 0x19, 0x6b, 0x5f, 0x45, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x75,
	0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x10, 0x03, 0x12,
	0x24, 0x0a, 0x20, 0x6b, 0x5f, 0x45, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x75, 0x6c,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x50, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x10, 0x04, 0x42, 0x36, 0x48, 0x01, 0x5a, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x31, 0x33, 0x6b, 0x2f, 0x67, 0x6f, 0x2d, 0x73, 0x74, 0x65,
	0x61, 0x6d, 0x2d, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x63, 0x73, 0x67, 0x6f, 0x80, 0x01, 0x00,
}

var (
	file_csgo_gcsdk_gcmessages_proto_rawDescOnce sync.Once
	file_csgo_gcsdk_gcmessages_proto_rawDescData = file_csgo_gcsdk_gcmessages_proto_rawDesc
)

func file_csgo_gcsdk_gcmessages_proto_rawDescGZIP() []byte {
	file_csgo_gcsdk_gcmessages_proto_rawDescOnce.Do(func() {
		file_csgo_gcsdk_gcmessages_proto_rawDescData = protoimpl.X.CompressGZIP(file_csgo_gcsdk_gcmessages_proto_rawDescData)
	})
	return file_csgo_gcsdk_gcmessages_proto_rawDescData
}

var file_csgo_gcsdk_gcmessages_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_csgo_gcsdk_gcmessages_proto_msgTypes = make([]protoimpl.MessageInfo, 41)
var file_csgo_gcsdk_gcmessages_proto_goTypes = []interface{}{
	(GCClientLauncherType)(0),                                                        // 0: csgo.GCClientLauncherType
	(GCConnectionStatus)(0),                                                          // 1: csgo.GCConnectionStatus
	(ESteamPaymentRuleType)(0),                                                       // 2: csgo.ESteamPaymentRuleType
	(*CMsgSOIDOwner)(nil),                                                            // 3: csgo.CMsgSOIDOwner
	(*CMsgSOSingleObject)(nil),                                                       // 4: csgo.CMsgSOSingleObject
	(*CMsgSOMultipleObjects)(nil),                                                    // 5: csgo.CMsgSOMultipleObjects
	(*CMsgSOCacheSubscribed)(nil),                                                    // 6: csgo.CMsgSOCacheSubscribed
	(*CMsgSOCacheUnsubscribed)(nil),                                                  // 7: csgo.CMsgSOCacheUnsubscribed
	(*CMsgSOCacheSubscriptionCheck)(nil),                                             // 8: csgo.CMsgSOCacheSubscriptionCheck
	(*CMsgSOCacheSubscriptionRefresh)(nil),                                           // 9: csgo.CMsgSOCacheSubscriptionRefresh
	(*CMsgSOCacheVersion)(nil),                                                       // 10: csgo.CMsgSOCacheVersion
	(*CMsgAccountDetails)(nil),                                                       // 11: csgo.CMsgAccountDetails
	(*CMsgGCMultiplexMessage)(nil),                                                   // 12: csgo.CMsgGCMultiplexMessage
	(*CMsgGCMultiplexMessage_Response)(nil),                                          // 13: csgo.CMsgGCMultiplexMessage_Response
	(*CGCToGCMsgMasterAck)(nil),                                                      // 14: csgo.CGCToGCMsgMasterAck
	(*CGCToGCMsgMasterAck_Response)(nil),                                             // 15: csgo.CGCToGCMsgMasterAck_Response
	(*CGCToGCMsgMasterStartupComplete)(nil),                                          // 16: csgo.CGCToGCMsgMasterStartupComplete
	(*CGCToGCMsgRouted)(nil),                                                         // 17: csgo.CGCToGCMsgRouted
	(*CGCToGCMsgRoutedReply)(nil),                                                    // 18: csgo.CGCToGCMsgRoutedReply
	(*CMsgGCUpdateSessionIP)(nil),                                                    // 19: csgo.CMsgGCUpdateSessionIP
	(*CMsgGCRequestSessionIP)(nil),                                                   // 20: csgo.CMsgGCRequestSessionIP
	(*CMsgGCRequestSessionIPResponse)(nil),                                           // 21: csgo.CMsgGCRequestSessionIPResponse
	(*CMsgSOCacheHaveVersion)(nil),                                                   // 22: csgo.CMsgSOCacheHaveVersion
	(*CMsgClientHello)(nil),                                                          // 23: csgo.CMsgClientHello
	(*CMsgServerHello)(nil),                                                          // 24: csgo.CMsgServerHello
	(*CMsgClientWelcome)(nil),                                                        // 25: csgo.CMsgClientWelcome
	(*CMsgConnectionStatus)(nil),                                                     // 26: csgo.CMsgConnectionStatus
	(*CWorkshop_PopulateItemDescriptions_Request)(nil),                               // 27: csgo.CWorkshop_PopulateItemDescriptions_Request
	(*CWorkshop_GetContributors_Request)(nil),                                        // 28: csgo.CWorkshop_GetContributors_Request
	(*CWorkshop_GetContributors_Response)(nil),                                       // 29: csgo.CWorkshop_GetContributors_Response
	(*CWorkshop_SetItemPaymentRules_Request)(nil),                                    // 30: csgo.CWorkshop_SetItemPaymentRules_Request
	(*CWorkshop_SetItemPaymentRules_Response)(nil),                                   // 31: csgo.CWorkshop_SetItemPaymentRules_Response
	(*CGameServers_AggregationQuery_Request)(nil),                                    // 32: csgo.CGameServers_AggregationQuery_Request
	(*CGameServers_AggregationQuery_Response)(nil),                                   // 33: csgo.CGameServers_AggregationQuery_Response
	(*CWorkshop_AddSpecialPayment_Request)(nil),                                      // 34: csgo.CWorkshop_AddSpecialPayment_Request
	(*CWorkshop_AddSpecialPayment_Response)(nil),                                     // 35: csgo.CWorkshop_AddSpecialPayment_Response
	(*CMsgSOMultipleObjects_SingleObject)(nil),                                       // 36: csgo.CMsgSOMultipleObjects.SingleObject
	(*CMsgSOCacheSubscribed_SubscribedType)(nil),                                     // 37: csgo.CMsgSOCacheSubscribed.SubscribedType
	(*CMsgClientWelcome_Location)(nil),                                               // 38: csgo.CMsgClientWelcome.Location
	(*CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription)(nil),         // 39: csgo.CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription
	(*CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock)(nil), // 40: csgo.CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock
	(*CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule)(nil),            // 41: csgo.CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule
	(*CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule)(nil),             // 42: csgo.CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule
	(*CGameServers_AggregationQuery_Response_Group)(nil),                             // 43: csgo.CGameServers_AggregationQuery_Response.Group
}
var file_csgo_gcsdk_gcmessages_proto_depIdxs = []int32{
	3,  // 0: csgo.CMsgSOSingleObject.owner_soid:type_name -> csgo.CMsgSOIDOwner
	36, // 1: csgo.CMsgSOMultipleObjects.objects_modified:type_name -> csgo.CMsgSOMultipleObjects.SingleObject
	3,  // 2: csgo.CMsgSOMultipleObjects.owner_soid:type_name -> csgo.CMsgSOIDOwner
	37, // 3: csgo.CMsgSOCacheSubscribed.objects:type_name -> csgo.CMsgSOCacheSubscribed.SubscribedType
	3,  // 4: csgo.CMsgSOCacheSubscribed.owner_soid:type_name -> csgo.CMsgSOIDOwner
	3,  // 5: csgo.CMsgSOCacheUnsubscribed.owner_soid:type_name -> csgo.CMsgSOIDOwner
	3,  // 6: csgo.CMsgSOCacheSubscriptionCheck.owner_soid:type_name -> csgo.CMsgSOIDOwner
	3,  // 7: csgo.CMsgSOCacheSubscriptionRefresh.owner_soid:type_name -> csgo.CMsgSOIDOwner
	3,  // 8: csgo.CMsgSOCacheHaveVersion.soid:type_name -> csgo.CMsgSOIDOwner
	22, // 9: csgo.CMsgClientHello.socache_have_versions:type_name -> csgo.CMsgSOCacheHaveVersion
	22, // 10: csgo.CMsgServerHello.socache_have_versions:type_name -> csgo.CMsgSOCacheHaveVersion
	6,  // 11: csgo.CMsgClientWelcome.outofdate_subscribed_caches:type_name -> csgo.CMsgSOCacheSubscribed
	8,  // 12: csgo.CMsgClientWelcome.uptodate_subscribed_caches:type_name -> csgo.CMsgSOCacheSubscriptionCheck
	38, // 13: csgo.CMsgClientWelcome.location:type_name -> csgo.CMsgClientWelcome.Location
	1,  // 14: csgo.CMsgConnectionStatus.status:type_name -> csgo.GCConnectionStatus
	40, // 15: csgo.CWorkshop_PopulateItemDescriptions_Request.languages:type_name -> csgo.CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock
	41, // 16: csgo.CWorkshop_SetItemPaymentRules_Request.associated_workshop_files:type_name -> csgo.CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule
	42, // 17: csgo.CWorkshop_SetItemPaymentRules_Request.partner_accounts:type_name -> csgo.CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule
	43, // 18: csgo.CGameServers_AggregationQuery_Response.groups:type_name -> csgo.CGameServers_AggregationQuery_Response.Group
	39, // 19: csgo.CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock.descriptions:type_name -> csgo.CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription
	20, // [20:20] is the sub-list for method output_type
	20, // [20:20] is the sub-list for method input_type
	20, // [20:20] is the sub-list for extension type_name
	20, // [20:20] is the sub-list for extension extendee
	0,  // [0:20] is the sub-list for field type_name
}

func init() { file_csgo_gcsdk_gcmessages_proto_init() }
func file_csgo_gcsdk_gcmessages_proto_init() {
	if File_csgo_gcsdk_gcmessages_proto != nil {
		return
	}
	file_csgo_steammessages_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_csgo_gcsdk_gcmessages_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgSOIDOwner); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_csgo_gcsdk_gcmessages_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgSOSingleObject); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_csgo_gcsdk_gcmessages_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgSOMultipleObjects); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_csgo_gcsdk_gcmessages_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgSOCacheSubscribed); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_csgo_gcsdk_gcmessages_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgSOCacheUnsubscribed); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_csgo_gcsdk_gcmessages_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgSOCacheSubscriptionCheck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_csgo_gcsdk_gcmessages_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgSOCacheSubscriptionRefresh); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_csgo_gcsdk_gcmessages_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgSOCacheVersion); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_csgo_gcsdk_gcmessages_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgAccountDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_csgo_gcsdk_gcmessages_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgGCMultiplexMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_csgo_gcsdk_gcmessages_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgGCMultiplexMessage_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_csgo_gcsdk_gcmessages_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CGCToGCMsgMasterAck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_csgo_gcsdk_gcmessages_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CGCToGCMsgMasterAck_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_csgo_gcsdk_gcmessages_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CGCToGCMsgMasterStartupComplete); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_csgo_gcsdk_gcmessages_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CGCToGCMsgRouted); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_csgo_gcsdk_gcmessages_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CGCToGCMsgRoutedReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_csgo_gcsdk_gcmessages_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgGCUpdateSessionIP); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_csgo_gcsdk_gcmessages_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgGCRequestSessionIP); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_csgo_gcsdk_gcmessages_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgGCRequestSessionIPResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_csgo_gcsdk_gcmessages_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgSOCacheHaveVersion); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_csgo_gcsdk_gcmessages_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgClientHello); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_csgo_gcsdk_gcmessages_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgServerHello); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_csgo_gcsdk_gcmessages_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgClientWelcome); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_csgo_gcsdk_gcmessages_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgConnectionStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_csgo_gcsdk_gcmessages_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CWorkshop_PopulateItemDescriptions_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_csgo_gcsdk_gcmessages_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CWorkshop_GetContributors_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_csgo_gcsdk_gcmessages_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CWorkshop_GetContributors_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_csgo_gcsdk_gcmessages_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CWorkshop_SetItemPaymentRules_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_csgo_gcsdk_gcmessages_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CWorkshop_SetItemPaymentRules_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_csgo_gcsdk_gcmessages_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CGameServers_AggregationQuery_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_csgo_gcsdk_gcmessages_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CGameServers_AggregationQuery_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_csgo_gcsdk_gcmessages_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CWorkshop_AddSpecialPayment_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_csgo_gcsdk_gcmessages_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CWorkshop_AddSpecialPayment_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_csgo_gcsdk_gcmessages_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgSOMultipleObjects_SingleObject); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_csgo_gcsdk_gcmessages_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgSOCacheSubscribed_SubscribedType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_csgo_gcsdk_gcmessages_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgClientWelcome_Location); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_csgo_gcsdk_gcmessages_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_csgo_gcsdk_gcmessages_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_csgo_gcsdk_gcmessages_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_csgo_gcsdk_gcmessages_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_csgo_gcsdk_gcmessages_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CGameServers_AggregationQuery_Response_Group); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_csgo_gcsdk_gcmessages_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   41,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_csgo_gcsdk_gcmessages_proto_goTypes,
		DependencyIndexes: file_csgo_gcsdk_gcmessages_proto_depIdxs,
		EnumInfos:         file_csgo_gcsdk_gcmessages_proto_enumTypes,
		MessageInfos:      file_csgo_gcsdk_gcmessages_proto_msgTypes,
	}.Build()
	File_csgo_gcsdk_gcmessages_proto = out.File
	file_csgo_gcsdk_gcmessages_proto_rawDesc = nil
	file_csgo_gcsdk_gcmessages_proto_goTypes = nil
	file_csgo_gcsdk_gcmessages_proto_depIdxs = nil
}
