// Code generated by protoc-gen-go. DO NOT EDIT.
// source: econ_gcmessages.proto

package csgo // import "github.com/13k/go-steam-resources/protobuf/csgo"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type EGCItemMsg int32

const (
	EGCItemMsg_k_EMsgGCBase                                 EGCItemMsg = 1000
	EGCItemMsg_k_EMsgGCSetItemPosition                      EGCItemMsg = 1001
	EGCItemMsg_k_EMsgGCCraft                                EGCItemMsg = 1002
	EGCItemMsg_k_EMsgGCCraftResponse                        EGCItemMsg = 1003
	EGCItemMsg_k_EMsgGCDelete                               EGCItemMsg = 1004
	EGCItemMsg_k_EMsgGCVerifyCacheSubscription              EGCItemMsg = 1005
	EGCItemMsg_k_EMsgGCNameItem                             EGCItemMsg = 1006
	EGCItemMsg_k_EMsgGCUnlockCrate                          EGCItemMsg = 1007
	EGCItemMsg_k_EMsgGCUnlockCrateResponse                  EGCItemMsg = 1008
	EGCItemMsg_k_EMsgGCPaintItem                            EGCItemMsg = 1009
	EGCItemMsg_k_EMsgGCPaintItemResponse                    EGCItemMsg = 1010
	EGCItemMsg_k_EMsgGCGoldenWrenchBroadcast                EGCItemMsg = 1011
	EGCItemMsg_k_EMsgGCMOTDRequest                          EGCItemMsg = 1012
	EGCItemMsg_k_EMsgGCMOTDRequestResponse                  EGCItemMsg = 1013
	EGCItemMsg_k_EMsgGCAddItemToSocket_DEPRECATED           EGCItemMsg = 1014
	EGCItemMsg_k_EMsgGCAddItemToSocketResponse_DEPRECATED   EGCItemMsg = 1015
	EGCItemMsg_k_EMsgGCAddSocketToBaseItem_DEPRECATED       EGCItemMsg = 1016
	EGCItemMsg_k_EMsgGCAddSocketToItem_DEPRECATED           EGCItemMsg = 1017
	EGCItemMsg_k_EMsgGCAddSocketToItemResponse_DEPRECATED   EGCItemMsg = 1018
	EGCItemMsg_k_EMsgGCNameBaseItem                         EGCItemMsg = 1019
	EGCItemMsg_k_EMsgGCNameBaseItemResponse                 EGCItemMsg = 1020
	EGCItemMsg_k_EMsgGCRemoveSocketItem_DEPRECATED          EGCItemMsg = 1021
	EGCItemMsg_k_EMsgGCRemoveSocketItemResponse_DEPRECATED  EGCItemMsg = 1022
	EGCItemMsg_k_EMsgGCCustomizeItemTexture                 EGCItemMsg = 1023
	EGCItemMsg_k_EMsgGCCustomizeItemTextureResponse         EGCItemMsg = 1024
	EGCItemMsg_k_EMsgGCUseItemRequest                       EGCItemMsg = 1025
	EGCItemMsg_k_EMsgGCUseItemResponse                      EGCItemMsg = 1026
	EGCItemMsg_k_EMsgGCGiftedItems_DEPRECATED               EGCItemMsg = 1027
	EGCItemMsg_k_EMsgGCRemoveItemName                       EGCItemMsg = 1030
	EGCItemMsg_k_EMsgGCRemoveItemPaint                      EGCItemMsg = 1031
	EGCItemMsg_k_EMsgGCGiftWrapItem                         EGCItemMsg = 1032
	EGCItemMsg_k_EMsgGCGiftWrapItemResponse                 EGCItemMsg = 1033
	EGCItemMsg_k_EMsgGCDeliverGift                          EGCItemMsg = 1034
	EGCItemMsg_k_EMsgGCDeliverGiftResponseGiver             EGCItemMsg = 1035
	EGCItemMsg_k_EMsgGCDeliverGiftResponseReceiver          EGCItemMsg = 1036
	EGCItemMsg_k_EMsgGCUnwrapGiftRequest                    EGCItemMsg = 1037
	EGCItemMsg_k_EMsgGCUnwrapGiftResponse                   EGCItemMsg = 1038
	EGCItemMsg_k_EMsgGCSetItemStyle                         EGCItemMsg = 1039
	EGCItemMsg_k_EMsgGCUsedClaimCodeItem                    EGCItemMsg = 1040
	EGCItemMsg_k_EMsgGCSortItems                            EGCItemMsg = 1041
	EGCItemMsg_k_EMsgGC_RevolvingLootList_DEPRECATED        EGCItemMsg = 1042
	EGCItemMsg_k_EMsgGCLookupAccount                        EGCItemMsg = 1043
	EGCItemMsg_k_EMsgGCLookupAccountResponse                EGCItemMsg = 1044
	EGCItemMsg_k_EMsgGCLookupAccountName                    EGCItemMsg = 1045
	EGCItemMsg_k_EMsgGCLookupAccountNameResponse            EGCItemMsg = 1046
	EGCItemMsg_k_EMsgGCUpdateItemSchema                     EGCItemMsg = 1049
	EGCItemMsg_k_EMsgGCRemoveCustomTexture                  EGCItemMsg = 1051
	EGCItemMsg_k_EMsgGCRemoveCustomTextureResponse          EGCItemMsg = 1052
	EGCItemMsg_k_EMsgGCRemoveMakersMark                     EGCItemMsg = 1053
	EGCItemMsg_k_EMsgGCRemoveMakersMarkResponse             EGCItemMsg = 1054
	EGCItemMsg_k_EMsgGCRemoveUniqueCraftIndex               EGCItemMsg = 1055
	EGCItemMsg_k_EMsgGCRemoveUniqueCraftIndexResponse       EGCItemMsg = 1056
	EGCItemMsg_k_EMsgGCSaxxyBroadcast                       EGCItemMsg = 1057
	EGCItemMsg_k_EMsgGCBackpackSortFinished                 EGCItemMsg = 1058
	EGCItemMsg_k_EMsgGCAdjustItemEquippedState              EGCItemMsg = 1059
	EGCItemMsg_k_EMsgGCCollectItem                          EGCItemMsg = 1061
	EGCItemMsg_k_EMsgGCItemAcknowledged__DEPRECATED         EGCItemMsg = 1062
	EGCItemMsg_k_EMsgGC_ReportAbuse                         EGCItemMsg = 1065
	EGCItemMsg_k_EMsgGC_ReportAbuseResponse                 EGCItemMsg = 1066
	EGCItemMsg_k_EMsgGCNameItemNotification                 EGCItemMsg = 1068
	EGCItemMsg_k_EMsgGCApplyConsumableEffects               EGCItemMsg = 1069
	EGCItemMsg_k_EMsgGCConsumableExhausted                  EGCItemMsg = 1070
	EGCItemMsg_k_EMsgGCShowItemsPickedUp                    EGCItemMsg = 1071
	EGCItemMsg_k_EMsgGCClientDisplayNotification            EGCItemMsg = 1072
	EGCItemMsg_k_EMsgGCApplyStrangePart                     EGCItemMsg = 1073
	EGCItemMsg_k_EMsgGC_IncrementKillCountAttribute         EGCItemMsg = 1074
	EGCItemMsg_k_EMsgGC_IncrementKillCountResponse          EGCItemMsg = 1075
	EGCItemMsg_k_EMsgGCApplyPennantUpgrade                  EGCItemMsg = 1076
	EGCItemMsg_k_EMsgGCSetItemPositions                     EGCItemMsg = 1077
	EGCItemMsg_k_EMsgGCApplyEggEssence                      EGCItemMsg = 1078
	EGCItemMsg_k_EMsgGCNameEggEssenceResponse               EGCItemMsg = 1079
	EGCItemMsg_k_EMsgGCPaintKitItem                         EGCItemMsg = 1080
	EGCItemMsg_k_EMsgGCPaintKitBaseItem                     EGCItemMsg = 1081
	EGCItemMsg_k_EMsgGCPaintKitItemResponse                 EGCItemMsg = 1082
	EGCItemMsg_k_EMsgGCGiftedItems                          EGCItemMsg = 1083
	EGCItemMsg_k_EMsgGCUnlockItemStyle                      EGCItemMsg = 1084
	EGCItemMsg_k_EMsgGCUnlockItemStyleResponse              EGCItemMsg = 1085
	EGCItemMsg_k_EMsgGCApplySticker                         EGCItemMsg = 1086
	EGCItemMsg_k_EMsgGCItemAcknowledged                     EGCItemMsg = 1087
	EGCItemMsg_k_EMsgGCStatTrakSwap                         EGCItemMsg = 1088
	EGCItemMsg_k_EMsgGCUserTrackTimePlayedConsecutively     EGCItemMsg = 1089
	EGCItemMsg_k_EMsgGCItemCustomizationNotification        EGCItemMsg = 1090
	EGCItemMsg_k_EMsgGCTradingBase                          EGCItemMsg = 1500
	EGCItemMsg_k_EMsgGCTrading_InitiateTradeRequest         EGCItemMsg = 1501
	EGCItemMsg_k_EMsgGCTrading_InitiateTradeResponse        EGCItemMsg = 1502
	EGCItemMsg_k_EMsgGCTrading_StartSession                 EGCItemMsg = 1503
	EGCItemMsg_k_EMsgGCTrading_SetItem                      EGCItemMsg = 1504
	EGCItemMsg_k_EMsgGCTrading_RemoveItem                   EGCItemMsg = 1505
	EGCItemMsg_k_EMsgGCTrading_UpdateTradeInfo              EGCItemMsg = 1506
	EGCItemMsg_k_EMsgGCTrading_SetReadiness                 EGCItemMsg = 1507
	EGCItemMsg_k_EMsgGCTrading_ReadinessResponse            EGCItemMsg = 1508
	EGCItemMsg_k_EMsgGCTrading_SessionClosed                EGCItemMsg = 1509
	EGCItemMsg_k_EMsgGCTrading_CancelSession                EGCItemMsg = 1510
	EGCItemMsg_k_EMsgGCTrading_TradeChatMsg                 EGCItemMsg = 1511
	EGCItemMsg_k_EMsgGCTrading_ConfirmOffer                 EGCItemMsg = 1512
	EGCItemMsg_k_EMsgGCTrading_TradeTypingChatMsg           EGCItemMsg = 1513
	EGCItemMsg_k_EMsgGCServerBrowser_FavoriteServer         EGCItemMsg = 1601
	EGCItemMsg_k_EMsgGCServerBrowser_BlacklistServer        EGCItemMsg = 1602
	EGCItemMsg_k_EMsgGCServerRentalsBase                    EGCItemMsg = 1700
	EGCItemMsg_k_EMsgGCItemPreviewCheckStatus               EGCItemMsg = 1701
	EGCItemMsg_k_EMsgGCItemPreviewStatusResponse            EGCItemMsg = 1702
	EGCItemMsg_k_EMsgGCItemPreviewRequest                   EGCItemMsg = 1703
	EGCItemMsg_k_EMsgGCItemPreviewRequestResponse           EGCItemMsg = 1704
	EGCItemMsg_k_EMsgGCItemPreviewExpire                    EGCItemMsg = 1705
	EGCItemMsg_k_EMsgGCItemPreviewExpireNotification        EGCItemMsg = 1706
	EGCItemMsg_k_EMsgGCItemPreviewItemBoughtNotification    EGCItemMsg = 1707
	EGCItemMsg_k_EMsgGCDev_NewItemRequest                   EGCItemMsg = 2001
	EGCItemMsg_k_EMsgGCDev_NewItemRequestResponse           EGCItemMsg = 2002
	EGCItemMsg_k_EMsgGCDev_PaintKitDropItem                 EGCItemMsg = 2003
	EGCItemMsg_k_EMsgGCStoreGetUserData                     EGCItemMsg = 2500
	EGCItemMsg_k_EMsgGCStoreGetUserDataResponse             EGCItemMsg = 2501
	EGCItemMsg_k_EMsgGCStorePurchaseInit_DEPRECATED         EGCItemMsg = 2502
	EGCItemMsg_k_EMsgGCStorePurchaseInitResponse_DEPRECATED EGCItemMsg = 2503
	EGCItemMsg_k_EMsgGCStorePurchaseFinalize                EGCItemMsg = 2504
	EGCItemMsg_k_EMsgGCStorePurchaseFinalizeResponse        EGCItemMsg = 2505
	EGCItemMsg_k_EMsgGCStorePurchaseCancel                  EGCItemMsg = 2506
	EGCItemMsg_k_EMsgGCStorePurchaseCancelResponse          EGCItemMsg = 2507
	EGCItemMsg_k_EMsgGCStorePurchaseQueryTxn                EGCItemMsg = 2508
	EGCItemMsg_k_EMsgGCStorePurchaseQueryTxnResponse        EGCItemMsg = 2509
	EGCItemMsg_k_EMsgGCStorePurchaseInit                    EGCItemMsg = 2510
	EGCItemMsg_k_EMsgGCStorePurchaseInitResponse            EGCItemMsg = 2511
	EGCItemMsg_k_EMsgGCBannedWordListRequest                EGCItemMsg = 2512
	EGCItemMsg_k_EMsgGCBannedWordListResponse               EGCItemMsg = 2513
	EGCItemMsg_k_EMsgGCToGCBannedWordListBroadcast          EGCItemMsg = 2514
	EGCItemMsg_k_EMsgGCToGCBannedWordListUpdated            EGCItemMsg = 2515
	EGCItemMsg_k_EMsgGCToGCDirtySDOCache                    EGCItemMsg = 2516
	EGCItemMsg_k_EMsgGCToGCDirtyMultipleSDOCache            EGCItemMsg = 2517
	EGCItemMsg_k_EMsgGCToGCUpdateSQLKeyValue                EGCItemMsg = 2518
	EGCItemMsg_k_EMsgGCToGCIsTrustedServer                  EGCItemMsg = 2519
	EGCItemMsg_k_EMsgGCToGCIsTrustedServerResponse          EGCItemMsg = 2520
	EGCItemMsg_k_EMsgGCToGCBroadcastConsoleCommand          EGCItemMsg = 2521
	EGCItemMsg_k_EMsgGCServerVersionUpdated                 EGCItemMsg = 2522
	EGCItemMsg_k_EMsgGCApplyAutograph                       EGCItemMsg = 2523
	EGCItemMsg_k_EMsgGCToGCWebAPIAccountChanged             EGCItemMsg = 2524
	EGCItemMsg_k_EMsgGCRequestAnnouncements                 EGCItemMsg = 2525
	EGCItemMsg_k_EMsgGCRequestAnnouncementsResponse         EGCItemMsg = 2526
	EGCItemMsg_k_EMsgGCRequestPassportItemGrant             EGCItemMsg = 2527
	EGCItemMsg_k_EMsgGCClientVersionUpdated                 EGCItemMsg = 2528
)

var EGCItemMsg_name = map[int32]string{
	1000: "k_EMsgGCBase",
	1001: "k_EMsgGCSetItemPosition",
	1002: "k_EMsgGCCraft",
	1003: "k_EMsgGCCraftResponse",
	1004: "k_EMsgGCDelete",
	1005: "k_EMsgGCVerifyCacheSubscription",
	1006: "k_EMsgGCNameItem",
	1007: "k_EMsgGCUnlockCrate",
	1008: "k_EMsgGCUnlockCrateResponse",
	1009: "k_EMsgGCPaintItem",
	1010: "k_EMsgGCPaintItemResponse",
	1011: "k_EMsgGCGoldenWrenchBroadcast",
	1012: "k_EMsgGCMOTDRequest",
	1013: "k_EMsgGCMOTDRequestResponse",
	1014: "k_EMsgGCAddItemToSocket_DEPRECATED",
	1015: "k_EMsgGCAddItemToSocketResponse_DEPRECATED",
	1016: "k_EMsgGCAddSocketToBaseItem_DEPRECATED",
	1017: "k_EMsgGCAddSocketToItem_DEPRECATED",
	1018: "k_EMsgGCAddSocketToItemResponse_DEPRECATED",
	1019: "k_EMsgGCNameBaseItem",
	1020: "k_EMsgGCNameBaseItemResponse",
	1021: "k_EMsgGCRemoveSocketItem_DEPRECATED",
	1022: "k_EMsgGCRemoveSocketItemResponse_DEPRECATED",
	1023: "k_EMsgGCCustomizeItemTexture",
	1024: "k_EMsgGCCustomizeItemTextureResponse",
	1025: "k_EMsgGCUseItemRequest",
	1026: "k_EMsgGCUseItemResponse",
	1027: "k_EMsgGCGiftedItems_DEPRECATED",
	1030: "k_EMsgGCRemoveItemName",
	1031: "k_EMsgGCRemoveItemPaint",
	1032: "k_EMsgGCGiftWrapItem",
	1033: "k_EMsgGCGiftWrapItemResponse",
	1034: "k_EMsgGCDeliverGift",
	1035: "k_EMsgGCDeliverGiftResponseGiver",
	1036: "k_EMsgGCDeliverGiftResponseReceiver",
	1037: "k_EMsgGCUnwrapGiftRequest",
	1038: "k_EMsgGCUnwrapGiftResponse",
	1039: "k_EMsgGCSetItemStyle",
	1040: "k_EMsgGCUsedClaimCodeItem",
	1041: "k_EMsgGCSortItems",
	1042: "k_EMsgGC_RevolvingLootList_DEPRECATED",
	1043: "k_EMsgGCLookupAccount",
	1044: "k_EMsgGCLookupAccountResponse",
	1045: "k_EMsgGCLookupAccountName",
	1046: "k_EMsgGCLookupAccountNameResponse",
	1049: "k_EMsgGCUpdateItemSchema",
	1051: "k_EMsgGCRemoveCustomTexture",
	1052: "k_EMsgGCRemoveCustomTextureResponse",
	1053: "k_EMsgGCRemoveMakersMark",
	1054: "k_EMsgGCRemoveMakersMarkResponse",
	1055: "k_EMsgGCRemoveUniqueCraftIndex",
	1056: "k_EMsgGCRemoveUniqueCraftIndexResponse",
	1057: "k_EMsgGCSaxxyBroadcast",
	1058: "k_EMsgGCBackpackSortFinished",
	1059: "k_EMsgGCAdjustItemEquippedState",
	1061: "k_EMsgGCCollectItem",
	1062: "k_EMsgGCItemAcknowledged__DEPRECATED",
	1065: "k_EMsgGC_ReportAbuse",
	1066: "k_EMsgGC_ReportAbuseResponse",
	1068: "k_EMsgGCNameItemNotification",
	1069: "k_EMsgGCApplyConsumableEffects",
	1070: "k_EMsgGCConsumableExhausted",
	1071: "k_EMsgGCShowItemsPickedUp",
	1072: "k_EMsgGCClientDisplayNotification",
	1073: "k_EMsgGCApplyStrangePart",
	1074: "k_EMsgGC_IncrementKillCountAttribute",
	1075: "k_EMsgGC_IncrementKillCountResponse",
	1076: "k_EMsgGCApplyPennantUpgrade",
	1077: "k_EMsgGCSetItemPositions",
	1078: "k_EMsgGCApplyEggEssence",
	1079: "k_EMsgGCNameEggEssenceResponse",
	1080: "k_EMsgGCPaintKitItem",
	1081: "k_EMsgGCPaintKitBaseItem",
	1082: "k_EMsgGCPaintKitItemResponse",
	1083: "k_EMsgGCGiftedItems",
	1084: "k_EMsgGCUnlockItemStyle",
	1085: "k_EMsgGCUnlockItemStyleResponse",
	1086: "k_EMsgGCApplySticker",
	1087: "k_EMsgGCItemAcknowledged",
	1088: "k_EMsgGCStatTrakSwap",
	1089: "k_EMsgGCUserTrackTimePlayedConsecutively",
	1090: "k_EMsgGCItemCustomizationNotification",
	1500: "k_EMsgGCTradingBase",
	1501: "k_EMsgGCTrading_InitiateTradeRequest",
	1502: "k_EMsgGCTrading_InitiateTradeResponse",
	1503: "k_EMsgGCTrading_StartSession",
	1504: "k_EMsgGCTrading_SetItem",
	1505: "k_EMsgGCTrading_RemoveItem",
	1506: "k_EMsgGCTrading_UpdateTradeInfo",
	1507: "k_EMsgGCTrading_SetReadiness",
	1508: "k_EMsgGCTrading_ReadinessResponse",
	1509: "k_EMsgGCTrading_SessionClosed",
	1510: "k_EMsgGCTrading_CancelSession",
	1511: "k_EMsgGCTrading_TradeChatMsg",
	1512: "k_EMsgGCTrading_ConfirmOffer",
	1513: "k_EMsgGCTrading_TradeTypingChatMsg",
	1601: "k_EMsgGCServerBrowser_FavoriteServer",
	1602: "k_EMsgGCServerBrowser_BlacklistServer",
	1700: "k_EMsgGCServerRentalsBase",
	1701: "k_EMsgGCItemPreviewCheckStatus",
	1702: "k_EMsgGCItemPreviewStatusResponse",
	1703: "k_EMsgGCItemPreviewRequest",
	1704: "k_EMsgGCItemPreviewRequestResponse",
	1705: "k_EMsgGCItemPreviewExpire",
	1706: "k_EMsgGCItemPreviewExpireNotification",
	1707: "k_EMsgGCItemPreviewItemBoughtNotification",
	2001: "k_EMsgGCDev_NewItemRequest",
	2002: "k_EMsgGCDev_NewItemRequestResponse",
	2003: "k_EMsgGCDev_PaintKitDropItem",
	2500: "k_EMsgGCStoreGetUserData",
	2501: "k_EMsgGCStoreGetUserDataResponse",
	2502: "k_EMsgGCStorePurchaseInit_DEPRECATED",
	2503: "k_EMsgGCStorePurchaseInitResponse_DEPRECATED",
	2504: "k_EMsgGCStorePurchaseFinalize",
	2505: "k_EMsgGCStorePurchaseFinalizeResponse",
	2506: "k_EMsgGCStorePurchaseCancel",
	2507: "k_EMsgGCStorePurchaseCancelResponse",
	2508: "k_EMsgGCStorePurchaseQueryTxn",
	2509: "k_EMsgGCStorePurchaseQueryTxnResponse",
	2510: "k_EMsgGCStorePurchaseInit",
	2511: "k_EMsgGCStorePurchaseInitResponse",
	2512: "k_EMsgGCBannedWordListRequest",
	2513: "k_EMsgGCBannedWordListResponse",
	2514: "k_EMsgGCToGCBannedWordListBroadcast",
	2515: "k_EMsgGCToGCBannedWordListUpdated",
	2516: "k_EMsgGCToGCDirtySDOCache",
	2517: "k_EMsgGCToGCDirtyMultipleSDOCache",
	2518: "k_EMsgGCToGCUpdateSQLKeyValue",
	2519: "k_EMsgGCToGCIsTrustedServer",
	2520: "k_EMsgGCToGCIsTrustedServerResponse",
	2521: "k_EMsgGCToGCBroadcastConsoleCommand",
	2522: "k_EMsgGCServerVersionUpdated",
	2523: "k_EMsgGCApplyAutograph",
	2524: "k_EMsgGCToGCWebAPIAccountChanged",
	2525: "k_EMsgGCRequestAnnouncements",
	2526: "k_EMsgGCRequestAnnouncementsResponse",
	2527: "k_EMsgGCRequestPassportItemGrant",
	2528: "k_EMsgGCClientVersionUpdated",
}
var EGCItemMsg_value = map[string]int32{
	"k_EMsgGCBase":                                 1000,
	"k_EMsgGCSetItemPosition":                      1001,
	"k_EMsgGCCraft":                                1002,
	"k_EMsgGCCraftResponse":                        1003,
	"k_EMsgGCDelete":                               1004,
	"k_EMsgGCVerifyCacheSubscription":              1005,
	"k_EMsgGCNameItem":                             1006,
	"k_EMsgGCUnlockCrate":                          1007,
	"k_EMsgGCUnlockCrateResponse":                  1008,
	"k_EMsgGCPaintItem":                            1009,
	"k_EMsgGCPaintItemResponse":                    1010,
	"k_EMsgGCGoldenWrenchBroadcast":                1011,
	"k_EMsgGCMOTDRequest":                          1012,
	"k_EMsgGCMOTDRequestResponse":                  1013,
	"k_EMsgGCAddItemToSocket_DEPRECATED":           1014,
	"k_EMsgGCAddItemToSocketResponse_DEPRECATED":   1015,
	"k_EMsgGCAddSocketToBaseItem_DEPRECATED":       1016,
	"k_EMsgGCAddSocketToItem_DEPRECATED":           1017,
	"k_EMsgGCAddSocketToItemResponse_DEPRECATED":   1018,
	"k_EMsgGCNameBaseItem":                         1019,
	"k_EMsgGCNameBaseItemResponse":                 1020,
	"k_EMsgGCRemoveSocketItem_DEPRECATED":          1021,
	"k_EMsgGCRemoveSocketItemResponse_DEPRECATED":  1022,
	"k_EMsgGCCustomizeItemTexture":                 1023,
	"k_EMsgGCCustomizeItemTextureResponse":         1024,
	"k_EMsgGCUseItemRequest":                       1025,
	"k_EMsgGCUseItemResponse":                      1026,
	"k_EMsgGCGiftedItems_DEPRECATED":               1027,
	"k_EMsgGCRemoveItemName":                       1030,
	"k_EMsgGCRemoveItemPaint":                      1031,
	"k_EMsgGCGiftWrapItem":                         1032,
	"k_EMsgGCGiftWrapItemResponse":                 1033,
	"k_EMsgGCDeliverGift":                          1034,
	"k_EMsgGCDeliverGiftResponseGiver":             1035,
	"k_EMsgGCDeliverGiftResponseReceiver":          1036,
	"k_EMsgGCUnwrapGiftRequest":                    1037,
	"k_EMsgGCUnwrapGiftResponse":                   1038,
	"k_EMsgGCSetItemStyle":                         1039,
	"k_EMsgGCUsedClaimCodeItem":                    1040,
	"k_EMsgGCSortItems":                            1041,
	"k_EMsgGC_RevolvingLootList_DEPRECATED":        1042,
	"k_EMsgGCLookupAccount":                        1043,
	"k_EMsgGCLookupAccountResponse":                1044,
	"k_EMsgGCLookupAccountName":                    1045,
	"k_EMsgGCLookupAccountNameResponse":            1046,
	"k_EMsgGCUpdateItemSchema":                     1049,
	"k_EMsgGCRemoveCustomTexture":                  1051,
	"k_EMsgGCRemoveCustomTextureResponse":          1052,
	"k_EMsgGCRemoveMakersMark":                     1053,
	"k_EMsgGCRemoveMakersMarkResponse":             1054,
	"k_EMsgGCRemoveUniqueCraftIndex":               1055,
	"k_EMsgGCRemoveUniqueCraftIndexResponse":       1056,
	"k_EMsgGCSaxxyBroadcast":                       1057,
	"k_EMsgGCBackpackSortFinished":                 1058,
	"k_EMsgGCAdjustItemEquippedState":              1059,
	"k_EMsgGCCollectItem":                          1061,
	"k_EMsgGCItemAcknowledged__DEPRECATED":         1062,
	"k_EMsgGC_ReportAbuse":                         1065,
	"k_EMsgGC_ReportAbuseResponse":                 1066,
	"k_EMsgGCNameItemNotification":                 1068,
	"k_EMsgGCApplyConsumableEffects":               1069,
	"k_EMsgGCConsumableExhausted":                  1070,
	"k_EMsgGCShowItemsPickedUp":                    1071,
	"k_EMsgGCClientDisplayNotification":            1072,
	"k_EMsgGCApplyStrangePart":                     1073,
	"k_EMsgGC_IncrementKillCountAttribute":         1074,
	"k_EMsgGC_IncrementKillCountResponse":          1075,
	"k_EMsgGCApplyPennantUpgrade":                  1076,
	"k_EMsgGCSetItemPositions":                     1077,
	"k_EMsgGCApplyEggEssence":                      1078,
	"k_EMsgGCNameEggEssenceResponse":               1079,
	"k_EMsgGCPaintKitItem":                         1080,
	"k_EMsgGCPaintKitBaseItem":                     1081,
	"k_EMsgGCPaintKitItemResponse":                 1082,
	"k_EMsgGCGiftedItems":                          1083,
	"k_EMsgGCUnlockItemStyle":                      1084,
	"k_EMsgGCUnlockItemStyleResponse":              1085,
	"k_EMsgGCApplySticker":                         1086,
	"k_EMsgGCItemAcknowledged":                     1087,
	"k_EMsgGCStatTrakSwap":                         1088,
	"k_EMsgGCUserTrackTimePlayedConsecutively":     1089,
	"k_EMsgGCItemCustomizationNotification":        1090,
	"k_EMsgGCTradingBase":                          1500,
	"k_EMsgGCTrading_InitiateTradeRequest":         1501,
	"k_EMsgGCTrading_InitiateTradeResponse":        1502,
	"k_EMsgGCTrading_StartSession":                 1503,
	"k_EMsgGCTrading_SetItem":                      1504,
	"k_EMsgGCTrading_RemoveItem":                   1505,
	"k_EMsgGCTrading_UpdateTradeInfo":              1506,
	"k_EMsgGCTrading_SetReadiness":                 1507,
	"k_EMsgGCTrading_ReadinessResponse":            1508,
	"k_EMsgGCTrading_SessionClosed":                1509,
	"k_EMsgGCTrading_CancelSession":                1510,
	"k_EMsgGCTrading_TradeChatMsg":                 1511,
	"k_EMsgGCTrading_ConfirmOffer":                 1512,
	"k_EMsgGCTrading_TradeTypingChatMsg":           1513,
	"k_EMsgGCServerBrowser_FavoriteServer":         1601,
	"k_EMsgGCServerBrowser_BlacklistServer":        1602,
	"k_EMsgGCServerRentalsBase":                    1700,
	"k_EMsgGCItemPreviewCheckStatus":               1701,
	"k_EMsgGCItemPreviewStatusResponse":            1702,
	"k_EMsgGCItemPreviewRequest":                   1703,
	"k_EMsgGCItemPreviewRequestResponse":           1704,
	"k_EMsgGCItemPreviewExpire":                    1705,
	"k_EMsgGCItemPreviewExpireNotification":        1706,
	"k_EMsgGCItemPreviewItemBoughtNotification":    1707,
	"k_EMsgGCDev_NewItemRequest":                   2001,
	"k_EMsgGCDev_NewItemRequestResponse":           2002,
	"k_EMsgGCDev_PaintKitDropItem":                 2003,
	"k_EMsgGCStoreGetUserData":                     2500,
	"k_EMsgGCStoreGetUserDataResponse":             2501,
	"k_EMsgGCStorePurchaseInit_DEPRECATED":         2502,
	"k_EMsgGCStorePurchaseInitResponse_DEPRECATED": 2503,
	"k_EMsgGCStorePurchaseFinalize":                2504,
	"k_EMsgGCStorePurchaseFinalizeResponse":        2505,
	"k_EMsgGCStorePurchaseCancel":                  2506,
	"k_EMsgGCStorePurchaseCancelResponse":          2507,
	"k_EMsgGCStorePurchaseQueryTxn":                2508,
	"k_EMsgGCStorePurchaseQueryTxnResponse":        2509,
	"k_EMsgGCStorePurchaseInit":                    2510,
	"k_EMsgGCStorePurchaseInitResponse":            2511,
	"k_EMsgGCBannedWordListRequest":                2512,
	"k_EMsgGCBannedWordListResponse":               2513,
	"k_EMsgGCToGCBannedWordListBroadcast":          2514,
	"k_EMsgGCToGCBannedWordListUpdated":            2515,
	"k_EMsgGCToGCDirtySDOCache":                    2516,
	"k_EMsgGCToGCDirtyMultipleSDOCache":            2517,
	"k_EMsgGCToGCUpdateSQLKeyValue":                2518,
	"k_EMsgGCToGCIsTrustedServer":                  2519,
	"k_EMsgGCToGCIsTrustedServerResponse":          2520,
	"k_EMsgGCToGCBroadcastConsoleCommand":          2521,
	"k_EMsgGCServerVersionUpdated":                 2522,
	"k_EMsgGCApplyAutograph":                       2523,
	"k_EMsgGCToGCWebAPIAccountChanged":             2524,
	"k_EMsgGCRequestAnnouncements":                 2525,
	"k_EMsgGCRequestAnnouncementsResponse":         2526,
	"k_EMsgGCRequestPassportItemGrant":             2527,
	"k_EMsgGCClientVersionUpdated":                 2528,
}

func (x EGCItemMsg) Enum() *EGCItemMsg {
	p := new(EGCItemMsg)
	*p = x
	return p
}
func (x EGCItemMsg) String() string {
	return proto.EnumName(EGCItemMsg_name, int32(x))
}
func (x *EGCItemMsg) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EGCItemMsg_value, data, "EGCItemMsg")
	if err != nil {
		return err
	}
	*x = EGCItemMsg(value)
	return nil
}
func (EGCItemMsg) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_econ_gcmessages_4518094b2be748a8, []int{0}
}

type EGCMsgResponse int32

const (
	EGCMsgResponse_k_EGCMsgResponseOK           EGCMsgResponse = 0
	EGCMsgResponse_k_EGCMsgResponseDenied       EGCMsgResponse = 1
	EGCMsgResponse_k_EGCMsgResponseServerError  EGCMsgResponse = 2
	EGCMsgResponse_k_EGCMsgResponseTimeout      EGCMsgResponse = 3
	EGCMsgResponse_k_EGCMsgResponseInvalid      EGCMsgResponse = 4
	EGCMsgResponse_k_EGCMsgResponseNoMatch      EGCMsgResponse = 5
	EGCMsgResponse_k_EGCMsgResponseUnknownError EGCMsgResponse = 6
	EGCMsgResponse_k_EGCMsgResponseNotLoggedOn  EGCMsgResponse = 7
	EGCMsgResponse_k_EGCMsgFailedToCreate       EGCMsgResponse = 8
	EGCMsgResponse_k_EGCMsgLimitExceeded        EGCMsgResponse = 9
	EGCMsgResponse_k_EGCMsgCommitUnfinalized    EGCMsgResponse = 10
)

var EGCMsgResponse_name = map[int32]string{
	0:  "k_EGCMsgResponseOK",
	1:  "k_EGCMsgResponseDenied",
	2:  "k_EGCMsgResponseServerError",
	3:  "k_EGCMsgResponseTimeout",
	4:  "k_EGCMsgResponseInvalid",
	5:  "k_EGCMsgResponseNoMatch",
	6:  "k_EGCMsgResponseUnknownError",
	7:  "k_EGCMsgResponseNotLoggedOn",
	8:  "k_EGCMsgFailedToCreate",
	9:  "k_EGCMsgLimitExceeded",
	10: "k_EGCMsgCommitUnfinalized",
}
var EGCMsgResponse_value = map[string]int32{
	"k_EGCMsgResponseOK":           0,
	"k_EGCMsgResponseDenied":       1,
	"k_EGCMsgResponseServerError":  2,
	"k_EGCMsgResponseTimeout":      3,
	"k_EGCMsgResponseInvalid":      4,
	"k_EGCMsgResponseNoMatch":      5,
	"k_EGCMsgResponseUnknownError": 6,
	"k_EGCMsgResponseNotLoggedOn":  7,
	"k_EGCMsgFailedToCreate":       8,
	"k_EGCMsgLimitExceeded":        9,
	"k_EGCMsgCommitUnfinalized":    10,
}

func (x EGCMsgResponse) Enum() *EGCMsgResponse {
	p := new(EGCMsgResponse)
	*p = x
	return p
}
func (x EGCMsgResponse) String() string {
	return proto.EnumName(EGCMsgResponse_name, int32(x))
}
func (x *EGCMsgResponse) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EGCMsgResponse_value, data, "EGCMsgResponse")
	if err != nil {
		return err
	}
	*x = EGCMsgResponse(value)
	return nil
}
func (EGCMsgResponse) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_econ_gcmessages_4518094b2be748a8, []int{1}
}

type EUnlockStyle int32

const (
	EUnlockStyle_k_UnlockStyle_Succeeded               EUnlockStyle = 0
	EUnlockStyle_k_UnlockStyle_Failed_PreReq           EUnlockStyle = 1
	EUnlockStyle_k_UnlockStyle_Failed_CantAfford       EUnlockStyle = 2
	EUnlockStyle_k_UnlockStyle_Failed_CantCommit       EUnlockStyle = 3
	EUnlockStyle_k_UnlockStyle_Failed_CantLockCache    EUnlockStyle = 4
	EUnlockStyle_k_UnlockStyle_Failed_CantAffordAttrib EUnlockStyle = 5
)

var EUnlockStyle_name = map[int32]string{
	0: "k_UnlockStyle_Succeeded",
	1: "k_UnlockStyle_Failed_PreReq",
	2: "k_UnlockStyle_Failed_CantAfford",
	3: "k_UnlockStyle_Failed_CantCommit",
	4: "k_UnlockStyle_Failed_CantLockCache",
	5: "k_UnlockStyle_Failed_CantAffordAttrib",
}
var EUnlockStyle_value = map[string]int32{
	"k_UnlockStyle_Succeeded":               0,
	"k_UnlockStyle_Failed_PreReq":           1,
	"k_UnlockStyle_Failed_CantAfford":       2,
	"k_UnlockStyle_Failed_CantCommit":       3,
	"k_UnlockStyle_Failed_CantLockCache":    4,
	"k_UnlockStyle_Failed_CantAffordAttrib": 5,
}

func (x EUnlockStyle) Enum() *EUnlockStyle {
	p := new(EUnlockStyle)
	*p = x
	return p
}
func (x EUnlockStyle) String() string {
	return proto.EnumName(EUnlockStyle_name, int32(x))
}
func (x *EUnlockStyle) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EUnlockStyle_value, data, "EUnlockStyle")
	if err != nil {
		return err
	}
	*x = EUnlockStyle(value)
	return nil
}
func (EUnlockStyle) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_econ_gcmessages_4518094b2be748a8, []int{2}
}

type CMsgGCGiftedItems struct {
	Accountid             *uint32  `protobuf:"varint,1,opt,name=accountid" json:"accountid,omitempty"`
	Giftdefindex          *uint32  `protobuf:"varint,2,opt,name=giftdefindex" json:"giftdefindex,omitempty"`
	MaxGiftsPossible      *uint32  `protobuf:"varint,3,opt,name=max_gifts_possible,json=maxGiftsPossible" json:"max_gifts_possible,omitempty"`
	NumEligibleRecipients *uint32  `protobuf:"varint,4,opt,name=num_eligible_recipients,json=numEligibleRecipients" json:"num_eligible_recipients,omitempty"`
	RecipientsAccountids  []uint32 `protobuf:"varint,5,rep,name=recipients_accountids,json=recipientsAccountids" json:"recipients_accountids,omitempty"`
	XXX_NoUnkeyedLiteral  struct{} `json:"-"`
	XXX_unrecognized      []byte   `json:"-"`
	XXX_sizecache         int32    `json:"-"`
}

func (m *CMsgGCGiftedItems) Reset()         { *m = CMsgGCGiftedItems{} }
func (m *CMsgGCGiftedItems) String() string { return proto.CompactTextString(m) }
func (*CMsgGCGiftedItems) ProtoMessage()    {}
func (*CMsgGCGiftedItems) Descriptor() ([]byte, []int) {
	return fileDescriptor_econ_gcmessages_4518094b2be748a8, []int{0}
}
func (m *CMsgGCGiftedItems) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgGCGiftedItems.Unmarshal(m, b)
}
func (m *CMsgGCGiftedItems) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgGCGiftedItems.Marshal(b, m, deterministic)
}
func (dst *CMsgGCGiftedItems) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgGCGiftedItems.Merge(dst, src)
}
func (m *CMsgGCGiftedItems) XXX_Size() int {
	return xxx_messageInfo_CMsgGCGiftedItems.Size(m)
}
func (m *CMsgGCGiftedItems) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgGCGiftedItems.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgGCGiftedItems proto.InternalMessageInfo

func (m *CMsgGCGiftedItems) GetAccountid() uint32 {
	if m != nil && m.Accountid != nil {
		return *m.Accountid
	}
	return 0
}

func (m *CMsgGCGiftedItems) GetGiftdefindex() uint32 {
	if m != nil && m.Giftdefindex != nil {
		return *m.Giftdefindex
	}
	return 0
}

func (m *CMsgGCGiftedItems) GetMaxGiftsPossible() uint32 {
	if m != nil && m.MaxGiftsPossible != nil {
		return *m.MaxGiftsPossible
	}
	return 0
}

func (m *CMsgGCGiftedItems) GetNumEligibleRecipients() uint32 {
	if m != nil && m.NumEligibleRecipients != nil {
		return *m.NumEligibleRecipients
	}
	return 0
}

func (m *CMsgGCGiftedItems) GetRecipientsAccountids() []uint32 {
	if m != nil {
		return m.RecipientsAccountids
	}
	return nil
}

type CMsgApplyAutograph struct {
	AutographItemId      *uint64  `protobuf:"varint,1,opt,name=autograph_item_id,json=autographItemId" json:"autograph_item_id,omitempty"`
	ItemItemId           *uint64  `protobuf:"varint,2,opt,name=item_item_id,json=itemItemId" json:"item_item_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgApplyAutograph) Reset()         { *m = CMsgApplyAutograph{} }
func (m *CMsgApplyAutograph) String() string { return proto.CompactTextString(m) }
func (*CMsgApplyAutograph) ProtoMessage()    {}
func (*CMsgApplyAutograph) Descriptor() ([]byte, []int) {
	return fileDescriptor_econ_gcmessages_4518094b2be748a8, []int{1}
}
func (m *CMsgApplyAutograph) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgApplyAutograph.Unmarshal(m, b)
}
func (m *CMsgApplyAutograph) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgApplyAutograph.Marshal(b, m, deterministic)
}
func (dst *CMsgApplyAutograph) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgApplyAutograph.Merge(dst, src)
}
func (m *CMsgApplyAutograph) XXX_Size() int {
	return xxx_messageInfo_CMsgApplyAutograph.Size(m)
}
func (m *CMsgApplyAutograph) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgApplyAutograph.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgApplyAutograph proto.InternalMessageInfo

func (m *CMsgApplyAutograph) GetAutographItemId() uint64 {
	if m != nil && m.AutographItemId != nil {
		return *m.AutographItemId
	}
	return 0
}

func (m *CMsgApplyAutograph) GetItemItemId() uint64 {
	if m != nil && m.ItemItemId != nil {
		return *m.ItemItemId
	}
	return 0
}

type CMsgGCUserTrackTimePlayedConsecutively struct {
	State                *uint32  `protobuf:"varint,1,opt,name=state" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgGCUserTrackTimePlayedConsecutively) Reset() {
	*m = CMsgGCUserTrackTimePlayedConsecutively{}
}
func (m *CMsgGCUserTrackTimePlayedConsecutively) String() string { return proto.CompactTextString(m) }
func (*CMsgGCUserTrackTimePlayedConsecutively) ProtoMessage()    {}
func (*CMsgGCUserTrackTimePlayedConsecutively) Descriptor() ([]byte, []int) {
	return fileDescriptor_econ_gcmessages_4518094b2be748a8, []int{2}
}
func (m *CMsgGCUserTrackTimePlayedConsecutively) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgGCUserTrackTimePlayedConsecutively.Unmarshal(m, b)
}
func (m *CMsgGCUserTrackTimePlayedConsecutively) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgGCUserTrackTimePlayedConsecutively.Marshal(b, m, deterministic)
}
func (dst *CMsgGCUserTrackTimePlayedConsecutively) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgGCUserTrackTimePlayedConsecutively.Merge(dst, src)
}
func (m *CMsgGCUserTrackTimePlayedConsecutively) XXX_Size() int {
	return xxx_messageInfo_CMsgGCUserTrackTimePlayedConsecutively.Size(m)
}
func (m *CMsgGCUserTrackTimePlayedConsecutively) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgGCUserTrackTimePlayedConsecutively.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgGCUserTrackTimePlayedConsecutively proto.InternalMessageInfo

func (m *CMsgGCUserTrackTimePlayedConsecutively) GetState() uint32 {
	if m != nil && m.State != nil {
		return *m.State
	}
	return 0
}

type CMsgGCItemCustomizationNotification struct {
	ItemId               []uint64 `protobuf:"varint,1,rep,name=item_id,json=itemId" json:"item_id,omitempty"`
	Request              *uint32  `protobuf:"varint,2,opt,name=request" json:"request,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgGCItemCustomizationNotification) Reset()         { *m = CMsgGCItemCustomizationNotification{} }
func (m *CMsgGCItemCustomizationNotification) String() string { return proto.CompactTextString(m) }
func (*CMsgGCItemCustomizationNotification) ProtoMessage()    {}
func (*CMsgGCItemCustomizationNotification) Descriptor() ([]byte, []int) {
	return fileDescriptor_econ_gcmessages_4518094b2be748a8, []int{3}
}
func (m *CMsgGCItemCustomizationNotification) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgGCItemCustomizationNotification.Unmarshal(m, b)
}
func (m *CMsgGCItemCustomizationNotification) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgGCItemCustomizationNotification.Marshal(b, m, deterministic)
}
func (dst *CMsgGCItemCustomizationNotification) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgGCItemCustomizationNotification.Merge(dst, src)
}
func (m *CMsgGCItemCustomizationNotification) XXX_Size() int {
	return xxx_messageInfo_CMsgGCItemCustomizationNotification.Size(m)
}
func (m *CMsgGCItemCustomizationNotification) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgGCItemCustomizationNotification.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgGCItemCustomizationNotification proto.InternalMessageInfo

func (m *CMsgGCItemCustomizationNotification) GetItemId() []uint64 {
	if m != nil {
		return m.ItemId
	}
	return nil
}

func (m *CMsgGCItemCustomizationNotification) GetRequest() uint32 {
	if m != nil && m.Request != nil {
		return *m.Request
	}
	return 0
}

func init() {
	proto.RegisterType((*CMsgGCGiftedItems)(nil), "CMsgGCGiftedItems")
	proto.RegisterType((*CMsgApplyAutograph)(nil), "CMsgApplyAutograph")
	proto.RegisterType((*CMsgGCUserTrackTimePlayedConsecutively)(nil), "CMsgGCUserTrackTimePlayedConsecutively")
	proto.RegisterType((*CMsgGCItemCustomizationNotification)(nil), "CMsgGCItemCustomizationNotification")
	proto.RegisterEnum("EGCItemMsg", EGCItemMsg_name, EGCItemMsg_value)
	proto.RegisterEnum("EGCMsgResponse", EGCMsgResponse_name, EGCMsgResponse_value)
	proto.RegisterEnum("EUnlockStyle", EUnlockStyle_name, EUnlockStyle_value)
}

func init() {
	proto.RegisterFile("econ_gcmessages.proto", fileDescriptor_econ_gcmessages_4518094b2be748a8)
}

var fileDescriptor_econ_gcmessages_4518094b2be748a8 = []byte{
	// 2349 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x58, 0x67, 0x70, 0x1b, 0xc7,
	0xf5, 0x37, 0x55, 0x0c, 0x78, 0x49, 0x5a, 0xab, 0x85, 0x69, 0xd3, 0x72, 0xa3, 0x29, 0x5b, 0x7f,
	0x89, 0xb6, 0xc4, 0xbf, 0xc7, 0x33, 0xfe, 0x98, 0x19, 0x10, 0x80, 0x18, 0x8e, 0x48, 0x09, 0x06,
	0x40, 0x29, 0x93, 0x2f, 0x98, 0xe5, 0xdd, 0x03, 0xb0, 0xc1, 0x61, 0xf7, 0xb4, 0xbb, 0xc7, 0xe2,
	0x4f, 0x4e, 0x32, 0x93, 0xde, 0xdb, 0x4c, 0x26, 0xbd, 0xd8, 0x89, 0x9d, 0xe2, 0xf4, 0xde, 0xec,
	0x49, 0xef, 0xb6, 0xe3, 0x54, 0x3b, 0x76, 0xba, 0x95, 0xea, 0xf4, 0x5e, 0x66, 0xef, 0x70, 0x87,
	0x5d, 0x10, 0xd4, 0x37, 0xdc, 0xbe, 0xdf, 0xbd, 0xf7, 0x7b, 0x75, 0xdf, 0x01, 0x4d, 0x81, 0x27,
	0x78, 0xb3, 0xed, 0xf5, 0x40, 0x29, 0xda, 0x06, 0x75, 0x2c, 0x94, 0x42, 0x8b, 0x03, 0x05, 0xa5,
	0x81, 0xf6, 0xdc, 0xc3, 0xd9, 0x27, 0xc6, 0xd0, 0xfe, 0xd2, 0x8a, 0x6a, 0x2f, 0x96, 0x16, 0x59,
	0x4b, 0x83, 0xbf, 0xa4, 0xa1, 0xa7, 0xc8, 0x95, 0xe8, 0x22, 0xea, 0x79, 0x22, 0xe2, 0x9a, 0xf9,
	0xd3, 0x63, 0x33, 0x63, 0x87, 0x27, 0x6b, 0x83, 0x03, 0x32, 0x8b, 0x26, 0xda, 0xac, 0xa5, 0x7d,
	0x68, 0x31, 0xee, 0xc3, 0xe6, 0xf4, 0xae, 0x18, 0xe0, 0x9c, 0x91, 0x1b, 0x11, 0xe9, 0xd1, 0xcd,
	0xa6, 0x39, 0x53, 0xcd, 0x50, 0x28, 0xc5, 0xd6, 0x02, 0x98, 0xde, 0x1d, 0x23, 0x71, 0x8f, 0x6e,
	0x1a, 0x6b, 0xaa, 0xda, 0x3f, 0x27, 0xb7, 0xa0, 0xcb, 0x78, 0xd4, 0x6b, 0x42, 0xc0, 0xda, 0xe6,
	0xb9, 0x29, 0xc1, 0x63, 0x21, 0x03, 0xae, 0xd5, 0xf4, 0x9e, 0xf8, 0x95, 0x29, 0x1e, 0xf5, 0x2a,
	0x7d, 0x69, 0x2d, 0x13, 0x92, 0x9b, 0xd1, 0xd4, 0x00, 0xda, 0xcc, 0x18, 0xaa, 0xe9, 0xbd, 0x33,
	0xbb, 0x0f, 0x4f, 0xd6, 0x2e, 0x19, 0x08, 0x8b, 0x99, 0x6c, 0x76, 0x0d, 0x11, 0xe3, 0x71, 0x31,
	0x0c, 0x83, 0xad, 0x62, 0xa4, 0x45, 0x5b, 0xd2, 0xb0, 0x43, 0xe6, 0xd0, 0x7e, 0x9a, 0x3e, 0x34,
	0x99, 0x86, 0x5e, 0xb3, 0xef, 0xfa, 0x9e, 0xda, 0xbe, 0x4c, 0x60, 0xa2, 0xb3, 0xe4, 0x93, 0x19,
	0x34, 0x91, 0x20, 0xfa, 0xb0, 0x5d, 0x31, 0x0c, 0x99, 0xc7, 0x04, 0x31, 0xfb, 0x24, 0x74, 0x28,
	0x89, 0xea, 0xaa, 0x02, 0xd9, 0x90, 0xd4, 0xeb, 0x36, 0x58, 0x0f, 0xaa, 0x01, 0xdd, 0x02, 0xbf,
	0x24, 0xb8, 0x02, 0x2f, 0xd2, 0x6c, 0x1d, 0x82, 0x2d, 0x72, 0x09, 0xda, 0xab, 0x34, 0xd5, 0xd0,
	0x0f, 0x73, 0xf2, 0x30, 0xfb, 0x14, 0x74, 0x30, 0x79, 0xdf, 0xe8, 0x2b, 0x45, 0x4a, 0x8b, 0x1e,
	0xbb, 0x8d, 0x6a, 0x26, 0xf8, 0x49, 0xa1, 0x59, 0x8b, 0x79, 0xf1, 0x6f, 0x72, 0x19, 0xca, 0x0d,
	0xa8, 0xee, 0x3e, 0xbc, 0xa7, 0x76, 0x21, 0x4b, 0x18, 0x4e, 0xa3, 0x9c, 0x84, 0xb3, 0x11, 0x28,
	0xdd, 0xcf, 0x4e, 0xfa, 0x38, 0x77, 0xcf, 0x21, 0x84, 0x2a, 0x89, 0xde, 0x15, 0xd5, 0x26, 0xfb,
	0xd1, 0x44, 0xb7, 0x59, 0x89, 0x4d, 0x2d, 0x50, 0x05, 0xf8, 0xf1, 0x1c, 0xb9, 0x12, 0x5d, 0x96,
	0x1e, 0xd5, 0x41, 0x1b, 0x60, 0x55, 0x28, 0x66, 0xec, 0xe1, 0x73, 0x39, 0x42, 0xd0, 0x64, 0x2a,
	0x2d, 0x49, 0xda, 0xd2, 0xf8, 0x97, 0x39, 0x72, 0x00, 0x4d, 0x39, 0x67, 0x35, 0x50, 0xa1, 0x71,
	0x12, 0xff, 0x2a, 0x47, 0x0a, 0xe8, 0xe2, 0x54, 0x56, 0x86, 0x00, 0x34, 0xe0, 0x5f, 0xe7, 0xc8,
	0x75, 0xe8, 0x9a, 0xf4, 0xf0, 0x34, 0x48, 0xd6, 0xda, 0x2a, 0x51, 0xaf, 0x03, 0xf5, 0x68, 0x4d,
	0x79, 0x92, 0x85, 0xb1, 0xa9, 0xdf, 0xe4, 0xc8, 0x14, 0xc2, 0x29, 0xea, 0x24, 0xed, 0x81, 0x61,
	0x82, 0x7f, 0x9b, 0x23, 0xd3, 0xa8, 0x90, 0x1e, 0xaf, 0xf2, 0x40, 0x78, 0xdd, 0x92, 0xa4, 0x1a,
	0xf0, 0xef, 0x72, 0x64, 0x06, 0x5d, 0x31, 0x42, 0x92, 0xb1, 0x79, 0x22, 0x47, 0x2e, 0x45, 0xfb,
	0x53, 0x44, 0x95, 0x32, 0x1e, 0x7b, 0x87, 0x7f, 0x9f, 0x23, 0x57, 0xa3, 0xcb, 0xb7, 0x9d, 0x67,
	0xef, 0xfd, 0x21, 0x47, 0x66, 0xd1, 0x55, 0xa9, 0x7c, 0x51, 0x04, 0x3e, 0xf0, 0x33, 0x12, 0xb8,
	0xd7, 0x59, 0x90, 0x82, 0xfa, 0x1e, 0x55, 0x1a, 0xff, 0xd1, 0xe1, 0xb5, 0x72, 0xaa, 0x51, 0xae,
	0x25, 0x01, 0xc7, 0x7f, 0x72, 0x78, 0x59, 0x92, 0x4c, 0xff, 0x9f, 0x73, 0xe4, 0xff, 0xd0, 0x6c,
	0x8a, 0x28, 0xfa, 0x71, 0x13, 0x36, 0x44, 0x5d, 0x78, 0x5d, 0xd0, 0xcd, 0x72, 0xa5, 0x5a, 0xab,
	0x94, 0x8a, 0x8d, 0x4a, 0x19, 0xff, 0x25, 0x47, 0xe6, 0xd1, 0xdc, 0x0e, 0xc0, 0x54, 0x9d, 0xfd,
	0xc2, 0x5f, 0x73, 0xe4, 0x06, 0x74, 0xc8, 0x7a, 0x21, 0x81, 0x36, 0x84, 0xc9, 0xb5, 0x79, 0xd9,
	0x06, 0xff, 0x6d, 0x98, 0x46, 0x0a, 0x1e, 0x06, 0xfe, 0x7d, 0x98, 0x86, 0x0d, 0x1c, 0x45, 0xe3,
	0x1f, 0x39, 0x72, 0x39, 0xba, 0xc4, 0xce, 0x65, 0x6a, 0x1f, 0xff, 0x33, 0x47, 0xae, 0x45, 0x57,
	0x8e, 0x12, 0x65, 0xe1, 0xf9, 0x57, 0x8e, 0x1c, 0x46, 0x07, 0x53, 0x48, 0x0d, 0x7a, 0x62, 0x1d,
	0x12, 0x8b, 0xc3, 0xc4, 0xfe, 0x9d, 0x23, 0xff, 0x8f, 0x6e, 0xd8, 0x09, 0x39, 0x8a, 0xd9, 0x7f,
	0x1c, 0xf3, 0x69, 0xa3, 0xc5, 0xf6, 0x1b, 0xb0, 0xa9, 0x23, 0x09, 0xf8, 0xbf, 0x39, 0x72, 0x04,
	0x5d, 0x77, 0x3e, 0x48, 0xc6, 0xf4, 0xf6, 0x3c, 0xb9, 0x02, 0x5d, 0x9a, 0x95, 0x60, 0xea, 0x47,
	0x52, 0x07, 0x4f, 0xcf, 0xdb, 0x9d, 0xb5, 0x3a, 0xe4, 0xe4, 0x33, 0xf2, 0xe4, 0x20, 0xba, 0x3a,
	0xab, 0xb1, 0xc1, 0x2c, 0xb6, 0xd9, 0x3e, 0xd3, 0xd1, 0x9f, 0xf8, 0x67, 0x40, 0x26, 0x6c, 0xf8,
	0x59, 0x8e, 0xfe, 0x81, 0x30, 0xae, 0x67, 0xfc, 0xec, 0xbc, 0x9d, 0x02, 0xa3, 0xff, 0x8c, 0xa4,
	0x61, 0x9c, 0x82, 0xe7, 0xe4, 0xed, 0x18, 0xd8, 0xa2, 0x8c, 0xdd, 0x73, 0xf3, 0x76, 0x75, 0x97,
	0x21, 0x60, 0xeb, 0x20, 0x0d, 0x12, 0x3f, 0x2f, 0x4f, 0xae, 0x47, 0x33, 0x23, 0x24, 0xe9, 0xbb,
	0x8b, 0xe6, 0x00, 0x3f, 0x3f, 0x6f, 0xe7, 0x70, 0x04, 0xac, 0x06, 0x1e, 0xc4, 0xc8, 0x17, 0xe4,
	0xed, 0x66, 0x5c, 0xe5, 0x1b, 0x92, 0x86, 0x09, 0x30, 0x09, 0xe3, 0x0b, 0xf3, 0xe4, 0x1a, 0x74,
	0x60, 0x94, 0xbc, 0xcf, 0xf5, 0x45, 0x8e, 0xa7, 0xfd, 0x09, 0x56, 0xd7, 0x5b, 0x01, 0xe0, 0x17,
	0xbb, 0xba, 0x15, 0xf8, 0xa5, 0x80, 0xb2, 0x5e, 0x49, 0xf8, 0x49, 0x31, 0xbe, 0x24, 0x6f, 0x0f,
	0x88, 0xba, 0x90, 0xf1, 0xbb, 0x0a, 0xbf, 0x34, 0x4f, 0xe6, 0xd0, 0xf5, 0xe9, 0x79, 0xb3, 0x06,
	0xeb, 0x22, 0x58, 0x67, 0xbc, 0xbd, 0x2c, 0x84, 0x5e, 0x66, 0xca, 0xe9, 0xd1, 0x97, 0xe5, 0xed,
	0x71, 0xb8, 0x2c, 0x44, 0x37, 0x0a, 0xfb, 0x97, 0x0f, 0x7e, 0x79, 0xde, 0x1e, 0x24, 0x8e, 0x2c,
	0xa3, 0xff, 0x0a, 0x87, 0xa3, 0x83, 0x89, 0xd3, 0xfc, 0xca, 0x3c, 0x39, 0x84, 0xae, 0xdd, 0x51,
	0x9e, 0xe9, 0x79, 0x55, 0x9e, 0x5c, 0x85, 0xa6, 0x33, 0x5f, 0x43, 0x9f, 0xea, 0xd8, 0xc9, 0xba,
	0xd7, 0x81, 0x1e, 0xc5, 0xaf, 0xce, 0xdb, 0x53, 0x29, 0xa9, 0x96, 0xa4, 0xb6, 0xd3, 0xba, 0x7f,
	0x4d, 0x7e, 0x7b, 0xdb, 0x39, 0x88, 0xcc, 0xd4, 0x6b, 0x1d, 0x53, 0x09, 0x72, 0x85, 0x76, 0x41,
	0xaa, 0x15, 0x2a, 0xbb, 0xf8, 0x75, 0x4e, 0x89, 0x0c, 0x8b, 0x33, 0x2d, 0xaf, 0x77, 0x3a, 0x20,
	0x81, 0xad, 0x72, 0x76, 0x36, 0x82, 0xf8, 0x4e, 0x59, 0x32, 0x6b, 0x05, 0x7e, 0x43, 0xde, 0x1e,
	0x68, 0xa3, 0x41, 0x99, 0xc6, 0x37, 0x3a, 0xed, 0x52, 0xa7, 0x9b, 0x9b, 0x5b, 0x83, 0x81, 0xfd,
	0x26, 0xa7, 0xea, 0x17, 0xa8, 0xd7, 0x0d, 0xa9, 0xd7, 0x35, 0x39, 0x3f, 0xce, 0x38, 0x53, 0x1d,
	0xf0, 0xf1, 0x9b, 0xf3, 0xf6, 0x45, 0x55, 0xf4, 0x9f, 0x16, 0xa9, 0xb8, 0x20, 0x2a, 0x67, 0x23,
	0x16, 0x86, 0xe0, 0xd7, 0xcd, 0x55, 0x8d, 0xdf, 0xe2, 0xf4, 0x46, 0x49, 0x04, 0x01, 0x78, 0xc9,
	0xbd, 0x72, 0x47, 0xde, 0x9e, 0x1c, 0xe6, 0xa8, 0xe8, 0x75, 0xb9, 0xd8, 0x08, 0xc0, 0x6f, 0x83,
	0xdf, 0xb4, 0xab, 0xe6, 0x4e, 0xa7, 0x68, 0x9b, 0x35, 0x08, 0x85, 0xd4, 0xc5, 0xb5, 0x48, 0x01,
	0xbe, 0xcb, 0x21, 0x6a, 0x8b, 0x32, 0x47, 0xef, 0xce, 0x0f, 0x0f, 0xd1, 0x78, 0x2a, 0x58, 0x9b,
	0x02, 0x7e, 0xa7, 0x13, 0xdd, 0x78, 0xf7, 0x31, 0x7b, 0x48, 0xd4, 0xa3, 0x6b, 0x01, 0x54, 0x5a,
	0x2d, 0xf0, 0xb4, 0xc2, 0xef, 0x72, 0x8a, 0xc2, 0x92, 0x6f, 0x76, 0x68, 0xa4, 0x34, 0xf8, 0xf8,
	0xdd, 0x4e, 0x75, 0xd6, 0x3b, 0x62, 0x23, 0xee, 0x90, 0x2a, 0xf3, 0xba, 0xe0, 0xaf, 0x86, 0xf8,
	0x1e, 0xa7, 0x3a, 0x4b, 0x81, 0xd9, 0xbd, 0xca, 0x4c, 0x85, 0x01, 0xdd, 0x72, 0xe8, 0xbc, 0xc7,
	0x29, 0x99, 0x98, 0x4e, 0x5d, 0x4b, 0xca, 0xdb, 0x50, 0xa5, 0x52, 0xe3, 0xf7, 0x3a, 0x91, 0x6b,
	0x2e, 0x71, 0x4f, 0x42, 0x0f, 0xb8, 0x3e, 0xc1, 0x82, 0xa0, 0x64, 0x4a, 0xbd, 0xa8, 0xb5, 0x64,
	0x6b, 0x91, 0x06, 0xfc, 0x3e, 0xa7, 0x4c, 0x47, 0x40, 0xb3, 0x28, 0xbd, 0xdf, 0xf1, 0x2e, 0xb6,
	0x59, 0x05, 0xce, 0x29, 0xd7, 0xab, 0x61, 0x5b, 0x52, 0x1f, 0xf0, 0x07, 0x1c, 0x56, 0x43, 0xcb,
	0x8f, 0xc2, 0x1f, 0x74, 0x26, 0x6c, 0xac, 0xa0, 0xd2, 0x6e, 0x57, 0x94, 0x02, 0xee, 0x01, 0xfe,
	0x90, 0x13, 0x61, 0x93, 0x84, 0x81, 0x30, 0xe3, 0xf0, 0x61, 0x27, 0xcf, 0xf1, 0x68, 0x3e, 0xc1,
	0x92, 0x6a, 0xf9, 0x88, 0x63, 0x3c, 0x15, 0x65, 0x17, 0xe5, 0x47, 0x9d, 0x1c, 0xdb, 0x6f, 0x66,
	0xca, 0x3f, 0xe6, 0x54, 0xa2, 0x75, 0x87, 0xe0, 0x8f, 0xbb, 0x77, 0x4f, 0xbc, 0x1b, 0x0d, 0xc6,
	0xe2, 0x27, 0x9c, 0x3a, 0x1f, 0x92, 0x66, 0xda, 0x3f, 0xe9, 0x50, 0xef, 0xa7, 0xcc, 0xe4, 0x5d,
	0xe2, 0x4f, 0x39, 0xd4, 0x87, 0x0b, 0x1d, 0x7f, 0xda, 0x9d, 0xc8, 0x9a, 0xea, 0x86, 0xa4, 0xdd,
	0xfa, 0x06, 0x0d, 0xf1, 0x67, 0xf2, 0xe4, 0x28, 0x3a, 0x6c, 0x4d, 0xe4, 0xf3, 0x2e, 0xcb, 0xf8,
	0x5e, 0x67, 0x10, 0x9f, 0x77, 0x37, 0xc6, 0xf7, 0x39, 0xd1, 0x68, 0x48, 0xea, 0x33, 0xde, 0x8e,
	0x77, 0xdc, 0x87, 0xc7, 0xed, 0xea, 0xea, 0x4b, 0x9a, 0x4b, 0x9c, 0x69, 0x46, 0x35, 0x98, 0x67,
	0x48, 0x6f, 0x9b, 0x47, 0xc6, 0x6d, 0x83, 0x3b, 0x40, 0xfb, 0x01, 0xfa, 0xe1, 0xb8, 0x9d, 0xa1,
	0x14, 0x5b, 0xd7, 0x54, 0xea, 0x3a, 0x28, 0x65, 0x38, 0x3d, 0x3a, 0x6e, 0xe7, 0x21, 0x83, 0x24,
	0x85, 0x86, 0x1f, 0x1b, 0xb7, 0xaf, 0xb6, 0x54, 0x3a, 0xb8, 0xc9, 0xf1, 0x8f, 0xc6, 0xed, 0x44,
	0xa5, 0x80, 0x64, 0xb6, 0xc7, 0x5c, 0x96, 0x78, 0x4b, 0xe0, 0x1f, 0x8f, 0xe6, 0x61, 0x36, 0x44,
	0xf3, 0x13, 0x94, 0xc2, 0x3f, 0x19, 0xb7, 0xdb, 0x74, 0x60, 0xa9, 0x2f, 0xcf, 0x5c, 0xfa, 0xe9,
	0xb8, 0x7d, 0x61, 0x0d, 0x54, 0xc5, 0xde, 0x94, 0x02, 0xa1, 0xc0, 0xc7, 0x3f, 0x1b, 0x89, 0x29,
	0x51, 0xee, 0x41, 0x90, 0xfa, 0xfd, 0xf3, 0x91, 0x94, 0x62, 0xca, 0xa5, 0x0e, 0xd5, 0x2b, 0xaa,
	0x8d, 0x7f, 0x31, 0x12, 0x52, 0x12, 0xbc, 0xc5, 0x64, 0xef, 0x54, 0xab, 0x05, 0x12, 0x3f, 0x3e,
	0x6e, 0x2f, 0xa8, 0x8e, 0x96, 0xc6, 0x56, 0xc8, 0x78, 0x3b, 0xd5, 0x75, 0xce, 0x49, 0x70, 0x1d,
	0xe4, 0x3a, 0xc8, 0x05, 0x29, 0x36, 0x14, 0xc8, 0xe6, 0x71, 0xba, 0x2e, 0x24, 0xd3, 0x90, 0x9c,
	0xe2, 0x7b, 0x27, 0xec, 0x04, 0xbb, 0xd0, 0x85, 0x80, 0x7a, 0xdd, 0x80, 0x29, 0xdd, 0xc7, 0xde,
	0x37, 0xe1, 0x0c, 0xbf, 0xf8, 0xb0, 0x06, 0x5c, 0xd3, 0x40, 0xc5, 0x75, 0xf5, 0xd6, 0x49, 0x7b,
	0x02, 0xc4, 0xb3, 0x43, 0xc2, 0x3a, 0x83, 0x8d, 0x52, 0x07, 0xbc, 0xae, 0xa9, 0xfb, 0x48, 0xe1,
	0x3b, 0x26, 0xed, 0xd0, 0x5b, 0xa0, 0x44, 0x9e, 0x85, 0xfe, 0xce, 0x49, 0xbb, 0x18, 0x2c, 0x5c,
	0x5a, 0x9a, 0x6f, 0x9b, 0xb4, 0xa3, 0xb1, 0x1d, 0x90, 0x69, 0x7a, 0xfb, 0xa4, 0x4d, 0xdb, 0x02,
	0x56, 0x36, 0x43, 0x26, 0x01, 0xdf, 0x35, 0x39, 0xdc, 0x54, 0x8e, 0xdc, 0x69, 0xaa, 0xbb, 0x27,
	0xc9, 0x31, 0x74, 0x64, 0x04, 0xd6, 0xfc, 0x5c, 0x10, 0x51, 0xbb, 0xa3, 0x1d, 0xfc, 0x3b, 0x1c,
	0x2f, 0xca, 0xb0, 0xde, 0x3c, 0x99, 0x60, 0x53, 0x2f, 0xee, 0xdf, 0x67, 0x7b, 0xb1, 0x1d, 0x90,
	0x79, 0xf1, 0xc0, 0x3e, 0xbb, 0x3e, 0x0c, 0x30, 0x9d, 0x81, 0x65, 0x29, 0x92, 0x45, 0xf6, 0xc1,
	0x7d, 0xce, 0xf8, 0xd6, 0x42, 0xc2, 0x22, 0x68, 0x33, 0x54, 0xca, 0x54, 0x53, 0xfc, 0xd9, 0x82,
	0xbd, 0x87, 0x0c, 0x8b, 0x33, 0x43, 0x9f, 0x2b, 0x38, 0xc5, 0x63, 0x60, 0xd5, 0x48, 0x7a, 0x1d,
	0x33, 0x88, 0x39, 0x73, 0x76, 0xbd, 0xcf, 0x17, 0xc8, 0x4d, 0xe8, 0xc6, 0x1d, 0xa1, 0xa3, 0x3e,
	0x38, 0xbe, 0x50, 0xb0, 0xbb, 0xc5, 0x79, 0xe5, 0x38, 0xe3, 0x34, 0x60, 0xb7, 0x01, 0xfe, 0x62,
	0xc1, 0xa9, 0xc9, 0x51, 0x98, 0x8c, 0xed, 0x97, 0x0a, 0xf6, 0xa5, 0xe6, 0x60, 0x93, 0x16, 0xc4,
	0x5f, 0x2e, 0xd8, 0x17, 0xe4, 0x08, 0x44, 0xa6, 0xeb, 0x2b, 0x3b, 0x73, 0xbb, 0x35, 0x02, 0xb9,
	0xd5, 0xd8, 0xe4, 0xf8, 0xab, 0x3b, 0x73, 0x4b, 0x31, 0x99, 0xbe, 0xaf, 0x15, 0x9c, 0x7e, 0x19,
	0x0e, 0x0f, 0xfe, 0x7a, 0xc1, 0x6e, 0x85, 0x1d, 0xc3, 0x87, 0xbf, 0xe1, 0xf0, 0x5a, 0xa0, 0x9c,
	0x83, 0x7f, 0x46, 0x48, 0xdf, 0xac, 0xde, 0x69, 0x1d, 0x7d, 0xb3, 0x60, 0xf7, 0xde, 0x30, 0xa6,
	0xaf, 0xe8, 0x7e, 0x27, 0x14, 0x0d, 0x31, 0x0c, 0x1c, 0x6c, 0x87, 0x0f, 0x38, 0xd4, 0xb6, 0x23,
	0x93, 0x99, 0xeb, 0xe3, 0x07, 0x1d, 0x17, 0x0d, 0xae, 0xcc, 0xa4, 0xde, 0xaa, 0x97, 0x4f, 0xc5,
	0xff, 0x68, 0xe0, 0x6f, 0x6d, 0xd3, 0x13, 0xcb, 0x57, 0xa2, 0x40, 0xb3, 0x30, 0x80, 0x0c, 0xf7,
	0x90, 0xe3, 0xa2, 0xc1, 0x25, 0x16, 0xea, 0xb7, 0x2e, 0x9f, 0x80, 0xad, 0xd3, 0x34, 0x88, 0x00,
	0x7f, 0xdb, 0x49, 0xb5, 0xc1, 0x2c, 0xa9, 0x86, 0x8c, 0xf7, 0xb2, 0xfe, 0x80, 0xfa, 0xce, 0x36,
	0xff, 0x86, 0x10, 0x59, 0x24, 0xbe, 0xbb, 0x3d, 0x12, 0xa9, 0xef, 0xe6, 0xc6, 0x15, 0x01, 0x94,
	0x44, 0xaf, 0x47, 0xb9, 0x8f, 0xbf, 0x57, 0xb0, 0xfb, 0x2e, 0x51, 0x73, 0x1a, 0xa4, 0x19, 0xeb,
	0x69, 0x10, 0xbe, 0x5f, 0xb0, 0xf7, 0x6c, 0xf7, 0x7f, 0x35, 0xfc, 0x03, 0xa7, 0xeb, 0x8c, 0xa5,
	0x33, 0xb0, 0x56, 0xac, 0x2e, 0xf5, 0xbf, 0x59, 0x4a, 0x1d, 0xb3, 0xf4, 0xf9, 0xf8, 0x61, 0xc7,
	0x4c, 0x3f, 0xab, 0x45, 0xce, 0x45, 0xc4, 0xbd, 0x78, 0x9f, 0x53, 0xf8, 0x11, 0xa7, 0x31, 0x47,
	0x41, 0x06, 0x57, 0x71, 0xc1, 0xfd, 0xe4, 0x88, 0xa1, 0x55, 0xaa, 0x54, 0xd8, 0xff, 0xa6, 0x5b,
	0x94, 0x94, 0x6b, 0xfc, 0xa8, 0x63, 0x34, 0xd9, 0x56, 0x87, 0x7c, 0x7b, 0xac, 0x30, 0xf7, 0xd0,
	0x2e, 0x74, 0x71, 0x65, 0xb1, 0xb4, 0xa2, 0xda, 0xa9, 0x7e, 0x72, 0x29, 0x22, 0xdd, 0xa6, 0x7b,
	0x76, 0xea, 0x04, 0xbe, 0x80, 0x1c, 0x88, 0xc3, 0xe0, 0x9c, 0x97, 0x81, 0x33, 0xf0, 0xf1, 0x18,
	0xb9, 0x26, 0xce, 0x9d, 0x23, 0x4b, 0xa2, 0x59, 0x91, 0x52, 0x48, 0xbc, 0x8b, 0x5c, 0x11, 0x6f,
	0x06, 0x0e, 0xc0, 0xec, 0x41, 0x22, 0xd2, 0x78, 0xf7, 0x28, 0xe1, 0x12, 0x5f, 0xa7, 0x01, 0xf3,
	0xf1, 0x9e, 0x51, 0xc2, 0x93, 0x62, 0x85, 0x6a, 0xaf, 0x83, 0xf7, 0x92, 0x99, 0xd8, 0x43, 0x47,
	0xb8, 0xca, 0xcd, 0x76, 0xc6, 0x13, 0xc3, 0x17, 0x8e, 0x62, 0x76, 0x52, 0xe8, 0x65, 0xd1, 0x6e,
	0x83, 0x7f, 0x8a, 0xe3, 0x9c, 0xed, 0xd6, 0x71, 0xca, 0x02, 0xf0, 0x1b, 0xa2, 0x24, 0xc1, 0x7c,
	0xfc, 0x98, 0xcd, 0x6e, 0x2a, 0x95, 0x2d, 0xb3, 0x1e, 0xd3, 0x95, 0x4d, 0x0f, 0xc0, 0x07, 0x1f,
	0x5f, 0x44, 0xae, 0x8a, 0x3b, 0x23, 0x16, 0x99, 0x6a, 0x62, 0x7a, 0x95, 0xb7, 0xfa, 0xf3, 0xcb,
	0xc7, 0x68, 0xee, 0xdc, 0x18, 0x9a, 0xa8, 0x24, 0xdb, 0x66, 0xbc, 0x69, 0x26, 0x6e, 0x58, 0x07,
	0xcd, 0x7a, 0xe4, 0xf5, 0x95, 0x5d, 0x90, 0x90, 0xb4, 0x85, 0x09, 0x93, 0x66, 0xd5, 0x7c, 0x88,
	0x9e, 0xc5, 0x63, 0xe4, 0xa0, 0xd9, 0x8c, 0x46, 0x00, 0x4a, 0x94, 0xeb, 0x62, 0xab, 0x25, 0xa4,
	0x8f, 0x77, 0x9d, 0x17, 0x94, 0x70, 0xc4, 0xbb, 0xc9, 0x21, 0x73, 0x21, 0xed, 0x00, 0x5a, 0x16,
	0x5e, 0x37, 0x69, 0xd9, 0x3d, 0xe4, 0x88, 0x19, 0x84, 0xe7, 0xb5, 0x98, 0x7c, 0xa6, 0xe0, 0xbd,
	0x0b, 0xb7, 0x3c, 0x79, 0xec, 0xa9, 0xf3, 0x6d, 0xa6, 0x3b, 0xd1, 0xda, 0x31, 0x4f, 0xf4, 0xe6,
	0x6f, 0xba, 0xb9, 0x3b, 0xdf, 0x16, 0x47, 0xe3, 0x7f, 0xe4, 0x8f, 0x4a, 0x50, 0x22, 0x92, 0x1e,
	0xa8, 0xf9, 0xf8, 0x3f, 0xf9, 0xb5, 0xa8, 0x35, 0xef, 0xa9, 0xb6, 0xb8, 0x7d, 0xec, 0x82, 0xff,
	0x05, 0x00, 0x00, 0xff, 0xff, 0x50, 0xae, 0x11, 0x35, 0xcb, 0x17, 0x00, 0x00,
}
