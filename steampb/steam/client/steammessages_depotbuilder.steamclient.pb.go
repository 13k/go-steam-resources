// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.21.0
// 	protoc        v3.11.2
// source: steam/client/steammessages_depotbuilder.steamclient.proto

package client

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type CContentBuilder_InitDepotBuild_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Appid          *uint32 `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	Depotid        *uint32 `protobuf:"varint,2,opt,name=depotid" json:"depotid,omitempty"`
	WorkshopItemid *uint64 `protobuf:"varint,3,opt,name=workshop_itemid,json=workshopItemid" json:"workshop_itemid,omitempty"`
	ForLocalCs     *bool   `protobuf:"varint,4,opt,name=for_local_cs,json=forLocalCs" json:"for_local_cs,omitempty"`
}

func (x *CContentBuilder_InitDepotBuild_Request) Reset() {
	*x = CContentBuilder_InitDepotBuild_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_client_steammessages_depotbuilder_steamclient_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CContentBuilder_InitDepotBuild_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CContentBuilder_InitDepotBuild_Request) ProtoMessage() {}

func (x *CContentBuilder_InitDepotBuild_Request) ProtoReflect() protoreflect.Message {
	mi := &file_steam_client_steammessages_depotbuilder_steamclient_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CContentBuilder_InitDepotBuild_Request.ProtoReflect.Descriptor instead.
func (*CContentBuilder_InitDepotBuild_Request) Descriptor() ([]byte, []int) {
	return file_steam_client_steammessages_depotbuilder_steamclient_proto_rawDescGZIP(), []int{0}
}

func (x *CContentBuilder_InitDepotBuild_Request) GetAppid() uint32 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

func (x *CContentBuilder_InitDepotBuild_Request) GetDepotid() uint32 {
	if x != nil && x.Depotid != nil {
		return *x.Depotid
	}
	return 0
}

func (x *CContentBuilder_InitDepotBuild_Request) GetWorkshopItemid() uint64 {
	if x != nil && x.WorkshopItemid != nil {
		return *x.WorkshopItemid
	}
	return 0
}

func (x *CContentBuilder_InitDepotBuild_Request) GetForLocalCs() bool {
	if x != nil && x.ForLocalCs != nil {
		return *x.ForLocalCs
	}
	return false
}

type CContentBuilder_InitDepotBuild_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaselineManifestid *uint64 `protobuf:"varint,1,opt,name=baseline_manifestid,json=baselineManifestid" json:"baseline_manifestid,omitempty"`
	ChunkSize          *uint32 `protobuf:"varint,2,opt,name=chunk_size,json=chunkSize" json:"chunk_size,omitempty"`
	AesKey             []byte  `protobuf:"bytes,3,opt,name=aes_key,json=aesKey" json:"aes_key,omitempty"`
	RsaKey             []byte  `protobuf:"bytes,4,opt,name=rsa_key,json=rsaKey" json:"rsa_key,omitempty"`
	UrlHost            *string `protobuf:"bytes,5,opt,name=url_host,json=urlHost" json:"url_host,omitempty"`
}

func (x *CContentBuilder_InitDepotBuild_Response) Reset() {
	*x = CContentBuilder_InitDepotBuild_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_client_steammessages_depotbuilder_steamclient_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CContentBuilder_InitDepotBuild_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CContentBuilder_InitDepotBuild_Response) ProtoMessage() {}

func (x *CContentBuilder_InitDepotBuild_Response) ProtoReflect() protoreflect.Message {
	mi := &file_steam_client_steammessages_depotbuilder_steamclient_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CContentBuilder_InitDepotBuild_Response.ProtoReflect.Descriptor instead.
func (*CContentBuilder_InitDepotBuild_Response) Descriptor() ([]byte, []int) {
	return file_steam_client_steammessages_depotbuilder_steamclient_proto_rawDescGZIP(), []int{1}
}

func (x *CContentBuilder_InitDepotBuild_Response) GetBaselineManifestid() uint64 {
	if x != nil && x.BaselineManifestid != nil {
		return *x.BaselineManifestid
	}
	return 0
}

func (x *CContentBuilder_InitDepotBuild_Response) GetChunkSize() uint32 {
	if x != nil && x.ChunkSize != nil {
		return *x.ChunkSize
	}
	return 0
}

func (x *CContentBuilder_InitDepotBuild_Response) GetAesKey() []byte {
	if x != nil {
		return x.AesKey
	}
	return nil
}

func (x *CContentBuilder_InitDepotBuild_Response) GetRsaKey() []byte {
	if x != nil {
		return x.RsaKey
	}
	return nil
}

func (x *CContentBuilder_InitDepotBuild_Response) GetUrlHost() string {
	if x != nil && x.UrlHost != nil {
		return *x.UrlHost
	}
	return ""
}

type CContentBuilder_StartDepotUpload_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Appid              *uint32 `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	Depotid            *uint32 `protobuf:"varint,2,opt,name=depotid" json:"depotid,omitempty"`
	WorkshopItemid     *uint64 `protobuf:"varint,3,opt,name=workshop_itemid,json=workshopItemid" json:"workshop_itemid,omitempty"`
	ForLocalCs         *bool   `protobuf:"varint,4,opt,name=for_local_cs,json=forLocalCs" json:"for_local_cs,omitempty"`
	BaselineManifestid *uint64 `protobuf:"varint,5,opt,name=baseline_manifestid,json=baselineManifestid" json:"baseline_manifestid,omitempty"`
	ManifestSize       *uint32 `protobuf:"varint,6,opt,name=manifest_size,json=manifestSize" json:"manifest_size,omitempty"`
}

func (x *CContentBuilder_StartDepotUpload_Request) Reset() {
	*x = CContentBuilder_StartDepotUpload_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_client_steammessages_depotbuilder_steamclient_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CContentBuilder_StartDepotUpload_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CContentBuilder_StartDepotUpload_Request) ProtoMessage() {}

func (x *CContentBuilder_StartDepotUpload_Request) ProtoReflect() protoreflect.Message {
	mi := &file_steam_client_steammessages_depotbuilder_steamclient_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CContentBuilder_StartDepotUpload_Request.ProtoReflect.Descriptor instead.
func (*CContentBuilder_StartDepotUpload_Request) Descriptor() ([]byte, []int) {
	return file_steam_client_steammessages_depotbuilder_steamclient_proto_rawDescGZIP(), []int{2}
}

func (x *CContentBuilder_StartDepotUpload_Request) GetAppid() uint32 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

func (x *CContentBuilder_StartDepotUpload_Request) GetDepotid() uint32 {
	if x != nil && x.Depotid != nil {
		return *x.Depotid
	}
	return 0
}

func (x *CContentBuilder_StartDepotUpload_Request) GetWorkshopItemid() uint64 {
	if x != nil && x.WorkshopItemid != nil {
		return *x.WorkshopItemid
	}
	return 0
}

func (x *CContentBuilder_StartDepotUpload_Request) GetForLocalCs() bool {
	if x != nil && x.ForLocalCs != nil {
		return *x.ForLocalCs
	}
	return false
}

func (x *CContentBuilder_StartDepotUpload_Request) GetBaselineManifestid() uint64 {
	if x != nil && x.BaselineManifestid != nil {
		return *x.BaselineManifestid
	}
	return 0
}

func (x *CContentBuilder_StartDepotUpload_Request) GetManifestSize() uint32 {
	if x != nil && x.ManifestSize != nil {
		return *x.ManifestSize
	}
	return 0
}

type CContentBuilder_StartDepotUpload_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DepotBuildHandle *uint64 `protobuf:"varint,1,opt,name=depot_build_handle,json=depotBuildHandle" json:"depot_build_handle,omitempty"`
}

func (x *CContentBuilder_StartDepotUpload_Response) Reset() {
	*x = CContentBuilder_StartDepotUpload_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_client_steammessages_depotbuilder_steamclient_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CContentBuilder_StartDepotUpload_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CContentBuilder_StartDepotUpload_Response) ProtoMessage() {}

func (x *CContentBuilder_StartDepotUpload_Response) ProtoReflect() protoreflect.Message {
	mi := &file_steam_client_steammessages_depotbuilder_steamclient_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CContentBuilder_StartDepotUpload_Response.ProtoReflect.Descriptor instead.
func (*CContentBuilder_StartDepotUpload_Response) Descriptor() ([]byte, []int) {
	return file_steam_client_steammessages_depotbuilder_steamclient_proto_rawDescGZIP(), []int{3}
}

func (x *CContentBuilder_StartDepotUpload_Response) GetDepotBuildHandle() uint64 {
	if x != nil && x.DepotBuildHandle != nil {
		return *x.DepotBuildHandle
	}
	return 0
}

type CContentBuilder_GetMissingDepotChunks_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Appid            *uint32 `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	DepotBuildHandle *uint64 `protobuf:"varint,2,opt,name=depot_build_handle,json=depotBuildHandle" json:"depot_build_handle,omitempty"`
}

func (x *CContentBuilder_GetMissingDepotChunks_Request) Reset() {
	*x = CContentBuilder_GetMissingDepotChunks_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_client_steammessages_depotbuilder_steamclient_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CContentBuilder_GetMissingDepotChunks_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CContentBuilder_GetMissingDepotChunks_Request) ProtoMessage() {}

func (x *CContentBuilder_GetMissingDepotChunks_Request) ProtoReflect() protoreflect.Message {
	mi := &file_steam_client_steammessages_depotbuilder_steamclient_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CContentBuilder_GetMissingDepotChunks_Request.ProtoReflect.Descriptor instead.
func (*CContentBuilder_GetMissingDepotChunks_Request) Descriptor() ([]byte, []int) {
	return file_steam_client_steammessages_depotbuilder_steamclient_proto_rawDescGZIP(), []int{4}
}

func (x *CContentBuilder_GetMissingDepotChunks_Request) GetAppid() uint32 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

func (x *CContentBuilder_GetMissingDepotChunks_Request) GetDepotBuildHandle() uint64 {
	if x != nil && x.DepotBuildHandle != nil {
		return *x.DepotBuildHandle
	}
	return 0
}

type CContentBuilder_GetMissingDepotChunks_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MissingChunks      []*CContentBuilder_GetMissingDepotChunks_Response_Chunks `protobuf:"bytes,1,rep,name=missing_chunks,json=missingChunks" json:"missing_chunks,omitempty"`
	TotalMissingChunks *uint32                                                  `protobuf:"varint,2,opt,name=total_missing_chunks,json=totalMissingChunks" json:"total_missing_chunks,omitempty"`
	TotalMissingBytes  *uint64                                                  `protobuf:"varint,3,opt,name=total_missing_bytes,json=totalMissingBytes" json:"total_missing_bytes,omitempty"`
}

func (x *CContentBuilder_GetMissingDepotChunks_Response) Reset() {
	*x = CContentBuilder_GetMissingDepotChunks_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_client_steammessages_depotbuilder_steamclient_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CContentBuilder_GetMissingDepotChunks_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CContentBuilder_GetMissingDepotChunks_Response) ProtoMessage() {}

func (x *CContentBuilder_GetMissingDepotChunks_Response) ProtoReflect() protoreflect.Message {
	mi := &file_steam_client_steammessages_depotbuilder_steamclient_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CContentBuilder_GetMissingDepotChunks_Response.ProtoReflect.Descriptor instead.
func (*CContentBuilder_GetMissingDepotChunks_Response) Descriptor() ([]byte, []int) {
	return file_steam_client_steammessages_depotbuilder_steamclient_proto_rawDescGZIP(), []int{5}
}

func (x *CContentBuilder_GetMissingDepotChunks_Response) GetMissingChunks() []*CContentBuilder_GetMissingDepotChunks_Response_Chunks {
	if x != nil {
		return x.MissingChunks
	}
	return nil
}

func (x *CContentBuilder_GetMissingDepotChunks_Response) GetTotalMissingChunks() uint32 {
	if x != nil && x.TotalMissingChunks != nil {
		return *x.TotalMissingChunks
	}
	return 0
}

func (x *CContentBuilder_GetMissingDepotChunks_Response) GetTotalMissingBytes() uint64 {
	if x != nil && x.TotalMissingBytes != nil {
		return *x.TotalMissingBytes
	}
	return 0
}

type CContentBuilder_FinishDepotUpload_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Appid            *uint32 `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	DepotBuildHandle *uint64 `protobuf:"varint,2,opt,name=depot_build_handle,json=depotBuildHandle" json:"depot_build_handle,omitempty"`
}

func (x *CContentBuilder_FinishDepotUpload_Request) Reset() {
	*x = CContentBuilder_FinishDepotUpload_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_client_steammessages_depotbuilder_steamclient_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CContentBuilder_FinishDepotUpload_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CContentBuilder_FinishDepotUpload_Request) ProtoMessage() {}

func (x *CContentBuilder_FinishDepotUpload_Request) ProtoReflect() protoreflect.Message {
	mi := &file_steam_client_steammessages_depotbuilder_steamclient_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CContentBuilder_FinishDepotUpload_Request.ProtoReflect.Descriptor instead.
func (*CContentBuilder_FinishDepotUpload_Request) Descriptor() ([]byte, []int) {
	return file_steam_client_steammessages_depotbuilder_steamclient_proto_rawDescGZIP(), []int{6}
}

func (x *CContentBuilder_FinishDepotUpload_Request) GetAppid() uint32 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

func (x *CContentBuilder_FinishDepotUpload_Request) GetDepotBuildHandle() uint64 {
	if x != nil && x.DepotBuildHandle != nil {
		return *x.DepotBuildHandle
	}
	return 0
}

type CContentBuilder_FinishDepotUpload_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Manifestid *uint64 `protobuf:"varint,1,opt,name=manifestid" json:"manifestid,omitempty"`
	PrevReused *bool   `protobuf:"varint,2,opt,name=prev_reused,json=prevReused" json:"prev_reused,omitempty"`
}

func (x *CContentBuilder_FinishDepotUpload_Response) Reset() {
	*x = CContentBuilder_FinishDepotUpload_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_client_steammessages_depotbuilder_steamclient_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CContentBuilder_FinishDepotUpload_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CContentBuilder_FinishDepotUpload_Response) ProtoMessage() {}

func (x *CContentBuilder_FinishDepotUpload_Response) ProtoReflect() protoreflect.Message {
	mi := &file_steam_client_steammessages_depotbuilder_steamclient_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CContentBuilder_FinishDepotUpload_Response.ProtoReflect.Descriptor instead.
func (*CContentBuilder_FinishDepotUpload_Response) Descriptor() ([]byte, []int) {
	return file_steam_client_steammessages_depotbuilder_steamclient_proto_rawDescGZIP(), []int{7}
}

func (x *CContentBuilder_FinishDepotUpload_Response) GetManifestid() uint64 {
	if x != nil && x.Manifestid != nil {
		return *x.Manifestid
	}
	return 0
}

func (x *CContentBuilder_FinishDepotUpload_Response) GetPrevReused() bool {
	if x != nil && x.PrevReused != nil {
		return *x.PrevReused
	}
	return false
}

type CContentBuilder_CommitAppBuild_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Appid          *uint32                                          `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	DepotManifests []*CContentBuilder_CommitAppBuild_Request_Depots `protobuf:"bytes,2,rep,name=depot_manifests,json=depotManifests" json:"depot_manifests,omitempty"`
	BuildNotes     *string                                          `protobuf:"bytes,4,opt,name=build_notes,json=buildNotes" json:"build_notes,omitempty"`
	LiveBranch     *string                                          `protobuf:"bytes,5,opt,name=live_branch,json=liveBranch" json:"live_branch,omitempty"`
}

func (x *CContentBuilder_CommitAppBuild_Request) Reset() {
	*x = CContentBuilder_CommitAppBuild_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_client_steammessages_depotbuilder_steamclient_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CContentBuilder_CommitAppBuild_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CContentBuilder_CommitAppBuild_Request) ProtoMessage() {}

func (x *CContentBuilder_CommitAppBuild_Request) ProtoReflect() protoreflect.Message {
	mi := &file_steam_client_steammessages_depotbuilder_steamclient_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CContentBuilder_CommitAppBuild_Request.ProtoReflect.Descriptor instead.
func (*CContentBuilder_CommitAppBuild_Request) Descriptor() ([]byte, []int) {
	return file_steam_client_steammessages_depotbuilder_steamclient_proto_rawDescGZIP(), []int{8}
}

func (x *CContentBuilder_CommitAppBuild_Request) GetAppid() uint32 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

func (x *CContentBuilder_CommitAppBuild_Request) GetDepotManifests() []*CContentBuilder_CommitAppBuild_Request_Depots {
	if x != nil {
		return x.DepotManifests
	}
	return nil
}

func (x *CContentBuilder_CommitAppBuild_Request) GetBuildNotes() string {
	if x != nil && x.BuildNotes != nil {
		return *x.BuildNotes
	}
	return ""
}

func (x *CContentBuilder_CommitAppBuild_Request) GetLiveBranch() string {
	if x != nil && x.LiveBranch != nil {
		return *x.LiveBranch
	}
	return ""
}

type CContentBuilder_CommitAppBuild_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Buildid *uint32 `protobuf:"varint,1,opt,name=buildid" json:"buildid,omitempty"`
}

func (x *CContentBuilder_CommitAppBuild_Response) Reset() {
	*x = CContentBuilder_CommitAppBuild_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_client_steammessages_depotbuilder_steamclient_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CContentBuilder_CommitAppBuild_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CContentBuilder_CommitAppBuild_Response) ProtoMessage() {}

func (x *CContentBuilder_CommitAppBuild_Response) ProtoReflect() protoreflect.Message {
	mi := &file_steam_client_steammessages_depotbuilder_steamclient_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CContentBuilder_CommitAppBuild_Response.ProtoReflect.Descriptor instead.
func (*CContentBuilder_CommitAppBuild_Response) Descriptor() ([]byte, []int) {
	return file_steam_client_steammessages_depotbuilder_steamclient_proto_rawDescGZIP(), []int{9}
}

func (x *CContentBuilder_CommitAppBuild_Response) GetBuildid() uint32 {
	if x != nil && x.Buildid != nil {
		return *x.Buildid
	}
	return 0
}

type CContentBuilder_SignInstallScript_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Appid         *uint32 `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	Depotid       *uint32 `protobuf:"varint,2,opt,name=depotid" json:"depotid,omitempty"`
	InstallScript *string `protobuf:"bytes,3,opt,name=install_script,json=installScript" json:"install_script,omitempty"`
}

func (x *CContentBuilder_SignInstallScript_Request) Reset() {
	*x = CContentBuilder_SignInstallScript_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_client_steammessages_depotbuilder_steamclient_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CContentBuilder_SignInstallScript_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CContentBuilder_SignInstallScript_Request) ProtoMessage() {}

func (x *CContentBuilder_SignInstallScript_Request) ProtoReflect() protoreflect.Message {
	mi := &file_steam_client_steammessages_depotbuilder_steamclient_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CContentBuilder_SignInstallScript_Request.ProtoReflect.Descriptor instead.
func (*CContentBuilder_SignInstallScript_Request) Descriptor() ([]byte, []int) {
	return file_steam_client_steammessages_depotbuilder_steamclient_proto_rawDescGZIP(), []int{10}
}

func (x *CContentBuilder_SignInstallScript_Request) GetAppid() uint32 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

func (x *CContentBuilder_SignInstallScript_Request) GetDepotid() uint32 {
	if x != nil && x.Depotid != nil {
		return *x.Depotid
	}
	return 0
}

func (x *CContentBuilder_SignInstallScript_Request) GetInstallScript() string {
	if x != nil && x.InstallScript != nil {
		return *x.InstallScript
	}
	return ""
}

type CContentBuilder_SignInstallScript_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SignedInstallScript *string `protobuf:"bytes,1,opt,name=signed_install_script,json=signedInstallScript" json:"signed_install_script,omitempty"`
}

func (x *CContentBuilder_SignInstallScript_Response) Reset() {
	*x = CContentBuilder_SignInstallScript_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_client_steammessages_depotbuilder_steamclient_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CContentBuilder_SignInstallScript_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CContentBuilder_SignInstallScript_Response) ProtoMessage() {}

func (x *CContentBuilder_SignInstallScript_Response) ProtoReflect() protoreflect.Message {
	mi := &file_steam_client_steammessages_depotbuilder_steamclient_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CContentBuilder_SignInstallScript_Response.ProtoReflect.Descriptor instead.
func (*CContentBuilder_SignInstallScript_Response) Descriptor() ([]byte, []int) {
	return file_steam_client_steammessages_depotbuilder_steamclient_proto_rawDescGZIP(), []int{11}
}

func (x *CContentBuilder_SignInstallScript_Response) GetSignedInstallScript() string {
	if x != nil && x.SignedInstallScript != nil {
		return *x.SignedInstallScript
	}
	return ""
}

type CContentBuilder_GetMissingDepotChunks_Response_Chunks struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sha []byte `protobuf:"bytes,1,opt,name=sha" json:"sha,omitempty"`
}

func (x *CContentBuilder_GetMissingDepotChunks_Response_Chunks) Reset() {
	*x = CContentBuilder_GetMissingDepotChunks_Response_Chunks{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_client_steammessages_depotbuilder_steamclient_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CContentBuilder_GetMissingDepotChunks_Response_Chunks) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CContentBuilder_GetMissingDepotChunks_Response_Chunks) ProtoMessage() {}

func (x *CContentBuilder_GetMissingDepotChunks_Response_Chunks) ProtoReflect() protoreflect.Message {
	mi := &file_steam_client_steammessages_depotbuilder_steamclient_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CContentBuilder_GetMissingDepotChunks_Response_Chunks.ProtoReflect.Descriptor instead.
func (*CContentBuilder_GetMissingDepotChunks_Response_Chunks) Descriptor() ([]byte, []int) {
	return file_steam_client_steammessages_depotbuilder_steamclient_proto_rawDescGZIP(), []int{5, 0}
}

func (x *CContentBuilder_GetMissingDepotChunks_Response_Chunks) GetSha() []byte {
	if x != nil {
		return x.Sha
	}
	return nil
}

type CContentBuilder_CommitAppBuild_Request_Depots struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Depotid    *uint32 `protobuf:"varint,1,opt,name=depotid" json:"depotid,omitempty"`
	Manifestid *uint64 `protobuf:"varint,2,opt,name=manifestid" json:"manifestid,omitempty"`
}

func (x *CContentBuilder_CommitAppBuild_Request_Depots) Reset() {
	*x = CContentBuilder_CommitAppBuild_Request_Depots{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_client_steammessages_depotbuilder_steamclient_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CContentBuilder_CommitAppBuild_Request_Depots) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CContentBuilder_CommitAppBuild_Request_Depots) ProtoMessage() {}

func (x *CContentBuilder_CommitAppBuild_Request_Depots) ProtoReflect() protoreflect.Message {
	mi := &file_steam_client_steammessages_depotbuilder_steamclient_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CContentBuilder_CommitAppBuild_Request_Depots.ProtoReflect.Descriptor instead.
func (*CContentBuilder_CommitAppBuild_Request_Depots) Descriptor() ([]byte, []int) {
	return file_steam_client_steammessages_depotbuilder_steamclient_proto_rawDescGZIP(), []int{8, 0}
}

func (x *CContentBuilder_CommitAppBuild_Request_Depots) GetDepotid() uint32 {
	if x != nil && x.Depotid != nil {
		return *x.Depotid
	}
	return 0
}

func (x *CContentBuilder_CommitAppBuild_Request_Depots) GetManifestid() uint64 {
	if x != nil && x.Manifestid != nil {
		return *x.Manifestid
	}
	return 0
}

var File_steam_client_steammessages_depotbuilder_steamclient_proto protoreflect.FileDescriptor

var file_steam_client_steammessages_depotbuilder_steamclient_proto_rawDesc = []byte{
	0x0a, 0x39, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2f, 0x73,
	0x74, 0x65, 0x61, 0x6d, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x5f, 0x64, 0x65, 0x70,
	0x6f, 0x74, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x2e, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x73, 0x74, 0x65,
	0x61, 0x6d, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x1a, 0x39, 0x73, 0x74, 0x65, 0x61, 0x6d,
	0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2f, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x73, 0x5f, 0x75, 0x6e, 0x69, 0x66, 0x69, 0x65, 0x64, 0x5f, 0x62, 0x61,
	0x73, 0x65, 0x2e, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa3, 0x01, 0x0a, 0x26, 0x43, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x5f, 0x49, 0x6e, 0x69, 0x74, 0x44, 0x65, 0x70,
	0x6f, 0x74, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05,
	0x61, 0x70, 0x70, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x70, 0x6f, 0x74, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x64, 0x65, 0x70, 0x6f, 0x74, 0x69, 0x64, 0x12,
	0x27, 0x0a, 0x0f, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x69, 0x74, 0x65, 0x6d,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x68,
	0x6f, 0x70, 0x49, 0x74, 0x65, 0x6d, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0c, 0x66, 0x6f, 0x72, 0x5f,
	0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x63, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a,
	0x66, 0x6f, 0x72, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x43, 0x73, 0x22, 0xc6, 0x01, 0x0a, 0x27, 0x43,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x5f, 0x49,
	0x6e, 0x69, 0x74, 0x44, 0x65, 0x70, 0x6f, 0x74, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x13, 0x62, 0x61, 0x73, 0x65, 0x6c, 0x69,
	0x6e, 0x65, 0x5f, 0x6d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x12, 0x62, 0x61, 0x73, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x4d, 0x61, 0x6e,
	0x69, 0x66, 0x65, 0x73, 0x74, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x75, 0x6e, 0x6b,
	0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x63, 0x68, 0x75,
	0x6e, 0x6b, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x65, 0x73, 0x5f, 0x6b, 0x65,
	0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x61, 0x65, 0x73, 0x4b, 0x65, 0x79, 0x12,
	0x17, 0x0a, 0x07, 0x72, 0x73, 0x61, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x06, 0x72, 0x73, 0x61, 0x4b, 0x65, 0x79, 0x12, 0x19, 0x0a, 0x08, 0x75, 0x72, 0x6c, 0x5f,
	0x68, 0x6f, 0x73, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x75, 0x72, 0x6c, 0x48,
	0x6f, 0x73, 0x74, 0x22, 0xfb, 0x01, 0x0a, 0x28, 0x43, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x42, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x5f, 0x53, 0x74, 0x61, 0x72, 0x74, 0x44, 0x65, 0x70,
	0x6f, 0x74, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x61, 0x70, 0x70, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x70, 0x6f, 0x74, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x64, 0x65, 0x70, 0x6f, 0x74, 0x69, 0x64,
	0x12, 0x27, 0x0a, 0x0f, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x69, 0x74, 0x65,
	0x6d, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x77, 0x6f, 0x72, 0x6b, 0x73,
	0x68, 0x6f, 0x70, 0x49, 0x74, 0x65, 0x6d, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0c, 0x66, 0x6f, 0x72,
	0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x63, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0a, 0x66, 0x6f, 0x72, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x43, 0x73, 0x12, 0x2f, 0x0a, 0x13, 0x62,
	0x61, 0x73, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x6d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74,
	0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x12, 0x62, 0x61, 0x73, 0x65, 0x6c, 0x69,
	0x6e, 0x65, 0x4d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x69, 0x64, 0x12, 0x23, 0x0a, 0x0d,
	0x6d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0c, 0x6d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x53, 0x69, 0x7a,
	0x65, 0x22, 0x59, 0x0a, 0x29, 0x43, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x42, 0x75, 0x69,
	0x6c, 0x64, 0x65, 0x72, 0x5f, 0x53, 0x74, 0x61, 0x72, 0x74, 0x44, 0x65, 0x70, 0x6f, 0x74, 0x55,
	0x70, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c,
	0x0a, 0x12, 0x64, 0x65, 0x70, 0x6f, 0x74, 0x5f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x68, 0x61,
	0x6e, 0x64, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x64, 0x65, 0x70, 0x6f,
	0x74, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x22, 0x73, 0x0a, 0x2d,
	0x43, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x5f,
	0x47, 0x65, 0x74, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x44, 0x65, 0x70, 0x6f, 0x74, 0x43,
	0x68, 0x75, 0x6e, 0x6b, 0x73, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x61, 0x70, 0x70, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x61, 0x70,
	0x70, 0x69, 0x64, 0x12, 0x2c, 0x0a, 0x12, 0x64, 0x65, 0x70, 0x6f, 0x74, 0x5f, 0x62, 0x75, 0x69,
	0x6c, 0x64, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x10, 0x64, 0x65, 0x70, 0x6f, 0x74, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x48, 0x61, 0x6e, 0x64, 0x6c,
	0x65, 0x22, 0x9a, 0x02, 0x0a, 0x2e, 0x43, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x42, 0x75,
	0x69, 0x6c, 0x64, 0x65, 0x72, 0x5f, 0x47, 0x65, 0x74, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67,
	0x44, 0x65, 0x70, 0x6f, 0x74, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x73, 0x5f, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6a, 0x0a, 0x0e, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x5f,
	0x63, 0x68, 0x75, 0x6e, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x43, 0x2e, 0x73,
	0x74, 0x65, 0x61, 0x6d, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x5f, 0x47, 0x65, 0x74, 0x4d,
	0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x44, 0x65, 0x70, 0x6f, 0x74, 0x43, 0x68, 0x75, 0x6e, 0x6b,
	0x73, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x43, 0x68, 0x75, 0x6e, 0x6b,
	0x73, 0x52, 0x0d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x73,
	0x12, 0x30, 0x0a, 0x14, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6e,
	0x67, 0x5f, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x12,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x43, 0x68, 0x75, 0x6e,
	0x6b, 0x73, 0x12, 0x2e, 0x0a, 0x13, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6e, 0x67, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x11, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x42, 0x79, 0x74,
	0x65, 0x73, 0x1a, 0x1a, 0x0a, 0x06, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x73, 0x12, 0x10, 0x0a, 0x03,
	0x73, 0x68, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x73, 0x68, 0x61, 0x22, 0x6f,
	0x0a, 0x29, 0x43, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x65,
	0x72, 0x5f, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x44, 0x65, 0x70, 0x6f, 0x74, 0x55, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x61,
	0x70, 0x70, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x61, 0x70, 0x70, 0x69,
	0x64, 0x12, 0x2c, 0x0a, 0x12, 0x64, 0x65, 0x70, 0x6f, 0x74, 0x5f, 0x62, 0x75, 0x69, 0x6c, 0x64,
	0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x64,
	0x65, 0x70, 0x6f, 0x74, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x22,
	0x6d, 0x0a, 0x2a, 0x43, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x42, 0x75, 0x69, 0x6c, 0x64,
	0x65, 0x72, 0x5f, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x44, 0x65, 0x70, 0x6f, 0x74, 0x55, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x6d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0a, 0x6d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x69, 0x64, 0x12, 0x1f, 0x0a,
	0x0b, 0x70, 0x72, 0x65, 0x76, 0x5f, 0x72, 0x65, 0x75, 0x73, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0a, 0x70, 0x72, 0x65, 0x76, 0x52, 0x65, 0x75, 0x73, 0x65, 0x64, 0x22, 0xaa,
	0x02, 0x0a, 0x26, 0x43, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x42, 0x75, 0x69, 0x6c, 0x64,
	0x65, 0x72, 0x5f, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x41, 0x70, 0x70, 0x42, 0x75, 0x69, 0x6c,
	0x64, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x61, 0x70, 0x70, 0x69, 0x64, 0x12,
	0x64, 0x0a, 0x0f, 0x64, 0x65, 0x70, 0x6f, 0x74, 0x5f, 0x6d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73,
	0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x73, 0x74, 0x65, 0x61, 0x6d,
	0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x42, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x5f, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x41, 0x70,
	0x70, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x44,
	0x65, 0x70, 0x6f, 0x74, 0x73, 0x52, 0x0e, 0x64, 0x65, 0x70, 0x6f, 0x74, 0x4d, 0x61, 0x6e, 0x69,
	0x66, 0x65, 0x73, 0x74, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x6e,
	0x6f, 0x74, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x75, 0x69, 0x6c,
	0x64, 0x4e, 0x6f, 0x74, 0x65, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x69, 0x76, 0x65, 0x5f, 0x62,
	0x72, 0x61, 0x6e, 0x63, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6c, 0x69, 0x76,
	0x65, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x1a, 0x42, 0x0a, 0x06, 0x44, 0x65, 0x70, 0x6f, 0x74,
	0x73, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x70, 0x6f, 0x74, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x07, 0x64, 0x65, 0x70, 0x6f, 0x74, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x6d,
	0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0a, 0x6d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x69, 0x64, 0x22, 0x43, 0x0a, 0x27, 0x43,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x5f, 0x43,
	0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x41, 0x70, 0x70, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x64,
	0x22, 0x82, 0x01, 0x0a, 0x29, 0x43, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x42, 0x75, 0x69,
	0x6c, 0x64, 0x65, 0x72, 0x5f, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c,
	0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x61, 0x70, 0x70, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x61,
	0x70, 0x70, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x70, 0x6f, 0x74, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x64, 0x65, 0x70, 0x6f, 0x74, 0x69, 0x64, 0x12, 0x25,
	0x0a, 0x0e, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x5f, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x53,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x22, 0x60, 0x0a, 0x2a, 0x43, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x5f, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6c, 0x6c, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x15, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x5f, 0x69, 0x6e,
	0x73, 0x74, 0x61, 0x6c, 0x6c, 0x5f, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x13, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c,
	0x6c, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x32, 0xae, 0x09, 0x0a, 0x0e, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x12, 0xb2, 0x01, 0x0a, 0x0e, 0x49,
	0x6e, 0x69, 0x74, 0x44, 0x65, 0x70, 0x6f, 0x74, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x12, 0x34, 0x2e,
	0x73, 0x74, 0x65, 0x61, 0x6d, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x5f, 0x49, 0x6e, 0x69,
	0x74, 0x44, 0x65, 0x70, 0x6f, 0x74, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x2e, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2e, 0x43, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x42, 0x75, 0x69, 0x6c, 0x64,
	0x65, 0x72, 0x5f, 0x49, 0x6e, 0x69, 0x74, 0x44, 0x65, 0x70, 0x6f, 0x74, 0x42, 0x75, 0x69, 0x6c,
	0x64, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x33, 0x82, 0xb5, 0x18, 0x2f,
	0x47, 0x65, 0x74, 0x20, 0x69, 0x6e, 0x69, 0x74, 0x61, 0x6c, 0x20, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x65, 0x74, 0x65, 0x72, 0x73, 0x20, 0x74, 0x6f, 0x20, 0x73, 0x74, 0x61, 0x72, 0x74, 0x20, 0x62,
	0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x20, 0x61, 0x20, 0x64, 0x65, 0x70, 0x6f, 0x74, 0x12,
	0xb8, 0x01, 0x0a, 0x10, 0x53, 0x74, 0x61, 0x72, 0x74, 0x44, 0x65, 0x70, 0x6f, 0x74, 0x55, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x12, 0x36, 0x2e, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x2e, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x43, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x42, 0x75, 0x69, 0x6c,
	0x64, 0x65, 0x72, 0x5f, 0x53, 0x74, 0x61, 0x72, 0x74, 0x44, 0x65, 0x70, 0x6f, 0x74, 0x55, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e, 0x73,
	0x74, 0x65, 0x61, 0x6d, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x5f, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x44, 0x65, 0x70, 0x6f, 0x74, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x33, 0x82, 0xb5, 0x18, 0x2f, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x20, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x20, 0x6d, 0x61, 0x6e, 0x69, 0x66,
	0x65, 0x73, 0x74, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x73, 0x20, 0x66,
	0x6f, 0x72, 0x20, 0x61, 0x20, 0x64, 0x65, 0x70, 0x6f, 0x74, 0x12, 0xc3, 0x01, 0x0a, 0x15, 0x47,
	0x65, 0x74, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x44, 0x65, 0x70, 0x6f, 0x74, 0x43, 0x68,
	0x75, 0x6e, 0x6b, 0x73, 0x12, 0x3b, 0x2e, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x2e, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x43, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x42, 0x75, 0x69, 0x6c,
	0x64, 0x65, 0x72, 0x5f, 0x47, 0x65, 0x74, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x44, 0x65,
	0x70, 0x6f, 0x74, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x73, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x3c, 0x2e, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x43, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72,
	0x5f, 0x47, 0x65, 0x74, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x44, 0x65, 0x70, 0x6f, 0x74,
	0x43, 0x68, 0x75, 0x6e, 0x6b, 0x73, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x2f, 0x82, 0xb5, 0x18, 0x2b, 0x47, 0x65, 0x74, 0x20, 0x6c, 0x69, 0x73, 0x74, 0x20, 0x6f, 0x66,
	0x20, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x20, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x73, 0x20,
	0x66, 0x6f, 0x72, 0x20, 0x64, 0x65, 0x70, 0x6f, 0x74, 0x20, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64,
	0x12, 0xcb, 0x01, 0x0a, 0x11, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x44, 0x65, 0x70, 0x6f, 0x74,
	0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x37, 0x2e, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x2e, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x42, 0x75,
	0x69, 0x6c, 0x64, 0x65, 0x72, 0x5f, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x44, 0x65, 0x70, 0x6f,
	0x74, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x38, 0x2e, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x43,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x5f, 0x46,
	0x69, 0x6e, 0x69, 0x73, 0x68, 0x44, 0x65, 0x70, 0x6f, 0x74, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64,
	0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x43, 0x82, 0xb5, 0x18, 0x3f, 0x43,
	0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x20, 0x61, 0x20, 0x64, 0x65, 0x70, 0x6f, 0x74, 0x20, 0x62, 0x75,
	0x69, 0x6c, 0x64, 0x20, 0x61, 0x66, 0x74, 0x65, 0x72, 0x20, 0x6d, 0x61, 0x6e, 0x69, 0x66, 0x65,
	0x73, 0x74, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x61, 0x6c, 0x6c, 0x20, 0x63, 0x68, 0x75, 0x6e, 0x6b,
	0x73, 0x20, 0x61, 0x72, 0x65, 0x20, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x64, 0x12, 0xc1,
	0x01, 0x0a, 0x0e, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x41, 0x70, 0x70, 0x42, 0x75, 0x69, 0x6c,
	0x64, 0x12, 0x34, 0x2e, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x43, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72,
	0x5f, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x41, 0x70, 0x70, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x5f,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x2e,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x42,
	0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x5f, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x41, 0x70, 0x70,
	0x42, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x42,
	0x82, 0xb5, 0x18, 0x3e, 0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x20, 0x70, 0x72, 0x65, 0x76,
	0x69, 0x6f, 0x75, 0x73, 0x20, 0x64, 0x65, 0x70, 0x6f, 0x74, 0x20, 0x75, 0x70, 0x6c, 0x6f, 0x61,
	0x64, 0x73, 0x20, 0x69, 0x6e, 0x74, 0x6f, 0x20, 0x61, 0x6e, 0x20, 0x61, 0x70, 0x70, 0x20, 0x62,
	0x75, 0x69, 0x6c, 0x64, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x20,
	0x69, 0x74, 0x12, 0xa2, 0x01, 0x0a, 0x11, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x73, 0x74, 0x61,
	0x6c, 0x6c, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x12, 0x37, 0x2e, 0x73, 0x74, 0x65, 0x61, 0x6d,
	0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x42, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x5f, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6c, 0x6c, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x38, 0x2e, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x43, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72,
	0x5f, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x53, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1a, 0x82, 0xb5, 0x18,
	0x16, 0x53, 0x69, 0x67, 0x6e, 0x20, 0x61, 0x6e, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c,
	0x20, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x1a, 0x2f, 0x82, 0xb5, 0x18, 0x2b, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x20, 0x74, 0x6f, 0x20, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x20,
	0x61, 0x6e, 0x64, 0x20, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x20, 0x64, 0x65, 0x70, 0x6f, 0x74,
	0x20, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x42, 0x3b, 0x5a, 0x36, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x31, 0x33, 0x6b, 0x2f, 0x67, 0x6f, 0x2d, 0x73, 0x74,
	0x65, 0x61, 0x6d, 0x2d, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x73, 0x74,
	0x65, 0x61, 0x6d, 0x70, 0x62, 0x2f, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x2f, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x80, 0x01, 0x01,
}

var (
	file_steam_client_steammessages_depotbuilder_steamclient_proto_rawDescOnce sync.Once
	file_steam_client_steammessages_depotbuilder_steamclient_proto_rawDescData = file_steam_client_steammessages_depotbuilder_steamclient_proto_rawDesc
)

func file_steam_client_steammessages_depotbuilder_steamclient_proto_rawDescGZIP() []byte {
	file_steam_client_steammessages_depotbuilder_steamclient_proto_rawDescOnce.Do(func() {
		file_steam_client_steammessages_depotbuilder_steamclient_proto_rawDescData = protoimpl.X.CompressGZIP(file_steam_client_steammessages_depotbuilder_steamclient_proto_rawDescData)
	})
	return file_steam_client_steammessages_depotbuilder_steamclient_proto_rawDescData
}

var file_steam_client_steammessages_depotbuilder_steamclient_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_steam_client_steammessages_depotbuilder_steamclient_proto_goTypes = []interface{}{
	(*CContentBuilder_InitDepotBuild_Request)(nil),                // 0: steam.client.CContentBuilder_InitDepotBuild_Request
	(*CContentBuilder_InitDepotBuild_Response)(nil),               // 1: steam.client.CContentBuilder_InitDepotBuild_Response
	(*CContentBuilder_StartDepotUpload_Request)(nil),              // 2: steam.client.CContentBuilder_StartDepotUpload_Request
	(*CContentBuilder_StartDepotUpload_Response)(nil),             // 3: steam.client.CContentBuilder_StartDepotUpload_Response
	(*CContentBuilder_GetMissingDepotChunks_Request)(nil),         // 4: steam.client.CContentBuilder_GetMissingDepotChunks_Request
	(*CContentBuilder_GetMissingDepotChunks_Response)(nil),        // 5: steam.client.CContentBuilder_GetMissingDepotChunks_Response
	(*CContentBuilder_FinishDepotUpload_Request)(nil),             // 6: steam.client.CContentBuilder_FinishDepotUpload_Request
	(*CContentBuilder_FinishDepotUpload_Response)(nil),            // 7: steam.client.CContentBuilder_FinishDepotUpload_Response
	(*CContentBuilder_CommitAppBuild_Request)(nil),                // 8: steam.client.CContentBuilder_CommitAppBuild_Request
	(*CContentBuilder_CommitAppBuild_Response)(nil),               // 9: steam.client.CContentBuilder_CommitAppBuild_Response
	(*CContentBuilder_SignInstallScript_Request)(nil),             // 10: steam.client.CContentBuilder_SignInstallScript_Request
	(*CContentBuilder_SignInstallScript_Response)(nil),            // 11: steam.client.CContentBuilder_SignInstallScript_Response
	(*CContentBuilder_GetMissingDepotChunks_Response_Chunks)(nil), // 12: steam.client.CContentBuilder_GetMissingDepotChunks_Response.Chunks
	(*CContentBuilder_CommitAppBuild_Request_Depots)(nil),         // 13: steam.client.CContentBuilder_CommitAppBuild_Request.Depots
}
var file_steam_client_steammessages_depotbuilder_steamclient_proto_depIdxs = []int32{
	12, // 0: steam.client.CContentBuilder_GetMissingDepotChunks_Response.missing_chunks:type_name -> steam.client.CContentBuilder_GetMissingDepotChunks_Response.Chunks
	13, // 1: steam.client.CContentBuilder_CommitAppBuild_Request.depot_manifests:type_name -> steam.client.CContentBuilder_CommitAppBuild_Request.Depots
	0,  // 2: steam.client.ContentBuilder.InitDepotBuild:input_type -> steam.client.CContentBuilder_InitDepotBuild_Request
	2,  // 3: steam.client.ContentBuilder.StartDepotUpload:input_type -> steam.client.CContentBuilder_StartDepotUpload_Request
	4,  // 4: steam.client.ContentBuilder.GetMissingDepotChunks:input_type -> steam.client.CContentBuilder_GetMissingDepotChunks_Request
	6,  // 5: steam.client.ContentBuilder.FinishDepotUpload:input_type -> steam.client.CContentBuilder_FinishDepotUpload_Request
	8,  // 6: steam.client.ContentBuilder.CommitAppBuild:input_type -> steam.client.CContentBuilder_CommitAppBuild_Request
	10, // 7: steam.client.ContentBuilder.SignInstallScript:input_type -> steam.client.CContentBuilder_SignInstallScript_Request
	1,  // 8: steam.client.ContentBuilder.InitDepotBuild:output_type -> steam.client.CContentBuilder_InitDepotBuild_Response
	3,  // 9: steam.client.ContentBuilder.StartDepotUpload:output_type -> steam.client.CContentBuilder_StartDepotUpload_Response
	5,  // 10: steam.client.ContentBuilder.GetMissingDepotChunks:output_type -> steam.client.CContentBuilder_GetMissingDepotChunks_Response
	7,  // 11: steam.client.ContentBuilder.FinishDepotUpload:output_type -> steam.client.CContentBuilder_FinishDepotUpload_Response
	9,  // 12: steam.client.ContentBuilder.CommitAppBuild:output_type -> steam.client.CContentBuilder_CommitAppBuild_Response
	11, // 13: steam.client.ContentBuilder.SignInstallScript:output_type -> steam.client.CContentBuilder_SignInstallScript_Response
	8,  // [8:14] is the sub-list for method output_type
	2,  // [2:8] is the sub-list for method input_type
	2,  // [2:2] is the sub-list for extension type_name
	2,  // [2:2] is the sub-list for extension extendee
	0,  // [0:2] is the sub-list for field type_name
}

func init() { file_steam_client_steammessages_depotbuilder_steamclient_proto_init() }
func file_steam_client_steammessages_depotbuilder_steamclient_proto_init() {
	if File_steam_client_steammessages_depotbuilder_steamclient_proto != nil {
		return
	}
	file_steam_client_steammessages_unified_base_steamclient_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_steam_client_steammessages_depotbuilder_steamclient_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CContentBuilder_InitDepotBuild_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_client_steammessages_depotbuilder_steamclient_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CContentBuilder_InitDepotBuild_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_client_steammessages_depotbuilder_steamclient_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CContentBuilder_StartDepotUpload_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_client_steammessages_depotbuilder_steamclient_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CContentBuilder_StartDepotUpload_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_client_steammessages_depotbuilder_steamclient_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CContentBuilder_GetMissingDepotChunks_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_client_steammessages_depotbuilder_steamclient_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CContentBuilder_GetMissingDepotChunks_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_client_steammessages_depotbuilder_steamclient_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CContentBuilder_FinishDepotUpload_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_client_steammessages_depotbuilder_steamclient_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CContentBuilder_FinishDepotUpload_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_client_steammessages_depotbuilder_steamclient_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CContentBuilder_CommitAppBuild_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_client_steammessages_depotbuilder_steamclient_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CContentBuilder_CommitAppBuild_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_client_steammessages_depotbuilder_steamclient_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CContentBuilder_SignInstallScript_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_client_steammessages_depotbuilder_steamclient_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CContentBuilder_SignInstallScript_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_client_steammessages_depotbuilder_steamclient_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CContentBuilder_GetMissingDepotChunks_Response_Chunks); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_client_steammessages_depotbuilder_steamclient_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CContentBuilder_CommitAppBuild_Request_Depots); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_steam_client_steammessages_depotbuilder_steamclient_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_steam_client_steammessages_depotbuilder_steamclient_proto_goTypes,
		DependencyIndexes: file_steam_client_steammessages_depotbuilder_steamclient_proto_depIdxs,
		MessageInfos:      file_steam_client_steammessages_depotbuilder_steamclient_proto_msgTypes,
	}.Build()
	File_steam_client_steammessages_depotbuilder_steamclient_proto = out.File
	file_steam_client_steammessages_depotbuilder_steamclient_proto_rawDesc = nil
	file_steam_client_steammessages_depotbuilder_steamclient_proto_goTypes = nil
	file_steam_client_steammessages_depotbuilder_steamclient_proto_depIdxs = nil
}
