// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.21.0
// 	protoc        v3.11.2
// source: steam/steammessages_siteserverui.proto

package steam

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type SiteServerUI_Login_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username         *string `protobuf:"bytes,1,opt,name=username" json:"username,omitempty"`
	Password         *string `protobuf:"bytes,2,opt,name=password" json:"password,omitempty"`
	Steamguardcode   *string `protobuf:"bytes,3,opt,name=steamguardcode" json:"steamguardcode,omitempty"`
	RememberPassword *bool   `protobuf:"varint,4,opt,name=remember_password,json=rememberPassword" json:"remember_password,omitempty"`
}

func (x *SiteServerUI_Login_Request) Reset() {
	*x = SiteServerUI_Login_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_steammessages_siteserverui_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SiteServerUI_Login_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SiteServerUI_Login_Request) ProtoMessage() {}

func (x *SiteServerUI_Login_Request) ProtoReflect() protoreflect.Message {
	mi := &file_steam_steammessages_siteserverui_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SiteServerUI_Login_Request.ProtoReflect.Descriptor instead.
func (*SiteServerUI_Login_Request) Descriptor() ([]byte, []int) {
	return file_steam_steammessages_siteserverui_proto_rawDescGZIP(), []int{0}
}

func (x *SiteServerUI_Login_Request) GetUsername() string {
	if x != nil && x.Username != nil {
		return *x.Username
	}
	return ""
}

func (x *SiteServerUI_Login_Request) GetPassword() string {
	if x != nil && x.Password != nil {
		return *x.Password
	}
	return ""
}

func (x *SiteServerUI_Login_Request) GetSteamguardcode() string {
	if x != nil && x.Steamguardcode != nil {
		return *x.Steamguardcode
	}
	return ""
}

func (x *SiteServerUI_Login_Request) GetRememberPassword() bool {
	if x != nil && x.RememberPassword != nil {
		return *x.RememberPassword
	}
	return false
}

type SiteServerUI_Login_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LogonState   *int32 `protobuf:"varint,1,opt,name=logon_state,json=logonState" json:"logon_state,omitempty"`
	LogonEresult *int32 `protobuf:"varint,2,opt,name=logon_eresult,json=logonEresult" json:"logon_eresult,omitempty"`
}

func (x *SiteServerUI_Login_Response) Reset() {
	*x = SiteServerUI_Login_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_steammessages_siteserverui_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SiteServerUI_Login_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SiteServerUI_Login_Response) ProtoMessage() {}

func (x *SiteServerUI_Login_Response) ProtoReflect() protoreflect.Message {
	mi := &file_steam_steammessages_siteserverui_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SiteServerUI_Login_Response.ProtoReflect.Descriptor instead.
func (*SiteServerUI_Login_Response) Descriptor() ([]byte, []int) {
	return file_steam_steammessages_siteserverui_proto_rawDescGZIP(), []int{1}
}

func (x *SiteServerUI_Login_Response) GetLogonState() int32 {
	if x != nil && x.LogonState != nil {
		return *x.LogonState
	}
	return 0
}

func (x *SiteServerUI_Login_Response) GetLogonEresult() int32 {
	if x != nil && x.LogonEresult != nil {
		return *x.LogonEresult
	}
	return 0
}

type SiteServerUI_LoginStatus_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SiteServerUI_LoginStatus_Request) Reset() {
	*x = SiteServerUI_LoginStatus_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_steammessages_siteserverui_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SiteServerUI_LoginStatus_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SiteServerUI_LoginStatus_Request) ProtoMessage() {}

func (x *SiteServerUI_LoginStatus_Request) ProtoReflect() protoreflect.Message {
	mi := &file_steam_steammessages_siteserverui_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SiteServerUI_LoginStatus_Request.ProtoReflect.Descriptor instead.
func (*SiteServerUI_LoginStatus_Request) Descriptor() ([]byte, []int) {
	return file_steam_steammessages_siteserverui_proto_rawDescGZIP(), []int{2}
}

type SiteServerUI_LoginStatus_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username          *string `protobuf:"bytes,1,opt,name=username" json:"username,omitempty"`
	CachedCredentials *bool   `protobuf:"varint,2,opt,name=cached_credentials,json=cachedCredentials" json:"cached_credentials,omitempty"`
	LogonState        *int32  `protobuf:"varint,3,opt,name=logon_state,json=logonState" json:"logon_state,omitempty"`
	LogonEresult      *int32  `protobuf:"varint,4,opt,name=logon_eresult,json=logonEresult" json:"logon_eresult,omitempty"`
}

func (x *SiteServerUI_LoginStatus_Response) Reset() {
	*x = SiteServerUI_LoginStatus_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_steammessages_siteserverui_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SiteServerUI_LoginStatus_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SiteServerUI_LoginStatus_Response) ProtoMessage() {}

func (x *SiteServerUI_LoginStatus_Response) ProtoReflect() protoreflect.Message {
	mi := &file_steam_steammessages_siteserverui_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SiteServerUI_LoginStatus_Response.ProtoReflect.Descriptor instead.
func (*SiteServerUI_LoginStatus_Response) Descriptor() ([]byte, []int) {
	return file_steam_steammessages_siteserverui_proto_rawDescGZIP(), []int{3}
}

func (x *SiteServerUI_LoginStatus_Response) GetUsername() string {
	if x != nil && x.Username != nil {
		return *x.Username
	}
	return ""
}

func (x *SiteServerUI_LoginStatus_Response) GetCachedCredentials() bool {
	if x != nil && x.CachedCredentials != nil {
		return *x.CachedCredentials
	}
	return false
}

func (x *SiteServerUI_LoginStatus_Response) GetLogonState() int32 {
	if x != nil && x.LogonState != nil {
		return *x.LogonState
	}
	return 0
}

func (x *SiteServerUI_LoginStatus_Response) GetLogonEresult() int32 {
	if x != nil && x.LogonEresult != nil {
		return *x.LogonEresult
	}
	return 0
}

type SiteServerUI_CancelLogin_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SiteServerUI_CancelLogin_Request) Reset() {
	*x = SiteServerUI_CancelLogin_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_steammessages_siteserverui_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SiteServerUI_CancelLogin_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SiteServerUI_CancelLogin_Request) ProtoMessage() {}

func (x *SiteServerUI_CancelLogin_Request) ProtoReflect() protoreflect.Message {
	mi := &file_steam_steammessages_siteserverui_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SiteServerUI_CancelLogin_Request.ProtoReflect.Descriptor instead.
func (*SiteServerUI_CancelLogin_Request) Descriptor() ([]byte, []int) {
	return file_steam_steammessages_siteserverui_proto_rawDescGZIP(), []int{4}
}

type SiteServerUI_CancelLogin_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LogonState   *int32 `protobuf:"varint,1,opt,name=logon_state,json=logonState" json:"logon_state,omitempty"`
	LogonEresult *int32 `protobuf:"varint,2,opt,name=logon_eresult,json=logonEresult" json:"logon_eresult,omitempty"`
}

func (x *SiteServerUI_CancelLogin_Response) Reset() {
	*x = SiteServerUI_CancelLogin_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_steammessages_siteserverui_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SiteServerUI_CancelLogin_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SiteServerUI_CancelLogin_Response) ProtoMessage() {}

func (x *SiteServerUI_CancelLogin_Response) ProtoReflect() protoreflect.Message {
	mi := &file_steam_steammessages_siteserverui_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SiteServerUI_CancelLogin_Response.ProtoReflect.Descriptor instead.
func (*SiteServerUI_CancelLogin_Response) Descriptor() ([]byte, []int) {
	return file_steam_steammessages_siteserverui_proto_rawDescGZIP(), []int{5}
}

func (x *SiteServerUI_CancelLogin_Response) GetLogonState() int32 {
	if x != nil && x.LogonState != nil {
		return *x.LogonState
	}
	return 0
}

func (x *SiteServerUI_CancelLogin_Response) GetLogonEresult() int32 {
	if x != nil && x.LogonEresult != nil {
		return *x.LogonEresult
	}
	return 0
}

type SiteServerUI_Logout_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SiteServerUI_Logout_Request) Reset() {
	*x = SiteServerUI_Logout_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_steammessages_siteserverui_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SiteServerUI_Logout_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SiteServerUI_Logout_Request) ProtoMessage() {}

func (x *SiteServerUI_Logout_Request) ProtoReflect() protoreflect.Message {
	mi := &file_steam_steammessages_siteserverui_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SiteServerUI_Logout_Request.ProtoReflect.Descriptor instead.
func (*SiteServerUI_Logout_Request) Descriptor() ([]byte, []int) {
	return file_steam_steammessages_siteserverui_proto_rawDescGZIP(), []int{6}
}

type SiteServerUI_Logout_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LogonState    *int32 `protobuf:"varint,1,opt,name=logon_state,json=logonState" json:"logon_state,omitempty"`
	LogoutEresult *int32 `protobuf:"varint,2,opt,name=logout_eresult,json=logoutEresult" json:"logout_eresult,omitempty"`
}

func (x *SiteServerUI_Logout_Response) Reset() {
	*x = SiteServerUI_Logout_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_steammessages_siteserverui_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SiteServerUI_Logout_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SiteServerUI_Logout_Response) ProtoMessage() {}

func (x *SiteServerUI_Logout_Response) ProtoReflect() protoreflect.Message {
	mi := &file_steam_steammessages_siteserverui_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SiteServerUI_Logout_Response.ProtoReflect.Descriptor instead.
func (*SiteServerUI_Logout_Response) Descriptor() ([]byte, []int) {
	return file_steam_steammessages_siteserverui_proto_rawDescGZIP(), []int{7}
}

func (x *SiteServerUI_Logout_Response) GetLogonState() int32 {
	if x != nil && x.LogonState != nil {
		return *x.LogonState
	}
	return 0
}

func (x *SiteServerUI_Logout_Response) GetLogoutEresult() int32 {
	if x != nil && x.LogoutEresult != nil {
		return *x.LogoutEresult
	}
	return 0
}

type SiteServerUI_Quit_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Restart *bool `protobuf:"varint,1,opt,name=restart" json:"restart,omitempty"`
}

func (x *SiteServerUI_Quit_Request) Reset() {
	*x = SiteServerUI_Quit_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_steammessages_siteserverui_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SiteServerUI_Quit_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SiteServerUI_Quit_Request) ProtoMessage() {}

func (x *SiteServerUI_Quit_Request) ProtoReflect() protoreflect.Message {
	mi := &file_steam_steammessages_siteserverui_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SiteServerUI_Quit_Request.ProtoReflect.Descriptor instead.
func (*SiteServerUI_Quit_Request) Descriptor() ([]byte, []int) {
	return file_steam_steammessages_siteserverui_proto_rawDescGZIP(), []int{8}
}

func (x *SiteServerUI_Quit_Request) GetRestart() bool {
	if x != nil && x.Restart != nil {
		return *x.Restart
	}
	return false
}

type SiteServerUI_Quit_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SiteServerUI_Quit_Response) Reset() {
	*x = SiteServerUI_Quit_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_steammessages_siteserverui_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SiteServerUI_Quit_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SiteServerUI_Quit_Response) ProtoMessage() {}

func (x *SiteServerUI_Quit_Response) ProtoReflect() protoreflect.Message {
	mi := &file_steam_steammessages_siteserverui_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SiteServerUI_Quit_Response.ProtoReflect.Descriptor instead.
func (*SiteServerUI_Quit_Response) Descriptor() ([]byte, []int) {
	return file_steam_steammessages_siteserverui_proto_rawDescGZIP(), []int{9}
}

type SiteServerUI_Status_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SiteServerUI_Status_Request) Reset() {
	*x = SiteServerUI_Status_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_steammessages_siteserverui_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SiteServerUI_Status_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SiteServerUI_Status_Request) ProtoMessage() {}

func (x *SiteServerUI_Status_Request) ProtoReflect() protoreflect.Message {
	mi := &file_steam_steammessages_siteserverui_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SiteServerUI_Status_Request.ProtoReflect.Descriptor instead.
func (*SiteServerUI_Status_Request) Descriptor() ([]byte, []int) {
	return file_steam_steammessages_siteserverui_proto_rawDescGZIP(), []int{10}
}

type SiteServerUI_Status_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LogonState   *int32 `protobuf:"varint,1,opt,name=logon_state,json=logonState" json:"logon_state,omitempty"`
	LogonEresult *int32 `protobuf:"varint,2,opt,name=logon_eresult,json=logonEresult" json:"logon_eresult,omitempty"`
	Connected    *bool  `protobuf:"varint,3,opt,name=connected" json:"connected,omitempty"`
	CacheEnabled *bool  `protobuf:"varint,4,opt,name=cache_enabled,json=cacheEnabled" json:"cache_enabled,omitempty"`
	AcctStatus   *int32 `protobuf:"varint,5,opt,name=acct_status,json=acctStatus" json:"acct_status,omitempty"`
}

func (x *SiteServerUI_Status_Response) Reset() {
	*x = SiteServerUI_Status_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_steammessages_siteserverui_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SiteServerUI_Status_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SiteServerUI_Status_Response) ProtoMessage() {}

func (x *SiteServerUI_Status_Response) ProtoReflect() protoreflect.Message {
	mi := &file_steam_steammessages_siteserverui_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SiteServerUI_Status_Response.ProtoReflect.Descriptor instead.
func (*SiteServerUI_Status_Response) Descriptor() ([]byte, []int) {
	return file_steam_steammessages_siteserverui_proto_rawDescGZIP(), []int{11}
}

func (x *SiteServerUI_Status_Response) GetLogonState() int32 {
	if x != nil && x.LogonState != nil {
		return *x.LogonState
	}
	return 0
}

func (x *SiteServerUI_Status_Response) GetLogonEresult() int32 {
	if x != nil && x.LogonEresult != nil {
		return *x.LogonEresult
	}
	return 0
}

func (x *SiteServerUI_Status_Response) GetConnected() bool {
	if x != nil && x.Connected != nil {
		return *x.Connected
	}
	return false
}

func (x *SiteServerUI_Status_Response) GetCacheEnabled() bool {
	if x != nil && x.CacheEnabled != nil {
		return *x.CacheEnabled
	}
	return false
}

func (x *SiteServerUI_Status_Response) GetAcctStatus() int32 {
	if x != nil && x.AcctStatus != nil {
		return *x.AcctStatus
	}
	return 0
}

type SiteServerUI_GetLanguage_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SiteServerUI_GetLanguage_Request) Reset() {
	*x = SiteServerUI_GetLanguage_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_steammessages_siteserverui_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SiteServerUI_GetLanguage_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SiteServerUI_GetLanguage_Request) ProtoMessage() {}

func (x *SiteServerUI_GetLanguage_Request) ProtoReflect() protoreflect.Message {
	mi := &file_steam_steammessages_siteserverui_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SiteServerUI_GetLanguage_Request.ProtoReflect.Descriptor instead.
func (*SiteServerUI_GetLanguage_Request) Descriptor() ([]byte, []int) {
	return file_steam_steammessages_siteserverui_proto_rawDescGZIP(), []int{12}
}

type SiteServerUI_GetLanguage_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Language *string `protobuf:"bytes,1,opt,name=language" json:"language,omitempty"`
}

func (x *SiteServerUI_GetLanguage_Response) Reset() {
	*x = SiteServerUI_GetLanguage_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_steammessages_siteserverui_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SiteServerUI_GetLanguage_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SiteServerUI_GetLanguage_Response) ProtoMessage() {}

func (x *SiteServerUI_GetLanguage_Response) ProtoReflect() protoreflect.Message {
	mi := &file_steam_steammessages_siteserverui_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SiteServerUI_GetLanguage_Response.ProtoReflect.Descriptor instead.
func (*SiteServerUI_GetLanguage_Response) Descriptor() ([]byte, []int) {
	return file_steam_steammessages_siteserverui_proto_rawDescGZIP(), []int{13}
}

func (x *SiteServerUI_GetLanguage_Response) GetLanguage() string {
	if x != nil && x.Language != nil {
		return *x.Language
	}
	return ""
}

type SiteServerUI_SetLanguage_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Language *string `protobuf:"bytes,1,opt,name=language" json:"language,omitempty"`
}

func (x *SiteServerUI_SetLanguage_Request) Reset() {
	*x = SiteServerUI_SetLanguage_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_steammessages_siteserverui_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SiteServerUI_SetLanguage_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SiteServerUI_SetLanguage_Request) ProtoMessage() {}

func (x *SiteServerUI_SetLanguage_Request) ProtoReflect() protoreflect.Message {
	mi := &file_steam_steammessages_siteserverui_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SiteServerUI_SetLanguage_Request.ProtoReflect.Descriptor instead.
func (*SiteServerUI_SetLanguage_Request) Descriptor() ([]byte, []int) {
	return file_steam_steammessages_siteserverui_proto_rawDescGZIP(), []int{14}
}

func (x *SiteServerUI_SetLanguage_Request) GetLanguage() string {
	if x != nil && x.Language != nil {
		return *x.Language
	}
	return ""
}

type SiteServerUI_SetLanguage_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SiteServerUI_SetLanguage_Response) Reset() {
	*x = SiteServerUI_SetLanguage_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_steammessages_siteserverui_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SiteServerUI_SetLanguage_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SiteServerUI_SetLanguage_Response) ProtoMessage() {}

func (x *SiteServerUI_SetLanguage_Response) ProtoReflect() protoreflect.Message {
	mi := &file_steam_steammessages_siteserverui_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SiteServerUI_SetLanguage_Response.ProtoReflect.Descriptor instead.
func (*SiteServerUI_SetLanguage_Response) Descriptor() ([]byte, []int) {
	return file_steam_steammessages_siteserverui_proto_rawDescGZIP(), []int{15}
}

type SiteServerUI_ClientStatus_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SiteServerUI_ClientStatus_Request) Reset() {
	*x = SiteServerUI_ClientStatus_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_steammessages_siteserverui_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SiteServerUI_ClientStatus_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SiteServerUI_ClientStatus_Request) ProtoMessage() {}

func (x *SiteServerUI_ClientStatus_Request) ProtoReflect() protoreflect.Message {
	mi := &file_steam_steammessages_siteserverui_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SiteServerUI_ClientStatus_Request.ProtoReflect.Descriptor instead.
func (*SiteServerUI_ClientStatus_Request) Descriptor() ([]byte, []int) {
	return file_steam_steammessages_siteserverui_proto_rawDescGZIP(), []int{16}
}

type SiteServerUI_ClientStatus_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Clients  []*SiteServerUI_ClientStatus_Response_ClientInfo `protobuf:"bytes,4,rep,name=clients" json:"clients,omitempty"`
	Payments []*SiteServerUI_ClientStatus_Response_Payment    `protobuf:"bytes,5,rep,name=payments" json:"payments,omitempty"`
}

func (x *SiteServerUI_ClientStatus_Response) Reset() {
	*x = SiteServerUI_ClientStatus_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_steammessages_siteserverui_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SiteServerUI_ClientStatus_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SiteServerUI_ClientStatus_Response) ProtoMessage() {}

func (x *SiteServerUI_ClientStatus_Response) ProtoReflect() protoreflect.Message {
	mi := &file_steam_steammessages_siteserverui_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SiteServerUI_ClientStatus_Response.ProtoReflect.Descriptor instead.
func (*SiteServerUI_ClientStatus_Response) Descriptor() ([]byte, []int) {
	return file_steam_steammessages_siteserverui_proto_rawDescGZIP(), []int{17}
}

func (x *SiteServerUI_ClientStatus_Response) GetClients() []*SiteServerUI_ClientStatus_Response_ClientInfo {
	if x != nil {
		return x.Clients
	}
	return nil
}

func (x *SiteServerUI_ClientStatus_Response) GetPayments() []*SiteServerUI_ClientStatus_Response_Payment {
	if x != nil {
		return x.Payments
	}
	return nil
}

type SiteServerUI_ContentCacheStatus_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SiteServerUI_ContentCacheStatus_Request) Reset() {
	*x = SiteServerUI_ContentCacheStatus_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_steammessages_siteserverui_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SiteServerUI_ContentCacheStatus_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SiteServerUI_ContentCacheStatus_Request) ProtoMessage() {}

func (x *SiteServerUI_ContentCacheStatus_Request) ProtoReflect() protoreflect.Message {
	mi := &file_steam_steammessages_siteserverui_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SiteServerUI_ContentCacheStatus_Request.ProtoReflect.Descriptor instead.
func (*SiteServerUI_ContentCacheStatus_Request) Descriptor() ([]byte, []int) {
	return file_steam_steammessages_siteserverui_proto_rawDescGZIP(), []int{18}
}

type SiteServerUI_ContentCacheStatus_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enabled           *bool   `protobuf:"varint,1,opt,name=enabled" json:"enabled,omitempty"`
	Port              *uint32 `protobuf:"varint,2,opt,name=port" json:"port,omitempty"`
	CacheLocation     *string `protobuf:"bytes,3,opt,name=cache_location,json=cacheLocation" json:"cache_location,omitempty"`
	MaxSizeGb         *uint32 `protobuf:"varint,4,opt,name=max_size_gb,json=maxSizeGb" json:"max_size_gb,omitempty"`
	P2PEnabled        *bool   `protobuf:"varint,5,opt,name=p2p_enabled,json=p2pEnabled" json:"p2p_enabled,omitempty"`
	ExplicitIpAddress *string `protobuf:"bytes,9,opt,name=explicit_ip_address,json=explicitIpAddress" json:"explicit_ip_address,omitempty"`
	ExternalProcess   *bool   `protobuf:"varint,10,opt,name=external_process,json=externalProcess" json:"external_process,omitempty"`
	CurrentSizeGb     *uint32 `protobuf:"varint,6,opt,name=current_size_gb,json=currentSizeGb" json:"current_size_gb,omitempty"`
	CurrentBw         *uint64 `protobuf:"varint,7,opt,name=current_bw,json=currentBw" json:"current_bw,omitempty"`
	TotalBytesServed  *uint64 `protobuf:"varint,8,opt,name=total_bytes_served,json=totalBytesServed" json:"total_bytes_served,omitempty"`
}

func (x *SiteServerUI_ContentCacheStatus_Response) Reset() {
	*x = SiteServerUI_ContentCacheStatus_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_steammessages_siteserverui_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SiteServerUI_ContentCacheStatus_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SiteServerUI_ContentCacheStatus_Response) ProtoMessage() {}

func (x *SiteServerUI_ContentCacheStatus_Response) ProtoReflect() protoreflect.Message {
	mi := &file_steam_steammessages_siteserverui_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SiteServerUI_ContentCacheStatus_Response.ProtoReflect.Descriptor instead.
func (*SiteServerUI_ContentCacheStatus_Response) Descriptor() ([]byte, []int) {
	return file_steam_steammessages_siteserverui_proto_rawDescGZIP(), []int{19}
}

func (x *SiteServerUI_ContentCacheStatus_Response) GetEnabled() bool {
	if x != nil && x.Enabled != nil {
		return *x.Enabled
	}
	return false
}

func (x *SiteServerUI_ContentCacheStatus_Response) GetPort() uint32 {
	if x != nil && x.Port != nil {
		return *x.Port
	}
	return 0
}

func (x *SiteServerUI_ContentCacheStatus_Response) GetCacheLocation() string {
	if x != nil && x.CacheLocation != nil {
		return *x.CacheLocation
	}
	return ""
}

func (x *SiteServerUI_ContentCacheStatus_Response) GetMaxSizeGb() uint32 {
	if x != nil && x.MaxSizeGb != nil {
		return *x.MaxSizeGb
	}
	return 0
}

func (x *SiteServerUI_ContentCacheStatus_Response) GetP2PEnabled() bool {
	if x != nil && x.P2PEnabled != nil {
		return *x.P2PEnabled
	}
	return false
}

func (x *SiteServerUI_ContentCacheStatus_Response) GetExplicitIpAddress() string {
	if x != nil && x.ExplicitIpAddress != nil {
		return *x.ExplicitIpAddress
	}
	return ""
}

func (x *SiteServerUI_ContentCacheStatus_Response) GetExternalProcess() bool {
	if x != nil && x.ExternalProcess != nil {
		return *x.ExternalProcess
	}
	return false
}

func (x *SiteServerUI_ContentCacheStatus_Response) GetCurrentSizeGb() uint32 {
	if x != nil && x.CurrentSizeGb != nil {
		return *x.CurrentSizeGb
	}
	return 0
}

func (x *SiteServerUI_ContentCacheStatus_Response) GetCurrentBw() uint64 {
	if x != nil && x.CurrentBw != nil {
		return *x.CurrentBw
	}
	return 0
}

func (x *SiteServerUI_ContentCacheStatus_Response) GetTotalBytesServed() uint64 {
	if x != nil && x.TotalBytesServed != nil {
		return *x.TotalBytesServed
	}
	return 0
}

type SiteServerUI_ContentCacheConfig_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enabled           *bool   `protobuf:"varint,1,opt,name=enabled" json:"enabled,omitempty"`
	Port              *uint32 `protobuf:"varint,2,opt,name=port" json:"port,omitempty"`
	CacheLocation     *string `protobuf:"bytes,3,opt,name=cache_location,json=cacheLocation" json:"cache_location,omitempty"`
	MaxSizeGb         *uint32 `protobuf:"varint,4,opt,name=max_size_gb,json=maxSizeGb" json:"max_size_gb,omitempty"`
	P2PEnabled        *bool   `protobuf:"varint,5,opt,name=p2p_enabled,json=p2pEnabled" json:"p2p_enabled,omitempty"`
	ExternalProcess   *bool   `protobuf:"varint,6,opt,name=external_process,json=externalProcess" json:"external_process,omitempty"`
	ExplicitIpAddress *string `protobuf:"bytes,7,opt,name=explicit_ip_address,json=explicitIpAddress" json:"explicit_ip_address,omitempty"`
}

func (x *SiteServerUI_ContentCacheConfig_Request) Reset() {
	*x = SiteServerUI_ContentCacheConfig_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_steammessages_siteserverui_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SiteServerUI_ContentCacheConfig_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SiteServerUI_ContentCacheConfig_Request) ProtoMessage() {}

func (x *SiteServerUI_ContentCacheConfig_Request) ProtoReflect() protoreflect.Message {
	mi := &file_steam_steammessages_siteserverui_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SiteServerUI_ContentCacheConfig_Request.ProtoReflect.Descriptor instead.
func (*SiteServerUI_ContentCacheConfig_Request) Descriptor() ([]byte, []int) {
	return file_steam_steammessages_siteserverui_proto_rawDescGZIP(), []int{20}
}

func (x *SiteServerUI_ContentCacheConfig_Request) GetEnabled() bool {
	if x != nil && x.Enabled != nil {
		return *x.Enabled
	}
	return false
}

func (x *SiteServerUI_ContentCacheConfig_Request) GetPort() uint32 {
	if x != nil && x.Port != nil {
		return *x.Port
	}
	return 0
}

func (x *SiteServerUI_ContentCacheConfig_Request) GetCacheLocation() string {
	if x != nil && x.CacheLocation != nil {
		return *x.CacheLocation
	}
	return ""
}

func (x *SiteServerUI_ContentCacheConfig_Request) GetMaxSizeGb() uint32 {
	if x != nil && x.MaxSizeGb != nil {
		return *x.MaxSizeGb
	}
	return 0
}

func (x *SiteServerUI_ContentCacheConfig_Request) GetP2PEnabled() bool {
	if x != nil && x.P2PEnabled != nil {
		return *x.P2PEnabled
	}
	return false
}

func (x *SiteServerUI_ContentCacheConfig_Request) GetExternalProcess() bool {
	if x != nil && x.ExternalProcess != nil {
		return *x.ExternalProcess
	}
	return false
}

func (x *SiteServerUI_ContentCacheConfig_Request) GetExplicitIpAddress() string {
	if x != nil && x.ExplicitIpAddress != nil {
		return *x.ExplicitIpAddress
	}
	return ""
}

type SiteServerUI_ContentCacheConfig_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SiteServerUI_ContentCacheConfig_Response) Reset() {
	*x = SiteServerUI_ContentCacheConfig_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_steammessages_siteserverui_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SiteServerUI_ContentCacheConfig_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SiteServerUI_ContentCacheConfig_Response) ProtoMessage() {}

func (x *SiteServerUI_ContentCacheConfig_Response) ProtoReflect() protoreflect.Message {
	mi := &file_steam_steammessages_siteserverui_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SiteServerUI_ContentCacheConfig_Response.ProtoReflect.Descriptor instead.
func (*SiteServerUI_ContentCacheConfig_Response) Descriptor() ([]byte, []int) {
	return file_steam_steammessages_siteserverui_proto_rawDescGZIP(), []int{21}
}

type SiteServerUI_ClientStatus_Response_ClientInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ip         *uint32 `protobuf:"varint,1,opt,name=ip" json:"ip,omitempty"`
	Hostname   *string `protobuf:"bytes,2,opt,name=hostname" json:"hostname,omitempty"`
	Connected  *bool   `protobuf:"varint,3,opt,name=connected" json:"connected,omitempty"`
	InstanceId *uint64 `protobuf:"varint,4,opt,name=instance_id,json=instanceId" json:"instance_id,omitempty"`
}

func (x *SiteServerUI_ClientStatus_Response_ClientInfo) Reset() {
	*x = SiteServerUI_ClientStatus_Response_ClientInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_steammessages_siteserverui_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SiteServerUI_ClientStatus_Response_ClientInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SiteServerUI_ClientStatus_Response_ClientInfo) ProtoMessage() {}

func (x *SiteServerUI_ClientStatus_Response_ClientInfo) ProtoReflect() protoreflect.Message {
	mi := &file_steam_steammessages_siteserverui_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SiteServerUI_ClientStatus_Response_ClientInfo.ProtoReflect.Descriptor instead.
func (*SiteServerUI_ClientStatus_Response_ClientInfo) Descriptor() ([]byte, []int) {
	return file_steam_steammessages_siteserverui_proto_rawDescGZIP(), []int{17, 0}
}

func (x *SiteServerUI_ClientStatus_Response_ClientInfo) GetIp() uint32 {
	if x != nil && x.Ip != nil {
		return *x.Ip
	}
	return 0
}

func (x *SiteServerUI_ClientStatus_Response_ClientInfo) GetHostname() string {
	if x != nil && x.Hostname != nil {
		return *x.Hostname
	}
	return ""
}

func (x *SiteServerUI_ClientStatus_Response_ClientInfo) GetConnected() bool {
	if x != nil && x.Connected != nil {
		return *x.Connected
	}
	return false
}

func (x *SiteServerUI_ClientStatus_Response_ClientInfo) GetInstanceId() uint64 {
	if x != nil && x.InstanceId != nil {
		return *x.InstanceId
	}
	return 0
}

type SiteServerUI_ClientStatus_Response_Payment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Transid        *uint64 `protobuf:"varint,1,opt,name=transid" json:"transid,omitempty"`
	Steamid        *uint64 `protobuf:"varint,2,opt,name=steamid" json:"steamid,omitempty"`
	Amount         *string `protobuf:"bytes,3,opt,name=amount" json:"amount,omitempty"`
	TimeCreated    *int32  `protobuf:"varint,4,opt,name=time_created,json=timeCreated" json:"time_created,omitempty"`
	PurchaseStatus *int32  `protobuf:"varint,5,opt,name=purchase_status,json=purchaseStatus" json:"purchase_status,omitempty"`
	Hostname       *string `protobuf:"bytes,6,opt,name=hostname" json:"hostname,omitempty"`
	PersonaName    *string `protobuf:"bytes,7,opt,name=persona_name,json=personaName" json:"persona_name,omitempty"`
	ProfileUrl     *string `protobuf:"bytes,8,opt,name=profile_url,json=profileUrl" json:"profile_url,omitempty"`
	AvatarUrl      *string `protobuf:"bytes,9,opt,name=avatar_url,json=avatarUrl" json:"avatar_url,omitempty"`
}

func (x *SiteServerUI_ClientStatus_Response_Payment) Reset() {
	*x = SiteServerUI_ClientStatus_Response_Payment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steam_steammessages_siteserverui_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SiteServerUI_ClientStatus_Response_Payment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SiteServerUI_ClientStatus_Response_Payment) ProtoMessage() {}

func (x *SiteServerUI_ClientStatus_Response_Payment) ProtoReflect() protoreflect.Message {
	mi := &file_steam_steammessages_siteserverui_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SiteServerUI_ClientStatus_Response_Payment.ProtoReflect.Descriptor instead.
func (*SiteServerUI_ClientStatus_Response_Payment) Descriptor() ([]byte, []int) {
	return file_steam_steammessages_siteserverui_proto_rawDescGZIP(), []int{17, 1}
}

func (x *SiteServerUI_ClientStatus_Response_Payment) GetTransid() uint64 {
	if x != nil && x.Transid != nil {
		return *x.Transid
	}
	return 0
}

func (x *SiteServerUI_ClientStatus_Response_Payment) GetSteamid() uint64 {
	if x != nil && x.Steamid != nil {
		return *x.Steamid
	}
	return 0
}

func (x *SiteServerUI_ClientStatus_Response_Payment) GetAmount() string {
	if x != nil && x.Amount != nil {
		return *x.Amount
	}
	return ""
}

func (x *SiteServerUI_ClientStatus_Response_Payment) GetTimeCreated() int32 {
	if x != nil && x.TimeCreated != nil {
		return *x.TimeCreated
	}
	return 0
}

func (x *SiteServerUI_ClientStatus_Response_Payment) GetPurchaseStatus() int32 {
	if x != nil && x.PurchaseStatus != nil {
		return *x.PurchaseStatus
	}
	return 0
}

func (x *SiteServerUI_ClientStatus_Response_Payment) GetHostname() string {
	if x != nil && x.Hostname != nil {
		return *x.Hostname
	}
	return ""
}

func (x *SiteServerUI_ClientStatus_Response_Payment) GetPersonaName() string {
	if x != nil && x.PersonaName != nil {
		return *x.PersonaName
	}
	return ""
}

func (x *SiteServerUI_ClientStatus_Response_Payment) GetProfileUrl() string {
	if x != nil && x.ProfileUrl != nil {
		return *x.ProfileUrl
	}
	return ""
}

func (x *SiteServerUI_ClientStatus_Response_Payment) GetAvatarUrl() string {
	if x != nil && x.AvatarUrl != nil {
		return *x.AvatarUrl
	}
	return ""
}

var File_steam_steammessages_siteserverui_proto protoreflect.FileDescriptor

var file_steam_steammessages_siteserverui_proto_rawDesc = []byte{
	0x0a, 0x26, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x2f, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x73, 0x5f, 0x73, 0x69, 0x74, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x75, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x1a,
	0x1e, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x2f, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x73, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0xa9, 0x01, 0x0a, 0x1a, 0x53, 0x69, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x55, 0x49,
	0x5f, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x67,
	0x75, 0x61, 0x72, 0x64, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x73, 0x74, 0x65, 0x61, 0x6d, 0x67, 0x75, 0x61, 0x72, 0x64, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x2b,
	0x0a, 0x11, 0x72, 0x65, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x72, 0x65, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x63, 0x0a, 0x1b, 0x53,
	0x69, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x55, 0x49, 0x5f, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x6f,
	0x67, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x6c, 0x6f, 0x67, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x6c,
	0x6f, 0x67, 0x6f, 0x6e, 0x5f, 0x65, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0c, 0x6c, 0x6f, 0x67, 0x6f, 0x6e, 0x45, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x22, 0x22, 0x0a, 0x20, 0x53, 0x69, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x55, 0x49,
	0x5f, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x22, 0xb4, 0x01, 0x0a, 0x21, 0x53, 0x69, 0x74, 0x65, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x55, 0x49, 0x5f, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2d, 0x0a, 0x12, 0x63, 0x61, 0x63, 0x68, 0x65, 0x64,
	0x5f, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x11, 0x63, 0x61, 0x63, 0x68, 0x65, 0x64, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x61, 0x6c, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x6f, 0x67, 0x6f, 0x6e, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6c, 0x6f, 0x67, 0x6f,
	0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x6c, 0x6f, 0x67, 0x6f, 0x6e, 0x5f,
	0x65, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x6c,
	0x6f, 0x67, 0x6f, 0x6e, 0x45, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x22, 0x0a, 0x20, 0x53,
	0x69, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x55, 0x49, 0x5f, 0x43, 0x61, 0x6e, 0x63,
	0x65, 0x6c, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22,
	0x69, 0x0a, 0x21, 0x53, 0x69, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x55, 0x49, 0x5f,
	0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x6f, 0x67, 0x6f, 0x6e, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6c, 0x6f, 0x67, 0x6f, 0x6e,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x6c, 0x6f, 0x67, 0x6f, 0x6e, 0x5f, 0x65,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x6c, 0x6f,
	0x67, 0x6f, 0x6e, 0x45, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x1d, 0x0a, 0x1b, 0x53, 0x69,
	0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x55, 0x49, 0x5f, 0x4c, 0x6f, 0x67, 0x6f, 0x75,
	0x74, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x66, 0x0a, 0x1c, 0x53, 0x69, 0x74,
	0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x55, 0x49, 0x5f, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74,
	0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x6f, 0x67,
	0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
	0x6c, 0x6f, 0x67, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x6c, 0x6f,
	0x67, 0x6f, 0x75, 0x74, 0x5f, 0x65, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0d, 0x6c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x45, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x22, 0x35, 0x0a, 0x19, 0x53, 0x69, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x55,
	0x49, 0x5f, 0x51, 0x75, 0x69, 0x74, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x72, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x72, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x22, 0x1c, 0x0a, 0x1a, 0x53, 0x69, 0x74, 0x65,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x55, 0x49, 0x5f, 0x51, 0x75, 0x69, 0x74, 0x5f, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1d, 0x0a, 0x1b, 0x53, 0x69, 0x74, 0x65, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x55, 0x49, 0x5f, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xc8, 0x01, 0x0a, 0x1c, 0x53, 0x69, 0x74, 0x65, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x55, 0x49, 0x5f, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x6f, 0x67, 0x6f, 0x6e, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6c, 0x6f, 0x67,
	0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x6c, 0x6f, 0x67, 0x6f, 0x6e,
	0x5f, 0x65, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c,
	0x6c, 0x6f, 0x67, 0x6f, 0x6e, 0x45, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x09, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x61,
	0x63, 0x68, 0x65, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0c, 0x63, 0x61, 0x63, 0x68, 0x65, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12,
	0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x63, 0x63, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x22, 0x22, 0x0a, 0x20, 0x53, 0x69, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x55, 0x49,
	0x5f, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x5f, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x22, 0x3f, 0x0a, 0x21, 0x53, 0x69, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x55, 0x49, 0x5f, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65,
	0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e,
	0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e,
	0x67, 0x75, 0x61, 0x67, 0x65, 0x22, 0x3e, 0x0a, 0x20, 0x53, 0x69, 0x74, 0x65, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x55, 0x49, 0x5f, 0x53, 0x65, 0x74, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67,
	0x65, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e,
	0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e,
	0x67, 0x75, 0x61, 0x67, 0x65, 0x22, 0x23, 0x0a, 0x21, 0x53, 0x69, 0x74, 0x65, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x55, 0x49, 0x5f, 0x53, 0x65, 0x74, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67,
	0x65, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x23, 0x0a, 0x21, 0x53, 0x69,
	0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x55, 0x49, 0x5f, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22,
	0xdf, 0x04, 0x0a, 0x22, 0x53, 0x69, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x55, 0x49,
	0x5f, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4e, 0x0a, 0x07, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x2e,
	0x53, 0x69, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x55, 0x49, 0x5f, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x4d, 0x0a, 0x08, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x73, 0x74, 0x65, 0x61, 0x6d,
	0x2e, 0x53, 0x69, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x55, 0x49, 0x5f, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x08, 0x70, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x1a, 0x77, 0x0a, 0x0a, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x02, 0x69, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x12, 0x1f, 0x0a,
	0x0b, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x1a, 0xa0,
	0x02, 0x0a, 0x07, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x69, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x74, 0x69,
	0x6d, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x70, 0x75, 0x72,
	0x63, 0x68, 0x61, 0x73, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0e, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x21,
	0x0a, 0x0c, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x75, 0x72, 0x6c,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x55,
	0x72, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x75, 0x72, 0x6c,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x55, 0x72,
	0x6c, 0x22, 0x29, 0x0a, 0x27, 0x53, 0x69, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x55,
	0x49, 0x5f, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x43, 0x61, 0x63, 0x68, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x90, 0x03, 0x0a,
	0x28, 0x53, 0x69, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x55, 0x49, 0x5f, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x43, 0x61, 0x63, 0x68, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x61, 0x63, 0x68, 0x65,
	0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x63, 0x61, 0x63, 0x68, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e,
	0x0a, 0x0b, 0x6d, 0x61, 0x78, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x5f, 0x67, 0x62, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x09, 0x6d, 0x61, 0x78, 0x53, 0x69, 0x7a, 0x65, 0x47, 0x62, 0x12, 0x1f,
	0x0a, 0x0b, 0x70, 0x32, 0x70, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0a, 0x70, 0x32, 0x70, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12,
	0x2e, 0x0a, 0x13, 0x65, 0x78, 0x70, 0x6c, 0x69, 0x63, 0x69, 0x74, 0x5f, 0x69, 0x70, 0x5f, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x65, 0x78,
	0x70, 0x6c, 0x69, 0x63, 0x69, 0x74, 0x49, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x29, 0x0a, 0x10, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x63,
	0x65, 0x73, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x65, 0x78, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x5f, 0x67, 0x62, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0d, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x53, 0x69, 0x7a, 0x65,
	0x47, 0x62, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x62, 0x77,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x42,
	0x77, 0x12, 0x2c, 0x0a, 0x12, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x42, 0x79, 0x74, 0x65, 0x73, 0x53, 0x65, 0x72, 0x76, 0x65, 0x64, 0x22,
	0x9a, 0x02, 0x0a, 0x27, 0x53, 0x69, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x55, 0x49,
	0x5f, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x43, 0x61, 0x63, 0x68, 0x65, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x65,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x61, 0x63,
	0x68, 0x65, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x63, 0x61, 0x63, 0x68, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x1e, 0x0a, 0x0b, 0x6d, 0x61, 0x78, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x5f, 0x67, 0x62, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x6d, 0x61, 0x78, 0x53, 0x69, 0x7a, 0x65, 0x47, 0x62,
	0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x32, 0x70, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x70, 0x32, 0x70, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x12, 0x29, 0x0a, 0x10, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x70, 0x72,
	0x6f, 0x63, 0x65, 0x73, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x65, 0x78, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x12, 0x2e, 0x0a, 0x13,
	0x65, 0x78, 0x70, 0x6c, 0x69, 0x63, 0x69, 0x74, 0x5f, 0x69, 0x70, 0x5f, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x65, 0x78, 0x70, 0x6c, 0x69,
	0x63, 0x69, 0x74, 0x49, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x2a, 0x0a, 0x28,
	0x53, 0x69, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x55, 0x49, 0x5f, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x43, 0x61, 0x63, 0x68, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x39, 0x48, 0x01, 0x5a, 0x32, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x31, 0x33, 0x6b, 0x2f, 0x67, 0x6f, 0x2d,
	0x73, 0x74, 0x65, 0x61, 0x6d, 0x2d, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f,
	0x76, 0x32, 0x2f, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x70, 0x62, 0x2f, 0x73, 0x74, 0x65, 0x61, 0x6d,
	0x80, 0x01, 0x00,
}

var (
	file_steam_steammessages_siteserverui_proto_rawDescOnce sync.Once
	file_steam_steammessages_siteserverui_proto_rawDescData = file_steam_steammessages_siteserverui_proto_rawDesc
)

func file_steam_steammessages_siteserverui_proto_rawDescGZIP() []byte {
	file_steam_steammessages_siteserverui_proto_rawDescOnce.Do(func() {
		file_steam_steammessages_siteserverui_proto_rawDescData = protoimpl.X.CompressGZIP(file_steam_steammessages_siteserverui_proto_rawDescData)
	})
	return file_steam_steammessages_siteserverui_proto_rawDescData
}

var file_steam_steammessages_siteserverui_proto_msgTypes = make([]protoimpl.MessageInfo, 24)
var file_steam_steammessages_siteserverui_proto_goTypes = []interface{}{
	(*SiteServerUI_Login_Request)(nil),                    // 0: steam.SiteServerUI_Login_Request
	(*SiteServerUI_Login_Response)(nil),                   // 1: steam.SiteServerUI_Login_Response
	(*SiteServerUI_LoginStatus_Request)(nil),              // 2: steam.SiteServerUI_LoginStatus_Request
	(*SiteServerUI_LoginStatus_Response)(nil),             // 3: steam.SiteServerUI_LoginStatus_Response
	(*SiteServerUI_CancelLogin_Request)(nil),              // 4: steam.SiteServerUI_CancelLogin_Request
	(*SiteServerUI_CancelLogin_Response)(nil),             // 5: steam.SiteServerUI_CancelLogin_Response
	(*SiteServerUI_Logout_Request)(nil),                   // 6: steam.SiteServerUI_Logout_Request
	(*SiteServerUI_Logout_Response)(nil),                  // 7: steam.SiteServerUI_Logout_Response
	(*SiteServerUI_Quit_Request)(nil),                     // 8: steam.SiteServerUI_Quit_Request
	(*SiteServerUI_Quit_Response)(nil),                    // 9: steam.SiteServerUI_Quit_Response
	(*SiteServerUI_Status_Request)(nil),                   // 10: steam.SiteServerUI_Status_Request
	(*SiteServerUI_Status_Response)(nil),                  // 11: steam.SiteServerUI_Status_Response
	(*SiteServerUI_GetLanguage_Request)(nil),              // 12: steam.SiteServerUI_GetLanguage_Request
	(*SiteServerUI_GetLanguage_Response)(nil),             // 13: steam.SiteServerUI_GetLanguage_Response
	(*SiteServerUI_SetLanguage_Request)(nil),              // 14: steam.SiteServerUI_SetLanguage_Request
	(*SiteServerUI_SetLanguage_Response)(nil),             // 15: steam.SiteServerUI_SetLanguage_Response
	(*SiteServerUI_ClientStatus_Request)(nil),             // 16: steam.SiteServerUI_ClientStatus_Request
	(*SiteServerUI_ClientStatus_Response)(nil),            // 17: steam.SiteServerUI_ClientStatus_Response
	(*SiteServerUI_ContentCacheStatus_Request)(nil),       // 18: steam.SiteServerUI_ContentCacheStatus_Request
	(*SiteServerUI_ContentCacheStatus_Response)(nil),      // 19: steam.SiteServerUI_ContentCacheStatus_Response
	(*SiteServerUI_ContentCacheConfig_Request)(nil),       // 20: steam.SiteServerUI_ContentCacheConfig_Request
	(*SiteServerUI_ContentCacheConfig_Response)(nil),      // 21: steam.SiteServerUI_ContentCacheConfig_Response
	(*SiteServerUI_ClientStatus_Response_ClientInfo)(nil), // 22: steam.SiteServerUI_ClientStatus_Response.ClientInfo
	(*SiteServerUI_ClientStatus_Response_Payment)(nil),    // 23: steam.SiteServerUI_ClientStatus_Response.Payment
}
var file_steam_steammessages_siteserverui_proto_depIdxs = []int32{
	22, // 0: steam.SiteServerUI_ClientStatus_Response.clients:type_name -> steam.SiteServerUI_ClientStatus_Response.ClientInfo
	23, // 1: steam.SiteServerUI_ClientStatus_Response.payments:type_name -> steam.SiteServerUI_ClientStatus_Response.Payment
	2,  // [2:2] is the sub-list for method output_type
	2,  // [2:2] is the sub-list for method input_type
	2,  // [2:2] is the sub-list for extension type_name
	2,  // [2:2] is the sub-list for extension extendee
	0,  // [0:2] is the sub-list for field type_name
}

func init() { file_steam_steammessages_siteserverui_proto_init() }
func file_steam_steammessages_siteserverui_proto_init() {
	if File_steam_steammessages_siteserverui_proto != nil {
		return
	}
	file_steam_steammessages_base_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_steam_steammessages_siteserverui_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SiteServerUI_Login_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_steammessages_siteserverui_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SiteServerUI_Login_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_steammessages_siteserverui_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SiteServerUI_LoginStatus_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_steammessages_siteserverui_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SiteServerUI_LoginStatus_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_steammessages_siteserverui_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SiteServerUI_CancelLogin_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_steammessages_siteserverui_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SiteServerUI_CancelLogin_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_steammessages_siteserverui_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SiteServerUI_Logout_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_steammessages_siteserverui_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SiteServerUI_Logout_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_steammessages_siteserverui_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SiteServerUI_Quit_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_steammessages_siteserverui_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SiteServerUI_Quit_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_steammessages_siteserverui_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SiteServerUI_Status_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_steammessages_siteserverui_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SiteServerUI_Status_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_steammessages_siteserverui_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SiteServerUI_GetLanguage_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_steammessages_siteserverui_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SiteServerUI_GetLanguage_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_steammessages_siteserverui_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SiteServerUI_SetLanguage_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_steammessages_siteserverui_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SiteServerUI_SetLanguage_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_steammessages_siteserverui_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SiteServerUI_ClientStatus_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_steammessages_siteserverui_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SiteServerUI_ClientStatus_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_steammessages_siteserverui_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SiteServerUI_ContentCacheStatus_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_steammessages_siteserverui_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SiteServerUI_ContentCacheStatus_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_steammessages_siteserverui_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SiteServerUI_ContentCacheConfig_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_steammessages_siteserverui_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SiteServerUI_ContentCacheConfig_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_steammessages_siteserverui_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SiteServerUI_ClientStatus_Response_ClientInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steam_steammessages_siteserverui_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SiteServerUI_ClientStatus_Response_Payment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_steam_steammessages_siteserverui_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   24,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_steam_steammessages_siteserverui_proto_goTypes,
		DependencyIndexes: file_steam_steammessages_siteserverui_proto_depIdxs,
		MessageInfos:      file_steam_steammessages_siteserverui_proto_msgTypes,
	}.Build()
	File_steam_steammessages_siteserverui_proto = out.File
	file_steam_steammessages_siteserverui_proto_rawDesc = nil
	file_steam_steammessages_siteserverui_proto_goTypes = nil
	file_steam_steammessages_siteserverui_proto_depIdxs = nil
}
