// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.21.0
// 	protoc        v3.11.2
// source: csgo/base_gcmessages.proto

package csgo

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type EGCBaseMsg int32

const (
	EGCBaseMsg_k_EMsgGCSystemMessage            EGCBaseMsg = 4001
	EGCBaseMsg_k_EMsgGCReplicateConVars         EGCBaseMsg = 4002
	EGCBaseMsg_k_EMsgGCConVarUpdated            EGCBaseMsg = 4003
	EGCBaseMsg_k_EMsgGCInQueue                  EGCBaseMsg = 4008
	EGCBaseMsg_k_EMsgGCInviteToParty            EGCBaseMsg = 4501
	EGCBaseMsg_k_EMsgGCInvitationCreated        EGCBaseMsg = 4502
	EGCBaseMsg_k_EMsgGCPartyInviteResponse      EGCBaseMsg = 4503
	EGCBaseMsg_k_EMsgGCKickFromParty            EGCBaseMsg = 4504
	EGCBaseMsg_k_EMsgGCLeaveParty               EGCBaseMsg = 4505
	EGCBaseMsg_k_EMsgGCServerAvailable          EGCBaseMsg = 4506
	EGCBaseMsg_k_EMsgGCClientConnectToServer    EGCBaseMsg = 4507
	EGCBaseMsg_k_EMsgGCGameServerInfo           EGCBaseMsg = 4508
	EGCBaseMsg_k_EMsgGCError                    EGCBaseMsg = 4509
	EGCBaseMsg_k_EMsgGCReplay_UploadedToYouTube EGCBaseMsg = 4510
	EGCBaseMsg_k_EMsgGCLANServerAvailable       EGCBaseMsg = 4511
)

// Enum value maps for EGCBaseMsg.
var (
	EGCBaseMsg_name = map[int32]string{
		4001: "k_EMsgGCSystemMessage",
		4002: "k_EMsgGCReplicateConVars",
		4003: "k_EMsgGCConVarUpdated",
		4008: "k_EMsgGCInQueue",
		4501: "k_EMsgGCInviteToParty",
		4502: "k_EMsgGCInvitationCreated",
		4503: "k_EMsgGCPartyInviteResponse",
		4504: "k_EMsgGCKickFromParty",
		4505: "k_EMsgGCLeaveParty",
		4506: "k_EMsgGCServerAvailable",
		4507: "k_EMsgGCClientConnectToServer",
		4508: "k_EMsgGCGameServerInfo",
		4509: "k_EMsgGCError",
		4510: "k_EMsgGCReplay_UploadedToYouTube",
		4511: "k_EMsgGCLANServerAvailable",
	}
	EGCBaseMsg_value = map[string]int32{
		"k_EMsgGCSystemMessage":            4001,
		"k_EMsgGCReplicateConVars":         4002,
		"k_EMsgGCConVarUpdated":            4003,
		"k_EMsgGCInQueue":                  4008,
		"k_EMsgGCInviteToParty":            4501,
		"k_EMsgGCInvitationCreated":        4502,
		"k_EMsgGCPartyInviteResponse":      4503,
		"k_EMsgGCKickFromParty":            4504,
		"k_EMsgGCLeaveParty":               4505,
		"k_EMsgGCServerAvailable":          4506,
		"k_EMsgGCClientConnectToServer":    4507,
		"k_EMsgGCGameServerInfo":           4508,
		"k_EMsgGCError":                    4509,
		"k_EMsgGCReplay_UploadedToYouTube": 4510,
		"k_EMsgGCLANServerAvailable":       4511,
	}
)

func (x EGCBaseMsg) Enum() *EGCBaseMsg {
	p := new(EGCBaseMsg)
	*p = x
	return p
}

func (x EGCBaseMsg) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EGCBaseMsg) Descriptor() protoreflect.EnumDescriptor {
	return file_csgo_base_gcmessages_proto_enumTypes[0].Descriptor()
}

func (EGCBaseMsg) Type() protoreflect.EnumType {
	return &file_csgo_base_gcmessages_proto_enumTypes[0]
}

func (x EGCBaseMsg) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *EGCBaseMsg) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = EGCBaseMsg(num)
	return nil
}

// Deprecated: Use EGCBaseMsg.Descriptor instead.
func (EGCBaseMsg) EnumDescriptor() ([]byte, []int) {
	return file_csgo_base_gcmessages_proto_rawDescGZIP(), []int{0}
}

type EGCBaseProtoObjectTypes int32

const (
	EGCBaseProtoObjectTypes_k_EProtoObjectPartyInvite EGCBaseProtoObjectTypes = 1001
	EGCBaseProtoObjectTypes_k_EProtoObjectLobbyInvite EGCBaseProtoObjectTypes = 1002
)

// Enum value maps for EGCBaseProtoObjectTypes.
var (
	EGCBaseProtoObjectTypes_name = map[int32]string{
		1001: "k_EProtoObjectPartyInvite",
		1002: "k_EProtoObjectLobbyInvite",
	}
	EGCBaseProtoObjectTypes_value = map[string]int32{
		"k_EProtoObjectPartyInvite": 1001,
		"k_EProtoObjectLobbyInvite": 1002,
	}
)

func (x EGCBaseProtoObjectTypes) Enum() *EGCBaseProtoObjectTypes {
	p := new(EGCBaseProtoObjectTypes)
	*p = x
	return p
}

func (x EGCBaseProtoObjectTypes) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EGCBaseProtoObjectTypes) Descriptor() protoreflect.EnumDescriptor {
	return file_csgo_base_gcmessages_proto_enumTypes[1].Descriptor()
}

func (EGCBaseProtoObjectTypes) Type() protoreflect.EnumType {
	return &file_csgo_base_gcmessages_proto_enumTypes[1]
}

func (x EGCBaseProtoObjectTypes) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *EGCBaseProtoObjectTypes) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = EGCBaseProtoObjectTypes(num)
	return nil
}

// Deprecated: Use EGCBaseProtoObjectTypes.Descriptor instead.
func (EGCBaseProtoObjectTypes) EnumDescriptor() ([]byte, []int) {
	return file_csgo_base_gcmessages_proto_rawDescGZIP(), []int{1}
}

type GC_BannedWordType int32

const (
	GC_BannedWordType_GC_BANNED_WORD_DISABLE_WORD GC_BannedWordType = 0
	GC_BannedWordType_GC_BANNED_WORD_ENABLE_WORD  GC_BannedWordType = 1
)

// Enum value maps for GC_BannedWordType.
var (
	GC_BannedWordType_name = map[int32]string{
		0: "GC_BANNED_WORD_DISABLE_WORD",
		1: "GC_BANNED_WORD_ENABLE_WORD",
	}
	GC_BannedWordType_value = map[string]int32{
		"GC_BANNED_WORD_DISABLE_WORD": 0,
		"GC_BANNED_WORD_ENABLE_WORD":  1,
	}
)

func (x GC_BannedWordType) Enum() *GC_BannedWordType {
	p := new(GC_BannedWordType)
	*p = x
	return p
}

func (x GC_BannedWordType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GC_BannedWordType) Descriptor() protoreflect.EnumDescriptor {
	return file_csgo_base_gcmessages_proto_enumTypes[2].Descriptor()
}

func (GC_BannedWordType) Type() protoreflect.EnumType {
	return &file_csgo_base_gcmessages_proto_enumTypes[2]
}

func (x GC_BannedWordType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *GC_BannedWordType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = GC_BannedWordType(num)
	return nil
}

// Deprecated: Use GC_BannedWordType.Descriptor instead.
func (GC_BannedWordType) EnumDescriptor() ([]byte, []int) {
	return file_csgo_base_gcmessages_proto_rawDescGZIP(), []int{2}
}

type CMsgGameServerInfo_ServerType int32

const (
	CMsgGameServerInfo_UNSPECIFIED CMsgGameServerInfo_ServerType = 0
	CMsgGameServerInfo_GAME        CMsgGameServerInfo_ServerType = 1
	CMsgGameServerInfo_PROXY       CMsgGameServerInfo_ServerType = 2
)

// Enum value maps for CMsgGameServerInfo_ServerType.
var (
	CMsgGameServerInfo_ServerType_name = map[int32]string{
		0: "UNSPECIFIED",
		1: "GAME",
		2: "PROXY",
	}
	CMsgGameServerInfo_ServerType_value = map[string]int32{
		"UNSPECIFIED": 0,
		"GAME":        1,
		"PROXY":       2,
	}
)

func (x CMsgGameServerInfo_ServerType) Enum() *CMsgGameServerInfo_ServerType {
	p := new(CMsgGameServerInfo_ServerType)
	*p = x
	return p
}

func (x CMsgGameServerInfo_ServerType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CMsgGameServerInfo_ServerType) Descriptor() protoreflect.EnumDescriptor {
	return file_csgo_base_gcmessages_proto_enumTypes[3].Descriptor()
}

func (CMsgGameServerInfo_ServerType) Type() protoreflect.EnumType {
	return &file_csgo_base_gcmessages_proto_enumTypes[3]
}

func (x CMsgGameServerInfo_ServerType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *CMsgGameServerInfo_ServerType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = CMsgGameServerInfo_ServerType(num)
	return nil
}

// Deprecated: Use CMsgGameServerInfo_ServerType.Descriptor instead.
func (CMsgGameServerInfo_ServerType) EnumDescriptor() ([]byte, []int) {
	return file_csgo_base_gcmessages_proto_rawDescGZIP(), []int{78, 0}
}

type CGCStorePurchaseInit_LineItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemDefId           *uint32 `protobuf:"varint,1,opt,name=item_def_id,json=itemDefId" json:"item_def_id,omitempty"`
	Quantity            *uint32 `protobuf:"varint,2,opt,name=quantity" json:"quantity,omitempty"`
	CostInLocalCurrency *uint32 `protobuf:"varint,3,opt,name=cost_in_local_currency,json=costInLocalCurrency" json:"cost_in_local_currency,omitempty"`
	PurchaseType        *uint32 `protobuf:"varint,4,opt,name=purchase_type,json=purchaseType" json:"purchase_type,omitempty"`
}

func (x *CGCStorePurchaseInit_LineItem) Reset() {
	*x = CGCStorePurchaseInit_LineItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_csgo_base_gcmessages_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CGCStorePurchaseInit_LineItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CGCStorePurchaseInit_LineItem) ProtoMessage() {}

func (x *CGCStorePurchaseInit_LineItem) ProtoReflect() protoreflect.Message {
	mi := &file_csgo_base_gcmessages_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CGCStorePurchaseInit_LineItem.ProtoReflect.Descriptor instead.
func (*CGCStorePurchaseInit_LineItem) Descriptor() ([]byte, []int) {
	return file_csgo_base_gcmessages_proto_rawDescGZIP(), []int{0}
}

func (x *CGCStorePurchaseInit_LineItem) GetItemDefId() uint32 {
	if x != nil && x.ItemDefId != nil {
		return *x.ItemDefId
	}
	return 0
}

func (x *CGCStorePurchaseInit_LineItem) GetQuantity() uint32 {
	if x != nil && x.Quantity != nil {
		return *x.Quantity
	}
	return 0
}

func (x *CGCStorePurchaseInit_LineItem) GetCostInLocalCurrency() uint32 {
	if x != nil && x.CostInLocalCurrency != nil {
		return *x.CostInLocalCurrency
	}
	return 0
}

func (x *CGCStorePurchaseInit_LineItem) GetPurchaseType() uint32 {
	if x != nil && x.PurchaseType != nil {
		return *x.PurchaseType
	}
	return 0
}

type CMsgGCStorePurchaseInit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Country   *string                          `protobuf:"bytes,1,opt,name=country" json:"country,omitempty"`
	Language  *int32                           `protobuf:"varint,2,opt,name=language" json:"language,omitempty"`
	Currency  *int32                           `protobuf:"varint,3,opt,name=currency" json:"currency,omitempty"`
	LineItems []*CGCStorePurchaseInit_LineItem `protobuf:"bytes,4,rep,name=line_items,json=lineItems" json:"line_items,omitempty"`
}

func (x *CMsgGCStorePurchaseInit) Reset() {
	*x = CMsgGCStorePurchaseInit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_csgo_base_gcmessages_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCStorePurchaseInit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCStorePurchaseInit) ProtoMessage() {}

func (x *CMsgGCStorePurchaseInit) ProtoReflect() protoreflect.Message {
	mi := &file_csgo_base_gcmessages_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCStorePurchaseInit.ProtoReflect.Descriptor instead.
func (*CMsgGCStorePurchaseInit) Descriptor() ([]byte, []int) {
	return file_csgo_base_gcmessages_proto_rawDescGZIP(), []int{1}
}

func (x *CMsgGCStorePurchaseInit) GetCountry() string {
	if x != nil && x.Country != nil {
		return *x.Country
	}
	return ""
}

func (x *CMsgGCStorePurchaseInit) GetLanguage() int32 {
	if x != nil && x.Language != nil {
		return *x.Language
	}
	return 0
}

func (x *CMsgGCStorePurchaseInit) GetCurrency() int32 {
	if x != nil && x.Currency != nil {
		return *x.Currency
	}
	return 0
}

func (x *CMsgGCStorePurchaseInit) GetLineItems() []*CGCStorePurchaseInit_LineItem {
	if x != nil {
		return x.LineItems
	}
	return nil
}

type CMsgGCStorePurchaseInitResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result  *int32   `protobuf:"varint,1,opt,name=result" json:"result,omitempty"`
	TxnId   *uint64  `protobuf:"varint,2,opt,name=txn_id,json=txnId" json:"txn_id,omitempty"`
	Url     *string  `protobuf:"bytes,3,opt,name=url" json:"url,omitempty"`
	ItemIds []uint64 `protobuf:"varint,4,rep,name=item_ids,json=itemIds" json:"item_ids,omitempty"`
}

func (x *CMsgGCStorePurchaseInitResponse) Reset() {
	*x = CMsgGCStorePurchaseInitResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_csgo_base_gcmessages_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCStorePurchaseInitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCStorePurchaseInitResponse) ProtoMessage() {}

func (x *CMsgGCStorePurchaseInitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_csgo_base_gcmessages_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCStorePurchaseInitResponse.ProtoReflect.Descriptor instead.
func (*CMsgGCStorePurchaseInitResponse) Descriptor() ([]byte, []int) {
	return file_csgo_base_gcmessages_proto_rawDescGZIP(), []int{2}
}

func (x *CMsgGCStorePurchaseInitResponse) GetResult() int32 {
	if x != nil && x.Result != nil {
		return *x.Result
	}
	return 0
}

func (x *CMsgGCStorePurchaseInitResponse) GetTxnId() uint64 {
	if x != nil && x.TxnId != nil {
		return *x.TxnId
	}
	return 0
}

func (x *CMsgGCStorePurchaseInitResponse) GetUrl() string {
	if x != nil && x.Url != nil {
		return *x.Url
	}
	return ""
}

func (x *CMsgGCStorePurchaseInitResponse) GetItemIds() []uint64 {
	if x != nil {
		return x.ItemIds
	}
	return nil
}

type CSOPartyInvite struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId    *uint64 `protobuf:"varint,1,opt,name=group_id,json=groupId" json:"group_id,omitempty"`
	SenderId   *uint64 `protobuf:"fixed64,2,opt,name=sender_id,json=senderId" json:"sender_id,omitempty"`
	SenderName *string `protobuf:"bytes,3,opt,name=sender_name,json=senderName" json:"sender_name,omitempty"`
}

func (x *CSOPartyInvite) Reset() {
	*x = CSOPartyInvite{}
	if protoimpl.UnsafeEnabled {
		mi := &file_csgo_base_gcmessages_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CSOPartyInvite) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSOPartyInvite) ProtoMessage() {}

func (x *CSOPartyInvite) ProtoReflect() protoreflect.Message {
	mi := &file_csgo_base_gcmessages_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSOPartyInvite.ProtoReflect.Descriptor instead.
func (*CSOPartyInvite) Descriptor() ([]byte, []int) {
	return file_csgo_base_gcmessages_proto_rawDescGZIP(), []int{3}
}

func (x *CSOPartyInvite) GetGroupId() uint64 {
	if x != nil && x.GroupId != nil {
		return *x.GroupId
	}
	return 0
}

func (x *CSOPartyInvite) GetSenderId() uint64 {
	if x != nil && x.SenderId != nil {
		return *x.SenderId
	}
	return 0
}

func (x *CSOPartyInvite) GetSenderName() string {
	if x != nil && x.SenderName != nil {
		return *x.SenderName
	}
	return ""
}

type CSOLobbyInvite struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId    *uint64 `protobuf:"varint,1,opt,name=group_id,json=groupId" json:"group_id,omitempty"`
	SenderId   *uint64 `protobuf:"fixed64,2,opt,name=sender_id,json=senderId" json:"sender_id,omitempty"`
	SenderName *string `protobuf:"bytes,3,opt,name=sender_name,json=senderName" json:"sender_name,omitempty"`
}

func (x *CSOLobbyInvite) Reset() {
	*x = CSOLobbyInvite{}
	if protoimpl.UnsafeEnabled {
		mi := &file_csgo_base_gcmessages_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CSOLobbyInvite) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSOLobbyInvite) ProtoMessage() {}

func (x *CSOLobbyInvite) ProtoReflect() protoreflect.Message {
	mi := &file_csgo_base_gcmessages_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSOLobbyInvite.ProtoReflect.Descriptor instead.
func (*CSOLobbyInvite) Descriptor() ([]byte, []int) {
	return file_csgo_base_gcmessages_proto_rawDescGZIP(), []int{4}
}

func (x *CSOLobbyInvite) GetGroupId() uint64 {
	if x != nil && x.GroupId != nil {
		return *x.GroupId
	}
	return 0
}

func (x *CSOLobbyInvite) GetSenderId() uint64 {
	if x != nil && x.SenderId != nil {
		return *x.SenderId
	}
	return 0
}

func (x *CSOLobbyInvite) GetSenderName() string {
	if x != nil && x.SenderName != nil {
		return *x.SenderName
	}
	return ""
}

type CMsgSystemBroadcast struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message *string `protobuf:"bytes,1,opt,name=message" json:"message,omitempty"`
}

func (x *CMsgSystemBroadcast) Reset() {
	*x = CMsgSystemBroadcast{}
	if protoimpl.UnsafeEnabled {
		mi := &file_csgo_base_gcmessages_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgSystemBroadcast) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSystemBroadcast) ProtoMessage() {}

func (x *CMsgSystemBroadcast) ProtoReflect() protoreflect.Message {
	mi := &file_csgo_base_gcmessages_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSystemBroadcast.ProtoReflect.Descriptor instead.
func (*CMsgSystemBroadcast) Descriptor() ([]byte, []int) {
	return file_csgo_base_gcmessages_proto_rawDescGZIP(), []int{5}
}

func (x *CMsgSystemBroadcast) GetMessage() string {
	if x != nil && x.Message != nil {
		return *x.Message
	}
	return ""
}

type CMsgInviteToParty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SteamId       *uint64 `protobuf:"fixed64,1,opt,name=steam_id,json=steamId" json:"steam_id,omitempty"`
	ClientVersion *uint32 `protobuf:"varint,2,opt,name=client_version,json=clientVersion" json:"client_version,omitempty"`
	TeamInvite    *uint32 `protobuf:"varint,3,opt,name=team_invite,json=teamInvite" json:"team_invite,omitempty"`
}

func (x *CMsgInviteToParty) Reset() {
	*x = CMsgInviteToParty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_csgo_base_gcmessages_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgInviteToParty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgInviteToParty) ProtoMessage() {}

func (x *CMsgInviteToParty) ProtoReflect() protoreflect.Message {
	mi := &file_csgo_base_gcmessages_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgInviteToParty.ProtoReflect.Descriptor instead.
func (*CMsgInviteToParty) Descriptor() ([]byte, []int) {
	return file_csgo_base_gcmessages_proto_rawDescGZIP(), []int{6}
}

func (x *CMsgInviteToParty) GetSteamId() uint64 {
	if x != nil && x.SteamId != nil {
		return *x.SteamId
	}
	return 0
}

func (x *CMsgInviteToParty) GetClientVersion() uint32 {
	if x != nil && x.ClientVersion != nil {
		return *x.ClientVersion
	}
	return 0
}

func (x *CMsgInviteToParty) GetTeamInvite() uint32 {
	if x != nil && x.TeamInvite != nil {
		return *x.TeamInvite
	}
	return 0
}

type CMsgInvitationCreated struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId *uint64 `protobuf:"varint,1,opt,name=group_id,json=groupId" json:"group_id,omitempty"`
	SteamId *uint64 `protobuf:"fixed64,2,opt,name=steam_id,json=steamId" json:"steam_id,omitempty"`
}

func (x *CMsgInvitationCreated) Reset() {
	*x = CMsgInvitationCreated{}
	if protoimpl.UnsafeEnabled {
		mi := &file_csgo_base_gcmessages_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgInvitationCreated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgInvitationCreated) ProtoMessage() {}

func (x *CMsgInvitationCreated) ProtoReflect() protoreflect.Message {
	mi := &file_csgo_base_gcmessages_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgInvitationCreated.ProtoReflect.Descriptor instead.
func (*CMsgInvitationCreated) Descriptor() ([]byte, []int) {
	return file_csgo_base_gcmessages_proto_rawDescGZIP(), []int{7}
}

func (x *CMsgInvitationCreated) GetGroupId() uint64 {
	if x != nil && x.GroupId != nil {
		return *x.GroupId
	}
	return 0
}

func (x *CMsgInvitationCreated) GetSteamId() uint64 {
	if x != nil && x.SteamId != nil {
		return *x.SteamId
	}
	return 0
}

type CMsgPartyInviteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PartyId       *uint64 `protobuf:"varint,1,opt,name=party_id,json=partyId" json:"party_id,omitempty"`
	Accept        *bool   `protobuf:"varint,2,opt,name=accept" json:"accept,omitempty"`
	ClientVersion *uint32 `protobuf:"varint,3,opt,name=client_version,json=clientVersion" json:"client_version,omitempty"`
	TeamInvite    *uint32 `protobuf:"varint,4,opt,name=team_invite,json=teamInvite" json:"team_invite,omitempty"`
}

func (x *CMsgPartyInviteResponse) Reset() {
	*x = CMsgPartyInviteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_csgo_base_gcmessages_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgPartyInviteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgPartyInviteResponse) ProtoMessage() {}

func (x *CMsgPartyInviteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_csgo_base_gcmessages_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgPartyInviteResponse.ProtoReflect.Descriptor instead.
func (*CMsgPartyInviteResponse) Descriptor() ([]byte, []int) {
	return file_csgo_base_gcmessages_proto_rawDescGZIP(), []int{8}
}

func (x *CMsgPartyInviteResponse) GetPartyId() uint64 {
	if x != nil && x.PartyId != nil {
		return *x.PartyId
	}
	return 0
}

func (x *CMsgPartyInviteResponse) GetAccept() bool {
	if x != nil && x.Accept != nil {
		return *x.Accept
	}
	return false
}

func (x *CMsgPartyInviteResponse) GetClientVersion() uint32 {
	if x != nil && x.ClientVersion != nil {
		return *x.ClientVersion
	}
	return 0
}

func (x *CMsgPartyInviteResponse) GetTeamInvite() uint32 {
	if x != nil && x.TeamInvite != nil {
		return *x.TeamInvite
	}
	return 0
}

type CMsgKickFromParty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SteamId *uint64 `protobuf:"fixed64,1,opt,name=steam_id,json=steamId" json:"steam_id,omitempty"`
}

func (x *CMsgKickFromParty) Reset() {
	*x = CMsgKickFromParty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_csgo_base_gcmessages_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgKickFromParty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgKickFromParty) ProtoMessage() {}

func (x *CMsgKickFromParty) ProtoReflect() protoreflect.Message {
	mi := &file_csgo_base_gcmessages_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgKickFromParty.ProtoReflect.Descriptor instead.
func (*CMsgKickFromParty) Descriptor() ([]byte, []int) {
	return file_csgo_base_gcmessages_proto_rawDescGZIP(), []int{9}
}

func (x *CMsgKickFromParty) GetSteamId() uint64 {
	if x != nil && x.SteamId != nil {
		return *x.SteamId
	}
	return 0
}

type CMsgLeaveParty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CMsgLeaveParty) Reset() {
	*x = CMsgLeaveParty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_csgo_base_gcmessages_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgLeaveParty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgLeaveParty) ProtoMessage() {}

func (x *CMsgLeaveParty) ProtoReflect() protoreflect.Message {
	mi := &file_csgo_base_gcmessages_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgLeaveParty.ProtoReflect.Descriptor instead.
func (*CMsgLeaveParty) Descriptor() ([]byte, []int) {
	return file_csgo_base_gcmessages_proto_rawDescGZIP(), []int{10}
}

type CMsgServerAvailable struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CMsgServerAvailable) Reset() {
	*x = CMsgServerAvailable{}
	if protoimpl.UnsafeEnabled {
		mi := &file_csgo_base_gcmessages_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgServerAvailable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgServerAvailable) ProtoMessage() {}

func (x *CMsgServerAvailable) ProtoReflect() protoreflect.Message {
	mi := &file_csgo_base_gcmessages_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgServerAvailable.ProtoReflect.Descriptor instead.
func (*CMsgServerAvailable) Descriptor() ([]byte, []int) {
	return file_csgo_base_gcmessages_proto_rawDescGZIP(), []int{11}
}

type CMsgLANServerAvailable struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LobbyId *uint64 `protobuf:"fixed64,1,opt,name=lobby_id,json=lobbyId" json:"lobby_id,omitempty"`
}

func (x *CMsgLANServerAvailable) Reset() {
	*x = CMsgLANServerAvailable{}
	if protoimpl.UnsafeEnabled {
		mi := &file_csgo_base_gcmessages_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgLANServerAvailable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgLANServerAvailable) ProtoMessage() {}

func (x *CMsgLANServerAvailable) ProtoReflect() protoreflect.Message {
	mi := &file_csgo_base_gcmessages_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgLANServerAvailable.ProtoReflect.Descriptor instead.
func (*CMsgLANServerAvailable) Descriptor() ([]byte, []int) {
	return file_csgo_base_gcmessages_proto_rawDescGZIP(), []int{12}
}

func (x *CMsgLANServerAvailable) GetLobbyId() uint64 {
	if x != nil && x.LobbyId != nil {
		return *x.LobbyId
	}
	return 0
}

type CSOEconGameAccountClient struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AdditionalBackpackSlots *uint32 `protobuf:"varint,1,opt,name=additional_backpack_slots,json=additionalBackpackSlots,def=0" json:"additional_backpack_slots,omitempty"`
	BonusXpTimestampRefresh *uint32 `protobuf:"fixed32,12,opt,name=bonus_xp_timestamp_refresh,json=bonusXpTimestampRefresh" json:"bonus_xp_timestamp_refresh,omitempty"`
	BonusXpUsedflags        *uint32 `protobuf:"varint,13,opt,name=bonus_xp_usedflags,json=bonusXpUsedflags" json:"bonus_xp_usedflags,omitempty"`
	ElevatedState           *uint32 `protobuf:"varint,14,opt,name=elevated_state,json=elevatedState" json:"elevated_state,omitempty"`
	ElevatedTimestamp       *uint32 `protobuf:"varint,15,opt,name=elevated_timestamp,json=elevatedTimestamp" json:"elevated_timestamp,omitempty"`
}

// Default values for CSOEconGameAccountClient fields.
const (
	Default_CSOEconGameAccountClient_AdditionalBackpackSlots = uint32(0)
)

func (x *CSOEconGameAccountClient) Reset() {
	*x = CSOEconGameAccountClient{}
	if protoimpl.UnsafeEnabled {
		mi := &file_csgo_base_gcmessages_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CSOEconGameAccountClient) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSOEconGameAccountClient) ProtoMessage() {}

func (x *CSOEconGameAccountClient) ProtoReflect() protoreflect.Message {
	mi := &file_csgo_base_gcmessages_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSOEconGameAccountClient.ProtoReflect.Descriptor instead.
func (*CSOEconGameAccountClient) Descriptor() ([]byte, []int) {
	return file_csgo_base_gcmessages_proto_rawDescGZIP(), []int{13}
}

func (x *CSOEconGameAccountClient) GetAdditionalBackpackSlots() uint32 {
	if x != nil && x.AdditionalBackpackSlots != nil {
		return *x.AdditionalBackpackSlots
	}
	return Default_CSOEconGameAccountClient_AdditionalBackpackSlots
}

func (x *CSOEconGameAccountClient) GetBonusXpTimestampRefresh() uint32 {
	if x != nil && x.BonusXpTimestampRefresh != nil {
		return *x.BonusXpTimestampRefresh
	}
	return 0
}

func (x *CSOEconGameAccountClient) GetBonusXpUsedflags() uint32 {
	if x != nil && x.BonusXpUsedflags != nil {
		return *x.BonusXpUsedflags
	}
	return 0
}

func (x *CSOEconGameAccountClient) GetElevatedState() uint32 {
	if x != nil && x.ElevatedState != nil {
		return *x.ElevatedState
	}
	return 0
}

func (x *CSOEconGameAccountClient) GetElevatedTimestamp() uint32 {
	if x != nil && x.ElevatedTimestamp != nil {
		return *x.ElevatedTimestamp
	}
	return 0
}

type CSOItemCriteriaCondition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Op          *int32   `protobuf:"varint,1,opt,name=op" json:"op,omitempty"`
	Field       *string  `protobuf:"bytes,2,opt,name=field" json:"field,omitempty"`
	Required    *bool    `protobuf:"varint,3,opt,name=required" json:"required,omitempty"`
	FloatValue  *float32 `protobuf:"fixed32,4,opt,name=float_value,json=floatValue" json:"float_value,omitempty"`
	StringValue *string  `protobuf:"bytes,5,opt,name=string_value,json=stringValue" json:"string_value,omitempty"`
}

func (x *CSOItemCriteriaCondition) Reset() {
	*x = CSOItemCriteriaCondition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_csgo_base_gcmessages_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CSOItemCriteriaCondition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSOItemCriteriaCondition) ProtoMessage() {}

func (x *CSOItemCriteriaCondition) ProtoReflect() protoreflect.Message {
	mi := &file_csgo_base_gcmessages_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSOItemCriteriaCondition.ProtoReflect.Descriptor instead.
func (*CSOItemCriteriaCondition) Descriptor() ([]byte, []int) {
	return file_csgo_base_gcmessages_proto_rawDescGZIP(), []int{14}
}

func (x *CSOItemCriteriaCondition) GetOp() int32 {
	if x != nil && x.Op != nil {
		return *x.Op
	}
	return 0
}

func (x *CSOItemCriteriaCondition) GetField() string {
	if x != nil && x.Field != nil {
		return *x.Field
	}
	return ""
}

func (x *CSOItemCriteriaCondition) GetRequired() bool {
	if x != nil && x.Required != nil {
		return *x.Required
	}
	return false
}

func (x *CSOItemCriteriaCondition) GetFloatValue() float32 {
	if x != nil && x.FloatValue != nil {
		return *x.FloatValue
	}
	return 0
}

func (x *CSOItemCriteriaCondition) GetStringValue() string {
	if x != nil && x.StringValue != nil {
		return *x.StringValue
	}
	return ""
}

type CSOItemCriteria struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemLevel         *uint32                     `protobuf:"varint,1,opt,name=item_level,json=itemLevel" json:"item_level,omitempty"`
	ItemQuality       *int32                      `protobuf:"varint,2,opt,name=item_quality,json=itemQuality" json:"item_quality,omitempty"`
	ItemLevelSet      *bool                       `protobuf:"varint,3,opt,name=item_level_set,json=itemLevelSet" json:"item_level_set,omitempty"`
	ItemQualitySet    *bool                       `protobuf:"varint,4,opt,name=item_quality_set,json=itemQualitySet" json:"item_quality_set,omitempty"`
	InitialInventory  *uint32                     `protobuf:"varint,5,opt,name=initial_inventory,json=initialInventory" json:"initial_inventory,omitempty"`
	InitialQuantity   *uint32                     `protobuf:"varint,6,opt,name=initial_quantity,json=initialQuantity" json:"initial_quantity,omitempty"`
	IgnoreEnabledFlag *bool                       `protobuf:"varint,8,opt,name=ignore_enabled_flag,json=ignoreEnabledFlag" json:"ignore_enabled_flag,omitempty"`
	Conditions        []*CSOItemCriteriaCondition `protobuf:"bytes,9,rep,name=conditions" json:"conditions,omitempty"`
	ItemRarity        *int32                      `protobuf:"varint,10,opt,name=item_rarity,json=itemRarity" json:"item_rarity,omitempty"`
	ItemRaritySet     *bool                       `protobuf:"varint,11,opt,name=item_rarity_set,json=itemRaritySet" json:"item_rarity_set,omitempty"`
	RecentOnly        *bool                       `protobuf:"varint,12,opt,name=recent_only,json=recentOnly" json:"recent_only,omitempty"`
}

func (x *CSOItemCriteria) Reset() {
	*x = CSOItemCriteria{}
	if protoimpl.UnsafeEnabled {
		mi := &file_csgo_base_gcmessages_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CSOItemCriteria) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSOItemCriteria) ProtoMessage() {}

func (x *CSOItemCriteria) ProtoReflect() protoreflect.Message {
	mi := &file_csgo_base_gcmessages_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSOItemCriteria.ProtoReflect.Descriptor instead.
func (*CSOItemCriteria) Descriptor() ([]byte, []int) {
	return file_csgo_base_gcmessages_proto_rawDescGZIP(), []int{15}
}

func (x *CSOItemCriteria) GetItemLevel() uint32 {
	if x != nil && x.ItemLevel != nil {
		return *x.ItemLevel
	}
	return 0
}

func (x *CSOItemCriteria) GetItemQuality() int32 {
	if x != nil && x.ItemQuality != nil {
		return *x.ItemQuality
	}
	return 0
}

func (x *CSOItemCriteria) GetItemLevelSet() bool {
	if x != nil && x.ItemLevelSet != nil {
		return *x.ItemLevelSet
	}
	return false
}

func (x *CSOItemCriteria) GetItemQualitySet() bool {
	if x != nil && x.ItemQualitySet != nil {
		return *x.ItemQualitySet
	}
	return false
}

func (x *CSOItemCriteria) GetInitialInventory() uint32 {
	if x != nil && x.InitialInventory != nil {
		return *x.InitialInventory
	}
	return 0
}

func (x *CSOItemCriteria) GetInitialQuantity() uint32 {
	if x != nil && x.InitialQuantity != nil {
		return *x.InitialQuantity
	}
	return 0
}

func (x *CSOItemCriteria) GetIgnoreEnabledFlag() bool {
	if x != nil && x.IgnoreEnabledFlag != nil {
		return *x.IgnoreEnabledFlag
	}
	return false
}

func (x *CSOItemCriteria) GetConditions() []*CSOItemCriteriaCondition {
	if x != nil {
		return x.Conditions
	}
	return nil
}

func (x *CSOItemCriteria) GetItemRarity() int32 {
	if x != nil && x.ItemRarity != nil {
		return *x.ItemRarity
	}
	return 0
}

func (x *CSOItemCriteria) GetItemRaritySet() bool {
	if x != nil && x.ItemRaritySet != nil {
		return *x.ItemRaritySet
	}
	return false
}

func (x *CSOItemCriteria) GetRecentOnly() bool {
	if x != nil && x.RecentOnly != nil {
		return *x.RecentOnly
	}
	return false
}

type CSOItemRecipe struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DefIndex             *uint32            `protobuf:"varint,1,opt,name=def_index,json=defIndex" json:"def_index,omitempty"`
	Name                 *string            `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	NA                   *string            `protobuf:"bytes,3,opt,name=n_a,json=nA" json:"n_a,omitempty"`
	DescInputs           *string            `protobuf:"bytes,4,opt,name=desc_inputs,json=descInputs" json:"desc_inputs,omitempty"`
	DescOutputs          *string            `protobuf:"bytes,5,opt,name=desc_outputs,json=descOutputs" json:"desc_outputs,omitempty"`
	DiA                  *string            `protobuf:"bytes,6,opt,name=di_a,json=diA" json:"di_a,omitempty"`
	DiB                  *string            `protobuf:"bytes,7,opt,name=di_b,json=diB" json:"di_b,omitempty"`
	DiC                  *string            `protobuf:"bytes,8,opt,name=di_c,json=diC" json:"di_c,omitempty"`
	DoA                  *string            `protobuf:"bytes,9,opt,name=do_a,json=doA" json:"do_a,omitempty"`
	DoB                  *string            `protobuf:"bytes,10,opt,name=do_b,json=doB" json:"do_b,omitempty"`
	DoC                  *string            `protobuf:"bytes,11,opt,name=do_c,json=doC" json:"do_c,omitempty"`
	RequiresAllSameClass *bool              `protobuf:"varint,12,opt,name=requires_all_same_class,json=requiresAllSameClass" json:"requires_all_same_class,omitempty"`
	RequiresAllSameSlot  *bool              `protobuf:"varint,13,opt,name=requires_all_same_slot,json=requiresAllSameSlot" json:"requires_all_same_slot,omitempty"`
	ClassUsageForOutput  *int32             `protobuf:"varint,14,opt,name=class_usage_for_output,json=classUsageForOutput" json:"class_usage_for_output,omitempty"`
	SlotUsageForOutput   *int32             `protobuf:"varint,15,opt,name=slot_usage_for_output,json=slotUsageForOutput" json:"slot_usage_for_output,omitempty"`
	SetForOutput         *int32             `protobuf:"varint,16,opt,name=set_for_output,json=setForOutput" json:"set_for_output,omitempty"`
	InputItemsCriteria   []*CSOItemCriteria `protobuf:"bytes,20,rep,name=input_items_criteria,json=inputItemsCriteria" json:"input_items_criteria,omitempty"`
	OutputItemsCriteria  []*CSOItemCriteria `protobuf:"bytes,21,rep,name=output_items_criteria,json=outputItemsCriteria" json:"output_items_criteria,omitempty"`
	InputItemDupeCounts  []uint32           `protobuf:"varint,22,rep,name=input_item_dupe_counts,json=inputItemDupeCounts" json:"input_item_dupe_counts,omitempty"`
}

func (x *CSOItemRecipe) Reset() {
	*x = CSOItemRecipe{}
	if protoimpl.UnsafeEnabled {
		mi := &file_csgo_base_gcmessages_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CSOItemRecipe) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSOItemRecipe) ProtoMessage() {}

func (x *CSOItemRecipe) ProtoReflect() protoreflect.Message {
	mi := &file_csgo_base_gcmessages_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSOItemRecipe.ProtoReflect.Descriptor instead.
func (*CSOItemRecipe) Descriptor() ([]byte, []int) {
	return file_csgo_base_gcmessages_proto_rawDescGZIP(), []int{16}
}

func (x *CSOItemRecipe) GetDefIndex() uint32 {
	if x != nil && x.DefIndex != nil {
		return *x.DefIndex
	}
	return 0
}

func (x *CSOItemRecipe) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *CSOItemRecipe) GetNA() string {
	if x != nil && x.NA != nil {
		return *x.NA
	}
	return ""
}

func (x *CSOItemRecipe) GetDescInputs() string {
	if x != nil && x.DescInputs != nil {
		return *x.DescInputs
	}
	return ""
}

func (x *CSOItemRecipe) GetDescOutputs() string {
	if x != nil && x.DescOutputs != nil {
		return *x.DescOutputs
	}
	return ""
}

func (x *CSOItemRecipe) GetDiA() string {
	if x != nil && x.DiA != nil {
		return *x.DiA
	}
	return ""
}

func (x *CSOItemRecipe) GetDiB() string {
	if x != nil && x.DiB != nil {
		return *x.DiB
	}
	return ""
}

func (x *CSOItemRecipe) GetDiC() string {
	if x != nil && x.DiC != nil {
		return *x.DiC
	}
	return ""
}

func (x *CSOItemRecipe) GetDoA() string {
	if x != nil && x.DoA != nil {
		return *x.DoA
	}
	return ""
}

func (x *CSOItemRecipe) GetDoB() string {
	if x != nil && x.DoB != nil {
		return *x.DoB
	}
	return ""
}

func (x *CSOItemRecipe) GetDoC() string {
	if x != nil && x.DoC != nil {
		return *x.DoC
	}
	return ""
}

func (x *CSOItemRecipe) GetRequiresAllSameClass() bool {
	if x != nil && x.RequiresAllSameClass != nil {
		return *x.RequiresAllSameClass
	}
	return false
}

func (x *CSOItemRecipe) GetRequiresAllSameSlot() bool {
	if x != nil && x.RequiresAllSameSlot != nil {
		return *x.RequiresAllSameSlot
	}
	return false
}

func (x *CSOItemRecipe) GetClassUsageForOutput() int32 {
	if x != nil && x.ClassUsageForOutput != nil {
		return *x.ClassUsageForOutput
	}
	return 0
}

func (x *CSOItemRecipe) GetSlotUsageForOutput() int32 {
	if x != nil && x.SlotUsageForOutput != nil {
		return *x.SlotUsageForOutput
	}
	return 0
}

func (x *CSOItemRecipe) GetSetForOutput() int32 {
	if x != nil && x.SetForOutput != nil {
		return *x.SetForOutput
	}
	return 0
}

func (x *CSOItemRecipe) GetInputItemsCriteria() []*CSOItemCriteria {
	if x != nil {
		return x.InputItemsCriteria
	}
	return nil
}

func (x *CSOItemRecipe) GetOutputItemsCriteria() []*CSOItemCriteria {
	if x != nil {
		return x.OutputItemsCriteria
	}
	return nil
}

func (x *CSOItemRecipe) GetInputItemDupeCounts() []uint32 {
	if x != nil {
		return x.InputItemDupeCounts
	}
	return nil
}

type CMsgDevNewItemRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Receiver *uint64          `protobuf:"fixed64,1,opt,name=receiver" json:"receiver,omitempty"`
	Criteria *CSOItemCriteria `protobuf:"bytes,2,opt,name=criteria" json:"criteria,omitempty"`
}

func (x *CMsgDevNewItemRequest) Reset() {
	*x = CMsgDevNewItemRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_csgo_base_gcmessages_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgDevNewItemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgDevNewItemRequest) ProtoMessage() {}

func (x *CMsgDevNewItemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_csgo_base_gcmessages_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgDevNewItemRequest.ProtoReflect.Descriptor instead.
func (*CMsgDevNewItemRequest) Descriptor() ([]byte, []int) {
	return file_csgo_base_gcmessages_proto_rawDescGZIP(), []int{17}
}

func (x *CMsgDevNewItemRequest) GetReceiver() uint64 {
	if x != nil && x.Receiver != nil {
		return *x.Receiver
	}
	return 0
}

func (x *CMsgDevNewItemRequest) GetCriteria() *CSOItemCriteria {
	if x != nil {
		return x.Criteria
	}
	return nil
}

type CMsgIncrementKillCountAttribute struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KillerAccountId *uint32 `protobuf:"fixed32,1,opt,name=killer_account_id,json=killerAccountId" json:"killer_account_id,omitempty"`
	VictimAccountId *uint32 `protobuf:"fixed32,2,opt,name=victim_account_id,json=victimAccountId" json:"victim_account_id,omitempty"`
	ItemId          *uint64 `protobuf:"varint,3,opt,name=item_id,json=itemId" json:"item_id,omitempty"`
	EventType       *uint32 `protobuf:"varint,4,opt,name=event_type,json=eventType" json:"event_type,omitempty"`
	Amount          *uint32 `protobuf:"varint,5,opt,name=amount" json:"amount,omitempty"`
}

func (x *CMsgIncrementKillCountAttribute) Reset() {
	*x = CMsgIncrementKillCountAttribute{}
	if protoimpl.UnsafeEnabled {
		mi := &file_csgo_base_gcmessages_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgIncrementKillCountAttribute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgIncrementKillCountAttribute) ProtoMessage() {}

func (x *CMsgIncrementKillCountAttribute) ProtoReflect() protoreflect.Message {
	mi := &file_csgo_base_gcmessages_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgIncrementKillCountAttribute.ProtoReflect.Descriptor instead.
func (*CMsgIncrementKillCountAttribute) Descriptor() ([]byte, []int) {
	return file_csgo_base_gcmessages_proto_rawDescGZIP(), []int{18}
}

func (x *CMsgIncrementKillCountAttribute) GetKillerAccountId() uint32 {
	if x != nil && x.KillerAccountId != nil {
		return *x.KillerAccountId
	}
	return 0
}

func (x *CMsgIncrementKillCountAttribute) GetVictimAccountId() uint32 {
	if x != nil && x.VictimAccountId != nil {
		return *x.VictimAccountId
	}
	return 0
}

func (x *CMsgIncrementKillCountAttribute) GetItemId() uint64 {
	if x != nil && x.ItemId != nil {
		return *x.ItemId
	}
	return 0
}

func (x *CMsgIncrementKillCountAttribute) GetEventType() uint32 {
	if x != nil && x.EventType != nil {
		return *x.EventType
	}
	return 0
}

func (x *CMsgIncrementKillCountAttribute) GetAmount() uint32 {
	if x != nil && x.Amount != nil {
		return *x.Amount
	}
	return 0
}

type CMsgApplySticker struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StickerItemId  *uint64  `protobuf:"varint,1,opt,name=sticker_item_id,json=stickerItemId" json:"sticker_item_id,omitempty"`
	ItemItemId     *uint64  `protobuf:"varint,2,opt,name=item_item_id,json=itemItemId" json:"item_item_id,omitempty"`
	StickerSlot    *uint32  `protobuf:"varint,3,opt,name=sticker_slot,json=stickerSlot" json:"sticker_slot,omitempty"`
	BaseitemDefidx *uint32  `protobuf:"varint,4,opt,name=baseitem_defidx,json=baseitemDefidx" json:"baseitem_defidx,omitempty"`
	StickerWear    *float32 `protobuf:"fixed32,5,opt,name=sticker_wear,json=stickerWear" json:"sticker_wear,omitempty"`
}

func (x *CMsgApplySticker) Reset() {
	*x = CMsgApplySticker{}
	if protoimpl.UnsafeEnabled {
		mi := &file_csgo_base_gcmessages_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgApplySticker) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgApplySticker) ProtoMessage() {}

func (x *CMsgApplySticker) ProtoReflect() protoreflect.Message {
	mi := &file_csgo_base_gcmessages_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgApplySticker.ProtoReflect.Descriptor instead.
func (*CMsgApplySticker) Descriptor() ([]byte, []int) {
	return file_csgo_base_gcmessages_proto_rawDescGZIP(), []int{19}
}

func (x *CMsgApplySticker) GetStickerItemId() uint64 {
	if x != nil && x.StickerItemId != nil {
		return *x.StickerItemId
	}
	return 0
}

func (x *CMsgApplySticker) GetItemItemId() uint64 {
	if x != nil && x.ItemItemId != nil {
		return *x.ItemItemId
	}
	return 0
}

func (x *CMsgApplySticker) GetStickerSlot() uint32 {
	if x != nil && x.StickerSlot != nil {
		return *x.StickerSlot
	}
	return 0
}

func (x *CMsgApplySticker) GetBaseitemDefidx() uint32 {
	if x != nil && x.BaseitemDefidx != nil {
		return *x.BaseitemDefidx
	}
	return 0
}

func (x *CMsgApplySticker) GetStickerWear() float32 {
	if x != nil && x.StickerWear != nil {
		return *x.StickerWear
	}
	return 0
}

type CMsgModifyItemAttribute struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemId     *uint64 `protobuf:"varint,1,opt,name=item_id,json=itemId" json:"item_id,omitempty"`
	AttrDefidx *uint32 `protobuf:"varint,2,opt,name=attr_defidx,json=attrDefidx" json:"attr_defidx,omitempty"`
	AttrValue  *uint32 `protobuf:"varint,3,opt,name=attr_value,json=attrValue" json:"attr_value,omitempty"`
}

func (x *CMsgModifyItemAttribute) Reset() {
	*x = CMsgModifyItemAttribute{}
	if protoimpl.UnsafeEnabled {
		mi := &file_csgo_base_gcmessages_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgModifyItemAttribute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgModifyItemAttribute) ProtoMessage() {}

func (x *CMsgModifyItemAttribute) ProtoReflect() protoreflect.Message {
	mi := &file_csgo_base_gcmessages_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgModifyItemAttribute.ProtoReflect.Descriptor instead.
func (*CMsgModifyItemAttribute) Descriptor() ([]byte, []int) {
	return file_csgo_base_gcmessages_proto_rawDescGZIP(), []int{20}
}

func (x *CMsgModifyItemAttribute) GetItemId() uint64 {
	if x != nil && x.ItemId != nil {
		return *x.ItemId
	}
	return 0
}

func (x *CMsgModifyItemAttribute) GetAttrDefidx() uint32 {
	if x != nil && x.AttrDefidx != nil {
		return *x.AttrDefidx
	}
	return 0
}

func (x *CMsgModifyItemAttribute) GetAttrValue() uint32 {
	if x != nil && x.AttrValue != nil {
		return *x.AttrValue
	}
	return 0
}

type CMsgApplyStatTrakSwap struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ToolItemId   *uint64 `protobuf:"varint,1,opt,name=tool_item_id,json=toolItemId" json:"tool_item_id,omitempty"`
	Item_1ItemId *uint64 `protobuf:"varint,2,opt,name=item_1_item_id,json=item1ItemId" json:"item_1_item_id,omitempty"`
	Item_2ItemId *uint64 `protobuf:"varint,3,opt,name=item_2_item_id,json=item2ItemId" json:"item_2_item_id,omitempty"`
}

func (x *CMsgApplyStatTrakSwap) Reset() {
	*x = CMsgApplyStatTrakSwap{}
	if protoimpl.UnsafeEnabled {
		mi := &file_csgo_base_gcmessages_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgApplyStatTrakSwap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgApplyStatTrakSwap) ProtoMessage() {}

func (x *CMsgApplyStatTrakSwap) ProtoReflect() protoreflect.Message {
	mi := &file_csgo_base_gcmessages_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgApplyStatTrakSwap.ProtoReflect.Descriptor instead.
func (*CMsgApplyStatTrakSwap) Descriptor() ([]byte, []int) {
	return file_csgo_base_gcmessages_proto_rawDescGZIP(), []int{21}
}

func (x *CMsgApplyStatTrakSwap) GetToolItemId() uint64 {
	if x != nil && x.ToolItemId != nil {
		return *x.ToolItemId
	}
	return 0
}

func (x *CMsgApplyStatTrakSwap) GetItem_1ItemId() uint64 {
	if x != nil && x.Item_1ItemId != nil {
		return *x.Item_1ItemId
	}
	return 0
}

func (x *CMsgApplyStatTrakSwap) GetItem_2ItemId() uint64 {
	if x != nil && x.Item_2ItemId != nil {
		return *x.Item_2ItemId
	}
	return 0
}

type CMsgApplyStrangePart struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StrangePartItemId *uint64 `protobuf:"varint,1,opt,name=strange_part_item_id,json=strangePartItemId" json:"strange_part_item_id,omitempty"`
	ItemItemId        *uint64 `protobuf:"varint,2,opt,name=item_item_id,json=itemItemId" json:"item_item_id,omitempty"`
}

func (x *CMsgApplyStrangePart) Reset() {
	*x = CMsgApplyStrangePart{}
	if protoimpl.UnsafeEnabled {
		mi := &file_csgo_base_gcmessages_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgApplyStrangePart) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgApplyStrangePart) ProtoMessage() {}

func (x *CMsgApplyStrangePart) ProtoReflect() protoreflect.Message {
	mi := &file_csgo_base_gcmessages_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgApplyStrangePart.ProtoReflect.Descriptor instead.
func (*CMsgApplyStrangePart) Descriptor() ([]byte, []int) {
	return file_csgo_base_gcmessages_proto_rawDescGZIP(), []int{22}
}

func (x *CMsgApplyStrangePart) GetStrangePartItemId() uint64 {
	if x != nil && x.StrangePartItemId != nil {
		return *x.StrangePartItemId
	}
	return 0
}

func (x *CMsgApplyStrangePart) GetItemItemId() uint64 {
	if x != nil && x.ItemItemId != nil {
		return *x.ItemItemId
	}
	return 0
}

type CMsgApplyPennantUpgrade struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UpgradeItemId *uint64 `protobuf:"varint,1,opt,name=upgrade_item_id,json=upgradeItemId" json:"upgrade_item_id,omitempty"`
	PennantItemId *uint64 `protobuf:"varint,2,opt,name=pennant_item_id,json=pennantItemId" json:"pennant_item_id,omitempty"`
}

func (x *CMsgApplyPennantUpgrade) Reset() {
	*x = CMsgApplyPennantUpgrade{}
	if protoimpl.UnsafeEnabled {
		mi := &file_csgo_base_gcmessages_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgApplyPennantUpgrade) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgApplyPennantUpgrade) ProtoMessage() {}

func (x *CMsgApplyPennantUpgrade) ProtoReflect() protoreflect.Message {
	mi := &file_csgo_base_gcmessages_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgApplyPennantUpgrade.ProtoReflect.Descriptor instead.
func (*CMsgApplyPennantUpgrade) Descriptor() ([]byte, []int) {
	return file_csgo_base_gcmessages_proto_rawDescGZIP(), []int{23}
}

func (x *CMsgApplyPennantUpgrade) GetUpgradeItemId() uint64 {
	if x != nil && x.UpgradeItemId != nil {
		return *x.UpgradeItemId
	}
	return 0
}

func (x *CMsgApplyPennantUpgrade) GetPennantItemId() uint64 {
	if x != nil && x.PennantItemId != nil {
		return *x.PennantItemId
	}
	return 0
}

type CMsgApplyEggEssence struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EssenceItemId *uint64 `protobuf:"varint,1,opt,name=essence_item_id,json=essenceItemId" json:"essence_item_id,omitempty"`
	EggItemId     *uint64 `protobuf:"varint,2,opt,name=egg_item_id,json=eggItemId" json:"egg_item_id,omitempty"`
}

func (x *CMsgApplyEggEssence) Reset() {
	*x = CMsgApplyEggEssence{}
	if protoimpl.UnsafeEnabled {
		mi := &file_csgo_base_gcmessages_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgApplyEggEssence) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgApplyEggEssence) ProtoMessage() {}

func (x *CMsgApplyEggEssence) ProtoReflect() protoreflect.Message {
	mi := &file_csgo_base_gcmessages_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgApplyEggEssence.ProtoReflect.Descriptor instead.
func (*CMsgApplyEggEssence) Descriptor() ([]byte, []int) {
	return file_csgo_base_gcmessages_proto_rawDescGZIP(), []int{24}
}

func (x *CMsgApplyEggEssence) GetEssenceItemId() uint64 {
	if x != nil && x.EssenceItemId != nil {
		return *x.EssenceItemId
	}
	return 0
}

func (x *CMsgApplyEggEssence) GetEggItemId() uint64 {
	if x != nil && x.EggItemId != nil {
		return *x.EggItemId
	}
	return 0
}

type CSOEconItemAttribute struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DefIndex   *uint32 `protobuf:"varint,1,opt,name=def_index,json=defIndex" json:"def_index,omitempty"`
	Value      *uint32 `protobuf:"varint,2,opt,name=value" json:"value,omitempty"`
	ValueBytes []byte  `protobuf:"bytes,3,opt,name=value_bytes,json=valueBytes" json:"value_bytes,omitempty"`
}

func (x *CSOEconItemAttribute) Reset() {
	*x = CSOEconItemAttribute{}
	if protoimpl.UnsafeEnabled {
		mi := &file_csgo_base_gcmessages_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CSOEconItemAttribute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSOEconItemAttribute) ProtoMessage() {}

func (x *CSOEconItemAttribute) ProtoReflect() protoreflect.Message {
	mi := &file_csgo_base_gcmessages_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSOEconItemAttribute.ProtoReflect.Descriptor instead.
func (*CSOEconItemAttribute) Descriptor() ([]byte, []int) {
	return file_csgo_base_gcmessages_proto_rawDescGZIP(), []int{25}
}

func (x *CSOEconItemAttribute) GetDefIndex() uint32 {
	if x != nil && x.DefIndex != nil {
		return *x.DefIndex
	}
	return 0
}

func (x *CSOEconItemAttribute) GetValue() uint32 {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return 0
}

func (x *CSOEconItemAttribute) GetValueBytes() []byte {
	if x != nil {
		return x.ValueBytes
	}
	return nil
}

type CSOEconItemEquipped struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NewClass *uint32 `protobuf:"varint,1,opt,name=new_class,json=newClass" json:"new_class,omitempty"`
	NewSlot  *uint32 `protobuf:"varint,2,opt,name=new_slot,json=newSlot" json:"new_slot,omitempty"`
}

func (x *CSOEconItemEquipped) Reset() {
	*x = CSOEconItemEquipped{}
	if protoimpl.UnsafeEnabled {
		mi := &file_csgo_base_gcmessages_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CSOEconItemEquipped) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSOEconItemEquipped) ProtoMessage() {}

func (x *CSOEconItemEquipped) ProtoReflect() protoreflect.Message {
	mi := &file_csgo_base_gcmessages_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSOEconItemEquipped.ProtoReflect.Descriptor instead.
func (*CSOEconItemEquipped) Descriptor() ([]byte, []int) {
	return file_csgo_base_gcmessages_proto_rawDescGZIP(), []int{26}
}

func (x *CSOEconItemEquipped) GetNewClass() uint32 {
	if x != nil && x.NewClass != nil {
		return *x.NewClass
	}
	return 0
}

func (x *CSOEconItemEquipped) GetNewSlot() uint32 {
	if x != nil && x.NewSlot != nil {
		return *x.NewSlot
	}
	return 0
}

type CSOEconItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            *uint64                 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	AccountId     *uint32                 `protobuf:"varint,2,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	Inventory     *uint32                 `protobuf:"varint,3,opt,name=inventory" json:"inventory,omitempty"`
	DefIndex      *uint32                 `protobuf:"varint,4,opt,name=def_index,json=defIndex" json:"def_index,omitempty"`
	Quantity      *uint32                 `protobuf:"varint,5,opt,name=quantity" json:"quantity,omitempty"`
	Level         *uint32                 `protobuf:"varint,6,opt,name=level" json:"level,omitempty"`
	Quality       *uint32                 `protobuf:"varint,7,opt,name=quality" json:"quality,omitempty"`
	Flags         *uint32                 `protobuf:"varint,8,opt,name=flags,def=0" json:"flags,omitempty"`
	Origin        *uint32                 `protobuf:"varint,9,opt,name=origin" json:"origin,omitempty"`
	CustomName    *string                 `protobuf:"bytes,10,opt,name=custom_name,json=customName" json:"custom_name,omitempty"`
	CustomDesc    *string                 `protobuf:"bytes,11,opt,name=custom_desc,json=customDesc" json:"custom_desc,omitempty"`
	Attribute     []*CSOEconItemAttribute `protobuf:"bytes,12,rep,name=attribute" json:"attribute,omitempty"`
	InteriorItem  *CSOEconItem            `protobuf:"bytes,13,opt,name=interior_item,json=interiorItem" json:"interior_item,omitempty"`
	InUse         *bool                   `protobuf:"varint,14,opt,name=in_use,json=inUse,def=0" json:"in_use,omitempty"`
	Style         *uint32                 `protobuf:"varint,15,opt,name=style,def=0" json:"style,omitempty"`
	OriginalId    *uint64                 `protobuf:"varint,16,opt,name=original_id,json=originalId,def=0" json:"original_id,omitempty"`
	EquippedState []*CSOEconItemEquipped  `protobuf:"bytes,18,rep,name=equipped_state,json=equippedState" json:"equipped_state,omitempty"`
	Rarity        *uint32                 `protobuf:"varint,19,opt,name=rarity" json:"rarity,omitempty"`
}

// Default values for CSOEconItem fields.
const (
	Default_CSOEconItem_Flags      = uint32(0)
	Default_CSOEconItem_InUse      = bool(false)
	Default_CSOEconItem_Style      = uint32(0)
	Default_CSOEconItem_OriginalId = uint64(0)
)

func (x *CSOEconItem) Reset() {
	*x = CSOEconItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_csgo_base_gcmessages_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CSOEconItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSOEconItem) ProtoMessage() {}

func (x *CSOEconItem) ProtoReflect() protoreflect.Message {
	mi := &file_csgo_base_gcmessages_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSOEconItem.ProtoReflect.Descriptor instead.
func (*CSOEconItem) Descriptor() ([]byte, []int) {
	return file_csgo_base_gcmessages_proto_rawDescGZIP(), []int{27}
}

func (x *CSOEconItem) GetId() uint64 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *CSOEconItem) GetAccountId() uint32 {
	if x != nil && x.AccountId != nil {
		return *x.AccountId
	}
	return 0
}

func (x *CSOEconItem) GetInventory() uint32 {
	if x != nil && x.Inventory != nil {
		return *x.Inventory
	}
	return 0
}

func (x *CSOEconItem) GetDefIndex() uint32 {
	if x != nil && x.DefIndex != nil {
		return *x.DefIndex
	}
	return 0
}

func (x *CSOEconItem) GetQuantity() uint32 {
	if x != nil && x.Quantity != nil {
		return *x.Quantity
	}
	return 0
}

func (x *CSOEconItem) GetLevel() uint32 {
	if x != nil && x.Level != nil {
		return *x.Level
	}
	return 0
}

func (x *CSOEconItem) GetQuality() uint32 {
	if x != nil && x.Quality != nil {
		return *x.Quality
	}
	return 0
}

func (x *CSOEconItem) GetFlags() uint32 {
	if x != nil && x.Flags != nil {
		return *x.Flags
	}
	return Default_CSOEconItem_Flags
}

func (x *CSOEconItem) GetOrigin() uint32 {
	if x != nil && x.Origin != nil {
		return *x.Origin
	}
	return 0
}

func (x *CSOEconItem) GetCustomName() string {
	if x != nil && x.CustomName != nil {
		return *x.CustomName
	}
	return ""
}

func (x *CSOEconItem) GetCustomDesc() string {
	if x != nil && x.CustomDesc != nil {
		return *x.CustomDesc
	}
	return ""
}

func (x *CSOEconItem) GetAttribute() []*CSOEconItemAttribute {
	if x != nil {
		return x.Attribute
	}
	return nil
}

func (x *CSOEconItem) GetInteriorItem() *CSOEconItem {
	if x != nil {
		return x.InteriorItem
	}
	return nil
}

func (x *CSOEconItem) GetInUse() bool {
	if x != nil && x.InUse != nil {
		return *x.InUse
	}
	return Default_CSOEconItem_InUse
}

func (x *CSOEconItem) GetStyle() uint32 {
	if x != nil && x.Style != nil {
		return *x.Style
	}
	return Default_CSOEconItem_Style
}

func (x *CSOEconItem) GetOriginalId() uint64 {
	if x != nil && x.OriginalId != nil {
		return *x.OriginalId
	}
	return Default_CSOEconItem_OriginalId
}

func (x *CSOEconItem) GetEquippedState() []*CSOEconItemEquipped {
	if x != nil {
		return x.EquippedState
	}
	return nil
}

func (x *CSOEconItem) GetRarity() uint32 {
	if x != nil && x.Rarity != nil {
		return *x.Rarity
	}
	return 0
}

type CMsgAdjustItemEquippedState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemId   *uint64 `protobuf:"varint,1,opt,name=item_id,json=itemId" json:"item_id,omitempty"`
	NewClass *uint32 `protobuf:"varint,2,opt,name=new_class,json=newClass" json:"new_class,omitempty"`
	NewSlot  *uint32 `protobuf:"varint,3,opt,name=new_slot,json=newSlot" json:"new_slot,omitempty"`
	Swap     *bool   `protobuf:"varint,4,opt,name=swap" json:"swap,omitempty"`
}

func (x *CMsgAdjustItemEquippedState) Reset() {
	*x = CMsgAdjustItemEquippedState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_csgo_base_gcmessages_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgAdjustItemEquippedState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgAdjustItemEquippedState) ProtoMessage() {}

func (x *CMsgAdjustItemEquippedState) ProtoReflect() protoreflect.Message {
	mi := &file_csgo_base_gcmessages_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgAdjustItemEquippedState.ProtoReflect.Descriptor instead.
func (*CMsgAdjustItemEquippedState) Descriptor() ([]byte, []int) {
	return file_csgo_base_gcmessages_proto_rawDescGZIP(), []int{28}
}

func (x *CMsgAdjustItemEquippedState) GetItemId() uint64 {
	if x != nil && x.ItemId != nil {
		return *x.ItemId
	}
	return 0
}

func (x *CMsgAdjustItemEquippedState) GetNewClass() uint32 {
	if x != nil && x.NewClass != nil {
		return *x.NewClass
	}
	return 0
}

func (x *CMsgAdjustItemEquippedState) GetNewSlot() uint32 {
	if x != nil && x.NewSlot != nil {
		return *x.NewSlot
	}
	return 0
}

func (x *CMsgAdjustItemEquippedState) GetSwap() bool {
	if x != nil && x.Swap != nil {
		return *x.Swap
	}
	return false
}

type CMsgAdjustItemEquippedStateMulti struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TEquips      []uint64 `protobuf:"varint,1,rep,name=t_equips,json=tEquips" json:"t_equips,omitempty"`
	CtEquips     []uint64 `protobuf:"varint,2,rep,name=ct_equips,json=ctEquips" json:"ct_equips,omitempty"`
	NoteamEquips []uint64 `protobuf:"varint,3,rep,name=noteam_equips,json=noteamEquips" json:"noteam_equips,omitempty"`
}

func (x *CMsgAdjustItemEquippedStateMulti) Reset() {
	*x = CMsgAdjustItemEquippedStateMulti{}
	if protoimpl.UnsafeEnabled {
		mi := &file_csgo_base_gcmessages_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgAdjustItemEquippedStateMulti) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgAdjustItemEquippedStateMulti) ProtoMessage() {}

func (x *CMsgAdjustItemEquippedStateMulti) ProtoReflect() protoreflect.Message {
	mi := &file_csgo_base_gcmessages_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgAdjustItemEquippedStateMulti.ProtoReflect.Descriptor instead.
func (*CMsgAdjustItemEquippedStateMulti) Descriptor() ([]byte, []int) {
	return file_csgo_base_gcmessages_proto_rawDescGZIP(), []int{29}
}

func (x *CMsgAdjustItemEquippedStateMulti) GetTEquips() []uint64 {
	if x != nil {
		return x.TEquips
	}
	return nil
}

func (x *CMsgAdjustItemEquippedStateMulti) GetCtEquips() []uint64 {
	if x != nil {
		return x.CtEquips
	}
	return nil
}

func (x *CMsgAdjustItemEquippedStateMulti) GetNoteamEquips() []uint64 {
	if x != nil {
		return x.NoteamEquips
	}
	return nil
}

type CMsgSortItems struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SortType *uint32 `protobuf:"varint,1,opt,name=sort_type,json=sortType" json:"sort_type,omitempty"`
}

func (x *CMsgSortItems) Reset() {
	*x = CMsgSortItems{}
	if protoimpl.UnsafeEnabled {
		mi := &file_csgo_base_gcmessages_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgSortItems) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSortItems) ProtoMessage() {}

func (x *CMsgSortItems) ProtoReflect() protoreflect.Message {
	mi := &file_csgo_base_gcmessages_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSortItems.ProtoReflect.Descriptor instead.
func (*CMsgSortItems) Descriptor() ([]byte, []int) {
	return file_csgo_base_gcmessages_proto_rawDescGZIP(), []int{30}
}

func (x *CMsgSortItems) GetSortType() uint32 {
	if x != nil && x.SortType != nil {
		return *x.SortType
	}
	return 0
}

type CSOEconClaimCode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId    *uint32 `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	CodeType     *uint32 `protobuf:"varint,2,opt,name=code_type,json=codeType" json:"code_type,omitempty"`
	TimeAcquired *uint32 `protobuf:"varint,3,opt,name=time_acquired,json=timeAcquired" json:"time_acquired,omitempty"`
	Code         *string `protobuf:"bytes,4,opt,name=code" json:"code,omitempty"`
}

func (x *CSOEconClaimCode) Reset() {
	*x = CSOEconClaimCode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_csgo_base_gcmessages_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CSOEconClaimCode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSOEconClaimCode) ProtoMessage() {}

func (x *CSOEconClaimCode) ProtoReflect() protoreflect.Message {
	mi := &file_csgo_base_gcmessages_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSOEconClaimCode.ProtoReflect.Descriptor instead.
func (*CSOEconClaimCode) Descriptor() ([]byte, []int) {
	return file_csgo_base_gcmessages_proto_rawDescGZIP(), []int{31}
}

func (x *CSOEconClaimCode) GetAccountId() uint32 {
	if x != nil && x.AccountId != nil {
		return *x.AccountId
	}
	return 0
}

func (x *CSOEconClaimCode) GetCodeType() uint32 {
	if x != nil && x.CodeType != nil {
		return *x.CodeType
	}
	return 0
}

func (x *CSOEconClaimCode) GetTimeAcquired() uint32 {
	if x != nil && x.TimeAcquired != nil {
		return *x.TimeAcquired
	}
	return 0
}

func (x *CSOEconClaimCode) GetCode() string {
	if x != nil && x.Code != nil {
		return *x.Code
	}
	return ""
}

type CMsgStoreGetUserData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PriceSheetVersion *uint32 `protobuf:"fixed32,1,opt,name=price_sheet_version,json=priceSheetVersion" json:"price_sheet_version,omitempty"`
	Currency          *int32  `protobuf:"varint,2,opt,name=currency" json:"currency,omitempty"`
}

func (x *CMsgStoreGetUserData) Reset() {
	*x = CMsgStoreGetUserData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_csgo_base_gcmessages_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgStoreGetUserData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgStoreGetUserData) ProtoMessage() {}

func (x *CMsgStoreGetUserData) ProtoReflect() protoreflect.Message {
	mi := &file_csgo_base_gcmessages_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgStoreGetUserData.ProtoReflect.Descriptor instead.
func (*CMsgStoreGetUserData) Descriptor() ([]byte, []int) {
	return file_csgo_base_gcmessages_proto_rawDescGZIP(), []int{32}
}

func (x *CMsgStoreGetUserData) GetPriceSheetVersion() uint32 {
	if x != nil && x.PriceSheetVersion != nil {
		return *x.PriceSheetVersion
	}
	return 0
}

func (x *CMsgStoreGetUserData) GetCurrency() int32 {
	if x != nil && x.Currency != nil {
		return *x.Currency
	}
	return 0
}

type CMsgStoreGetUserDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result             *int32  `protobuf:"varint,1,opt,name=result" json:"result,omitempty"`
	CurrencyDeprecated *int32  `protobuf:"varint,2,opt,name=currency_deprecated,json=currencyDeprecated" json:"currency_deprecated,omitempty"`
	CountryDeprecated  *string `protobuf:"bytes,3,opt,name=country_deprecated,json=countryDeprecated" json:"country_deprecated,omitempty"`
	PriceSheetVersion  *uint32 `protobuf:"fixed32,4,opt,name=price_sheet_version,json=priceSheetVersion" json:"price_sheet_version,omitempty"`
	PriceSheet         []byte  `protobuf:"bytes,8,opt,name=price_sheet,json=priceSheet" json:"price_sheet,omitempty"`
}

func (x *CMsgStoreGetUserDataResponse) Reset() {
	*x = CMsgStoreGetUserDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_csgo_base_gcmessages_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgStoreGetUserDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgStoreGetUserDataResponse) ProtoMessage() {}

func (x *CMsgStoreGetUserDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_csgo_base_gcmessages_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgStoreGetUserDataResponse.ProtoReflect.Descriptor instead.
func (*CMsgStoreGetUserDataResponse) Descriptor() ([]byte, []int) {
	return file_csgo_base_gcmessages_proto_rawDescGZIP(), []int{33}
}

func (x *CMsgStoreGetUserDataResponse) GetResult() int32 {
	if x != nil && x.Result != nil {
		return *x.Result
	}
	return 0
}

func (x *CMsgStoreGetUserDataResponse) GetCurrencyDeprecated() int32 {
	if x != nil && x.CurrencyDeprecated != nil {
		return *x.CurrencyDeprecated
	}
	return 0
}

func (x *CMsgStoreGetUserDataResponse) GetCountryDeprecated() string {
	if x != nil && x.CountryDeprecated != nil {
		return *x.CountryDeprecated
	}
	return ""
}

func (x *CMsgStoreGetUserDataResponse) GetPriceSheetVersion() uint32 {
	if x != nil && x.PriceSheetVersion != nil {
		return *x.PriceSheetVersion
	}
	return 0
}

func (x *CMsgStoreGetUserDataResponse) GetPriceSheet() []byte {
	if x != nil {
		return x.PriceSheet
	}
	return nil
}

type CMsgUpdateItemSchema struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemsGame                   []byte  `protobuf:"bytes,1,opt,name=items_game,json=itemsGame" json:"items_game,omitempty"`
	ItemSchemaVersion           *uint32 `protobuf:"fixed32,2,opt,name=item_schema_version,json=itemSchemaVersion" json:"item_schema_version,omitempty"`
	ItemsGameUrl_DEPRECATED2013 *string `protobuf:"bytes,3,opt,name=items_game_url_DEPRECATED2013,json=itemsGameUrlDEPRECATED2013" json:"items_game_url_DEPRECATED2013,omitempty"`
	ItemsGameUrl                *string `protobuf:"bytes,4,opt,name=items_game_url,json=itemsGameUrl" json:"items_game_url,omitempty"`
}

func (x *CMsgUpdateItemSchema) Reset() {
	*x = CMsgUpdateItemSchema{}
	if protoimpl.UnsafeEnabled {
		mi := &file_csgo_base_gcmessages_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgUpdateItemSchema) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgUpdateItemSchema) ProtoMessage() {}

func (x *CMsgUpdateItemSchema) ProtoReflect() protoreflect.Message {
	mi := &file_csgo_base_gcmessages_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgUpdateItemSchema.ProtoReflect.Descriptor instead.
func (*CMsgUpdateItemSchema) Descriptor() ([]byte, []int) {
	return file_csgo_base_gcmessages_proto_rawDescGZIP(), []int{34}
}

func (x *CMsgUpdateItemSchema) GetItemsGame() []byte {
	if x != nil {
		return x.ItemsGame
	}
	return nil
}

func (x *CMsgUpdateItemSchema) GetItemSchemaVersion() uint32 {
	if x != nil && x.ItemSchemaVersion != nil {
		return *x.ItemSchemaVersion
	}
	return 0
}

func (x *CMsgUpdateItemSchema) GetItemsGameUrl_DEPRECATED2013() string {
	if x != nil && x.ItemsGameUrl_DEPRECATED2013 != nil {
		return *x.ItemsGameUrl_DEPRECATED2013
	}
	return ""
}

func (x *CMsgUpdateItemSchema) GetItemsGameUrl() string {
	if x != nil && x.ItemsGameUrl != nil {
		return *x.ItemsGameUrl
	}
	return ""
}

type CMsgGCError struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorText *string `protobuf:"bytes,1,opt,name=error_text,json=errorText" json:"error_text,omitempty"`
}

func (x *CMsgGCError) Reset() {
	*x = CMsgGCError{}
	if protoimpl.UnsafeEnabled {
		mi := &file_csgo_base_gcmessages_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCError) ProtoMessage() {}

func (x *CMsgGCError) ProtoReflect() protoreflect.Message {
	mi := &file_csgo_base_gcmessages_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCError.ProtoReflect.Descriptor instead.
func (*CMsgGCError) Descriptor() ([]byte, []int) {
	return file_csgo_base_gcmessages_proto_rawDescGZIP(), []int{35}
}

func (x *CMsgGCError) GetErrorText() string {
	if x != nil && x.ErrorText != nil {
		return *x.ErrorText
	}
	return ""
}

type CMsgRequestInventoryRefresh struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CMsgRequestInventoryRefresh) Reset() {
	*x = CMsgRequestInventoryRefresh{}
	if protoimpl.UnsafeEnabled {
		mi := &file_csgo_base_gcmessages_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgRequestInventoryRefresh) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgRequestInventoryRefresh) ProtoMessage() {}

func (x *CMsgRequestInventoryRefresh) ProtoReflect() protoreflect.Message {
	mi := &file_csgo_base_gcmessages_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgRequestInventoryRefresh.ProtoReflect.Descriptor instead.
func (*CMsgRequestInventoryRefresh) Descriptor() ([]byte, []int) {
	return file_csgo_base_gcmessages_proto_rawDescGZIP(), []int{36}
}

type CMsgConVarValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Value *string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (x *CMsgConVarValue) Reset() {
	*x = CMsgConVarValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_csgo_base_gcmessages_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgConVarValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgConVarValue) ProtoMessage() {}

func (x *CMsgConVarValue) ProtoReflect() protoreflect.Message {
	mi := &file_csgo_base_gcmessages_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgConVarValue.ProtoReflect.Descriptor instead.
func (*CMsgConVarValue) Descriptor() ([]byte, []int) {
	return file_csgo_base_gcmessages_proto_rawDescGZIP(), []int{37}
}

func (x *CMsgConVarValue) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *CMsgConVarValue) GetValue() string {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return ""
}

type CMsgReplicateConVars struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Convars []*CMsgConVarValue `protobuf:"bytes,1,rep,name=convars" json:"convars,omitempty"`
}

func (x *CMsgReplicateConVars) Reset() {
	*x = CMsgReplicateConVars{}
	if protoimpl.UnsafeEnabled {
		mi := &file_csgo_base_gcmessages_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgReplicateConVars) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgReplicateConVars) ProtoMessage() {}

func (x *CMsgReplicateConVars) ProtoReflect() protoreflect.Message {
	mi := &file_csgo_base_gcmessages_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgReplicateConVars.ProtoReflect.Descriptor instead.
func (*CMsgReplicateConVars) Descriptor() ([]byte, []int) {
	return file_csgo_base_gcmessages_proto_rawDescGZIP(), []int{38}
}

func (x *CMsgReplicateConVars) GetConvars() []*CMsgConVarValue {
	if x != nil {
		return x.Convars
	}
	return nil
}

type CMsgUseItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemId                *uint64  `protobuf:"varint,1,opt,name=item_id,json=itemId" json:"item_id,omitempty"`
	TargetSteamId         *uint64  `protobuf:"fixed64,2,opt,name=target_steam_id,json=targetSteamId" json:"target_steam_id,omitempty"`
	Gift_PotentialTargets []uint32 `protobuf:"varint,3,rep,name=gift__potential_targets,json=giftPotentialTargets" json:"gift__potential_targets,omitempty"`
	Duel_ClassLock        *uint32  `protobuf:"varint,4,opt,name=duel__class_lock,json=duelClassLock" json:"duel__class_lock,omitempty"`
	InitiatorSteamId      *uint64  `protobuf:"fixed64,5,opt,name=initiator_steam_id,json=initiatorSteamId" json:"initiator_steam_id,omitempty"`
}

func (x *CMsgUseItem) Reset() {
	*x = CMsgUseItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_csgo_base_gcmessages_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgUseItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgUseItem) ProtoMessage() {}

func (x *CMsgUseItem) ProtoReflect() protoreflect.Message {
	mi := &file_csgo_base_gcmessages_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgUseItem.ProtoReflect.Descriptor instead.
func (*CMsgUseItem) Descriptor() ([]byte, []int) {
	return file_csgo_base_gcmessages_proto_rawDescGZIP(), []int{39}
}

func (x *CMsgUseItem) GetItemId() uint64 {
	if x != nil && x.ItemId != nil {
		return *x.ItemId
	}
	return 0
}

func (x *CMsgUseItem) GetTargetSteamId() uint64 {
	if x != nil && x.TargetSteamId != nil {
		return *x.TargetSteamId
	}
	return 0
}

func (x *CMsgUseItem) GetGift_PotentialTargets() []uint32 {
	if x != nil {
		return x.Gift_PotentialTargets
	}
	return nil
}

func (x *CMsgUseItem) GetDuel_ClassLock() uint32 {
	if x != nil && x.Duel_ClassLock != nil {
		return *x.Duel_ClassLock
	}
	return 0
}

func (x *CMsgUseItem) GetInitiatorSteamId() uint64 {
	if x != nil && x.InitiatorSteamId != nil {
		return *x.InitiatorSteamId
	}
	return 0
}

type CMsgReplayUploadedToYouTube struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	YoutubeUrl         *string `protobuf:"bytes,1,opt,name=youtube_url,json=youtubeUrl" json:"youtube_url,omitempty"`
	YoutubeAccountName *string `protobuf:"bytes,2,opt,name=youtube_account_name,json=youtubeAccountName" json:"youtube_account_name,omitempty"`
	SessionId          *uint64 `protobuf:"varint,3,opt,name=session_id,json=sessionId" json:"session_id,omitempty"`
}

func (x *CMsgReplayUploadedToYouTube) Reset() {
	*x = CMsgReplayUploadedToYouTube{}
	if protoimpl.UnsafeEnabled {
		mi := &file_csgo_base_gcmessages_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgReplayUploadedToYouTube) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgReplayUploadedToYouTube) ProtoMessage() {}

func (x *CMsgReplayUploadedToYouTube) ProtoReflect() protoreflect.Message {
	mi := &file_csgo_base_gcmessages_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgReplayUploadedToYouTube.ProtoReflect.Descriptor instead.
func (*CMsgReplayUploadedToYouTube) Descriptor() ([]byte, []int) {
	return file_csgo_base_gcmessages_proto_rawDescGZIP(), []int{40}
}

func (x *CMsgReplayUploadedToYouTube) GetYoutubeUrl() string {
	if x != nil && x.YoutubeUrl != nil {
		return *x.YoutubeUrl
	}
	return ""
}

func (x *CMsgReplayUploadedToYouTube) GetYoutubeAccountName() string {
	if x != nil && x.YoutubeAccountName != nil {
		return *x.YoutubeAccountName
	}
	return ""
}

func (x *CMsgReplayUploadedToYouTube) GetSessionId() uint64 {
	if x != nil && x.SessionId != nil {
		return *x.SessionId
	}
	return 0
}

type CMsgConsumableExhausted struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemDefId *int32 `protobuf:"varint,1,opt,name=item_def_id,json=itemDefId" json:"item_def_id,omitempty"`
}

func (x *CMsgConsumableExhausted) Reset() {
	*x = CMsgConsumableExhausted{}
	if protoimpl.UnsafeEnabled {
		mi := &file_csgo_base_gcmessages_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgConsumableExhausted) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgConsumableExhausted) ProtoMessage() {}

func (x *CMsgConsumableExhausted) ProtoReflect() protoreflect.Message {
	mi := &file_csgo_base_gcmessages_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgConsumableExhausted.ProtoReflect.Descriptor instead.
func (*CMsgConsumableExhausted) Descriptor() ([]byte, []int) {
	return file_csgo_base_gcmessages_proto_rawDescGZIP(), []int{41}
}

func (x *CMsgConsumableExhausted) GetItemDefId() int32 {
	if x != nil && x.ItemDefId != nil {
		return *x.ItemDefId
	}
	return 0
}

type CMsgItemAcknowledged__DEPRECATED struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId *uint32 `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	Inventory *uint32 `protobuf:"varint,2,opt,name=inventory" json:"inventory,omitempty"`
	DefIndex  *uint32 `protobuf:"varint,3,opt,name=def_index,json=defIndex" json:"def_index,omitempty"`
	Quality   *uint32 `protobuf:"varint,4,opt,name=quality" json:"quality,omitempty"`
	Rarity    *uint32 `protobuf:"varint,5,opt,name=rarity" json:"rarity,omitempty"`
	Origin    *uint32 `protobuf:"varint,6,opt,name=origin" json:"origin,omitempty"`
	ItemId    *uint64 `protobuf:"varint,7,opt,name=item_id,json=itemId" json:"item_id,omitempty"`
}

func (x *CMsgItemAcknowledged__DEPRECATED) Reset() {
	*x = CMsgItemAcknowledged__DEPRECATED{}
	if protoimpl.UnsafeEnabled {
		mi := &file_csgo_base_gcmessages_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgItemAcknowledged__DEPRECATED) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgItemAcknowledged__DEPRECATED) ProtoMessage() {}

func (x *CMsgItemAcknowledged__DEPRECATED) ProtoReflect() protoreflect.Message {
	mi := &file_csgo_base_gcmessages_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgItemAcknowledged__DEPRECATED.ProtoReflect.Descriptor instead.
func (*CMsgItemAcknowledged__DEPRECATED) Descriptor() ([]byte, []int) {
	return file_csgo_base_gcmessages_proto_rawDescGZIP(), []int{42}
}

func (x *CMsgItemAcknowledged__DEPRECATED) GetAccountId() uint32 {
	if x != nil && x.AccountId != nil {
		return *x.AccountId
	}
	return 0
}

func (x *CMsgItemAcknowledged__DEPRECATED) GetInventory() uint32 {
	if x != nil && x.Inventory != nil {
		return *x.Inventory
	}
	return 0
}

func (x *CMsgItemAcknowledged__DEPRECATED) GetDefIndex() uint32 {
	if x != nil && x.DefIndex != nil {
		return *x.DefIndex
	}
	return 0
}

func (x *CMsgItemAcknowledged__DEPRECATED) GetQuality() uint32 {
	if x != nil && x.Quality != nil {
		return *x.Quality
	}
	return 0
}

func (x *CMsgItemAcknowledged__DEPRECATED) GetRarity() uint32 {
	if x != nil && x.Rarity != nil {
		return *x.Rarity
	}
	return 0
}

func (x *CMsgItemAcknowledged__DEPRECATED) GetOrigin() uint32 {
	if x != nil && x.Origin != nil {
		return *x.Origin
	}
	return 0
}

func (x *CMsgItemAcknowledged__DEPRECATED) GetItemId() uint64 {
	if x != nil && x.ItemId != nil {
		return *x.ItemId
	}
	return 0
}

type CMsgSetItemPositions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemPositions []*CMsgSetItemPositions_ItemPosition `protobuf:"bytes,1,rep,name=item_positions,json=itemPositions" json:"item_positions,omitempty"`
}

func (x *CMsgSetItemPositions) Reset() {
	*x = CMsgSetItemPositions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_csgo_base_gcmessages_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgSetItemPositions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSetItemPositions) ProtoMessage() {}

func (x *CMsgSetItemPositions) ProtoReflect() protoreflect.Message {
	mi := &file_csgo_base_gcmessages_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSetItemPositions.ProtoReflect.Descriptor instead.
func (*CMsgSetItemPositions) Descriptor() ([]byte, []int) {
	return file_csgo_base_gcmessages_proto_rawDescGZIP(), []int{43}
}

func (x *CMsgSetItemPositions) GetItemPositions() []*CMsgSetItemPositions_ItemPosition {
	if x != nil {
		return x.ItemPositions
	}
	return nil
}

type CMsgGCReportAbuse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetSteamId        *uint64 `protobuf:"fixed64,1,opt,name=target_steam_id,json=targetSteamId" json:"target_steam_id,omitempty"`
	Description          *string `protobuf:"bytes,4,opt,name=description" json:"description,omitempty"`
	Gid                  *uint64 `protobuf:"varint,5,opt,name=gid" json:"gid,omitempty"`
	AbuseType            *uint32 `protobuf:"varint,2,opt,name=abuse_type,json=abuseType" json:"abuse_type,omitempty"`
	ContentType          *uint32 `protobuf:"varint,3,opt,name=content_type,json=contentType" json:"content_type,omitempty"`
	TargetGameServerIp   *uint32 `protobuf:"fixed32,6,opt,name=target_game_server_ip,json=targetGameServerIp" json:"target_game_server_ip,omitempty"`
	TargetGameServerPort *uint32 `protobuf:"varint,7,opt,name=target_game_server_port,json=targetGameServerPort" json:"target_game_server_port,omitempty"`
}

func (x *CMsgGCReportAbuse) Reset() {
	*x = CMsgGCReportAbuse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_csgo_base_gcmessages_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCReportAbuse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCReportAbuse) ProtoMessage() {}

func (x *CMsgGCReportAbuse) ProtoReflect() protoreflect.Message {
	mi := &file_csgo_base_gcmessages_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCReportAbuse.ProtoReflect.Descriptor instead.
func (*CMsgGCReportAbuse) Descriptor() ([]byte, []int) {
	return file_csgo_base_gcmessages_proto_rawDescGZIP(), []int{44}
}

func (x *CMsgGCReportAbuse) GetTargetSteamId() uint64 {
	if x != nil && x.TargetSteamId != nil {
		return *x.TargetSteamId
	}
	return 0
}

func (x *CMsgGCReportAbuse) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *CMsgGCReportAbuse) GetGid() uint64 {
	if x != nil && x.Gid != nil {
		return *x.Gid
	}
	return 0
}

func (x *CMsgGCReportAbuse) GetAbuseType() uint32 {
	if x != nil && x.AbuseType != nil {
		return *x.AbuseType
	}
	return 0
}

func (x *CMsgGCReportAbuse) GetContentType() uint32 {
	if x != nil && x.ContentType != nil {
		return *x.ContentType
	}
	return 0
}

func (x *CMsgGCReportAbuse) GetTargetGameServerIp() uint32 {
	if x != nil && x.TargetGameServerIp != nil {
		return *x.TargetGameServerIp
	}
	return 0
}

func (x *CMsgGCReportAbuse) GetTargetGameServerPort() uint32 {
	if x != nil && x.TargetGameServerPort != nil {
		return *x.TargetGameServerPort
	}
	return 0
}

type CMsgGCReportAbuseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetSteamId *uint64 `protobuf:"fixed64,1,opt,name=target_steam_id,json=targetSteamId" json:"target_steam_id,omitempty"`
	Result        *uint32 `protobuf:"varint,2,opt,name=result" json:"result,omitempty"`
	ErrorMessage  *string `protobuf:"bytes,3,opt,name=error_message,json=errorMessage" json:"error_message,omitempty"`
}

func (x *CMsgGCReportAbuseResponse) Reset() {
	*x = CMsgGCReportAbuseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_csgo_base_gcmessages_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCReportAbuseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCReportAbuseResponse) ProtoMessage() {}

func (x *CMsgGCReportAbuseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_csgo_base_gcmessages_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCReportAbuseResponse.ProtoReflect.Descriptor instead.
func (*CMsgGCReportAbuseResponse) Descriptor() ([]byte, []int) {
	return file_csgo_base_gcmessages_proto_rawDescGZIP(), []int{45}
}

func (x *CMsgGCReportAbuseResponse) GetTargetSteamId() uint64 {
	if x != nil && x.TargetSteamId != nil {
		return *x.TargetSteamId
	}
	return 0
}

func (x *CMsgGCReportAbuseResponse) GetResult() uint32 {
	if x != nil && x.Result != nil {
		return *x.Result
	}
	return 0
}

func (x *CMsgGCReportAbuseResponse) GetErrorMessage() string {
	if x != nil && x.ErrorMessage != nil {
		return *x.ErrorMessage
	}
	return ""
}

type CMsgGCNameItemNotification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerSteamid  *uint64 `protobuf:"fixed64,1,opt,name=player_steamid,json=playerSteamid" json:"player_steamid,omitempty"`
	ItemDefIndex   *uint32 `protobuf:"varint,2,opt,name=item_def_index,json=itemDefIndex" json:"item_def_index,omitempty"`
	ItemNameCustom *string `protobuf:"bytes,3,opt,name=item_name_custom,json=itemNameCustom" json:"item_name_custom,omitempty"`
}

func (x *CMsgGCNameItemNotification) Reset() {
	*x = CMsgGCNameItemNotification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_csgo_base_gcmessages_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCNameItemNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCNameItemNotification) ProtoMessage() {}

func (x *CMsgGCNameItemNotification) ProtoReflect() protoreflect.Message {
	mi := &file_csgo_base_gcmessages_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCNameItemNotification.ProtoReflect.Descriptor instead.
func (*CMsgGCNameItemNotification) Descriptor() ([]byte, []int) {
	return file_csgo_base_gcmessages_proto_rawDescGZIP(), []int{46}
}

func (x *CMsgGCNameItemNotification) GetPlayerSteamid() uint64 {
	if x != nil && x.PlayerSteamid != nil {
		return *x.PlayerSteamid
	}
	return 0
}

func (x *CMsgGCNameItemNotification) GetItemDefIndex() uint32 {
	if x != nil && x.ItemDefIndex != nil {
		return *x.ItemDefIndex
	}
	return 0
}

func (x *CMsgGCNameItemNotification) GetItemNameCustom() string {
	if x != nil && x.ItemNameCustom != nil {
		return *x.ItemNameCustom
	}
	return ""
}

type CMsgGCClientDisplayNotification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NotificationTitleLocalizationKey *string  `protobuf:"bytes,1,opt,name=notification_title_localization_key,json=notificationTitleLocalizationKey" json:"notification_title_localization_key,omitempty"`
	NotificationBodyLocalizationKey  *string  `protobuf:"bytes,2,opt,name=notification_body_localization_key,json=notificationBodyLocalizationKey" json:"notification_body_localization_key,omitempty"`
	BodySubstringKeys                []string `protobuf:"bytes,3,rep,name=body_substring_keys,json=bodySubstringKeys" json:"body_substring_keys,omitempty"`
	BodySubstringValues              []string `protobuf:"bytes,4,rep,name=body_substring_values,json=bodySubstringValues" json:"body_substring_values,omitempty"`
}

func (x *CMsgGCClientDisplayNotification) Reset() {
	*x = CMsgGCClientDisplayNotification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_csgo_base_gcmessages_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCClientDisplayNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCClientDisplayNotification) ProtoMessage() {}

func (x *CMsgGCClientDisplayNotification) ProtoReflect() protoreflect.Message {
	mi := &file_csgo_base_gcmessages_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCClientDisplayNotification.ProtoReflect.Descriptor instead.
func (*CMsgGCClientDisplayNotification) Descriptor() ([]byte, []int) {
	return file_csgo_base_gcmessages_proto_rawDescGZIP(), []int{47}
}

func (x *CMsgGCClientDisplayNotification) GetNotificationTitleLocalizationKey() string {
	if x != nil && x.NotificationTitleLocalizationKey != nil {
		return *x.NotificationTitleLocalizationKey
	}
	return ""
}

func (x *CMsgGCClientDisplayNotification) GetNotificationBodyLocalizationKey() string {
	if x != nil && x.NotificationBodyLocalizationKey != nil {
		return *x.NotificationBodyLocalizationKey
	}
	return ""
}

func (x *CMsgGCClientDisplayNotification) GetBodySubstringKeys() []string {
	if x != nil {
		return x.BodySubstringKeys
	}
	return nil
}

func (x *CMsgGCClientDisplayNotification) GetBodySubstringValues() []string {
	if x != nil {
		return x.BodySubstringValues
	}
	return nil
}

type CMsgGCShowItemsPickedUp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerSteamid *uint64 `protobuf:"fixed64,1,opt,name=player_steamid,json=playerSteamid" json:"player_steamid,omitempty"`
}

func (x *CMsgGCShowItemsPickedUp) Reset() {
	*x = CMsgGCShowItemsPickedUp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_csgo_base_gcmessages_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCShowItemsPickedUp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCShowItemsPickedUp) ProtoMessage() {}

func (x *CMsgGCShowItemsPickedUp) ProtoReflect() protoreflect.Message {
	mi := &file_csgo_base_gcmessages_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCShowItemsPickedUp.ProtoReflect.Descriptor instead.
func (*CMsgGCShowItemsPickedUp) Descriptor() ([]byte, []int) {
	return file_csgo_base_gcmessages_proto_rawDescGZIP(), []int{48}
}

func (x *CMsgGCShowItemsPickedUp) GetPlayerSteamid() uint64 {
	if x != nil && x.PlayerSteamid != nil {
		return *x.PlayerSteamid
	}
	return 0
}

type CMsgGCIncrementKillCountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KillerAccountId *uint32 `protobuf:"varint,1,opt,name=killer_account_id,json=killerAccountId" json:"killer_account_id,omitempty"`
	NumKills        *uint32 `protobuf:"varint,2,opt,name=num_kills,json=numKills" json:"num_kills,omitempty"`
	ItemDef         *uint32 `protobuf:"varint,3,opt,name=item_def,json=itemDef" json:"item_def,omitempty"`
	LevelType       *uint32 `protobuf:"varint,4,opt,name=level_type,json=levelType" json:"level_type,omitempty"`
}

func (x *CMsgGCIncrementKillCountResponse) Reset() {
	*x = CMsgGCIncrementKillCountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_csgo_base_gcmessages_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCIncrementKillCountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCIncrementKillCountResponse) ProtoMessage() {}

func (x *CMsgGCIncrementKillCountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_csgo_base_gcmessages_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCIncrementKillCountResponse.ProtoReflect.Descriptor instead.
func (*CMsgGCIncrementKillCountResponse) Descriptor() ([]byte, []int) {
	return file_csgo_base_gcmessages_proto_rawDescGZIP(), []int{49}
}

func (x *CMsgGCIncrementKillCountResponse) GetKillerAccountId() uint32 {
	if x != nil && x.KillerAccountId != nil {
		return *x.KillerAccountId
	}
	return 0
}

func (x *CMsgGCIncrementKillCountResponse) GetNumKills() uint32 {
	if x != nil && x.NumKills != nil {
		return *x.NumKills
	}
	return 0
}

func (x *CMsgGCIncrementKillCountResponse) GetItemDef() uint32 {
	if x != nil && x.ItemDef != nil {
		return *x.ItemDef
	}
	return 0
}

func (x *CMsgGCIncrementKillCountResponse) GetLevelType() uint32 {
	if x != nil && x.LevelType != nil {
		return *x.LevelType
	}
	return 0
}

type CSOEconItemDropRateBonus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId      *uint32  `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	ExpirationDate *uint32  `protobuf:"fixed32,2,opt,name=expiration_date,json=expirationDate" json:"expiration_date,omitempty"`
	Bonus          *float32 `protobuf:"fixed32,3,opt,name=bonus" json:"bonus,omitempty"`
	BonusCount     *uint32  `protobuf:"varint,4,opt,name=bonus_count,json=bonusCount" json:"bonus_count,omitempty"`
	ItemId         *uint64  `protobuf:"varint,5,opt,name=item_id,json=itemId" json:"item_id,omitempty"`
	DefIndex       *uint32  `protobuf:"varint,6,opt,name=def_index,json=defIndex" json:"def_index,omitempty"`
}

func (x *CSOEconItemDropRateBonus) Reset() {
	*x = CSOEconItemDropRateBonus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_csgo_base_gcmessages_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CSOEconItemDropRateBonus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSOEconItemDropRateBonus) ProtoMessage() {}

func (x *CSOEconItemDropRateBonus) ProtoReflect() protoreflect.Message {
	mi := &file_csgo_base_gcmessages_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSOEconItemDropRateBonus.ProtoReflect.Descriptor instead.
func (*CSOEconItemDropRateBonus) Descriptor() ([]byte, []int) {
	return file_csgo_base_gcmessages_proto_rawDescGZIP(), []int{50}
}

func (x *CSOEconItemDropRateBonus) GetAccountId() uint32 {
	if x != nil && x.AccountId != nil {
		return *x.AccountId
	}
	return 0
}

func (x *CSOEconItemDropRateBonus) GetExpirationDate() uint32 {
	if x != nil && x.ExpirationDate != nil {
		return *x.ExpirationDate
	}
	return 0
}

func (x *CSOEconItemDropRateBonus) GetBonus() float32 {
	if x != nil && x.Bonus != nil {
		return *x.Bonus
	}
	return 0
}

func (x *CSOEconItemDropRateBonus) GetBonusCount() uint32 {
	if x != nil && x.BonusCount != nil {
		return *x.BonusCount
	}
	return 0
}

func (x *CSOEconItemDropRateBonus) GetItemId() uint64 {
	if x != nil && x.ItemId != nil {
		return *x.ItemId
	}
	return 0
}

func (x *CSOEconItemDropRateBonus) GetDefIndex() uint32 {
	if x != nil && x.DefIndex != nil {
		return *x.DefIndex
	}
	return 0
}

type CSOEconItemLeagueViewPass struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId *uint32 `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	LeagueId  *uint32 `protobuf:"varint,2,opt,name=league_id,json=leagueId" json:"league_id,omitempty"`
	Admin     *uint32 `protobuf:"varint,3,opt,name=admin" json:"admin,omitempty"`
	Itemindex *uint32 `protobuf:"varint,4,opt,name=itemindex" json:"itemindex,omitempty"`
}

func (x *CSOEconItemLeagueViewPass) Reset() {
	*x = CSOEconItemLeagueViewPass{}
	if protoimpl.UnsafeEnabled {
		mi := &file_csgo_base_gcmessages_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CSOEconItemLeagueViewPass) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSOEconItemLeagueViewPass) ProtoMessage() {}

func (x *CSOEconItemLeagueViewPass) ProtoReflect() protoreflect.Message {
	mi := &file_csgo_base_gcmessages_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSOEconItemLeagueViewPass.ProtoReflect.Descriptor instead.
func (*CSOEconItemLeagueViewPass) Descriptor() ([]byte, []int) {
	return file_csgo_base_gcmessages_proto_rawDescGZIP(), []int{51}
}

func (x *CSOEconItemLeagueViewPass) GetAccountId() uint32 {
	if x != nil && x.AccountId != nil {
		return *x.AccountId
	}
	return 0
}

func (x *CSOEconItemLeagueViewPass) GetLeagueId() uint32 {
	if x != nil && x.LeagueId != nil {
		return *x.LeagueId
	}
	return 0
}

func (x *CSOEconItemLeagueViewPass) GetAdmin() uint32 {
	if x != nil && x.Admin != nil {
		return *x.Admin
	}
	return 0
}

func (x *CSOEconItemLeagueViewPass) GetItemindex() uint32 {
	if x != nil && x.Itemindex != nil {
		return *x.Itemindex
	}
	return 0
}

type CSOEconItemEventTicket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId *uint32 `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	EventId   *uint32 `protobuf:"varint,2,opt,name=event_id,json=eventId" json:"event_id,omitempty"`
	ItemId    *uint64 `protobuf:"varint,3,opt,name=item_id,json=itemId" json:"item_id,omitempty"`
}

func (x *CSOEconItemEventTicket) Reset() {
	*x = CSOEconItemEventTicket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_csgo_base_gcmessages_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CSOEconItemEventTicket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSOEconItemEventTicket) ProtoMessage() {}

func (x *CSOEconItemEventTicket) ProtoReflect() protoreflect.Message {
	mi := &file_csgo_base_gcmessages_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSOEconItemEventTicket.ProtoReflect.Descriptor instead.
func (*CSOEconItemEventTicket) Descriptor() ([]byte, []int) {
	return file_csgo_base_gcmessages_proto_rawDescGZIP(), []int{52}
}

func (x *CSOEconItemEventTicket) GetAccountId() uint32 {
	if x != nil && x.AccountId != nil {
		return *x.AccountId
	}
	return 0
}

func (x *CSOEconItemEventTicket) GetEventId() uint32 {
	if x != nil && x.EventId != nil {
		return *x.EventId
	}
	return 0
}

func (x *CSOEconItemEventTicket) GetItemId() uint64 {
	if x != nil && x.ItemId != nil {
		return *x.ItemId
	}
	return 0
}

type CMsgGCItemPreviewItemBoughtNotification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemDefIndex *uint32 `protobuf:"varint,1,opt,name=item_def_index,json=itemDefIndex" json:"item_def_index,omitempty"`
}

func (x *CMsgGCItemPreviewItemBoughtNotification) Reset() {
	*x = CMsgGCItemPreviewItemBoughtNotification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_csgo_base_gcmessages_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCItemPreviewItemBoughtNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCItemPreviewItemBoughtNotification) ProtoMessage() {}

func (x *CMsgGCItemPreviewItemBoughtNotification) ProtoReflect() protoreflect.Message {
	mi := &file_csgo_base_gcmessages_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCItemPreviewItemBoughtNotification.ProtoReflect.Descriptor instead.
func (*CMsgGCItemPreviewItemBoughtNotification) Descriptor() ([]byte, []int) {
	return file_csgo_base_gcmessages_proto_rawDescGZIP(), []int{53}
}

func (x *CMsgGCItemPreviewItemBoughtNotification) GetItemDefIndex() uint32 {
	if x != nil && x.ItemDefIndex != nil {
		return *x.ItemDefIndex
	}
	return 0
}

type CMsgGCStorePurchaseCancel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TxnId *uint64 `protobuf:"varint,1,opt,name=txn_id,json=txnId" json:"txn_id,omitempty"`
}

func (x *CMsgGCStorePurchaseCancel) Reset() {
	*x = CMsgGCStorePurchaseCancel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_csgo_base_gcmessages_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCStorePurchaseCancel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCStorePurchaseCancel) ProtoMessage() {}

func (x *CMsgGCStorePurchaseCancel) ProtoReflect() protoreflect.Message {
	mi := &file_csgo_base_gcmessages_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCStorePurchaseCancel.ProtoReflect.Descriptor instead.
func (*CMsgGCStorePurchaseCancel) Descriptor() ([]byte, []int) {
	return file_csgo_base_gcmessages_proto_rawDescGZIP(), []int{54}
}

func (x *CMsgGCStorePurchaseCancel) GetTxnId() uint64 {
	if x != nil && x.TxnId != nil {
		return *x.TxnId
	}
	return 0
}

type CMsgGCStorePurchaseCancelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *uint32 `protobuf:"varint,1,opt,name=result" json:"result,omitempty"`
}

func (x *CMsgGCStorePurchaseCancelResponse) Reset() {
	*x = CMsgGCStorePurchaseCancelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_csgo_base_gcmessages_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCStorePurchaseCancelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCStorePurchaseCancelResponse) ProtoMessage() {}

func (x *CMsgGCStorePurchaseCancelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_csgo_base_gcmessages_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCStorePurchaseCancelResponse.ProtoReflect.Descriptor instead.
func (*CMsgGCStorePurchaseCancelResponse) Descriptor() ([]byte, []int) {
	return file_csgo_base_gcmessages_proto_rawDescGZIP(), []int{55}
}

func (x *CMsgGCStorePurchaseCancelResponse) GetResult() uint32 {
	if x != nil && x.Result != nil {
		return *x.Result
	}
	return 0
}

type CMsgGCStorePurchaseFinalize struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TxnId *uint64 `protobuf:"varint,1,opt,name=txn_id,json=txnId" json:"txn_id,omitempty"`
}

func (x *CMsgGCStorePurchaseFinalize) Reset() {
	*x = CMsgGCStorePurchaseFinalize{}
	if protoimpl.UnsafeEnabled {
		mi := &file_csgo_base_gcmessages_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCStorePurchaseFinalize) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCStorePurchaseFinalize) ProtoMessage() {}

func (x *CMsgGCStorePurchaseFinalize) ProtoReflect() protoreflect.Message {
	mi := &file_csgo_base_gcmessages_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCStorePurchaseFinalize.ProtoReflect.Descriptor instead.
func (*CMsgGCStorePurchaseFinalize) Descriptor() ([]byte, []int) {
	return file_csgo_base_gcmessages_proto_rawDescGZIP(), []int{56}
}

func (x *CMsgGCStorePurchaseFinalize) GetTxnId() uint64 {
	if x != nil && x.TxnId != nil {
		return *x.TxnId
	}
	return 0
}

type CMsgGCStorePurchaseFinalizeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result  *uint32  `protobuf:"varint,1,opt,name=result" json:"result,omitempty"`
	ItemIds []uint64 `protobuf:"varint,2,rep,name=item_ids,json=itemIds" json:"item_ids,omitempty"`
}

func (x *CMsgGCStorePurchaseFinalizeResponse) Reset() {
	*x = CMsgGCStorePurchaseFinalizeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_csgo_base_gcmessages_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCStorePurchaseFinalizeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCStorePurchaseFinalizeResponse) ProtoMessage() {}

func (x *CMsgGCStorePurchaseFinalizeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_csgo_base_gcmessages_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCStorePurchaseFinalizeResponse.ProtoReflect.Descriptor instead.
func (*CMsgGCStorePurchaseFinalizeResponse) Descriptor() ([]byte, []int) {
	return file_csgo_base_gcmessages_proto_rawDescGZIP(), []int{57}
}

func (x *CMsgGCStorePurchaseFinalizeResponse) GetResult() uint32 {
	if x != nil && x.Result != nil {
		return *x.Result
	}
	return 0
}

func (x *CMsgGCStorePurchaseFinalizeResponse) GetItemIds() []uint64 {
	if x != nil {
		return x.ItemIds
	}
	return nil
}

type CMsgGCBannedWordListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BanListGroupId *uint32 `protobuf:"varint,1,opt,name=ban_list_group_id,json=banListGroupId" json:"ban_list_group_id,omitempty"`
	WordId         *uint32 `protobuf:"varint,2,opt,name=word_id,json=wordId" json:"word_id,omitempty"`
}

func (x *CMsgGCBannedWordListRequest) Reset() {
	*x = CMsgGCBannedWordListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_csgo_base_gcmessages_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCBannedWordListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCBannedWordListRequest) ProtoMessage() {}

func (x *CMsgGCBannedWordListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_csgo_base_gcmessages_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCBannedWordListRequest.ProtoReflect.Descriptor instead.
func (*CMsgGCBannedWordListRequest) Descriptor() ([]byte, []int) {
	return file_csgo_base_gcmessages_proto_rawDescGZIP(), []int{58}
}

func (x *CMsgGCBannedWordListRequest) GetBanListGroupId() uint32 {
	if x != nil && x.BanListGroupId != nil {
		return *x.BanListGroupId
	}
	return 0
}

func (x *CMsgGCBannedWordListRequest) GetWordId() uint32 {
	if x != nil && x.WordId != nil {
		return *x.WordId
	}
	return 0
}

type CMsgGCRequestAnnouncements struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CMsgGCRequestAnnouncements) Reset() {
	*x = CMsgGCRequestAnnouncements{}
	if protoimpl.UnsafeEnabled {
		mi := &file_csgo_base_gcmessages_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCRequestAnnouncements) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCRequestAnnouncements) ProtoMessage() {}

func (x *CMsgGCRequestAnnouncements) ProtoReflect() protoreflect.Message {
	mi := &file_csgo_base_gcmessages_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCRequestAnnouncements.ProtoReflect.Descriptor instead.
func (*CMsgGCRequestAnnouncements) Descriptor() ([]byte, []int) {
	return file_csgo_base_gcmessages_proto_rawDescGZIP(), []int{59}
}

type CMsgGCRequestAnnouncementsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AnnouncementTitle *string `protobuf:"bytes,1,opt,name=announcement_title,json=announcementTitle" json:"announcement_title,omitempty"`
	Announcement      *string `protobuf:"bytes,2,opt,name=announcement" json:"announcement,omitempty"`
	NextmatchTitle    *string `protobuf:"bytes,3,opt,name=nextmatch_title,json=nextmatchTitle" json:"nextmatch_title,omitempty"`
	Nextmatch         *string `protobuf:"bytes,4,opt,name=nextmatch" json:"nextmatch,omitempty"`
}

func (x *CMsgGCRequestAnnouncementsResponse) Reset() {
	*x = CMsgGCRequestAnnouncementsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_csgo_base_gcmessages_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCRequestAnnouncementsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCRequestAnnouncementsResponse) ProtoMessage() {}

func (x *CMsgGCRequestAnnouncementsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_csgo_base_gcmessages_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCRequestAnnouncementsResponse.ProtoReflect.Descriptor instead.
func (*CMsgGCRequestAnnouncementsResponse) Descriptor() ([]byte, []int) {
	return file_csgo_base_gcmessages_proto_rawDescGZIP(), []int{60}
}

func (x *CMsgGCRequestAnnouncementsResponse) GetAnnouncementTitle() string {
	if x != nil && x.AnnouncementTitle != nil {
		return *x.AnnouncementTitle
	}
	return ""
}

func (x *CMsgGCRequestAnnouncementsResponse) GetAnnouncement() string {
	if x != nil && x.Announcement != nil {
		return *x.Announcement
	}
	return ""
}

func (x *CMsgGCRequestAnnouncementsResponse) GetNextmatchTitle() string {
	if x != nil && x.NextmatchTitle != nil {
		return *x.NextmatchTitle
	}
	return ""
}

func (x *CMsgGCRequestAnnouncementsResponse) GetNextmatch() string {
	if x != nil && x.Nextmatch != nil {
		return *x.Nextmatch
	}
	return ""
}

type CMsgGCBannedWord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WordId   *uint32            `protobuf:"varint,1,opt,name=word_id,json=wordId" json:"word_id,omitempty"`
	WordType *GC_BannedWordType `protobuf:"varint,2,opt,name=word_type,json=wordType,enum=csgo.GC_BannedWordType,def=0" json:"word_type,omitempty"`
	Word     *string            `protobuf:"bytes,3,opt,name=word" json:"word,omitempty"`
}

// Default values for CMsgGCBannedWord fields.
const (
	Default_CMsgGCBannedWord_WordType = GC_BannedWordType_GC_BANNED_WORD_DISABLE_WORD
)

func (x *CMsgGCBannedWord) Reset() {
	*x = CMsgGCBannedWord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_csgo_base_gcmessages_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCBannedWord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCBannedWord) ProtoMessage() {}

func (x *CMsgGCBannedWord) ProtoReflect() protoreflect.Message {
	mi := &file_csgo_base_gcmessages_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCBannedWord.ProtoReflect.Descriptor instead.
func (*CMsgGCBannedWord) Descriptor() ([]byte, []int) {
	return file_csgo_base_gcmessages_proto_rawDescGZIP(), []int{61}
}

func (x *CMsgGCBannedWord) GetWordId() uint32 {
	if x != nil && x.WordId != nil {
		return *x.WordId
	}
	return 0
}

func (x *CMsgGCBannedWord) GetWordType() GC_BannedWordType {
	if x != nil && x.WordType != nil {
		return *x.WordType
	}
	return Default_CMsgGCBannedWord_WordType
}

func (x *CMsgGCBannedWord) GetWord() string {
	if x != nil && x.Word != nil {
		return *x.Word
	}
	return ""
}

type CMsgGCBannedWordListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BanListGroupId *uint32             `protobuf:"varint,1,opt,name=ban_list_group_id,json=banListGroupId" json:"ban_list_group_id,omitempty"`
	WordList       []*CMsgGCBannedWord `protobuf:"bytes,2,rep,name=word_list,json=wordList" json:"word_list,omitempty"`
}

func (x *CMsgGCBannedWordListResponse) Reset() {
	*x = CMsgGCBannedWordListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_csgo_base_gcmessages_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCBannedWordListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCBannedWordListResponse) ProtoMessage() {}

func (x *CMsgGCBannedWordListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_csgo_base_gcmessages_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCBannedWordListResponse.ProtoReflect.Descriptor instead.
func (*CMsgGCBannedWordListResponse) Descriptor() ([]byte, []int) {
	return file_csgo_base_gcmessages_proto_rawDescGZIP(), []int{62}
}

func (x *CMsgGCBannedWordListResponse) GetBanListGroupId() uint32 {
	if x != nil && x.BanListGroupId != nil {
		return *x.BanListGroupId
	}
	return 0
}

func (x *CMsgGCBannedWordListResponse) GetWordList() []*CMsgGCBannedWord {
	if x != nil {
		return x.WordList
	}
	return nil
}

type CMsgGCToGCBannedWordListBroadcast struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Broadcast *CMsgGCBannedWordListResponse `protobuf:"bytes,1,opt,name=broadcast" json:"broadcast,omitempty"`
}

func (x *CMsgGCToGCBannedWordListBroadcast) Reset() {
	*x = CMsgGCToGCBannedWordListBroadcast{}
	if protoimpl.UnsafeEnabled {
		mi := &file_csgo_base_gcmessages_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCToGCBannedWordListBroadcast) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCToGCBannedWordListBroadcast) ProtoMessage() {}

func (x *CMsgGCToGCBannedWordListBroadcast) ProtoReflect() protoreflect.Message {
	mi := &file_csgo_base_gcmessages_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCToGCBannedWordListBroadcast.ProtoReflect.Descriptor instead.
func (*CMsgGCToGCBannedWordListBroadcast) Descriptor() ([]byte, []int) {
	return file_csgo_base_gcmessages_proto_rawDescGZIP(), []int{63}
}

func (x *CMsgGCToGCBannedWordListBroadcast) GetBroadcast() *CMsgGCBannedWordListResponse {
	if x != nil {
		return x.Broadcast
	}
	return nil
}

type CMsgGCToGCBannedWordListUpdated struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId *uint32 `protobuf:"varint,1,opt,name=group_id,json=groupId" json:"group_id,omitempty"`
}

func (x *CMsgGCToGCBannedWordListUpdated) Reset() {
	*x = CMsgGCToGCBannedWordListUpdated{}
	if protoimpl.UnsafeEnabled {
		mi := &file_csgo_base_gcmessages_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCToGCBannedWordListUpdated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCToGCBannedWordListUpdated) ProtoMessage() {}

func (x *CMsgGCToGCBannedWordListUpdated) ProtoReflect() protoreflect.Message {
	mi := &file_csgo_base_gcmessages_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCToGCBannedWordListUpdated.ProtoReflect.Descriptor instead.
func (*CMsgGCToGCBannedWordListUpdated) Descriptor() ([]byte, []int) {
	return file_csgo_base_gcmessages_proto_rawDescGZIP(), []int{64}
}

func (x *CMsgGCToGCBannedWordListUpdated) GetGroupId() uint32 {
	if x != nil && x.GroupId != nil {
		return *x.GroupId
	}
	return 0
}

type CSOEconDefaultEquippedDefinitionInstanceClient struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId      *uint32 `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	ItemDefinition *uint32 `protobuf:"varint,2,opt,name=item_definition,json=itemDefinition" json:"item_definition,omitempty"`
	ClassId        *uint32 `protobuf:"varint,3,opt,name=class_id,json=classId" json:"class_id,omitempty"`
	SlotId         *uint32 `protobuf:"varint,4,opt,name=slot_id,json=slotId" json:"slot_id,omitempty"`
}

func (x *CSOEconDefaultEquippedDefinitionInstanceClient) Reset() {
	*x = CSOEconDefaultEquippedDefinitionInstanceClient{}
	if protoimpl.UnsafeEnabled {
		mi := &file_csgo_base_gcmessages_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CSOEconDefaultEquippedDefinitionInstanceClient) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSOEconDefaultEquippedDefinitionInstanceClient) ProtoMessage() {}

func (x *CSOEconDefaultEquippedDefinitionInstanceClient) ProtoReflect() protoreflect.Message {
	mi := &file_csgo_base_gcmessages_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSOEconDefaultEquippedDefinitionInstanceClient.ProtoReflect.Descriptor instead.
func (*CSOEconDefaultEquippedDefinitionInstanceClient) Descriptor() ([]byte, []int) {
	return file_csgo_base_gcmessages_proto_rawDescGZIP(), []int{65}
}

func (x *CSOEconDefaultEquippedDefinitionInstanceClient) GetAccountId() uint32 {
	if x != nil && x.AccountId != nil {
		return *x.AccountId
	}
	return 0
}

func (x *CSOEconDefaultEquippedDefinitionInstanceClient) GetItemDefinition() uint32 {
	if x != nil && x.ItemDefinition != nil {
		return *x.ItemDefinition
	}
	return 0
}

func (x *CSOEconDefaultEquippedDefinitionInstanceClient) GetClassId() uint32 {
	if x != nil && x.ClassId != nil {
		return *x.ClassId
	}
	return 0
}

func (x *CSOEconDefaultEquippedDefinitionInstanceClient) GetSlotId() uint32 {
	if x != nil && x.SlotId != nil {
		return *x.SlotId
	}
	return 0
}

type CMsgGCToGCDirtySDOCache struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SdoType   *uint32 `protobuf:"varint,1,opt,name=sdo_type,json=sdoType" json:"sdo_type,omitempty"`
	KeyUint64 *uint64 `protobuf:"varint,2,opt,name=key_uint64,json=keyUint64" json:"key_uint64,omitempty"`
}

func (x *CMsgGCToGCDirtySDOCache) Reset() {
	*x = CMsgGCToGCDirtySDOCache{}
	if protoimpl.UnsafeEnabled {
		mi := &file_csgo_base_gcmessages_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCToGCDirtySDOCache) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCToGCDirtySDOCache) ProtoMessage() {}

func (x *CMsgGCToGCDirtySDOCache) ProtoReflect() protoreflect.Message {
	mi := &file_csgo_base_gcmessages_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCToGCDirtySDOCache.ProtoReflect.Descriptor instead.
func (*CMsgGCToGCDirtySDOCache) Descriptor() ([]byte, []int) {
	return file_csgo_base_gcmessages_proto_rawDescGZIP(), []int{66}
}

func (x *CMsgGCToGCDirtySDOCache) GetSdoType() uint32 {
	if x != nil && x.SdoType != nil {
		return *x.SdoType
	}
	return 0
}

func (x *CMsgGCToGCDirtySDOCache) GetKeyUint64() uint64 {
	if x != nil && x.KeyUint64 != nil {
		return *x.KeyUint64
	}
	return 0
}

type CMsgGCToGCDirtyMultipleSDOCache struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SdoType   *uint32  `protobuf:"varint,1,opt,name=sdo_type,json=sdoType" json:"sdo_type,omitempty"`
	KeyUint64 []uint64 `protobuf:"varint,2,rep,name=key_uint64,json=keyUint64" json:"key_uint64,omitempty"`
}

func (x *CMsgGCToGCDirtyMultipleSDOCache) Reset() {
	*x = CMsgGCToGCDirtyMultipleSDOCache{}
	if protoimpl.UnsafeEnabled {
		mi := &file_csgo_base_gcmessages_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCToGCDirtyMultipleSDOCache) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCToGCDirtyMultipleSDOCache) ProtoMessage() {}

func (x *CMsgGCToGCDirtyMultipleSDOCache) ProtoReflect() protoreflect.Message {
	mi := &file_csgo_base_gcmessages_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCToGCDirtyMultipleSDOCache.ProtoReflect.Descriptor instead.
func (*CMsgGCToGCDirtyMultipleSDOCache) Descriptor() ([]byte, []int) {
	return file_csgo_base_gcmessages_proto_rawDescGZIP(), []int{67}
}

func (x *CMsgGCToGCDirtyMultipleSDOCache) GetSdoType() uint32 {
	if x != nil && x.SdoType != nil {
		return *x.SdoType
	}
	return 0
}

func (x *CMsgGCToGCDirtyMultipleSDOCache) GetKeyUint64() []uint64 {
	if x != nil {
		return x.KeyUint64
	}
	return nil
}

type CMsgGCCollectItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CollectionItemId *uint64 `protobuf:"varint,1,opt,name=collection_item_id,json=collectionItemId" json:"collection_item_id,omitempty"`
	SubjectItemId    *uint64 `protobuf:"varint,2,opt,name=subject_item_id,json=subjectItemId" json:"subject_item_id,omitempty"`
}

func (x *CMsgGCCollectItem) Reset() {
	*x = CMsgGCCollectItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_csgo_base_gcmessages_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCCollectItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCCollectItem) ProtoMessage() {}

func (x *CMsgGCCollectItem) ProtoReflect() protoreflect.Message {
	mi := &file_csgo_base_gcmessages_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCCollectItem.ProtoReflect.Descriptor instead.
func (*CMsgGCCollectItem) Descriptor() ([]byte, []int) {
	return file_csgo_base_gcmessages_proto_rawDescGZIP(), []int{68}
}

func (x *CMsgGCCollectItem) GetCollectionItemId() uint64 {
	if x != nil && x.CollectionItemId != nil {
		return *x.CollectionItemId
	}
	return 0
}

func (x *CMsgGCCollectItem) GetSubjectItemId() uint64 {
	if x != nil && x.SubjectItemId != nil {
		return *x.SubjectItemId
	}
	return 0
}

type CMsgSDONoMemcached struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CMsgSDONoMemcached) Reset() {
	*x = CMsgSDONoMemcached{}
	if protoimpl.UnsafeEnabled {
		mi := &file_csgo_base_gcmessages_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgSDONoMemcached) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSDONoMemcached) ProtoMessage() {}

func (x *CMsgSDONoMemcached) ProtoReflect() protoreflect.Message {
	mi := &file_csgo_base_gcmessages_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSDONoMemcached.ProtoReflect.Descriptor instead.
func (*CMsgSDONoMemcached) Descriptor() ([]byte, []int) {
	return file_csgo_base_gcmessages_proto_rawDescGZIP(), []int{69}
}

type CMsgGCToGCUpdateSQLKeyValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KeyName *string `protobuf:"bytes,1,opt,name=key_name,json=keyName" json:"key_name,omitempty"`
}

func (x *CMsgGCToGCUpdateSQLKeyValue) Reset() {
	*x = CMsgGCToGCUpdateSQLKeyValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_csgo_base_gcmessages_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCToGCUpdateSQLKeyValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCToGCUpdateSQLKeyValue) ProtoMessage() {}

func (x *CMsgGCToGCUpdateSQLKeyValue) ProtoReflect() protoreflect.Message {
	mi := &file_csgo_base_gcmessages_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCToGCUpdateSQLKeyValue.ProtoReflect.Descriptor instead.
func (*CMsgGCToGCUpdateSQLKeyValue) Descriptor() ([]byte, []int) {
	return file_csgo_base_gcmessages_proto_rawDescGZIP(), []int{70}
}

func (x *CMsgGCToGCUpdateSQLKeyValue) GetKeyName() string {
	if x != nil && x.KeyName != nil {
		return *x.KeyName
	}
	return ""
}

type CMsgGCToGCIsTrustedServer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SteamId *uint64 `protobuf:"fixed64,1,opt,name=steam_id,json=steamId" json:"steam_id,omitempty"`
}

func (x *CMsgGCToGCIsTrustedServer) Reset() {
	*x = CMsgGCToGCIsTrustedServer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_csgo_base_gcmessages_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCToGCIsTrustedServer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCToGCIsTrustedServer) ProtoMessage() {}

func (x *CMsgGCToGCIsTrustedServer) ProtoReflect() protoreflect.Message {
	mi := &file_csgo_base_gcmessages_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCToGCIsTrustedServer.ProtoReflect.Descriptor instead.
func (*CMsgGCToGCIsTrustedServer) Descriptor() ([]byte, []int) {
	return file_csgo_base_gcmessages_proto_rawDescGZIP(), []int{71}
}

func (x *CMsgGCToGCIsTrustedServer) GetSteamId() uint64 {
	if x != nil && x.SteamId != nil {
		return *x.SteamId
	}
	return 0
}

type CMsgGCToGCIsTrustedServerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsTrusted *bool `protobuf:"varint,1,opt,name=is_trusted,json=isTrusted" json:"is_trusted,omitempty"`
}

func (x *CMsgGCToGCIsTrustedServerResponse) Reset() {
	*x = CMsgGCToGCIsTrustedServerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_csgo_base_gcmessages_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCToGCIsTrustedServerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCToGCIsTrustedServerResponse) ProtoMessage() {}

func (x *CMsgGCToGCIsTrustedServerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_csgo_base_gcmessages_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCToGCIsTrustedServerResponse.ProtoReflect.Descriptor instead.
func (*CMsgGCToGCIsTrustedServerResponse) Descriptor() ([]byte, []int) {
	return file_csgo_base_gcmessages_proto_rawDescGZIP(), []int{72}
}

func (x *CMsgGCToGCIsTrustedServerResponse) GetIsTrusted() bool {
	if x != nil && x.IsTrusted != nil {
		return *x.IsTrusted
	}
	return false
}

type CMsgGCToGCBroadcastConsoleCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConCommand *string `protobuf:"bytes,1,opt,name=con_command,json=conCommand" json:"con_command,omitempty"`
}

func (x *CMsgGCToGCBroadcastConsoleCommand) Reset() {
	*x = CMsgGCToGCBroadcastConsoleCommand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_csgo_base_gcmessages_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCToGCBroadcastConsoleCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCToGCBroadcastConsoleCommand) ProtoMessage() {}

func (x *CMsgGCToGCBroadcastConsoleCommand) ProtoReflect() protoreflect.Message {
	mi := &file_csgo_base_gcmessages_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCToGCBroadcastConsoleCommand.ProtoReflect.Descriptor instead.
func (*CMsgGCToGCBroadcastConsoleCommand) Descriptor() ([]byte, []int) {
	return file_csgo_base_gcmessages_proto_rawDescGZIP(), []int{73}
}

func (x *CMsgGCToGCBroadcastConsoleCommand) GetConCommand() string {
	if x != nil && x.ConCommand != nil {
		return *x.ConCommand
	}
	return ""
}

type CMsgGCServerVersionUpdated struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerVersion *uint32 `protobuf:"varint,1,opt,name=server_version,json=serverVersion" json:"server_version,omitempty"`
}

func (x *CMsgGCServerVersionUpdated) Reset() {
	*x = CMsgGCServerVersionUpdated{}
	if protoimpl.UnsafeEnabled {
		mi := &file_csgo_base_gcmessages_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCServerVersionUpdated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCServerVersionUpdated) ProtoMessage() {}

func (x *CMsgGCServerVersionUpdated) ProtoReflect() protoreflect.Message {
	mi := &file_csgo_base_gcmessages_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCServerVersionUpdated.ProtoReflect.Descriptor instead.
func (*CMsgGCServerVersionUpdated) Descriptor() ([]byte, []int) {
	return file_csgo_base_gcmessages_proto_rawDescGZIP(), []int{74}
}

func (x *CMsgGCServerVersionUpdated) GetServerVersion() uint32 {
	if x != nil && x.ServerVersion != nil {
		return *x.ServerVersion
	}
	return 0
}

type CMsgGCClientVersionUpdated struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientVersion *uint32 `protobuf:"varint,1,opt,name=client_version,json=clientVersion" json:"client_version,omitempty"`
}

func (x *CMsgGCClientVersionUpdated) Reset() {
	*x = CMsgGCClientVersionUpdated{}
	if protoimpl.UnsafeEnabled {
		mi := &file_csgo_base_gcmessages_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCClientVersionUpdated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCClientVersionUpdated) ProtoMessage() {}

func (x *CMsgGCClientVersionUpdated) ProtoReflect() protoreflect.Message {
	mi := &file_csgo_base_gcmessages_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCClientVersionUpdated.ProtoReflect.Descriptor instead.
func (*CMsgGCClientVersionUpdated) Descriptor() ([]byte, []int) {
	return file_csgo_base_gcmessages_proto_rawDescGZIP(), []int{75}
}

func (x *CMsgGCClientVersionUpdated) GetClientVersion() uint32 {
	if x != nil && x.ClientVersion != nil {
		return *x.ClientVersion
	}
	return 0
}

type CMsgGCToGCWebAPIAccountChanged struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CMsgGCToGCWebAPIAccountChanged) Reset() {
	*x = CMsgGCToGCWebAPIAccountChanged{}
	if protoimpl.UnsafeEnabled {
		mi := &file_csgo_base_gcmessages_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCToGCWebAPIAccountChanged) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCToGCWebAPIAccountChanged) ProtoMessage() {}

func (x *CMsgGCToGCWebAPIAccountChanged) ProtoReflect() protoreflect.Message {
	mi := &file_csgo_base_gcmessages_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCToGCWebAPIAccountChanged.ProtoReflect.Descriptor instead.
func (*CMsgGCToGCWebAPIAccountChanged) Descriptor() ([]byte, []int) {
	return file_csgo_base_gcmessages_proto_rawDescGZIP(), []int{76}
}

type CMsgGCToGCRequestPassportItemGrant struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SteamId    *uint64 `protobuf:"fixed64,1,opt,name=steam_id,json=steamId" json:"steam_id,omitempty"`
	LeagueId   *uint32 `protobuf:"varint,2,opt,name=league_id,json=leagueId" json:"league_id,omitempty"`
	RewardFlag *int32  `protobuf:"varint,3,opt,name=reward_flag,json=rewardFlag" json:"reward_flag,omitempty"`
}

func (x *CMsgGCToGCRequestPassportItemGrant) Reset() {
	*x = CMsgGCToGCRequestPassportItemGrant{}
	if protoimpl.UnsafeEnabled {
		mi := &file_csgo_base_gcmessages_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCToGCRequestPassportItemGrant) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCToGCRequestPassportItemGrant) ProtoMessage() {}

func (x *CMsgGCToGCRequestPassportItemGrant) ProtoReflect() protoreflect.Message {
	mi := &file_csgo_base_gcmessages_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCToGCRequestPassportItemGrant.ProtoReflect.Descriptor instead.
func (*CMsgGCToGCRequestPassportItemGrant) Descriptor() ([]byte, []int) {
	return file_csgo_base_gcmessages_proto_rawDescGZIP(), []int{77}
}

func (x *CMsgGCToGCRequestPassportItemGrant) GetSteamId() uint64 {
	if x != nil && x.SteamId != nil {
		return *x.SteamId
	}
	return 0
}

func (x *CMsgGCToGCRequestPassportItemGrant) GetLeagueId() uint32 {
	if x != nil && x.LeagueId != nil {
		return *x.LeagueId
	}
	return 0
}

func (x *CMsgGCToGCRequestPassportItemGrant) GetRewardFlag() int32 {
	if x != nil && x.RewardFlag != nil {
		return *x.RewardFlag
	}
	return 0
}

type CMsgGameServerInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerPublicIpAddr          *uint32                        `protobuf:"fixed32,1,opt,name=server_public_ip_addr,json=serverPublicIpAddr" json:"server_public_ip_addr,omitempty"`
	ServerPrivateIpAddr         *uint32                        `protobuf:"fixed32,2,opt,name=server_private_ip_addr,json=serverPrivateIpAddr" json:"server_private_ip_addr,omitempty"`
	ServerPort                  *uint32                        `protobuf:"varint,3,opt,name=server_port,json=serverPort" json:"server_port,omitempty"`
	ServerTvPort                *uint32                        `protobuf:"varint,4,opt,name=server_tv_port,json=serverTvPort" json:"server_tv_port,omitempty"`
	ServerKey                   *string                        `protobuf:"bytes,5,opt,name=server_key,json=serverKey" json:"server_key,omitempty"`
	ServerHibernation           *bool                          `protobuf:"varint,6,opt,name=server_hibernation,json=serverHibernation" json:"server_hibernation,omitempty"`
	ServerType                  *CMsgGameServerInfo_ServerType `protobuf:"varint,7,opt,name=server_type,json=serverType,enum=csgo.CMsgGameServerInfo_ServerType,def=0" json:"server_type,omitempty"`
	ServerRegion                *uint32                        `protobuf:"varint,8,opt,name=server_region,json=serverRegion" json:"server_region,omitempty"`
	ServerLoadavg               *float32                       `protobuf:"fixed32,9,opt,name=server_loadavg,json=serverLoadavg" json:"server_loadavg,omitempty"`
	ServerTvBroadcastTime       *float32                       `protobuf:"fixed32,10,opt,name=server_tv_broadcast_time,json=serverTvBroadcastTime" json:"server_tv_broadcast_time,omitempty"`
	ServerGameTime              *float32                       `protobuf:"fixed32,11,opt,name=server_game_time,json=serverGameTime" json:"server_game_time,omitempty"`
	ServerRelayConnectedSteamId *uint64                        `protobuf:"fixed64,12,opt,name=server_relay_connected_steam_id,json=serverRelayConnectedSteamId" json:"server_relay_connected_steam_id,omitempty"`
	RelaySlotsMax               *uint32                        `protobuf:"varint,13,opt,name=relay_slots_max,json=relaySlotsMax" json:"relay_slots_max,omitempty"`
	RelaysConnected             *int32                         `protobuf:"varint,14,opt,name=relays_connected,json=relaysConnected" json:"relays_connected,omitempty"`
	RelayClientsConnected       *int32                         `protobuf:"varint,15,opt,name=relay_clients_connected,json=relayClientsConnected" json:"relay_clients_connected,omitempty"`
	RelayedGameServerSteamId    *uint64                        `protobuf:"fixed64,16,opt,name=relayed_game_server_steam_id,json=relayedGameServerSteamId" json:"relayed_game_server_steam_id,omitempty"`
	ParentRelayCount            *uint32                        `protobuf:"varint,17,opt,name=parent_relay_count,json=parentRelayCount" json:"parent_relay_count,omitempty"`
	TvSecretCode                *uint64                        `protobuf:"fixed64,18,opt,name=tv_secret_code,json=tvSecretCode" json:"tv_secret_code,omitempty"`
}

// Default values for CMsgGameServerInfo fields.
const (
	Default_CMsgGameServerInfo_ServerType = CMsgGameServerInfo_UNSPECIFIED
)

func (x *CMsgGameServerInfo) Reset() {
	*x = CMsgGameServerInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_csgo_base_gcmessages_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGameServerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGameServerInfo) ProtoMessage() {}

func (x *CMsgGameServerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_csgo_base_gcmessages_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGameServerInfo.ProtoReflect.Descriptor instead.
func (*CMsgGameServerInfo) Descriptor() ([]byte, []int) {
	return file_csgo_base_gcmessages_proto_rawDescGZIP(), []int{78}
}

func (x *CMsgGameServerInfo) GetServerPublicIpAddr() uint32 {
	if x != nil && x.ServerPublicIpAddr != nil {
		return *x.ServerPublicIpAddr
	}
	return 0
}

func (x *CMsgGameServerInfo) GetServerPrivateIpAddr() uint32 {
	if x != nil && x.ServerPrivateIpAddr != nil {
		return *x.ServerPrivateIpAddr
	}
	return 0
}

func (x *CMsgGameServerInfo) GetServerPort() uint32 {
	if x != nil && x.ServerPort != nil {
		return *x.ServerPort
	}
	return 0
}

func (x *CMsgGameServerInfo) GetServerTvPort() uint32 {
	if x != nil && x.ServerTvPort != nil {
		return *x.ServerTvPort
	}
	return 0
}

func (x *CMsgGameServerInfo) GetServerKey() string {
	if x != nil && x.ServerKey != nil {
		return *x.ServerKey
	}
	return ""
}

func (x *CMsgGameServerInfo) GetServerHibernation() bool {
	if x != nil && x.ServerHibernation != nil {
		return *x.ServerHibernation
	}
	return false
}

func (x *CMsgGameServerInfo) GetServerType() CMsgGameServerInfo_ServerType {
	if x != nil && x.ServerType != nil {
		return *x.ServerType
	}
	return Default_CMsgGameServerInfo_ServerType
}

func (x *CMsgGameServerInfo) GetServerRegion() uint32 {
	if x != nil && x.ServerRegion != nil {
		return *x.ServerRegion
	}
	return 0
}

func (x *CMsgGameServerInfo) GetServerLoadavg() float32 {
	if x != nil && x.ServerLoadavg != nil {
		return *x.ServerLoadavg
	}
	return 0
}

func (x *CMsgGameServerInfo) GetServerTvBroadcastTime() float32 {
	if x != nil && x.ServerTvBroadcastTime != nil {
		return *x.ServerTvBroadcastTime
	}
	return 0
}

func (x *CMsgGameServerInfo) GetServerGameTime() float32 {
	if x != nil && x.ServerGameTime != nil {
		return *x.ServerGameTime
	}
	return 0
}

func (x *CMsgGameServerInfo) GetServerRelayConnectedSteamId() uint64 {
	if x != nil && x.ServerRelayConnectedSteamId != nil {
		return *x.ServerRelayConnectedSteamId
	}
	return 0
}

func (x *CMsgGameServerInfo) GetRelaySlotsMax() uint32 {
	if x != nil && x.RelaySlotsMax != nil {
		return *x.RelaySlotsMax
	}
	return 0
}

func (x *CMsgGameServerInfo) GetRelaysConnected() int32 {
	if x != nil && x.RelaysConnected != nil {
		return *x.RelaysConnected
	}
	return 0
}

func (x *CMsgGameServerInfo) GetRelayClientsConnected() int32 {
	if x != nil && x.RelayClientsConnected != nil {
		return *x.RelayClientsConnected
	}
	return 0
}

func (x *CMsgGameServerInfo) GetRelayedGameServerSteamId() uint64 {
	if x != nil && x.RelayedGameServerSteamId != nil {
		return *x.RelayedGameServerSteamId
	}
	return 0
}

func (x *CMsgGameServerInfo) GetParentRelayCount() uint32 {
	if x != nil && x.ParentRelayCount != nil {
		return *x.ParentRelayCount
	}
	return 0
}

func (x *CMsgGameServerInfo) GetTvSecretCode() uint64 {
	if x != nil && x.TvSecretCode != nil {
		return *x.TvSecretCode
	}
	return 0
}

type CMsgSetItemPositions_ItemPosition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LegacyItemId *uint32 `protobuf:"varint,1,opt,name=legacy_item_id,json=legacyItemId" json:"legacy_item_id,omitempty"`
	Position     *uint32 `protobuf:"varint,2,opt,name=position" json:"position,omitempty"`
	ItemId       *uint64 `protobuf:"varint,3,opt,name=item_id,json=itemId" json:"item_id,omitempty"`
}

func (x *CMsgSetItemPositions_ItemPosition) Reset() {
	*x = CMsgSetItemPositions_ItemPosition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_csgo_base_gcmessages_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgSetItemPositions_ItemPosition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSetItemPositions_ItemPosition) ProtoMessage() {}

func (x *CMsgSetItemPositions_ItemPosition) ProtoReflect() protoreflect.Message {
	mi := &file_csgo_base_gcmessages_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSetItemPositions_ItemPosition.ProtoReflect.Descriptor instead.
func (*CMsgSetItemPositions_ItemPosition) Descriptor() ([]byte, []int) {
	return file_csgo_base_gcmessages_proto_rawDescGZIP(), []int{43, 0}
}

func (x *CMsgSetItemPositions_ItemPosition) GetLegacyItemId() uint32 {
	if x != nil && x.LegacyItemId != nil {
		return *x.LegacyItemId
	}
	return 0
}

func (x *CMsgSetItemPositions_ItemPosition) GetPosition() uint32 {
	if x != nil && x.Position != nil {
		return *x.Position
	}
	return 0
}

func (x *CMsgSetItemPositions_ItemPosition) GetItemId() uint64 {
	if x != nil && x.ItemId != nil {
		return *x.ItemId
	}
	return 0
}

var File_csgo_base_gcmessages_proto protoreflect.FileDescriptor

var file_csgo_base_gcmessages_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x63, 0x73, 0x67, 0x6f, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x67, 0x63, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x63, 0x73,
	0x67, 0x6f, 0x1a, 0x18, 0x63, 0x73, 0x67, 0x6f, 0x2f, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb5, 0x01, 0x0a,
	0x1d, 0x43, 0x47, 0x43, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73,
	0x65, 0x49, 0x6e, 0x69, 0x74, 0x5f, 0x4c, 0x69, 0x6e, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x1e,
	0x0a, 0x0b, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x64, 0x65, 0x66, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x09, 0x69, 0x74, 0x65, 0x6d, 0x44, 0x65, 0x66, 0x49, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x33, 0x0a, 0x16, 0x63, 0x6f,
	0x73, 0x74, 0x5f, 0x69, 0x6e, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x63, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x13, 0x63, 0x6f, 0x73, 0x74,
	0x49, 0x6e, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12,
	0x23, 0x0a, 0x0d, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x22, 0xaf, 0x01, 0x0a, 0x17, 0x43, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x53,
	0x74, 0x6f, 0x72, 0x65, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x69, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61,
	0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6c, 0x61,
	0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x79, 0x12, 0x42, 0x0a, 0x0a, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x63, 0x73, 0x67, 0x6f, 0x2e, 0x43, 0x47,
	0x43, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x49, 0x6e,
	0x69, 0x74, 0x5f, 0x4c, 0x69, 0x6e, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x09, 0x6c, 0x69, 0x6e,
	0x65, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x7d, 0x0a, 0x1f, 0x43, 0x4d, 0x73, 0x67, 0x47, 0x43,
	0x53, 0x74, 0x6f, 0x72, 0x65, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x69,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x12, 0x15, 0x0a, 0x06, 0x74, 0x78, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x05, 0x74, 0x78, 0x6e, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x74,
	0x65, 0x6d, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x04, 0x52, 0x07, 0x69, 0x74,
	0x65, 0x6d, 0x49, 0x64, 0x73, 0x22, 0x6f, 0x0a, 0x0e, 0x43, 0x53, 0x4f, 0x50, 0x61, 0x72, 0x74,
	0x79, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x12, 0x1f, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x04, 0x80, 0xa6, 0x1d, 0x01, 0x52,
	0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x06, 0x52, 0x08, 0x73, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x6f, 0x0a, 0x0e, 0x43, 0x53, 0x4f, 0x4c, 0x6f, 0x62,
	0x62, 0x79, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x12, 0x1f, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x04, 0x80, 0xa6, 0x1d, 0x01,
	0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x06, 0x52, 0x08, 0x73, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x2f, 0x0a, 0x13, 0x43, 0x4d, 0x73, 0x67, 0x53,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x76, 0x0a, 0x11, 0x43, 0x4d, 0x73, 0x67,
	0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x54, 0x6f, 0x50, 0x61, 0x72, 0x74, 0x79, 0x12, 0x19, 0x0a,
	0x08, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x06, 0x52,
	0x07, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x1f, 0x0a, 0x0b, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65,
	0x22, 0x4d, 0x0a, 0x15, 0x43, 0x4d, 0x73, 0x67, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x06, 0x52, 0x07, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x22,
	0x94, 0x01, 0x0a, 0x17, 0x43, 0x4d, 0x73, 0x67, 0x50, 0x61, 0x72, 0x74, 0x79, 0x49, 0x6e, 0x76,
	0x69, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x70,
	0x61, 0x72, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x70,
	0x61, 0x72, 0x74, 0x79, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x12, 0x25,
	0x0a, 0x0e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x6e,
	0x76, 0x69, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x74, 0x65, 0x61, 0x6d,
	0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x22, 0x2e, 0x0a, 0x11, 0x43, 0x4d, 0x73, 0x67, 0x4b, 0x69,
	0x63, 0x6b, 0x46, 0x72, 0x6f, 0x6d, 0x50, 0x61, 0x72, 0x74, 0x79, 0x12, 0x19, 0x0a, 0x08, 0x73,
	0x74, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x06, 0x52, 0x07, 0x73,
	0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x22, 0x10, 0x0a, 0x0e, 0x43, 0x4d, 0x73, 0x67, 0x4c, 0x65,
	0x61, 0x76, 0x65, 0x50, 0x61, 0x72, 0x74, 0x79, 0x22, 0x15, 0x0a, 0x13, 0x43, 0x4d, 0x73, 0x67,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x22,
	0x33, 0x0a, 0x16, 0x43, 0x4d, 0x73, 0x67, 0x4c, 0x41, 0x4e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x6f, 0x62,
	0x62, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x06, 0x52, 0x07, 0x6c, 0x6f, 0x62,
	0x62, 0x79, 0x49, 0x64, 0x22, 0x9a, 0x02, 0x0a, 0x18, 0x43, 0x53, 0x4f, 0x45, 0x63, 0x6f, 0x6e,
	0x47, 0x61, 0x6d, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x12, 0x3d, 0x0a, 0x19, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f,
	0x62, 0x61, 0x63, 0x6b, 0x70, 0x61, 0x63, 0x6b, 0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x17, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x61, 0x6c, 0x42, 0x61, 0x63, 0x6b, 0x70, 0x61, 0x63, 0x6b, 0x53, 0x6c, 0x6f, 0x74, 0x73,
	0x12, 0x3b, 0x0a, 0x1a, 0x62, 0x6f, 0x6e, 0x75, 0x73, 0x5f, 0x78, 0x70, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x5f, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x07, 0x52, 0x17, 0x62, 0x6f, 0x6e, 0x75, 0x73, 0x58, 0x70, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x12, 0x2c, 0x0a,
	0x12, 0x62, 0x6f, 0x6e, 0x75, 0x73, 0x5f, 0x78, 0x70, 0x5f, 0x75, 0x73, 0x65, 0x64, 0x66, 0x6c,
	0x61, 0x67, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x62, 0x6f, 0x6e, 0x75, 0x73,
	0x58, 0x70, 0x55, 0x73, 0x65, 0x64, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x65,
	0x6c, 0x65, 0x76, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0d, 0x65, 0x6c, 0x65, 0x76, 0x61, 0x74, 0x65, 0x64, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x2d, 0x0a, 0x12, 0x65, 0x6c, 0x65, 0x76, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11,
	0x65, 0x6c, 0x65, 0x76, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x22, 0xa0, 0x01, 0x0a, 0x18, 0x43, 0x53, 0x4f, 0x49, 0x74, 0x65, 0x6d, 0x43, 0x72, 0x69,
	0x74, 0x65, 0x72, 0x69, 0x61, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e,
	0x0a, 0x02, 0x6f, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x6f, 0x70, 0x12, 0x14,
	0x0a, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64,
	0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0xd5, 0x03, 0x0a, 0x0f, 0x43, 0x53, 0x4f, 0x49, 0x74, 0x65, 0x6d,
	0x43, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x74, 0x65, 0x6d,
	0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x69, 0x74,
	0x65, 0x6d, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x74, 0x65, 0x6d, 0x5f,
	0x71, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x69,
	0x74, 0x65, 0x6d, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x24, 0x0a, 0x0e, 0x69, 0x74,
	0x65, 0x6d, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0c, 0x69, 0x74, 0x65, 0x6d, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x53, 0x65, 0x74,
	0x12, 0x28, 0x0a, 0x10, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79,
	0x5f, 0x73, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x69, 0x74, 0x65, 0x6d,
	0x51, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x53, 0x65, 0x74, 0x12, 0x2b, 0x0a, 0x11, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x49, 0x6e,
	0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x29, 0x0a, 0x10, 0x69, 0x6e, 0x69, 0x74, 0x69,
	0x61, 0x6c, 0x5f, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0f, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x12, 0x2e, 0x0a, 0x13, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x5f, 0x65, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x64, 0x5f, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x11, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x46, 0x6c,
	0x61, 0x67, 0x12, 0x3e, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x73, 0x67, 0x6f, 0x2e, 0x43, 0x53,
	0x4f, 0x49, 0x74, 0x65, 0x6d, 0x43, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x43, 0x6f, 0x6e,
	0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x72, 0x61, 0x72, 0x69, 0x74,
	0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x69, 0x74, 0x65, 0x6d, 0x52, 0x61, 0x72,
	0x69, 0x74, 0x79, 0x12, 0x26, 0x0a, 0x0f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x72, 0x61, 0x72, 0x69,
	0x74, 0x79, 0x5f, 0x73, 0x65, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x69, 0x74,
	0x65, 0x6d, 0x52, 0x61, 0x72, 0x69, 0x74, 0x79, 0x53, 0x65, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x72,
	0x65, 0x63, 0x65, 0x6e, 0x74, 0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0a, 0x72, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x4f, 0x6e, 0x6c, 0x79, 0x22, 0xca, 0x05, 0x0a,
	0x0d, 0x43, 0x53, 0x4f, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x64, 0x65, 0x66, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x08, 0x64, 0x65, 0x66, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x0f, 0x0a, 0x03, 0x6e, 0x5f, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x6e, 0x41,
	0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x5f, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x73, 0x63, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x73, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x65, 0x73, 0x63, 0x5f, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x4f, 0x75, 0x74,
	0x70, 0x75, 0x74, 0x73, 0x12, 0x11, 0x0a, 0x04, 0x64, 0x69, 0x5f, 0x61, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x64, 0x69, 0x41, 0x12, 0x11, 0x0a, 0x04, 0x64, 0x69, 0x5f, 0x62, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x69, 0x42, 0x12, 0x11, 0x0a, 0x04, 0x64, 0x69,
	0x5f, 0x63, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x69, 0x43, 0x12, 0x11, 0x0a,
	0x04, 0x64, 0x6f, 0x5f, 0x61, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x6f, 0x41,
	0x12, 0x11, 0x0a, 0x04, 0x64, 0x6f, 0x5f, 0x62, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x64, 0x6f, 0x42, 0x12, 0x11, 0x0a, 0x04, 0x64, 0x6f, 0x5f, 0x63, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x64, 0x6f, 0x43, 0x12, 0x35, 0x0a, 0x17, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72,
	0x65, 0x73, 0x5f, 0x61, 0x6c, 0x6c, 0x5f, 0x73, 0x61, 0x6d, 0x65, 0x5f, 0x63, 0x6c, 0x61, 0x73,
	0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65,
	0x73, 0x41, 0x6c, 0x6c, 0x53, 0x61, 0x6d, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x33, 0x0a,
	0x16, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x73, 0x5f, 0x61, 0x6c, 0x6c, 0x5f, 0x73, 0x61,
	0x6d, 0x65, 0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x72,
	0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x73, 0x41, 0x6c, 0x6c, 0x53, 0x61, 0x6d, 0x65, 0x53, 0x6c,
	0x6f, 0x74, 0x12, 0x33, 0x0a, 0x16, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x75, 0x73, 0x61, 0x67,
	0x65, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x13, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x55, 0x73, 0x61, 0x67, 0x65, 0x46, 0x6f,
	0x72, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x31, 0x0a, 0x15, 0x73, 0x6c, 0x6f, 0x74, 0x5f,
	0x75, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x73, 0x6c, 0x6f, 0x74, 0x55, 0x73, 0x61, 0x67,
	0x65, 0x46, 0x6f, 0x72, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x24, 0x0a, 0x0e, 0x73, 0x65,
	0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0c, 0x73, 0x65, 0x74, 0x46, 0x6f, 0x72, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x12, 0x47, 0x0a, 0x14, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x5f,
	0x63, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x18, 0x14, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x63, 0x73, 0x67, 0x6f, 0x2e, 0x43, 0x53, 0x4f, 0x49, 0x74, 0x65, 0x6d, 0x43, 0x72, 0x69,
	0x74, 0x65, 0x72, 0x69, 0x61, 0x52, 0x12, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x49, 0x74, 0x65, 0x6d,
	0x73, 0x43, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x12, 0x49, 0x0a, 0x15, 0x6f, 0x75, 0x74,
	0x70, 0x75, 0x74, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x5f, 0x63, 0x72, 0x69, 0x74, 0x65, 0x72,
	0x69, 0x61, 0x18, 0x15, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x73, 0x67, 0x6f, 0x2e,
	0x43, 0x53, 0x4f, 0x49, 0x74, 0x65, 0x6d, 0x43, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x52,
	0x13, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x43, 0x72, 0x69, 0x74,
	0x65, 0x72, 0x69, 0x61, 0x12, 0x33, 0x0a, 0x16, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x5f, 0x69, 0x74,
	0x65, 0x6d, 0x5f, 0x64, 0x75, 0x70, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x16,
	0x20, 0x03, 0x28, 0x0d, 0x52, 0x13, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x44,
	0x75, 0x70, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x22, 0x66, 0x0a, 0x15, 0x43, 0x4d, 0x73,
	0x67, 0x44, 0x65, 0x76, 0x4e, 0x65, 0x77, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x06, 0x52, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x12, 0x31,
	0x0a, 0x08, 0x63, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x63, 0x73, 0x67, 0x6f, 0x2e, 0x43, 0x53, 0x4f, 0x49, 0x74, 0x65, 0x6d, 0x43,
	0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x52, 0x08, 0x63, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69,
	0x61, 0x22, 0xc9, 0x01, 0x0a, 0x1f, 0x43, 0x4d, 0x73, 0x67, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x4b, 0x69, 0x6c, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x6b, 0x69, 0x6c, 0x6c, 0x65, 0x72, 0x5f,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x07,
	0x52, 0x0f, 0x6b, 0x69, 0x6c, 0x6c, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x2a, 0x0a, 0x11, 0x76, 0x69, 0x63, 0x74, 0x69, 0x6d, 0x5f, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x07, 0x52, 0x0f, 0x76, 0x69,
	0x63, 0x74, 0x69, 0x6d, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x17, 0x0a,
	0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06,
	0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xcb, 0x01,
	0x0a, 0x10, 0x43, 0x4d, 0x73, 0x67, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x53, 0x74, 0x69, 0x63, 0x6b,
	0x65, 0x72, 0x12, 0x26, 0x0a, 0x0f, 0x73, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x5f, 0x69, 0x74,
	0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x73, 0x74, 0x69,
	0x63, 0x6b, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0c, 0x69, 0x74,
	0x65, 0x6d, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0a, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c,
	0x73, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0b, 0x73, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x53, 0x6c, 0x6f, 0x74, 0x12,
	0x27, 0x0a, 0x0f, 0x62, 0x61, 0x73, 0x65, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x64, 0x65, 0x66, 0x69,
	0x64, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x62, 0x61, 0x73, 0x65, 0x69, 0x74,
	0x65, 0x6d, 0x44, 0x65, 0x66, 0x69, 0x64, 0x78, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x74, 0x69, 0x63,
	0x6b, 0x65, 0x72, 0x5f, 0x77, 0x65, 0x61, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b,
	0x73, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x57, 0x65, 0x61, 0x72, 0x22, 0x72, 0x0a, 0x17, 0x43,
	0x4d, 0x73, 0x67, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x41, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12,
	0x1f, 0x0a, 0x0b, 0x61, 0x74, 0x74, 0x72, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x64, 0x78, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x44, 0x65, 0x66, 0x69, 0x64, 0x78,
	0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x61, 0x74, 0x74, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22,
	0x83, 0x01, 0x0a, 0x15, 0x43, 0x4d, 0x73, 0x67, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x53, 0x74, 0x61,
	0x74, 0x54, 0x72, 0x61, 0x6b, 0x53, 0x77, 0x61, 0x70, 0x12, 0x20, 0x0a, 0x0c, 0x74, 0x6f, 0x6f,
	0x6c, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0a, 0x74, 0x6f, 0x6f, 0x6c, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0e, 0x69,
	0x74, 0x65, 0x6d, 0x5f, 0x31, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0b, 0x69, 0x74, 0x65, 0x6d, 0x31, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64,
	0x12, 0x23, 0x0a, 0x0e, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x32, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x69, 0x74, 0x65, 0x6d, 0x32, 0x49,
	0x74, 0x65, 0x6d, 0x49, 0x64, 0x22, 0x69, 0x0a, 0x14, 0x43, 0x4d, 0x73, 0x67, 0x41, 0x70, 0x70,
	0x6c, 0x79, 0x53, 0x74, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x61, 0x72, 0x74, 0x12, 0x2f, 0x0a,
	0x14, 0x73, 0x74, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x5f, 0x69, 0x74,
	0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x11, 0x73, 0x74, 0x72,
	0x61, 0x6e, 0x67, 0x65, 0x50, 0x61, 0x72, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x20,
	0x0a, 0x0c, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64,
	0x22, 0x69, 0x0a, 0x17, 0x43, 0x4d, 0x73, 0x67, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x50, 0x65, 0x6e,
	0x6e, 0x61, 0x6e, 0x74, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x75,
	0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x75, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x49, 0x74, 0x65,
	0x6d, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x70, 0x65, 0x6e, 0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x69,
	0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x70, 0x65,
	0x6e, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x22, 0x5d, 0x0a, 0x13, 0x43,
	0x4d, 0x73, 0x67, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x45, 0x67, 0x67, 0x45, 0x73, 0x73, 0x65, 0x6e,
	0x63, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x65, 0x73, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x74,
	0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x65, 0x73, 0x73,
	0x65, 0x6e, 0x63, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0b, 0x65, 0x67,
	0x67, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x09, 0x65, 0x67, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x22, 0x6a, 0x0a, 0x14, 0x43, 0x53,
	0x4f, 0x45, 0x63, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x66, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x64, 0x65, 0x66, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x62,
	0x79, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x42, 0x79, 0x74, 0x65, 0x73, 0x22, 0x4d, 0x0a, 0x13, 0x43, 0x53, 0x4f, 0x45, 0x63, 0x6f,
	0x6e, 0x49, 0x74, 0x65, 0x6d, 0x45, 0x71, 0x75, 0x69, 0x70, 0x70, 0x65, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x6e, 0x65, 0x77, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x08, 0x6e, 0x65, 0x77, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x6e, 0x65,
	0x77, 0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x6e, 0x65,
	0x77, 0x53, 0x6c, 0x6f, 0x74, 0x22, 0xdd, 0x04, 0x0a, 0x0b, 0x43, 0x53, 0x4f, 0x45, 0x63, 0x6f,
	0x6e, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72,
	0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f,
	0x72, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x66, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x64, 0x65, 0x66, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12,
	0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x6c,
	0x65, 0x76, 0x65, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65,
	0x6c, 0x12, 0x18, 0x0a, 0x07, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x07, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x17, 0x0a, 0x05, 0x66,
	0x6c, 0x61, 0x67, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x05, 0x66,
	0x6c, 0x61, 0x67, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x12, 0x1f, 0x0a, 0x0b,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a,
	0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x44, 0x65, 0x73, 0x63, 0x12, 0x38,
	0x0a, 0x09, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x18, 0x0c, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x63, 0x73, 0x67, 0x6f, 0x2e, 0x43, 0x53, 0x4f, 0x45, 0x63, 0x6f, 0x6e,
	0x49, 0x74, 0x65, 0x6d, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x09, 0x61,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x12, 0x36, 0x0a, 0x0d, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x69, 0x6f, 0x72, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x63, 0x73, 0x67, 0x6f, 0x2e, 0x43, 0x53, 0x4f, 0x45, 0x63, 0x6f, 0x6e, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x0c, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x69, 0x6f, 0x72, 0x49, 0x74, 0x65, 0x6d,
	0x12, 0x1c, 0x0a, 0x06, 0x69, 0x6e, 0x5f, 0x75, 0x73, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08,
	0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x52, 0x05, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x12, 0x17,
	0x0a, 0x05, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30,
	0x52, 0x05, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x12, 0x22, 0x0a, 0x0b, 0x6f, 0x72, 0x69, 0x67, 0x69,
	0x6e, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x04, 0x3a, 0x01, 0x30, 0x52,
	0x0a, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x40, 0x0a, 0x0e, 0x65,
	0x71, 0x75, 0x69, 0x70, 0x70, 0x65, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x12, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x73, 0x67, 0x6f, 0x2e, 0x43, 0x53, 0x4f, 0x45, 0x63,
	0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x45, 0x71, 0x75, 0x69, 0x70, 0x70, 0x65, 0x64, 0x52, 0x0d,
	0x65, 0x71, 0x75, 0x69, 0x70, 0x70, 0x65, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x72, 0x61, 0x72, 0x69, 0x74, 0x79, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x72,
	0x61, 0x72, 0x69, 0x74, 0x79, 0x22, 0x82, 0x01, 0x0a, 0x1b, 0x43, 0x4d, 0x73, 0x67, 0x41, 0x64,
	0x6a, 0x75, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x45, 0x71, 0x75, 0x69, 0x70, 0x70, 0x65, 0x64,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x1b,
	0x0a, 0x09, 0x6e, 0x65, 0x77, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x08, 0x6e, 0x65, 0x77, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x6e,
	0x65, 0x77, 0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x6e,
	0x65, 0x77, 0x53, 0x6c, 0x6f, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x77, 0x61, 0x70, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x73, 0x77, 0x61, 0x70, 0x22, 0x7f, 0x0a, 0x20, 0x43, 0x4d,
	0x73, 0x67, 0x41, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x45, 0x71, 0x75, 0x69,
	0x70, 0x70, 0x65, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x12, 0x19,
	0x0a, 0x08, 0x74, 0x5f, 0x65, 0x71, 0x75, 0x69, 0x70, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x04,
	0x52, 0x07, 0x74, 0x45, 0x71, 0x75, 0x69, 0x70, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x74, 0x5f,
	0x65, 0x71, 0x75, 0x69, 0x70, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x04, 0x52, 0x08, 0x63, 0x74,
	0x45, 0x71, 0x75, 0x69, 0x70, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x6e, 0x6f, 0x74, 0x65, 0x61, 0x6d,
	0x5f, 0x65, 0x71, 0x75, 0x69, 0x70, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x04, 0x52, 0x0c, 0x6e,
	0x6f, 0x74, 0x65, 0x61, 0x6d, 0x45, 0x71, 0x75, 0x69, 0x70, 0x73, 0x22, 0x2c, 0x0a, 0x0d, 0x43,
	0x4d, 0x73, 0x67, 0x53, 0x6f, 0x72, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x1b, 0x0a, 0x09,
	0x73, 0x6f, 0x72, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x08, 0x73, 0x6f, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0x87, 0x01, 0x0a, 0x10, 0x43, 0x53,
	0x4f, 0x45, 0x63, 0x6f, 0x6e, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x08, 0x63, 0x6f, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x69,
	0x6d, 0x65, 0x5f, 0x61, 0x63, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0c, 0x74, 0x69, 0x6d, 0x65, 0x41, 0x63, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x22, 0x62, 0x0a, 0x14, 0x43, 0x4d, 0x73, 0x67, 0x53, 0x74, 0x6f, 0x72, 0x65,
	0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2e, 0x0a, 0x13, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x5f, 0x73, 0x68, 0x65, 0x65, 0x74, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x07, 0x52, 0x11, 0x70, 0x72, 0x69, 0x63, 0x65, 0x53,
	0x68, 0x65, 0x65, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x22, 0xe7, 0x01, 0x0a, 0x1c, 0x43, 0x4d, 0x73, 0x67,
	0x53, 0x74, 0x6f, 0x72, 0x65, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x12, 0x2f, 0x0a, 0x13, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x64, 0x65, 0x70,
	0x72, 0x65, 0x63, 0x61, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x44, 0x65, 0x70, 0x72, 0x65, 0x63, 0x61, 0x74, 0x65,
	0x64, 0x12, 0x2d, 0x0a, 0x12, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x64, 0x65, 0x70,
	0x72, 0x65, 0x63, 0x61, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x44, 0x65, 0x70, 0x72, 0x65, 0x63, 0x61, 0x74, 0x65, 0x64,
	0x12, 0x2e, 0x0a, 0x13, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x73, 0x68, 0x65, 0x65, 0x74, 0x5f,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x07, 0x52, 0x11, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x53, 0x68, 0x65, 0x65, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x73, 0x68, 0x65, 0x65, 0x74, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x70, 0x72, 0x69, 0x63, 0x65, 0x53, 0x68, 0x65, 0x65,
	0x74, 0x22, 0xce, 0x01, 0x0a, 0x14, 0x43, 0x4d, 0x73, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x49, 0x74, 0x65, 0x6d, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x5f, 0x67, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x47, 0x61, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x69, 0x74, 0x65,
	0x6d, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x07, 0x52, 0x11, 0x69, 0x74, 0x65, 0x6d, 0x53, 0x63, 0x68, 0x65,
	0x6d, 0x61, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x41, 0x0a, 0x1d, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x5f, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x5f, 0x44, 0x45, 0x50, 0x52,
	0x45, 0x43, 0x41, 0x54, 0x45, 0x44, 0x32, 0x30, 0x31, 0x33, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x1a, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x47, 0x61, 0x6d, 0x65, 0x55, 0x72, 0x6c, 0x44, 0x45,
	0x50, 0x52, 0x45, 0x43, 0x41, 0x54, 0x45, 0x44, 0x32, 0x30, 0x31, 0x33, 0x12, 0x24, 0x0a, 0x0e,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x5f, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x47, 0x61, 0x6d, 0x65, 0x55,
	0x72, 0x6c, 0x22, 0x2c, 0x0a, 0x0b, 0x43, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x65, 0x78, 0x74,
	0x22, 0x1d, 0x0a, 0x1b, 0x43, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49,
	0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x22,
	0x3b, 0x0a, 0x0f, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6f, 0x6e, 0x56, 0x61, 0x72, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x47, 0x0a, 0x14,
	0x43, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e,
	0x56, 0x61, 0x72, 0x73, 0x12, 0x2f, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x76, 0x61, 0x72, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x73, 0x67, 0x6f, 0x2e, 0x43, 0x4d, 0x73,
	0x67, 0x43, 0x6f, 0x6e, 0x56, 0x61, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x07, 0x63, 0x6f,
	0x6e, 0x76, 0x61, 0x72, 0x73, 0x22, 0xdc, 0x01, 0x0a, 0x0b, 0x43, 0x4d, 0x73, 0x67, 0x55, 0x73,
	0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x26,
	0x0a, 0x0f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x06, 0x52, 0x0d, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x53,
	0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x35, 0x0a, 0x17, 0x67, 0x69, 0x66, 0x74, 0x5f, 0x5f,
	0x70, 0x6f, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x14, 0x67, 0x69, 0x66, 0x74, 0x50, 0x6f, 0x74,
	0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x12, 0x27, 0x0a,
	0x10, 0x64, 0x75, 0x65, 0x6c, 0x5f, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x6c, 0x6f, 0x63,
	0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x64, 0x75, 0x65, 0x6c, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x4c, 0x6f, 0x63, 0x6b, 0x12, 0x2c, 0x0a, 0x12, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61,
	0x74, 0x6f, 0x72, 0x5f, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x06, 0x52, 0x10, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x74, 0x65,
	0x61, 0x6d, 0x49, 0x64, 0x22, 0x8f, 0x01, 0x0a, 0x1b, 0x43, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x70,
	0x6c, 0x61, 0x79, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x64, 0x54, 0x6f, 0x59, 0x6f, 0x75,
	0x54, 0x75, 0x62, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x79, 0x6f, 0x75, 0x74, 0x75, 0x62, 0x65, 0x5f,
	0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x79, 0x6f, 0x75, 0x74, 0x75,
	0x62, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x30, 0x0a, 0x14, 0x79, 0x6f, 0x75, 0x74, 0x75, 0x62, 0x65,
	0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x12, 0x79, 0x6f, 0x75, 0x74, 0x75, 0x62, 0x65, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x39, 0x0a, 0x17, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6f,
	0x6e, 0x73, 0x75, 0x6d, 0x61, 0x62, 0x6c, 0x65, 0x45, 0x78, 0x68, 0x61, 0x75, 0x73, 0x74, 0x65,
	0x64, 0x12, 0x1e, 0x0a, 0x0b, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x64, 0x65, 0x66, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x69, 0x74, 0x65, 0x6d, 0x44, 0x65, 0x66, 0x49,
	0x64, 0x22, 0xdf, 0x01, 0x0a, 0x20, 0x43, 0x4d, 0x73, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x41, 0x63,
	0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x64, 0x5f, 0x5f, 0x44, 0x45, 0x50, 0x52,
	0x45, 0x43, 0x41, 0x54, 0x45, 0x44, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f,
	0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74,
	0x6f, 0x72, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x66, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x64, 0x65, 0x66, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x12, 0x18, 0x0a, 0x07, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x07, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x61,
	0x72, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x72, 0x61, 0x72, 0x69,
	0x74, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x74,
	0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x69, 0x74, 0x65,
	0x6d, 0x49, 0x64, 0x22, 0xd1, 0x01, 0x0a, 0x14, 0x43, 0x4d, 0x73, 0x67, 0x53, 0x65, 0x74, 0x49,
	0x74, 0x65, 0x6d, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x4e, 0x0a, 0x0e,
	0x69, 0x74, 0x65, 0x6d, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x63, 0x73, 0x67, 0x6f, 0x2e, 0x43, 0x4d, 0x73, 0x67,
	0x53, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x49, 0x74, 0x65, 0x6d, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x69,
	0x74, 0x65, 0x6d, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x69, 0x0a, 0x0c,
	0x49, 0x74, 0x65, 0x6d, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x0e,
	0x6c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x6c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x49, 0x74, 0x65, 0x6d,
	0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x17,
	0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x22, 0x9b, 0x02, 0x0a, 0x11, 0x43, 0x4d, 0x73, 0x67,
	0x47, 0x43, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x41, 0x62, 0x75, 0x73, 0x65, 0x12, 0x26, 0x0a,
	0x0f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x06, 0x52, 0x0d, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x53, 0x74,
	0x65, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x67, 0x69, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x67, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x62, 0x75,
	0x73, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x61,
	0x62, 0x75, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x31, 0x0a, 0x15, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x5f, 0x69, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x07, 0x52, 0x12, 0x74, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x70, 0x12, 0x35,
	0x0a, 0x17, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x14, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x50, 0x6f, 0x72, 0x74, 0x22, 0x80, 0x01, 0x0a, 0x19, 0x43, 0x4d, 0x73, 0x67, 0x47, 0x43,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x41, 0x62, 0x75, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x73, 0x74,
	0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x06, 0x52, 0x0d, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x53, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x93, 0x01, 0x0a, 0x1a, 0x43, 0x4d, 0x73,
	0x67, 0x47, 0x43, 0x4e, 0x61, 0x6d, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x5f, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x06, 0x52,
	0x0d, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x65, 0x61, 0x6d, 0x69, 0x64, 0x12, 0x24,
	0x0a, 0x0e, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x64, 0x65, 0x66, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x69, 0x74, 0x65, 0x6d, 0x44, 0x65, 0x66, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x12, 0x28, 0x0a, 0x10, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x69, 0x74, 0x65, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x22, 0xa1,
	0x02, 0x0a, 0x1f, 0x43, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x44,
	0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x4d, 0x0a, 0x23, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x20, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x74,
	0x6c, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65,
	0x79, 0x12, 0x4b, 0x0a, 0x22, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x62, 0x6f, 0x64, 0x79, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1f, 0x6e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x6f, 0x64, 0x79, 0x4c,
	0x6f, 0x63, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x12, 0x2e,
	0x0a, 0x13, 0x62, 0x6f, 0x64, 0x79, 0x5f, 0x73, 0x75, 0x62, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x5f, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x11, 0x62, 0x6f, 0x64,
	0x79, 0x53, 0x75, 0x62, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x4b, 0x65, 0x79, 0x73, 0x12, 0x32,
	0x0a, 0x15, 0x62, 0x6f, 0x64, 0x79, 0x5f, 0x73, 0x75, 0x62, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x13, 0x62,
	0x6f, 0x64, 0x79, 0x53, 0x75, 0x62, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x73, 0x22, 0x40, 0x0a, 0x17, 0x43, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x53, 0x68, 0x6f, 0x77,
	0x49, 0x74, 0x65, 0x6d, 0x73, 0x50, 0x69, 0x63, 0x6b, 0x65, 0x64, 0x55, 0x70, 0x12, 0x25, 0x0a,
	0x0e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x06, 0x52, 0x0d, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x65,
	0x61, 0x6d, 0x69, 0x64, 0x22, 0xab, 0x01, 0x0a, 0x20, 0x43, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x49,
	0x6e, 0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4b, 0x69, 0x6c, 0x6c, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x11, 0x6b, 0x69, 0x6c,
	0x6c, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x42, 0x04, 0x80, 0xa6, 0x1d, 0x01, 0x52, 0x0f, 0x6b, 0x69, 0x6c, 0x6c,
	0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6e,
	0x75, 0x6d, 0x5f, 0x6b, 0x69, 0x6c, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08,
	0x6e, 0x75, 0x6d, 0x4b, 0x69, 0x6c, 0x6c, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x74, 0x65, 0x6d,
	0x5f, 0x64, 0x65, 0x66, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x69, 0x74, 0x65, 0x6d,
	0x44, 0x65, 0x66, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x54, 0x79,
	0x70, 0x65, 0x22, 0xcf, 0x01, 0x0a, 0x18, 0x43, 0x53, 0x4f, 0x45, 0x63, 0x6f, 0x6e, 0x49, 0x74,
	0x65, 0x6d, 0x44, 0x72, 0x6f, 0x70, 0x52, 0x61, 0x74, 0x65, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x12,
	0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x27,
	0x0a, 0x0f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x07, 0x52, 0x0e, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x6f, 0x6e, 0x75, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x62, 0x6f, 0x6e, 0x75, 0x73, 0x12, 0x1f, 0x0a,
	0x0b, 0x62, 0x6f, 0x6e, 0x75, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0a, 0x62, 0x6f, 0x6e, 0x75, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x17,
	0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x66, 0x5f, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x64, 0x65, 0x66, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x22, 0x97, 0x01, 0x0a, 0x19, 0x43, 0x53, 0x4f, 0x45, 0x63, 0x6f, 0x6e,
	0x49, 0x74, 0x65, 0x6d, 0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x56, 0x69, 0x65, 0x77, 0x50, 0x61,
	0x73, 0x73, 0x12, 0x23, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x04, 0x80, 0xa6, 0x1d, 0x01, 0x52, 0x09, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x09, 0x6c, 0x65, 0x61, 0x67, 0x75,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x04, 0x80, 0xa6, 0x1d, 0x01,
	0x52, 0x08, 0x6c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x12, 0x1c, 0x0a, 0x09, 0x69, 0x74, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x09, 0x69, 0x74, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x6b,
	0x0a, 0x16, 0x43, 0x53, 0x4f, 0x45, 0x63, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x22, 0x4f, 0x0a, 0x27, 0x43,
	0x4d, 0x73, 0x67, 0x47, 0x43, 0x49, 0x74, 0x65, 0x6d, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77,
	0x49, 0x74, 0x65, 0x6d, 0x42, 0x6f, 0x75, 0x67, 0x68, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x0e, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x64,
	0x65, 0x66, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c,
	0x69, 0x74, 0x65, 0x6d, 0x44, 0x65, 0x66, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x32, 0x0a, 0x19,
	0x43, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x50, 0x75, 0x72, 0x63, 0x68,
	0x61, 0x73, 0x65, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x12, 0x15, 0x0a, 0x06, 0x74, 0x78, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x74, 0x78, 0x6e, 0x49, 0x64,
	0x22, 0x3b, 0x0a, 0x21, 0x43, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x50,
	0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x34, 0x0a,
	0x1b, 0x43, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x50, 0x75, 0x72, 0x63,
	0x68, 0x61, 0x73, 0x65, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x12, 0x15, 0x0a, 0x06,
	0x74, 0x78, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x74, 0x78,
	0x6e, 0x49, 0x64, 0x22, 0x58, 0x0a, 0x23, 0x43, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x53, 0x74, 0x6f,
	0x72, 0x65, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x69,
	0x7a, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x04, 0x52, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x73, 0x22, 0x61, 0x0a,
	0x1b, 0x43, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x57, 0x6f, 0x72,
	0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x11,
	0x62, 0x61, 0x6e, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x62, 0x61, 0x6e, 0x4c, 0x69, 0x73, 0x74,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x77, 0x6f, 0x72, 0x64, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x77, 0x6f, 0x72, 0x64, 0x49, 0x64,
	0x22, 0x1c, 0x0a, 0x1a, 0x43, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0xbe,
	0x01, 0x0a, 0x22, 0x43, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x12, 0x61, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x11, 0x61, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54,
	0x69, 0x74, 0x6c, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x6e, 0x6e, 0x6f,
	0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74,
	0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x6e, 0x65, 0x78, 0x74, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x54, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x65, 0x78, 0x74, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x65, 0x78, 0x74, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x22,
	0x92, 0x01, 0x0a, 0x10, 0x43, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x64,
	0x57, 0x6f, 0x72, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x77, 0x6f, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x77, 0x6f, 0x72, 0x64, 0x49, 0x64, 0x12, 0x51, 0x0a,
	0x09, 0x77, 0x6f, 0x72, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x17, 0x2e, 0x63, 0x73, 0x67, 0x6f, 0x2e, 0x47, 0x43, 0x5f, 0x42, 0x61, 0x6e, 0x6e, 0x65,
	0x64, 0x57, 0x6f, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x3a, 0x1b, 0x47, 0x43, 0x5f, 0x42, 0x41,
	0x4e, 0x4e, 0x45, 0x44, 0x5f, 0x57, 0x4f, 0x52, 0x44, 0x5f, 0x44, 0x49, 0x53, 0x41, 0x42, 0x4c,
	0x45, 0x5f, 0x57, 0x4f, 0x52, 0x44, 0x52, 0x08, 0x77, 0x6f, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x77, 0x6f, 0x72, 0x64, 0x22, 0x7e, 0x0a, 0x1c, 0x43, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x42, 0x61,
	0x6e, 0x6e, 0x65, 0x64, 0x57, 0x6f, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x11, 0x62, 0x61, 0x6e, 0x5f, 0x6c, 0x69, 0x73, 0x74,
	0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0e, 0x62, 0x61, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12,
	0x33, 0x0a, 0x09, 0x77, 0x6f, 0x72, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x73, 0x67, 0x6f, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x47, 0x43,
	0x42, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x57, 0x6f, 0x72, 0x64, 0x52, 0x08, 0x77, 0x6f, 0x72, 0x64,
	0x4c, 0x69, 0x73, 0x74, 0x22, 0x65, 0x0a, 0x21, 0x43, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x54, 0x6f,
	0x47, 0x43, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x57, 0x6f, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74,
	0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x12, 0x40, 0x0a, 0x09, 0x62, 0x72, 0x6f,
	0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x63,
	0x73, 0x67, 0x6f, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x64,
	0x57, 0x6f, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x52, 0x09, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x22, 0x3c, 0x0a, 0x1f, 0x43,
	0x4d, 0x73, 0x67, 0x47, 0x43, 0x54, 0x6f, 0x47, 0x43, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x57,
	0x6f, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x19,
	0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x22, 0xbe, 0x01, 0x0a, 0x2e, 0x43, 0x53,
	0x4f, 0x45, 0x63, 0x6f, 0x6e, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x45, 0x71, 0x75, 0x69,
	0x70, 0x70, 0x65, 0x64, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0a,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x42, 0x04, 0x80, 0xa6, 0x1d, 0x01, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x27, 0x0a, 0x0f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x69, 0x74, 0x65, 0x6d,
	0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x08, 0x63, 0x6c,
	0x61, 0x73, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x04, 0x80, 0xa6,
	0x1d, 0x01, 0x52, 0x07, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x07, 0x73,
	0x6c, 0x6f, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x04, 0x80, 0xa6,
	0x1d, 0x01, 0x52, 0x06, 0x73, 0x6c, 0x6f, 0x74, 0x49, 0x64, 0x22, 0x53, 0x0a, 0x17, 0x43, 0x4d,
	0x73, 0x67, 0x47, 0x43, 0x54, 0x6f, 0x47, 0x43, 0x44, 0x69, 0x72, 0x74, 0x79, 0x53, 0x44, 0x4f,
	0x43, 0x61, 0x63, 0x68, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x64, 0x6f, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x73, 0x64, 0x6f, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x6b, 0x65, 0x79, 0x5f, 0x75, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x6b, 0x65, 0x79, 0x55, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x22,
	0x5b, 0x0a, 0x1f, 0x43, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x54, 0x6f, 0x47, 0x43, 0x44, 0x69, 0x72,
	0x74, 0x79, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x53, 0x44, 0x4f, 0x43, 0x61, 0x63,
	0x68, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x64, 0x6f, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x73, 0x64, 0x6f, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x6b, 0x65, 0x79, 0x5f, 0x75, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x04, 0x52, 0x09, 0x6b, 0x65, 0x79, 0x55, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x22, 0x69, 0x0a, 0x11,
	0x43, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x49, 0x74, 0x65,
	0x6d, 0x12, 0x2c, 0x0a, 0x12, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x63,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12,
	0x26, 0x0a, 0x0f, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x22, 0x14, 0x0a, 0x12, 0x43, 0x4d, 0x73, 0x67, 0x53,
	0x44, 0x4f, 0x4e, 0x6f, 0x4d, 0x65, 0x6d, 0x63, 0x61, 0x63, 0x68, 0x65, 0x64, 0x22, 0x38, 0x0a,
	0x1b, 0x43, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x54, 0x6f, 0x47, 0x43, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x53, 0x51, 0x4c, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x19, 0x0a, 0x08,
	0x6b, 0x65, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6b, 0x65, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x36, 0x0a, 0x19, 0x43, 0x4d, 0x73, 0x67, 0x47,
	0x43, 0x54, 0x6f, 0x47, 0x43, 0x49, 0x73, 0x54, 0x72, 0x75, 0x73, 0x74, 0x65, 0x64, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x06, 0x52, 0x07, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x22,
	0x42, 0x0a, 0x21, 0x43, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x54, 0x6f, 0x47, 0x43, 0x49, 0x73, 0x54,
	0x72, 0x75, 0x73, 0x74, 0x65, 0x64, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x74, 0x72, 0x75, 0x73, 0x74,
	0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x54, 0x72, 0x75, 0x73,
	0x74, 0x65, 0x64, 0x22, 0x44, 0x0a, 0x21, 0x43, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x54, 0x6f, 0x47,
	0x43, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x73, 0x6f, 0x6c,
	0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x5f,
	0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63,
	0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x22, 0x43, 0x0a, 0x1a, 0x43, 0x4d, 0x73,
	0x67, 0x47, 0x43, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0d, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x43,
	0x0a, 0x1a, 0x43, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x25, 0x0a, 0x0e,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x22, 0x20, 0x0a, 0x1e, 0x43, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x54, 0x6f, 0x47,
	0x43, 0x57, 0x65, 0x62, 0x41, 0x50, 0x49, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x64, 0x22, 0x7d, 0x0a, 0x22, 0x43, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x54,
	0x6f, 0x47, 0x43, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x61, 0x73, 0x73, 0x70, 0x6f,
	0x72, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x73,
	0x74, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x06, 0x52, 0x07, 0x73,
	0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x65, 0x61, 0x67, 0x75, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x6c, 0x65, 0x61, 0x67, 0x75,
	0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x66, 0x6c,
	0x61, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x46, 0x6c, 0x61, 0x67, 0x22, 0xac, 0x07, 0x0a, 0x12, 0x43, 0x4d, 0x73, 0x67, 0x47, 0x61, 0x6d,
	0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x31, 0x0a, 0x15, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x69, 0x70, 0x5f,
	0x61, 0x64, 0x64, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x07, 0x52, 0x12, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x49, 0x70, 0x41, 0x64, 0x64, 0x72, 0x12, 0x33,
	0x0a, 0x16, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65,
	0x5f, 0x69, 0x70, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x07, 0x52, 0x13,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x49, 0x70, 0x41,
	0x64, 0x64, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x70, 0x6f,
	0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x50, 0x6f, 0x72, 0x74, 0x12, 0x24, 0x0a, 0x0e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x74,
	0x76, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x54, 0x76, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x12, 0x2d, 0x0a, 0x12, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x5f, 0x68, 0x69, 0x62, 0x65, 0x72, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x48, 0x69, 0x62,
	0x65, 0x72, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x51, 0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e,
	0x63, 0x73, 0x67, 0x6f, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x79,
	0x70, 0x65, 0x3a, 0x0b, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x52,
	0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e,
	0x12, 0x25, 0x0a, 0x0e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x6c, 0x6f, 0x61, 0x64, 0x61,
	0x76, 0x67, 0x18, 0x09, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0d, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x4c, 0x6f, 0x61, 0x64, 0x61, 0x76, 0x67, 0x12, 0x37, 0x0a, 0x18, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x5f, 0x74, 0x76, 0x5f, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x02, 0x52, 0x15, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x54, 0x76, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x28, 0x0a, 0x10, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x67, 0x61, 0x6d, 0x65, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0e, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x47, 0x61, 0x6d, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x44, 0x0a, 0x1f, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x6c, 0x61, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x65, 0x64, 0x5f, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x06, 0x52, 0x1b, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x6c, 0x61, 0x79,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x53, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x64,
	0x12, 0x26, 0x0a, 0x0f, 0x72, 0x65, 0x6c, 0x61, 0x79, 0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x73, 0x5f,
	0x6d, 0x61, 0x78, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x72, 0x65, 0x6c, 0x61, 0x79,
	0x53, 0x6c, 0x6f, 0x74, 0x73, 0x4d, 0x61, 0x78, 0x12, 0x29, 0x0a, 0x10, 0x72, 0x65, 0x6c, 0x61,
	0x79, 0x73, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0f, 0x72, 0x65, 0x6c, 0x61, 0x79, 0x73, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x65, 0x64, 0x12, 0x36, 0x0a, 0x17, 0x72, 0x65, 0x6c, 0x61, 0x79, 0x5f, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x73, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x15, 0x72, 0x65, 0x6c, 0x61, 0x79, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x73, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x12, 0x3e, 0x0a, 0x1c, 0x72,
	0x65, 0x6c, 0x61, 0x79, 0x65, 0x64, 0x5f, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x5f, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x06, 0x52, 0x18, 0x72, 0x65, 0x6c, 0x61, 0x79, 0x65, 0x64, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x53, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x12, 0x70,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x6c, 0x61, 0x79, 0x5f, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x6c, 0x61, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x0e, 0x74, 0x76, 0x5f,
	0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28,
	0x06, 0x52, 0x0c, 0x74, 0x76, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x22,
	0x32, 0x0a, 0x0a, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0f, 0x0a,
	0x0b, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x08,
	0x0a, 0x04, 0x47, 0x41, 0x4d, 0x45, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x50, 0x52, 0x4f, 0x58,
	0x59, 0x10, 0x02, 0x2a, 0xc7, 0x03, 0x0a, 0x0a, 0x45, 0x47, 0x43, 0x42, 0x61, 0x73, 0x65, 0x4d,
	0x73, 0x67, 0x12, 0x1a, 0x0a, 0x15, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x53, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x10, 0xa1, 0x1f, 0x12, 0x1d,
	0x0a, 0x18, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x56, 0x61, 0x72, 0x73, 0x10, 0xa2, 0x1f, 0x12, 0x1a, 0x0a,
	0x15, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x43, 0x6f, 0x6e, 0x56, 0x61, 0x72, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x10, 0xa3, 0x1f, 0x12, 0x14, 0x0a, 0x0f, 0x6b, 0x5f, 0x45,
	0x4d, 0x73, 0x67, 0x47, 0x43, 0x49, 0x6e, 0x51, 0x75, 0x65, 0x75, 0x65, 0x10, 0xa8, 0x1f, 0x12,
	0x1a, 0x0a, 0x15, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x49, 0x6e, 0x76, 0x69, 0x74,
	0x65, 0x54, 0x6f, 0x50, 0x61, 0x72, 0x74, 0x79, 0x10, 0x95, 0x23, 0x12, 0x1e, 0x0a, 0x19, 0x6b,
	0x5f, 0x45, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x10, 0x96, 0x23, 0x12, 0x20, 0x0a, 0x1b, 0x6b,
	0x5f, 0x45, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x50, 0x61, 0x72, 0x74, 0x79, 0x49, 0x6e, 0x76, 0x69,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x10, 0x97, 0x23, 0x12, 0x1a, 0x0a,
	0x15, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x4b, 0x69, 0x63, 0x6b, 0x46, 0x72, 0x6f,
	0x6d, 0x50, 0x61, 0x72, 0x74, 0x79, 0x10, 0x98, 0x23, 0x12, 0x17, 0x0a, 0x12, 0x6b, 0x5f, 0x45,
	0x4d, 0x73, 0x67, 0x47, 0x43, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x50, 0x61, 0x72, 0x74, 0x79, 0x10,
	0x99, 0x23, 0x12, 0x1c, 0x0a, 0x17, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x10, 0x9a, 0x23,
	0x12, 0x22, 0x0a, 0x1d, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x54, 0x6f, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x10, 0x9b, 0x23, 0x12, 0x1b, 0x0a, 0x16, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x47, 0x43,
	0x47, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x10, 0x9c,
	0x23, 0x12, 0x12, 0x0a, 0x0d, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x10, 0x9d, 0x23, 0x12, 0x25, 0x0a, 0x20, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x47,
	0x43, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x64,
	0x54, 0x6f, 0x59, 0x6f, 0x75, 0x54, 0x75, 0x62, 0x65, 0x10, 0x9e, 0x23, 0x12, 0x1f, 0x0a, 0x1a,
	0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x4c, 0x41, 0x4e, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x10, 0x9f, 0x23, 0x2a, 0x59, 0x0a,
	0x17, 0x45, 0x47, 0x43, 0x42, 0x61, 0x73, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x1e, 0x0a, 0x19, 0x6b, 0x5f, 0x45, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x50, 0x61, 0x72, 0x74, 0x79, 0x49,
	0x6e, 0x76, 0x69, 0x74, 0x65, 0x10, 0xe9, 0x07, 0x12, 0x1e, 0x0a, 0x19, 0x6b, 0x5f, 0x45, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4c, 0x6f, 0x62, 0x62, 0x79, 0x49,
	0x6e, 0x76, 0x69, 0x74, 0x65, 0x10, 0xea, 0x07, 0x2a, 0x54, 0x0a, 0x11, 0x47, 0x43, 0x5f, 0x42,
	0x61, 0x6e, 0x6e, 0x65, 0x64, 0x57, 0x6f, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a,
	0x1b, 0x47, 0x43, 0x5f, 0x42, 0x41, 0x4e, 0x4e, 0x45, 0x44, 0x5f, 0x57, 0x4f, 0x52, 0x44, 0x5f,
	0x44, 0x49, 0x53, 0x41, 0x42, 0x4c, 0x45, 0x5f, 0x57, 0x4f, 0x52, 0x44, 0x10, 0x00, 0x12, 0x1e,
	0x0a, 0x1a, 0x47, 0x43, 0x5f, 0x42, 0x41, 0x4e, 0x4e, 0x45, 0x44, 0x5f, 0x57, 0x4f, 0x52, 0x44,
	0x5f, 0x45, 0x4e, 0x41, 0x42, 0x4c, 0x45, 0x5f, 0x57, 0x4f, 0x52, 0x44, 0x10, 0x01, 0x42, 0x38,
	0x48, 0x01, 0x5a, 0x31, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x31,
	0x33, 0x6b, 0x2f, 0x67, 0x6f, 0x2d, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x2d, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x76, 0x32, 0x2f, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x70, 0x62,
	0x2f, 0x63, 0x73, 0x67, 0x6f, 0x80, 0x01, 0x00,
}

var (
	file_csgo_base_gcmessages_proto_rawDescOnce sync.Once
	file_csgo_base_gcmessages_proto_rawDescData = file_csgo_base_gcmessages_proto_rawDesc
)

func file_csgo_base_gcmessages_proto_rawDescGZIP() []byte {
	file_csgo_base_gcmessages_proto_rawDescOnce.Do(func() {
		file_csgo_base_gcmessages_proto_rawDescData = protoimpl.X.CompressGZIP(file_csgo_base_gcmessages_proto_rawDescData)
	})
	return file_csgo_base_gcmessages_proto_rawDescData
}

var file_csgo_base_gcmessages_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_csgo_base_gcmessages_proto_msgTypes = make([]protoimpl.MessageInfo, 80)
var file_csgo_base_gcmessages_proto_goTypes = []interface{}{
	(EGCBaseMsg)(0),                                        // 0: csgo.EGCBaseMsg
	(EGCBaseProtoObjectTypes)(0),                           // 1: csgo.EGCBaseProtoObjectTypes
	(GC_BannedWordType)(0),                                 // 2: csgo.GC_BannedWordType
	(CMsgGameServerInfo_ServerType)(0),                     // 3: csgo.CMsgGameServerInfo.ServerType
	(*CGCStorePurchaseInit_LineItem)(nil),                  // 4: csgo.CGCStorePurchaseInit_LineItem
	(*CMsgGCStorePurchaseInit)(nil),                        // 5: csgo.CMsgGCStorePurchaseInit
	(*CMsgGCStorePurchaseInitResponse)(nil),                // 6: csgo.CMsgGCStorePurchaseInitResponse
	(*CSOPartyInvite)(nil),                                 // 7: csgo.CSOPartyInvite
	(*CSOLobbyInvite)(nil),                                 // 8: csgo.CSOLobbyInvite
	(*CMsgSystemBroadcast)(nil),                            // 9: csgo.CMsgSystemBroadcast
	(*CMsgInviteToParty)(nil),                              // 10: csgo.CMsgInviteToParty
	(*CMsgInvitationCreated)(nil),                          // 11: csgo.CMsgInvitationCreated
	(*CMsgPartyInviteResponse)(nil),                        // 12: csgo.CMsgPartyInviteResponse
	(*CMsgKickFromParty)(nil),                              // 13: csgo.CMsgKickFromParty
	(*CMsgLeaveParty)(nil),                                 // 14: csgo.CMsgLeaveParty
	(*CMsgServerAvailable)(nil),                            // 15: csgo.CMsgServerAvailable
	(*CMsgLANServerAvailable)(nil),                         // 16: csgo.CMsgLANServerAvailable
	(*CSOEconGameAccountClient)(nil),                       // 17: csgo.CSOEconGameAccountClient
	(*CSOItemCriteriaCondition)(nil),                       // 18: csgo.CSOItemCriteriaCondition
	(*CSOItemCriteria)(nil),                                // 19: csgo.CSOItemCriteria
	(*CSOItemRecipe)(nil),                                  // 20: csgo.CSOItemRecipe
	(*CMsgDevNewItemRequest)(nil),                          // 21: csgo.CMsgDevNewItemRequest
	(*CMsgIncrementKillCountAttribute)(nil),                // 22: csgo.CMsgIncrementKillCountAttribute
	(*CMsgApplySticker)(nil),                               // 23: csgo.CMsgApplySticker
	(*CMsgModifyItemAttribute)(nil),                        // 24: csgo.CMsgModifyItemAttribute
	(*CMsgApplyStatTrakSwap)(nil),                          // 25: csgo.CMsgApplyStatTrakSwap
	(*CMsgApplyStrangePart)(nil),                           // 26: csgo.CMsgApplyStrangePart
	(*CMsgApplyPennantUpgrade)(nil),                        // 27: csgo.CMsgApplyPennantUpgrade
	(*CMsgApplyEggEssence)(nil),                            // 28: csgo.CMsgApplyEggEssence
	(*CSOEconItemAttribute)(nil),                           // 29: csgo.CSOEconItemAttribute
	(*CSOEconItemEquipped)(nil),                            // 30: csgo.CSOEconItemEquipped
	(*CSOEconItem)(nil),                                    // 31: csgo.CSOEconItem
	(*CMsgAdjustItemEquippedState)(nil),                    // 32: csgo.CMsgAdjustItemEquippedState
	(*CMsgAdjustItemEquippedStateMulti)(nil),               // 33: csgo.CMsgAdjustItemEquippedStateMulti
	(*CMsgSortItems)(nil),                                  // 34: csgo.CMsgSortItems
	(*CSOEconClaimCode)(nil),                               // 35: csgo.CSOEconClaimCode
	(*CMsgStoreGetUserData)(nil),                           // 36: csgo.CMsgStoreGetUserData
	(*CMsgStoreGetUserDataResponse)(nil),                   // 37: csgo.CMsgStoreGetUserDataResponse
	(*CMsgUpdateItemSchema)(nil),                           // 38: csgo.CMsgUpdateItemSchema
	(*CMsgGCError)(nil),                                    // 39: csgo.CMsgGCError
	(*CMsgRequestInventoryRefresh)(nil),                    // 40: csgo.CMsgRequestInventoryRefresh
	(*CMsgConVarValue)(nil),                                // 41: csgo.CMsgConVarValue
	(*CMsgReplicateConVars)(nil),                           // 42: csgo.CMsgReplicateConVars
	(*CMsgUseItem)(nil),                                    // 43: csgo.CMsgUseItem
	(*CMsgReplayUploadedToYouTube)(nil),                    // 44: csgo.CMsgReplayUploadedToYouTube
	(*CMsgConsumableExhausted)(nil),                        // 45: csgo.CMsgConsumableExhausted
	(*CMsgItemAcknowledged__DEPRECATED)(nil),               // 46: csgo.CMsgItemAcknowledged__DEPRECATED
	(*CMsgSetItemPositions)(nil),                           // 47: csgo.CMsgSetItemPositions
	(*CMsgGCReportAbuse)(nil),                              // 48: csgo.CMsgGCReportAbuse
	(*CMsgGCReportAbuseResponse)(nil),                      // 49: csgo.CMsgGCReportAbuseResponse
	(*CMsgGCNameItemNotification)(nil),                     // 50: csgo.CMsgGCNameItemNotification
	(*CMsgGCClientDisplayNotification)(nil),                // 51: csgo.CMsgGCClientDisplayNotification
	(*CMsgGCShowItemsPickedUp)(nil),                        // 52: csgo.CMsgGCShowItemsPickedUp
	(*CMsgGCIncrementKillCountResponse)(nil),               // 53: csgo.CMsgGCIncrementKillCountResponse
	(*CSOEconItemDropRateBonus)(nil),                       // 54: csgo.CSOEconItemDropRateBonus
	(*CSOEconItemLeagueViewPass)(nil),                      // 55: csgo.CSOEconItemLeagueViewPass
	(*CSOEconItemEventTicket)(nil),                         // 56: csgo.CSOEconItemEventTicket
	(*CMsgGCItemPreviewItemBoughtNotification)(nil),        // 57: csgo.CMsgGCItemPreviewItemBoughtNotification
	(*CMsgGCStorePurchaseCancel)(nil),                      // 58: csgo.CMsgGCStorePurchaseCancel
	(*CMsgGCStorePurchaseCancelResponse)(nil),              // 59: csgo.CMsgGCStorePurchaseCancelResponse
	(*CMsgGCStorePurchaseFinalize)(nil),                    // 60: csgo.CMsgGCStorePurchaseFinalize
	(*CMsgGCStorePurchaseFinalizeResponse)(nil),            // 61: csgo.CMsgGCStorePurchaseFinalizeResponse
	(*CMsgGCBannedWordListRequest)(nil),                    // 62: csgo.CMsgGCBannedWordListRequest
	(*CMsgGCRequestAnnouncements)(nil),                     // 63: csgo.CMsgGCRequestAnnouncements
	(*CMsgGCRequestAnnouncementsResponse)(nil),             // 64: csgo.CMsgGCRequestAnnouncementsResponse
	(*CMsgGCBannedWord)(nil),                               // 65: csgo.CMsgGCBannedWord
	(*CMsgGCBannedWordListResponse)(nil),                   // 66: csgo.CMsgGCBannedWordListResponse
	(*CMsgGCToGCBannedWordListBroadcast)(nil),              // 67: csgo.CMsgGCToGCBannedWordListBroadcast
	(*CMsgGCToGCBannedWordListUpdated)(nil),                // 68: csgo.CMsgGCToGCBannedWordListUpdated
	(*CSOEconDefaultEquippedDefinitionInstanceClient)(nil), // 69: csgo.CSOEconDefaultEquippedDefinitionInstanceClient
	(*CMsgGCToGCDirtySDOCache)(nil),                        // 70: csgo.CMsgGCToGCDirtySDOCache
	(*CMsgGCToGCDirtyMultipleSDOCache)(nil),                // 71: csgo.CMsgGCToGCDirtyMultipleSDOCache
	(*CMsgGCCollectItem)(nil),                              // 72: csgo.CMsgGCCollectItem
	(*CMsgSDONoMemcached)(nil),                             // 73: csgo.CMsgSDONoMemcached
	(*CMsgGCToGCUpdateSQLKeyValue)(nil),                    // 74: csgo.CMsgGCToGCUpdateSQLKeyValue
	(*CMsgGCToGCIsTrustedServer)(nil),                      // 75: csgo.CMsgGCToGCIsTrustedServer
	(*CMsgGCToGCIsTrustedServerResponse)(nil),              // 76: csgo.CMsgGCToGCIsTrustedServerResponse
	(*CMsgGCToGCBroadcastConsoleCommand)(nil),              // 77: csgo.CMsgGCToGCBroadcastConsoleCommand
	(*CMsgGCServerVersionUpdated)(nil),                     // 78: csgo.CMsgGCServerVersionUpdated
	(*CMsgGCClientVersionUpdated)(nil),                     // 79: csgo.CMsgGCClientVersionUpdated
	(*CMsgGCToGCWebAPIAccountChanged)(nil),                 // 80: csgo.CMsgGCToGCWebAPIAccountChanged
	(*CMsgGCToGCRequestPassportItemGrant)(nil),             // 81: csgo.CMsgGCToGCRequestPassportItemGrant
	(*CMsgGameServerInfo)(nil),                             // 82: csgo.CMsgGameServerInfo
	(*CMsgSetItemPositions_ItemPosition)(nil),              // 83: csgo.CMsgSetItemPositions.ItemPosition
}
var file_csgo_base_gcmessages_proto_depIdxs = []int32{
	4,  // 0: csgo.CMsgGCStorePurchaseInit.line_items:type_name -> csgo.CGCStorePurchaseInit_LineItem
	18, // 1: csgo.CSOItemCriteria.conditions:type_name -> csgo.CSOItemCriteriaCondition
	19, // 2: csgo.CSOItemRecipe.input_items_criteria:type_name -> csgo.CSOItemCriteria
	19, // 3: csgo.CSOItemRecipe.output_items_criteria:type_name -> csgo.CSOItemCriteria
	19, // 4: csgo.CMsgDevNewItemRequest.criteria:type_name -> csgo.CSOItemCriteria
	29, // 5: csgo.CSOEconItem.attribute:type_name -> csgo.CSOEconItemAttribute
	31, // 6: csgo.CSOEconItem.interior_item:type_name -> csgo.CSOEconItem
	30, // 7: csgo.CSOEconItem.equipped_state:type_name -> csgo.CSOEconItemEquipped
	41, // 8: csgo.CMsgReplicateConVars.convars:type_name -> csgo.CMsgConVarValue
	83, // 9: csgo.CMsgSetItemPositions.item_positions:type_name -> csgo.CMsgSetItemPositions.ItemPosition
	2,  // 10: csgo.CMsgGCBannedWord.word_type:type_name -> csgo.GC_BannedWordType
	65, // 11: csgo.CMsgGCBannedWordListResponse.word_list:type_name -> csgo.CMsgGCBannedWord
	66, // 12: csgo.CMsgGCToGCBannedWordListBroadcast.broadcast:type_name -> csgo.CMsgGCBannedWordListResponse
	3,  // 13: csgo.CMsgGameServerInfo.server_type:type_name -> csgo.CMsgGameServerInfo.ServerType
	14, // [14:14] is the sub-list for method output_type
	14, // [14:14] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_csgo_base_gcmessages_proto_init() }
func file_csgo_base_gcmessages_proto_init() {
	if File_csgo_base_gcmessages_proto != nil {
		return
	}
	file_csgo_steammessages_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_csgo_base_gcmessages_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CGCStorePurchaseInit_LineItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_csgo_base_gcmessages_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgGCStorePurchaseInit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_csgo_base_gcmessages_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgGCStorePurchaseInitResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_csgo_base_gcmessages_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CSOPartyInvite); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_csgo_base_gcmessages_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CSOLobbyInvite); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_csgo_base_gcmessages_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgSystemBroadcast); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_csgo_base_gcmessages_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgInviteToParty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_csgo_base_gcmessages_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgInvitationCreated); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_csgo_base_gcmessages_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgPartyInviteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_csgo_base_gcmessages_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgKickFromParty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_csgo_base_gcmessages_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgLeaveParty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_csgo_base_gcmessages_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgServerAvailable); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_csgo_base_gcmessages_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgLANServerAvailable); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_csgo_base_gcmessages_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CSOEconGameAccountClient); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_csgo_base_gcmessages_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CSOItemCriteriaCondition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_csgo_base_gcmessages_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CSOItemCriteria); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_csgo_base_gcmessages_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CSOItemRecipe); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_csgo_base_gcmessages_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgDevNewItemRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_csgo_base_gcmessages_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgIncrementKillCountAttribute); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_csgo_base_gcmessages_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgApplySticker); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_csgo_base_gcmessages_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgModifyItemAttribute); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_csgo_base_gcmessages_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgApplyStatTrakSwap); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_csgo_base_gcmessages_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgApplyStrangePart); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_csgo_base_gcmessages_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgApplyPennantUpgrade); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_csgo_base_gcmessages_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgApplyEggEssence); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_csgo_base_gcmessages_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CSOEconItemAttribute); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_csgo_base_gcmessages_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CSOEconItemEquipped); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_csgo_base_gcmessages_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CSOEconItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_csgo_base_gcmessages_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgAdjustItemEquippedState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_csgo_base_gcmessages_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgAdjustItemEquippedStateMulti); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_csgo_base_gcmessages_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgSortItems); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_csgo_base_gcmessages_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CSOEconClaimCode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_csgo_base_gcmessages_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgStoreGetUserData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_csgo_base_gcmessages_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgStoreGetUserDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_csgo_base_gcmessages_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgUpdateItemSchema); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_csgo_base_gcmessages_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgGCError); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_csgo_base_gcmessages_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgRequestInventoryRefresh); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_csgo_base_gcmessages_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgConVarValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_csgo_base_gcmessages_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgReplicateConVars); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_csgo_base_gcmessages_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgUseItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_csgo_base_gcmessages_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgReplayUploadedToYouTube); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_csgo_base_gcmessages_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgConsumableExhausted); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_csgo_base_gcmessages_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgItemAcknowledged__DEPRECATED); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_csgo_base_gcmessages_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgSetItemPositions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_csgo_base_gcmessages_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgGCReportAbuse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_csgo_base_gcmessages_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgGCReportAbuseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_csgo_base_gcmessages_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgGCNameItemNotification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_csgo_base_gcmessages_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgGCClientDisplayNotification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_csgo_base_gcmessages_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgGCShowItemsPickedUp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_csgo_base_gcmessages_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgGCIncrementKillCountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_csgo_base_gcmessages_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CSOEconItemDropRateBonus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_csgo_base_gcmessages_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CSOEconItemLeagueViewPass); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_csgo_base_gcmessages_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CSOEconItemEventTicket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_csgo_base_gcmessages_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgGCItemPreviewItemBoughtNotification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_csgo_base_gcmessages_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgGCStorePurchaseCancel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_csgo_base_gcmessages_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgGCStorePurchaseCancelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_csgo_base_gcmessages_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgGCStorePurchaseFinalize); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_csgo_base_gcmessages_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgGCStorePurchaseFinalizeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_csgo_base_gcmessages_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgGCBannedWordListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_csgo_base_gcmessages_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgGCRequestAnnouncements); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_csgo_base_gcmessages_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgGCRequestAnnouncementsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_csgo_base_gcmessages_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgGCBannedWord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_csgo_base_gcmessages_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgGCBannedWordListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_csgo_base_gcmessages_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgGCToGCBannedWordListBroadcast); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_csgo_base_gcmessages_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgGCToGCBannedWordListUpdated); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_csgo_base_gcmessages_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CSOEconDefaultEquippedDefinitionInstanceClient); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_csgo_base_gcmessages_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgGCToGCDirtySDOCache); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_csgo_base_gcmessages_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgGCToGCDirtyMultipleSDOCache); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_csgo_base_gcmessages_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgGCCollectItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_csgo_base_gcmessages_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgSDONoMemcached); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_csgo_base_gcmessages_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgGCToGCUpdateSQLKeyValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_csgo_base_gcmessages_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgGCToGCIsTrustedServer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_csgo_base_gcmessages_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgGCToGCIsTrustedServerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_csgo_base_gcmessages_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgGCToGCBroadcastConsoleCommand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_csgo_base_gcmessages_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgGCServerVersionUpdated); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_csgo_base_gcmessages_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgGCClientVersionUpdated); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_csgo_base_gcmessages_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgGCToGCWebAPIAccountChanged); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_csgo_base_gcmessages_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgGCToGCRequestPassportItemGrant); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_csgo_base_gcmessages_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgGameServerInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_csgo_base_gcmessages_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgSetItemPositions_ItemPosition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_csgo_base_gcmessages_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   80,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_csgo_base_gcmessages_proto_goTypes,
		DependencyIndexes: file_csgo_base_gcmessages_proto_depIdxs,
		EnumInfos:         file_csgo_base_gcmessages_proto_enumTypes,
		MessageInfos:      file_csgo_base_gcmessages_proto_msgTypes,
	}.Build()
	File_csgo_base_gcmessages_proto = out.File
	file_csgo_base_gcmessages_proto_rawDesc = nil
	file_csgo_base_gcmessages_proto_goTypes = nil
	file_csgo_base_gcmessages_proto_depIdxs = nil
}
