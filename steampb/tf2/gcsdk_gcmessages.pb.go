// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.21.0
// 	protoc        v3.11.2
// source: tf2/gcsdk_gcmessages.proto

package tf2

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type PartnerAccountType int32

const (
	PartnerAccountType_PARTNER_NONE          PartnerAccountType = 0
	PartnerAccountType_PARTNER_PERFECT_WORLD PartnerAccountType = 1
	PartnerAccountType_PARTNER_NEXON         PartnerAccountType = 2
)

// Enum value maps for PartnerAccountType.
var (
	PartnerAccountType_name = map[int32]string{
		0: "PARTNER_NONE",
		1: "PARTNER_PERFECT_WORLD",
		2: "PARTNER_NEXON",
	}
	PartnerAccountType_value = map[string]int32{
		"PARTNER_NONE":          0,
		"PARTNER_PERFECT_WORLD": 1,
		"PARTNER_NEXON":         2,
	}
)

func (x PartnerAccountType) Enum() *PartnerAccountType {
	p := new(PartnerAccountType)
	*p = x
	return p
}

func (x PartnerAccountType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PartnerAccountType) Descriptor() protoreflect.EnumDescriptor {
	return file_tf2_gcsdk_gcmessages_proto_enumTypes[0].Descriptor()
}

func (PartnerAccountType) Type() protoreflect.EnumType {
	return &file_tf2_gcsdk_gcmessages_proto_enumTypes[0]
}

func (x PartnerAccountType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *PartnerAccountType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = PartnerAccountType(num)
	return nil
}

// Deprecated: Use PartnerAccountType.Descriptor instead.
func (PartnerAccountType) EnumDescriptor() ([]byte, []int) {
	return file_tf2_gcsdk_gcmessages_proto_rawDescGZIP(), []int{0}
}

type GCConnectionStatus int32

const (
	GCConnectionStatus_GCConnectionStatus_HAVE_SESSION              GCConnectionStatus = 0
	GCConnectionStatus_GCConnectionStatus_GC_GOING_DOWN             GCConnectionStatus = 1
	GCConnectionStatus_GCConnectionStatus_NO_SESSION                GCConnectionStatus = 2
	GCConnectionStatus_GCConnectionStatus_NO_SESSION_IN_LOGON_QUEUE GCConnectionStatus = 3
	GCConnectionStatus_GCConnectionStatus_NO_STEAM                  GCConnectionStatus = 4
	GCConnectionStatus_GCConnectionStatus_SUSPENDED                 GCConnectionStatus = 5
)

// Enum value maps for GCConnectionStatus.
var (
	GCConnectionStatus_name = map[int32]string{
		0: "GCConnectionStatus_HAVE_SESSION",
		1: "GCConnectionStatus_GC_GOING_DOWN",
		2: "GCConnectionStatus_NO_SESSION",
		3: "GCConnectionStatus_NO_SESSION_IN_LOGON_QUEUE",
		4: "GCConnectionStatus_NO_STEAM",
		5: "GCConnectionStatus_SUSPENDED",
	}
	GCConnectionStatus_value = map[string]int32{
		"GCConnectionStatus_HAVE_SESSION":              0,
		"GCConnectionStatus_GC_GOING_DOWN":             1,
		"GCConnectionStatus_NO_SESSION":                2,
		"GCConnectionStatus_NO_SESSION_IN_LOGON_QUEUE": 3,
		"GCConnectionStatus_NO_STEAM":                  4,
		"GCConnectionStatus_SUSPENDED":                 5,
	}
)

func (x GCConnectionStatus) Enum() *GCConnectionStatus {
	p := new(GCConnectionStatus)
	*p = x
	return p
}

func (x GCConnectionStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GCConnectionStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_tf2_gcsdk_gcmessages_proto_enumTypes[1].Descriptor()
}

func (GCConnectionStatus) Type() protoreflect.EnumType {
	return &file_tf2_gcsdk_gcmessages_proto_enumTypes[1]
}

func (x GCConnectionStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *GCConnectionStatus) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = GCConnectionStatus(num)
	return nil
}

// Deprecated: Use GCConnectionStatus.Descriptor instead.
func (GCConnectionStatus) EnumDescriptor() ([]byte, []int) {
	return file_tf2_gcsdk_gcmessages_proto_rawDescGZIP(), []int{1}
}

type CMsgSOIDOwner struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type *uint32 `protobuf:"varint,1,opt,name=type" json:"type,omitempty"`
	Id   *uint64 `protobuf:"varint,2,opt,name=id" json:"id,omitempty"`
}

func (x *CMsgSOIDOwner) Reset() {
	*x = CMsgSOIDOwner{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tf2_gcsdk_gcmessages_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgSOIDOwner) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSOIDOwner) ProtoMessage() {}

func (x *CMsgSOIDOwner) ProtoReflect() protoreflect.Message {
	mi := &file_tf2_gcsdk_gcmessages_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSOIDOwner.ProtoReflect.Descriptor instead.
func (*CMsgSOIDOwner) Descriptor() ([]byte, []int) {
	return file_tf2_gcsdk_gcmessages_proto_rawDescGZIP(), []int{0}
}

func (x *CMsgSOIDOwner) GetType() uint32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *CMsgSOIDOwner) GetId() uint64 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

type CMsgSOSingleObject struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Owner      *uint64        `protobuf:"fixed64,1,opt,name=owner" json:"owner,omitempty"`
	TypeId     *int32         `protobuf:"varint,2,opt,name=type_id,json=typeId" json:"type_id,omitempty"`
	ObjectData []byte         `protobuf:"bytes,3,opt,name=object_data,json=objectData" json:"object_data,omitempty"`
	Version    *uint64        `protobuf:"fixed64,4,opt,name=version" json:"version,omitempty"`
	OwnerSoid  *CMsgSOIDOwner `protobuf:"bytes,5,opt,name=owner_soid,json=ownerSoid" json:"owner_soid,omitempty"`
	ServiceId  *uint32        `protobuf:"varint,6,opt,name=service_id,json=serviceId" json:"service_id,omitempty"`
}

func (x *CMsgSOSingleObject) Reset() {
	*x = CMsgSOSingleObject{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tf2_gcsdk_gcmessages_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgSOSingleObject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSOSingleObject) ProtoMessage() {}

func (x *CMsgSOSingleObject) ProtoReflect() protoreflect.Message {
	mi := &file_tf2_gcsdk_gcmessages_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSOSingleObject.ProtoReflect.Descriptor instead.
func (*CMsgSOSingleObject) Descriptor() ([]byte, []int) {
	return file_tf2_gcsdk_gcmessages_proto_rawDescGZIP(), []int{1}
}

func (x *CMsgSOSingleObject) GetOwner() uint64 {
	if x != nil && x.Owner != nil {
		return *x.Owner
	}
	return 0
}

func (x *CMsgSOSingleObject) GetTypeId() int32 {
	if x != nil && x.TypeId != nil {
		return *x.TypeId
	}
	return 0
}

func (x *CMsgSOSingleObject) GetObjectData() []byte {
	if x != nil {
		return x.ObjectData
	}
	return nil
}

func (x *CMsgSOSingleObject) GetVersion() uint64 {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return 0
}

func (x *CMsgSOSingleObject) GetOwnerSoid() *CMsgSOIDOwner {
	if x != nil {
		return x.OwnerSoid
	}
	return nil
}

func (x *CMsgSOSingleObject) GetServiceId() uint32 {
	if x != nil && x.ServiceId != nil {
		return *x.ServiceId
	}
	return 0
}

type CMsgSOMultipleObjects struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Owner     *uint64                               `protobuf:"fixed64,1,opt,name=owner" json:"owner,omitempty"`
	Objects   []*CMsgSOMultipleObjects_SingleObject `protobuf:"bytes,2,rep,name=objects" json:"objects,omitempty"`
	Version   *uint64                               `protobuf:"fixed64,3,opt,name=version" json:"version,omitempty"`
	OwnerSoid *CMsgSOIDOwner                        `protobuf:"bytes,6,opt,name=owner_soid,json=ownerSoid" json:"owner_soid,omitempty"`
	ServiceId *uint32                               `protobuf:"varint,7,opt,name=service_id,json=serviceId" json:"service_id,omitempty"`
}

func (x *CMsgSOMultipleObjects) Reset() {
	*x = CMsgSOMultipleObjects{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tf2_gcsdk_gcmessages_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgSOMultipleObjects) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSOMultipleObjects) ProtoMessage() {}

func (x *CMsgSOMultipleObjects) ProtoReflect() protoreflect.Message {
	mi := &file_tf2_gcsdk_gcmessages_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSOMultipleObjects.ProtoReflect.Descriptor instead.
func (*CMsgSOMultipleObjects) Descriptor() ([]byte, []int) {
	return file_tf2_gcsdk_gcmessages_proto_rawDescGZIP(), []int{2}
}

func (x *CMsgSOMultipleObjects) GetOwner() uint64 {
	if x != nil && x.Owner != nil {
		return *x.Owner
	}
	return 0
}

func (x *CMsgSOMultipleObjects) GetObjects() []*CMsgSOMultipleObjects_SingleObject {
	if x != nil {
		return x.Objects
	}
	return nil
}

func (x *CMsgSOMultipleObjects) GetVersion() uint64 {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return 0
}

func (x *CMsgSOMultipleObjects) GetOwnerSoid() *CMsgSOIDOwner {
	if x != nil {
		return x.OwnerSoid
	}
	return nil
}

func (x *CMsgSOMultipleObjects) GetServiceId() uint32 {
	if x != nil && x.ServiceId != nil {
		return *x.ServiceId
	}
	return 0
}

type CMsgSOCacheSubscribed struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Owner       *uint64                                 `protobuf:"fixed64,1,opt,name=owner" json:"owner,omitempty"`
	Objects     []*CMsgSOCacheSubscribed_SubscribedType `protobuf:"bytes,2,rep,name=objects" json:"objects,omitempty"`
	Version     *uint64                                 `protobuf:"fixed64,3,opt,name=version" json:"version,omitempty"`
	OwnerSoid   *CMsgSOIDOwner                          `protobuf:"bytes,4,opt,name=owner_soid,json=ownerSoid" json:"owner_soid,omitempty"`
	ServiceId   *uint32                                 `protobuf:"varint,5,opt,name=service_id,json=serviceId" json:"service_id,omitempty"`
	ServiceList []uint32                                `protobuf:"varint,6,rep,name=service_list,json=serviceList" json:"service_list,omitempty"`
	SyncVersion *uint64                                 `protobuf:"fixed64,7,opt,name=sync_version,json=syncVersion" json:"sync_version,omitempty"`
}

func (x *CMsgSOCacheSubscribed) Reset() {
	*x = CMsgSOCacheSubscribed{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tf2_gcsdk_gcmessages_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgSOCacheSubscribed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSOCacheSubscribed) ProtoMessage() {}

func (x *CMsgSOCacheSubscribed) ProtoReflect() protoreflect.Message {
	mi := &file_tf2_gcsdk_gcmessages_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSOCacheSubscribed.ProtoReflect.Descriptor instead.
func (*CMsgSOCacheSubscribed) Descriptor() ([]byte, []int) {
	return file_tf2_gcsdk_gcmessages_proto_rawDescGZIP(), []int{3}
}

func (x *CMsgSOCacheSubscribed) GetOwner() uint64 {
	if x != nil && x.Owner != nil {
		return *x.Owner
	}
	return 0
}

func (x *CMsgSOCacheSubscribed) GetObjects() []*CMsgSOCacheSubscribed_SubscribedType {
	if x != nil {
		return x.Objects
	}
	return nil
}

func (x *CMsgSOCacheSubscribed) GetVersion() uint64 {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return 0
}

func (x *CMsgSOCacheSubscribed) GetOwnerSoid() *CMsgSOIDOwner {
	if x != nil {
		return x.OwnerSoid
	}
	return nil
}

func (x *CMsgSOCacheSubscribed) GetServiceId() uint32 {
	if x != nil && x.ServiceId != nil {
		return *x.ServiceId
	}
	return 0
}

func (x *CMsgSOCacheSubscribed) GetServiceList() []uint32 {
	if x != nil {
		return x.ServiceList
	}
	return nil
}

func (x *CMsgSOCacheSubscribed) GetSyncVersion() uint64 {
	if x != nil && x.SyncVersion != nil {
		return *x.SyncVersion
	}
	return 0
}

type CMsgSOCacheSubscribedUpToDate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version     *uint64        `protobuf:"fixed64,1,opt,name=version" json:"version,omitempty"`
	OwnerSoid   *CMsgSOIDOwner `protobuf:"bytes,2,opt,name=owner_soid,json=ownerSoid" json:"owner_soid,omitempty"`
	ServiceId   *uint32        `protobuf:"varint,3,opt,name=service_id,json=serviceId" json:"service_id,omitempty"`
	ServiceList []uint32       `protobuf:"varint,4,rep,name=service_list,json=serviceList" json:"service_list,omitempty"`
	SyncVersion *uint64        `protobuf:"fixed64,5,opt,name=sync_version,json=syncVersion" json:"sync_version,omitempty"`
}

func (x *CMsgSOCacheSubscribedUpToDate) Reset() {
	*x = CMsgSOCacheSubscribedUpToDate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tf2_gcsdk_gcmessages_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgSOCacheSubscribedUpToDate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSOCacheSubscribedUpToDate) ProtoMessage() {}

func (x *CMsgSOCacheSubscribedUpToDate) ProtoReflect() protoreflect.Message {
	mi := &file_tf2_gcsdk_gcmessages_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSOCacheSubscribedUpToDate.ProtoReflect.Descriptor instead.
func (*CMsgSOCacheSubscribedUpToDate) Descriptor() ([]byte, []int) {
	return file_tf2_gcsdk_gcmessages_proto_rawDescGZIP(), []int{4}
}

func (x *CMsgSOCacheSubscribedUpToDate) GetVersion() uint64 {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return 0
}

func (x *CMsgSOCacheSubscribedUpToDate) GetOwnerSoid() *CMsgSOIDOwner {
	if x != nil {
		return x.OwnerSoid
	}
	return nil
}

func (x *CMsgSOCacheSubscribedUpToDate) GetServiceId() uint32 {
	if x != nil && x.ServiceId != nil {
		return *x.ServiceId
	}
	return 0
}

func (x *CMsgSOCacheSubscribedUpToDate) GetServiceList() []uint32 {
	if x != nil {
		return x.ServiceList
	}
	return nil
}

func (x *CMsgSOCacheSubscribedUpToDate) GetSyncVersion() uint64 {
	if x != nil && x.SyncVersion != nil {
		return *x.SyncVersion
	}
	return 0
}

type CMsgSOCacheUnsubscribed struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Owner *uint64 `protobuf:"fixed64,1,opt,name=owner" json:"owner,omitempty"`
}

func (x *CMsgSOCacheUnsubscribed) Reset() {
	*x = CMsgSOCacheUnsubscribed{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tf2_gcsdk_gcmessages_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgSOCacheUnsubscribed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSOCacheUnsubscribed) ProtoMessage() {}

func (x *CMsgSOCacheUnsubscribed) ProtoReflect() protoreflect.Message {
	mi := &file_tf2_gcsdk_gcmessages_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSOCacheUnsubscribed.ProtoReflect.Descriptor instead.
func (*CMsgSOCacheUnsubscribed) Descriptor() ([]byte, []int) {
	return file_tf2_gcsdk_gcmessages_proto_rawDescGZIP(), []int{5}
}

func (x *CMsgSOCacheUnsubscribed) GetOwner() uint64 {
	if x != nil && x.Owner != nil {
		return *x.Owner
	}
	return 0
}

type CMsgSOCacheSubscriptionCheck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Owner       *uint64        `protobuf:"fixed64,1,opt,name=owner" json:"owner,omitempty"`
	Version     *uint64        `protobuf:"fixed64,2,opt,name=version" json:"version,omitempty"`
	OwnerSoid   *CMsgSOIDOwner `protobuf:"bytes,3,opt,name=owner_soid,json=ownerSoid" json:"owner_soid,omitempty"`
	ServiceId   *uint32        `protobuf:"varint,4,opt,name=service_id,json=serviceId" json:"service_id,omitempty"`
	ServiceList []uint32       `protobuf:"varint,5,rep,name=service_list,json=serviceList" json:"service_list,omitempty"`
	SyncVersion *uint64        `protobuf:"fixed64,6,opt,name=sync_version,json=syncVersion" json:"sync_version,omitempty"`
}

func (x *CMsgSOCacheSubscriptionCheck) Reset() {
	*x = CMsgSOCacheSubscriptionCheck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tf2_gcsdk_gcmessages_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgSOCacheSubscriptionCheck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSOCacheSubscriptionCheck) ProtoMessage() {}

func (x *CMsgSOCacheSubscriptionCheck) ProtoReflect() protoreflect.Message {
	mi := &file_tf2_gcsdk_gcmessages_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSOCacheSubscriptionCheck.ProtoReflect.Descriptor instead.
func (*CMsgSOCacheSubscriptionCheck) Descriptor() ([]byte, []int) {
	return file_tf2_gcsdk_gcmessages_proto_rawDescGZIP(), []int{6}
}

func (x *CMsgSOCacheSubscriptionCheck) GetOwner() uint64 {
	if x != nil && x.Owner != nil {
		return *x.Owner
	}
	return 0
}

func (x *CMsgSOCacheSubscriptionCheck) GetVersion() uint64 {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return 0
}

func (x *CMsgSOCacheSubscriptionCheck) GetOwnerSoid() *CMsgSOIDOwner {
	if x != nil {
		return x.OwnerSoid
	}
	return nil
}

func (x *CMsgSOCacheSubscriptionCheck) GetServiceId() uint32 {
	if x != nil && x.ServiceId != nil {
		return *x.ServiceId
	}
	return 0
}

func (x *CMsgSOCacheSubscriptionCheck) GetServiceList() []uint32 {
	if x != nil {
		return x.ServiceList
	}
	return nil
}

func (x *CMsgSOCacheSubscriptionCheck) GetSyncVersion() uint64 {
	if x != nil && x.SyncVersion != nil {
		return *x.SyncVersion
	}
	return 0
}

type CMsgSOCacheSubscriptionRefresh struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Owner     *uint64        `protobuf:"fixed64,1,opt,name=owner" json:"owner,omitempty"`
	OwnerSoid *CMsgSOIDOwner `protobuf:"bytes,2,opt,name=owner_soid,json=ownerSoid" json:"owner_soid,omitempty"`
}

func (x *CMsgSOCacheSubscriptionRefresh) Reset() {
	*x = CMsgSOCacheSubscriptionRefresh{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tf2_gcsdk_gcmessages_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgSOCacheSubscriptionRefresh) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSOCacheSubscriptionRefresh) ProtoMessage() {}

func (x *CMsgSOCacheSubscriptionRefresh) ProtoReflect() protoreflect.Message {
	mi := &file_tf2_gcsdk_gcmessages_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSOCacheSubscriptionRefresh.ProtoReflect.Descriptor instead.
func (*CMsgSOCacheSubscriptionRefresh) Descriptor() ([]byte, []int) {
	return file_tf2_gcsdk_gcmessages_proto_rawDescGZIP(), []int{7}
}

func (x *CMsgSOCacheSubscriptionRefresh) GetOwner() uint64 {
	if x != nil && x.Owner != nil {
		return *x.Owner
	}
	return 0
}

func (x *CMsgSOCacheSubscriptionRefresh) GetOwnerSoid() *CMsgSOIDOwner {
	if x != nil {
		return x.OwnerSoid
	}
	return nil
}

type CMsgSOCacheVersion struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version *uint64 `protobuf:"fixed64,1,opt,name=version" json:"version,omitempty"`
}

func (x *CMsgSOCacheVersion) Reset() {
	*x = CMsgSOCacheVersion{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tf2_gcsdk_gcmessages_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgSOCacheVersion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSOCacheVersion) ProtoMessage() {}

func (x *CMsgSOCacheVersion) ProtoReflect() protoreflect.Message {
	mi := &file_tf2_gcsdk_gcmessages_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSOCacheVersion.ProtoReflect.Descriptor instead.
func (*CMsgSOCacheVersion) Descriptor() ([]byte, []int) {
	return file_tf2_gcsdk_gcmessages_proto_rawDescGZIP(), []int{8}
}

func (x *CMsgSOCacheVersion) GetVersion() uint64 {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return 0
}

type CMsgGCMultiplexMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msgtype  *uint32  `protobuf:"varint,1,opt,name=msgtype" json:"msgtype,omitempty"`
	Payload  []byte   `protobuf:"bytes,2,opt,name=payload" json:"payload,omitempty"`
	Steamids []uint64 `protobuf:"fixed64,3,rep,name=steamids" json:"steamids,omitempty"`
}

func (x *CMsgGCMultiplexMessage) Reset() {
	*x = CMsgGCMultiplexMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tf2_gcsdk_gcmessages_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCMultiplexMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCMultiplexMessage) ProtoMessage() {}

func (x *CMsgGCMultiplexMessage) ProtoReflect() protoreflect.Message {
	mi := &file_tf2_gcsdk_gcmessages_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCMultiplexMessage.ProtoReflect.Descriptor instead.
func (*CMsgGCMultiplexMessage) Descriptor() ([]byte, []int) {
	return file_tf2_gcsdk_gcmessages_proto_rawDescGZIP(), []int{9}
}

func (x *CMsgGCMultiplexMessage) GetMsgtype() uint32 {
	if x != nil && x.Msgtype != nil {
		return *x.Msgtype
	}
	return 0
}

func (x *CMsgGCMultiplexMessage) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *CMsgGCMultiplexMessage) GetSteamids() []uint64 {
	if x != nil {
		return x.Steamids
	}
	return nil
}

type CGCToGCMsgMasterAck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DirIndex      *uint32  `protobuf:"varint,1,opt,name=dir_index,json=dirIndex" json:"dir_index,omitempty"`
	MachineName   *string  `protobuf:"bytes,3,opt,name=machine_name,json=machineName" json:"machine_name,omitempty"`
	ProcessName   *string  `protobuf:"bytes,4,opt,name=process_name,json=processName" json:"process_name,omitempty"`
	TypeInstances []uint32 `protobuf:"varint,5,rep,name=type_instances,json=typeInstances" json:"type_instances,omitempty"`
}

func (x *CGCToGCMsgMasterAck) Reset() {
	*x = CGCToGCMsgMasterAck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tf2_gcsdk_gcmessages_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CGCToGCMsgMasterAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CGCToGCMsgMasterAck) ProtoMessage() {}

func (x *CGCToGCMsgMasterAck) ProtoReflect() protoreflect.Message {
	mi := &file_tf2_gcsdk_gcmessages_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CGCToGCMsgMasterAck.ProtoReflect.Descriptor instead.
func (*CGCToGCMsgMasterAck) Descriptor() ([]byte, []int) {
	return file_tf2_gcsdk_gcmessages_proto_rawDescGZIP(), []int{10}
}

func (x *CGCToGCMsgMasterAck) GetDirIndex() uint32 {
	if x != nil && x.DirIndex != nil {
		return *x.DirIndex
	}
	return 0
}

func (x *CGCToGCMsgMasterAck) GetMachineName() string {
	if x != nil && x.MachineName != nil {
		return *x.MachineName
	}
	return ""
}

func (x *CGCToGCMsgMasterAck) GetProcessName() string {
	if x != nil && x.ProcessName != nil {
		return *x.ProcessName
	}
	return ""
}

func (x *CGCToGCMsgMasterAck) GetTypeInstances() []uint32 {
	if x != nil {
		return x.TypeInstances
	}
	return nil
}

type CGCToGCMsgMasterAck_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Eresult *int32 `protobuf:"varint,1,opt,name=eresult,def=2" json:"eresult,omitempty"`
}

// Default values for CGCToGCMsgMasterAck_Response fields.
const (
	Default_CGCToGCMsgMasterAck_Response_Eresult = int32(2)
)

func (x *CGCToGCMsgMasterAck_Response) Reset() {
	*x = CGCToGCMsgMasterAck_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tf2_gcsdk_gcmessages_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CGCToGCMsgMasterAck_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CGCToGCMsgMasterAck_Response) ProtoMessage() {}

func (x *CGCToGCMsgMasterAck_Response) ProtoReflect() protoreflect.Message {
	mi := &file_tf2_gcsdk_gcmessages_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CGCToGCMsgMasterAck_Response.ProtoReflect.Descriptor instead.
func (*CGCToGCMsgMasterAck_Response) Descriptor() ([]byte, []int) {
	return file_tf2_gcsdk_gcmessages_proto_rawDescGZIP(), []int{11}
}

func (x *CGCToGCMsgMasterAck_Response) GetEresult() int32 {
	if x != nil && x.Eresult != nil {
		return *x.Eresult
	}
	return Default_CGCToGCMsgMasterAck_Response_Eresult
}

type CGCToGCMsgMasterStartupComplete struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GcInfo []*CGCToGCMsgMasterStartupComplete_GCInfo `protobuf:"bytes,1,rep,name=gc_info,json=gcInfo" json:"gc_info,omitempty"`
}

func (x *CGCToGCMsgMasterStartupComplete) Reset() {
	*x = CGCToGCMsgMasterStartupComplete{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tf2_gcsdk_gcmessages_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CGCToGCMsgMasterStartupComplete) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CGCToGCMsgMasterStartupComplete) ProtoMessage() {}

func (x *CGCToGCMsgMasterStartupComplete) ProtoReflect() protoreflect.Message {
	mi := &file_tf2_gcsdk_gcmessages_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CGCToGCMsgMasterStartupComplete.ProtoReflect.Descriptor instead.
func (*CGCToGCMsgMasterStartupComplete) Descriptor() ([]byte, []int) {
	return file_tf2_gcsdk_gcmessages_proto_rawDescGZIP(), []int{12}
}

func (x *CGCToGCMsgMasterStartupComplete) GetGcInfo() []*CGCToGCMsgMasterStartupComplete_GCInfo {
	if x != nil {
		return x.GcInfo
	}
	return nil
}

type CGCToGCMsgRouted struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MsgType    *uint32 `protobuf:"varint,1,opt,name=msg_type,json=msgType" json:"msg_type,omitempty"`
	SenderId   *uint64 `protobuf:"fixed64,2,opt,name=sender_id,json=senderId" json:"sender_id,omitempty"`
	NetMessage []byte  `protobuf:"bytes,3,opt,name=net_message,json=netMessage" json:"net_message,omitempty"`
}

func (x *CGCToGCMsgRouted) Reset() {
	*x = CGCToGCMsgRouted{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tf2_gcsdk_gcmessages_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CGCToGCMsgRouted) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CGCToGCMsgRouted) ProtoMessage() {}

func (x *CGCToGCMsgRouted) ProtoReflect() protoreflect.Message {
	mi := &file_tf2_gcsdk_gcmessages_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CGCToGCMsgRouted.ProtoReflect.Descriptor instead.
func (*CGCToGCMsgRouted) Descriptor() ([]byte, []int) {
	return file_tf2_gcsdk_gcmessages_proto_rawDescGZIP(), []int{13}
}

func (x *CGCToGCMsgRouted) GetMsgType() uint32 {
	if x != nil && x.MsgType != nil {
		return *x.MsgType
	}
	return 0
}

func (x *CGCToGCMsgRouted) GetSenderId() uint64 {
	if x != nil && x.SenderId != nil {
		return *x.SenderId
	}
	return 0
}

func (x *CGCToGCMsgRouted) GetNetMessage() []byte {
	if x != nil {
		return x.NetMessage
	}
	return nil
}

type CGCToGCMsgRoutedReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MsgType    *uint32 `protobuf:"varint,1,opt,name=msg_type,json=msgType" json:"msg_type,omitempty"`
	NetMessage []byte  `protobuf:"bytes,2,opt,name=net_message,json=netMessage" json:"net_message,omitempty"`
}

func (x *CGCToGCMsgRoutedReply) Reset() {
	*x = CGCToGCMsgRoutedReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tf2_gcsdk_gcmessages_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CGCToGCMsgRoutedReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CGCToGCMsgRoutedReply) ProtoMessage() {}

func (x *CGCToGCMsgRoutedReply) ProtoReflect() protoreflect.Message {
	mi := &file_tf2_gcsdk_gcmessages_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CGCToGCMsgRoutedReply.ProtoReflect.Descriptor instead.
func (*CGCToGCMsgRoutedReply) Descriptor() ([]byte, []int) {
	return file_tf2_gcsdk_gcmessages_proto_rawDescGZIP(), []int{14}
}

func (x *CGCToGCMsgRoutedReply) GetMsgType() uint32 {
	if x != nil && x.MsgType != nil {
		return *x.MsgType
	}
	return 0
}

func (x *CGCToGCMsgRoutedReply) GetNetMessage() []byte {
	if x != nil {
		return x.NetMessage
	}
	return nil
}

type CMsgGCUpdateSubGCSessionInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Updates []*CMsgGCUpdateSubGCSessionInfo_CMsgUpdate `protobuf:"bytes,1,rep,name=updates" json:"updates,omitempty"`
}

func (x *CMsgGCUpdateSubGCSessionInfo) Reset() {
	*x = CMsgGCUpdateSubGCSessionInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tf2_gcsdk_gcmessages_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCUpdateSubGCSessionInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCUpdateSubGCSessionInfo) ProtoMessage() {}

func (x *CMsgGCUpdateSubGCSessionInfo) ProtoReflect() protoreflect.Message {
	mi := &file_tf2_gcsdk_gcmessages_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCUpdateSubGCSessionInfo.ProtoReflect.Descriptor instead.
func (*CMsgGCUpdateSubGCSessionInfo) Descriptor() ([]byte, []int) {
	return file_tf2_gcsdk_gcmessages_proto_rawDescGZIP(), []int{15}
}

func (x *CMsgGCUpdateSubGCSessionInfo) GetUpdates() []*CMsgGCUpdateSubGCSessionInfo_CMsgUpdate {
	if x != nil {
		return x.Updates
	}
	return nil
}

type CMsgGCRequestSubGCSessionInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Steamid *uint64 `protobuf:"fixed64,1,opt,name=steamid" json:"steamid,omitempty"`
}

func (x *CMsgGCRequestSubGCSessionInfo) Reset() {
	*x = CMsgGCRequestSubGCSessionInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tf2_gcsdk_gcmessages_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCRequestSubGCSessionInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCRequestSubGCSessionInfo) ProtoMessage() {}

func (x *CMsgGCRequestSubGCSessionInfo) ProtoReflect() protoreflect.Message {
	mi := &file_tf2_gcsdk_gcmessages_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCRequestSubGCSessionInfo.ProtoReflect.Descriptor instead.
func (*CMsgGCRequestSubGCSessionInfo) Descriptor() ([]byte, []int) {
	return file_tf2_gcsdk_gcmessages_proto_rawDescGZIP(), []int{16}
}

func (x *CMsgGCRequestSubGCSessionInfo) GetSteamid() uint64 {
	if x != nil && x.Steamid != nil {
		return *x.Steamid
	}
	return 0
}

type CMsgGCRequestSubGCSessionInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ip      *uint32 `protobuf:"fixed32,1,opt,name=ip" json:"ip,omitempty"`
	Trusted *bool   `protobuf:"varint,2,opt,name=trusted" json:"trusted,omitempty"`
}

func (x *CMsgGCRequestSubGCSessionInfoResponse) Reset() {
	*x = CMsgGCRequestSubGCSessionInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tf2_gcsdk_gcmessages_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCRequestSubGCSessionInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCRequestSubGCSessionInfoResponse) ProtoMessage() {}

func (x *CMsgGCRequestSubGCSessionInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tf2_gcsdk_gcmessages_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCRequestSubGCSessionInfoResponse.ProtoReflect.Descriptor instead.
func (*CMsgGCRequestSubGCSessionInfoResponse) Descriptor() ([]byte, []int) {
	return file_tf2_gcsdk_gcmessages_proto_rawDescGZIP(), []int{17}
}

func (x *CMsgGCRequestSubGCSessionInfoResponse) GetIp() uint32 {
	if x != nil && x.Ip != nil {
		return *x.Ip
	}
	return 0
}

func (x *CMsgGCRequestSubGCSessionInfoResponse) GetTrusted() bool {
	if x != nil && x.Trusted != nil {
		return *x.Trusted
	}
	return false
}

type CMsgGCToGCIncrementRecruitmentLevel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Steamid *uint64 `protobuf:"fixed64,1,opt,name=steamid" json:"steamid,omitempty"`
}

func (x *CMsgGCToGCIncrementRecruitmentLevel) Reset() {
	*x = CMsgGCToGCIncrementRecruitmentLevel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tf2_gcsdk_gcmessages_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCToGCIncrementRecruitmentLevel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCToGCIncrementRecruitmentLevel) ProtoMessage() {}

func (x *CMsgGCToGCIncrementRecruitmentLevel) ProtoReflect() protoreflect.Message {
	mi := &file_tf2_gcsdk_gcmessages_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCToGCIncrementRecruitmentLevel.ProtoReflect.Descriptor instead.
func (*CMsgGCToGCIncrementRecruitmentLevel) Descriptor() ([]byte, []int) {
	return file_tf2_gcsdk_gcmessages_proto_rawDescGZIP(), []int{18}
}

func (x *CMsgGCToGCIncrementRecruitmentLevel) GetSteamid() uint64 {
	if x != nil && x.Steamid != nil {
		return *x.Steamid
	}
	return 0
}

type CMsgSOCacheHaveVersion struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Soid      *CMsgSOIDOwner `protobuf:"bytes,1,opt,name=soid" json:"soid,omitempty"`
	Version   *uint64        `protobuf:"fixed64,2,opt,name=version" json:"version,omitempty"`
	ServiceId *uint32        `protobuf:"varint,3,opt,name=service_id,json=serviceId" json:"service_id,omitempty"`
}

func (x *CMsgSOCacheHaveVersion) Reset() {
	*x = CMsgSOCacheHaveVersion{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tf2_gcsdk_gcmessages_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgSOCacheHaveVersion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSOCacheHaveVersion) ProtoMessage() {}

func (x *CMsgSOCacheHaveVersion) ProtoReflect() protoreflect.Message {
	mi := &file_tf2_gcsdk_gcmessages_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSOCacheHaveVersion.ProtoReflect.Descriptor instead.
func (*CMsgSOCacheHaveVersion) Descriptor() ([]byte, []int) {
	return file_tf2_gcsdk_gcmessages_proto_rawDescGZIP(), []int{19}
}

func (x *CMsgSOCacheHaveVersion) GetSoid() *CMsgSOIDOwner {
	if x != nil {
		return x.Soid
	}
	return nil
}

func (x *CMsgSOCacheHaveVersion) GetVersion() uint64 {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return 0
}

func (x *CMsgSOCacheHaveVersion) GetServiceId() uint32 {
	if x != nil && x.ServiceId != nil {
		return *x.ServiceId
	}
	return 0
}

type CMsgConnectionStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status                        *GCConnectionStatus `protobuf:"varint,1,opt,name=status,enum=tf2.GCConnectionStatus,def=0" json:"status,omitempty"`
	ClientSessionNeed             *uint32             `protobuf:"varint,2,opt,name=client_session_need,json=clientSessionNeed" json:"client_session_need,omitempty"`
	QueuePosition                 *int32              `protobuf:"varint,3,opt,name=queue_position,json=queuePosition" json:"queue_position,omitempty"`
	QueueSize                     *int32              `protobuf:"varint,4,opt,name=queue_size,json=queueSize" json:"queue_size,omitempty"`
	WaitSeconds                   *int32              `protobuf:"varint,5,opt,name=wait_seconds,json=waitSeconds" json:"wait_seconds,omitempty"`
	EstimatedWaitSecondsRemaining *int32              `protobuf:"varint,6,opt,name=estimated_wait_seconds_remaining,json=estimatedWaitSecondsRemaining" json:"estimated_wait_seconds_remaining,omitempty"`
}

// Default values for CMsgConnectionStatus fields.
const (
	Default_CMsgConnectionStatus_Status = GCConnectionStatus_GCConnectionStatus_HAVE_SESSION
)

func (x *CMsgConnectionStatus) Reset() {
	*x = CMsgConnectionStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tf2_gcsdk_gcmessages_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgConnectionStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgConnectionStatus) ProtoMessage() {}

func (x *CMsgConnectionStatus) ProtoReflect() protoreflect.Message {
	mi := &file_tf2_gcsdk_gcmessages_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgConnectionStatus.ProtoReflect.Descriptor instead.
func (*CMsgConnectionStatus) Descriptor() ([]byte, []int) {
	return file_tf2_gcsdk_gcmessages_proto_rawDescGZIP(), []int{20}
}

func (x *CMsgConnectionStatus) GetStatus() GCConnectionStatus {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return Default_CMsgConnectionStatus_Status
}

func (x *CMsgConnectionStatus) GetClientSessionNeed() uint32 {
	if x != nil && x.ClientSessionNeed != nil {
		return *x.ClientSessionNeed
	}
	return 0
}

func (x *CMsgConnectionStatus) GetQueuePosition() int32 {
	if x != nil && x.QueuePosition != nil {
		return *x.QueuePosition
	}
	return 0
}

func (x *CMsgConnectionStatus) GetQueueSize() int32 {
	if x != nil && x.QueueSize != nil {
		return *x.QueueSize
	}
	return 0
}

func (x *CMsgConnectionStatus) GetWaitSeconds() int32 {
	if x != nil && x.WaitSeconds != nil {
		return *x.WaitSeconds
	}
	return 0
}

func (x *CMsgConnectionStatus) GetEstimatedWaitSecondsRemaining() int32 {
	if x != nil && x.EstimatedWaitSecondsRemaining != nil {
		return *x.EstimatedWaitSecondsRemaining
	}
	return 0
}

type CMsgGCToGCSOCacheSubscribe struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Subscriber   *uint64                                        `protobuf:"fixed64,1,opt,name=subscriber" json:"subscriber,omitempty"`
	SubscribeTo  *uint64                                        `protobuf:"fixed64,2,opt,name=subscribe_to,json=subscribeTo" json:"subscribe_to,omitempty"`
	SyncVersion  *uint64                                        `protobuf:"fixed64,3,opt,name=sync_version,json=syncVersion" json:"sync_version,omitempty"`
	HaveVersions []*CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions `protobuf:"bytes,4,rep,name=have_versions,json=haveVersions" json:"have_versions,omitempty"`
}

func (x *CMsgGCToGCSOCacheSubscribe) Reset() {
	*x = CMsgGCToGCSOCacheSubscribe{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tf2_gcsdk_gcmessages_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCToGCSOCacheSubscribe) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCToGCSOCacheSubscribe) ProtoMessage() {}

func (x *CMsgGCToGCSOCacheSubscribe) ProtoReflect() protoreflect.Message {
	mi := &file_tf2_gcsdk_gcmessages_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCToGCSOCacheSubscribe.ProtoReflect.Descriptor instead.
func (*CMsgGCToGCSOCacheSubscribe) Descriptor() ([]byte, []int) {
	return file_tf2_gcsdk_gcmessages_proto_rawDescGZIP(), []int{21}
}

func (x *CMsgGCToGCSOCacheSubscribe) GetSubscriber() uint64 {
	if x != nil && x.Subscriber != nil {
		return *x.Subscriber
	}
	return 0
}

func (x *CMsgGCToGCSOCacheSubscribe) GetSubscribeTo() uint64 {
	if x != nil && x.SubscribeTo != nil {
		return *x.SubscribeTo
	}
	return 0
}

func (x *CMsgGCToGCSOCacheSubscribe) GetSyncVersion() uint64 {
	if x != nil && x.SyncVersion != nil {
		return *x.SyncVersion
	}
	return 0
}

func (x *CMsgGCToGCSOCacheSubscribe) GetHaveVersions() []*CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions {
	if x != nil {
		return x.HaveVersions
	}
	return nil
}

type CMsgGCToGCSOCacheUnsubscribe struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Subscriber      *uint64 `protobuf:"fixed64,1,opt,name=subscriber" json:"subscriber,omitempty"`
	UnsubscribeFrom *uint64 `protobuf:"fixed64,2,opt,name=unsubscribe_from,json=unsubscribeFrom" json:"unsubscribe_from,omitempty"`
}

func (x *CMsgGCToGCSOCacheUnsubscribe) Reset() {
	*x = CMsgGCToGCSOCacheUnsubscribe{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tf2_gcsdk_gcmessages_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCToGCSOCacheUnsubscribe) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCToGCSOCacheUnsubscribe) ProtoMessage() {}

func (x *CMsgGCToGCSOCacheUnsubscribe) ProtoReflect() protoreflect.Message {
	mi := &file_tf2_gcsdk_gcmessages_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCToGCSOCacheUnsubscribe.ProtoReflect.Descriptor instead.
func (*CMsgGCToGCSOCacheUnsubscribe) Descriptor() ([]byte, []int) {
	return file_tf2_gcsdk_gcmessages_proto_rawDescGZIP(), []int{22}
}

func (x *CMsgGCToGCSOCacheUnsubscribe) GetSubscriber() uint64 {
	if x != nil && x.Subscriber != nil {
		return *x.Subscriber
	}
	return 0
}

func (x *CMsgGCToGCSOCacheUnsubscribe) GetUnsubscribeFrom() uint64 {
	if x != nil && x.UnsubscribeFrom != nil {
		return *x.UnsubscribeFrom
	}
	return 0
}

type CMsgGCClientPing struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CMsgGCClientPing) Reset() {
	*x = CMsgGCClientPing{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tf2_gcsdk_gcmessages_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCClientPing) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCClientPing) ProtoMessage() {}

func (x *CMsgGCClientPing) ProtoReflect() protoreflect.Message {
	mi := &file_tf2_gcsdk_gcmessages_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCClientPing.ProtoReflect.Descriptor instead.
func (*CMsgGCClientPing) Descriptor() ([]byte, []int) {
	return file_tf2_gcsdk_gcmessages_proto_rawDescGZIP(), []int{23}
}

type CMsgSOMultipleObjects_SingleObject struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TypeId     *int32 `protobuf:"varint,1,opt,name=type_id,json=typeId" json:"type_id,omitempty"`
	ObjectData []byte `protobuf:"bytes,2,opt,name=object_data,json=objectData" json:"object_data,omitempty"`
}

func (x *CMsgSOMultipleObjects_SingleObject) Reset() {
	*x = CMsgSOMultipleObjects_SingleObject{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tf2_gcsdk_gcmessages_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgSOMultipleObjects_SingleObject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSOMultipleObjects_SingleObject) ProtoMessage() {}

func (x *CMsgSOMultipleObjects_SingleObject) ProtoReflect() protoreflect.Message {
	mi := &file_tf2_gcsdk_gcmessages_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSOMultipleObjects_SingleObject.ProtoReflect.Descriptor instead.
func (*CMsgSOMultipleObjects_SingleObject) Descriptor() ([]byte, []int) {
	return file_tf2_gcsdk_gcmessages_proto_rawDescGZIP(), []int{2, 0}
}

func (x *CMsgSOMultipleObjects_SingleObject) GetTypeId() int32 {
	if x != nil && x.TypeId != nil {
		return *x.TypeId
	}
	return 0
}

func (x *CMsgSOMultipleObjects_SingleObject) GetObjectData() []byte {
	if x != nil {
		return x.ObjectData
	}
	return nil
}

type CMsgSOCacheSubscribed_SubscribedType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TypeId     *int32   `protobuf:"varint,1,opt,name=type_id,json=typeId" json:"type_id,omitempty"`
	ObjectData [][]byte `protobuf:"bytes,2,rep,name=object_data,json=objectData" json:"object_data,omitempty"`
}

func (x *CMsgSOCacheSubscribed_SubscribedType) Reset() {
	*x = CMsgSOCacheSubscribed_SubscribedType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tf2_gcsdk_gcmessages_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgSOCacheSubscribed_SubscribedType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSOCacheSubscribed_SubscribedType) ProtoMessage() {}

func (x *CMsgSOCacheSubscribed_SubscribedType) ProtoReflect() protoreflect.Message {
	mi := &file_tf2_gcsdk_gcmessages_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSOCacheSubscribed_SubscribedType.ProtoReflect.Descriptor instead.
func (*CMsgSOCacheSubscribed_SubscribedType) Descriptor() ([]byte, []int) {
	return file_tf2_gcsdk_gcmessages_proto_rawDescGZIP(), []int{3, 0}
}

func (x *CMsgSOCacheSubscribed_SubscribedType) GetTypeId() int32 {
	if x != nil && x.TypeId != nil {
		return *x.TypeId
	}
	return 0
}

func (x *CMsgSOCacheSubscribed_SubscribedType) GetObjectData() [][]byte {
	if x != nil {
		return x.ObjectData
	}
	return nil
}

type CGCToGCMsgMasterStartupComplete_GCInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DirIndex    *uint32 `protobuf:"varint,1,opt,name=dir_index,json=dirIndex" json:"dir_index,omitempty"`
	MachineName *string `protobuf:"bytes,2,opt,name=machine_name,json=machineName" json:"machine_name,omitempty"`
}

func (x *CGCToGCMsgMasterStartupComplete_GCInfo) Reset() {
	*x = CGCToGCMsgMasterStartupComplete_GCInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tf2_gcsdk_gcmessages_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CGCToGCMsgMasterStartupComplete_GCInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CGCToGCMsgMasterStartupComplete_GCInfo) ProtoMessage() {}

func (x *CGCToGCMsgMasterStartupComplete_GCInfo) ProtoReflect() protoreflect.Message {
	mi := &file_tf2_gcsdk_gcmessages_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CGCToGCMsgMasterStartupComplete_GCInfo.ProtoReflect.Descriptor instead.
func (*CGCToGCMsgMasterStartupComplete_GCInfo) Descriptor() ([]byte, []int) {
	return file_tf2_gcsdk_gcmessages_proto_rawDescGZIP(), []int{12, 0}
}

func (x *CGCToGCMsgMasterStartupComplete_GCInfo) GetDirIndex() uint32 {
	if x != nil && x.DirIndex != nil {
		return *x.DirIndex
	}
	return 0
}

func (x *CGCToGCMsgMasterStartupComplete_GCInfo) GetMachineName() string {
	if x != nil && x.MachineName != nil {
		return *x.MachineName
	}
	return ""
}

type CMsgGCUpdateSubGCSessionInfo_CMsgUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Steamid *uint64 `protobuf:"fixed64,1,opt,name=steamid" json:"steamid,omitempty"`
	Ip      *uint32 `protobuf:"fixed32,2,opt,name=ip" json:"ip,omitempty"`
	Trusted *bool   `protobuf:"varint,3,opt,name=trusted" json:"trusted,omitempty"`
}

func (x *CMsgGCUpdateSubGCSessionInfo_CMsgUpdate) Reset() {
	*x = CMsgGCUpdateSubGCSessionInfo_CMsgUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tf2_gcsdk_gcmessages_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCUpdateSubGCSessionInfo_CMsgUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCUpdateSubGCSessionInfo_CMsgUpdate) ProtoMessage() {}

func (x *CMsgGCUpdateSubGCSessionInfo_CMsgUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_tf2_gcsdk_gcmessages_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCUpdateSubGCSessionInfo_CMsgUpdate.ProtoReflect.Descriptor instead.
func (*CMsgGCUpdateSubGCSessionInfo_CMsgUpdate) Descriptor() ([]byte, []int) {
	return file_tf2_gcsdk_gcmessages_proto_rawDescGZIP(), []int{15, 0}
}

func (x *CMsgGCUpdateSubGCSessionInfo_CMsgUpdate) GetSteamid() uint64 {
	if x != nil && x.Steamid != nil {
		return *x.Steamid
	}
	return 0
}

func (x *CMsgGCUpdateSubGCSessionInfo_CMsgUpdate) GetIp() uint32 {
	if x != nil && x.Ip != nil {
		return *x.Ip
	}
	return 0
}

func (x *CMsgGCUpdateSubGCSessionInfo_CMsgUpdate) GetTrusted() bool {
	if x != nil && x.Trusted != nil {
		return *x.Trusted
	}
	return false
}

type CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceId *uint32 `protobuf:"varint,1,opt,name=service_id,json=serviceId" json:"service_id,omitempty"`
	Version   *uint64 `protobuf:"varint,2,opt,name=version" json:"version,omitempty"`
}

func (x *CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions) Reset() {
	*x = CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tf2_gcsdk_gcmessages_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions) ProtoMessage() {}

func (x *CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions) ProtoReflect() protoreflect.Message {
	mi := &file_tf2_gcsdk_gcmessages_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions.ProtoReflect.Descriptor instead.
func (*CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions) Descriptor() ([]byte, []int) {
	return file_tf2_gcsdk_gcmessages_proto_rawDescGZIP(), []int{21, 0}
}

func (x *CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions) GetServiceId() uint32 {
	if x != nil && x.ServiceId != nil {
		return *x.ServiceId
	}
	return 0
}

func (x *CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions) GetVersion() uint64 {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return 0
}

var File_tf2_gcsdk_gcmessages_proto protoreflect.FileDescriptor

var file_tf2_gcsdk_gcmessages_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x74, 0x66, 0x32, 0x2f, 0x67, 0x63, 0x73, 0x64, 0x6b, 0x5f, 0x67, 0x63, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x74, 0x66,
	0x32, 0x1a, 0x17, 0x74, 0x66, 0x32, 0x2f, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x33, 0x0a, 0x0d, 0x43, 0x4d,
	0x73, 0x67, 0x53, 0x4f, 0x49, 0x44, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x22,
	0xd0, 0x01, 0x0a, 0x12, 0x43, 0x4d, 0x73, 0x67, 0x53, 0x4f, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x06, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x17, 0x0a, 0x07,
	0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x74,
	0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x6f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x06, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x31, 0x0a, 0x0a, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x73, 0x6f, 0x69, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x74, 0x66, 0x32, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x53,
	0x4f, 0x49, 0x44, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x52, 0x09, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x53,
	0x6f, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x49, 0x64, 0x22, 0xa6, 0x02, 0x0a, 0x15, 0x43, 0x4d, 0x73, 0x67, 0x53, 0x4f, 0x4d, 0x75, 0x6c,
	0x74, 0x69, 0x70, 0x6c, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05,
	0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x06, 0x52, 0x05, 0x6f, 0x77, 0x6e,
	0x65, 0x72, 0x12, 0x41, 0x0a, 0x07, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x74, 0x66, 0x32, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x53, 0x4f,
	0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e,
	0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x07, 0x6f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x06, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x31, 0x0a, 0x0a, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x73, 0x6f, 0x69, 0x64, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x74, 0x66, 0x32, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x53, 0x4f,
	0x49, 0x44, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x52, 0x09, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x53, 0x6f,
	0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49,
	0x64, 0x1a, 0x48, 0x0a, 0x0c, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x74, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x0a, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x22, 0xf0, 0x02, 0x0a, 0x15,
	0x43, 0x4d, 0x73, 0x67, 0x53, 0x4f, 0x43, 0x61, 0x63, 0x68, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x06, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x43, 0x0a, 0x07, 0x6f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x74,
	0x66, 0x32, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x53, 0x4f, 0x43, 0x61, 0x63, 0x68, 0x65, 0x53, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x64, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x64, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73,
	0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x06, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x31, 0x0a, 0x0a, 0x6f, 0x77,
	0x6e, 0x65, 0x72, 0x5f, 0x73, 0x6f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x74, 0x66, 0x32, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x53, 0x4f, 0x49, 0x44, 0x4f, 0x77, 0x6e,
	0x65, 0x72, 0x52, 0x09, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x53, 0x6f, 0x69, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x09, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x06, 0x20, 0x03,
	0x28, 0x0d, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x21, 0x0a, 0x0c, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x06, 0x52, 0x0b, 0x73, 0x79, 0x6e, 0x63, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x1a, 0x4a, 0x0a, 0x0e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x64,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x74, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a,
	0x0b, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0c, 0x52, 0x0a, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x22, 0xd1,
	0x01, 0x0a, 0x1d, 0x43, 0x4d, 0x73, 0x67, 0x53, 0x4f, 0x43, 0x61, 0x63, 0x68, 0x65, 0x53, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x64, 0x55, 0x70, 0x54, 0x6f, 0x44, 0x61, 0x74, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x06, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x31, 0x0a, 0x0a, 0x6f, 0x77,
	0x6e, 0x65, 0x72, 0x5f, 0x73, 0x6f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x74, 0x66, 0x32, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x53, 0x4f, 0x49, 0x44, 0x4f, 0x77, 0x6e,
	0x65, 0x72, 0x52, 0x09, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x53, 0x6f, 0x69, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x09, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0d, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x21, 0x0a, 0x0c, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x06, 0x52, 0x0b, 0x73, 0x79, 0x6e, 0x63, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x22, 0x2f, 0x0a, 0x17, 0x43, 0x4d, 0x73, 0x67, 0x53, 0x4f, 0x43, 0x61, 0x63, 0x68,
	0x65, 0x55, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x06, 0x52, 0x05, 0x6f, 0x77,
	0x6e, 0x65, 0x72, 0x22, 0xe6, 0x01, 0x0a, 0x1c, 0x43, 0x4d, 0x73, 0x67, 0x53, 0x4f, 0x43, 0x61,
	0x63, 0x68, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x06, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x06, 0x52, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x31, 0x0a, 0x0a, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x73, 0x6f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x74, 0x66, 0x32, 0x2e, 0x43,
	0x4d, 0x73, 0x67, 0x53, 0x4f, 0x49, 0x44, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x52, 0x09, 0x6f, 0x77,
	0x6e, 0x65, 0x72, 0x53, 0x6f, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0b, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x79, 0x6e,
	0x63, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x06, 0x52,
	0x0b, 0x73, 0x79, 0x6e, 0x63, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x69, 0x0a, 0x1e,
	0x43, 0x4d, 0x73, 0x67, 0x53, 0x4f, 0x43, 0x61, 0x63, 0x68, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x12, 0x14,
	0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x06, 0x52, 0x05, 0x6f,
	0x77, 0x6e, 0x65, 0x72, 0x12, 0x31, 0x0a, 0x0a, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x73, 0x6f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x74, 0x66, 0x32, 0x2e, 0x43,
	0x4d, 0x73, 0x67, 0x53, 0x4f, 0x49, 0x44, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x52, 0x09, 0x6f, 0x77,
	0x6e, 0x65, 0x72, 0x53, 0x6f, 0x69, 0x64, 0x22, 0x2e, 0x0a, 0x12, 0x43, 0x4d, 0x73, 0x67, 0x53,
	0x4f, 0x43, 0x61, 0x63, 0x68, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x06, 0x52, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x68, 0x0a, 0x16, 0x43, 0x4d, 0x73, 0x67, 0x47,
	0x43, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x78, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x73, 0x67, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x07, 0x6d, 0x73, 0x67, 0x74, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x70, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x69, 0x64,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x06, 0x52, 0x08, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x69, 0x64,
	0x73, 0x22, 0x9f, 0x01, 0x0a, 0x13, 0x43, 0x47, 0x43, 0x54, 0x6f, 0x47, 0x43, 0x4d, 0x73, 0x67,
	0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x41, 0x63, 0x6b, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x69, 0x72,
	0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x64, 0x69,
	0x72, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e,
	0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x61,
	0x63, 0x68, 0x69, 0x6e, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f,
	0x63, 0x65, 0x73, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e,
	0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x05,
	0x20, 0x03, 0x28, 0x0d, 0x52, 0x0d, 0x74, 0x79, 0x70, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x73, 0x22, 0x3b, 0x0a, 0x1c, 0x43, 0x47, 0x43, 0x54, 0x6f, 0x47, 0x43, 0x4d, 0x73,
	0x67, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x41, 0x63, 0x6b, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x07, 0x65, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x3a, 0x01, 0x32, 0x52, 0x07, 0x65, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x22, 0xb1, 0x01, 0x0a, 0x1f, 0x43, 0x47, 0x43, 0x54, 0x6f, 0x47, 0x43, 0x4d, 0x73, 0x67, 0x4d,
	0x61, 0x73, 0x74, 0x65, 0x72, 0x53, 0x74, 0x61, 0x72, 0x74, 0x75, 0x70, 0x43, 0x6f, 0x6d, 0x70,
	0x6c, 0x65, 0x74, 0x65, 0x12, 0x44, 0x0a, 0x07, 0x67, 0x63, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x74, 0x66, 0x32, 0x2e, 0x43, 0x47, 0x43, 0x54,
	0x6f, 0x47, 0x43, 0x4d, 0x73, 0x67, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x75, 0x70, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x2e, 0x47, 0x43, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x06, 0x67, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x48, 0x0a, 0x06, 0x47, 0x43,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x5f, 0x69, 0x6e, 0x64, 0x65,
	0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x64, 0x69, 0x72, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x22, 0x6b, 0x0a, 0x10, 0x43, 0x47, 0x43, 0x54, 0x6f, 0x47, 0x43, 0x4d,
	0x73, 0x67, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x73, 0x67, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x6d, 0x73, 0x67, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x06, 0x52, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x65, 0x74, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x6e, 0x65, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x22, 0x53, 0x0a, 0x15, 0x43, 0x47, 0x43, 0x54, 0x6f, 0x47, 0x43, 0x4d, 0x73, 0x67, 0x52,
	0x6f, 0x75, 0x74, 0x65, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x73,
	0x67, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x6d, 0x73,
	0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x65, 0x74, 0x5f, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x6e, 0x65, 0x74, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xb8, 0x01, 0x0a, 0x1c, 0x43, 0x4d, 0x73, 0x67, 0x47,
	0x43, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x47, 0x43, 0x53, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x46, 0x0a, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x74, 0x66, 0x32, 0x2e, 0x43,
	0x4d, 0x73, 0x67, 0x47, 0x43, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x47, 0x43,
	0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x43, 0x4d, 0x73, 0x67,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x1a,
	0x50, 0x0a, 0x0a, 0x43, 0x4d, 0x73, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x06, 0x52, 0x07,
	0x73, 0x74, 0x65, 0x61, 0x6d, 0x69, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x07, 0x52, 0x02, 0x69, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x72, 0x75, 0x73, 0x74,
	0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x74, 0x72, 0x75, 0x73, 0x74, 0x65,
	0x64, 0x22, 0x39, 0x0a, 0x1d, 0x43, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x53, 0x75, 0x62, 0x47, 0x43, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x06, 0x52, 0x07, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x69, 0x64, 0x22, 0x51, 0x0a, 0x25,
	0x43, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x75, 0x62,
	0x47, 0x43, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x07, 0x52, 0x02, 0x69, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x72, 0x75, 0x73, 0x74, 0x65, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x74, 0x72, 0x75, 0x73, 0x74, 0x65, 0x64, 0x22,
	0x3f, 0x0a, 0x23, 0x43, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x54, 0x6f, 0x47, 0x43, 0x49, 0x6e, 0x63,
	0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x63, 0x72, 0x75, 0x69, 0x74, 0x6d, 0x65, 0x6e,
	0x74, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x06, 0x52, 0x07, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x69, 0x64,
	0x22, 0x79, 0x0a, 0x16, 0x43, 0x4d, 0x73, 0x67, 0x53, 0x4f, 0x43, 0x61, 0x63, 0x68, 0x65, 0x48,
	0x61, 0x76, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x04, 0x73, 0x6f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x74, 0x66, 0x32, 0x2e, 0x43,
	0x4d, 0x73, 0x67, 0x53, 0x4f, 0x49, 0x44, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x52, 0x04, 0x73, 0x6f,
	0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x06, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x09, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x22, 0xca, 0x02, 0x0a, 0x14,
	0x43, 0x4d, 0x73, 0x67, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x50, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x74, 0x66, 0x32, 0x2e, 0x47, 0x43, 0x43, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x3a, 0x1f, 0x47,
	0x43, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x5f, 0x48, 0x41, 0x56, 0x45, 0x5f, 0x53, 0x45, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2e, 0x0a, 0x13, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x5f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x65, 0x65, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x11, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x4e, 0x65, 0x65, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x71, 0x75, 0x65, 0x75, 0x65, 0x5f,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d,
	0x71, 0x75, 0x65, 0x75, 0x65, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a,
	0x0a, 0x71, 0x75, 0x65, 0x75, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x71, 0x75, 0x65, 0x75, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x21, 0x0a, 0x0c,
	0x77, 0x61, 0x69, 0x74, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0b, 0x77, 0x61, 0x69, 0x74, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x12,
	0x47, 0x0a, 0x20, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x77, 0x61, 0x69,
	0x74, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x5f, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e,
	0x69, 0x6e, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x1d, 0x65, 0x73, 0x74, 0x69, 0x6d,
	0x61, 0x74, 0x65, 0x64, 0x57, 0x61, 0x69, 0x74, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x52,
	0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x22, 0xa6, 0x02, 0x0a, 0x1a, 0x43, 0x4d, 0x73,
	0x67, 0x47, 0x43, 0x54, 0x6f, 0x47, 0x43, 0x53, 0x4f, 0x43, 0x61, 0x63, 0x68, 0x65, 0x53, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x06, 0x52, 0x0a, 0x73, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x5f, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x06, 0x52, 0x0b, 0x73,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x54, 0x6f, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x79,
	0x6e, 0x63, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x06,
	0x52, 0x0b, 0x73, 0x79, 0x6e, 0x63, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x55, 0x0a,
	0x0d, 0x68, 0x61, 0x76, 0x65, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x74, 0x66, 0x32, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x47,
	0x43, 0x54, 0x6f, 0x47, 0x43, 0x53, 0x4f, 0x43, 0x61, 0x63, 0x68, 0x65, 0x53, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x48, 0x61, 0x76, 0x65, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0c, 0x68, 0x61, 0x76, 0x65, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x4b, 0x0a, 0x10, 0x43, 0x4d, 0x73, 0x67, 0x48, 0x61, 0x76, 0x65,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x22, 0x69, 0x0a, 0x1c, 0x43, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x54, 0x6f, 0x47, 0x43, 0x53,
	0x4f, 0x43, 0x61, 0x63, 0x68, 0x65, 0x55, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x06, 0x52, 0x0a, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x72, 0x12, 0x29, 0x0a, 0x10, 0x75, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x06, 0x52, 0x0f, 0x75, 0x6e, 0x73,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x22, 0x12, 0x0a, 0x10,
	0x43, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x50, 0x69, 0x6e, 0x67,
	0x2a, 0x54, 0x0a, 0x12, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x0c, 0x50, 0x41, 0x52, 0x54, 0x4e, 0x45,
	0x52, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x19, 0x0a, 0x15, 0x50, 0x41, 0x52, 0x54,
	0x4e, 0x45, 0x52, 0x5f, 0x50, 0x45, 0x52, 0x46, 0x45, 0x43, 0x54, 0x5f, 0x57, 0x4f, 0x52, 0x4c,
	0x44, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x50, 0x41, 0x52, 0x54, 0x4e, 0x45, 0x52, 0x5f, 0x4e,
	0x45, 0x58, 0x4f, 0x4e, 0x10, 0x02, 0x2a, 0xf7, 0x01, 0x0a, 0x12, 0x47, 0x43, 0x43, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x23, 0x0a,
	0x1f, 0x47, 0x43, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x5f, 0x48, 0x41, 0x56, 0x45, 0x5f, 0x53, 0x45, 0x53, 0x53, 0x49, 0x4f, 0x4e,
	0x10, 0x00, 0x12, 0x24, 0x0a, 0x20, 0x47, 0x43, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x47, 0x43, 0x5f, 0x47, 0x4f, 0x49, 0x4e,
	0x47, 0x5f, 0x44, 0x4f, 0x57, 0x4e, 0x10, 0x01, 0x12, 0x21, 0x0a, 0x1d, 0x47, 0x43, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x4e,
	0x4f, 0x5f, 0x53, 0x45, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x10, 0x02, 0x12, 0x30, 0x0a, 0x2c, 0x47,
	0x43, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x5f, 0x4e, 0x4f, 0x5f, 0x53, 0x45, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x49, 0x4e, 0x5f,
	0x4c, 0x4f, 0x47, 0x4f, 0x4e, 0x5f, 0x51, 0x55, 0x45, 0x55, 0x45, 0x10, 0x03, 0x12, 0x1f, 0x0a,
	0x1b, 0x47, 0x43, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x5f, 0x4e, 0x4f, 0x5f, 0x53, 0x54, 0x45, 0x41, 0x4d, 0x10, 0x04, 0x12, 0x20,
	0x0a, 0x1c, 0x47, 0x43, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x5f, 0x53, 0x55, 0x53, 0x50, 0x45, 0x4e, 0x44, 0x45, 0x44, 0x10, 0x05,
	0x42, 0x34, 0x48, 0x01, 0x5a, 0x2d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x31, 0x33, 0x6b, 0x2f, 0x67, 0x6f, 0x2d, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x2d, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x70, 0x62, 0x2f,
	0x74, 0x66, 0x32, 0x80, 0x01, 0x00,
}

var (
	file_tf2_gcsdk_gcmessages_proto_rawDescOnce sync.Once
	file_tf2_gcsdk_gcmessages_proto_rawDescData = file_tf2_gcsdk_gcmessages_proto_rawDesc
)

func file_tf2_gcsdk_gcmessages_proto_rawDescGZIP() []byte {
	file_tf2_gcsdk_gcmessages_proto_rawDescOnce.Do(func() {
		file_tf2_gcsdk_gcmessages_proto_rawDescData = protoimpl.X.CompressGZIP(file_tf2_gcsdk_gcmessages_proto_rawDescData)
	})
	return file_tf2_gcsdk_gcmessages_proto_rawDescData
}

var file_tf2_gcsdk_gcmessages_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_tf2_gcsdk_gcmessages_proto_msgTypes = make([]protoimpl.MessageInfo, 29)
var file_tf2_gcsdk_gcmessages_proto_goTypes = []interface{}{
	(PartnerAccountType)(0),                             // 0: tf2.PartnerAccountType
	(GCConnectionStatus)(0),                             // 1: tf2.GCConnectionStatus
	(*CMsgSOIDOwner)(nil),                               // 2: tf2.CMsgSOIDOwner
	(*CMsgSOSingleObject)(nil),                          // 3: tf2.CMsgSOSingleObject
	(*CMsgSOMultipleObjects)(nil),                       // 4: tf2.CMsgSOMultipleObjects
	(*CMsgSOCacheSubscribed)(nil),                       // 5: tf2.CMsgSOCacheSubscribed
	(*CMsgSOCacheSubscribedUpToDate)(nil),               // 6: tf2.CMsgSOCacheSubscribedUpToDate
	(*CMsgSOCacheUnsubscribed)(nil),                     // 7: tf2.CMsgSOCacheUnsubscribed
	(*CMsgSOCacheSubscriptionCheck)(nil),                // 8: tf2.CMsgSOCacheSubscriptionCheck
	(*CMsgSOCacheSubscriptionRefresh)(nil),              // 9: tf2.CMsgSOCacheSubscriptionRefresh
	(*CMsgSOCacheVersion)(nil),                          // 10: tf2.CMsgSOCacheVersion
	(*CMsgGCMultiplexMessage)(nil),                      // 11: tf2.CMsgGCMultiplexMessage
	(*CGCToGCMsgMasterAck)(nil),                         // 12: tf2.CGCToGCMsgMasterAck
	(*CGCToGCMsgMasterAck_Response)(nil),                // 13: tf2.CGCToGCMsgMasterAck_Response
	(*CGCToGCMsgMasterStartupComplete)(nil),             // 14: tf2.CGCToGCMsgMasterStartupComplete
	(*CGCToGCMsgRouted)(nil),                            // 15: tf2.CGCToGCMsgRouted
	(*CGCToGCMsgRoutedReply)(nil),                       // 16: tf2.CGCToGCMsgRoutedReply
	(*CMsgGCUpdateSubGCSessionInfo)(nil),                // 17: tf2.CMsgGCUpdateSubGCSessionInfo
	(*CMsgGCRequestSubGCSessionInfo)(nil),               // 18: tf2.CMsgGCRequestSubGCSessionInfo
	(*CMsgGCRequestSubGCSessionInfoResponse)(nil),       // 19: tf2.CMsgGCRequestSubGCSessionInfoResponse
	(*CMsgGCToGCIncrementRecruitmentLevel)(nil),         // 20: tf2.CMsgGCToGCIncrementRecruitmentLevel
	(*CMsgSOCacheHaveVersion)(nil),                      // 21: tf2.CMsgSOCacheHaveVersion
	(*CMsgConnectionStatus)(nil),                        // 22: tf2.CMsgConnectionStatus
	(*CMsgGCToGCSOCacheSubscribe)(nil),                  // 23: tf2.CMsgGCToGCSOCacheSubscribe
	(*CMsgGCToGCSOCacheUnsubscribe)(nil),                // 24: tf2.CMsgGCToGCSOCacheUnsubscribe
	(*CMsgGCClientPing)(nil),                            // 25: tf2.CMsgGCClientPing
	(*CMsgSOMultipleObjects_SingleObject)(nil),          // 26: tf2.CMsgSOMultipleObjects.SingleObject
	(*CMsgSOCacheSubscribed_SubscribedType)(nil),        // 27: tf2.CMsgSOCacheSubscribed.SubscribedType
	(*CGCToGCMsgMasterStartupComplete_GCInfo)(nil),      // 28: tf2.CGCToGCMsgMasterStartupComplete.GCInfo
	(*CMsgGCUpdateSubGCSessionInfo_CMsgUpdate)(nil),     // 29: tf2.CMsgGCUpdateSubGCSessionInfo.CMsgUpdate
	(*CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions)(nil), // 30: tf2.CMsgGCToGCSOCacheSubscribe.CMsgHaveVersions
}
var file_tf2_gcsdk_gcmessages_proto_depIdxs = []int32{
	2,  // 0: tf2.CMsgSOSingleObject.owner_soid:type_name -> tf2.CMsgSOIDOwner
	26, // 1: tf2.CMsgSOMultipleObjects.objects:type_name -> tf2.CMsgSOMultipleObjects.SingleObject
	2,  // 2: tf2.CMsgSOMultipleObjects.owner_soid:type_name -> tf2.CMsgSOIDOwner
	27, // 3: tf2.CMsgSOCacheSubscribed.objects:type_name -> tf2.CMsgSOCacheSubscribed.SubscribedType
	2,  // 4: tf2.CMsgSOCacheSubscribed.owner_soid:type_name -> tf2.CMsgSOIDOwner
	2,  // 5: tf2.CMsgSOCacheSubscribedUpToDate.owner_soid:type_name -> tf2.CMsgSOIDOwner
	2,  // 6: tf2.CMsgSOCacheSubscriptionCheck.owner_soid:type_name -> tf2.CMsgSOIDOwner
	2,  // 7: tf2.CMsgSOCacheSubscriptionRefresh.owner_soid:type_name -> tf2.CMsgSOIDOwner
	28, // 8: tf2.CGCToGCMsgMasterStartupComplete.gc_info:type_name -> tf2.CGCToGCMsgMasterStartupComplete.GCInfo
	29, // 9: tf2.CMsgGCUpdateSubGCSessionInfo.updates:type_name -> tf2.CMsgGCUpdateSubGCSessionInfo.CMsgUpdate
	2,  // 10: tf2.CMsgSOCacheHaveVersion.soid:type_name -> tf2.CMsgSOIDOwner
	1,  // 11: tf2.CMsgConnectionStatus.status:type_name -> tf2.GCConnectionStatus
	30, // 12: tf2.CMsgGCToGCSOCacheSubscribe.have_versions:type_name -> tf2.CMsgGCToGCSOCacheSubscribe.CMsgHaveVersions
	13, // [13:13] is the sub-list for method output_type
	13, // [13:13] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_tf2_gcsdk_gcmessages_proto_init() }
func file_tf2_gcsdk_gcmessages_proto_init() {
	if File_tf2_gcsdk_gcmessages_proto != nil {
		return
	}
	file_tf2_steammessages_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_tf2_gcsdk_gcmessages_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgSOIDOwner); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tf2_gcsdk_gcmessages_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgSOSingleObject); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tf2_gcsdk_gcmessages_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgSOMultipleObjects); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tf2_gcsdk_gcmessages_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgSOCacheSubscribed); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tf2_gcsdk_gcmessages_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgSOCacheSubscribedUpToDate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tf2_gcsdk_gcmessages_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgSOCacheUnsubscribed); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tf2_gcsdk_gcmessages_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgSOCacheSubscriptionCheck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tf2_gcsdk_gcmessages_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgSOCacheSubscriptionRefresh); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tf2_gcsdk_gcmessages_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgSOCacheVersion); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tf2_gcsdk_gcmessages_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgGCMultiplexMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tf2_gcsdk_gcmessages_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CGCToGCMsgMasterAck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tf2_gcsdk_gcmessages_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CGCToGCMsgMasterAck_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tf2_gcsdk_gcmessages_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CGCToGCMsgMasterStartupComplete); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tf2_gcsdk_gcmessages_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CGCToGCMsgRouted); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tf2_gcsdk_gcmessages_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CGCToGCMsgRoutedReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tf2_gcsdk_gcmessages_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgGCUpdateSubGCSessionInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tf2_gcsdk_gcmessages_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgGCRequestSubGCSessionInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tf2_gcsdk_gcmessages_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgGCRequestSubGCSessionInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tf2_gcsdk_gcmessages_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgGCToGCIncrementRecruitmentLevel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tf2_gcsdk_gcmessages_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgSOCacheHaveVersion); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tf2_gcsdk_gcmessages_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgConnectionStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tf2_gcsdk_gcmessages_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgGCToGCSOCacheSubscribe); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tf2_gcsdk_gcmessages_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgGCToGCSOCacheUnsubscribe); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tf2_gcsdk_gcmessages_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgGCClientPing); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tf2_gcsdk_gcmessages_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgSOMultipleObjects_SingleObject); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tf2_gcsdk_gcmessages_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgSOCacheSubscribed_SubscribedType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tf2_gcsdk_gcmessages_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CGCToGCMsgMasterStartupComplete_GCInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tf2_gcsdk_gcmessages_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgGCUpdateSubGCSessionInfo_CMsgUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tf2_gcsdk_gcmessages_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_tf2_gcsdk_gcmessages_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   29,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_tf2_gcsdk_gcmessages_proto_goTypes,
		DependencyIndexes: file_tf2_gcsdk_gcmessages_proto_depIdxs,
		EnumInfos:         file_tf2_gcsdk_gcmessages_proto_enumTypes,
		MessageInfos:      file_tf2_gcsdk_gcmessages_proto_msgTypes,
	}.Build()
	File_tf2_gcsdk_gcmessages_proto = out.File
	file_tf2_gcsdk_gcmessages_proto_rawDesc = nil
	file_tf2_gcsdk_gcmessages_proto_goTypes = nil
	file_tf2_gcsdk_gcmessages_proto_depIdxs = nil
}
