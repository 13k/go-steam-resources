diff --git tf2/tf_proto_def_messages.proto tf2/tf_proto_def_messages.proto
index 9e28341..b0a381e 100644
--- tf2/tf_proto_def_messages.proto
+++ tf2/tf_proto_def_messages.proto
@@ -573,20 +573,20 @@ message CMsgQuestTheme {
 	optional string reveal_sound = 10;
 }
 
-message CMsgQuestMapNodeCondition_NodeState {
-	optional uint32 bonus_objectives_required = 1 [default = 0, (editable) = false, (display_name) = "Bonus Required", (comment) = "Number of bonus objectives required, on top of the primary objective", (allow_add) = false, (allow_delete) = false];
-	required .CMsgProtoDefID target_node_defid = 2 [(editable) = false, (display_name) = "Target Node", (comment) = "Which node is required to have the above number of medals", (allow_add) = false, (allow_delete) = false];
-}
+message CMsgQuestMapNodeCondition {
+  message NodeState {
+    optional uint32 bonus_objectives_required = 1 [default = 0, (editable) = false, (display_name) = "Bonus Required", (comment) = "Number of bonus objectives required, on top of the primary objective", (allow_add) = false, (allow_delete) = false];
+    required .CMsgProtoDefID target_node_defid = 2 [(editable) = false, (display_name) = "Target Node", (comment) = "Which node is required to have the above number of medals", (allow_add) = false, (allow_delete) = false];
+  }
 
-message CMsgQuestMapNodeCondition_Logic {
-	required .LogicalOperation operation = 1 [default = AND, (editable) = false, (display_name) = "Logic", (comment) = "Logical operation", (allow_add) = false, (allow_delete) = false];
-	repeated .CMsgQuestMapNodeCondition sub_conditions = 2 [(editable) = false, (display_name) = "Operands", (comment) = "Definitions to use in the logical operation", (allow_add) = false, (allow_delete) = false];
-}
+  message Logic {
+    required .LogicalOperation operation = 1 [default = AND, (editable) = false, (display_name) = "Logic", (comment) = "Logical operation", (allow_add) = false, (allow_delete) = false];
+    repeated .CMsgQuestMapNodeCondition sub_conditions = 2 [(editable) = false, (display_name) = "Operands", (comment) = "Definitions to use in the logical operation", (allow_add) = false, (allow_delete) = false];
+  }
 
-message CMsgQuestMapNodeCondition {
 	oneof operation {
-		.CMsgQuestMapNodeCondition_NodeState node_state = 1 [(editable) = false, (display_name) = "Node State Condition", (comment) = "Returns true if a specific node has a required number of medals", (allow_add) = false, (allow_delete) = false];
-		.CMsgQuestMapNodeCondition_Logic logical = 2 [(editable) = false, (display_name) = "Logical Condition", (comment) = "Performs a specified logical operation to all sub conditions", (allow_add) = false, (allow_delete) = false];
+		NodeState state = 1 [(editable) = false, (display_name) = "Node State Condition", (comment) = "Returns true if a specific node has a required number of medals", (allow_add) = false, (allow_delete) = false];
+		Logic logical = 2 [(editable) = false, (display_name) = "Logical Condition", (comment) = "Performs a specified logical operation to all sub conditions", (allow_add) = false, (allow_delete) = false];
 	}
 }
 
